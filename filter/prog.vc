// Virtual circuit produced from Aa description by Aa2VC 
// $pipe  DERIVout_pipe : $uint<32>  $depth 1 
// can point into 
// in scope  top-level
$pipe [DERIVout_pipe] 32 $depth 1 
// $pipe  HPout_pipe : $uint<32>  $depth 1 
// can point into 
// in scope  top-level
$pipe [HPout_pipe] 32 $depth 1 
// $pipe  LPout_pipe : $uint<32>  $depth 1 
// can point into 
// in scope  top-level
$pipe [LPout_pipe] 32 $depth 1 
// $pipe  det_input_pipe : $uint<32>  $depth 1 
// can point into 
// in scope  top-level
$pipe [det_input_pipe] 32 $depth 1 
// $pipe  det_output_pipe : $uint<32>  $depth 1 
// can point into 
// in scope  top-level
$pipe [det_output_pipe] 32 $depth 1 
// $pipe  filt_input_pipe : $uint<32>  $depth 1 
// can point into 
// in scope  top-level
$pipe [filt_input_pipe] 32 $depth 1 
// $pipe  filt_output_pipe : $uint<32>  $depth 1 
// can point into 
// in scope  top-level
$pipe [filt_output_pipe] 32 $depth 1 
// load store constants for object DDCALCbuff
$constant $W[DDCALCbuff_base_address] : $int<2> := _b00
// load store constants for object DDCALCbuff_ptr
$constant $W[DDCALCbuff_ptr_base_address] : $int<1> := _b0
// load store constants for object DDbuff
$constant $W[DDbuff_base_address] : $int<7> := _b0000000
// load store constants for object DDbuff_ptr
$constant $W[DDbuff_ptr_base_address] : $int<1> := _b0
// load store constants for object DERIVbuff
$constant $W[DERIVbuff_base_address] : $int<2> := _b00
// load store constants for object DERIVbuff_ptr
$constant $W[DERIVbuff_ptr_base_address] : $int<1> := _b0
// load store constants for object HPbuff
$constant $W[HPbuff_base_address] : $int<5> := _b00000
// load store constants for object HPbuff_ptr
$constant $W[HPbuff_ptr_base_address] : $int<1> := _b0
// load store constants for object HPy1
$constant $W[HPy1_base_address] : $int<1> := _b0
// load store constants for object LPbuff
$constant $W[LPbuff_base_address] : $int<4> := _b0000
// load store constants for object LPbuff_ptr
$constant $W[LPbuff_ptr_base_address] : $int<1> := _b0
// load store constants for object LPy1
$constant $W[LPy1_base_address] : $int<1> := _b0
// load store constants for object LPy2
$constant $W[LPy2_base_address] : $int<1> := _b0
// load store constants for object NOISEbuff
$constant $W[NOISEbuff_base_address] : $int<5> := _b00000
// load store constants for object NOISEbuff_ptr
$constant $W[NOISEbuff_ptr_base_address] : $int<1> := _b0
// load store constants for object QRSbuff
$constant $W[QRSbuff_base_address] : $int<5> := _b01000
// load store constants for object QRSbuff_ptr
$constant $W[QRSbuff_ptr_base_address] : $int<1> := _b0
// load store constants for object RRbuff
$constant $W[RRbuff_base_address] : $int<5> := _b10000
// load store constants for object RRbuff_ptr
$constant $W[RRbuff_ptr_base_address] : $int<1> := _b0
// load store constants for object WINbuff
$constant $W[WINbuff_base_address] : $int<5> := _b00000
// load store constants for object WINbuff_ptr
$constant $W[WINbuff_ptr_base_address] : $int<1> := _b0
// load store constants for object WINsum
$constant $W[WINsum_base_address] : $int<1> := _b0
// load store constants for object lastDatum
$constant $W[lastDatum_base_address] : $int<1> := _b0
// load store constants for object maxDer
$constant $W[maxDer_base_address] : $int<1> := _b0
// load store constants for object maxPeak
$constant $W[maxPeak_base_address] : $int<1> := _b0
// load store constants for object mempool
$constant $W[mempool_base_address] : $int<1> := _b0
// load store constants for object threshold
$constant $W[threshold_base_address] : $int<1> := _b0
// load store constants for object timeSinceMaxPeak
$constant $W[timeSinceMaxPeak_base_address] : $int<1> := _b0
$memoryspace [memory_space_0] 
{
  $capacity 2
  $datawidth 32
  $addrwidth 2
  $maxaccesswidth 32
  // $storage  DDCALCbuff : $array[2] $of $uint<32> // memory space index = 0  base address = 0  word size = 32
  // can point into  mempool
  // in scope  top-level
  $object [DDCALCbuff] : $array[2] $of $int<32>
}
$memoryspace [memory_space_1] 
{
  $capacity 1
  $datawidth 32
  $addrwidth 1
  $maxaccesswidth 32
  // $storage  DDCALCbuff_ptr : $uint<32> // memory space index = 1  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [DDCALCbuff_ptr] : $int<32>
}
$memoryspace [memory_space_2] 
{
  $capacity 92
  $datawidth 32
  $addrwidth 7
  $maxaccesswidth 32
  // $storage  DDbuff : $array[92] $of $uint<32> // memory space index = 2  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [DDbuff] : $array[92] $of $int<32>
}
$memoryspace [memory_space_3] 
{
  $capacity 1
  $datawidth 32
  $addrwidth 1
  $maxaccesswidth 32
  // $storage  DDbuff_ptr : $uint<32> // memory space index = 3  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [DDbuff_ptr] : $int<32>
}
$memoryspace [memory_space_4] 
{
  $capacity 2
  $datawidth 32
  $addrwidth 2
  $maxaccesswidth 32
  // $storage  DERIVbuff : $array[2] $of $uint<32> // memory space index = 4  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [DERIVbuff] : $array[2] $of $int<32>
}
$memoryspace [memory_space_5] 
{
  $capacity 1
  $datawidth 32
  $addrwidth 1
  $maxaccesswidth 32
  // $storage  DERIVbuff_ptr : $uint<32> // memory space index = 5  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [DERIVbuff_ptr] : $int<32>
}
$memoryspace [memory_space_6] 
{
  $capacity 25
  $datawidth 32
  $addrwidth 5
  $maxaccesswidth 32
  // $storage  HPbuff : $array[25] $of $uint<32> // memory space index = 6  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [HPbuff] : $array[25] $of $int<32>
}
$memoryspace [memory_space_7] 
{
  $capacity 1
  $datawidth 32
  $addrwidth 1
  $maxaccesswidth 32
  // $storage  HPbuff_ptr : $uint<32> // memory space index = 7  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [HPbuff_ptr] : $int<32>
}
$memoryspace [memory_space_8] 
{
  $capacity 1
  $datawidth 32
  $addrwidth 1
  $maxaccesswidth 32
  // $storage  HPy1 : $uint<32> // memory space index = 8  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [HPy1] : $int<32>
}
$memoryspace [memory_space_9] 
{
  $capacity 10
  $datawidth 32
  $addrwidth 4
  $maxaccesswidth 32
  // $storage  LPbuff : $array[10] $of $uint<32> // memory space index = 9  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [LPbuff] : $array[10] $of $int<32>
}
$memoryspace [memory_space_10] 
{
  $capacity 1
  $datawidth 32
  $addrwidth 1
  $maxaccesswidth 32
  // $storage  LPbuff_ptr : $uint<32> // memory space index = 10  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [LPbuff_ptr] : $int<32>
}
$memoryspace [memory_space_11] 
{
  $capacity 1
  $datawidth 32
  $addrwidth 1
  $maxaccesswidth 32
  // $storage  LPy1 : $uint<32> // memory space index = 11  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [LPy1] : $int<32>
}
$memoryspace [memory_space_12] 
{
  $capacity 1
  $datawidth 32
  $addrwidth 1
  $maxaccesswidth 32
  // $storage  LPy2 : $uint<32> // memory space index = 12  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [LPy2] : $int<32>
}
$memoryspace [memory_space_13] 
{
  $capacity 24
  $datawidth 32
  $addrwidth 5
  $maxaccesswidth 32
  // $storage  NOISEbuff : $array[8] $of $uint<32> // memory space index = 13  base address = 0  word size = 32
  // can point into  mempool
  // in scope  top-level
  $object [NOISEbuff] : $array[8] $of $int<32>
  // $storage  QRSbuff : $array[8] $of $uint<32> // memory space index = 13  base address = 8  word size = 32
  // can point into  mempool
  // in scope  top-level
  $object [QRSbuff] : $array[8] $of $int<32>
  // $storage  RRbuff : $array[8] $of $uint<32> // memory space index = 13  base address = 16  word size = 32
  // can point into  mempool
  // in scope  top-level
  $object [RRbuff] : $array[8] $of $int<32>
}
$memoryspace [memory_space_14] 
{
  $capacity 1
  $datawidth 32
  $addrwidth 1
  $maxaccesswidth 32
  // $storage  NOISEbuff_ptr : $uint<32> // memory space index = 14  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [NOISEbuff_ptr] : $int<32>
}
$memoryspace [memory_space_15] 
{
  $capacity 1
  $datawidth 32
  $addrwidth 1
  $maxaccesswidth 32
  // $storage  QRSbuff_ptr : $uint<32> // memory space index = 15  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [QRSbuff_ptr] : $int<32>
}
$memoryspace [memory_space_16] 
{
  $capacity 1
  $datawidth 32
  $addrwidth 1
  $maxaccesswidth 32
  // $storage  RRbuff_ptr : $uint<32> // memory space index = 16  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [RRbuff_ptr] : $int<32>
}
$memoryspace [memory_space_17] 
{
  $capacity 16
  $datawidth 32
  $addrwidth 5
  $maxaccesswidth 32
  // $storage  WINbuff : $array[16] $of $uint<32> // memory space index = 17  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [WINbuff] : $array[16] $of $int<32>
}
$memoryspace [memory_space_18] 
{
  $capacity 1
  $datawidth 32
  $addrwidth 1
  $maxaccesswidth 32
  // $storage  WINbuff_ptr : $uint<32> // memory space index = 18  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [WINbuff_ptr] : $int<32>
}
$memoryspace [memory_space_19] 
{
  $capacity 1
  $datawidth 32
  $addrwidth 1
  $maxaccesswidth 32
  // $storage  WINsum : $uint<32> // memory space index = 19  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [WINsum] : $int<32>
}
$memoryspace [memory_space_20] 
{
  $capacity 1
  $datawidth 32
  $addrwidth 1
  $maxaccesswidth 32
  // $storage  lastDatum : $uint<32> // memory space index = 20  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [lastDatum] : $int<32>
}
$memoryspace [memory_space_21] 
{
  $capacity 1
  $datawidth 32
  $addrwidth 1
  $maxaccesswidth 32
  // $storage  maxDer : $uint<32> // memory space index = 21  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [maxDer] : $int<32>
}
$memoryspace [memory_space_22] 
{
  $capacity 1
  $datawidth 32
  $addrwidth 1
  $maxaccesswidth 32
  // $storage  maxPeak : $uint<32> // memory space index = 22  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [maxPeak] : $int<32>
}
$memoryspace [memory_space_23] 
{
  $capacity 1
  $datawidth 8
  $addrwidth 1
  $maxaccesswidth 8
  // $storage  mempool : $array[1] $of $uint<8> // memory space index = 23  base address = 0  word size = 8
  // can point into  mempool
  // in scope  top-level
  $object [mempool] : $array[1] $of $int<8>
}
$memoryspace [memory_space_24] 
{
  $capacity 1
  $datawidth 64
  $addrwidth 1
  $maxaccesswidth 64
  // $storage  threshold : $float<11,52> // memory space index = 24  base address = 0  word size = 64
  // can point into 
  // in scope  top-level
  $object [threshold] : $float<11,52>
}
$memoryspace [memory_space_25] 
{
  $capacity 1
  $datawidth 32
  $addrwidth 1
  $maxaccesswidth 32
  // $storage  timeSinceMaxPeak : $uint<32> // memory space index = 25  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [timeSinceMaxPeak] : $int<32>
}
$module [lpFilt] 
{
  // pipe-declarations for block %lpFilt
  //  file prog.linked.opt.aa, line 71
  // pipe-declarations for block %lpFilt%body
  //  file prog.linked.opt.aa, line 76
  // pipe-declarations for block %lpFilt%body%
  //  file prog.linked.opt.aa, line 109
  // pipe-declarations for block %lpFilt%body%
  //  file prog.linked.opt.aa, line 112
  // pipe-declarations for block %lpFilt%body%
  //  file prog.linked.opt.aa, line 123
  // pipe-declarations for block %lpFilt%body%
  //  file prog.linked.opt.aa, line 126
  // pipe-declarations for block %lpFilt%body%
  //  file prog.linked.opt.aa, line 138
  // pipe-declarations for block %lpFilt%body%
  //  file prog.linked.opt.aa, line 143
  // pipe-declarations for block %lpFilt%body%
  //  file prog.linked.opt.aa, line 155
  // pipe-declarations for block %lpFilt%body%
  //  file prog.linked.opt.aa, line 159
  // pipe-declarations for block %lpFilt%body%
  //  file prog.linked.opt.aa, line 172
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_46] // Branch Block  file prog.linked.opt.aa, line 76
    {
      $P [branch_block_stmt_46__entry__]
      branch_block_stmt_46__entry__ <-| ($entry)
      $P [branch_block_stmt_46__exit__]
      branch_block_stmt_46__exit__ |-> ($exit)
      $P [assign_stmt_49__entry__] 
      $P [assign_stmt_49__exit__] 
      $P [assign_stmt_52_to_assign_stmt_183__entry__] 
      $P [assign_stmt_52_to_assign_stmt_183__exit__] 
      $P [if_stmt_184__entry__] 
      $P [if_stmt_184__exit__] 
      $P [merge_stmt_190__entry__] 
      $P [merge_stmt_190__exit__] 
      $P [bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi]
      $P [merge_stmt_192__exit__] 
      $P [assign_stmt_212_to_assign_stmt_218__entry__] 
      $P [assign_stmt_212_to_assign_stmt_218__exit__] 
      $P [if_stmt_219__entry__] 
      $P [if_stmt_219__exit__] 
      $P [merge_stmt_225__entry__] 
      $P [merge_stmt_225__exit__] 
      $P [bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi]
      $P [merge_stmt_227__exit__] 
      $P [assign_stmt_248_to_assign_stmt_259__entry__] 
      $P [assign_stmt_248_to_assign_stmt_259__exit__] 
      $P [if_stmt_260__entry__] 
      $P [if_stmt_260__exit__] 
      $P [merge_stmt_266__entry__] 
      $P [merge_stmt_266__exit__] 
      $P [xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi]
      $P [merge_stmt_277__exit__] 
      $P [assign_stmt_297_to_assign_stmt_308__entry__] 
      $P [assign_stmt_297_to_assign_stmt_308__exit__] 
      $P [if_stmt_309__entry__] 
      $P [if_stmt_309__exit__] 
      $P [merge_stmt_315__entry__] 
      $P [merge_stmt_315__exit__] 
      $P [divideSignedx_xexitx_xloopexit_divideSignedx_xexit]
      $P [merge_stmt_322__exit__] 
      $P [assign_stmt_336_to_assign_stmt_372__entry__] 
      $P [assign_stmt_336_to_assign_stmt_372__exit__] 
      $P [assign_stmt_375__entry__] 
      $P [assign_stmt_375__exit__] 
      $P [return__]
      $P [merge_stmt_377__exit__] 
      ::[assign_stmt_49] 
      {
        // 		iNsTr_1 := filt_input_pipe
        //  file prog.linked.opt.aa, line 78
        // Source expression
        // filt_input_pipe
        $T[RPIPE_filt_input_pipe_48_sample_start_] 
        $T[RPIPE_filt_input_pipe_48_sample_completed_] 
        $T[RPIPE_filt_input_pipe_48_update_start_] 
        $T[RPIPE_filt_input_pipe_48_update_completed_] 
        ;;[RPIPE_filt_input_pipe_48_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_filt_input_pipe_48_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_filt_input_pipe_48_sample_start_ &-> (RPIPE_filt_input_pipe_48_Sample)
        RPIPE_filt_input_pipe_48_sample_completed_ <-& (RPIPE_filt_input_pipe_48_Sample)
        RPIPE_filt_input_pipe_48_sample_completed_ &-> ($null)
        RPIPE_filt_input_pipe_48_update_start_ &-> (RPIPE_filt_input_pipe_48_Update)
        RPIPE_filt_input_pipe_48_update_completed_ <-& (RPIPE_filt_input_pipe_48_Update)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // barrier: 		iNsTr_1 := filt_input_pipe
        // load-store dependencies..
        // pipe read/write dependencies for pipe filt_input_pipe
      }
      assign_stmt_49__entry__ |-> (assign_stmt_49)
      assign_stmt_49__exit__ <-| (assign_stmt_49)
      ::[assign_stmt_52_to_assign_stmt_183] 
      {
        // 		iNsTr_2 := LPbuff_ptr
        //  file prog.linked.opt.aa, line 79
        // Source expression
        // LPbuff_ptr
        $T[LOAD_LPbuff_ptr_51_sample_start_] 
        $T[LOAD_LPbuff_ptr_51_sample_completed_] 
        $T[LOAD_LPbuff_ptr_51_update_start_] 
        $T[LOAD_LPbuff_ptr_51_update_completed_] 
        $T[LOAD_LPbuff_ptr_51_sample_start_] 
        $T[LOAD_LPbuff_ptr_51_sample_completed_] 
        $T[LOAD_LPbuff_ptr_51_update_start_] 
        $T[LOAD_LPbuff_ptr_51_update_completed_] 
        $T[LOAD_LPbuff_ptr_51_word_address_calculated] 
        $T[LOAD_LPbuff_ptr_51_root_address_calculated] 
        LOAD_LPbuff_ptr_51_word_address_calculated <-& (LOAD_LPbuff_ptr_51_root_address_calculated)
        ;;[LOAD_LPbuff_ptr_51_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_LPbuff_ptr_51_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_LPbuff_ptr_51_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_LPbuff_ptr_51_sample_start_ <-& (LOAD_LPbuff_ptr_51_word_address_calculated)
        LOAD_LPbuff_ptr_51_sample_start_ &-> (LOAD_LPbuff_ptr_51_Sample)
        LOAD_LPbuff_ptr_51_sample_completed_ <-& (LOAD_LPbuff_ptr_51_Sample)
        LOAD_LPbuff_ptr_51_sample_completed_ &-> ($null)
        LOAD_LPbuff_ptr_51_update_start_ &-> (LOAD_LPbuff_ptr_51_Update)
        LOAD_LPbuff_ptr_51_update_completed_ <-& (LOAD_LPbuff_ptr_51_Update)
        // Target expression
        // (as target) iNsTr_2
        // iNsTr_2
        // implicit reference
        // 		iNsTr_3 := (iNsTr_2 + ($bitcast ($uint<32>) _b11111111111111111111111111111011  ))
        //  file prog.linked.opt.aa, line 80
        // Source expression
        // (iNsTr_2 + ($bitcast ($uint<32>) _b11111111111111111111111111111011  ))
        $T[ADD_u32_u32_57_sample_start_] 
        $T[ADD_u32_u32_57_sample_completed_] 
        $T[ADD_u32_u32_57_update_start_] 
        $T[ADD_u32_u32_57_update_completed_] 
        // iNsTr_2
        $T[R_iNsTr_2_54_sample_start_] 
        $T[R_iNsTr_2_54_sample_completed_] 
        $T[R_iNsTr_2_54_update_start_] 
        $T[R_iNsTr_2_54_update_completed_] 
        // implicit reference
        R_iNsTr_2_54_sample_start_ <-& (LOAD_LPbuff_ptr_51_update_completed_)
        R_iNsTr_2_54_sample_completed_ <-& (R_iNsTr_2_54_sample_start_)
        R_iNsTr_2_54_update_start_ <-& (R_iNsTr_2_54_sample_completed_)
        R_iNsTr_2_54_update_completed_ <-& (R_iNsTr_2_54_update_start_)
        ADD_u32_u32_57_sample_start_ <-& (R_iNsTr_2_54_update_completed_)
        ;;[ADD_u32_u32_57_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_57_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_57_sample_start_ &-> (ADD_u32_u32_57_Sample)
        ADD_u32_u32_57_sample_completed_ <-& (ADD_u32_u32_57_Sample)
        ADD_u32_u32_57_sample_completed_ &-> ($null)
        ADD_u32_u32_57_update_start_ &-> (ADD_u32_u32_57_Update)
        ADD_u32_u32_57_update_completed_ <-& (ADD_u32_u32_57_Update)
        // Target expression
        // (as target) iNsTr_3
        // iNsTr_3
        // implicit reference
        // 		iNsTr_4 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.linked.opt.aa, line 81
        // Source expression
        // (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[SLT_i32_u1_66_sample_start_] 
        $T[SLT_i32_u1_66_sample_completed_] 
        $T[SLT_i32_u1_66_update_start_] 
        $T[SLT_i32_u1_66_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_3 )
        $T[type_cast_62_sample_start_] 
        $T[type_cast_62_sample_completed_] 
        $T[type_cast_62_update_start_] 
        $T[type_cast_62_update_completed_] 
        // iNsTr_3
        $T[R_iNsTr_3_61_sample_start_] 
        $T[R_iNsTr_3_61_sample_completed_] 
        $T[R_iNsTr_3_61_update_start_] 
        $T[R_iNsTr_3_61_update_completed_] 
        // implicit reference
        R_iNsTr_3_61_sample_start_ <-& (ADD_u32_u32_57_update_completed_)
        R_iNsTr_3_61_sample_completed_ <-& (R_iNsTr_3_61_sample_start_)
        R_iNsTr_3_61_update_start_ <-& (R_iNsTr_3_61_sample_completed_)
        R_iNsTr_3_61_update_completed_ <-& (R_iNsTr_3_61_update_start_)
        type_cast_62_sample_start_ <-& (R_iNsTr_3_61_update_completed_)
        ;;[type_cast_62_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_62_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_62_sample_start_ &-> (type_cast_62_Sample)
        type_cast_62_sample_completed_ <-& (type_cast_62_Sample)
        type_cast_62_sample_completed_ &-> ($null)
        type_cast_62_update_start_ &-> (type_cast_62_Update)
        type_cast_62_update_completed_ <-& (type_cast_62_Update)
        // flow-through
        type_cast_62_update_start_ <-& (type_cast_62_sample_completed_)
        SLT_i32_u1_66_sample_start_ <-& (type_cast_62_update_completed_)
        ;;[SLT_i32_u1_66_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_i32_u1_66_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_i32_u1_66_sample_start_ &-> (SLT_i32_u1_66_Sample)
        SLT_i32_u1_66_sample_completed_ <-& (SLT_i32_u1_66_Sample)
        SLT_i32_u1_66_sample_completed_ &-> ($null)
        SLT_i32_u1_66_update_start_ &-> (SLT_i32_u1_66_Update)
        SLT_i32_u1_66_update_completed_ <-& (SLT_i32_u1_66_Update)
        // Target expression
        // (as target) iNsTr_4
        // iNsTr_4
        // implicit reference
        // 		iNsTr_5 := (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000101  ))
        //  file prog.linked.opt.aa, line 82
        // Source expression
        // (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000101  ))
        $T[ADD_u32_u32_73_sample_start_] 
        $T[ADD_u32_u32_73_sample_completed_] 
        $T[ADD_u32_u32_73_update_start_] 
        $T[ADD_u32_u32_73_update_completed_] 
        // iNsTr_2
        $T[R_iNsTr_2_70_sample_start_] 
        $T[R_iNsTr_2_70_sample_completed_] 
        $T[R_iNsTr_2_70_update_start_] 
        $T[R_iNsTr_2_70_update_completed_] 
        // implicit reference
        R_iNsTr_2_70_sample_start_ <-& (LOAD_LPbuff_ptr_51_update_completed_)
        R_iNsTr_2_70_sample_completed_ <-& (R_iNsTr_2_70_sample_start_)
        R_iNsTr_2_70_update_start_ <-& (R_iNsTr_2_70_sample_completed_)
        R_iNsTr_2_70_update_completed_ <-& (R_iNsTr_2_70_update_start_)
        ADD_u32_u32_73_sample_start_ <-& (R_iNsTr_2_70_update_completed_)
        ;;[ADD_u32_u32_73_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_73_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_73_sample_start_ &-> (ADD_u32_u32_73_Sample)
        ADD_u32_u32_73_sample_completed_ <-& (ADD_u32_u32_73_Sample)
        ADD_u32_u32_73_sample_completed_ &-> ($null)
        ADD_u32_u32_73_update_start_ &-> (ADD_u32_u32_73_Update)
        ADD_u32_u32_73_update_completed_ <-& (ADD_u32_u32_73_Update)
        // Target expression
        // (as target) iNsTr_5
        // iNsTr_5
        // implicit reference
        // 		iNsTr_6 := ( $mux iNsTr_4 iNsTr_5  iNsTr_3 ) 
        //  file prog.linked.opt.aa, line 83
        // Source expression
        // ( $mux iNsTr_4 iNsTr_5  iNsTr_3 ) 
        $T[MUX_79_sample_start_] 
        $T[MUX_79_sample_completed_] 
        $T[MUX_79_update_start_] 
        $T[MUX_79_update_completed_] 
        // iNsTr_4
        $T[R_iNsTr_4_76_sample_start_] 
        $T[R_iNsTr_4_76_sample_completed_] 
        $T[R_iNsTr_4_76_update_start_] 
        $T[R_iNsTr_4_76_update_completed_] 
        // implicit reference
        R_iNsTr_4_76_sample_start_ <-& (SLT_i32_u1_66_update_completed_)
        R_iNsTr_4_76_sample_completed_ <-& (R_iNsTr_4_76_sample_start_)
        R_iNsTr_4_76_update_start_ <-& (R_iNsTr_4_76_sample_completed_)
        R_iNsTr_4_76_update_completed_ <-& (R_iNsTr_4_76_update_start_)
        // iNsTr_5
        $T[R_iNsTr_5_77_sample_start_] 
        $T[R_iNsTr_5_77_sample_completed_] 
        $T[R_iNsTr_5_77_update_start_] 
        $T[R_iNsTr_5_77_update_completed_] 
        // implicit reference
        R_iNsTr_5_77_sample_start_ <-& (ADD_u32_u32_73_update_completed_)
        R_iNsTr_5_77_sample_completed_ <-& (R_iNsTr_5_77_sample_start_)
        R_iNsTr_5_77_update_start_ <-& (R_iNsTr_5_77_sample_completed_)
        R_iNsTr_5_77_update_completed_ <-& (R_iNsTr_5_77_update_start_)
        // iNsTr_3
        $T[R_iNsTr_3_78_sample_start_] 
        $T[R_iNsTr_3_78_sample_completed_] 
        $T[R_iNsTr_3_78_update_start_] 
        $T[R_iNsTr_3_78_update_completed_] 
        // implicit reference
        R_iNsTr_3_78_sample_start_ <-& (ADD_u32_u32_57_update_completed_)
        R_iNsTr_3_78_sample_completed_ <-& (R_iNsTr_3_78_sample_start_)
        R_iNsTr_3_78_update_start_ <-& (R_iNsTr_3_78_sample_completed_)
        R_iNsTr_3_78_update_completed_ <-& (R_iNsTr_3_78_update_start_)
        MUX_79_sample_start_ <-& (R_iNsTr_4_76_update_completed_)
        MUX_79_sample_start_ <-& (R_iNsTr_5_77_update_completed_)
        MUX_79_sample_start_ <-& (R_iNsTr_3_78_update_completed_)
        ;;[MUX_79_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_79_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_79_sample_start_ &-> (MUX_79_start)
        MUX_79_sample_completed_ <-& (MUX_79_start)
        MUX_79_update_start_ &-> (MUX_79_complete)
        MUX_79_update_completed_ <-& (MUX_79_complete)
        MUX_79_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_6
        // iNsTr_6
        // implicit reference
        // 		iNsTr_7 := LPy1
        //  file prog.linked.opt.aa, line 84
        // Source expression
        // LPy1
        $T[LOAD_LPy1_82_sample_start_] 
        $T[LOAD_LPy1_82_sample_completed_] 
        $T[LOAD_LPy1_82_update_start_] 
        $T[LOAD_LPy1_82_update_completed_] 
        $T[LOAD_LPy1_82_sample_start_] 
        $T[LOAD_LPy1_82_sample_completed_] 
        $T[LOAD_LPy1_82_update_start_] 
        $T[LOAD_LPy1_82_update_completed_] 
        $T[LOAD_LPy1_82_word_address_calculated] 
        $T[LOAD_LPy1_82_root_address_calculated] 
        LOAD_LPy1_82_word_address_calculated <-& (LOAD_LPy1_82_root_address_calculated)
        ;;[LOAD_LPy1_82_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_LPy1_82_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_LPy1_82_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_LPy1_82_sample_start_ <-& (LOAD_LPy1_82_word_address_calculated)
        LOAD_LPy1_82_sample_start_ &-> (LOAD_LPy1_82_Sample)
        LOAD_LPy1_82_sample_completed_ <-& (LOAD_LPy1_82_Sample)
        LOAD_LPy1_82_sample_completed_ &-> ($null)
        LOAD_LPy1_82_update_start_ &-> (LOAD_LPy1_82_Update)
        LOAD_LPy1_82_update_completed_ <-& (LOAD_LPy1_82_Update)
        // Target expression
        // (as target) iNsTr_7
        // iNsTr_7
        // implicit reference
        // 		iNsTr_8 := (iNsTr_7 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 85
        // Source expression
        // (iNsTr_7 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_88_sample_start_] 
        $T[SHL_u32_u32_88_sample_completed_] 
        $T[SHL_u32_u32_88_update_start_] 
        $T[SHL_u32_u32_88_update_completed_] 
        // iNsTr_7
        $T[R_iNsTr_7_85_sample_start_] 
        $T[R_iNsTr_7_85_sample_completed_] 
        $T[R_iNsTr_7_85_update_start_] 
        $T[R_iNsTr_7_85_update_completed_] 
        // implicit reference
        R_iNsTr_7_85_sample_start_ <-& (LOAD_LPy1_82_update_completed_)
        R_iNsTr_7_85_sample_completed_ <-& (R_iNsTr_7_85_sample_start_)
        R_iNsTr_7_85_update_start_ <-& (R_iNsTr_7_85_sample_completed_)
        R_iNsTr_7_85_update_completed_ <-& (R_iNsTr_7_85_update_start_)
        SHL_u32_u32_88_sample_start_ <-& (R_iNsTr_7_85_update_completed_)
        ;;[SHL_u32_u32_88_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_88_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_88_sample_start_ &-> (SHL_u32_u32_88_Sample)
        SHL_u32_u32_88_sample_completed_ <-& (SHL_u32_u32_88_Sample)
        SHL_u32_u32_88_sample_completed_ &-> ($null)
        SHL_u32_u32_88_update_start_ &-> (SHL_u32_u32_88_Update)
        SHL_u32_u32_88_update_completed_ <-& (SHL_u32_u32_88_Update)
        // Target expression
        // (as target) iNsTr_8
        // iNsTr_8
        // implicit reference
        // 		iNsTr_9 := LPy2
        //  file prog.linked.opt.aa, line 86
        // Source expression
        // LPy2
        $T[LOAD_LPy2_91_sample_start_] 
        $T[LOAD_LPy2_91_sample_completed_] 
        $T[LOAD_LPy2_91_update_start_] 
        $T[LOAD_LPy2_91_update_completed_] 
        $T[LOAD_LPy2_91_sample_start_] 
        $T[LOAD_LPy2_91_sample_completed_] 
        $T[LOAD_LPy2_91_update_start_] 
        $T[LOAD_LPy2_91_update_completed_] 
        $T[LOAD_LPy2_91_word_address_calculated] 
        $T[LOAD_LPy2_91_root_address_calculated] 
        LOAD_LPy2_91_word_address_calculated <-& (LOAD_LPy2_91_root_address_calculated)
        ;;[LOAD_LPy2_91_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_LPy2_91_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_LPy2_91_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_LPy2_91_sample_start_ <-& (LOAD_LPy2_91_word_address_calculated)
        LOAD_LPy2_91_sample_start_ &-> (LOAD_LPy2_91_Sample)
        LOAD_LPy2_91_sample_completed_ <-& (LOAD_LPy2_91_Sample)
        LOAD_LPy2_91_sample_completed_ &-> ($null)
        LOAD_LPy2_91_update_start_ &-> (LOAD_LPy2_91_Update)
        LOAD_LPy2_91_update_completed_ <-& (LOAD_LPy2_91_Update)
        // Target expression
        // (as target) iNsTr_9
        // iNsTr_9
        // implicit reference
        // 		iNsTr_10 := @(LPbuff[iNsTr_6])
        //  file prog.linked.opt.aa, line 87
        // Source expression
        // @(LPbuff[iNsTr_6])
        $T[addr_of_96_sample_start_] 
        $T[addr_of_96_sample_completed_] 
        $T[addr_of_96_update_start_] 
        $T[addr_of_96_update_completed_] 
        $T[array_obj_ref_95_root_address_calculated] 
        $T[array_obj_ref_95_offset_calculated] 
        $T[array_obj_ref_95_index_resized_0] 
        $T[array_obj_ref_95_index_scaled_0] 
        // iNsTr_6
        $T[R_iNsTr_6_94_sample_start_] 
        $T[R_iNsTr_6_94_sample_completed_] 
        $T[R_iNsTr_6_94_update_start_] 
        $T[R_iNsTr_6_94_update_completed_] 
        // implicit reference
        R_iNsTr_6_94_sample_start_ <-& (MUX_79_update_completed_)
        R_iNsTr_6_94_sample_completed_ <-& (R_iNsTr_6_94_sample_start_)
        R_iNsTr_6_94_update_start_ <-& (R_iNsTr_6_94_sample_completed_)
        R_iNsTr_6_94_update_completed_ <-& (R_iNsTr_6_94_update_start_)
        ;;[array_obj_ref_95_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        R_iNsTr_6_94_update_completed_ &-> (array_obj_ref_95_index_resize_0)
        array_obj_ref_95_index_resized_0 <-& (array_obj_ref_95_index_resize_0)
        ;;[array_obj_ref_95_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_95_index_resized_0 &-> (array_obj_ref_95_index_scale_0)
        array_obj_ref_95_index_scaled_0 <-& (array_obj_ref_95_index_scale_0)
        ;;[array_obj_ref_95_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_95_index_scaled_0 &-> (array_obj_ref_95_final_index_sum_regn)
        array_obj_ref_95_offset_calculated <-& (array_obj_ref_95_final_index_sum_regn)
        ;;[array_obj_ref_95_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_95_offset_calculated &-> (array_obj_ref_95_base_plus_offset)
        array_obj_ref_95_root_address_calculated <-& (array_obj_ref_95_base_plus_offset)
        ;;[addr_of_96_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_96_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_96_sample_start_ <-& (array_obj_ref_95_root_address_calculated)
        addr_of_96_sample_start_ &-> (addr_of_96_request)
        addr_of_96_sample_completed_ <-& (addr_of_96_request)
        addr_of_96_update_start_ &-> (addr_of_96_complete)
        addr_of_96_update_completed_ <-& (addr_of_96_complete)
        // Target expression
        // (as target) iNsTr_10
        // iNsTr_10
        // implicit reference
        // 		iNsTr_11 := ->(iNsTr_10)
        //  file prog.linked.opt.aa, line 88
        // Source expression
        // ->(iNsTr_10)
        $T[ptr_deref_100_sample_start_] 
        $T[ptr_deref_100_sample_completed_] 
        $T[ptr_deref_100_update_start_] 
        $T[ptr_deref_100_update_completed_] 
        $T[ptr_deref_100_base_address_calculated] 
        // iNsTr_10
        $T[R_iNsTr_10_99_sample_start_] 
        $T[R_iNsTr_10_99_sample_completed_] 
        $T[R_iNsTr_10_99_update_start_] 
        $T[R_iNsTr_10_99_update_completed_] 
        // implicit reference
        R_iNsTr_10_99_sample_start_ <-& (addr_of_96_update_completed_)
        R_iNsTr_10_99_sample_completed_ <-& (R_iNsTr_10_99_sample_start_)
        R_iNsTr_10_99_update_start_ <-& (R_iNsTr_10_99_sample_completed_)
        R_iNsTr_10_99_update_completed_ <-& (R_iNsTr_10_99_update_start_)
        $T[ptr_deref_100_word_address_calculated] 
        $T[ptr_deref_100_root_address_calculated] 
        $T[ptr_deref_100_base_address_resized] 
        ;;[ptr_deref_100_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_100_base_address_calculated &-> (ptr_deref_100_base_addr_resize)
        ptr_deref_100_base_address_resized <-& (ptr_deref_100_base_addr_resize)
        ;;[ptr_deref_100_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_100_base_address_resized &-> (ptr_deref_100_base_plus_offset)
        ptr_deref_100_root_address_calculated <-& (ptr_deref_100_base_plus_offset)
        ;;[ptr_deref_100_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_100_root_address_calculated &-> (ptr_deref_100_word_addrgen)
        ptr_deref_100_word_address_calculated <-& (ptr_deref_100_word_addrgen)
        ;;[ptr_deref_100_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_100_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_100_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_100_sample_start_ <-& (ptr_deref_100_word_address_calculated)
        ptr_deref_100_sample_start_ &-> (ptr_deref_100_Sample)
        ptr_deref_100_sample_completed_ <-& (ptr_deref_100_Sample)
        ptr_deref_100_sample_completed_ &-> ($null)
        ptr_deref_100_update_start_ &-> (ptr_deref_100_Update)
        ptr_deref_100_update_completed_ <-& (ptr_deref_100_Update)
        ptr_deref_100_base_address_calculated <-& (R_iNsTr_10_99_update_completed_)
        ptr_deref_100_sample_start_ <-& (ptr_deref_100_base_address_calculated)
        // Target expression
        // (as target) iNsTr_11
        // iNsTr_11
        // implicit reference
        // 		iNsTr_12 := (iNsTr_11 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 89
        // Source expression
        // (iNsTr_11 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_106_sample_start_] 
        $T[SHL_u32_u32_106_sample_completed_] 
        $T[SHL_u32_u32_106_update_start_] 
        $T[SHL_u32_u32_106_update_completed_] 
        // iNsTr_11
        $T[R_iNsTr_11_103_sample_start_] 
        $T[R_iNsTr_11_103_sample_completed_] 
        $T[R_iNsTr_11_103_update_start_] 
        $T[R_iNsTr_11_103_update_completed_] 
        // implicit reference
        R_iNsTr_11_103_sample_start_ <-& (ptr_deref_100_update_completed_)
        R_iNsTr_11_103_sample_completed_ <-& (R_iNsTr_11_103_sample_start_)
        R_iNsTr_11_103_update_start_ <-& (R_iNsTr_11_103_sample_completed_)
        R_iNsTr_11_103_update_completed_ <-& (R_iNsTr_11_103_update_start_)
        SHL_u32_u32_106_sample_start_ <-& (R_iNsTr_11_103_update_completed_)
        ;;[SHL_u32_u32_106_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_106_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_106_sample_start_ &-> (SHL_u32_u32_106_Sample)
        SHL_u32_u32_106_sample_completed_ <-& (SHL_u32_u32_106_Sample)
        SHL_u32_u32_106_sample_completed_ &-> ($null)
        SHL_u32_u32_106_update_start_ &-> (SHL_u32_u32_106_Update)
        SHL_u32_u32_106_update_completed_ <-& (SHL_u32_u32_106_Update)
        // Target expression
        // (as target) iNsTr_12
        // iNsTr_12
        // implicit reference
        // 		iNsTr_13 := @(LPbuff[iNsTr_2])
        //  file prog.linked.opt.aa, line 90
        // Source expression
        // @(LPbuff[iNsTr_2])
        $T[addr_of_111_sample_start_] 
        $T[addr_of_111_sample_completed_] 
        $T[addr_of_111_update_start_] 
        $T[addr_of_111_update_completed_] 
        $T[array_obj_ref_110_root_address_calculated] 
        $T[array_obj_ref_110_offset_calculated] 
        $T[array_obj_ref_110_index_resized_0] 
        $T[array_obj_ref_110_index_scaled_0] 
        // iNsTr_2
        $T[R_iNsTr_2_109_sample_start_] 
        $T[R_iNsTr_2_109_sample_completed_] 
        $T[R_iNsTr_2_109_update_start_] 
        $T[R_iNsTr_2_109_update_completed_] 
        // implicit reference
        R_iNsTr_2_109_sample_start_ <-& (LOAD_LPbuff_ptr_51_update_completed_)
        R_iNsTr_2_109_sample_completed_ <-& (R_iNsTr_2_109_sample_start_)
        R_iNsTr_2_109_update_start_ <-& (R_iNsTr_2_109_sample_completed_)
        R_iNsTr_2_109_update_completed_ <-& (R_iNsTr_2_109_update_start_)
        ;;[array_obj_ref_110_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        R_iNsTr_2_109_update_completed_ &-> (array_obj_ref_110_index_resize_0)
        array_obj_ref_110_index_resized_0 <-& (array_obj_ref_110_index_resize_0)
        ;;[array_obj_ref_110_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_110_index_resized_0 &-> (array_obj_ref_110_index_scale_0)
        array_obj_ref_110_index_scaled_0 <-& (array_obj_ref_110_index_scale_0)
        ;;[array_obj_ref_110_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_110_index_scaled_0 &-> (array_obj_ref_110_final_index_sum_regn)
        array_obj_ref_110_offset_calculated <-& (array_obj_ref_110_final_index_sum_regn)
        ;;[array_obj_ref_110_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_110_offset_calculated &-> (array_obj_ref_110_base_plus_offset)
        array_obj_ref_110_root_address_calculated <-& (array_obj_ref_110_base_plus_offset)
        ;;[addr_of_111_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_111_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_111_sample_start_ <-& (array_obj_ref_110_root_address_calculated)
        addr_of_111_sample_start_ &-> (addr_of_111_request)
        addr_of_111_sample_completed_ <-& (addr_of_111_request)
        addr_of_111_update_start_ &-> (addr_of_111_complete)
        addr_of_111_update_completed_ <-& (addr_of_111_complete)
        // Target expression
        // (as target) iNsTr_13
        // iNsTr_13
        // implicit reference
        // 		iNsTr_14 := ->(iNsTr_13)
        //  file prog.linked.opt.aa, line 91
        // Source expression
        // ->(iNsTr_13)
        $T[ptr_deref_115_sample_start_] 
        $T[ptr_deref_115_sample_completed_] 
        $T[ptr_deref_115_update_start_] 
        $T[ptr_deref_115_update_completed_] 
        $T[ptr_deref_115_base_address_calculated] 
        // iNsTr_13
        $T[R_iNsTr_13_114_sample_start_] 
        $T[R_iNsTr_13_114_sample_completed_] 
        $T[R_iNsTr_13_114_update_start_] 
        $T[R_iNsTr_13_114_update_completed_] 
        // implicit reference
        R_iNsTr_13_114_sample_start_ <-& (addr_of_111_update_completed_)
        R_iNsTr_13_114_sample_completed_ <-& (R_iNsTr_13_114_sample_start_)
        R_iNsTr_13_114_update_start_ <-& (R_iNsTr_13_114_sample_completed_)
        R_iNsTr_13_114_update_completed_ <-& (R_iNsTr_13_114_update_start_)
        $T[ptr_deref_115_word_address_calculated] 
        $T[ptr_deref_115_root_address_calculated] 
        $T[ptr_deref_115_base_address_resized] 
        ;;[ptr_deref_115_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_115_base_address_calculated &-> (ptr_deref_115_base_addr_resize)
        ptr_deref_115_base_address_resized <-& (ptr_deref_115_base_addr_resize)
        ;;[ptr_deref_115_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_115_base_address_resized &-> (ptr_deref_115_base_plus_offset)
        ptr_deref_115_root_address_calculated <-& (ptr_deref_115_base_plus_offset)
        ;;[ptr_deref_115_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_115_root_address_calculated &-> (ptr_deref_115_word_addrgen)
        ptr_deref_115_word_address_calculated <-& (ptr_deref_115_word_addrgen)
        ;;[ptr_deref_115_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_115_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_115_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_115_sample_start_ <-& (ptr_deref_115_word_address_calculated)
        ptr_deref_115_sample_start_ &-> (ptr_deref_115_Sample)
        ptr_deref_115_sample_completed_ <-& (ptr_deref_115_Sample)
        ptr_deref_115_sample_completed_ &-> ($null)
        ptr_deref_115_update_start_ &-> (ptr_deref_115_Update)
        ptr_deref_115_update_completed_ <-& (ptr_deref_115_Update)
        ptr_deref_115_base_address_calculated <-& (R_iNsTr_13_114_update_completed_)
        ptr_deref_115_sample_start_ <-& (ptr_deref_115_base_address_calculated)
        // Target expression
        // (as target) iNsTr_14
        // iNsTr_14
        // implicit reference
        // 		iNsTr_15 := (iNsTr_8 + iNsTr_1)
        //  file prog.linked.opt.aa, line 92
        // Source expression
        // (iNsTr_8 + iNsTr_1)
        $T[ADD_u32_u32_120_sample_start_] 
        $T[ADD_u32_u32_120_sample_completed_] 
        $T[ADD_u32_u32_120_update_start_] 
        $T[ADD_u32_u32_120_update_completed_] 
        // iNsTr_8
        $T[R_iNsTr_8_118_sample_start_] 
        $T[R_iNsTr_8_118_sample_completed_] 
        $T[R_iNsTr_8_118_update_start_] 
        $T[R_iNsTr_8_118_update_completed_] 
        // implicit reference
        R_iNsTr_8_118_sample_start_ <-& (SHL_u32_u32_88_update_completed_)
        R_iNsTr_8_118_sample_completed_ <-& (R_iNsTr_8_118_sample_start_)
        R_iNsTr_8_118_update_start_ <-& (R_iNsTr_8_118_sample_completed_)
        R_iNsTr_8_118_update_completed_ <-& (R_iNsTr_8_118_update_start_)
        // iNsTr_1
        $T[R_iNsTr_1_119_sample_start_] 
        $T[R_iNsTr_1_119_sample_completed_] 
        $T[R_iNsTr_1_119_update_start_] 
        $T[R_iNsTr_1_119_update_completed_] 
        // implicit reference
        R_iNsTr_1_119_sample_start_ <-& ($entry)
        R_iNsTr_1_119_sample_completed_ <-& (R_iNsTr_1_119_sample_start_)
        R_iNsTr_1_119_update_start_ <-& (R_iNsTr_1_119_sample_completed_)
        R_iNsTr_1_119_update_completed_ <-& (R_iNsTr_1_119_update_start_)
        ADD_u32_u32_120_sample_start_ <-& (R_iNsTr_8_118_update_completed_)
        ADD_u32_u32_120_sample_start_ <-& (R_iNsTr_1_119_update_completed_)
        ;;[ADD_u32_u32_120_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_120_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_120_sample_start_ &-> (ADD_u32_u32_120_Sample)
        ADD_u32_u32_120_sample_completed_ <-& (ADD_u32_u32_120_Sample)
        ADD_u32_u32_120_sample_completed_ &-> ($null)
        ADD_u32_u32_120_update_start_ &-> (ADD_u32_u32_120_Update)
        ADD_u32_u32_120_update_completed_ <-& (ADD_u32_u32_120_Update)
        // Target expression
        // (as target) iNsTr_15
        // iNsTr_15
        // implicit reference
        // 		iNsTr_16 := (iNsTr_15 - iNsTr_9)
        //  file prog.linked.opt.aa, line 93
        // Source expression
        // (iNsTr_15 - iNsTr_9)
        $T[SUB_u32_u32_125_sample_start_] 
        $T[SUB_u32_u32_125_sample_completed_] 
        $T[SUB_u32_u32_125_update_start_] 
        $T[SUB_u32_u32_125_update_completed_] 
        // iNsTr_15
        $T[R_iNsTr_15_123_sample_start_] 
        $T[R_iNsTr_15_123_sample_completed_] 
        $T[R_iNsTr_15_123_update_start_] 
        $T[R_iNsTr_15_123_update_completed_] 
        // implicit reference
        R_iNsTr_15_123_sample_start_ <-& (ADD_u32_u32_120_update_completed_)
        R_iNsTr_15_123_sample_completed_ <-& (R_iNsTr_15_123_sample_start_)
        R_iNsTr_15_123_update_start_ <-& (R_iNsTr_15_123_sample_completed_)
        R_iNsTr_15_123_update_completed_ <-& (R_iNsTr_15_123_update_start_)
        // iNsTr_9
        $T[R_iNsTr_9_124_sample_start_] 
        $T[R_iNsTr_9_124_sample_completed_] 
        $T[R_iNsTr_9_124_update_start_] 
        $T[R_iNsTr_9_124_update_completed_] 
        // implicit reference
        R_iNsTr_9_124_sample_start_ <-& (LOAD_LPy2_91_update_completed_)
        R_iNsTr_9_124_sample_completed_ <-& (R_iNsTr_9_124_sample_start_)
        R_iNsTr_9_124_update_start_ <-& (R_iNsTr_9_124_sample_completed_)
        R_iNsTr_9_124_update_completed_ <-& (R_iNsTr_9_124_update_start_)
        SUB_u32_u32_125_sample_start_ <-& (R_iNsTr_15_123_update_completed_)
        SUB_u32_u32_125_sample_start_ <-& (R_iNsTr_9_124_update_completed_)
        ;;[SUB_u32_u32_125_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_125_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_125_sample_start_ &-> (SUB_u32_u32_125_Sample)
        SUB_u32_u32_125_sample_completed_ <-& (SUB_u32_u32_125_Sample)
        SUB_u32_u32_125_sample_completed_ &-> ($null)
        SUB_u32_u32_125_update_start_ &-> (SUB_u32_u32_125_Update)
        SUB_u32_u32_125_update_completed_ <-& (SUB_u32_u32_125_Update)
        // Target expression
        // (as target) iNsTr_16
        // iNsTr_16
        // implicit reference
        // 		iNsTr_17 := (iNsTr_16 + iNsTr_14)
        //  file prog.linked.opt.aa, line 94
        // Source expression
        // (iNsTr_16 + iNsTr_14)
        $T[ADD_u32_u32_130_sample_start_] 
        $T[ADD_u32_u32_130_sample_completed_] 
        $T[ADD_u32_u32_130_update_start_] 
        $T[ADD_u32_u32_130_update_completed_] 
        // iNsTr_16
        $T[R_iNsTr_16_128_sample_start_] 
        $T[R_iNsTr_16_128_sample_completed_] 
        $T[R_iNsTr_16_128_update_start_] 
        $T[R_iNsTr_16_128_update_completed_] 
        // implicit reference
        R_iNsTr_16_128_sample_start_ <-& (SUB_u32_u32_125_update_completed_)
        R_iNsTr_16_128_sample_completed_ <-& (R_iNsTr_16_128_sample_start_)
        R_iNsTr_16_128_update_start_ <-& (R_iNsTr_16_128_sample_completed_)
        R_iNsTr_16_128_update_completed_ <-& (R_iNsTr_16_128_update_start_)
        // iNsTr_14
        $T[R_iNsTr_14_129_sample_start_] 
        $T[R_iNsTr_14_129_sample_completed_] 
        $T[R_iNsTr_14_129_update_start_] 
        $T[R_iNsTr_14_129_update_completed_] 
        // implicit reference
        R_iNsTr_14_129_sample_start_ <-& (ptr_deref_115_update_completed_)
        R_iNsTr_14_129_sample_completed_ <-& (R_iNsTr_14_129_sample_start_)
        R_iNsTr_14_129_update_start_ <-& (R_iNsTr_14_129_sample_completed_)
        R_iNsTr_14_129_update_completed_ <-& (R_iNsTr_14_129_update_start_)
        ADD_u32_u32_130_sample_start_ <-& (R_iNsTr_16_128_update_completed_)
        ADD_u32_u32_130_sample_start_ <-& (R_iNsTr_14_129_update_completed_)
        ;;[ADD_u32_u32_130_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_130_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_130_sample_start_ &-> (ADD_u32_u32_130_Sample)
        ADD_u32_u32_130_sample_completed_ <-& (ADD_u32_u32_130_Sample)
        ADD_u32_u32_130_sample_completed_ &-> ($null)
        ADD_u32_u32_130_update_start_ &-> (ADD_u32_u32_130_Update)
        ADD_u32_u32_130_update_completed_ <-& (ADD_u32_u32_130_Update)
        // Target expression
        // (as target) iNsTr_17
        // iNsTr_17
        // implicit reference
        // 		iNsTr_18 := (iNsTr_17 - iNsTr_12)
        //  file prog.linked.opt.aa, line 95
        // Source expression
        // (iNsTr_17 - iNsTr_12)
        $T[SUB_u32_u32_135_sample_start_] 
        $T[SUB_u32_u32_135_sample_completed_] 
        $T[SUB_u32_u32_135_update_start_] 
        $T[SUB_u32_u32_135_update_completed_] 
        // iNsTr_17
        $T[R_iNsTr_17_133_sample_start_] 
        $T[R_iNsTr_17_133_sample_completed_] 
        $T[R_iNsTr_17_133_update_start_] 
        $T[R_iNsTr_17_133_update_completed_] 
        // implicit reference
        R_iNsTr_17_133_sample_start_ <-& (ADD_u32_u32_130_update_completed_)
        R_iNsTr_17_133_sample_completed_ <-& (R_iNsTr_17_133_sample_start_)
        R_iNsTr_17_133_update_start_ <-& (R_iNsTr_17_133_sample_completed_)
        R_iNsTr_17_133_update_completed_ <-& (R_iNsTr_17_133_update_start_)
        // iNsTr_12
        $T[R_iNsTr_12_134_sample_start_] 
        $T[R_iNsTr_12_134_sample_completed_] 
        $T[R_iNsTr_12_134_update_start_] 
        $T[R_iNsTr_12_134_update_completed_] 
        // implicit reference
        R_iNsTr_12_134_sample_start_ <-& (SHL_u32_u32_106_update_completed_)
        R_iNsTr_12_134_sample_completed_ <-& (R_iNsTr_12_134_sample_start_)
        R_iNsTr_12_134_update_start_ <-& (R_iNsTr_12_134_sample_completed_)
        R_iNsTr_12_134_update_completed_ <-& (R_iNsTr_12_134_update_start_)
        SUB_u32_u32_135_sample_start_ <-& (R_iNsTr_17_133_update_completed_)
        SUB_u32_u32_135_sample_start_ <-& (R_iNsTr_12_134_update_completed_)
        ;;[SUB_u32_u32_135_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_135_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_135_sample_start_ &-> (SUB_u32_u32_135_Sample)
        SUB_u32_u32_135_sample_completed_ <-& (SUB_u32_u32_135_Sample)
        SUB_u32_u32_135_sample_completed_ &-> ($null)
        SUB_u32_u32_135_update_start_ &-> (SUB_u32_u32_135_Update)
        SUB_u32_u32_135_update_completed_ <-& (SUB_u32_u32_135_Update)
        // Target expression
        // (as target) iNsTr_18
        // iNsTr_18
        // implicit reference
        // 		LPy2 := iNsTr_7
        //  file prog.linked.opt.aa, line 96
        // Source expression
        // iNsTr_7
        $T[R_iNsTr_7_138_sample_start_] 
        $T[R_iNsTr_7_138_sample_completed_] 
        $T[R_iNsTr_7_138_update_start_] 
        $T[R_iNsTr_7_138_update_completed_] 
        // implicit reference
        R_iNsTr_7_138_sample_start_ <-& (LOAD_LPy1_82_update_completed_)
        R_iNsTr_7_138_sample_completed_ <-& (R_iNsTr_7_138_sample_start_)
        R_iNsTr_7_138_update_start_ <-& (R_iNsTr_7_138_sample_completed_)
        R_iNsTr_7_138_update_completed_ <-& (R_iNsTr_7_138_update_start_)
        // Target expression
        // (as target) LPy2
        $T[STORE_LPy2_137_sample_start_] 
        $T[STORE_LPy2_137_sample_completed_] 
        $T[STORE_LPy2_137_update_start_] 
        $T[STORE_LPy2_137_update_completed_] 
        // LPy2
        $T[STORE_LPy2_137_word_address_calculated] 
        $T[STORE_LPy2_137_root_address_calculated] 
        STORE_LPy2_137_word_address_calculated <-& (STORE_LPy2_137_root_address_calculated)
        ;;[STORE_LPy2_137_Sample] 
        {
          ;;[STORE_LPy2_137_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_LPy2_137_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_LPy2_137_sample_start_ <-& (STORE_LPy2_137_word_address_calculated)
        STORE_LPy2_137_sample_start_ &-> (STORE_LPy2_137_Sample)
        STORE_LPy2_137_sample_completed_ <-& (STORE_LPy2_137_Sample)
        STORE_LPy2_137_sample_completed_ &-> ($null)
        STORE_LPy2_137_update_start_ &-> (STORE_LPy2_137_Update)
        STORE_LPy2_137_update_completed_ <-& (STORE_LPy2_137_Update)
        STORE_LPy2_137_sample_start_ <-& (R_iNsTr_7_138_update_completed_)
        // 		LPy1 := iNsTr_18
        //  file prog.linked.opt.aa, line 97
        // Source expression
        // iNsTr_18
        $T[R_iNsTr_18_141_sample_start_] 
        $T[R_iNsTr_18_141_sample_completed_] 
        $T[R_iNsTr_18_141_update_start_] 
        $T[R_iNsTr_18_141_update_completed_] 
        // implicit reference
        R_iNsTr_18_141_sample_start_ <-& (SUB_u32_u32_135_update_completed_)
        R_iNsTr_18_141_sample_completed_ <-& (R_iNsTr_18_141_sample_start_)
        R_iNsTr_18_141_update_start_ <-& (R_iNsTr_18_141_sample_completed_)
        R_iNsTr_18_141_update_completed_ <-& (R_iNsTr_18_141_update_start_)
        // Target expression
        // (as target) LPy1
        $T[STORE_LPy1_140_sample_start_] 
        $T[STORE_LPy1_140_sample_completed_] 
        $T[STORE_LPy1_140_update_start_] 
        $T[STORE_LPy1_140_update_completed_] 
        // LPy1
        $T[STORE_LPy1_140_word_address_calculated] 
        $T[STORE_LPy1_140_root_address_calculated] 
        STORE_LPy1_140_word_address_calculated <-& (STORE_LPy1_140_root_address_calculated)
        ;;[STORE_LPy1_140_Sample] 
        {
          ;;[STORE_LPy1_140_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_LPy1_140_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_LPy1_140_sample_start_ <-& (STORE_LPy1_140_word_address_calculated)
        STORE_LPy1_140_sample_start_ &-> (STORE_LPy1_140_Sample)
        STORE_LPy1_140_sample_completed_ <-& (STORE_LPy1_140_Sample)
        STORE_LPy1_140_sample_completed_ &-> ($null)
        STORE_LPy1_140_update_start_ &-> (STORE_LPy1_140_Update)
        STORE_LPy1_140_update_completed_ <-& (STORE_LPy1_140_Update)
        STORE_LPy1_140_sample_start_ <-& (R_iNsTr_18_141_update_completed_)
        // 		iNsTr_21 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_18 ) )
        //  file prog.linked.opt.aa, line 98
        // Source expression
        // ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_18 ) )
        $T[type_cast_148_sample_start_] 
        $T[type_cast_148_sample_completed_] 
        $T[type_cast_148_update_start_] 
        $T[type_cast_148_update_completed_] 
        // ($cast ($int<64>) iNsTr_18 )
        $T[type_cast_147_sample_start_] 
        $T[type_cast_147_sample_completed_] 
        $T[type_cast_147_update_start_] 
        $T[type_cast_147_update_completed_] 
        // iNsTr_18
        $T[R_iNsTr_18_146_sample_start_] 
        $T[R_iNsTr_18_146_sample_completed_] 
        $T[R_iNsTr_18_146_update_start_] 
        $T[R_iNsTr_18_146_update_completed_] 
        // implicit reference
        R_iNsTr_18_146_sample_start_ <-& (SUB_u32_u32_135_update_completed_)
        R_iNsTr_18_146_sample_completed_ <-& (R_iNsTr_18_146_sample_start_)
        R_iNsTr_18_146_update_start_ <-& (R_iNsTr_18_146_sample_completed_)
        R_iNsTr_18_146_update_completed_ <-& (R_iNsTr_18_146_update_start_)
        type_cast_147_sample_start_ <-& (R_iNsTr_18_146_update_completed_)
        ;;[type_cast_147_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_147_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_147_sample_start_ &-> (type_cast_147_Sample)
        type_cast_147_sample_completed_ <-& (type_cast_147_Sample)
        type_cast_147_sample_completed_ &-> ($null)
        type_cast_147_update_start_ &-> (type_cast_147_Update)
        type_cast_147_update_completed_ <-& (type_cast_147_Update)
        type_cast_148_sample_start_ <-& (type_cast_147_update_completed_)
        ;;[type_cast_148_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_148_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_148_sample_start_ &-> (type_cast_148_Sample)
        type_cast_148_sample_completed_ <-& (type_cast_148_Sample)
        type_cast_148_sample_completed_ &-> ($null)
        type_cast_148_update_start_ &-> (type_cast_148_Update)
        type_cast_148_update_completed_ <-& (type_cast_148_Update)
        // Target expression
        // (as target) iNsTr_21
        // iNsTr_21
        // implicit reference
        // 		iNsTr_22 := (($bitcast ($int<32>) iNsTr_18 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.linked.opt.aa, line 99
        // Source expression
        // (($bitcast ($int<32>) iNsTr_18 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[SLT_i32_u1_156_sample_start_] 
        $T[SLT_i32_u1_156_sample_completed_] 
        $T[SLT_i32_u1_156_update_start_] 
        $T[SLT_i32_u1_156_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_18 )
        $T[type_cast_152_sample_start_] 
        $T[type_cast_152_sample_completed_] 
        $T[type_cast_152_update_start_] 
        $T[type_cast_152_update_completed_] 
        // iNsTr_18
        $T[R_iNsTr_18_151_sample_start_] 
        $T[R_iNsTr_18_151_sample_completed_] 
        $T[R_iNsTr_18_151_update_start_] 
        $T[R_iNsTr_18_151_update_completed_] 
        // implicit reference
        R_iNsTr_18_151_sample_start_ <-& (SUB_u32_u32_135_update_completed_)
        R_iNsTr_18_151_sample_completed_ <-& (R_iNsTr_18_151_sample_start_)
        R_iNsTr_18_151_update_start_ <-& (R_iNsTr_18_151_sample_completed_)
        R_iNsTr_18_151_update_completed_ <-& (R_iNsTr_18_151_update_start_)
        type_cast_152_sample_start_ <-& (R_iNsTr_18_151_update_completed_)
        ;;[type_cast_152_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_152_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_152_sample_start_ &-> (type_cast_152_Sample)
        type_cast_152_sample_completed_ <-& (type_cast_152_Sample)
        type_cast_152_sample_completed_ &-> ($null)
        type_cast_152_update_start_ &-> (type_cast_152_Update)
        type_cast_152_update_completed_ <-& (type_cast_152_Update)
        // flow-through
        type_cast_152_update_start_ <-& (type_cast_152_sample_completed_)
        SLT_i32_u1_156_sample_start_ <-& (type_cast_152_update_completed_)
        ;;[SLT_i32_u1_156_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_i32_u1_156_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_i32_u1_156_sample_start_ &-> (SLT_i32_u1_156_Sample)
        SLT_i32_u1_156_sample_completed_ <-& (SLT_i32_u1_156_Sample)
        SLT_i32_u1_156_sample_completed_ &-> ($null)
        SLT_i32_u1_156_update_start_ &-> (SLT_i32_u1_156_Update)
        SLT_i32_u1_156_update_completed_ <-& (SLT_i32_u1_156_Update)
        // Target expression
        // (as target) iNsTr_22
        // iNsTr_22
        // implicit reference
        // 		iNsTr_23 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - iNsTr_21)
        //  file prog.linked.opt.aa, line 100
        // Source expression
        // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - iNsTr_21)
        $T[SUB_u64_u64_162_sample_start_] 
        $T[SUB_u64_u64_162_sample_completed_] 
        $T[SUB_u64_u64_162_update_start_] 
        $T[SUB_u64_u64_162_update_completed_] 
        // iNsTr_21
        $T[R_iNsTr_21_161_sample_start_] 
        $T[R_iNsTr_21_161_sample_completed_] 
        $T[R_iNsTr_21_161_update_start_] 
        $T[R_iNsTr_21_161_update_completed_] 
        // implicit reference
        R_iNsTr_21_161_sample_start_ <-& (type_cast_148_update_completed_)
        R_iNsTr_21_161_sample_completed_ <-& (R_iNsTr_21_161_sample_start_)
        R_iNsTr_21_161_update_start_ <-& (R_iNsTr_21_161_sample_completed_)
        R_iNsTr_21_161_update_completed_ <-& (R_iNsTr_21_161_update_start_)
        SUB_u64_u64_162_sample_start_ <-& (R_iNsTr_21_161_update_completed_)
        ;;[SUB_u64_u64_162_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u64_u64_162_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u64_u64_162_sample_start_ &-> (SUB_u64_u64_162_Sample)
        SUB_u64_u64_162_sample_completed_ <-& (SUB_u64_u64_162_Sample)
        SUB_u64_u64_162_sample_completed_ &-> ($null)
        SUB_u64_u64_162_update_start_ &-> (SUB_u64_u64_162_Update)
        SUB_u64_u64_162_update_completed_ <-& (SUB_u64_u64_162_Update)
        // Target expression
        // (as target) iNsTr_23
        // iNsTr_23
        // implicit reference
        // 		iNsTr_24 := ( $mux iNsTr_22 iNsTr_23  iNsTr_21 ) 
        //  file prog.linked.opt.aa, line 101
        // Source expression
        // ( $mux iNsTr_22 iNsTr_23  iNsTr_21 ) 
        $T[MUX_168_sample_start_] 
        $T[MUX_168_sample_completed_] 
        $T[MUX_168_update_start_] 
        $T[MUX_168_update_completed_] 
        // iNsTr_22
        $T[R_iNsTr_22_165_sample_start_] 
        $T[R_iNsTr_22_165_sample_completed_] 
        $T[R_iNsTr_22_165_update_start_] 
        $T[R_iNsTr_22_165_update_completed_] 
        // implicit reference
        R_iNsTr_22_165_sample_start_ <-& (SLT_i32_u1_156_update_completed_)
        R_iNsTr_22_165_sample_completed_ <-& (R_iNsTr_22_165_sample_start_)
        R_iNsTr_22_165_update_start_ <-& (R_iNsTr_22_165_sample_completed_)
        R_iNsTr_22_165_update_completed_ <-& (R_iNsTr_22_165_update_start_)
        // iNsTr_23
        $T[R_iNsTr_23_166_sample_start_] 
        $T[R_iNsTr_23_166_sample_completed_] 
        $T[R_iNsTr_23_166_update_start_] 
        $T[R_iNsTr_23_166_update_completed_] 
        // implicit reference
        R_iNsTr_23_166_sample_start_ <-& (SUB_u64_u64_162_update_completed_)
        R_iNsTr_23_166_sample_completed_ <-& (R_iNsTr_23_166_sample_start_)
        R_iNsTr_23_166_update_start_ <-& (R_iNsTr_23_166_sample_completed_)
        R_iNsTr_23_166_update_completed_ <-& (R_iNsTr_23_166_update_start_)
        // iNsTr_21
        $T[R_iNsTr_21_167_sample_start_] 
        $T[R_iNsTr_21_167_sample_completed_] 
        $T[R_iNsTr_21_167_update_start_] 
        $T[R_iNsTr_21_167_update_completed_] 
        // implicit reference
        R_iNsTr_21_167_sample_start_ <-& (type_cast_148_update_completed_)
        R_iNsTr_21_167_sample_completed_ <-& (R_iNsTr_21_167_sample_start_)
        R_iNsTr_21_167_update_start_ <-& (R_iNsTr_21_167_sample_completed_)
        R_iNsTr_21_167_update_completed_ <-& (R_iNsTr_21_167_update_start_)
        MUX_168_sample_start_ <-& (R_iNsTr_22_165_update_completed_)
        MUX_168_sample_start_ <-& (R_iNsTr_23_166_update_completed_)
        MUX_168_sample_start_ <-& (R_iNsTr_21_167_update_completed_)
        ;;[MUX_168_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_168_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_168_sample_start_ &-> (MUX_168_start)
        MUX_168_sample_completed_ <-& (MUX_168_start)
        MUX_168_update_start_ &-> (MUX_168_complete)
        MUX_168_update_completed_ <-& (MUX_168_complete)
        MUX_168_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_24
        // iNsTr_24
        // implicit reference
        // 		iNsTr_25 := (($bitcast ($int<64>) iNsTr_24 ) < ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ))
        //  file prog.linked.opt.aa, line 102
        // Source expression
        // (($bitcast ($int<64>) iNsTr_24 ) < ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ))
        $T[SLT_i64_u1_176_sample_start_] 
        $T[SLT_i64_u1_176_sample_completed_] 
        $T[SLT_i64_u1_176_update_start_] 
        $T[SLT_i64_u1_176_update_completed_] 
        // ($bitcast ($int<64>) iNsTr_24 )
        $T[type_cast_172_sample_start_] 
        $T[type_cast_172_sample_completed_] 
        $T[type_cast_172_update_start_] 
        $T[type_cast_172_update_completed_] 
        // iNsTr_24
        $T[R_iNsTr_24_171_sample_start_] 
        $T[R_iNsTr_24_171_sample_completed_] 
        $T[R_iNsTr_24_171_update_start_] 
        $T[R_iNsTr_24_171_update_completed_] 
        // implicit reference
        R_iNsTr_24_171_sample_start_ <-& (MUX_168_update_completed_)
        R_iNsTr_24_171_sample_completed_ <-& (R_iNsTr_24_171_sample_start_)
        R_iNsTr_24_171_update_start_ <-& (R_iNsTr_24_171_sample_completed_)
        R_iNsTr_24_171_update_completed_ <-& (R_iNsTr_24_171_update_start_)
        type_cast_172_sample_start_ <-& (R_iNsTr_24_171_update_completed_)
        ;;[type_cast_172_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_172_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_172_sample_start_ &-> (type_cast_172_Sample)
        type_cast_172_sample_completed_ <-& (type_cast_172_Sample)
        type_cast_172_sample_completed_ &-> ($null)
        type_cast_172_update_start_ &-> (type_cast_172_Update)
        type_cast_172_update_completed_ <-& (type_cast_172_Update)
        // flow-through
        type_cast_172_update_start_ <-& (type_cast_172_sample_completed_)
        SLT_i64_u1_176_sample_start_ <-& (type_cast_172_update_completed_)
        ;;[SLT_i64_u1_176_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_i64_u1_176_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_i64_u1_176_sample_start_ &-> (SLT_i64_u1_176_Sample)
        SLT_i64_u1_176_sample_completed_ <-& (SLT_i64_u1_176_Sample)
        SLT_i64_u1_176_sample_completed_ &-> ($null)
        SLT_i64_u1_176_update_start_ &-> (SLT_i64_u1_176_Update)
        SLT_i64_u1_176_update_completed_ <-& (SLT_i64_u1_176_Update)
        // Target expression
        // (as target) iNsTr_25
        // iNsTr_25
        // implicit reference
        // 		iNsTr_26 := (iNsTr_24 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
        //  file prog.linked.opt.aa, line 103
        // Source expression
        // (iNsTr_24 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
        $T[ULT_u64_u1_182_sample_start_] 
        $T[ULT_u64_u1_182_sample_completed_] 
        $T[ULT_u64_u1_182_update_start_] 
        $T[ULT_u64_u1_182_update_completed_] 
        // iNsTr_24
        $T[R_iNsTr_24_179_sample_start_] 
        $T[R_iNsTr_24_179_sample_completed_] 
        $T[R_iNsTr_24_179_update_start_] 
        $T[R_iNsTr_24_179_update_completed_] 
        // implicit reference
        R_iNsTr_24_179_sample_start_ <-& (MUX_168_update_completed_)
        R_iNsTr_24_179_sample_completed_ <-& (R_iNsTr_24_179_sample_start_)
        R_iNsTr_24_179_update_start_ <-& (R_iNsTr_24_179_sample_completed_)
        R_iNsTr_24_179_update_completed_ <-& (R_iNsTr_24_179_update_start_)
        ULT_u64_u1_182_sample_start_ <-& (R_iNsTr_24_179_update_completed_)
        ;;[ULT_u64_u1_182_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u64_u1_182_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u64_u1_182_sample_start_ &-> (ULT_u64_u1_182_Sample)
        ULT_u64_u1_182_sample_completed_ <-& (ULT_u64_u1_182_Sample)
        ULT_u64_u1_182_sample_completed_ &-> ($null)
        ULT_u64_u1_182_update_start_ &-> (ULT_u64_u1_182_Update)
        ULT_u64_u1_182_update_completed_ <-& (ULT_u64_u1_182_Update)
        // Target expression
        // (as target) iNsTr_26
        // iNsTr_26
        // implicit reference
        // load-store dependencies..
        $T [LOAD_LPy1_82_STORE_LPy1_140_delay] $delay
        // LPy1(load) -> LPy1(store)
        STORE_LPy1_140_sample_start_ <-& (LOAD_LPy1_82_STORE_LPy1_140_delay)
        LOAD_LPy1_82_STORE_LPy1_140_delay <-& (LOAD_LPy1_82_sample_completed_)
        $T [LOAD_LPy2_91_STORE_LPy2_137_delay] $delay
        // LPy2(load) -> LPy2(store)
        STORE_LPy2_137_sample_start_ <-& (LOAD_LPy2_91_STORE_LPy2_137_delay)
        LOAD_LPy2_91_STORE_LPy2_137_delay <-& (LOAD_LPy2_91_sample_completed_)
      }
      assign_stmt_52_to_assign_stmt_183__entry__ |-> (assign_stmt_52_to_assign_stmt_183)
      assign_stmt_52_to_assign_stmt_183__exit__ <-| (assign_stmt_52_to_assign_stmt_183)
      // if-statement  
      //  file prog.linked.opt.aa, line 104
      ;;[if_stmt_184_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_184__entry__ |-> (if_stmt_184_dead_link)
      if_stmt_184__exit__ <-| (if_stmt_184_dead_link)
      ;;[if_stmt_184_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_184__entry__ |-> (if_stmt_184_eval_test)
      $P [R_iNsTr_26_185_place]
      R_iNsTr_26_185_place <-| (if_stmt_184_eval_test)
      ;;[if_stmt_184_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_184_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_26_185_place |-> (if_stmt_184_if_link if_stmt_184_else_link)
      $P [bb_0_divideSignedx_xexit]
      bb_0_divideSignedx_xexit <-| (if_stmt_184_if_link)
      $P [bb_0_bbx_xnph6x_xix_xix_xpreheader]
      bb_0_bbx_xnph6x_xix_xix_xpreheader <-| (if_stmt_184_else_link)
      ::[assign_stmt_212_to_assign_stmt_218] 
      {
        // 		iNsTr_40 := (xx_x05x_xix_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 116
        // Source expression
        // (xx_x05x_xix_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[LSHR_u64_u64_211_sample_start_] 
        $T[LSHR_u64_u64_211_sample_completed_] 
        $T[LSHR_u64_u64_211_update_start_] 
        $T[LSHR_u64_u64_211_update_completed_] 
        // xx_x05x_xix_xi
        $T[R_xx_x05x_xix_xi_208_sample_start_] 
        $T[R_xx_x05x_xix_xi_208_sample_completed_] 
        $T[R_xx_x05x_xix_xi_208_update_start_] 
        $T[R_xx_x05x_xix_xi_208_update_completed_] 
        // implicit reference
        R_xx_x05x_xix_xi_208_sample_start_ <-& ($entry)
        R_xx_x05x_xix_xi_208_sample_completed_ <-& (R_xx_x05x_xix_xi_208_sample_start_)
        R_xx_x05x_xix_xi_208_update_start_ <-& (R_xx_x05x_xix_xi_208_sample_completed_)
        R_xx_x05x_xix_xi_208_update_completed_ <-& (R_xx_x05x_xix_xi_208_update_start_)
        LSHR_u64_u64_211_sample_start_ <-& (R_xx_x05x_xix_xi_208_update_completed_)
        ;;[LSHR_u64_u64_211_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u64_u64_211_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u64_u64_211_sample_start_ &-> (LSHR_u64_u64_211_Sample)
        LSHR_u64_u64_211_sample_completed_ <-& (LSHR_u64_u64_211_Sample)
        LSHR_u64_u64_211_sample_completed_ &-> ($null)
        LSHR_u64_u64_211_update_start_ &-> (LSHR_u64_u64_211_Update)
        LSHR_u64_u64_211_update_completed_ <-& (LSHR_u64_u64_211_Update)
        // Target expression
        // (as target) iNsTr_40
        // iNsTr_40
        // implicit reference
        // 		iNsTr_41 := (iNsTr_40 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
        //  file prog.linked.opt.aa, line 117
        // Source expression
        // (iNsTr_40 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
        $T[UGT_u64_u1_217_sample_start_] 
        $T[UGT_u64_u1_217_sample_completed_] 
        $T[UGT_u64_u1_217_update_start_] 
        $T[UGT_u64_u1_217_update_completed_] 
        // iNsTr_40
        $T[R_iNsTr_40_214_sample_start_] 
        $T[R_iNsTr_40_214_sample_completed_] 
        $T[R_iNsTr_40_214_update_start_] 
        $T[R_iNsTr_40_214_update_completed_] 
        // implicit reference
        R_iNsTr_40_214_sample_start_ <-& (LSHR_u64_u64_211_update_completed_)
        R_iNsTr_40_214_sample_completed_ <-& (R_iNsTr_40_214_sample_start_)
        R_iNsTr_40_214_update_start_ <-& (R_iNsTr_40_214_sample_completed_)
        R_iNsTr_40_214_update_completed_ <-& (R_iNsTr_40_214_update_start_)
        UGT_u64_u1_217_sample_start_ <-& (R_iNsTr_40_214_update_completed_)
        ;;[UGT_u64_u1_217_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u64_u1_217_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u64_u1_217_sample_start_ &-> (UGT_u64_u1_217_Sample)
        UGT_u64_u1_217_sample_completed_ <-& (UGT_u64_u1_217_Sample)
        UGT_u64_u1_217_sample_completed_ &-> ($null)
        UGT_u64_u1_217_update_start_ &-> (UGT_u64_u1_217_Update)
        UGT_u64_u1_217_update_completed_ <-& (UGT_u64_u1_217_Update)
        // Target expression
        // (as target) iNsTr_41
        // iNsTr_41
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_212_to_assign_stmt_218__entry__ |-> (assign_stmt_212_to_assign_stmt_218)
      assign_stmt_212_to_assign_stmt_218__exit__ <-| (assign_stmt_212_to_assign_stmt_218)
      // if-statement  
      //  file prog.linked.opt.aa, line 118
      ;;[if_stmt_219_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_219__entry__ |-> (if_stmt_219_dead_link)
      if_stmt_219__exit__ <-| (if_stmt_219_dead_link)
      ;;[if_stmt_219_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_219__entry__ |-> (if_stmt_219_eval_test)
      $P [R_iNsTr_41_220_place]
      R_iNsTr_41_220_place <-| (if_stmt_219_eval_test)
      ;;[if_stmt_219_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_219_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_41_220_place |-> (if_stmt_219_if_link if_stmt_219_else_link)
      $P [bbx_xnph6x_xix_xi_bbx_xnphx_xix_xix_xpreheader]
      bbx_xnph6x_xix_xi_bbx_xnphx_xix_xix_xpreheader <-| (if_stmt_219_if_link)
      $P [bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi]
      bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi <-| (if_stmt_219_else_link)
      ::[assign_stmt_248_to_assign_stmt_259] 
      {
        // 		iNsTr_48 := (shifted_divisorx_x02x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 130
        // Source expression
        // (shifted_divisorx_x02x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[SHL_u64_u64_247_sample_start_] 
        $T[SHL_u64_u64_247_sample_completed_] 
        $T[SHL_u64_u64_247_update_start_] 
        $T[SHL_u64_u64_247_update_completed_] 
        // shifted_divisorx_x02x_xix_xi
        $T[R_shifted_divisorx_x02x_xix_xi_244_sample_start_] 
        $T[R_shifted_divisorx_x02x_xix_xi_244_sample_completed_] 
        $T[R_shifted_divisorx_x02x_xix_xi_244_update_start_] 
        $T[R_shifted_divisorx_x02x_xix_xi_244_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x02x_xix_xi_244_sample_start_ <-& ($entry)
        R_shifted_divisorx_x02x_xix_xi_244_sample_completed_ <-& (R_shifted_divisorx_x02x_xix_xi_244_sample_start_)
        R_shifted_divisorx_x02x_xix_xi_244_update_start_ <-& (R_shifted_divisorx_x02x_xix_xi_244_sample_completed_)
        R_shifted_divisorx_x02x_xix_xi_244_update_completed_ <-& (R_shifted_divisorx_x02x_xix_xi_244_update_start_)
        SHL_u64_u64_247_sample_start_ <-& (R_shifted_divisorx_x02x_xix_xi_244_update_completed_)
        ;;[SHL_u64_u64_247_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u64_u64_247_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u64_u64_247_sample_start_ &-> (SHL_u64_u64_247_Sample)
        SHL_u64_u64_247_sample_completed_ <-& (SHL_u64_u64_247_Sample)
        SHL_u64_u64_247_sample_completed_ &-> ($null)
        SHL_u64_u64_247_update_start_ &-> (SHL_u64_u64_247_Update)
        SHL_u64_u64_247_update_completed_ <-& (SHL_u64_u64_247_Update)
        // Target expression
        // (as target) iNsTr_48
        // iNsTr_48
        // implicit reference
        // 		iNsTr_49 := (curr_quotientx_x01x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 131
        // Source expression
        // (curr_quotientx_x01x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[SHL_u64_u64_253_sample_start_] 
        $T[SHL_u64_u64_253_sample_completed_] 
        $T[SHL_u64_u64_253_update_start_] 
        $T[SHL_u64_u64_253_update_completed_] 
        // curr_quotientx_x01x_xix_xi
        $T[R_curr_quotientx_x01x_xix_xi_250_sample_start_] 
        $T[R_curr_quotientx_x01x_xix_xi_250_sample_completed_] 
        $T[R_curr_quotientx_x01x_xix_xi_250_update_start_] 
        $T[R_curr_quotientx_x01x_xix_xi_250_update_completed_] 
        // implicit reference
        R_curr_quotientx_x01x_xix_xi_250_sample_start_ <-& ($entry)
        R_curr_quotientx_x01x_xix_xi_250_sample_completed_ <-& (R_curr_quotientx_x01x_xix_xi_250_sample_start_)
        R_curr_quotientx_x01x_xix_xi_250_update_start_ <-& (R_curr_quotientx_x01x_xix_xi_250_sample_completed_)
        R_curr_quotientx_x01x_xix_xi_250_update_completed_ <-& (R_curr_quotientx_x01x_xix_xi_250_update_start_)
        SHL_u64_u64_253_sample_start_ <-& (R_curr_quotientx_x01x_xix_xi_250_update_completed_)
        ;;[SHL_u64_u64_253_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u64_u64_253_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u64_u64_253_sample_start_ &-> (SHL_u64_u64_253_Sample)
        SHL_u64_u64_253_sample_completed_ <-& (SHL_u64_u64_253_Sample)
        SHL_u64_u64_253_sample_completed_ &-> ($null)
        SHL_u64_u64_253_update_start_ &-> (SHL_u64_u64_253_Update)
        SHL_u64_u64_253_update_completed_ <-& (SHL_u64_u64_253_Update)
        // Target expression
        // (as target) iNsTr_49
        // iNsTr_49
        // implicit reference
        // 		iNsTr_50 := (iNsTr_48 < iNsTr_40)
        //  file prog.linked.opt.aa, line 132
        // Source expression
        // (iNsTr_48 < iNsTr_40)
        $T[ULT_u64_u1_258_sample_start_] 
        $T[ULT_u64_u1_258_sample_completed_] 
        $T[ULT_u64_u1_258_update_start_] 
        $T[ULT_u64_u1_258_update_completed_] 
        // iNsTr_48
        $T[R_iNsTr_48_256_sample_start_] 
        $T[R_iNsTr_48_256_sample_completed_] 
        $T[R_iNsTr_48_256_update_start_] 
        $T[R_iNsTr_48_256_update_completed_] 
        // implicit reference
        R_iNsTr_48_256_sample_start_ <-& (SHL_u64_u64_247_update_completed_)
        R_iNsTr_48_256_sample_completed_ <-& (R_iNsTr_48_256_sample_start_)
        R_iNsTr_48_256_update_start_ <-& (R_iNsTr_48_256_sample_completed_)
        R_iNsTr_48_256_update_completed_ <-& (R_iNsTr_48_256_update_start_)
        // iNsTr_40
        $T[R_iNsTr_40_257_sample_start_] 
        $T[R_iNsTr_40_257_sample_completed_] 
        $T[R_iNsTr_40_257_update_start_] 
        $T[R_iNsTr_40_257_update_completed_] 
        // implicit reference
        R_iNsTr_40_257_sample_start_ <-& ($entry)
        R_iNsTr_40_257_sample_completed_ <-& (R_iNsTr_40_257_sample_start_)
        R_iNsTr_40_257_update_start_ <-& (R_iNsTr_40_257_sample_completed_)
        R_iNsTr_40_257_update_completed_ <-& (R_iNsTr_40_257_update_start_)
        ULT_u64_u1_258_sample_start_ <-& (R_iNsTr_48_256_update_completed_)
        ULT_u64_u1_258_sample_start_ <-& (R_iNsTr_40_257_update_completed_)
        ;;[ULT_u64_u1_258_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u64_u1_258_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u64_u1_258_sample_start_ &-> (ULT_u64_u1_258_Sample)
        ULT_u64_u1_258_sample_completed_ <-& (ULT_u64_u1_258_Sample)
        ULT_u64_u1_258_sample_completed_ &-> ($null)
        ULT_u64_u1_258_update_start_ &-> (ULT_u64_u1_258_Update)
        ULT_u64_u1_258_update_completed_ <-& (ULT_u64_u1_258_Update)
        // Target expression
        // (as target) iNsTr_50
        // iNsTr_50
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_248_to_assign_stmt_259__entry__ |-> (assign_stmt_248_to_assign_stmt_259)
      assign_stmt_248_to_assign_stmt_259__exit__ <-| (assign_stmt_248_to_assign_stmt_259)
      // if-statement  
      //  file prog.linked.opt.aa, line 133
      ;;[if_stmt_260_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_260__entry__ |-> (if_stmt_260_dead_link)
      if_stmt_260__exit__ <-| (if_stmt_260_dead_link)
      ;;[if_stmt_260_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_260__entry__ |-> (if_stmt_260_eval_test)
      $P [R_iNsTr_50_261_place]
      R_iNsTr_50_261_place <-| (if_stmt_260_eval_test)
      ;;[if_stmt_260_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_260_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_50_261_place |-> (if_stmt_260_if_link if_stmt_260_else_link)
      $P [bbx_xnphx_xix_xi_bbx_xnphx_xix_xi]
      bbx_xnphx_xix_xi_bbx_xnphx_xix_xi <-| (if_stmt_260_if_link)
      $P [bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit]
      bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit <-| (if_stmt_260_else_link)
      ::[assign_stmt_297_to_assign_stmt_308] 
      {
        // 		iNsTr_44 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x04x_xix_xi)
        //  file prog.linked.opt.aa, line 147
        // Source expression
        // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x04x_xix_xi)
        $T[ADD_u64_u64_296_sample_start_] 
        $T[ADD_u64_u64_296_sample_completed_] 
        $T[ADD_u64_u64_296_update_start_] 
        $T[ADD_u64_u64_296_update_completed_] 
        // curr_quotientx_x0x_xlcssax_xix_xi
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_294_sample_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_294_sample_completed_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_294_update_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_294_update_completed_] 
        // implicit reference
        R_curr_quotientx_x0x_xlcssax_xix_xi_294_sample_start_ <-& ($entry)
        R_curr_quotientx_x0x_xlcssax_xix_xi_294_sample_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_294_sample_start_)
        R_curr_quotientx_x0x_xlcssax_xix_xi_294_update_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_294_sample_completed_)
        R_curr_quotientx_x0x_xlcssax_xix_xi_294_update_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_294_update_start_)
        // quotientx_x04x_xix_xi
        $T[R_quotientx_x04x_xix_xi_295_sample_start_] 
        $T[R_quotientx_x04x_xix_xi_295_sample_completed_] 
        $T[R_quotientx_x04x_xix_xi_295_update_start_] 
        $T[R_quotientx_x04x_xix_xi_295_update_completed_] 
        // implicit reference
        R_quotientx_x04x_xix_xi_295_sample_start_ <-& ($entry)
        R_quotientx_x04x_xix_xi_295_sample_completed_ <-& (R_quotientx_x04x_xix_xi_295_sample_start_)
        R_quotientx_x04x_xix_xi_295_update_start_ <-& (R_quotientx_x04x_xix_xi_295_sample_completed_)
        R_quotientx_x04x_xix_xi_295_update_completed_ <-& (R_quotientx_x04x_xix_xi_295_update_start_)
        ADD_u64_u64_296_sample_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_294_update_completed_)
        ADD_u64_u64_296_sample_start_ <-& (R_quotientx_x04x_xix_xi_295_update_completed_)
        ;;[ADD_u64_u64_296_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_296_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_296_sample_start_ &-> (ADD_u64_u64_296_Sample)
        ADD_u64_u64_296_sample_completed_ <-& (ADD_u64_u64_296_Sample)
        ADD_u64_u64_296_sample_completed_ &-> ($null)
        ADD_u64_u64_296_update_start_ &-> (ADD_u64_u64_296_Update)
        ADD_u64_u64_296_update_completed_ <-& (ADD_u64_u64_296_Update)
        // Target expression
        // (as target) iNsTr_44
        // iNsTr_44
        // implicit reference
        // 		iNsTr_45 := (xx_x05x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
        //  file prog.linked.opt.aa, line 148
        // Source expression
        // (xx_x05x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
        $T[SUB_u64_u64_301_sample_start_] 
        $T[SUB_u64_u64_301_sample_completed_] 
        $T[SUB_u64_u64_301_update_start_] 
        $T[SUB_u64_u64_301_update_completed_] 
        // xx_x05x_xix_xi
        $T[R_xx_x05x_xix_xi_299_sample_start_] 
        $T[R_xx_x05x_xix_xi_299_sample_completed_] 
        $T[R_xx_x05x_xix_xi_299_update_start_] 
        $T[R_xx_x05x_xix_xi_299_update_completed_] 
        // implicit reference
        R_xx_x05x_xix_xi_299_sample_start_ <-& ($entry)
        R_xx_x05x_xix_xi_299_sample_completed_ <-& (R_xx_x05x_xix_xi_299_sample_start_)
        R_xx_x05x_xix_xi_299_update_start_ <-& (R_xx_x05x_xix_xi_299_sample_completed_)
        R_xx_x05x_xix_xi_299_update_completed_ <-& (R_xx_x05x_xix_xi_299_update_start_)
        // shifted_divisorx_x0x_xlcssax_xix_xi
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_300_sample_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_300_sample_completed_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_300_update_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_300_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x0x_xlcssax_xix_xi_300_sample_start_ <-& ($entry)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_300_sample_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_300_sample_start_)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_300_update_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_300_sample_completed_)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_300_update_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_300_update_start_)
        SUB_u64_u64_301_sample_start_ <-& (R_xx_x05x_xix_xi_299_update_completed_)
        SUB_u64_u64_301_sample_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_300_update_completed_)
        ;;[SUB_u64_u64_301_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u64_u64_301_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u64_u64_301_sample_start_ &-> (SUB_u64_u64_301_Sample)
        SUB_u64_u64_301_sample_completed_ <-& (SUB_u64_u64_301_Sample)
        SUB_u64_u64_301_sample_completed_ &-> ($null)
        SUB_u64_u64_301_update_start_ &-> (SUB_u64_u64_301_Update)
        SUB_u64_u64_301_update_completed_ <-& (SUB_u64_u64_301_Update)
        // Target expression
        // (as target) iNsTr_45
        // iNsTr_45
        // implicit reference
        // 		iNsTr_46 := (iNsTr_45 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
        //  file prog.linked.opt.aa, line 149
        // Source expression
        // (iNsTr_45 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
        $T[ULT_u64_u1_307_sample_start_] 
        $T[ULT_u64_u1_307_sample_completed_] 
        $T[ULT_u64_u1_307_update_start_] 
        $T[ULT_u64_u1_307_update_completed_] 
        // iNsTr_45
        $T[R_iNsTr_45_304_sample_start_] 
        $T[R_iNsTr_45_304_sample_completed_] 
        $T[R_iNsTr_45_304_update_start_] 
        $T[R_iNsTr_45_304_update_completed_] 
        // implicit reference
        R_iNsTr_45_304_sample_start_ <-& (SUB_u64_u64_301_update_completed_)
        R_iNsTr_45_304_sample_completed_ <-& (R_iNsTr_45_304_sample_start_)
        R_iNsTr_45_304_update_start_ <-& (R_iNsTr_45_304_sample_completed_)
        R_iNsTr_45_304_update_completed_ <-& (R_iNsTr_45_304_update_start_)
        ULT_u64_u1_307_sample_start_ <-& (R_iNsTr_45_304_update_completed_)
        ;;[ULT_u64_u1_307_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u64_u1_307_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u64_u1_307_sample_start_ &-> (ULT_u64_u1_307_Sample)
        ULT_u64_u1_307_sample_completed_ <-& (ULT_u64_u1_307_Sample)
        ULT_u64_u1_307_sample_completed_ &-> ($null)
        ULT_u64_u1_307_update_start_ &-> (ULT_u64_u1_307_Update)
        ULT_u64_u1_307_update_completed_ <-& (ULT_u64_u1_307_Update)
        // Target expression
        // (as target) iNsTr_46
        // iNsTr_46
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_297_to_assign_stmt_308__entry__ |-> (assign_stmt_297_to_assign_stmt_308)
      assign_stmt_297_to_assign_stmt_308__exit__ <-| (assign_stmt_297_to_assign_stmt_308)
      // if-statement  
      //  file prog.linked.opt.aa, line 150
      ;;[if_stmt_309_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_309__entry__ |-> (if_stmt_309_dead_link)
      if_stmt_309__exit__ <-| (if_stmt_309_dead_link)
      ;;[if_stmt_309_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_309__entry__ |-> (if_stmt_309_eval_test)
      $P [R_iNsTr_46_310_place]
      R_iNsTr_46_310_place <-| (if_stmt_309_eval_test)
      ;;[if_stmt_309_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_309_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_46_310_place |-> (if_stmt_309_if_link if_stmt_309_else_link)
      $P [xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit]
      xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit <-| (if_stmt_309_if_link)
      $P [xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi]
      xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi <-| (if_stmt_309_else_link)
      ::[assign_stmt_336_to_assign_stmt_372] 
      {
        // 		iNsTr_28 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - quotientx_x1x_xix_xi)
        //  file prog.linked.opt.aa, line 162
        // Source expression
        // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - quotientx_x1x_xix_xi)
        $T[SUB_u64_u64_335_sample_start_] 
        $T[SUB_u64_u64_335_sample_completed_] 
        $T[SUB_u64_u64_335_update_start_] 
        $T[SUB_u64_u64_335_update_completed_] 
        // quotientx_x1x_xix_xi
        $T[R_quotientx_x1x_xix_xi_334_sample_start_] 
        $T[R_quotientx_x1x_xix_xi_334_sample_completed_] 
        $T[R_quotientx_x1x_xix_xi_334_update_start_] 
        $T[R_quotientx_x1x_xix_xi_334_update_completed_] 
        // implicit reference
        R_quotientx_x1x_xix_xi_334_sample_start_ <-& ($entry)
        R_quotientx_x1x_xix_xi_334_sample_completed_ <-& (R_quotientx_x1x_xix_xi_334_sample_start_)
        R_quotientx_x1x_xix_xi_334_update_start_ <-& (R_quotientx_x1x_xix_xi_334_sample_completed_)
        R_quotientx_x1x_xix_xi_334_update_completed_ <-& (R_quotientx_x1x_xix_xi_334_update_start_)
        SUB_u64_u64_335_sample_start_ <-& (R_quotientx_x1x_xix_xi_334_update_completed_)
        ;;[SUB_u64_u64_335_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u64_u64_335_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u64_u64_335_sample_start_ &-> (SUB_u64_u64_335_Sample)
        SUB_u64_u64_335_sample_completed_ <-& (SUB_u64_u64_335_Sample)
        SUB_u64_u64_335_sample_completed_ &-> ($null)
        SUB_u64_u64_335_update_start_ &-> (SUB_u64_u64_335_Update)
        SUB_u64_u64_335_update_completed_ <-& (SUB_u64_u64_335_Update)
        // Target expression
        // (as target) iNsTr_28
        // iNsTr_28
        // implicit reference
        // 		iNsTr_29 := ( $mux iNsTr_25 iNsTr_28  quotientx_x1x_xix_xi ) 
        //  file prog.linked.opt.aa, line 163
        // Source expression
        // ( $mux iNsTr_25 iNsTr_28  quotientx_x1x_xix_xi ) 
        $T[MUX_341_sample_start_] 
        $T[MUX_341_sample_completed_] 
        $T[MUX_341_update_start_] 
        $T[MUX_341_update_completed_] 
        // iNsTr_25
        $T[R_iNsTr_25_338_sample_start_] 
        $T[R_iNsTr_25_338_sample_completed_] 
        $T[R_iNsTr_25_338_update_start_] 
        $T[R_iNsTr_25_338_update_completed_] 
        // implicit reference
        R_iNsTr_25_338_sample_start_ <-& ($entry)
        R_iNsTr_25_338_sample_completed_ <-& (R_iNsTr_25_338_sample_start_)
        R_iNsTr_25_338_update_start_ <-& (R_iNsTr_25_338_sample_completed_)
        R_iNsTr_25_338_update_completed_ <-& (R_iNsTr_25_338_update_start_)
        // iNsTr_28
        $T[R_iNsTr_28_339_sample_start_] 
        $T[R_iNsTr_28_339_sample_completed_] 
        $T[R_iNsTr_28_339_update_start_] 
        $T[R_iNsTr_28_339_update_completed_] 
        // implicit reference
        R_iNsTr_28_339_sample_start_ <-& (SUB_u64_u64_335_update_completed_)
        R_iNsTr_28_339_sample_completed_ <-& (R_iNsTr_28_339_sample_start_)
        R_iNsTr_28_339_update_start_ <-& (R_iNsTr_28_339_sample_completed_)
        R_iNsTr_28_339_update_completed_ <-& (R_iNsTr_28_339_update_start_)
        // quotientx_x1x_xix_xi
        $T[R_quotientx_x1x_xix_xi_340_sample_start_] 
        $T[R_quotientx_x1x_xix_xi_340_sample_completed_] 
        $T[R_quotientx_x1x_xix_xi_340_update_start_] 
        $T[R_quotientx_x1x_xix_xi_340_update_completed_] 
        // implicit reference
        R_quotientx_x1x_xix_xi_340_sample_start_ <-& ($entry)
        R_quotientx_x1x_xix_xi_340_sample_completed_ <-& (R_quotientx_x1x_xix_xi_340_sample_start_)
        R_quotientx_x1x_xix_xi_340_update_start_ <-& (R_quotientx_x1x_xix_xi_340_sample_completed_)
        R_quotientx_x1x_xix_xi_340_update_completed_ <-& (R_quotientx_x1x_xix_xi_340_update_start_)
        MUX_341_sample_start_ <-& (R_iNsTr_25_338_update_completed_)
        MUX_341_sample_start_ <-& (R_iNsTr_28_339_update_completed_)
        MUX_341_sample_start_ <-& (R_quotientx_x1x_xix_xi_340_update_completed_)
        ;;[MUX_341_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_341_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_341_sample_start_ &-> (MUX_341_start)
        MUX_341_sample_completed_ <-& (MUX_341_start)
        MUX_341_update_start_ &-> (MUX_341_complete)
        MUX_341_update_completed_ <-& (MUX_341_complete)
        MUX_341_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_29
        // iNsTr_29
        // implicit reference
        // 		iNsTr_30 := ($cast ($uint<32>) iNsTr_29 )
        //  file prog.linked.opt.aa, line 164
        // Source expression
        // ($cast ($uint<32>) iNsTr_29 )
        $T[type_cast_345_sample_start_] 
        $T[type_cast_345_sample_completed_] 
        $T[type_cast_345_update_start_] 
        $T[type_cast_345_update_completed_] 
        // iNsTr_29
        $T[R_iNsTr_29_344_sample_start_] 
        $T[R_iNsTr_29_344_sample_completed_] 
        $T[R_iNsTr_29_344_update_start_] 
        $T[R_iNsTr_29_344_update_completed_] 
        // implicit reference
        R_iNsTr_29_344_sample_start_ <-& (MUX_341_update_completed_)
        R_iNsTr_29_344_sample_completed_ <-& (R_iNsTr_29_344_sample_start_)
        R_iNsTr_29_344_update_start_ <-& (R_iNsTr_29_344_sample_completed_)
        R_iNsTr_29_344_update_completed_ <-& (R_iNsTr_29_344_update_start_)
        type_cast_345_sample_start_ <-& (R_iNsTr_29_344_update_completed_)
        ;;[type_cast_345_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_345_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_345_sample_start_ &-> (type_cast_345_Sample)
        type_cast_345_sample_completed_ <-& (type_cast_345_Sample)
        type_cast_345_sample_completed_ &-> ($null)
        type_cast_345_update_start_ &-> (type_cast_345_Update)
        type_cast_345_update_completed_ <-& (type_cast_345_Update)
        // Target expression
        // (as target) iNsTr_30
        // iNsTr_30
        // implicit reference
        // 		->(iNsTr_13) := iNsTr_1
        //  file prog.linked.opt.aa, line 165
        // Source expression
        // iNsTr_1
        $T[R_iNsTr_1_349_sample_start_] 
        $T[R_iNsTr_1_349_sample_completed_] 
        $T[R_iNsTr_1_349_update_start_] 
        $T[R_iNsTr_1_349_update_completed_] 
        // implicit reference
        R_iNsTr_1_349_sample_start_ <-& ($entry)
        R_iNsTr_1_349_sample_completed_ <-& (R_iNsTr_1_349_sample_start_)
        R_iNsTr_1_349_update_start_ <-& (R_iNsTr_1_349_sample_completed_)
        R_iNsTr_1_349_update_completed_ <-& (R_iNsTr_1_349_update_start_)
        // Target expression
        // ->(iNsTr_13)
        $T[ptr_deref_348_sample_start_] 
        $T[ptr_deref_348_sample_completed_] 
        $T[ptr_deref_348_update_start_] 
        $T[ptr_deref_348_update_completed_] 
        $T[ptr_deref_348_base_address_calculated] 
        // iNsTr_13
        $T[R_iNsTr_13_347_sample_start_] 
        $T[R_iNsTr_13_347_sample_completed_] 
        $T[R_iNsTr_13_347_update_start_] 
        $T[R_iNsTr_13_347_update_completed_] 
        // implicit reference
        R_iNsTr_13_347_sample_start_ <-& ($entry)
        R_iNsTr_13_347_sample_completed_ <-& (R_iNsTr_13_347_sample_start_)
        R_iNsTr_13_347_update_start_ <-& (R_iNsTr_13_347_sample_completed_)
        R_iNsTr_13_347_update_completed_ <-& (R_iNsTr_13_347_update_start_)
        $T[ptr_deref_348_word_address_calculated] 
        $T[ptr_deref_348_root_address_calculated] 
        $T[ptr_deref_348_base_address_resized] 
        ;;[ptr_deref_348_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_348_base_address_calculated &-> (ptr_deref_348_base_addr_resize)
        ptr_deref_348_base_address_resized <-& (ptr_deref_348_base_addr_resize)
        ;;[ptr_deref_348_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_348_base_address_resized &-> (ptr_deref_348_base_plus_offset)
        ptr_deref_348_root_address_calculated <-& (ptr_deref_348_base_plus_offset)
        ;;[ptr_deref_348_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_348_root_address_calculated &-> (ptr_deref_348_word_addrgen)
        ptr_deref_348_word_address_calculated <-& (ptr_deref_348_word_addrgen)
        ;;[ptr_deref_348_Sample] 
        {
          ;;[ptr_deref_348_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_348_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_348_sample_start_ <-& (ptr_deref_348_word_address_calculated)
        ptr_deref_348_sample_start_ &-> (ptr_deref_348_Sample)
        ptr_deref_348_sample_completed_ <-& (ptr_deref_348_Sample)
        ptr_deref_348_sample_completed_ &-> ($null)
        ptr_deref_348_update_start_ &-> (ptr_deref_348_Update)
        ptr_deref_348_update_completed_ <-& (ptr_deref_348_Update)
        ptr_deref_348_base_address_calculated <-& (R_iNsTr_13_347_update_completed_)
        ptr_deref_348_sample_start_ <-& (ptr_deref_348_base_address_calculated)
        ptr_deref_348_sample_start_ <-& (R_iNsTr_1_349_update_completed_)
        // 		iNsTr_32 := (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 166
        // Source expression
        // (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_355_sample_start_] 
        $T[ADD_u32_u32_355_sample_completed_] 
        $T[ADD_u32_u32_355_update_start_] 
        $T[ADD_u32_u32_355_update_completed_] 
        // iNsTr_2
        $T[R_iNsTr_2_352_sample_start_] 
        $T[R_iNsTr_2_352_sample_completed_] 
        $T[R_iNsTr_2_352_update_start_] 
        $T[R_iNsTr_2_352_update_completed_] 
        // implicit reference
        R_iNsTr_2_352_sample_start_ <-& ($entry)
        R_iNsTr_2_352_sample_completed_ <-& (R_iNsTr_2_352_sample_start_)
        R_iNsTr_2_352_update_start_ <-& (R_iNsTr_2_352_sample_completed_)
        R_iNsTr_2_352_update_completed_ <-& (R_iNsTr_2_352_update_start_)
        ADD_u32_u32_355_sample_start_ <-& (R_iNsTr_2_352_update_completed_)
        ;;[ADD_u32_u32_355_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_355_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_355_sample_start_ &-> (ADD_u32_u32_355_Sample)
        ADD_u32_u32_355_sample_completed_ <-& (ADD_u32_u32_355_Sample)
        ADD_u32_u32_355_sample_completed_ &-> ($null)
        ADD_u32_u32_355_update_start_ &-> (ADD_u32_u32_355_Update)
        ADD_u32_u32_355_update_completed_ <-& (ADD_u32_u32_355_Update)
        // Target expression
        // (as target) iNsTr_32
        // iNsTr_32
        // implicit reference
        // 		iNsTr_33 := (iNsTr_32 == ($bitcast ($uint<32>) _b00000000000000000000000000001010  ))
        //  file prog.linked.opt.aa, line 167
        // Source expression
        // (iNsTr_32 == ($bitcast ($uint<32>) _b00000000000000000000000000001010  ))
        $T[EQ_u32_u1_361_sample_start_] 
        $T[EQ_u32_u1_361_sample_completed_] 
        $T[EQ_u32_u1_361_update_start_] 
        $T[EQ_u32_u1_361_update_completed_] 
        // iNsTr_32
        $T[R_iNsTr_32_358_sample_start_] 
        $T[R_iNsTr_32_358_sample_completed_] 
        $T[R_iNsTr_32_358_update_start_] 
        $T[R_iNsTr_32_358_update_completed_] 
        // implicit reference
        R_iNsTr_32_358_sample_start_ <-& (ADD_u32_u32_355_update_completed_)
        R_iNsTr_32_358_sample_completed_ <-& (R_iNsTr_32_358_sample_start_)
        R_iNsTr_32_358_update_start_ <-& (R_iNsTr_32_358_sample_completed_)
        R_iNsTr_32_358_update_completed_ <-& (R_iNsTr_32_358_update_start_)
        EQ_u32_u1_361_sample_start_ <-& (R_iNsTr_32_358_update_completed_)
        ;;[EQ_u32_u1_361_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_361_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_361_sample_start_ &-> (EQ_u32_u1_361_Sample)
        EQ_u32_u1_361_sample_completed_ <-& (EQ_u32_u1_361_Sample)
        EQ_u32_u1_361_sample_completed_ &-> ($null)
        EQ_u32_u1_361_update_start_ &-> (EQ_u32_u1_361_Update)
        EQ_u32_u1_361_update_completed_ <-& (EQ_u32_u1_361_Update)
        // Target expression
        // (as target) iNsTr_33
        // iNsTr_33
        // implicit reference
        // 		iNsTr_34 := ( $mux iNsTr_33 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_32 ) 
        //  file prog.linked.opt.aa, line 168
        // Source expression
        // ( $mux iNsTr_33 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_32 ) 
        $T[MUX_368_sample_start_] 
        $T[MUX_368_sample_completed_] 
        $T[MUX_368_update_start_] 
        $T[MUX_368_update_completed_] 
        // iNsTr_33
        $T[R_iNsTr_33_364_sample_start_] 
        $T[R_iNsTr_33_364_sample_completed_] 
        $T[R_iNsTr_33_364_update_start_] 
        $T[R_iNsTr_33_364_update_completed_] 
        // implicit reference
        R_iNsTr_33_364_sample_start_ <-& (EQ_u32_u1_361_update_completed_)
        R_iNsTr_33_364_sample_completed_ <-& (R_iNsTr_33_364_sample_start_)
        R_iNsTr_33_364_update_start_ <-& (R_iNsTr_33_364_sample_completed_)
        R_iNsTr_33_364_update_completed_ <-& (R_iNsTr_33_364_update_start_)
        // iNsTr_32
        $T[R_iNsTr_32_367_sample_start_] 
        $T[R_iNsTr_32_367_sample_completed_] 
        $T[R_iNsTr_32_367_update_start_] 
        $T[R_iNsTr_32_367_update_completed_] 
        // implicit reference
        R_iNsTr_32_367_sample_start_ <-& (ADD_u32_u32_355_update_completed_)
        R_iNsTr_32_367_sample_completed_ <-& (R_iNsTr_32_367_sample_start_)
        R_iNsTr_32_367_update_start_ <-& (R_iNsTr_32_367_sample_completed_)
        R_iNsTr_32_367_update_completed_ <-& (R_iNsTr_32_367_update_start_)
        MUX_368_sample_start_ <-& (R_iNsTr_33_364_update_completed_)
        MUX_368_sample_start_ <-& (R_iNsTr_32_367_update_completed_)
        ;;[MUX_368_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_368_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_368_sample_start_ &-> (MUX_368_start)
        MUX_368_sample_completed_ <-& (MUX_368_start)
        MUX_368_update_start_ &-> (MUX_368_complete)
        MUX_368_update_completed_ <-& (MUX_368_complete)
        MUX_368_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_34
        // iNsTr_34
        // implicit reference
        // 		LPbuff_ptr := iNsTr_34
        //  file prog.linked.opt.aa, line 169
        // Source expression
        // iNsTr_34
        $T[R_iNsTr_34_371_sample_start_] 
        $T[R_iNsTr_34_371_sample_completed_] 
        $T[R_iNsTr_34_371_update_start_] 
        $T[R_iNsTr_34_371_update_completed_] 
        // implicit reference
        R_iNsTr_34_371_sample_start_ <-& (MUX_368_update_completed_)
        R_iNsTr_34_371_sample_completed_ <-& (R_iNsTr_34_371_sample_start_)
        R_iNsTr_34_371_update_start_ <-& (R_iNsTr_34_371_sample_completed_)
        R_iNsTr_34_371_update_completed_ <-& (R_iNsTr_34_371_update_start_)
        // Target expression
        // (as target) LPbuff_ptr
        $T[STORE_LPbuff_ptr_370_sample_start_] 
        $T[STORE_LPbuff_ptr_370_sample_completed_] 
        $T[STORE_LPbuff_ptr_370_update_start_] 
        $T[STORE_LPbuff_ptr_370_update_completed_] 
        // LPbuff_ptr
        $T[STORE_LPbuff_ptr_370_word_address_calculated] 
        $T[STORE_LPbuff_ptr_370_root_address_calculated] 
        STORE_LPbuff_ptr_370_word_address_calculated <-& (STORE_LPbuff_ptr_370_root_address_calculated)
        ;;[STORE_LPbuff_ptr_370_Sample] 
        {
          ;;[STORE_LPbuff_ptr_370_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_LPbuff_ptr_370_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_LPbuff_ptr_370_sample_start_ <-& (STORE_LPbuff_ptr_370_word_address_calculated)
        STORE_LPbuff_ptr_370_sample_start_ &-> (STORE_LPbuff_ptr_370_Sample)
        STORE_LPbuff_ptr_370_sample_completed_ <-& (STORE_LPbuff_ptr_370_Sample)
        STORE_LPbuff_ptr_370_sample_completed_ &-> ($null)
        STORE_LPbuff_ptr_370_update_start_ &-> (STORE_LPbuff_ptr_370_Update)
        STORE_LPbuff_ptr_370_update_completed_ <-& (STORE_LPbuff_ptr_370_Update)
        STORE_LPbuff_ptr_370_sample_start_ <-& (R_iNsTr_34_371_update_completed_)
        // load-store dependencies..
      }
      assign_stmt_336_to_assign_stmt_372__entry__ |-> (assign_stmt_336_to_assign_stmt_372)
      assign_stmt_336_to_assign_stmt_372__exit__ <-| (assign_stmt_336_to_assign_stmt_372)
      ::[assign_stmt_375] 
      {
        // 		LPout_pipe := iNsTr_30
        //  file prog.linked.opt.aa, line 170
        // Source expression
        // iNsTr_30
        $T[R_iNsTr_30_374_sample_start_] 
        $T[R_iNsTr_30_374_sample_completed_] 
        $T[R_iNsTr_30_374_update_start_] 
        $T[R_iNsTr_30_374_update_completed_] 
        // implicit reference
        R_iNsTr_30_374_sample_start_ <-& ($entry)
        R_iNsTr_30_374_sample_completed_ <-& (R_iNsTr_30_374_sample_start_)
        R_iNsTr_30_374_update_start_ <-& (R_iNsTr_30_374_sample_completed_)
        R_iNsTr_30_374_update_completed_ <-& (R_iNsTr_30_374_update_start_)
        // Target expression
        // (as target) LPout_pipe
        $T[WPIPE_LPout_pipe_373_sample_start_] 
        $T[WPIPE_LPout_pipe_373_sample_completed_] 
        $T[WPIPE_LPout_pipe_373_update_start_] 
        $T[WPIPE_LPout_pipe_373_update_completed_] 
        ;;[WPIPE_LPout_pipe_373_Sample] 
        {
          // pipe write sample-start LPout_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_LPout_pipe_373_Update] 
        {
          // pipe write update (complete) LPout_pipe
          $T [req] $T [ack] 
        }
        WPIPE_LPout_pipe_373_sample_start_ &-> (WPIPE_LPout_pipe_373_Sample)
        WPIPE_LPout_pipe_373_sample_completed_ <-& (WPIPE_LPout_pipe_373_Sample)
        WPIPE_LPout_pipe_373_sample_completed_ &-> ($null)
        WPIPE_LPout_pipe_373_update_start_ &-> (WPIPE_LPout_pipe_373_Update)
        WPIPE_LPout_pipe_373_update_completed_ <-& (WPIPE_LPout_pipe_373_Update)
        WPIPE_LPout_pipe_373_sample_start_ <-& (R_iNsTr_30_374_update_completed_)
        // barrier: 		LPout_pipe := iNsTr_30
        // load-store dependencies..
        // pipe read/write dependencies for pipe LPout_pipe
      }
      assign_stmt_375__entry__ |-> (assign_stmt_375)
      assign_stmt_375__exit__ <-| (assign_stmt_375)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 109
      ;;[merge_stmt_190_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_190__entry__ |-> (merge_stmt_190_dead_link)
      merge_stmt_190__exit__ <-| (merge_stmt_190_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 109  --------------------------
      ||[bb_0_bbx_xnph6x_xix_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bbx_xnph6x_xix_xix_xpreheader |-> (bb_0_bbx_xnph6x_xix_xix_xpreheader_PhiReq)
      $P [merge_stmt_190_PhiReqMerge] 
      merge_stmt_190_PhiReqMerge <-| ( bb_0_bbx_xnph6x_xix_xix_xpreheader_PhiReq )
      ||[merge_stmt_190_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_190_PhiReqMerge |-> (merge_stmt_190_PhiAck)
      merge_stmt_190__exit__  <-| (merge_stmt_190_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 109  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 112
      //---------------------   merge statement  file prog.linked.opt.aa, line 112  --------------------------
      ||[bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_193] 
        {
          ||[phi_stmt_193_sources] 
          {
            // sources for 			$phi xx_x05x_xix_xi := 			  ($cast ($uint<64>) iNsTr_45 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) iNsTr_24 ) $on bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_45 )
            ;;[type_cast_196] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<64>) iNsTr_24 )
            ;;[type_cast_198] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_193_req] 
        }
        ;;[phi_stmt_199] 
        {
          ||[phi_stmt_199_sources] 
          {
            // sources for 			$phi quotientx_x04x_xix_xi := 			  ($cast ($uint<64>) iNsTr_44 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_44 )
            ;;[type_cast_202] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_199_req] 
        }
      }
      bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi |-> (bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi_PhiReq)
      ||[xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_193] 
        {
          ||[phi_stmt_193_sources] 
          {
            // sources for 			$phi xx_x05x_xix_xi := 			  ($cast ($uint<64>) iNsTr_45 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) iNsTr_24 ) $on bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_45 )
            ;;[type_cast_196] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<64>) iNsTr_24 )
            ;;[type_cast_198] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_193_req] 
        }
        ;;[phi_stmt_199] 
        {
          ||[phi_stmt_199_sources] 
          {
            // sources for 			$phi quotientx_x04x_xix_xi := 			  ($cast ($uint<64>) iNsTr_44 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_44 )
            ;;[type_cast_202] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_199_req] 
        }
      }
      xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi |-> (xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq)
      $P [merge_stmt_192_PhiReqMerge] 
      merge_stmt_192_PhiReqMerge <-| ( bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi_PhiReq  xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq )
      ||[merge_stmt_192_PhiAck] 
      {
        $T [phi_stmt_193_ack] 
        $T [phi_stmt_199_ack] 
      }
      merge_stmt_192_PhiReqMerge |-> (merge_stmt_192_PhiAck)
      merge_stmt_192__exit__  <-| (merge_stmt_192_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 112  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 123
      ;;[merge_stmt_225_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_225__entry__ |-> (merge_stmt_225_dead_link)
      merge_stmt_225__exit__ <-| (merge_stmt_225_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 123  --------------------------
      ||[bbx_xnph6x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph6x_xix_xi_bbx_xnphx_xix_xix_xpreheader |-> (bbx_xnph6x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq)
      $P [merge_stmt_225_PhiReqMerge] 
      merge_stmt_225_PhiReqMerge <-| ( bbx_xnph6x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq )
      ||[merge_stmt_225_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_225_PhiReqMerge |-> (merge_stmt_225_PhiAck)
      merge_stmt_225__exit__  <-| (merge_stmt_225_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 123  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 126
      //---------------------   merge statement  file prog.linked.opt.aa, line 126  --------------------------
      ||[bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_228] 
        {
          ||[phi_stmt_228_sources] 
          {
            // sources for 			$phi shifted_divisorx_x02x_xix_xi := 			  ($cast ($uint<64>) iNsTr_48 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_48 )
            ;;[type_cast_231] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_228_req] 
        }
        ;;[phi_stmt_235] 
        {
          ||[phi_stmt_235_sources] 
          {
            // sources for 			$phi curr_quotientx_x01x_xix_xi := 			  ($cast ($uint<64>) iNsTr_49 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_49 )
            ;;[type_cast_238] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_235_req] 
        }
      }
      bbx_xnphx_xix_xi_bbx_xnphx_xix_xi |-> (bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq)
      ||[bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_228] 
        {
          ||[phi_stmt_228_sources] 
          {
            // sources for 			$phi shifted_divisorx_x02x_xix_xi := 			  ($cast ($uint<64>) iNsTr_48 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_48 )
            ;;[type_cast_231] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_228_req] 
        }
        ;;[phi_stmt_235] 
        {
          ||[phi_stmt_235_sources] 
          {
            // sources for 			$phi curr_quotientx_x01x_xix_xi := 			  ($cast ($uint<64>) iNsTr_49 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_49 )
            ;;[type_cast_238] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_235_req] 
        }
      }
      bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi |-> (bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq)
      $P [merge_stmt_227_PhiReqMerge] 
      merge_stmt_227_PhiReqMerge <-| ( bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq  bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq )
      ||[merge_stmt_227_PhiAck] 
      {
        $T [phi_stmt_228_ack] 
        $T [phi_stmt_235_ack] 
      }
      merge_stmt_227_PhiReqMerge |-> (merge_stmt_227_PhiAck)
      merge_stmt_227__exit__  <-| (merge_stmt_227_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 126  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 138
      ;;[merge_stmt_266_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_266__entry__ |-> (merge_stmt_266_dead_link)
      merge_stmt_266__exit__ <-| (merge_stmt_266_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 138  --------------------------
      ||[bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_267] 
        {
          ||[phi_stmt_267_sources] 
          {
            // sources for 			$phi xx_xlcssa1 := 			  ($cast ($uint<64>) iNsTr_49 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_49 )
            ;;[type_cast_270] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_267_req] 
        }
        ;;[phi_stmt_271] 
        {
          ||[phi_stmt_271_sources] 
          {
            // sources for 			$phi xx_xlcssa := 			  ($cast ($uint<64>) iNsTr_48 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_48 )
            ;;[type_cast_274] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_271_req] 
        }
      }
      bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit |-> (bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq)
      $P [merge_stmt_266_PhiReqMerge] 
      merge_stmt_266_PhiReqMerge <-| ( bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq )
      ||[merge_stmt_266_PhiAck] 
      {
        $T [phi_stmt_267_ack] 
        $T [phi_stmt_271_ack] 
      }
      merge_stmt_266_PhiReqMerge |-> (merge_stmt_266_PhiAck)
      merge_stmt_266__exit__  <-| (merge_stmt_266_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 138  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 143
      //---------------------   merge statement  file prog.linked.opt.aa, line 143  --------------------------
      ||[bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_278] 
        {
          ||[phi_stmt_278_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) xx_xlcssa )
            ;;[type_cast_284] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_278_req] 
        }
        ;;[phi_stmt_285] 
        {
          ||[phi_stmt_285_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) xx_xlcssa1 )
            ;;[type_cast_291] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_285_req] 
        }
      }
      bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi |-> (bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq)
      ||[xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_278] 
        {
          ||[phi_stmt_278_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) xx_xlcssa )
            ;;[type_cast_284] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_278_req] 
        }
        ;;[phi_stmt_285] 
        {
          ||[phi_stmt_285_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) xx_xlcssa1 )
            ;;[type_cast_291] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_285_req] 
        }
      }
      xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi |-> (xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq)
      $P [merge_stmt_277_PhiReqMerge] 
      merge_stmt_277_PhiReqMerge <-| ( bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq  xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq )
      ||[merge_stmt_277_PhiAck] 
      {
        $T [phi_stmt_278_ack] 
        $T [phi_stmt_285_ack] 
      }
      merge_stmt_277_PhiReqMerge |-> (merge_stmt_277_PhiAck)
      merge_stmt_277__exit__  <-| (merge_stmt_277_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 143  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 155
      ;;[merge_stmt_315_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_315__entry__ |-> (merge_stmt_315_dead_link)
      merge_stmt_315__exit__ <-| (merge_stmt_315_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 155  --------------------------
      ||[xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_316] 
        {
          ||[phi_stmt_316_sources] 
          {
            // sources for 			$phi xx_xlcssa2 := 			  ($cast ($uint<64>) iNsTr_44 ) $on xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_44 )
            ;;[type_cast_319] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_316_req] 
        }
      }
      xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit |-> (xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit_PhiReq)
      $P [merge_stmt_315_PhiReqMerge] 
      merge_stmt_315_PhiReqMerge <-| ( xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit_PhiReq )
      ||[merge_stmt_315_PhiAck] 
      {
        $T [phi_stmt_316_ack] 
      }
      merge_stmt_315_PhiReqMerge |-> (merge_stmt_315_PhiAck)
      merge_stmt_315__exit__  <-| (merge_stmt_315_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 155  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 159
      //---------------------   merge statement  file prog.linked.opt.aa, line 159  --------------------------
      ||[bb_0_divideSignedx_xexit_PhiReq] 
      {
        ;;[phi_stmt_323] 
        {
          ||[phi_stmt_323_sources] 
          {
            // sources for 			$phi quotientx_x1x_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_divideSignedx_xexit			  ($cast ($uint<64>) xx_xlcssa2 ) $on divideSignedx_xexitx_xloopexit_divideSignedx_xexit // type of target is $uint<64>
            // ($cast ($uint<64>) xx_xlcssa2 )
            ;;[type_cast_329] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_323_req] 
        }
      }
      bb_0_divideSignedx_xexit |-> (bb_0_divideSignedx_xexit_PhiReq)
      ||[divideSignedx_xexitx_xloopexit_divideSignedx_xexit_PhiReq] 
      {
        ;;[phi_stmt_323] 
        {
          ||[phi_stmt_323_sources] 
          {
            // sources for 			$phi quotientx_x1x_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_divideSignedx_xexit			  ($cast ($uint<64>) xx_xlcssa2 ) $on divideSignedx_xexitx_xloopexit_divideSignedx_xexit // type of target is $uint<64>
            // ($cast ($uint<64>) xx_xlcssa2 )
            ;;[type_cast_329] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_323_req] 
        }
      }
      divideSignedx_xexitx_xloopexit_divideSignedx_xexit |-> (divideSignedx_xexitx_xloopexit_divideSignedx_xexit_PhiReq)
      $P [merge_stmt_322_PhiReqMerge] 
      merge_stmt_322_PhiReqMerge <-| ( bb_0_divideSignedx_xexit_PhiReq  divideSignedx_xexitx_xloopexit_divideSignedx_xexit_PhiReq )
      ||[merge_stmt_322_PhiAck] 
      {
        $T [phi_stmt_323_ack] 
      }
      merge_stmt_322_PhiReqMerge |-> (merge_stmt_322_PhiAck)
      merge_stmt_322__exit__  <-| (merge_stmt_322_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 159  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 172
      //---------------------   merge statement  file prog.linked.opt.aa, line 172  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_377_PhiReqMerge] 
      merge_stmt_377_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_377_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_377_PhiReqMerge |-> (merge_stmt_377_PhiAck)
      merge_stmt_377__exit__  <-| (merge_stmt_377_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 172  --------------------------
      assign_stmt_49__entry__ <-| (branch_block_stmt_46__entry__)
      assign_stmt_52_to_assign_stmt_183__entry__ <-| (assign_stmt_49__exit__)
      if_stmt_184__entry__ <-| (assign_stmt_52_to_assign_stmt_183__exit__)
      merge_stmt_190__entry__ <-| (if_stmt_184__exit__)
      bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi <-| (merge_stmt_190__exit__)
      assign_stmt_212_to_assign_stmt_218__entry__ <-| (merge_stmt_192__exit__)
      if_stmt_219__entry__ <-| (assign_stmt_212_to_assign_stmt_218__exit__)
      merge_stmt_225__entry__ <-| (if_stmt_219__exit__)
      bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi <-| (merge_stmt_225__exit__)
      assign_stmt_248_to_assign_stmt_259__entry__ <-| (merge_stmt_227__exit__)
      if_stmt_260__entry__ <-| (assign_stmt_248_to_assign_stmt_259__exit__)
      merge_stmt_266__entry__ <-| (if_stmt_260__exit__)
      xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi <-| (merge_stmt_266__exit__)
      assign_stmt_297_to_assign_stmt_308__entry__ <-| (merge_stmt_277__exit__)
      if_stmt_309__entry__ <-| (assign_stmt_297_to_assign_stmt_308__exit__)
      merge_stmt_315__entry__ <-| (if_stmt_309__exit__)
      divideSignedx_xexitx_xloopexit_divideSignedx_xexit <-| (merge_stmt_315__exit__)
      assign_stmt_336_to_assign_stmt_372__entry__ <-| (merge_stmt_322__exit__)
      assign_stmt_375__entry__ <-| (assign_stmt_336_to_assign_stmt_372__exit__)
      return__ <-| (assign_stmt_375__exit__)
      merge_stmt_377__exit__ |-> (branch_block_stmt_46__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %lpFilt%body%
    //  file prog.linked.opt.aa, line 109
    // constant-object-declarations for block %lpFilt%body%
    //  file prog.linked.opt.aa, line 112
    // constant-object-declarations for block %lpFilt%body%
    //  file prog.linked.opt.aa, line 123
    // constant-object-declarations for block %lpFilt%body%
    //  file prog.linked.opt.aa, line 126
    // constant-object-declarations for block %lpFilt%body%
    //  file prog.linked.opt.aa, line 138
    // constant-object-declarations for block %lpFilt%body%
    //  file prog.linked.opt.aa, line 143
    // constant-object-declarations for block %lpFilt%body%
    //  file prog.linked.opt.aa, line 155
    // constant-object-declarations for block %lpFilt%body%
    //  file prog.linked.opt.aa, line 159
    // constant-object-declarations for block %lpFilt%body%
    //  file prog.linked.opt.aa, line 172
    // constant-object-declarations for block %lpFilt%body
    //  file prog.linked.opt.aa, line 76
    // constant-object-declarations for block %lpFilt
    //  file prog.linked.opt.aa, line 71
    // constant-declarations for block %lpFilt%body
    //  file prog.linked.opt.aa, line 76
    // LPbuff_ptr
    $constant $W[LOAD_LPbuff_ptr_51_word_address_0] : $pointer<memory_space_10> := _b0
    // ($bitcast ($uint<32>) _b11111111111111111111111111111011  )
    $constant $W[type_cast_56_wire_constant] : $int<32> := _b11111111111111111111111111111011// -5
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_65_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000101  )
    $constant $W[type_cast_72_wire_constant] : $int<32> := _b00000000000000000000000000000101// 5
    // ( $mux iNsTr_4 iNsTr_5  iNsTr_3 ) 
    // LPy1
    $constant $W[LOAD_LPy1_82_word_address_0] : $pointer<memory_space_11> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_87_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // LPy2
    $constant $W[LOAD_LPy2_91_word_address_0] : $pointer<memory_space_12> := _b0
    // @(LPbuff[iNsTr_6])
    $constant $W[array_obj_ref_95_resized_base_address] : $int<4> := _b0000// 0
    $constant $W[array_obj_ref_95_offset_scale_factor_0] : $int<4> := _b0001// 1
    // ->(iNsTr_10)
    $constant $W[ptr_deref_100_word_offset_0] : $int<4> := _b0000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_105_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // @(LPbuff[iNsTr_2])
    $constant $W[array_obj_ref_110_resized_base_address] : $int<4> := _b0000// 0
    $constant $W[array_obj_ref_110_offset_scale_factor_0] : $int<4> := _b0001// 1
    // ->(iNsTr_13)
    $constant $W[ptr_deref_115_word_offset_0] : $int<4> := _b0000// 0
    // LPy2
    $constant $W[STORE_LPy2_137_word_address_0] : $pointer<memory_space_12> := _b0
    // LPy1
    $constant $W[STORE_LPy1_140_word_address_0] : $pointer<memory_space_11> := _b0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_155_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_160_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ( $mux iNsTr_22 iNsTr_23  iNsTr_21 ) 
    // ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_175_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  )
    $constant $W[type_cast_181_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000011001// 25
    // if-statement  
    //  file prog.linked.opt.aa, line 104
    // constant-declarations for block %lpFilt%body%
    //  file prog.linked.opt.aa, line 109
    // constant-declarations for block %lpFilt%body%
    //  file prog.linked.opt.aa, line 112
    // constant-declarations for phi:  			$phi xx_x05x_xix_xi := 			  ($cast ($uint<64>) iNsTr_45 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) iNsTr_24 ) $on bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 113
    // constant-declarations for phi:  			$phi quotientx_x04x_xix_xi := 			  ($cast ($uint<64>) iNsTr_44 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 114
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_205_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_210_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  )
    $constant $W[type_cast_216_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000011001// 25
    // if-statement  
    //  file prog.linked.opt.aa, line 118
    // constant-declarations for block %lpFilt%body%
    //  file prog.linked.opt.aa, line 123
    // constant-declarations for block %lpFilt%body%
    //  file prog.linked.opt.aa, line 126
    // constant-declarations for phi:  			$phi shifted_divisorx_x02x_xix_xi := 			  ($cast ($uint<64>) iNsTr_48 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 127
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ) )
    $constant $W[type_cast_234_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000011001// 25
    // constant-declarations for phi:  			$phi curr_quotientx_x01x_xix_xi := 			  ($cast ($uint<64>) iNsTr_49 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 128
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )
    $constant $W[type_cast_241_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_246_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_252_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 133
    // constant-declarations for block %lpFilt%body%
    //  file prog.linked.opt.aa, line 138
    // constant-declarations for phi:  			$phi xx_xlcssa1 := 			  ($cast ($uint<64>) iNsTr_49 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 139
    // constant-declarations for phi:  			$phi xx_xlcssa := 			  ($cast ($uint<64>) iNsTr_48 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 140
    // constant-declarations for block %lpFilt%body%
    //  file prog.linked.opt.aa, line 143
    // constant-declarations for phi:  			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 144
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ) )
    $constant $W[type_cast_282_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000011001// 25
    // constant-declarations for phi:  			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 145
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )
    $constant $W[type_cast_289_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  )
    $constant $W[type_cast_306_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000011001// 25
    // if-statement  
    //  file prog.linked.opt.aa, line 150
    // constant-declarations for block %lpFilt%body%
    //  file prog.linked.opt.aa, line 155
    // constant-declarations for phi:  			$phi xx_xlcssa2 := 			  ($cast ($uint<64>) iNsTr_44 ) $on xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 156
    // constant-declarations for block %lpFilt%body%
    //  file prog.linked.opt.aa, line 159
    // constant-declarations for phi:  			$phi quotientx_x1x_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_divideSignedx_xexit			  ($cast ($uint<64>) xx_xlcssa2 ) $on divideSignedx_xexitx_xloopexit_divideSignedx_xexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 160
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_327_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_333_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ( $mux iNsTr_25 iNsTr_28  quotientx_x1x_xix_xi ) 
    // ->(iNsTr_13)
    $constant $W[ptr_deref_348_word_offset_0] : $int<4> := _b0000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_354_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000001010  )
    $constant $W[type_cast_360_wire_constant] : $int<32> := _b00000000000000000000000000001010// 10
    // ( $mux iNsTr_33 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_32 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_366_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // LPbuff_ptr
    $constant $W[STORE_LPbuff_ptr_370_word_address_0] : $pointer<memory_space_10> := _b0
    // constant-declarations for block %lpFilt%body%
    //  file prog.linked.opt.aa, line 172
    // block %lpFilt%body
    //  file prog.linked.opt.aa, line 76
    // 		iNsTr_1 := filt_input_pipe
    //  file prog.linked.opt.aa, line 78
    // iNsTr_1
    $W[iNsTr_1_49] : $int<32>
    // 		iNsTr_2 := LPbuff_ptr
    //  file prog.linked.opt.aa, line 79
    // LPbuff_ptr
    $W[LOAD_LPbuff_ptr_51_data_0] : $int<32>
    // iNsTr_2
    $W[iNsTr_2_52] : $int<32>
    // 		iNsTr_3 := (iNsTr_2 + ($bitcast ($uint<32>) _b11111111111111111111111111111011  ))
    //  file prog.linked.opt.aa, line 80
    // iNsTr_3
    $W[iNsTr_3_58] : $int<32>
    // 		iNsTr_4 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 81
    // ($bitcast ($int<32>) iNsTr_3 )
    $intermediate $W[type_cast_62_wire] : $int<32>
    // iNsTr_4
    $W[iNsTr_4_68] : $int<1>
    // 		iNsTr_5 := (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000101  ))
    //  file prog.linked.opt.aa, line 82
    // iNsTr_5
    $W[iNsTr_5_74] : $int<32>
    // 		iNsTr_6 := ( $mux iNsTr_4 iNsTr_5  iNsTr_3 ) 
    //  file prog.linked.opt.aa, line 83
    // iNsTr_6
    $W[iNsTr_6_80] : $int<32>
    // 		iNsTr_7 := LPy1
    //  file prog.linked.opt.aa, line 84
    // LPy1
    $W[LOAD_LPy1_82_data_0] : $int<32>
    // iNsTr_7
    $W[iNsTr_7_83] : $int<32>
    // 		iNsTr_8 := (iNsTr_7 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 85
    // iNsTr_8
    $W[iNsTr_8_89] : $int<32>
    // 		iNsTr_9 := LPy2
    //  file prog.linked.opt.aa, line 86
    // LPy2
    $W[LOAD_LPy2_91_data_0] : $int<32>
    // iNsTr_9
    $W[iNsTr_9_92] : $int<32>
    // 		iNsTr_10 := @(LPbuff[iNsTr_6])
    //  file prog.linked.opt.aa, line 87
    // @(LPbuff[iNsTr_6])
    $intermediate $W[R_iNsTr_6_94_resized] : $int<4>
    $intermediate $W[R_iNsTr_6_94_scaled] : $int<4>
    $intermediate $W[array_obj_ref_95_final_offset] : $int<4>
    $intermediate $W[array_obj_ref_95_root_address] : $int<4>
    // iNsTr_10
    $W[iNsTr_10_97] : $int<32>
    // 		iNsTr_11 := ->(iNsTr_10)
    //  file prog.linked.opt.aa, line 88
    // ->(iNsTr_10)
    $intermediate $W[ptr_deref_100_resized_base_address] : $int<4>
    $intermediate $W[ptr_deref_100_root_address] : $int<4>
    $W[ptr_deref_100_word_address_0] : $pointer<memory_space_9>
    $W[ptr_deref_100_data_0] : $int<32>
    // iNsTr_11
    $W[iNsTr_11_101] : $int<32>
    // 		iNsTr_12 := (iNsTr_11 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 89
    // iNsTr_12
    $W[iNsTr_12_107] : $int<32>
    // 		iNsTr_13 := @(LPbuff[iNsTr_2])
    //  file prog.linked.opt.aa, line 90
    // @(LPbuff[iNsTr_2])
    $intermediate $W[R_iNsTr_2_109_resized] : $int<4>
    $intermediate $W[R_iNsTr_2_109_scaled] : $int<4>
    $intermediate $W[array_obj_ref_110_final_offset] : $int<4>
    $intermediate $W[array_obj_ref_110_root_address] : $int<4>
    // iNsTr_13
    $W[iNsTr_13_112] : $int<32>
    // 		iNsTr_14 := ->(iNsTr_13)
    //  file prog.linked.opt.aa, line 91
    // ->(iNsTr_13)
    $intermediate $W[ptr_deref_115_resized_base_address] : $int<4>
    $intermediate $W[ptr_deref_115_root_address] : $int<4>
    $W[ptr_deref_115_word_address_0] : $pointer<memory_space_9>
    $W[ptr_deref_115_data_0] : $int<32>
    // iNsTr_14
    $W[iNsTr_14_116] : $int<32>
    // 		iNsTr_15 := (iNsTr_8 + iNsTr_1)
    //  file prog.linked.opt.aa, line 92
    // iNsTr_15
    $W[iNsTr_15_121] : $int<32>
    // 		iNsTr_16 := (iNsTr_15 - iNsTr_9)
    //  file prog.linked.opt.aa, line 93
    // iNsTr_16
    $W[iNsTr_16_126] : $int<32>
    // 		iNsTr_17 := (iNsTr_16 + iNsTr_14)
    //  file prog.linked.opt.aa, line 94
    // iNsTr_17
    $W[iNsTr_17_131] : $int<32>
    // 		iNsTr_18 := (iNsTr_17 - iNsTr_12)
    //  file prog.linked.opt.aa, line 95
    // iNsTr_18
    $W[iNsTr_18_136] : $int<32>
    // 		LPy2 := iNsTr_7
    //  file prog.linked.opt.aa, line 96
    // LPy2
    $constant $W[STORE_LPy2_137_word_address_0] : $pointer<memory_space_12> := _b0
    $W[STORE_LPy2_137_data_0] : $int<32>
    // 		LPy1 := iNsTr_18
    //  file prog.linked.opt.aa, line 97
    // LPy1
    $constant $W[STORE_LPy1_140_word_address_0] : $pointer<memory_space_11> := _b0
    $W[STORE_LPy1_140_data_0] : $int<32>
    // 		iNsTr_21 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_18 ) )
    //  file prog.linked.opt.aa, line 98
    // ($cast ($int<64>) iNsTr_18 )
    $intermediate $W[type_cast_147_wire] : $int<64>
    // iNsTr_21
    $W[iNsTr_21_149] : $int<64>
    // 		iNsTr_22 := (($bitcast ($int<32>) iNsTr_18 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 99
    // ($bitcast ($int<32>) iNsTr_18 )
    $intermediate $W[type_cast_152_wire] : $int<32>
    // iNsTr_22
    $W[iNsTr_22_157] : $int<1>
    // 		iNsTr_23 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - iNsTr_21)
    //  file prog.linked.opt.aa, line 100
    // iNsTr_23
    $W[iNsTr_23_163] : $int<64>
    // 		iNsTr_24 := ( $mux iNsTr_22 iNsTr_23  iNsTr_21 ) 
    //  file prog.linked.opt.aa, line 101
    // iNsTr_24
    $W[iNsTr_24_169] : $int<64>
    // 		iNsTr_25 := (($bitcast ($int<64>) iNsTr_24 ) < ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 102
    // ($bitcast ($int<64>) iNsTr_24 )
    $intermediate $W[type_cast_172_wire] : $int<64>
    // iNsTr_25
    $W[iNsTr_25_177] : $int<1>
    // 		iNsTr_26 := (iNsTr_24 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
    //  file prog.linked.opt.aa, line 103
    // iNsTr_26
    $W[iNsTr_26_183] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 104
    // merge-statement  
    //  file prog.linked.opt.aa, line 112
    // 			$phi xx_x05x_xix_xi := 			  ($cast ($uint<64>) iNsTr_45 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) iNsTr_24 ) $on bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 113
    // ($cast ($uint<64>) iNsTr_45 )
    $intermediate $W[type_cast_196_wire] : $int<64>
    // ($cast ($uint<64>) iNsTr_24 )
    $intermediate $W[type_cast_198_wire] : $int<64>
    // xx_x05x_xix_xi
    $W[xx_x05x_xix_xi_193] : $int<64>
    // 			$phi quotientx_x04x_xix_xi := 			  ($cast ($uint<64>) iNsTr_44 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 114
    // ($cast ($uint<64>) iNsTr_44 )
    $intermediate $W[type_cast_202_wire] : $int<64>
    // quotientx_x04x_xix_xi
    $W[quotientx_x04x_xix_xi_199] : $int<64>
    // 		iNsTr_40 := (xx_x05x_xix_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 116
    // iNsTr_40
    $W[iNsTr_40_212] : $int<64>
    // 		iNsTr_41 := (iNsTr_40 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
    //  file prog.linked.opt.aa, line 117
    // iNsTr_41
    $W[iNsTr_41_218] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 118
    // merge-statement  
    //  file prog.linked.opt.aa, line 126
    // 			$phi shifted_divisorx_x02x_xix_xi := 			  ($cast ($uint<64>) iNsTr_48 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 127
    // ($cast ($uint<64>) iNsTr_48 )
    $intermediate $W[type_cast_231_wire] : $int<64>
    // shifted_divisorx_x02x_xix_xi
    $W[shifted_divisorx_x02x_xix_xi_228] : $int<64>
    // 			$phi curr_quotientx_x01x_xix_xi := 			  ($cast ($uint<64>) iNsTr_49 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 128
    // ($cast ($uint<64>) iNsTr_49 )
    $intermediate $W[type_cast_238_wire] : $int<64>
    // curr_quotientx_x01x_xix_xi
    $W[curr_quotientx_x01x_xix_xi_235] : $int<64>
    // 		iNsTr_48 := (shifted_divisorx_x02x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 130
    // iNsTr_48
    $W[iNsTr_48_248] : $int<64>
    // 		iNsTr_49 := (curr_quotientx_x01x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 131
    // iNsTr_49
    $W[iNsTr_49_254] : $int<64>
    // 		iNsTr_50 := (iNsTr_48 < iNsTr_40)
    //  file prog.linked.opt.aa, line 132
    // iNsTr_50
    $W[iNsTr_50_259] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 133
    // merge-statement  
    //  file prog.linked.opt.aa, line 138
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<64>) iNsTr_49 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 139
    // ($cast ($uint<64>) iNsTr_49 )
    $intermediate $W[type_cast_270_wire] : $int<64>
    // xx_xlcssa1
    $W[xx_xlcssa1_267] : $int<64>
    // 			$phi xx_xlcssa := 			  ($cast ($uint<64>) iNsTr_48 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 140
    // ($cast ($uint<64>) iNsTr_48 )
    $intermediate $W[type_cast_274_wire] : $int<64>
    // xx_xlcssa
    $W[xx_xlcssa_271] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 143
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 144
    // ($cast ($uint<64>) xx_xlcssa )
    $intermediate $W[type_cast_284_wire] : $int<64>
    // shifted_divisorx_x0x_xlcssax_xix_xi
    $W[shifted_divisorx_x0x_xlcssax_xix_xi_278] : $int<64>
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 145
    // ($cast ($uint<64>) xx_xlcssa1 )
    $intermediate $W[type_cast_291_wire] : $int<64>
    // curr_quotientx_x0x_xlcssax_xix_xi
    $W[curr_quotientx_x0x_xlcssax_xix_xi_285] : $int<64>
    // 		iNsTr_44 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x04x_xix_xi)
    //  file prog.linked.opt.aa, line 147
    // iNsTr_44
    $W[iNsTr_44_297] : $int<64>
    // 		iNsTr_45 := (xx_x05x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    //  file prog.linked.opt.aa, line 148
    // iNsTr_45
    $W[iNsTr_45_302] : $int<64>
    // 		iNsTr_46 := (iNsTr_45 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
    //  file prog.linked.opt.aa, line 149
    // iNsTr_46
    $W[iNsTr_46_308] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 150
    // merge-statement  
    //  file prog.linked.opt.aa, line 155
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<64>) iNsTr_44 ) $on xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 156
    // ($cast ($uint<64>) iNsTr_44 )
    $intermediate $W[type_cast_319_wire] : $int<64>
    // xx_xlcssa2
    $W[xx_xlcssa2_316] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 159
    // 			$phi quotientx_x1x_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_divideSignedx_xexit			  ($cast ($uint<64>) xx_xlcssa2 ) $on divideSignedx_xexitx_xloopexit_divideSignedx_xexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 160
    // ($cast ($uint<64>) xx_xlcssa2 )
    $intermediate $W[type_cast_329_wire] : $int<64>
    // quotientx_x1x_xix_xi
    $W[quotientx_x1x_xix_xi_323] : $int<64>
    // 		iNsTr_28 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - quotientx_x1x_xix_xi)
    //  file prog.linked.opt.aa, line 162
    // iNsTr_28
    $W[iNsTr_28_336] : $int<64>
    // 		iNsTr_29 := ( $mux iNsTr_25 iNsTr_28  quotientx_x1x_xix_xi ) 
    //  file prog.linked.opt.aa, line 163
    // iNsTr_29
    $W[iNsTr_29_342] : $int<64>
    // 		iNsTr_30 := ($cast ($uint<32>) iNsTr_29 )
    //  file prog.linked.opt.aa, line 164
    // iNsTr_30
    $W[iNsTr_30_346] : $int<32>
    // 		->(iNsTr_13) := iNsTr_1
    //  file prog.linked.opt.aa, line 165
    // ->(iNsTr_13)
    $intermediate $W[ptr_deref_348_wire] : $int<32>
    $intermediate $W[ptr_deref_348_resized_base_address] : $int<4>
    $intermediate $W[ptr_deref_348_root_address] : $int<4>
    $W[ptr_deref_348_word_address_0] : $pointer<memory_space_9>
    $W[ptr_deref_348_data_0] : $int<32>
    // 		iNsTr_32 := (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 166
    // iNsTr_32
    $W[iNsTr_32_356] : $int<32>
    // 		iNsTr_33 := (iNsTr_32 == ($bitcast ($uint<32>) _b00000000000000000000000000001010  ))
    //  file prog.linked.opt.aa, line 167
    // iNsTr_33
    $W[iNsTr_33_362] : $int<1>
    // 		iNsTr_34 := ( $mux iNsTr_33 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_32 ) 
    //  file prog.linked.opt.aa, line 168
    // iNsTr_34
    $W[iNsTr_34_369] : $int<32>
    // 		LPbuff_ptr := iNsTr_34
    //  file prog.linked.opt.aa, line 169
    // LPbuff_ptr
    $constant $W[STORE_LPbuff_ptr_370_word_address_0] : $pointer<memory_space_10> := _b0
    $W[STORE_LPbuff_ptr_370_data_0] : $int<32>
    // 		LPout_pipe := iNsTr_30
    //  file prog.linked.opt.aa, line 170
    // LPout_pipe
    // datapath-instances for block %lpFilt%body
    //  file prog.linked.opt.aa, line 76
    // 		iNsTr_1 := filt_input_pipe
    //  file prog.linked.opt.aa, line 78
    // filt_input_pipe
    $ioport $in [RPIPE_filt_input_pipe_48_inst] (filt_input_pipe) (iNsTr_1_49) 
    // 		iNsTr_2 := LPbuff_ptr
    //  file prog.linked.opt.aa, line 79
    // LPbuff_ptr
    $load [LOAD_LPbuff_ptr_51_load_0] $from memory_space_10 (LOAD_LPbuff_ptr_51_word_address_0) (LOAD_LPbuff_ptr_51_data_0) 
    $delay LOAD_LPbuff_ptr_51_load_0 1
    &/ [LOAD_LPbuff_ptr_51_gather_scatter] (LOAD_LPbuff_ptr_51_data_0) (iNsTr_2_52) 
    // 		iNsTr_3 := (iNsTr_2 + ($bitcast ($uint<32>) _b11111111111111111111111111111011  ))
    //  file prog.linked.opt.aa, line 80
    // (iNsTr_2 + ($bitcast ($uint<32>) _b11111111111111111111111111111011  ))
    +[ADD_u32_u32_57_inst] (iNsTr_2_52 type_cast_56_wire_constant) (iNsTr_3_58) 
    $delay ADD_u32_u32_57_inst 1
    // 		iNsTr_4 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 81
    // ($bitcast ($int<32>) iNsTr_3 )
    $S:=$U [type_cast_62_inst] (iNsTr_3_58) (type_cast_62_wire)   $flowthrough
    $delay type_cast_62_inst 0
    // (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    $S<$S[SLT_i32_u1_66_inst] (type_cast_62_wire type_cast_65_wire_constant) (iNsTr_4_68) 
    $delay SLT_i32_u1_66_inst 1
    // 		iNsTr_5 := (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000101  ))
    //  file prog.linked.opt.aa, line 82
    // (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000101  ))
    +[ADD_u32_u32_73_inst] (iNsTr_2_52 type_cast_72_wire_constant) (iNsTr_5_74) 
    $delay ADD_u32_u32_73_inst 1
    // 		iNsTr_6 := ( $mux iNsTr_4 iNsTr_5  iNsTr_3 ) 
    //  file prog.linked.opt.aa, line 83
    // ( $mux iNsTr_4 iNsTr_5  iNsTr_3 ) 
    ? [MUX_79_inst] (iNsTr_4_68 iNsTr_5_74 iNsTr_3_58) (iNsTr_6_80) 
    // 		iNsTr_7 := LPy1
    //  file prog.linked.opt.aa, line 84
    // LPy1
    $load [LOAD_LPy1_82_load_0] $from memory_space_11 (LOAD_LPy1_82_word_address_0) (LOAD_LPy1_82_data_0) 
    $delay LOAD_LPy1_82_load_0 1
    &/ [LOAD_LPy1_82_gather_scatter] (LOAD_LPy1_82_data_0) (iNsTr_7_83) 
    // 		iNsTr_8 := (iNsTr_7 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 85
    // (iNsTr_7 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_88_inst] (iNsTr_7_83 type_cast_87_wire_constant) (iNsTr_8_89) 
    $delay SHL_u32_u32_88_inst 1
    // 		iNsTr_9 := LPy2
    //  file prog.linked.opt.aa, line 86
    // LPy2
    $load [LOAD_LPy2_91_load_0] $from memory_space_12 (LOAD_LPy2_91_word_address_0) (LOAD_LPy2_91_data_0) 
    $delay LOAD_LPy2_91_load_0 1
    &/ [LOAD_LPy2_91_gather_scatter] (LOAD_LPy2_91_data_0) (iNsTr_9_92) 
    // 		iNsTr_10 := @(LPbuff[iNsTr_6])
    //  file prog.linked.opt.aa, line 87
    &/ [array_obj_ref_95_index_0_resize] (iNsTr_6_80) (R_iNsTr_6_94_resized) 
    &/ [array_obj_ref_95_index_0_rename] (R_iNsTr_6_94_resized) (R_iNsTr_6_94_scaled) 
    &/ [array_obj_ref_95_index_offset] (R_iNsTr_6_94_scaled) (array_obj_ref_95_final_offset) 
    &/ [array_obj_ref_95_root_address_inst] (array_obj_ref_95_final_offset) (array_obj_ref_95_root_address) 
    # := [addr_of_96_final_reg] (array_obj_ref_95_root_address) (iNsTr_10_97) 
    // 		iNsTr_11 := ->(iNsTr_10)
    //  file prog.linked.opt.aa, line 88
    // ->(iNsTr_10)
    &/ [ptr_deref_100_base_resize] (iNsTr_10_97) (ptr_deref_100_resized_base_address) 
    &/ [ptr_deref_100_root_address_inst] (ptr_deref_100_resized_base_address) (ptr_deref_100_root_address) 
    &/ [ptr_deref_100_addr_0] (ptr_deref_100_root_address) (ptr_deref_100_word_address_0) 
    $load [ptr_deref_100_load_0] $from memory_space_9 (ptr_deref_100_word_address_0) (ptr_deref_100_data_0) 
    $delay ptr_deref_100_load_0 2
    &/ [ptr_deref_100_gather_scatter] (ptr_deref_100_data_0) (iNsTr_11_101) 
    // 		iNsTr_12 := (iNsTr_11 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 89
    // (iNsTr_11 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_106_inst] (iNsTr_11_101 type_cast_105_wire_constant) (iNsTr_12_107) 
    $delay SHL_u32_u32_106_inst 1
    // 		iNsTr_13 := @(LPbuff[iNsTr_2])
    //  file prog.linked.opt.aa, line 90
    &/ [array_obj_ref_110_index_0_resize] (iNsTr_2_52) (R_iNsTr_2_109_resized) 
    &/ [array_obj_ref_110_index_0_rename] (R_iNsTr_2_109_resized) (R_iNsTr_2_109_scaled) 
    &/ [array_obj_ref_110_index_offset] (R_iNsTr_2_109_scaled) (array_obj_ref_110_final_offset) 
    &/ [array_obj_ref_110_root_address_inst] (array_obj_ref_110_final_offset) (array_obj_ref_110_root_address) 
    # := [addr_of_111_final_reg] (array_obj_ref_110_root_address) (iNsTr_13_112) 
    // 		iNsTr_14 := ->(iNsTr_13)
    //  file prog.linked.opt.aa, line 91
    // ->(iNsTr_13)
    &/ [ptr_deref_115_base_resize] (iNsTr_13_112) (ptr_deref_115_resized_base_address) 
    &/ [ptr_deref_115_root_address_inst] (ptr_deref_115_resized_base_address) (ptr_deref_115_root_address) 
    &/ [ptr_deref_115_addr_0] (ptr_deref_115_root_address) (ptr_deref_115_word_address_0) 
    $load [ptr_deref_115_load_0] $from memory_space_9 (ptr_deref_115_word_address_0) (ptr_deref_115_data_0) 
    $delay ptr_deref_115_load_0 2
    &/ [ptr_deref_115_gather_scatter] (ptr_deref_115_data_0) (iNsTr_14_116) 
    // 		iNsTr_15 := (iNsTr_8 + iNsTr_1)
    //  file prog.linked.opt.aa, line 92
    // (iNsTr_8 + iNsTr_1)
    +[ADD_u32_u32_120_inst] (iNsTr_8_89 iNsTr_1_49) (iNsTr_15_121) 
    $delay ADD_u32_u32_120_inst 1
    // 		iNsTr_16 := (iNsTr_15 - iNsTr_9)
    //  file prog.linked.opt.aa, line 93
    // (iNsTr_15 - iNsTr_9)
    -[SUB_u32_u32_125_inst] (iNsTr_15_121 iNsTr_9_92) (iNsTr_16_126) 
    $delay SUB_u32_u32_125_inst 1
    // 		iNsTr_17 := (iNsTr_16 + iNsTr_14)
    //  file prog.linked.opt.aa, line 94
    // (iNsTr_16 + iNsTr_14)
    +[ADD_u32_u32_130_inst] (iNsTr_16_126 iNsTr_14_116) (iNsTr_17_131) 
    $delay ADD_u32_u32_130_inst 1
    // 		iNsTr_18 := (iNsTr_17 - iNsTr_12)
    //  file prog.linked.opt.aa, line 95
    // (iNsTr_17 - iNsTr_12)
    -[SUB_u32_u32_135_inst] (iNsTr_17_131 iNsTr_12_107) (iNsTr_18_136) 
    $delay SUB_u32_u32_135_inst 1
    // 		LPy2 := iNsTr_7
    //  file prog.linked.opt.aa, line 96
    // LPy2
    $store [STORE_LPy2_137_store_0] $to memory_space_12 (STORE_LPy2_137_word_address_0 STORE_LPy2_137_data_0) 
    $delay STORE_LPy2_137_store_0 1
    &/ [STORE_LPy2_137_gather_scatter] (iNsTr_7_83) (STORE_LPy2_137_data_0) 
    // 		LPy1 := iNsTr_18
    //  file prog.linked.opt.aa, line 97
    // LPy1
    $store [STORE_LPy1_140_store_0] $to memory_space_11 (STORE_LPy1_140_word_address_0 STORE_LPy1_140_data_0) 
    $delay STORE_LPy1_140_store_0 1
    &/ [STORE_LPy1_140_gather_scatter] (iNsTr_18_136) (STORE_LPy1_140_data_0) 
    // 		iNsTr_21 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_18 ) )
    //  file prog.linked.opt.aa, line 98
    // ($cast ($int<64>) iNsTr_18 )
    $S:=$U [type_cast_147_inst] (iNsTr_18_136) (type_cast_147_wire)  
    $delay type_cast_147_inst 1
    // ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_18 ) )
    # := [type_cast_148_inst] (type_cast_147_wire) (iNsTr_21_149) 
    $delay type_cast_148_inst 1
    // 		iNsTr_22 := (($bitcast ($int<32>) iNsTr_18 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 99
    // ($bitcast ($int<32>) iNsTr_18 )
    $S:=$U [type_cast_152_inst] (iNsTr_18_136) (type_cast_152_wire)   $flowthrough
    $delay type_cast_152_inst 0
    // (($bitcast ($int<32>) iNsTr_18 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    $S<$S[SLT_i32_u1_156_inst] (type_cast_152_wire type_cast_155_wire_constant) (iNsTr_22_157) 
    $delay SLT_i32_u1_156_inst 1
    // 		iNsTr_23 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - iNsTr_21)
    //  file prog.linked.opt.aa, line 100
    // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - iNsTr_21)
    -[SUB_u64_u64_162_inst] (type_cast_160_wire_constant iNsTr_21_149) (iNsTr_23_163) 
    $delay SUB_u64_u64_162_inst 1
    // 		iNsTr_24 := ( $mux iNsTr_22 iNsTr_23  iNsTr_21 ) 
    //  file prog.linked.opt.aa, line 101
    // ( $mux iNsTr_22 iNsTr_23  iNsTr_21 ) 
    ? [MUX_168_inst] (iNsTr_22_157 iNsTr_23_163 iNsTr_21_149) (iNsTr_24_169) 
    // 		iNsTr_25 := (($bitcast ($int<64>) iNsTr_24 ) < ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 102
    // ($bitcast ($int<64>) iNsTr_24 )
    $S:=$U [type_cast_172_inst] (iNsTr_24_169) (type_cast_172_wire)   $flowthrough
    $delay type_cast_172_inst 0
    // (($bitcast ($int<64>) iNsTr_24 ) < ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ))
    $S<$S[SLT_i64_u1_176_inst] (type_cast_172_wire type_cast_175_wire_constant) (iNsTr_25_177) 
    $delay SLT_i64_u1_176_inst 1
    // 		iNsTr_26 := (iNsTr_24 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
    //  file prog.linked.opt.aa, line 103
    // (iNsTr_24 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
    <[ULT_u64_u1_182_inst] (iNsTr_24_169 type_cast_181_wire_constant) (iNsTr_26_183) 
    $delay ULT_u64_u1_182_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 104
    ==0? [if_stmt_184_branch] (iNsTr_26_183)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 112
    // 			$phi xx_x05x_xix_xi := 			  ($cast ($uint<64>) iNsTr_45 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) iNsTr_24 ) $on bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 113
    // ($cast ($uint<64>) iNsTr_45 )
    # := [type_cast_196_inst] (iNsTr_45_302) (type_cast_196_wire) 
    $delay type_cast_196_inst 1
    // ($cast ($uint<64>) iNsTr_24 )
    # := [type_cast_198_inst] (iNsTr_24_169) (type_cast_198_wire) 
    $delay type_cast_198_inst 1
    $phi [phi_stmt_193] (type_cast_196_wire type_cast_198_wire) ( xx_x05x_xix_xi_193 )
    // 			$phi quotientx_x04x_xix_xi := 			  ($cast ($uint<64>) iNsTr_44 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 114
    // ($cast ($uint<64>) iNsTr_44 )
    # := [type_cast_202_inst] (iNsTr_44_297) (type_cast_202_wire) 
    $delay type_cast_202_inst 1
    $phi [phi_stmt_199] (type_cast_202_wire type_cast_205_wire_constant) ( quotientx_x04x_xix_xi_199 )
    // 		iNsTr_40 := (xx_x05x_xix_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 116
    // (xx_x05x_xix_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    >>[LSHR_u64_u64_211_inst] (xx_x05x_xix_xi_193 type_cast_210_wire_constant) (iNsTr_40_212) 
    $delay LSHR_u64_u64_211_inst 1
    // 		iNsTr_41 := (iNsTr_40 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
    //  file prog.linked.opt.aa, line 117
    // (iNsTr_40 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
    >[UGT_u64_u1_217_inst] (iNsTr_40_212 type_cast_216_wire_constant) (iNsTr_41_218) 
    $delay UGT_u64_u1_217_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 118
    ==0? [if_stmt_219_branch] (iNsTr_41_218)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 126
    // 			$phi shifted_divisorx_x02x_xix_xi := 			  ($cast ($uint<64>) iNsTr_48 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 127
    // ($cast ($uint<64>) iNsTr_48 )
    # := [type_cast_231_inst] (iNsTr_48_248) (type_cast_231_wire) 
    $delay type_cast_231_inst 1
    $phi [phi_stmt_228] (type_cast_231_wire type_cast_234_wire_constant) ( shifted_divisorx_x02x_xix_xi_228 )
    // 			$phi curr_quotientx_x01x_xix_xi := 			  ($cast ($uint<64>) iNsTr_49 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 128
    // ($cast ($uint<64>) iNsTr_49 )
    # := [type_cast_238_inst] (iNsTr_49_254) (type_cast_238_wire) 
    $delay type_cast_238_inst 1
    $phi [phi_stmt_235] (type_cast_238_wire type_cast_241_wire_constant) ( curr_quotientx_x01x_xix_xi_235 )
    // 		iNsTr_48 := (shifted_divisorx_x02x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 130
    // (shifted_divisorx_x02x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    <<[SHL_u64_u64_247_inst] (shifted_divisorx_x02x_xix_xi_228 type_cast_246_wire_constant) (iNsTr_48_248) 
    $delay SHL_u64_u64_247_inst 1
    // 		iNsTr_49 := (curr_quotientx_x01x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 131
    // (curr_quotientx_x01x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    <<[SHL_u64_u64_253_inst] (curr_quotientx_x01x_xix_xi_235 type_cast_252_wire_constant) (iNsTr_49_254) 
    $delay SHL_u64_u64_253_inst 1
    // 		iNsTr_50 := (iNsTr_48 < iNsTr_40)
    //  file prog.linked.opt.aa, line 132
    // (iNsTr_48 < iNsTr_40)
    <[ULT_u64_u1_258_inst] (iNsTr_48_248 iNsTr_40_212) (iNsTr_50_259) 
    $delay ULT_u64_u1_258_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 133
    ==0? [if_stmt_260_branch] (iNsTr_50_259)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 138
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<64>) iNsTr_49 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 139
    // ($cast ($uint<64>) iNsTr_49 )
    # := [type_cast_270_inst] (iNsTr_49_254) (type_cast_270_wire) 
    $delay type_cast_270_inst 1
    $phi [phi_stmt_267] (type_cast_270_wire) ( xx_xlcssa1_267 )
    // 			$phi xx_xlcssa := 			  ($cast ($uint<64>) iNsTr_48 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 140
    // ($cast ($uint<64>) iNsTr_48 )
    # := [type_cast_274_inst] (iNsTr_48_248) (type_cast_274_wire) 
    $delay type_cast_274_inst 1
    $phi [phi_stmt_271] (type_cast_274_wire) ( xx_xlcssa_271 )
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 143
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 144
    // ($cast ($uint<64>) xx_xlcssa )
    # := [type_cast_284_inst] (xx_xlcssa_271) (type_cast_284_wire) 
    $delay type_cast_284_inst 1
    $phi [phi_stmt_278] (type_cast_282_wire_constant type_cast_284_wire) ( shifted_divisorx_x0x_xlcssax_xix_xi_278 )
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 145
    // ($cast ($uint<64>) xx_xlcssa1 )
    # := [type_cast_291_inst] (xx_xlcssa1_267) (type_cast_291_wire) 
    $delay type_cast_291_inst 1
    $phi [phi_stmt_285] (type_cast_289_wire_constant type_cast_291_wire) ( curr_quotientx_x0x_xlcssax_xix_xi_285 )
    // 		iNsTr_44 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x04x_xix_xi)
    //  file prog.linked.opt.aa, line 147
    // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x04x_xix_xi)
    +[ADD_u64_u64_296_inst] (curr_quotientx_x0x_xlcssax_xix_xi_285 quotientx_x04x_xix_xi_199) (iNsTr_44_297) 
    $delay ADD_u64_u64_296_inst 1
    // 		iNsTr_45 := (xx_x05x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    //  file prog.linked.opt.aa, line 148
    // (xx_x05x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    -[SUB_u64_u64_301_inst] (xx_x05x_xix_xi_193 shifted_divisorx_x0x_xlcssax_xix_xi_278) (iNsTr_45_302) 
    $delay SUB_u64_u64_301_inst 1
    // 		iNsTr_46 := (iNsTr_45 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
    //  file prog.linked.opt.aa, line 149
    // (iNsTr_45 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
    <[ULT_u64_u1_307_inst] (iNsTr_45_302 type_cast_306_wire_constant) (iNsTr_46_308) 
    $delay ULT_u64_u1_307_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 150
    ==0? [if_stmt_309_branch] (iNsTr_46_308)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 155
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<64>) iNsTr_44 ) $on xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 156
    // ($cast ($uint<64>) iNsTr_44 )
    # := [type_cast_319_inst] (iNsTr_44_297) (type_cast_319_wire) 
    $delay type_cast_319_inst 1
    $phi [phi_stmt_316] (type_cast_319_wire) ( xx_xlcssa2_316 )
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 159
    // 			$phi quotientx_x1x_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_divideSignedx_xexit			  ($cast ($uint<64>) xx_xlcssa2 ) $on divideSignedx_xexitx_xloopexit_divideSignedx_xexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 160
    // ($cast ($uint<64>) xx_xlcssa2 )
    # := [type_cast_329_inst] (xx_xlcssa2_316) (type_cast_329_wire) 
    $delay type_cast_329_inst 1
    $phi [phi_stmt_323] (type_cast_327_wire_constant type_cast_329_wire) ( quotientx_x1x_xix_xi_323 )
    // 		iNsTr_28 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - quotientx_x1x_xix_xi)
    //  file prog.linked.opt.aa, line 162
    // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - quotientx_x1x_xix_xi)
    -[SUB_u64_u64_335_inst] (type_cast_333_wire_constant quotientx_x1x_xix_xi_323) (iNsTr_28_336) 
    $delay SUB_u64_u64_335_inst 1
    // 		iNsTr_29 := ( $mux iNsTr_25 iNsTr_28  quotientx_x1x_xix_xi ) 
    //  file prog.linked.opt.aa, line 163
    // ( $mux iNsTr_25 iNsTr_28  quotientx_x1x_xix_xi ) 
    ? [MUX_341_inst] (iNsTr_25_177 iNsTr_28_336 quotientx_x1x_xix_xi_323) (iNsTr_29_342) 
    // 		iNsTr_30 := ($cast ($uint<32>) iNsTr_29 )
    //  file prog.linked.opt.aa, line 164
    // ($cast ($uint<32>) iNsTr_29 )
    # := [type_cast_345_inst] (iNsTr_29_342) (iNsTr_30_346) 
    $delay type_cast_345_inst 1
    // 		->(iNsTr_13) := iNsTr_1
    //  file prog.linked.opt.aa, line 165
    // ->(iNsTr_13)
    &/ [ptr_deref_348_base_resize] (iNsTr_13_112) (ptr_deref_348_resized_base_address) 
    &/ [ptr_deref_348_root_address_inst] (ptr_deref_348_resized_base_address) (ptr_deref_348_root_address) 
    &/ [ptr_deref_348_addr_0] (ptr_deref_348_root_address) (ptr_deref_348_word_address_0) 
    $store [ptr_deref_348_store_0] $to memory_space_9 (ptr_deref_348_word_address_0 ptr_deref_348_data_0) 
    $delay ptr_deref_348_store_0 2
    &/ [ptr_deref_348_gather_scatter] (iNsTr_1_49) (ptr_deref_348_data_0) 
    // 		iNsTr_32 := (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 166
    // (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_355_inst] (iNsTr_2_52 type_cast_354_wire_constant) (iNsTr_32_356) 
    $delay ADD_u32_u32_355_inst 1
    // 		iNsTr_33 := (iNsTr_32 == ($bitcast ($uint<32>) _b00000000000000000000000000001010  ))
    //  file prog.linked.opt.aa, line 167
    // (iNsTr_32 == ($bitcast ($uint<32>) _b00000000000000000000000000001010  ))
    ==[EQ_u32_u1_361_inst] (iNsTr_32_356 type_cast_360_wire_constant) (iNsTr_33_362) 
    $delay EQ_u32_u1_361_inst 1
    // 		iNsTr_34 := ( $mux iNsTr_33 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_32 ) 
    //  file prog.linked.opt.aa, line 168
    // ( $mux iNsTr_33 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_32 ) 
    ? [MUX_368_inst] (iNsTr_33_362 type_cast_366_wire_constant iNsTr_32_356) (iNsTr_34_369) 
    // 		LPbuff_ptr := iNsTr_34
    //  file prog.linked.opt.aa, line 169
    // LPbuff_ptr
    $store [STORE_LPbuff_ptr_370_store_0] $to memory_space_10 (STORE_LPbuff_ptr_370_word_address_0 STORE_LPbuff_ptr_370_data_0) 
    $delay STORE_LPbuff_ptr_370_store_0 1
    &/ [STORE_LPbuff_ptr_370_gather_scatter] (iNsTr_34_369) (STORE_LPbuff_ptr_370_data_0) 
    // 		LPout_pipe := iNsTr_30
    //  file prog.linked.opt.aa, line 170
    // LPout_pipe
    $ioport $out [WPIPE_LPout_pipe_373_inst]  (iNsTr_30_346) (LPout_pipe) 
    $buffering $in WPIPE_LPout_pipe_373_inst iNsTr_30_346 1
  }
  // end data-path
  // 		iNsTr_1 := filt_input_pipe
  //  file prog.linked.opt.aa, line 78
  // filt_input_pipe
  RPIPE_filt_input_pipe_48_inst <=> (branch_block_stmt_46/assign_stmt_49/RPIPE_filt_input_pipe_48_Sample/rr branch_block_stmt_46/assign_stmt_49/RPIPE_filt_input_pipe_48_Update/cr) (branch_block_stmt_46/assign_stmt_49/RPIPE_filt_input_pipe_48_Sample/ra branch_block_stmt_46/assign_stmt_49/RPIPE_filt_input_pipe_48_Update/ca)
  // 		iNsTr_2 := LPbuff_ptr
  //  file prog.linked.opt.aa, line 79
  // LPbuff_ptr
  LOAD_LPbuff_ptr_51_gather_scatter <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/LOAD_LPbuff_ptr_51_Update/LOAD_LPbuff_ptr_51_Merge/merge_req) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/LOAD_LPbuff_ptr_51_Update/LOAD_LPbuff_ptr_51_Merge/merge_ack)
  LOAD_LPbuff_ptr_51_load_0 <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/LOAD_LPbuff_ptr_51_Sample/word_access_start/word_0/rr branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/LOAD_LPbuff_ptr_51_Update/word_access_complete/word_0/cr) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/LOAD_LPbuff_ptr_51_Sample/word_access_start/word_0/ra branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/LOAD_LPbuff_ptr_51_Update/word_access_complete/word_0/ca)
  // 		iNsTr_3 := (iNsTr_2 + ($bitcast ($uint<32>) _b11111111111111111111111111111011  ))
  //  file prog.linked.opt.aa, line 80
  // (iNsTr_2 + ($bitcast ($uint<32>) _b11111111111111111111111111111011  ))
  ADD_u32_u32_57_inst <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ADD_u32_u32_57_Sample/rr branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ADD_u32_u32_57_Update/cr) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ADD_u32_u32_57_Sample/ra branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ADD_u32_u32_57_Update/ca)
  // 		iNsTr_4 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.linked.opt.aa, line 81
  // (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) iNsTr_3 )
  type_cast_62_inst <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/type_cast_62_Sample/rr branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/type_cast_62_Update/cr) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/type_cast_62_Sample/ra branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/type_cast_62_Update/ca)
  SLT_i32_u1_66_inst <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SLT_i32_u1_66_Sample/rr branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SLT_i32_u1_66_Update/cr) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SLT_i32_u1_66_Sample/ra branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SLT_i32_u1_66_Update/ca)
  // 		iNsTr_5 := (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000101  ))
  //  file prog.linked.opt.aa, line 82
  // (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000101  ))
  ADD_u32_u32_73_inst <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ADD_u32_u32_73_Sample/rr branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ADD_u32_u32_73_Update/cr) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ADD_u32_u32_73_Sample/ra branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ADD_u32_u32_73_Update/ca)
  // 		iNsTr_6 := ( $mux iNsTr_4 iNsTr_5  iNsTr_3 ) 
  //  file prog.linked.opt.aa, line 83
  // ( $mux iNsTr_4 iNsTr_5  iNsTr_3 ) 
  MUX_79_inst <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/MUX_79_start/req branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/MUX_79_complete/req) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/MUX_79_start/ack branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/MUX_79_complete/ack)
  // 		iNsTr_7 := LPy1
  //  file prog.linked.opt.aa, line 84
  // LPy1
  LOAD_LPy1_82_gather_scatter <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/LOAD_LPy1_82_Update/LOAD_LPy1_82_Merge/merge_req) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/LOAD_LPy1_82_Update/LOAD_LPy1_82_Merge/merge_ack)
  LOAD_LPy1_82_load_0 <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/LOAD_LPy1_82_Sample/word_access_start/word_0/rr branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/LOAD_LPy1_82_Update/word_access_complete/word_0/cr) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/LOAD_LPy1_82_Sample/word_access_start/word_0/ra branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/LOAD_LPy1_82_Update/word_access_complete/word_0/ca)
  // 		iNsTr_8 := (iNsTr_7 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 85
  // (iNsTr_7 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_88_inst <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SHL_u32_u32_88_Sample/rr branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SHL_u32_u32_88_Update/cr) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SHL_u32_u32_88_Sample/ra branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SHL_u32_u32_88_Update/ca)
  // 		iNsTr_9 := LPy2
  //  file prog.linked.opt.aa, line 86
  // LPy2
  LOAD_LPy2_91_gather_scatter <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/LOAD_LPy2_91_Update/LOAD_LPy2_91_Merge/merge_req) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/LOAD_LPy2_91_Update/LOAD_LPy2_91_Merge/merge_ack)
  LOAD_LPy2_91_load_0 <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/LOAD_LPy2_91_Sample/word_access_start/word_0/rr branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/LOAD_LPy2_91_Update/word_access_complete/word_0/cr) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/LOAD_LPy2_91_Sample/word_access_start/word_0/ra branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/LOAD_LPy2_91_Update/word_access_complete/word_0/ca)
  // 		iNsTr_10 := @(LPbuff[iNsTr_6])
  //  file prog.linked.opt.aa, line 87
  array_obj_ref_95_index_0_resize <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/array_obj_ref_95_index_resize_0/index_resize_req) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/array_obj_ref_95_index_resize_0/index_resize_ack)
  array_obj_ref_95_index_0_rename <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/array_obj_ref_95_index_scale_0/scale_rename_req) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/array_obj_ref_95_index_scale_0/scale_rename_ack)
  array_obj_ref_95_index_offset <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/array_obj_ref_95_final_index_sum_regn/req) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/array_obj_ref_95_final_index_sum_regn/ack)
  array_obj_ref_95_root_address_inst <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/array_obj_ref_95_base_plus_offset/sum_rename_req) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/array_obj_ref_95_base_plus_offset/sum_rename_ack)
  addr_of_96_final_reg <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/addr_of_96_request/req branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/addr_of_96_complete/req) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/addr_of_96_request/ack branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/addr_of_96_complete/ack)
  // 		iNsTr_11 := ->(iNsTr_10)
  //  file prog.linked.opt.aa, line 88
  ptr_deref_100_base_resize <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ptr_deref_100_base_addr_resize/base_resize_req) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ptr_deref_100_base_addr_resize/base_resize_ack)
  ptr_deref_100_root_address_inst <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ptr_deref_100_base_plus_offset/sum_rename_req) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ptr_deref_100_base_plus_offset/sum_rename_ack)
  ptr_deref_100_addr_0 <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ptr_deref_100_word_addrgen/root_register_req) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ptr_deref_100_word_addrgen/root_register_ack)
  ptr_deref_100_gather_scatter <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ptr_deref_100_Update/ptr_deref_100_Merge/merge_req) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ptr_deref_100_Update/ptr_deref_100_Merge/merge_ack)
  ptr_deref_100_load_0 <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ptr_deref_100_Sample/word_access_start/word_0/rr branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ptr_deref_100_Update/word_access_complete/word_0/cr) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ptr_deref_100_Sample/word_access_start/word_0/ra branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ptr_deref_100_Update/word_access_complete/word_0/ca)
  // 		iNsTr_12 := (iNsTr_11 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 89
  // (iNsTr_11 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_106_inst <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SHL_u32_u32_106_Sample/rr branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SHL_u32_u32_106_Update/cr) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SHL_u32_u32_106_Sample/ra branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SHL_u32_u32_106_Update/ca)
  // 		iNsTr_13 := @(LPbuff[iNsTr_2])
  //  file prog.linked.opt.aa, line 90
  array_obj_ref_110_index_0_resize <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/array_obj_ref_110_index_resize_0/index_resize_req) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/array_obj_ref_110_index_resize_0/index_resize_ack)
  array_obj_ref_110_index_0_rename <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/array_obj_ref_110_index_scale_0/scale_rename_req) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/array_obj_ref_110_index_scale_0/scale_rename_ack)
  array_obj_ref_110_index_offset <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/array_obj_ref_110_final_index_sum_regn/req) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/array_obj_ref_110_final_index_sum_regn/ack)
  array_obj_ref_110_root_address_inst <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/array_obj_ref_110_base_plus_offset/sum_rename_req) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/array_obj_ref_110_base_plus_offset/sum_rename_ack)
  addr_of_111_final_reg <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/addr_of_111_request/req branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/addr_of_111_complete/req) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/addr_of_111_request/ack branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/addr_of_111_complete/ack)
  // 		iNsTr_14 := ->(iNsTr_13)
  //  file prog.linked.opt.aa, line 91
  ptr_deref_115_base_resize <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ptr_deref_115_base_addr_resize/base_resize_req) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ptr_deref_115_base_addr_resize/base_resize_ack)
  ptr_deref_115_root_address_inst <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ptr_deref_115_base_plus_offset/sum_rename_req) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ptr_deref_115_base_plus_offset/sum_rename_ack)
  ptr_deref_115_addr_0 <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ptr_deref_115_word_addrgen/root_register_req) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ptr_deref_115_word_addrgen/root_register_ack)
  ptr_deref_115_gather_scatter <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ptr_deref_115_Update/ptr_deref_115_Merge/merge_req) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ptr_deref_115_Update/ptr_deref_115_Merge/merge_ack)
  ptr_deref_115_load_0 <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ptr_deref_115_Sample/word_access_start/word_0/rr branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ptr_deref_115_Update/word_access_complete/word_0/cr) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ptr_deref_115_Sample/word_access_start/word_0/ra branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ptr_deref_115_Update/word_access_complete/word_0/ca)
  // 		iNsTr_15 := (iNsTr_8 + iNsTr_1)
  //  file prog.linked.opt.aa, line 92
  // (iNsTr_8 + iNsTr_1)
  ADD_u32_u32_120_inst <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ADD_u32_u32_120_Sample/rr branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ADD_u32_u32_120_Update/cr) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ADD_u32_u32_120_Sample/ra branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ADD_u32_u32_120_Update/ca)
  // 		iNsTr_16 := (iNsTr_15 - iNsTr_9)
  //  file prog.linked.opt.aa, line 93
  // (iNsTr_15 - iNsTr_9)
  SUB_u32_u32_125_inst <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SUB_u32_u32_125_Sample/rr branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SUB_u32_u32_125_Update/cr) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SUB_u32_u32_125_Sample/ra branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SUB_u32_u32_125_Update/ca)
  // 		iNsTr_17 := (iNsTr_16 + iNsTr_14)
  //  file prog.linked.opt.aa, line 94
  // (iNsTr_16 + iNsTr_14)
  ADD_u32_u32_130_inst <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ADD_u32_u32_130_Sample/rr branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ADD_u32_u32_130_Update/cr) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ADD_u32_u32_130_Sample/ra branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ADD_u32_u32_130_Update/ca)
  // 		iNsTr_18 := (iNsTr_17 - iNsTr_12)
  //  file prog.linked.opt.aa, line 95
  // (iNsTr_17 - iNsTr_12)
  SUB_u32_u32_135_inst <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SUB_u32_u32_135_Sample/rr branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SUB_u32_u32_135_Update/cr) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SUB_u32_u32_135_Sample/ra branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SUB_u32_u32_135_Update/ca)
  // 		LPy2 := iNsTr_7
  //  file prog.linked.opt.aa, line 96
  // LPy2
  STORE_LPy2_137_gather_scatter <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/STORE_LPy2_137_Sample/STORE_LPy2_137_Split/split_req) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/STORE_LPy2_137_Sample/STORE_LPy2_137_Split/split_ack)
  STORE_LPy2_137_store_0 <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/STORE_LPy2_137_Sample/word_access_start/word_0/rr branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/STORE_LPy2_137_Update/word_access_complete/word_0/cr) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/STORE_LPy2_137_Sample/word_access_start/word_0/ra branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/STORE_LPy2_137_Update/word_access_complete/word_0/ca)
  // 		LPy1 := iNsTr_18
  //  file prog.linked.opt.aa, line 97
  // LPy1
  STORE_LPy1_140_gather_scatter <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/STORE_LPy1_140_Sample/STORE_LPy1_140_Split/split_req) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/STORE_LPy1_140_Sample/STORE_LPy1_140_Split/split_ack)
  STORE_LPy1_140_store_0 <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/STORE_LPy1_140_Sample/word_access_start/word_0/rr branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/STORE_LPy1_140_Update/word_access_complete/word_0/cr) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/STORE_LPy1_140_Sample/word_access_start/word_0/ra branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/STORE_LPy1_140_Update/word_access_complete/word_0/ca)
  // 		iNsTr_21 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_18 ) )
  //  file prog.linked.opt.aa, line 98
  // ($cast ($int<64>) iNsTr_18 )
  type_cast_147_inst <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/type_cast_147_Sample/rr branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/type_cast_147_Update/cr) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/type_cast_147_Sample/ra branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/type_cast_147_Update/ca)
  // ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_18 ) )
  type_cast_148_inst <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/type_cast_148_Sample/rr branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/type_cast_148_Update/cr) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/type_cast_148_Sample/ra branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/type_cast_148_Update/ca)
  // 		iNsTr_22 := (($bitcast ($int<32>) iNsTr_18 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.linked.opt.aa, line 99
  // (($bitcast ($int<32>) iNsTr_18 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) iNsTr_18 )
  type_cast_152_inst <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/type_cast_152_Sample/rr branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/type_cast_152_Update/cr) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/type_cast_152_Sample/ra branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/type_cast_152_Update/ca)
  SLT_i32_u1_156_inst <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SLT_i32_u1_156_Sample/rr branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SLT_i32_u1_156_Update/cr) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SLT_i32_u1_156_Sample/ra branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SLT_i32_u1_156_Update/ca)
  // 		iNsTr_23 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - iNsTr_21)
  //  file prog.linked.opt.aa, line 100
  // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - iNsTr_21)
  SUB_u64_u64_162_inst <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SUB_u64_u64_162_Sample/rr branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SUB_u64_u64_162_Update/cr) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SUB_u64_u64_162_Sample/ra branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SUB_u64_u64_162_Update/ca)
  // 		iNsTr_24 := ( $mux iNsTr_22 iNsTr_23  iNsTr_21 ) 
  //  file prog.linked.opt.aa, line 101
  // ( $mux iNsTr_22 iNsTr_23  iNsTr_21 ) 
  MUX_168_inst <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/MUX_168_start/req branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/MUX_168_complete/req) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/MUX_168_start/ack branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/MUX_168_complete/ack)
  // 		iNsTr_25 := (($bitcast ($int<64>) iNsTr_24 ) < ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ))
  //  file prog.linked.opt.aa, line 102
  // (($bitcast ($int<64>) iNsTr_24 ) < ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ))
  // ($bitcast ($int<64>) iNsTr_24 )
  type_cast_172_inst <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/type_cast_172_Sample/rr branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/type_cast_172_Update/cr) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/type_cast_172_Sample/ra branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/type_cast_172_Update/ca)
  SLT_i64_u1_176_inst <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SLT_i64_u1_176_Sample/rr branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SLT_i64_u1_176_Update/cr) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SLT_i64_u1_176_Sample/ra branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/SLT_i64_u1_176_Update/ca)
  // 		iNsTr_26 := (iNsTr_24 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
  //  file prog.linked.opt.aa, line 103
  // (iNsTr_24 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
  ULT_u64_u1_182_inst <=> (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ULT_u64_u1_182_Sample/rr branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ULT_u64_u1_182_Update/cr) (branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ULT_u64_u1_182_Sample/ra branch_block_stmt_46/assign_stmt_52_to_assign_stmt_183/ULT_u64_u1_182_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 104
  if_stmt_184_branch <=> (branch_block_stmt_46/if_stmt_184_eval_test/branch_req) (branch_block_stmt_46/if_stmt_184_else_link/else_choice_transition branch_block_stmt_46/if_stmt_184_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 109
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 112
  // ($cast ($uint<64>) iNsTr_45 )
  type_cast_196_inst <=> (branch_block_stmt_46/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_193/phi_stmt_193_sources/type_cast_196/SplitProtocol/Sample/rr branch_block_stmt_46/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_193/phi_stmt_193_sources/type_cast_196/SplitProtocol/Update/cr) (branch_block_stmt_46/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_193/phi_stmt_193_sources/type_cast_196/SplitProtocol/Sample/ra branch_block_stmt_46/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_193/phi_stmt_193_sources/type_cast_196/SplitProtocol/Update/ca)
  // ($cast ($uint<64>) iNsTr_24 )
  type_cast_198_inst <=> (branch_block_stmt_46/bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_193/phi_stmt_193_sources/type_cast_198/SplitProtocol/Sample/rr branch_block_stmt_46/bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_193/phi_stmt_193_sources/type_cast_198/SplitProtocol/Update/cr) (branch_block_stmt_46/bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_193/phi_stmt_193_sources/type_cast_198/SplitProtocol/Sample/ra branch_block_stmt_46/bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_193/phi_stmt_193_sources/type_cast_198/SplitProtocol/Update/ca)
  phi_stmt_193 <=> (branch_block_stmt_46/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_193/phi_stmt_193_req branch_block_stmt_46/bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_193/phi_stmt_193_req) (branch_block_stmt_46/merge_stmt_192_PhiAck/phi_stmt_193_ack)
  // ($cast ($uint<64>) iNsTr_44 )
  type_cast_202_inst <=> (branch_block_stmt_46/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_199/phi_stmt_199_sources/type_cast_202/SplitProtocol/Sample/rr branch_block_stmt_46/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_199/phi_stmt_199_sources/type_cast_202/SplitProtocol/Update/cr) (branch_block_stmt_46/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_199/phi_stmt_199_sources/type_cast_202/SplitProtocol/Sample/ra branch_block_stmt_46/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_199/phi_stmt_199_sources/type_cast_202/SplitProtocol/Update/ca)
  phi_stmt_199 <=> (branch_block_stmt_46/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_199/phi_stmt_199_req branch_block_stmt_46/bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_199/phi_stmt_199_req) (branch_block_stmt_46/merge_stmt_192_PhiAck/phi_stmt_199_ack)
  // 		iNsTr_40 := (xx_x05x_xix_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 116
  // (xx_x05x_xix_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  LSHR_u64_u64_211_inst <=> (branch_block_stmt_46/assign_stmt_212_to_assign_stmt_218/LSHR_u64_u64_211_Sample/rr branch_block_stmt_46/assign_stmt_212_to_assign_stmt_218/LSHR_u64_u64_211_Update/cr) (branch_block_stmt_46/assign_stmt_212_to_assign_stmt_218/LSHR_u64_u64_211_Sample/ra branch_block_stmt_46/assign_stmt_212_to_assign_stmt_218/LSHR_u64_u64_211_Update/ca)
  // 		iNsTr_41 := (iNsTr_40 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
  //  file prog.linked.opt.aa, line 117
  // (iNsTr_40 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
  UGT_u64_u1_217_inst <=> (branch_block_stmt_46/assign_stmt_212_to_assign_stmt_218/UGT_u64_u1_217_Sample/rr branch_block_stmt_46/assign_stmt_212_to_assign_stmt_218/UGT_u64_u1_217_Update/cr) (branch_block_stmt_46/assign_stmt_212_to_assign_stmt_218/UGT_u64_u1_217_Sample/ra branch_block_stmt_46/assign_stmt_212_to_assign_stmt_218/UGT_u64_u1_217_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 118
  if_stmt_219_branch <=> (branch_block_stmt_46/if_stmt_219_eval_test/branch_req) (branch_block_stmt_46/if_stmt_219_else_link/else_choice_transition branch_block_stmt_46/if_stmt_219_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 123
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 126
  // ($cast ($uint<64>) iNsTr_48 )
  type_cast_231_inst <=> (branch_block_stmt_46/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_228/phi_stmt_228_sources/type_cast_231/SplitProtocol/Sample/rr branch_block_stmt_46/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_228/phi_stmt_228_sources/type_cast_231/SplitProtocol/Update/cr) (branch_block_stmt_46/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_228/phi_stmt_228_sources/type_cast_231/SplitProtocol/Sample/ra branch_block_stmt_46/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_228/phi_stmt_228_sources/type_cast_231/SplitProtocol/Update/ca)
  phi_stmt_228 <=> (branch_block_stmt_46/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_228/phi_stmt_228_req branch_block_stmt_46/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_228/phi_stmt_228_req) (branch_block_stmt_46/merge_stmt_227_PhiAck/phi_stmt_228_ack)
  // ($cast ($uint<64>) iNsTr_49 )
  type_cast_238_inst <=> (branch_block_stmt_46/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_235/phi_stmt_235_sources/type_cast_238/SplitProtocol/Sample/rr branch_block_stmt_46/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_235/phi_stmt_235_sources/type_cast_238/SplitProtocol/Update/cr) (branch_block_stmt_46/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_235/phi_stmt_235_sources/type_cast_238/SplitProtocol/Sample/ra branch_block_stmt_46/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_235/phi_stmt_235_sources/type_cast_238/SplitProtocol/Update/ca)
  phi_stmt_235 <=> (branch_block_stmt_46/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_235/phi_stmt_235_req branch_block_stmt_46/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_235/phi_stmt_235_req) (branch_block_stmt_46/merge_stmt_227_PhiAck/phi_stmt_235_ack)
  // 		iNsTr_48 := (shifted_divisorx_x02x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 130
  // (shifted_divisorx_x02x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  SHL_u64_u64_247_inst <=> (branch_block_stmt_46/assign_stmt_248_to_assign_stmt_259/SHL_u64_u64_247_Sample/rr branch_block_stmt_46/assign_stmt_248_to_assign_stmt_259/SHL_u64_u64_247_Update/cr) (branch_block_stmt_46/assign_stmt_248_to_assign_stmt_259/SHL_u64_u64_247_Sample/ra branch_block_stmt_46/assign_stmt_248_to_assign_stmt_259/SHL_u64_u64_247_Update/ca)
  // 		iNsTr_49 := (curr_quotientx_x01x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 131
  // (curr_quotientx_x01x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  SHL_u64_u64_253_inst <=> (branch_block_stmt_46/assign_stmt_248_to_assign_stmt_259/SHL_u64_u64_253_Sample/rr branch_block_stmt_46/assign_stmt_248_to_assign_stmt_259/SHL_u64_u64_253_Update/cr) (branch_block_stmt_46/assign_stmt_248_to_assign_stmt_259/SHL_u64_u64_253_Sample/ra branch_block_stmt_46/assign_stmt_248_to_assign_stmt_259/SHL_u64_u64_253_Update/ca)
  // 		iNsTr_50 := (iNsTr_48 < iNsTr_40)
  //  file prog.linked.opt.aa, line 132
  // (iNsTr_48 < iNsTr_40)
  ULT_u64_u1_258_inst <=> (branch_block_stmt_46/assign_stmt_248_to_assign_stmt_259/ULT_u64_u1_258_Sample/rr branch_block_stmt_46/assign_stmt_248_to_assign_stmt_259/ULT_u64_u1_258_Update/cr) (branch_block_stmt_46/assign_stmt_248_to_assign_stmt_259/ULT_u64_u1_258_Sample/ra branch_block_stmt_46/assign_stmt_248_to_assign_stmt_259/ULT_u64_u1_258_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 133
  if_stmt_260_branch <=> (branch_block_stmt_46/if_stmt_260_eval_test/branch_req) (branch_block_stmt_46/if_stmt_260_else_link/else_choice_transition branch_block_stmt_46/if_stmt_260_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 138
  // ($cast ($uint<64>) iNsTr_49 )
  type_cast_270_inst <=> (branch_block_stmt_46/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_267/phi_stmt_267_sources/type_cast_270/SplitProtocol/Sample/rr branch_block_stmt_46/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_267/phi_stmt_267_sources/type_cast_270/SplitProtocol/Update/cr) (branch_block_stmt_46/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_267/phi_stmt_267_sources/type_cast_270/SplitProtocol/Sample/ra branch_block_stmt_46/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_267/phi_stmt_267_sources/type_cast_270/SplitProtocol/Update/ca)
  phi_stmt_267 <=> (branch_block_stmt_46/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_267/phi_stmt_267_req) (branch_block_stmt_46/merge_stmt_266_PhiAck/phi_stmt_267_ack)
  // ($cast ($uint<64>) iNsTr_48 )
  type_cast_274_inst <=> (branch_block_stmt_46/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_271/phi_stmt_271_sources/type_cast_274/SplitProtocol/Sample/rr branch_block_stmt_46/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_271/phi_stmt_271_sources/type_cast_274/SplitProtocol/Update/cr) (branch_block_stmt_46/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_271/phi_stmt_271_sources/type_cast_274/SplitProtocol/Sample/ra branch_block_stmt_46/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_271/phi_stmt_271_sources/type_cast_274/SplitProtocol/Update/ca)
  phi_stmt_271 <=> (branch_block_stmt_46/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_271/phi_stmt_271_req) (branch_block_stmt_46/merge_stmt_266_PhiAck/phi_stmt_271_ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 143
  // ($cast ($uint<64>) xx_xlcssa )
  type_cast_284_inst <=> (branch_block_stmt_46/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_278/phi_stmt_278_sources/type_cast_284/SplitProtocol/Sample/rr branch_block_stmt_46/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_278/phi_stmt_278_sources/type_cast_284/SplitProtocol/Update/cr) (branch_block_stmt_46/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_278/phi_stmt_278_sources/type_cast_284/SplitProtocol/Sample/ra branch_block_stmt_46/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_278/phi_stmt_278_sources/type_cast_284/SplitProtocol/Update/ca)
  phi_stmt_278 <=> (branch_block_stmt_46/bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_278/phi_stmt_278_req branch_block_stmt_46/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_278/phi_stmt_278_req) (branch_block_stmt_46/merge_stmt_277_PhiAck/phi_stmt_278_ack)
  // ($cast ($uint<64>) xx_xlcssa1 )
  type_cast_291_inst <=> (branch_block_stmt_46/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_285/phi_stmt_285_sources/type_cast_291/SplitProtocol/Sample/rr branch_block_stmt_46/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_285/phi_stmt_285_sources/type_cast_291/SplitProtocol/Update/cr) (branch_block_stmt_46/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_285/phi_stmt_285_sources/type_cast_291/SplitProtocol/Sample/ra branch_block_stmt_46/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_285/phi_stmt_285_sources/type_cast_291/SplitProtocol/Update/ca)
  phi_stmt_285 <=> (branch_block_stmt_46/bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_285/phi_stmt_285_req branch_block_stmt_46/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_285/phi_stmt_285_req) (branch_block_stmt_46/merge_stmt_277_PhiAck/phi_stmt_285_ack)
  // 		iNsTr_44 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x04x_xix_xi)
  //  file prog.linked.opt.aa, line 147
  // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x04x_xix_xi)
  ADD_u64_u64_296_inst <=> (branch_block_stmt_46/assign_stmt_297_to_assign_stmt_308/ADD_u64_u64_296_Sample/rr branch_block_stmt_46/assign_stmt_297_to_assign_stmt_308/ADD_u64_u64_296_Update/cr) (branch_block_stmt_46/assign_stmt_297_to_assign_stmt_308/ADD_u64_u64_296_Sample/ra branch_block_stmt_46/assign_stmt_297_to_assign_stmt_308/ADD_u64_u64_296_Update/ca)
  // 		iNsTr_45 := (xx_x05x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
  //  file prog.linked.opt.aa, line 148
  // (xx_x05x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
  SUB_u64_u64_301_inst <=> (branch_block_stmt_46/assign_stmt_297_to_assign_stmt_308/SUB_u64_u64_301_Sample/rr branch_block_stmt_46/assign_stmt_297_to_assign_stmt_308/SUB_u64_u64_301_Update/cr) (branch_block_stmt_46/assign_stmt_297_to_assign_stmt_308/SUB_u64_u64_301_Sample/ra branch_block_stmt_46/assign_stmt_297_to_assign_stmt_308/SUB_u64_u64_301_Update/ca)
  // 		iNsTr_46 := (iNsTr_45 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
  //  file prog.linked.opt.aa, line 149
  // (iNsTr_45 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
  ULT_u64_u1_307_inst <=> (branch_block_stmt_46/assign_stmt_297_to_assign_stmt_308/ULT_u64_u1_307_Sample/rr branch_block_stmt_46/assign_stmt_297_to_assign_stmt_308/ULT_u64_u1_307_Update/cr) (branch_block_stmt_46/assign_stmt_297_to_assign_stmt_308/ULT_u64_u1_307_Sample/ra branch_block_stmt_46/assign_stmt_297_to_assign_stmt_308/ULT_u64_u1_307_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 150
  if_stmt_309_branch <=> (branch_block_stmt_46/if_stmt_309_eval_test/branch_req) (branch_block_stmt_46/if_stmt_309_else_link/else_choice_transition branch_block_stmt_46/if_stmt_309_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 155
  // ($cast ($uint<64>) iNsTr_44 )
  type_cast_319_inst <=> (branch_block_stmt_46/xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit_PhiReq/phi_stmt_316/phi_stmt_316_sources/type_cast_319/SplitProtocol/Sample/rr branch_block_stmt_46/xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit_PhiReq/phi_stmt_316/phi_stmt_316_sources/type_cast_319/SplitProtocol/Update/cr) (branch_block_stmt_46/xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit_PhiReq/phi_stmt_316/phi_stmt_316_sources/type_cast_319/SplitProtocol/Sample/ra branch_block_stmt_46/xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit_PhiReq/phi_stmt_316/phi_stmt_316_sources/type_cast_319/SplitProtocol/Update/ca)
  phi_stmt_316 <=> (branch_block_stmt_46/xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit_PhiReq/phi_stmt_316/phi_stmt_316_req) (branch_block_stmt_46/merge_stmt_315_PhiAck/phi_stmt_316_ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 159
  // ($cast ($uint<64>) xx_xlcssa2 )
  type_cast_329_inst <=> (branch_block_stmt_46/divideSignedx_xexitx_xloopexit_divideSignedx_xexit_PhiReq/phi_stmt_323/phi_stmt_323_sources/type_cast_329/SplitProtocol/Sample/rr branch_block_stmt_46/divideSignedx_xexitx_xloopexit_divideSignedx_xexit_PhiReq/phi_stmt_323/phi_stmt_323_sources/type_cast_329/SplitProtocol/Update/cr) (branch_block_stmt_46/divideSignedx_xexitx_xloopexit_divideSignedx_xexit_PhiReq/phi_stmt_323/phi_stmt_323_sources/type_cast_329/SplitProtocol/Sample/ra branch_block_stmt_46/divideSignedx_xexitx_xloopexit_divideSignedx_xexit_PhiReq/phi_stmt_323/phi_stmt_323_sources/type_cast_329/SplitProtocol/Update/ca)
  phi_stmt_323 <=> (branch_block_stmt_46/bb_0_divideSignedx_xexit_PhiReq/phi_stmt_323/phi_stmt_323_req branch_block_stmt_46/divideSignedx_xexitx_xloopexit_divideSignedx_xexit_PhiReq/phi_stmt_323/phi_stmt_323_req) (branch_block_stmt_46/merge_stmt_322_PhiAck/phi_stmt_323_ack)
  // 		iNsTr_28 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - quotientx_x1x_xix_xi)
  //  file prog.linked.opt.aa, line 162
  // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - quotientx_x1x_xix_xi)
  SUB_u64_u64_335_inst <=> (branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/SUB_u64_u64_335_Sample/rr branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/SUB_u64_u64_335_Update/cr) (branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/SUB_u64_u64_335_Sample/ra branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/SUB_u64_u64_335_Update/ca)
  // 		iNsTr_29 := ( $mux iNsTr_25 iNsTr_28  quotientx_x1x_xix_xi ) 
  //  file prog.linked.opt.aa, line 163
  // ( $mux iNsTr_25 iNsTr_28  quotientx_x1x_xix_xi ) 
  MUX_341_inst <=> (branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/MUX_341_start/req branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/MUX_341_complete/req) (branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/MUX_341_start/ack branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/MUX_341_complete/ack)
  // 		iNsTr_30 := ($cast ($uint<32>) iNsTr_29 )
  //  file prog.linked.opt.aa, line 164
  // ($cast ($uint<32>) iNsTr_29 )
  type_cast_345_inst <=> (branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/type_cast_345_Sample/rr branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/type_cast_345_Update/cr) (branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/type_cast_345_Sample/ra branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/type_cast_345_Update/ca)
  // 		->(iNsTr_13) := iNsTr_1
  //  file prog.linked.opt.aa, line 165
  ptr_deref_348_base_resize <=> (branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/ptr_deref_348_base_addr_resize/base_resize_req) (branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/ptr_deref_348_base_addr_resize/base_resize_ack)
  ptr_deref_348_root_address_inst <=> (branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/ptr_deref_348_base_plus_offset/sum_rename_req) (branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/ptr_deref_348_base_plus_offset/sum_rename_ack)
  ptr_deref_348_addr_0 <=> (branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/ptr_deref_348_word_addrgen/root_register_req) (branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/ptr_deref_348_word_addrgen/root_register_ack)
  ptr_deref_348_gather_scatter <=> (branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/ptr_deref_348_Sample/ptr_deref_348_Split/split_req) (branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/ptr_deref_348_Sample/ptr_deref_348_Split/split_ack)
  ptr_deref_348_store_0 <=> (branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/ptr_deref_348_Sample/word_access_start/word_0/rr branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/ptr_deref_348_Update/word_access_complete/word_0/cr) (branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/ptr_deref_348_Sample/word_access_start/word_0/ra branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/ptr_deref_348_Update/word_access_complete/word_0/ca)
  // 		iNsTr_32 := (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 166
  // (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_355_inst <=> (branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/ADD_u32_u32_355_Sample/rr branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/ADD_u32_u32_355_Update/cr) (branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/ADD_u32_u32_355_Sample/ra branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/ADD_u32_u32_355_Update/ca)
  // 		iNsTr_33 := (iNsTr_32 == ($bitcast ($uint<32>) _b00000000000000000000000000001010  ))
  //  file prog.linked.opt.aa, line 167
  // (iNsTr_32 == ($bitcast ($uint<32>) _b00000000000000000000000000001010  ))
  EQ_u32_u1_361_inst <=> (branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/EQ_u32_u1_361_Sample/rr branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/EQ_u32_u1_361_Update/cr) (branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/EQ_u32_u1_361_Sample/ra branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/EQ_u32_u1_361_Update/ca)
  // 		iNsTr_34 := ( $mux iNsTr_33 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_32 ) 
  //  file prog.linked.opt.aa, line 168
  // ( $mux iNsTr_33 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_32 ) 
  MUX_368_inst <=> (branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/MUX_368_start/req branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/MUX_368_complete/req) (branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/MUX_368_start/ack branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/MUX_368_complete/ack)
  // 		LPbuff_ptr := iNsTr_34
  //  file prog.linked.opt.aa, line 169
  // LPbuff_ptr
  STORE_LPbuff_ptr_370_gather_scatter <=> (branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/STORE_LPbuff_ptr_370_Sample/STORE_LPbuff_ptr_370_Split/split_req) (branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/STORE_LPbuff_ptr_370_Sample/STORE_LPbuff_ptr_370_Split/split_ack)
  STORE_LPbuff_ptr_370_store_0 <=> (branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/STORE_LPbuff_ptr_370_Sample/word_access_start/word_0/rr branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/STORE_LPbuff_ptr_370_Update/word_access_complete/word_0/cr) (branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/STORE_LPbuff_ptr_370_Sample/word_access_start/word_0/ra branch_block_stmt_46/assign_stmt_336_to_assign_stmt_372/STORE_LPbuff_ptr_370_Update/word_access_complete/word_0/ca)
  // 		LPout_pipe := iNsTr_30
  //  file prog.linked.opt.aa, line 170
  // LPout_pipe
  WPIPE_LPout_pipe_373_inst <=> (branch_block_stmt_46/assign_stmt_375/WPIPE_LPout_pipe_373_Sample/req branch_block_stmt_46/assign_stmt_375/WPIPE_LPout_pipe_373_Update/req) (branch_block_stmt_46/assign_stmt_375/WPIPE_LPout_pipe_373_Sample/ack branch_block_stmt_46/assign_stmt_375/WPIPE_LPout_pipe_373_Update/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 172
}
$module [hpFilt] 
{
  // pipe-declarations for block %hpFilt
  //  file prog.linked.opt.aa, line 176
  // pipe-declarations for block %hpFilt%body
  //  file prog.linked.opt.aa, line 181
  // pipe-declarations for block %hpFilt%body%
  //  file prog.linked.opt.aa, line 209
  // pipe-declarations for block %hpFilt%body%
  //  file prog.linked.opt.aa, line 212
  // pipe-declarations for block %hpFilt%body%
  //  file prog.linked.opt.aa, line 223
  // pipe-declarations for block %hpFilt%body%
  //  file prog.linked.opt.aa, line 226
  // pipe-declarations for block %hpFilt%body%
  //  file prog.linked.opt.aa, line 238
  // pipe-declarations for block %hpFilt%body%
  //  file prog.linked.opt.aa, line 243
  // pipe-declarations for block %hpFilt%body%
  //  file prog.linked.opt.aa, line 255
  // pipe-declarations for block %hpFilt%body%
  //  file prog.linked.opt.aa, line 259
  // pipe-declarations for block %hpFilt%body%
  //  file prog.linked.opt.aa, line 273
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_381] // Branch Block  file prog.linked.opt.aa, line 181
    {
      $P [branch_block_stmt_381__entry__]
      branch_block_stmt_381__entry__ <-| ($entry)
      $P [branch_block_stmt_381__exit__]
      branch_block_stmt_381__exit__ |-> ($exit)
      $P [assign_stmt_384__entry__] 
      $P [assign_stmt_384__exit__] 
      $P [assign_stmt_387_to_assign_stmt_490__entry__] 
      $P [assign_stmt_387_to_assign_stmt_490__exit__] 
      $P [if_stmt_491__entry__] 
      $P [if_stmt_491__exit__] 
      $P [merge_stmt_497__entry__] 
      $P [merge_stmt_497__exit__] 
      $P [bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi]
      $P [merge_stmt_499__exit__] 
      $P [assign_stmt_519_to_assign_stmt_525__entry__] 
      $P [assign_stmt_519_to_assign_stmt_525__exit__] 
      $P [if_stmt_526__entry__] 
      $P [if_stmt_526__exit__] 
      $P [merge_stmt_532__entry__] 
      $P [merge_stmt_532__exit__] 
      $P [bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi]
      $P [merge_stmt_534__exit__] 
      $P [assign_stmt_555_to_assign_stmt_566__entry__] 
      $P [assign_stmt_555_to_assign_stmt_566__exit__] 
      $P [if_stmt_567__entry__] 
      $P [if_stmt_567__exit__] 
      $P [merge_stmt_573__entry__] 
      $P [merge_stmt_573__exit__] 
      $P [xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi]
      $P [merge_stmt_584__exit__] 
      $P [assign_stmt_604_to_assign_stmt_615__entry__] 
      $P [assign_stmt_604_to_assign_stmt_615__exit__] 
      $P [if_stmt_616__entry__] 
      $P [if_stmt_616__exit__] 
      $P [merge_stmt_622__entry__] 
      $P [merge_stmt_622__exit__] 
      $P [divideSignedx_xexitx_xloopexit_divideSignedx_xexit]
      $P [merge_stmt_629__exit__] 
      $P [assign_stmt_643_to_assign_stmt_684__entry__] 
      $P [assign_stmt_643_to_assign_stmt_684__exit__] 
      $P [assign_stmt_687__entry__] 
      $P [assign_stmt_687__exit__] 
      $P [return__]
      $P [merge_stmt_689__exit__] 
      ::[assign_stmt_384] 
      {
        // 		iNsTr_1 := LPout_pipe
        //  file prog.linked.opt.aa, line 183
        // Source expression
        // LPout_pipe
        $T[RPIPE_LPout_pipe_383_sample_start_] 
        $T[RPIPE_LPout_pipe_383_sample_completed_] 
        $T[RPIPE_LPout_pipe_383_update_start_] 
        $T[RPIPE_LPout_pipe_383_update_completed_] 
        ;;[RPIPE_LPout_pipe_383_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_LPout_pipe_383_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_LPout_pipe_383_sample_start_ &-> (RPIPE_LPout_pipe_383_Sample)
        RPIPE_LPout_pipe_383_sample_completed_ <-& (RPIPE_LPout_pipe_383_Sample)
        RPIPE_LPout_pipe_383_sample_completed_ &-> ($null)
        RPIPE_LPout_pipe_383_update_start_ &-> (RPIPE_LPout_pipe_383_Update)
        RPIPE_LPout_pipe_383_update_completed_ <-& (RPIPE_LPout_pipe_383_Update)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // barrier: 		iNsTr_1 := LPout_pipe
        // load-store dependencies..
        // pipe read/write dependencies for pipe LPout_pipe
      }
      assign_stmt_384__entry__ |-> (assign_stmt_384)
      assign_stmt_384__exit__ <-| (assign_stmt_384)
      ::[assign_stmt_387_to_assign_stmt_490] 
      {
        // 		iNsTr_2 := HPbuff_ptr
        //  file prog.linked.opt.aa, line 184
        // Source expression
        // HPbuff_ptr
        $T[LOAD_HPbuff_ptr_386_sample_start_] 
        $T[LOAD_HPbuff_ptr_386_sample_completed_] 
        $T[LOAD_HPbuff_ptr_386_update_start_] 
        $T[LOAD_HPbuff_ptr_386_update_completed_] 
        $T[LOAD_HPbuff_ptr_386_sample_start_] 
        $T[LOAD_HPbuff_ptr_386_sample_completed_] 
        $T[LOAD_HPbuff_ptr_386_update_start_] 
        $T[LOAD_HPbuff_ptr_386_update_completed_] 
        $T[LOAD_HPbuff_ptr_386_word_address_calculated] 
        $T[LOAD_HPbuff_ptr_386_root_address_calculated] 
        LOAD_HPbuff_ptr_386_word_address_calculated <-& (LOAD_HPbuff_ptr_386_root_address_calculated)
        ;;[LOAD_HPbuff_ptr_386_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_HPbuff_ptr_386_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_HPbuff_ptr_386_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_HPbuff_ptr_386_sample_start_ <-& (LOAD_HPbuff_ptr_386_word_address_calculated)
        LOAD_HPbuff_ptr_386_sample_start_ &-> (LOAD_HPbuff_ptr_386_Sample)
        LOAD_HPbuff_ptr_386_sample_completed_ <-& (LOAD_HPbuff_ptr_386_Sample)
        LOAD_HPbuff_ptr_386_sample_completed_ &-> ($null)
        LOAD_HPbuff_ptr_386_update_start_ &-> (LOAD_HPbuff_ptr_386_Update)
        LOAD_HPbuff_ptr_386_update_completed_ <-& (LOAD_HPbuff_ptr_386_Update)
        // Target expression
        // (as target) iNsTr_2
        // iNsTr_2
        // implicit reference
        // 		iNsTr_3 := (iNsTr_2 + ($bitcast ($uint<32>) _b11111111111111111111111111110100  ))
        //  file prog.linked.opt.aa, line 185
        // Source expression
        // (iNsTr_2 + ($bitcast ($uint<32>) _b11111111111111111111111111110100  ))
        $T[ADD_u32_u32_392_sample_start_] 
        $T[ADD_u32_u32_392_sample_completed_] 
        $T[ADD_u32_u32_392_update_start_] 
        $T[ADD_u32_u32_392_update_completed_] 
        // iNsTr_2
        $T[R_iNsTr_2_389_sample_start_] 
        $T[R_iNsTr_2_389_sample_completed_] 
        $T[R_iNsTr_2_389_update_start_] 
        $T[R_iNsTr_2_389_update_completed_] 
        // implicit reference
        R_iNsTr_2_389_sample_start_ <-& (LOAD_HPbuff_ptr_386_update_completed_)
        R_iNsTr_2_389_sample_completed_ <-& (R_iNsTr_2_389_sample_start_)
        R_iNsTr_2_389_update_start_ <-& (R_iNsTr_2_389_sample_completed_)
        R_iNsTr_2_389_update_completed_ <-& (R_iNsTr_2_389_update_start_)
        ADD_u32_u32_392_sample_start_ <-& (R_iNsTr_2_389_update_completed_)
        ;;[ADD_u32_u32_392_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_392_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_392_sample_start_ &-> (ADD_u32_u32_392_Sample)
        ADD_u32_u32_392_sample_completed_ <-& (ADD_u32_u32_392_Sample)
        ADD_u32_u32_392_sample_completed_ &-> ($null)
        ADD_u32_u32_392_update_start_ &-> (ADD_u32_u32_392_Update)
        ADD_u32_u32_392_update_completed_ <-& (ADD_u32_u32_392_Update)
        // Target expression
        // (as target) iNsTr_3
        // iNsTr_3
        // implicit reference
        // 		iNsTr_4 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.linked.opt.aa, line 186
        // Source expression
        // (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[SLT_i32_u1_400_sample_start_] 
        $T[SLT_i32_u1_400_sample_completed_] 
        $T[SLT_i32_u1_400_update_start_] 
        $T[SLT_i32_u1_400_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_3 )
        $T[type_cast_396_sample_start_] 
        $T[type_cast_396_sample_completed_] 
        $T[type_cast_396_update_start_] 
        $T[type_cast_396_update_completed_] 
        // iNsTr_3
        $T[R_iNsTr_3_395_sample_start_] 
        $T[R_iNsTr_3_395_sample_completed_] 
        $T[R_iNsTr_3_395_update_start_] 
        $T[R_iNsTr_3_395_update_completed_] 
        // implicit reference
        R_iNsTr_3_395_sample_start_ <-& (ADD_u32_u32_392_update_completed_)
        R_iNsTr_3_395_sample_completed_ <-& (R_iNsTr_3_395_sample_start_)
        R_iNsTr_3_395_update_start_ <-& (R_iNsTr_3_395_sample_completed_)
        R_iNsTr_3_395_update_completed_ <-& (R_iNsTr_3_395_update_start_)
        type_cast_396_sample_start_ <-& (R_iNsTr_3_395_update_completed_)
        ;;[type_cast_396_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_396_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_396_sample_start_ &-> (type_cast_396_Sample)
        type_cast_396_sample_completed_ <-& (type_cast_396_Sample)
        type_cast_396_sample_completed_ &-> ($null)
        type_cast_396_update_start_ &-> (type_cast_396_Update)
        type_cast_396_update_completed_ <-& (type_cast_396_Update)
        // flow-through
        type_cast_396_update_start_ <-& (type_cast_396_sample_completed_)
        SLT_i32_u1_400_sample_start_ <-& (type_cast_396_update_completed_)
        ;;[SLT_i32_u1_400_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_i32_u1_400_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_i32_u1_400_sample_start_ &-> (SLT_i32_u1_400_Sample)
        SLT_i32_u1_400_sample_completed_ <-& (SLT_i32_u1_400_Sample)
        SLT_i32_u1_400_sample_completed_ &-> ($null)
        SLT_i32_u1_400_update_start_ &-> (SLT_i32_u1_400_Update)
        SLT_i32_u1_400_update_completed_ <-& (SLT_i32_u1_400_Update)
        // Target expression
        // (as target) iNsTr_4
        // iNsTr_4
        // implicit reference
        // 		iNsTr_5 := (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000001101  ))
        //  file prog.linked.opt.aa, line 187
        // Source expression
        // (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000001101  ))
        $T[ADD_u32_u32_406_sample_start_] 
        $T[ADD_u32_u32_406_sample_completed_] 
        $T[ADD_u32_u32_406_update_start_] 
        $T[ADD_u32_u32_406_update_completed_] 
        // iNsTr_2
        $T[R_iNsTr_2_403_sample_start_] 
        $T[R_iNsTr_2_403_sample_completed_] 
        $T[R_iNsTr_2_403_update_start_] 
        $T[R_iNsTr_2_403_update_completed_] 
        // implicit reference
        R_iNsTr_2_403_sample_start_ <-& (LOAD_HPbuff_ptr_386_update_completed_)
        R_iNsTr_2_403_sample_completed_ <-& (R_iNsTr_2_403_sample_start_)
        R_iNsTr_2_403_update_start_ <-& (R_iNsTr_2_403_sample_completed_)
        R_iNsTr_2_403_update_completed_ <-& (R_iNsTr_2_403_update_start_)
        ADD_u32_u32_406_sample_start_ <-& (R_iNsTr_2_403_update_completed_)
        ;;[ADD_u32_u32_406_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_406_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_406_sample_start_ &-> (ADD_u32_u32_406_Sample)
        ADD_u32_u32_406_sample_completed_ <-& (ADD_u32_u32_406_Sample)
        ADD_u32_u32_406_sample_completed_ &-> ($null)
        ADD_u32_u32_406_update_start_ &-> (ADD_u32_u32_406_Update)
        ADD_u32_u32_406_update_completed_ <-& (ADD_u32_u32_406_Update)
        // Target expression
        // (as target) iNsTr_5
        // iNsTr_5
        // implicit reference
        // 		iNsTr_6 := ( $mux iNsTr_4 iNsTr_5  iNsTr_3 ) 
        //  file prog.linked.opt.aa, line 188
        // Source expression
        // ( $mux iNsTr_4 iNsTr_5  iNsTr_3 ) 
        $T[MUX_412_sample_start_] 
        $T[MUX_412_sample_completed_] 
        $T[MUX_412_update_start_] 
        $T[MUX_412_update_completed_] 
        // iNsTr_4
        $T[R_iNsTr_4_409_sample_start_] 
        $T[R_iNsTr_4_409_sample_completed_] 
        $T[R_iNsTr_4_409_update_start_] 
        $T[R_iNsTr_4_409_update_completed_] 
        // implicit reference
        R_iNsTr_4_409_sample_start_ <-& (SLT_i32_u1_400_update_completed_)
        R_iNsTr_4_409_sample_completed_ <-& (R_iNsTr_4_409_sample_start_)
        R_iNsTr_4_409_update_start_ <-& (R_iNsTr_4_409_sample_completed_)
        R_iNsTr_4_409_update_completed_ <-& (R_iNsTr_4_409_update_start_)
        // iNsTr_5
        $T[R_iNsTr_5_410_sample_start_] 
        $T[R_iNsTr_5_410_sample_completed_] 
        $T[R_iNsTr_5_410_update_start_] 
        $T[R_iNsTr_5_410_update_completed_] 
        // implicit reference
        R_iNsTr_5_410_sample_start_ <-& (ADD_u32_u32_406_update_completed_)
        R_iNsTr_5_410_sample_completed_ <-& (R_iNsTr_5_410_sample_start_)
        R_iNsTr_5_410_update_start_ <-& (R_iNsTr_5_410_sample_completed_)
        R_iNsTr_5_410_update_completed_ <-& (R_iNsTr_5_410_update_start_)
        // iNsTr_3
        $T[R_iNsTr_3_411_sample_start_] 
        $T[R_iNsTr_3_411_sample_completed_] 
        $T[R_iNsTr_3_411_update_start_] 
        $T[R_iNsTr_3_411_update_completed_] 
        // implicit reference
        R_iNsTr_3_411_sample_start_ <-& (ADD_u32_u32_392_update_completed_)
        R_iNsTr_3_411_sample_completed_ <-& (R_iNsTr_3_411_sample_start_)
        R_iNsTr_3_411_update_start_ <-& (R_iNsTr_3_411_sample_completed_)
        R_iNsTr_3_411_update_completed_ <-& (R_iNsTr_3_411_update_start_)
        MUX_412_sample_start_ <-& (R_iNsTr_4_409_update_completed_)
        MUX_412_sample_start_ <-& (R_iNsTr_5_410_update_completed_)
        MUX_412_sample_start_ <-& (R_iNsTr_3_411_update_completed_)
        ;;[MUX_412_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_412_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_412_sample_start_ &-> (MUX_412_start)
        MUX_412_sample_completed_ <-& (MUX_412_start)
        MUX_412_update_start_ &-> (MUX_412_complete)
        MUX_412_update_completed_ <-& (MUX_412_complete)
        MUX_412_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_6
        // iNsTr_6
        // implicit reference
        // 		iNsTr_7 := HPy1
        //  file prog.linked.opt.aa, line 189
        // Source expression
        // HPy1
        $T[LOAD_HPy1_415_sample_start_] 
        $T[LOAD_HPy1_415_sample_completed_] 
        $T[LOAD_HPy1_415_update_start_] 
        $T[LOAD_HPy1_415_update_completed_] 
        $T[LOAD_HPy1_415_sample_start_] 
        $T[LOAD_HPy1_415_sample_completed_] 
        $T[LOAD_HPy1_415_update_start_] 
        $T[LOAD_HPy1_415_update_completed_] 
        $T[LOAD_HPy1_415_word_address_calculated] 
        $T[LOAD_HPy1_415_root_address_calculated] 
        LOAD_HPy1_415_word_address_calculated <-& (LOAD_HPy1_415_root_address_calculated)
        ;;[LOAD_HPy1_415_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_HPy1_415_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_HPy1_415_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_HPy1_415_sample_start_ <-& (LOAD_HPy1_415_word_address_calculated)
        LOAD_HPy1_415_sample_start_ &-> (LOAD_HPy1_415_Sample)
        LOAD_HPy1_415_sample_completed_ <-& (LOAD_HPy1_415_Sample)
        LOAD_HPy1_415_sample_completed_ &-> ($null)
        LOAD_HPy1_415_update_start_ &-> (LOAD_HPy1_415_Update)
        LOAD_HPy1_415_update_completed_ <-& (LOAD_HPy1_415_Update)
        // Target expression
        // (as target) iNsTr_7
        // iNsTr_7
        // implicit reference
        // 		iNsTr_8 := @(HPbuff[iNsTr_2])
        //  file prog.linked.opt.aa, line 190
        // Source expression
        // @(HPbuff[iNsTr_2])
        $T[addr_of_420_sample_start_] 
        $T[addr_of_420_sample_completed_] 
        $T[addr_of_420_update_start_] 
        $T[addr_of_420_update_completed_] 
        $T[array_obj_ref_419_root_address_calculated] 
        $T[array_obj_ref_419_offset_calculated] 
        $T[array_obj_ref_419_index_resized_0] 
        $T[array_obj_ref_419_index_scaled_0] 
        // iNsTr_2
        $T[R_iNsTr_2_418_sample_start_] 
        $T[R_iNsTr_2_418_sample_completed_] 
        $T[R_iNsTr_2_418_update_start_] 
        $T[R_iNsTr_2_418_update_completed_] 
        // implicit reference
        R_iNsTr_2_418_sample_start_ <-& (LOAD_HPbuff_ptr_386_update_completed_)
        R_iNsTr_2_418_sample_completed_ <-& (R_iNsTr_2_418_sample_start_)
        R_iNsTr_2_418_update_start_ <-& (R_iNsTr_2_418_sample_completed_)
        R_iNsTr_2_418_update_completed_ <-& (R_iNsTr_2_418_update_start_)
        ;;[array_obj_ref_419_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        R_iNsTr_2_418_update_completed_ &-> (array_obj_ref_419_index_resize_0)
        array_obj_ref_419_index_resized_0 <-& (array_obj_ref_419_index_resize_0)
        ;;[array_obj_ref_419_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_419_index_resized_0 &-> (array_obj_ref_419_index_scale_0)
        array_obj_ref_419_index_scaled_0 <-& (array_obj_ref_419_index_scale_0)
        ;;[array_obj_ref_419_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_419_index_scaled_0 &-> (array_obj_ref_419_final_index_sum_regn)
        array_obj_ref_419_offset_calculated <-& (array_obj_ref_419_final_index_sum_regn)
        ;;[array_obj_ref_419_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_419_offset_calculated &-> (array_obj_ref_419_base_plus_offset)
        array_obj_ref_419_root_address_calculated <-& (array_obj_ref_419_base_plus_offset)
        ;;[addr_of_420_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_420_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_420_sample_start_ <-& (array_obj_ref_419_root_address_calculated)
        addr_of_420_sample_start_ &-> (addr_of_420_request)
        addr_of_420_sample_completed_ <-& (addr_of_420_request)
        addr_of_420_update_start_ &-> (addr_of_420_complete)
        addr_of_420_update_completed_ <-& (addr_of_420_complete)
        // Target expression
        // (as target) iNsTr_8
        // iNsTr_8
        // implicit reference
        // 		iNsTr_9 := ->(iNsTr_8)
        //  file prog.linked.opt.aa, line 191
        // Source expression
        // ->(iNsTr_8)
        $T[ptr_deref_424_sample_start_] 
        $T[ptr_deref_424_sample_completed_] 
        $T[ptr_deref_424_update_start_] 
        $T[ptr_deref_424_update_completed_] 
        $T[ptr_deref_424_base_address_calculated] 
        // iNsTr_8
        $T[R_iNsTr_8_423_sample_start_] 
        $T[R_iNsTr_8_423_sample_completed_] 
        $T[R_iNsTr_8_423_update_start_] 
        $T[R_iNsTr_8_423_update_completed_] 
        // implicit reference
        R_iNsTr_8_423_sample_start_ <-& (addr_of_420_update_completed_)
        R_iNsTr_8_423_sample_completed_ <-& (R_iNsTr_8_423_sample_start_)
        R_iNsTr_8_423_update_start_ <-& (R_iNsTr_8_423_sample_completed_)
        R_iNsTr_8_423_update_completed_ <-& (R_iNsTr_8_423_update_start_)
        $T[ptr_deref_424_word_address_calculated] 
        $T[ptr_deref_424_root_address_calculated] 
        $T[ptr_deref_424_base_address_resized] 
        ;;[ptr_deref_424_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_424_base_address_calculated &-> (ptr_deref_424_base_addr_resize)
        ptr_deref_424_base_address_resized <-& (ptr_deref_424_base_addr_resize)
        ;;[ptr_deref_424_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_424_base_address_resized &-> (ptr_deref_424_base_plus_offset)
        ptr_deref_424_root_address_calculated <-& (ptr_deref_424_base_plus_offset)
        ;;[ptr_deref_424_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_424_root_address_calculated &-> (ptr_deref_424_word_addrgen)
        ptr_deref_424_word_address_calculated <-& (ptr_deref_424_word_addrgen)
        ;;[ptr_deref_424_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_424_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_424_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_424_sample_start_ <-& (ptr_deref_424_word_address_calculated)
        ptr_deref_424_sample_start_ &-> (ptr_deref_424_Sample)
        ptr_deref_424_sample_completed_ <-& (ptr_deref_424_Sample)
        ptr_deref_424_sample_completed_ &-> ($null)
        ptr_deref_424_update_start_ &-> (ptr_deref_424_Update)
        ptr_deref_424_update_completed_ <-& (ptr_deref_424_Update)
        ptr_deref_424_base_address_calculated <-& (R_iNsTr_8_423_update_completed_)
        ptr_deref_424_sample_start_ <-& (ptr_deref_424_base_address_calculated)
        // Target expression
        // (as target) iNsTr_9
        // iNsTr_9
        // implicit reference
        // 		iNsTr_10 := (iNsTr_7 + iNsTr_1)
        //  file prog.linked.opt.aa, line 192
        // Source expression
        // (iNsTr_7 + iNsTr_1)
        $T[ADD_u32_u32_429_sample_start_] 
        $T[ADD_u32_u32_429_sample_completed_] 
        $T[ADD_u32_u32_429_update_start_] 
        $T[ADD_u32_u32_429_update_completed_] 
        // iNsTr_7
        $T[R_iNsTr_7_427_sample_start_] 
        $T[R_iNsTr_7_427_sample_completed_] 
        $T[R_iNsTr_7_427_update_start_] 
        $T[R_iNsTr_7_427_update_completed_] 
        // implicit reference
        R_iNsTr_7_427_sample_start_ <-& (LOAD_HPy1_415_update_completed_)
        R_iNsTr_7_427_sample_completed_ <-& (R_iNsTr_7_427_sample_start_)
        R_iNsTr_7_427_update_start_ <-& (R_iNsTr_7_427_sample_completed_)
        R_iNsTr_7_427_update_completed_ <-& (R_iNsTr_7_427_update_start_)
        // iNsTr_1
        $T[R_iNsTr_1_428_sample_start_] 
        $T[R_iNsTr_1_428_sample_completed_] 
        $T[R_iNsTr_1_428_update_start_] 
        $T[R_iNsTr_1_428_update_completed_] 
        // implicit reference
        R_iNsTr_1_428_sample_start_ <-& ($entry)
        R_iNsTr_1_428_sample_completed_ <-& (R_iNsTr_1_428_sample_start_)
        R_iNsTr_1_428_update_start_ <-& (R_iNsTr_1_428_sample_completed_)
        R_iNsTr_1_428_update_completed_ <-& (R_iNsTr_1_428_update_start_)
        ADD_u32_u32_429_sample_start_ <-& (R_iNsTr_7_427_update_completed_)
        ADD_u32_u32_429_sample_start_ <-& (R_iNsTr_1_428_update_completed_)
        ;;[ADD_u32_u32_429_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_429_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_429_sample_start_ &-> (ADD_u32_u32_429_Sample)
        ADD_u32_u32_429_sample_completed_ <-& (ADD_u32_u32_429_Sample)
        ADD_u32_u32_429_sample_completed_ &-> ($null)
        ADD_u32_u32_429_update_start_ &-> (ADD_u32_u32_429_Update)
        ADD_u32_u32_429_update_completed_ <-& (ADD_u32_u32_429_Update)
        // Target expression
        // (as target) iNsTr_10
        // iNsTr_10
        // implicit reference
        // 		iNsTr_11 := (iNsTr_10 - iNsTr_9)
        //  file prog.linked.opt.aa, line 193
        // Source expression
        // (iNsTr_10 - iNsTr_9)
        $T[SUB_u32_u32_434_sample_start_] 
        $T[SUB_u32_u32_434_sample_completed_] 
        $T[SUB_u32_u32_434_update_start_] 
        $T[SUB_u32_u32_434_update_completed_] 
        // iNsTr_10
        $T[R_iNsTr_10_432_sample_start_] 
        $T[R_iNsTr_10_432_sample_completed_] 
        $T[R_iNsTr_10_432_update_start_] 
        $T[R_iNsTr_10_432_update_completed_] 
        // implicit reference
        R_iNsTr_10_432_sample_start_ <-& (ADD_u32_u32_429_update_completed_)
        R_iNsTr_10_432_sample_completed_ <-& (R_iNsTr_10_432_sample_start_)
        R_iNsTr_10_432_update_start_ <-& (R_iNsTr_10_432_sample_completed_)
        R_iNsTr_10_432_update_completed_ <-& (R_iNsTr_10_432_update_start_)
        // iNsTr_9
        $T[R_iNsTr_9_433_sample_start_] 
        $T[R_iNsTr_9_433_sample_completed_] 
        $T[R_iNsTr_9_433_update_start_] 
        $T[R_iNsTr_9_433_update_completed_] 
        // implicit reference
        R_iNsTr_9_433_sample_start_ <-& (ptr_deref_424_update_completed_)
        R_iNsTr_9_433_sample_completed_ <-& (R_iNsTr_9_433_sample_start_)
        R_iNsTr_9_433_update_start_ <-& (R_iNsTr_9_433_sample_completed_)
        R_iNsTr_9_433_update_completed_ <-& (R_iNsTr_9_433_update_start_)
        SUB_u32_u32_434_sample_start_ <-& (R_iNsTr_10_432_update_completed_)
        SUB_u32_u32_434_sample_start_ <-& (R_iNsTr_9_433_update_completed_)
        ;;[SUB_u32_u32_434_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_434_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_434_sample_start_ &-> (SUB_u32_u32_434_Sample)
        SUB_u32_u32_434_sample_completed_ <-& (SUB_u32_u32_434_Sample)
        SUB_u32_u32_434_sample_completed_ &-> ($null)
        SUB_u32_u32_434_update_start_ &-> (SUB_u32_u32_434_Update)
        SUB_u32_u32_434_update_completed_ <-& (SUB_u32_u32_434_Update)
        // Target expression
        // (as target) iNsTr_11
        // iNsTr_11
        // implicit reference
        // 		HPy1 := iNsTr_11
        //  file prog.linked.opt.aa, line 194
        // Source expression
        // iNsTr_11
        $T[R_iNsTr_11_437_sample_start_] 
        $T[R_iNsTr_11_437_sample_completed_] 
        $T[R_iNsTr_11_437_update_start_] 
        $T[R_iNsTr_11_437_update_completed_] 
        // implicit reference
        R_iNsTr_11_437_sample_start_ <-& (SUB_u32_u32_434_update_completed_)
        R_iNsTr_11_437_sample_completed_ <-& (R_iNsTr_11_437_sample_start_)
        R_iNsTr_11_437_update_start_ <-& (R_iNsTr_11_437_sample_completed_)
        R_iNsTr_11_437_update_completed_ <-& (R_iNsTr_11_437_update_start_)
        // Target expression
        // (as target) HPy1
        $T[STORE_HPy1_436_sample_start_] 
        $T[STORE_HPy1_436_sample_completed_] 
        $T[STORE_HPy1_436_update_start_] 
        $T[STORE_HPy1_436_update_completed_] 
        // HPy1
        $T[STORE_HPy1_436_word_address_calculated] 
        $T[STORE_HPy1_436_root_address_calculated] 
        STORE_HPy1_436_word_address_calculated <-& (STORE_HPy1_436_root_address_calculated)
        ;;[STORE_HPy1_436_Sample] 
        {
          ;;[STORE_HPy1_436_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_HPy1_436_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_HPy1_436_sample_start_ <-& (STORE_HPy1_436_word_address_calculated)
        STORE_HPy1_436_sample_start_ &-> (STORE_HPy1_436_Sample)
        STORE_HPy1_436_sample_completed_ <-& (STORE_HPy1_436_Sample)
        STORE_HPy1_436_sample_completed_ &-> ($null)
        STORE_HPy1_436_update_start_ &-> (STORE_HPy1_436_Update)
        STORE_HPy1_436_update_completed_ <-& (STORE_HPy1_436_Update)
        STORE_HPy1_436_sample_start_ <-& (R_iNsTr_11_437_update_completed_)
        // 		iNsTr_13 := @(HPbuff[iNsTr_6])
        //  file prog.linked.opt.aa, line 195
        // Source expression
        // @(HPbuff[iNsTr_6])
        $T[addr_of_442_sample_start_] 
        $T[addr_of_442_sample_completed_] 
        $T[addr_of_442_update_start_] 
        $T[addr_of_442_update_completed_] 
        $T[array_obj_ref_441_root_address_calculated] 
        $T[array_obj_ref_441_offset_calculated] 
        $T[array_obj_ref_441_index_resized_0] 
        $T[array_obj_ref_441_index_scaled_0] 
        // iNsTr_6
        $T[R_iNsTr_6_440_sample_start_] 
        $T[R_iNsTr_6_440_sample_completed_] 
        $T[R_iNsTr_6_440_update_start_] 
        $T[R_iNsTr_6_440_update_completed_] 
        // implicit reference
        R_iNsTr_6_440_sample_start_ <-& (MUX_412_update_completed_)
        R_iNsTr_6_440_sample_completed_ <-& (R_iNsTr_6_440_sample_start_)
        R_iNsTr_6_440_update_start_ <-& (R_iNsTr_6_440_sample_completed_)
        R_iNsTr_6_440_update_completed_ <-& (R_iNsTr_6_440_update_start_)
        ;;[array_obj_ref_441_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        R_iNsTr_6_440_update_completed_ &-> (array_obj_ref_441_index_resize_0)
        array_obj_ref_441_index_resized_0 <-& (array_obj_ref_441_index_resize_0)
        ;;[array_obj_ref_441_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_441_index_resized_0 &-> (array_obj_ref_441_index_scale_0)
        array_obj_ref_441_index_scaled_0 <-& (array_obj_ref_441_index_scale_0)
        ;;[array_obj_ref_441_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_441_index_scaled_0 &-> (array_obj_ref_441_final_index_sum_regn)
        array_obj_ref_441_offset_calculated <-& (array_obj_ref_441_final_index_sum_regn)
        ;;[array_obj_ref_441_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_441_offset_calculated &-> (array_obj_ref_441_base_plus_offset)
        array_obj_ref_441_root_address_calculated <-& (array_obj_ref_441_base_plus_offset)
        ;;[addr_of_442_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_442_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_442_sample_start_ <-& (array_obj_ref_441_root_address_calculated)
        addr_of_442_sample_start_ &-> (addr_of_442_request)
        addr_of_442_sample_completed_ <-& (addr_of_442_request)
        addr_of_442_update_start_ &-> (addr_of_442_complete)
        addr_of_442_update_completed_ <-& (addr_of_442_complete)
        // Target expression
        // (as target) iNsTr_13
        // iNsTr_13
        // implicit reference
        // 		iNsTr_14 := ->(iNsTr_13)
        //  file prog.linked.opt.aa, line 196
        // Source expression
        // ->(iNsTr_13)
        $T[ptr_deref_446_sample_start_] 
        $T[ptr_deref_446_sample_completed_] 
        $T[ptr_deref_446_update_start_] 
        $T[ptr_deref_446_update_completed_] 
        $T[ptr_deref_446_base_address_calculated] 
        // iNsTr_13
        $T[R_iNsTr_13_445_sample_start_] 
        $T[R_iNsTr_13_445_sample_completed_] 
        $T[R_iNsTr_13_445_update_start_] 
        $T[R_iNsTr_13_445_update_completed_] 
        // implicit reference
        R_iNsTr_13_445_sample_start_ <-& (addr_of_442_update_completed_)
        R_iNsTr_13_445_sample_completed_ <-& (R_iNsTr_13_445_sample_start_)
        R_iNsTr_13_445_update_start_ <-& (R_iNsTr_13_445_sample_completed_)
        R_iNsTr_13_445_update_completed_ <-& (R_iNsTr_13_445_update_start_)
        $T[ptr_deref_446_word_address_calculated] 
        $T[ptr_deref_446_root_address_calculated] 
        $T[ptr_deref_446_base_address_resized] 
        ;;[ptr_deref_446_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_446_base_address_calculated &-> (ptr_deref_446_base_addr_resize)
        ptr_deref_446_base_address_resized <-& (ptr_deref_446_base_addr_resize)
        ;;[ptr_deref_446_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_446_base_address_resized &-> (ptr_deref_446_base_plus_offset)
        ptr_deref_446_root_address_calculated <-& (ptr_deref_446_base_plus_offset)
        ;;[ptr_deref_446_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_446_root_address_calculated &-> (ptr_deref_446_word_addrgen)
        ptr_deref_446_word_address_calculated <-& (ptr_deref_446_word_addrgen)
        ;;[ptr_deref_446_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_446_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_446_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_446_sample_start_ <-& (ptr_deref_446_word_address_calculated)
        ptr_deref_446_sample_start_ &-> (ptr_deref_446_Sample)
        ptr_deref_446_sample_completed_ <-& (ptr_deref_446_Sample)
        ptr_deref_446_sample_completed_ &-> ($null)
        ptr_deref_446_update_start_ &-> (ptr_deref_446_Update)
        ptr_deref_446_update_completed_ <-& (ptr_deref_446_Update)
        ptr_deref_446_base_address_calculated <-& (R_iNsTr_13_445_update_completed_)
        ptr_deref_446_sample_start_ <-& (ptr_deref_446_base_address_calculated)
        // Target expression
        // (as target) iNsTr_14
        // iNsTr_14
        // implicit reference
        // 		iNsTr_15 := ($cast ($uint<64>) iNsTr_14 )
        //  file prog.linked.opt.aa, line 197
        // Source expression
        // ($cast ($uint<64>) iNsTr_14 )
        $T[type_cast_450_sample_start_] 
        $T[type_cast_450_sample_completed_] 
        $T[type_cast_450_update_start_] 
        $T[type_cast_450_update_completed_] 
        // iNsTr_14
        $T[R_iNsTr_14_449_sample_start_] 
        $T[R_iNsTr_14_449_sample_completed_] 
        $T[R_iNsTr_14_449_update_start_] 
        $T[R_iNsTr_14_449_update_completed_] 
        // implicit reference
        R_iNsTr_14_449_sample_start_ <-& (ptr_deref_446_update_completed_)
        R_iNsTr_14_449_sample_completed_ <-& (R_iNsTr_14_449_sample_start_)
        R_iNsTr_14_449_update_start_ <-& (R_iNsTr_14_449_sample_completed_)
        R_iNsTr_14_449_update_completed_ <-& (R_iNsTr_14_449_update_start_)
        type_cast_450_sample_start_ <-& (R_iNsTr_14_449_update_completed_)
        ;;[type_cast_450_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_450_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_450_sample_start_ &-> (type_cast_450_Sample)
        type_cast_450_sample_completed_ <-& (type_cast_450_Sample)
        type_cast_450_sample_completed_ &-> ($null)
        type_cast_450_update_start_ &-> (type_cast_450_Update)
        type_cast_450_update_completed_ <-& (type_cast_450_Update)
        // Target expression
        // (as target) iNsTr_15
        // iNsTr_15
        // implicit reference
        // 		iNsTr_16 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_11 ) )
        //  file prog.linked.opt.aa, line 198
        // Source expression
        // ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_11 ) )
        $T[type_cast_455_sample_start_] 
        $T[type_cast_455_sample_completed_] 
        $T[type_cast_455_update_start_] 
        $T[type_cast_455_update_completed_] 
        // ($cast ($int<64>) iNsTr_11 )
        $T[type_cast_454_sample_start_] 
        $T[type_cast_454_sample_completed_] 
        $T[type_cast_454_update_start_] 
        $T[type_cast_454_update_completed_] 
        // iNsTr_11
        $T[R_iNsTr_11_453_sample_start_] 
        $T[R_iNsTr_11_453_sample_completed_] 
        $T[R_iNsTr_11_453_update_start_] 
        $T[R_iNsTr_11_453_update_completed_] 
        // implicit reference
        R_iNsTr_11_453_sample_start_ <-& (SUB_u32_u32_434_update_completed_)
        R_iNsTr_11_453_sample_completed_ <-& (R_iNsTr_11_453_sample_start_)
        R_iNsTr_11_453_update_start_ <-& (R_iNsTr_11_453_sample_completed_)
        R_iNsTr_11_453_update_completed_ <-& (R_iNsTr_11_453_update_start_)
        type_cast_454_sample_start_ <-& (R_iNsTr_11_453_update_completed_)
        ;;[type_cast_454_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_454_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_454_sample_start_ &-> (type_cast_454_Sample)
        type_cast_454_sample_completed_ <-& (type_cast_454_Sample)
        type_cast_454_sample_completed_ &-> ($null)
        type_cast_454_update_start_ &-> (type_cast_454_Update)
        type_cast_454_update_completed_ <-& (type_cast_454_Update)
        type_cast_455_sample_start_ <-& (type_cast_454_update_completed_)
        ;;[type_cast_455_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_455_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_455_sample_start_ &-> (type_cast_455_Sample)
        type_cast_455_sample_completed_ <-& (type_cast_455_Sample)
        type_cast_455_sample_completed_ &-> ($null)
        type_cast_455_update_start_ &-> (type_cast_455_Update)
        type_cast_455_update_completed_ <-& (type_cast_455_Update)
        // Target expression
        // (as target) iNsTr_16
        // iNsTr_16
        // implicit reference
        // 		iNsTr_17 := (($bitcast ($int<32>) iNsTr_11 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.linked.opt.aa, line 199
        // Source expression
        // (($bitcast ($int<32>) iNsTr_11 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[SLT_i32_u1_463_sample_start_] 
        $T[SLT_i32_u1_463_sample_completed_] 
        $T[SLT_i32_u1_463_update_start_] 
        $T[SLT_i32_u1_463_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_11 )
        $T[type_cast_459_sample_start_] 
        $T[type_cast_459_sample_completed_] 
        $T[type_cast_459_update_start_] 
        $T[type_cast_459_update_completed_] 
        // iNsTr_11
        $T[R_iNsTr_11_458_sample_start_] 
        $T[R_iNsTr_11_458_sample_completed_] 
        $T[R_iNsTr_11_458_update_start_] 
        $T[R_iNsTr_11_458_update_completed_] 
        // implicit reference
        R_iNsTr_11_458_sample_start_ <-& (SUB_u32_u32_434_update_completed_)
        R_iNsTr_11_458_sample_completed_ <-& (R_iNsTr_11_458_sample_start_)
        R_iNsTr_11_458_update_start_ <-& (R_iNsTr_11_458_sample_completed_)
        R_iNsTr_11_458_update_completed_ <-& (R_iNsTr_11_458_update_start_)
        type_cast_459_sample_start_ <-& (R_iNsTr_11_458_update_completed_)
        ;;[type_cast_459_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_459_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_459_sample_start_ &-> (type_cast_459_Sample)
        type_cast_459_sample_completed_ <-& (type_cast_459_Sample)
        type_cast_459_sample_completed_ &-> ($null)
        type_cast_459_update_start_ &-> (type_cast_459_Update)
        type_cast_459_update_completed_ <-& (type_cast_459_Update)
        // flow-through
        type_cast_459_update_start_ <-& (type_cast_459_sample_completed_)
        SLT_i32_u1_463_sample_start_ <-& (type_cast_459_update_completed_)
        ;;[SLT_i32_u1_463_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_i32_u1_463_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_i32_u1_463_sample_start_ &-> (SLT_i32_u1_463_Sample)
        SLT_i32_u1_463_sample_completed_ <-& (SLT_i32_u1_463_Sample)
        SLT_i32_u1_463_sample_completed_ &-> ($null)
        SLT_i32_u1_463_update_start_ &-> (SLT_i32_u1_463_Update)
        SLT_i32_u1_463_update_completed_ <-& (SLT_i32_u1_463_Update)
        // Target expression
        // (as target) iNsTr_17
        // iNsTr_17
        // implicit reference
        // 		iNsTr_18 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - iNsTr_16)
        //  file prog.linked.opt.aa, line 200
        // Source expression
        // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - iNsTr_16)
        $T[SUB_u64_u64_469_sample_start_] 
        $T[SUB_u64_u64_469_sample_completed_] 
        $T[SUB_u64_u64_469_update_start_] 
        $T[SUB_u64_u64_469_update_completed_] 
        // iNsTr_16
        $T[R_iNsTr_16_468_sample_start_] 
        $T[R_iNsTr_16_468_sample_completed_] 
        $T[R_iNsTr_16_468_update_start_] 
        $T[R_iNsTr_16_468_update_completed_] 
        // implicit reference
        R_iNsTr_16_468_sample_start_ <-& (type_cast_455_update_completed_)
        R_iNsTr_16_468_sample_completed_ <-& (R_iNsTr_16_468_sample_start_)
        R_iNsTr_16_468_update_start_ <-& (R_iNsTr_16_468_sample_completed_)
        R_iNsTr_16_468_update_completed_ <-& (R_iNsTr_16_468_update_start_)
        SUB_u64_u64_469_sample_start_ <-& (R_iNsTr_16_468_update_completed_)
        ;;[SUB_u64_u64_469_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u64_u64_469_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u64_u64_469_sample_start_ &-> (SUB_u64_u64_469_Sample)
        SUB_u64_u64_469_sample_completed_ <-& (SUB_u64_u64_469_Sample)
        SUB_u64_u64_469_sample_completed_ &-> ($null)
        SUB_u64_u64_469_update_start_ &-> (SUB_u64_u64_469_Update)
        SUB_u64_u64_469_update_completed_ <-& (SUB_u64_u64_469_Update)
        // Target expression
        // (as target) iNsTr_18
        // iNsTr_18
        // implicit reference
        // 		iNsTr_19 := ( $mux iNsTr_17 iNsTr_18  iNsTr_16 ) 
        //  file prog.linked.opt.aa, line 201
        // Source expression
        // ( $mux iNsTr_17 iNsTr_18  iNsTr_16 ) 
        $T[MUX_475_sample_start_] 
        $T[MUX_475_sample_completed_] 
        $T[MUX_475_update_start_] 
        $T[MUX_475_update_completed_] 
        // iNsTr_17
        $T[R_iNsTr_17_472_sample_start_] 
        $T[R_iNsTr_17_472_sample_completed_] 
        $T[R_iNsTr_17_472_update_start_] 
        $T[R_iNsTr_17_472_update_completed_] 
        // implicit reference
        R_iNsTr_17_472_sample_start_ <-& (SLT_i32_u1_463_update_completed_)
        R_iNsTr_17_472_sample_completed_ <-& (R_iNsTr_17_472_sample_start_)
        R_iNsTr_17_472_update_start_ <-& (R_iNsTr_17_472_sample_completed_)
        R_iNsTr_17_472_update_completed_ <-& (R_iNsTr_17_472_update_start_)
        // iNsTr_18
        $T[R_iNsTr_18_473_sample_start_] 
        $T[R_iNsTr_18_473_sample_completed_] 
        $T[R_iNsTr_18_473_update_start_] 
        $T[R_iNsTr_18_473_update_completed_] 
        // implicit reference
        R_iNsTr_18_473_sample_start_ <-& (SUB_u64_u64_469_update_completed_)
        R_iNsTr_18_473_sample_completed_ <-& (R_iNsTr_18_473_sample_start_)
        R_iNsTr_18_473_update_start_ <-& (R_iNsTr_18_473_sample_completed_)
        R_iNsTr_18_473_update_completed_ <-& (R_iNsTr_18_473_update_start_)
        // iNsTr_16
        $T[R_iNsTr_16_474_sample_start_] 
        $T[R_iNsTr_16_474_sample_completed_] 
        $T[R_iNsTr_16_474_update_start_] 
        $T[R_iNsTr_16_474_update_completed_] 
        // implicit reference
        R_iNsTr_16_474_sample_start_ <-& (type_cast_455_update_completed_)
        R_iNsTr_16_474_sample_completed_ <-& (R_iNsTr_16_474_sample_start_)
        R_iNsTr_16_474_update_start_ <-& (R_iNsTr_16_474_sample_completed_)
        R_iNsTr_16_474_update_completed_ <-& (R_iNsTr_16_474_update_start_)
        MUX_475_sample_start_ <-& (R_iNsTr_17_472_update_completed_)
        MUX_475_sample_start_ <-& (R_iNsTr_18_473_update_completed_)
        MUX_475_sample_start_ <-& (R_iNsTr_16_474_update_completed_)
        ;;[MUX_475_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_475_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_475_sample_start_ &-> (MUX_475_start)
        MUX_475_sample_completed_ <-& (MUX_475_start)
        MUX_475_update_start_ &-> (MUX_475_complete)
        MUX_475_update_completed_ <-& (MUX_475_complete)
        MUX_475_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_19
        // iNsTr_19
        // implicit reference
        // 		iNsTr_20 := (($bitcast ($int<64>) iNsTr_19 ) < ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ))
        //  file prog.linked.opt.aa, line 202
        // Source expression
        // (($bitcast ($int<64>) iNsTr_19 ) < ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ))
        $T[SLT_i64_u1_483_sample_start_] 
        $T[SLT_i64_u1_483_sample_completed_] 
        $T[SLT_i64_u1_483_update_start_] 
        $T[SLT_i64_u1_483_update_completed_] 
        // ($bitcast ($int<64>) iNsTr_19 )
        $T[type_cast_479_sample_start_] 
        $T[type_cast_479_sample_completed_] 
        $T[type_cast_479_update_start_] 
        $T[type_cast_479_update_completed_] 
        // iNsTr_19
        $T[R_iNsTr_19_478_sample_start_] 
        $T[R_iNsTr_19_478_sample_completed_] 
        $T[R_iNsTr_19_478_update_start_] 
        $T[R_iNsTr_19_478_update_completed_] 
        // implicit reference
        R_iNsTr_19_478_sample_start_ <-& (MUX_475_update_completed_)
        R_iNsTr_19_478_sample_completed_ <-& (R_iNsTr_19_478_sample_start_)
        R_iNsTr_19_478_update_start_ <-& (R_iNsTr_19_478_sample_completed_)
        R_iNsTr_19_478_update_completed_ <-& (R_iNsTr_19_478_update_start_)
        type_cast_479_sample_start_ <-& (R_iNsTr_19_478_update_completed_)
        ;;[type_cast_479_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_479_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_479_sample_start_ &-> (type_cast_479_Sample)
        type_cast_479_sample_completed_ <-& (type_cast_479_Sample)
        type_cast_479_sample_completed_ &-> ($null)
        type_cast_479_update_start_ &-> (type_cast_479_Update)
        type_cast_479_update_completed_ <-& (type_cast_479_Update)
        // flow-through
        type_cast_479_update_start_ <-& (type_cast_479_sample_completed_)
        SLT_i64_u1_483_sample_start_ <-& (type_cast_479_update_completed_)
        ;;[SLT_i64_u1_483_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_i64_u1_483_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_i64_u1_483_sample_start_ &-> (SLT_i64_u1_483_Sample)
        SLT_i64_u1_483_sample_completed_ <-& (SLT_i64_u1_483_Sample)
        SLT_i64_u1_483_sample_completed_ &-> ($null)
        SLT_i64_u1_483_update_start_ &-> (SLT_i64_u1_483_Update)
        SLT_i64_u1_483_update_completed_ <-& (SLT_i64_u1_483_Update)
        // Target expression
        // (as target) iNsTr_20
        // iNsTr_20
        // implicit reference
        // 		iNsTr_21 := (iNsTr_19 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
        //  file prog.linked.opt.aa, line 203
        // Source expression
        // (iNsTr_19 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
        $T[ULT_u64_u1_489_sample_start_] 
        $T[ULT_u64_u1_489_sample_completed_] 
        $T[ULT_u64_u1_489_update_start_] 
        $T[ULT_u64_u1_489_update_completed_] 
        // iNsTr_19
        $T[R_iNsTr_19_486_sample_start_] 
        $T[R_iNsTr_19_486_sample_completed_] 
        $T[R_iNsTr_19_486_update_start_] 
        $T[R_iNsTr_19_486_update_completed_] 
        // implicit reference
        R_iNsTr_19_486_sample_start_ <-& (MUX_475_update_completed_)
        R_iNsTr_19_486_sample_completed_ <-& (R_iNsTr_19_486_sample_start_)
        R_iNsTr_19_486_update_start_ <-& (R_iNsTr_19_486_sample_completed_)
        R_iNsTr_19_486_update_completed_ <-& (R_iNsTr_19_486_update_start_)
        ULT_u64_u1_489_sample_start_ <-& (R_iNsTr_19_486_update_completed_)
        ;;[ULT_u64_u1_489_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u64_u1_489_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u64_u1_489_sample_start_ &-> (ULT_u64_u1_489_Sample)
        ULT_u64_u1_489_sample_completed_ <-& (ULT_u64_u1_489_Sample)
        ULT_u64_u1_489_sample_completed_ &-> ($null)
        ULT_u64_u1_489_update_start_ &-> (ULT_u64_u1_489_Update)
        ULT_u64_u1_489_update_completed_ <-& (ULT_u64_u1_489_Update)
        // Target expression
        // (as target) iNsTr_21
        // iNsTr_21
        // implicit reference
        // load-store dependencies..
        $T [LOAD_HPy1_415_STORE_HPy1_436_delay] $delay
        // HPy1(load) -> HPy1(store)
        STORE_HPy1_436_sample_start_ <-& (LOAD_HPy1_415_STORE_HPy1_436_delay)
        LOAD_HPy1_415_STORE_HPy1_436_delay <-& (LOAD_HPy1_415_sample_completed_)
      }
      assign_stmt_387_to_assign_stmt_490__entry__ |-> (assign_stmt_387_to_assign_stmt_490)
      assign_stmt_387_to_assign_stmt_490__exit__ <-| (assign_stmt_387_to_assign_stmt_490)
      // if-statement  
      //  file prog.linked.opt.aa, line 204
      ;;[if_stmt_491_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_491__entry__ |-> (if_stmt_491_dead_link)
      if_stmt_491__exit__ <-| (if_stmt_491_dead_link)
      ;;[if_stmt_491_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_491__entry__ |-> (if_stmt_491_eval_test)
      $P [R_iNsTr_21_492_place]
      R_iNsTr_21_492_place <-| (if_stmt_491_eval_test)
      ;;[if_stmt_491_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_491_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_21_492_place |-> (if_stmt_491_if_link if_stmt_491_else_link)
      $P [bb_0_divideSignedx_xexit]
      bb_0_divideSignedx_xexit <-| (if_stmt_491_if_link)
      $P [bb_0_bbx_xnph6x_xix_xix_xpreheader]
      bb_0_bbx_xnph6x_xix_xix_xpreheader <-| (if_stmt_491_else_link)
      ::[assign_stmt_519_to_assign_stmt_525] 
      {
        // 		iNsTr_36 := (xx_x05x_xix_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 216
        // Source expression
        // (xx_x05x_xix_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[LSHR_u64_u64_518_sample_start_] 
        $T[LSHR_u64_u64_518_sample_completed_] 
        $T[LSHR_u64_u64_518_update_start_] 
        $T[LSHR_u64_u64_518_update_completed_] 
        // xx_x05x_xix_xi
        $T[R_xx_x05x_xix_xi_515_sample_start_] 
        $T[R_xx_x05x_xix_xi_515_sample_completed_] 
        $T[R_xx_x05x_xix_xi_515_update_start_] 
        $T[R_xx_x05x_xix_xi_515_update_completed_] 
        // implicit reference
        R_xx_x05x_xix_xi_515_sample_start_ <-& ($entry)
        R_xx_x05x_xix_xi_515_sample_completed_ <-& (R_xx_x05x_xix_xi_515_sample_start_)
        R_xx_x05x_xix_xi_515_update_start_ <-& (R_xx_x05x_xix_xi_515_sample_completed_)
        R_xx_x05x_xix_xi_515_update_completed_ <-& (R_xx_x05x_xix_xi_515_update_start_)
        LSHR_u64_u64_518_sample_start_ <-& (R_xx_x05x_xix_xi_515_update_completed_)
        ;;[LSHR_u64_u64_518_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u64_u64_518_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u64_u64_518_sample_start_ &-> (LSHR_u64_u64_518_Sample)
        LSHR_u64_u64_518_sample_completed_ <-& (LSHR_u64_u64_518_Sample)
        LSHR_u64_u64_518_sample_completed_ &-> ($null)
        LSHR_u64_u64_518_update_start_ &-> (LSHR_u64_u64_518_Update)
        LSHR_u64_u64_518_update_completed_ <-& (LSHR_u64_u64_518_Update)
        // Target expression
        // (as target) iNsTr_36
        // iNsTr_36
        // implicit reference
        // 		iNsTr_37 := (iNsTr_36 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
        //  file prog.linked.opt.aa, line 217
        // Source expression
        // (iNsTr_36 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
        $T[UGT_u64_u1_524_sample_start_] 
        $T[UGT_u64_u1_524_sample_completed_] 
        $T[UGT_u64_u1_524_update_start_] 
        $T[UGT_u64_u1_524_update_completed_] 
        // iNsTr_36
        $T[R_iNsTr_36_521_sample_start_] 
        $T[R_iNsTr_36_521_sample_completed_] 
        $T[R_iNsTr_36_521_update_start_] 
        $T[R_iNsTr_36_521_update_completed_] 
        // implicit reference
        R_iNsTr_36_521_sample_start_ <-& (LSHR_u64_u64_518_update_completed_)
        R_iNsTr_36_521_sample_completed_ <-& (R_iNsTr_36_521_sample_start_)
        R_iNsTr_36_521_update_start_ <-& (R_iNsTr_36_521_sample_completed_)
        R_iNsTr_36_521_update_completed_ <-& (R_iNsTr_36_521_update_start_)
        UGT_u64_u1_524_sample_start_ <-& (R_iNsTr_36_521_update_completed_)
        ;;[UGT_u64_u1_524_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u64_u1_524_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u64_u1_524_sample_start_ &-> (UGT_u64_u1_524_Sample)
        UGT_u64_u1_524_sample_completed_ <-& (UGT_u64_u1_524_Sample)
        UGT_u64_u1_524_sample_completed_ &-> ($null)
        UGT_u64_u1_524_update_start_ &-> (UGT_u64_u1_524_Update)
        UGT_u64_u1_524_update_completed_ <-& (UGT_u64_u1_524_Update)
        // Target expression
        // (as target) iNsTr_37
        // iNsTr_37
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_519_to_assign_stmt_525__entry__ |-> (assign_stmt_519_to_assign_stmt_525)
      assign_stmt_519_to_assign_stmt_525__exit__ <-| (assign_stmt_519_to_assign_stmt_525)
      // if-statement  
      //  file prog.linked.opt.aa, line 218
      ;;[if_stmt_526_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_526__entry__ |-> (if_stmt_526_dead_link)
      if_stmt_526__exit__ <-| (if_stmt_526_dead_link)
      ;;[if_stmt_526_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_526__entry__ |-> (if_stmt_526_eval_test)
      $P [R_iNsTr_37_527_place]
      R_iNsTr_37_527_place <-| (if_stmt_526_eval_test)
      ;;[if_stmt_526_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_526_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_37_527_place |-> (if_stmt_526_if_link if_stmt_526_else_link)
      $P [bbx_xnph6x_xix_xi_bbx_xnphx_xix_xix_xpreheader]
      bbx_xnph6x_xix_xi_bbx_xnphx_xix_xix_xpreheader <-| (if_stmt_526_if_link)
      $P [bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi]
      bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi <-| (if_stmt_526_else_link)
      ::[assign_stmt_555_to_assign_stmt_566] 
      {
        // 		iNsTr_44 := (shifted_divisorx_x02x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 230
        // Source expression
        // (shifted_divisorx_x02x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[SHL_u64_u64_554_sample_start_] 
        $T[SHL_u64_u64_554_sample_completed_] 
        $T[SHL_u64_u64_554_update_start_] 
        $T[SHL_u64_u64_554_update_completed_] 
        // shifted_divisorx_x02x_xix_xi
        $T[R_shifted_divisorx_x02x_xix_xi_551_sample_start_] 
        $T[R_shifted_divisorx_x02x_xix_xi_551_sample_completed_] 
        $T[R_shifted_divisorx_x02x_xix_xi_551_update_start_] 
        $T[R_shifted_divisorx_x02x_xix_xi_551_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x02x_xix_xi_551_sample_start_ <-& ($entry)
        R_shifted_divisorx_x02x_xix_xi_551_sample_completed_ <-& (R_shifted_divisorx_x02x_xix_xi_551_sample_start_)
        R_shifted_divisorx_x02x_xix_xi_551_update_start_ <-& (R_shifted_divisorx_x02x_xix_xi_551_sample_completed_)
        R_shifted_divisorx_x02x_xix_xi_551_update_completed_ <-& (R_shifted_divisorx_x02x_xix_xi_551_update_start_)
        SHL_u64_u64_554_sample_start_ <-& (R_shifted_divisorx_x02x_xix_xi_551_update_completed_)
        ;;[SHL_u64_u64_554_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u64_u64_554_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u64_u64_554_sample_start_ &-> (SHL_u64_u64_554_Sample)
        SHL_u64_u64_554_sample_completed_ <-& (SHL_u64_u64_554_Sample)
        SHL_u64_u64_554_sample_completed_ &-> ($null)
        SHL_u64_u64_554_update_start_ &-> (SHL_u64_u64_554_Update)
        SHL_u64_u64_554_update_completed_ <-& (SHL_u64_u64_554_Update)
        // Target expression
        // (as target) iNsTr_44
        // iNsTr_44
        // implicit reference
        // 		iNsTr_45 := (curr_quotientx_x01x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 231
        // Source expression
        // (curr_quotientx_x01x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[SHL_u64_u64_560_sample_start_] 
        $T[SHL_u64_u64_560_sample_completed_] 
        $T[SHL_u64_u64_560_update_start_] 
        $T[SHL_u64_u64_560_update_completed_] 
        // curr_quotientx_x01x_xix_xi
        $T[R_curr_quotientx_x01x_xix_xi_557_sample_start_] 
        $T[R_curr_quotientx_x01x_xix_xi_557_sample_completed_] 
        $T[R_curr_quotientx_x01x_xix_xi_557_update_start_] 
        $T[R_curr_quotientx_x01x_xix_xi_557_update_completed_] 
        // implicit reference
        R_curr_quotientx_x01x_xix_xi_557_sample_start_ <-& ($entry)
        R_curr_quotientx_x01x_xix_xi_557_sample_completed_ <-& (R_curr_quotientx_x01x_xix_xi_557_sample_start_)
        R_curr_quotientx_x01x_xix_xi_557_update_start_ <-& (R_curr_quotientx_x01x_xix_xi_557_sample_completed_)
        R_curr_quotientx_x01x_xix_xi_557_update_completed_ <-& (R_curr_quotientx_x01x_xix_xi_557_update_start_)
        SHL_u64_u64_560_sample_start_ <-& (R_curr_quotientx_x01x_xix_xi_557_update_completed_)
        ;;[SHL_u64_u64_560_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u64_u64_560_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u64_u64_560_sample_start_ &-> (SHL_u64_u64_560_Sample)
        SHL_u64_u64_560_sample_completed_ <-& (SHL_u64_u64_560_Sample)
        SHL_u64_u64_560_sample_completed_ &-> ($null)
        SHL_u64_u64_560_update_start_ &-> (SHL_u64_u64_560_Update)
        SHL_u64_u64_560_update_completed_ <-& (SHL_u64_u64_560_Update)
        // Target expression
        // (as target) iNsTr_45
        // iNsTr_45
        // implicit reference
        // 		iNsTr_46 := (iNsTr_44 < iNsTr_36)
        //  file prog.linked.opt.aa, line 232
        // Source expression
        // (iNsTr_44 < iNsTr_36)
        $T[ULT_u64_u1_565_sample_start_] 
        $T[ULT_u64_u1_565_sample_completed_] 
        $T[ULT_u64_u1_565_update_start_] 
        $T[ULT_u64_u1_565_update_completed_] 
        // iNsTr_44
        $T[R_iNsTr_44_563_sample_start_] 
        $T[R_iNsTr_44_563_sample_completed_] 
        $T[R_iNsTr_44_563_update_start_] 
        $T[R_iNsTr_44_563_update_completed_] 
        // implicit reference
        R_iNsTr_44_563_sample_start_ <-& (SHL_u64_u64_554_update_completed_)
        R_iNsTr_44_563_sample_completed_ <-& (R_iNsTr_44_563_sample_start_)
        R_iNsTr_44_563_update_start_ <-& (R_iNsTr_44_563_sample_completed_)
        R_iNsTr_44_563_update_completed_ <-& (R_iNsTr_44_563_update_start_)
        // iNsTr_36
        $T[R_iNsTr_36_564_sample_start_] 
        $T[R_iNsTr_36_564_sample_completed_] 
        $T[R_iNsTr_36_564_update_start_] 
        $T[R_iNsTr_36_564_update_completed_] 
        // implicit reference
        R_iNsTr_36_564_sample_start_ <-& ($entry)
        R_iNsTr_36_564_sample_completed_ <-& (R_iNsTr_36_564_sample_start_)
        R_iNsTr_36_564_update_start_ <-& (R_iNsTr_36_564_sample_completed_)
        R_iNsTr_36_564_update_completed_ <-& (R_iNsTr_36_564_update_start_)
        ULT_u64_u1_565_sample_start_ <-& (R_iNsTr_44_563_update_completed_)
        ULT_u64_u1_565_sample_start_ <-& (R_iNsTr_36_564_update_completed_)
        ;;[ULT_u64_u1_565_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u64_u1_565_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u64_u1_565_sample_start_ &-> (ULT_u64_u1_565_Sample)
        ULT_u64_u1_565_sample_completed_ <-& (ULT_u64_u1_565_Sample)
        ULT_u64_u1_565_sample_completed_ &-> ($null)
        ULT_u64_u1_565_update_start_ &-> (ULT_u64_u1_565_Update)
        ULT_u64_u1_565_update_completed_ <-& (ULT_u64_u1_565_Update)
        // Target expression
        // (as target) iNsTr_46
        // iNsTr_46
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_555_to_assign_stmt_566__entry__ |-> (assign_stmt_555_to_assign_stmt_566)
      assign_stmt_555_to_assign_stmt_566__exit__ <-| (assign_stmt_555_to_assign_stmt_566)
      // if-statement  
      //  file prog.linked.opt.aa, line 233
      ;;[if_stmt_567_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_567__entry__ |-> (if_stmt_567_dead_link)
      if_stmt_567__exit__ <-| (if_stmt_567_dead_link)
      ;;[if_stmt_567_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_567__entry__ |-> (if_stmt_567_eval_test)
      $P [R_iNsTr_46_568_place]
      R_iNsTr_46_568_place <-| (if_stmt_567_eval_test)
      ;;[if_stmt_567_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_567_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_46_568_place |-> (if_stmt_567_if_link if_stmt_567_else_link)
      $P [bbx_xnphx_xix_xi_bbx_xnphx_xix_xi]
      bbx_xnphx_xix_xi_bbx_xnphx_xix_xi <-| (if_stmt_567_if_link)
      $P [bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit]
      bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit <-| (if_stmt_567_else_link)
      ::[assign_stmt_604_to_assign_stmt_615] 
      {
        // 		iNsTr_40 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x04x_xix_xi)
        //  file prog.linked.opt.aa, line 247
        // Source expression
        // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x04x_xix_xi)
        $T[ADD_u64_u64_603_sample_start_] 
        $T[ADD_u64_u64_603_sample_completed_] 
        $T[ADD_u64_u64_603_update_start_] 
        $T[ADD_u64_u64_603_update_completed_] 
        // curr_quotientx_x0x_xlcssax_xix_xi
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_601_sample_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_601_sample_completed_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_601_update_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_601_update_completed_] 
        // implicit reference
        R_curr_quotientx_x0x_xlcssax_xix_xi_601_sample_start_ <-& ($entry)
        R_curr_quotientx_x0x_xlcssax_xix_xi_601_sample_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_601_sample_start_)
        R_curr_quotientx_x0x_xlcssax_xix_xi_601_update_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_601_sample_completed_)
        R_curr_quotientx_x0x_xlcssax_xix_xi_601_update_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_601_update_start_)
        // quotientx_x04x_xix_xi
        $T[R_quotientx_x04x_xix_xi_602_sample_start_] 
        $T[R_quotientx_x04x_xix_xi_602_sample_completed_] 
        $T[R_quotientx_x04x_xix_xi_602_update_start_] 
        $T[R_quotientx_x04x_xix_xi_602_update_completed_] 
        // implicit reference
        R_quotientx_x04x_xix_xi_602_sample_start_ <-& ($entry)
        R_quotientx_x04x_xix_xi_602_sample_completed_ <-& (R_quotientx_x04x_xix_xi_602_sample_start_)
        R_quotientx_x04x_xix_xi_602_update_start_ <-& (R_quotientx_x04x_xix_xi_602_sample_completed_)
        R_quotientx_x04x_xix_xi_602_update_completed_ <-& (R_quotientx_x04x_xix_xi_602_update_start_)
        ADD_u64_u64_603_sample_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_601_update_completed_)
        ADD_u64_u64_603_sample_start_ <-& (R_quotientx_x04x_xix_xi_602_update_completed_)
        ;;[ADD_u64_u64_603_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_603_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_603_sample_start_ &-> (ADD_u64_u64_603_Sample)
        ADD_u64_u64_603_sample_completed_ <-& (ADD_u64_u64_603_Sample)
        ADD_u64_u64_603_sample_completed_ &-> ($null)
        ADD_u64_u64_603_update_start_ &-> (ADD_u64_u64_603_Update)
        ADD_u64_u64_603_update_completed_ <-& (ADD_u64_u64_603_Update)
        // Target expression
        // (as target) iNsTr_40
        // iNsTr_40
        // implicit reference
        // 		iNsTr_41 := (xx_x05x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
        //  file prog.linked.opt.aa, line 248
        // Source expression
        // (xx_x05x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
        $T[SUB_u64_u64_608_sample_start_] 
        $T[SUB_u64_u64_608_sample_completed_] 
        $T[SUB_u64_u64_608_update_start_] 
        $T[SUB_u64_u64_608_update_completed_] 
        // xx_x05x_xix_xi
        $T[R_xx_x05x_xix_xi_606_sample_start_] 
        $T[R_xx_x05x_xix_xi_606_sample_completed_] 
        $T[R_xx_x05x_xix_xi_606_update_start_] 
        $T[R_xx_x05x_xix_xi_606_update_completed_] 
        // implicit reference
        R_xx_x05x_xix_xi_606_sample_start_ <-& ($entry)
        R_xx_x05x_xix_xi_606_sample_completed_ <-& (R_xx_x05x_xix_xi_606_sample_start_)
        R_xx_x05x_xix_xi_606_update_start_ <-& (R_xx_x05x_xix_xi_606_sample_completed_)
        R_xx_x05x_xix_xi_606_update_completed_ <-& (R_xx_x05x_xix_xi_606_update_start_)
        // shifted_divisorx_x0x_xlcssax_xix_xi
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_607_sample_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_607_sample_completed_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_607_update_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_607_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x0x_xlcssax_xix_xi_607_sample_start_ <-& ($entry)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_607_sample_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_607_sample_start_)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_607_update_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_607_sample_completed_)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_607_update_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_607_update_start_)
        SUB_u64_u64_608_sample_start_ <-& (R_xx_x05x_xix_xi_606_update_completed_)
        SUB_u64_u64_608_sample_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_607_update_completed_)
        ;;[SUB_u64_u64_608_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u64_u64_608_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u64_u64_608_sample_start_ &-> (SUB_u64_u64_608_Sample)
        SUB_u64_u64_608_sample_completed_ <-& (SUB_u64_u64_608_Sample)
        SUB_u64_u64_608_sample_completed_ &-> ($null)
        SUB_u64_u64_608_update_start_ &-> (SUB_u64_u64_608_Update)
        SUB_u64_u64_608_update_completed_ <-& (SUB_u64_u64_608_Update)
        // Target expression
        // (as target) iNsTr_41
        // iNsTr_41
        // implicit reference
        // 		iNsTr_42 := (iNsTr_41 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
        //  file prog.linked.opt.aa, line 249
        // Source expression
        // (iNsTr_41 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
        $T[ULT_u64_u1_614_sample_start_] 
        $T[ULT_u64_u1_614_sample_completed_] 
        $T[ULT_u64_u1_614_update_start_] 
        $T[ULT_u64_u1_614_update_completed_] 
        // iNsTr_41
        $T[R_iNsTr_41_611_sample_start_] 
        $T[R_iNsTr_41_611_sample_completed_] 
        $T[R_iNsTr_41_611_update_start_] 
        $T[R_iNsTr_41_611_update_completed_] 
        // implicit reference
        R_iNsTr_41_611_sample_start_ <-& (SUB_u64_u64_608_update_completed_)
        R_iNsTr_41_611_sample_completed_ <-& (R_iNsTr_41_611_sample_start_)
        R_iNsTr_41_611_update_start_ <-& (R_iNsTr_41_611_sample_completed_)
        R_iNsTr_41_611_update_completed_ <-& (R_iNsTr_41_611_update_start_)
        ULT_u64_u1_614_sample_start_ <-& (R_iNsTr_41_611_update_completed_)
        ;;[ULT_u64_u1_614_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u64_u1_614_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u64_u1_614_sample_start_ &-> (ULT_u64_u1_614_Sample)
        ULT_u64_u1_614_sample_completed_ <-& (ULT_u64_u1_614_Sample)
        ULT_u64_u1_614_sample_completed_ &-> ($null)
        ULT_u64_u1_614_update_start_ &-> (ULT_u64_u1_614_Update)
        ULT_u64_u1_614_update_completed_ <-& (ULT_u64_u1_614_Update)
        // Target expression
        // (as target) iNsTr_42
        // iNsTr_42
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_604_to_assign_stmt_615__entry__ |-> (assign_stmt_604_to_assign_stmt_615)
      assign_stmt_604_to_assign_stmt_615__exit__ <-| (assign_stmt_604_to_assign_stmt_615)
      // if-statement  
      //  file prog.linked.opt.aa, line 250
      ;;[if_stmt_616_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_616__entry__ |-> (if_stmt_616_dead_link)
      if_stmt_616__exit__ <-| (if_stmt_616_dead_link)
      ;;[if_stmt_616_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_616__entry__ |-> (if_stmt_616_eval_test)
      $P [R_iNsTr_42_617_place]
      R_iNsTr_42_617_place <-| (if_stmt_616_eval_test)
      ;;[if_stmt_616_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_616_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_42_617_place |-> (if_stmt_616_if_link if_stmt_616_else_link)
      $P [xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit]
      xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit <-| (if_stmt_616_if_link)
      $P [xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi]
      xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi <-| (if_stmt_616_else_link)
      ::[assign_stmt_643_to_assign_stmt_684] 
      {
        // 		iNsTr_23 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - quotientx_x1x_xix_xi)
        //  file prog.linked.opt.aa, line 262
        // Source expression
        // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - quotientx_x1x_xix_xi)
        $T[SUB_u64_u64_642_sample_start_] 
        $T[SUB_u64_u64_642_sample_completed_] 
        $T[SUB_u64_u64_642_update_start_] 
        $T[SUB_u64_u64_642_update_completed_] 
        // quotientx_x1x_xix_xi
        $T[R_quotientx_x1x_xix_xi_641_sample_start_] 
        $T[R_quotientx_x1x_xix_xi_641_sample_completed_] 
        $T[R_quotientx_x1x_xix_xi_641_update_start_] 
        $T[R_quotientx_x1x_xix_xi_641_update_completed_] 
        // implicit reference
        R_quotientx_x1x_xix_xi_641_sample_start_ <-& ($entry)
        R_quotientx_x1x_xix_xi_641_sample_completed_ <-& (R_quotientx_x1x_xix_xi_641_sample_start_)
        R_quotientx_x1x_xix_xi_641_update_start_ <-& (R_quotientx_x1x_xix_xi_641_sample_completed_)
        R_quotientx_x1x_xix_xi_641_update_completed_ <-& (R_quotientx_x1x_xix_xi_641_update_start_)
        SUB_u64_u64_642_sample_start_ <-& (R_quotientx_x1x_xix_xi_641_update_completed_)
        ;;[SUB_u64_u64_642_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u64_u64_642_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u64_u64_642_sample_start_ &-> (SUB_u64_u64_642_Sample)
        SUB_u64_u64_642_sample_completed_ <-& (SUB_u64_u64_642_Sample)
        SUB_u64_u64_642_sample_completed_ &-> ($null)
        SUB_u64_u64_642_update_start_ &-> (SUB_u64_u64_642_Update)
        SUB_u64_u64_642_update_completed_ <-& (SUB_u64_u64_642_Update)
        // Target expression
        // (as target) iNsTr_23
        // iNsTr_23
        // implicit reference
        // 		iNsTr_24 := ( $mux iNsTr_20 iNsTr_23  quotientx_x1x_xix_xi ) 
        //  file prog.linked.opt.aa, line 263
        // Source expression
        // ( $mux iNsTr_20 iNsTr_23  quotientx_x1x_xix_xi ) 
        $T[MUX_648_sample_start_] 
        $T[MUX_648_sample_completed_] 
        $T[MUX_648_update_start_] 
        $T[MUX_648_update_completed_] 
        // iNsTr_20
        $T[R_iNsTr_20_645_sample_start_] 
        $T[R_iNsTr_20_645_sample_completed_] 
        $T[R_iNsTr_20_645_update_start_] 
        $T[R_iNsTr_20_645_update_completed_] 
        // implicit reference
        R_iNsTr_20_645_sample_start_ <-& ($entry)
        R_iNsTr_20_645_sample_completed_ <-& (R_iNsTr_20_645_sample_start_)
        R_iNsTr_20_645_update_start_ <-& (R_iNsTr_20_645_sample_completed_)
        R_iNsTr_20_645_update_completed_ <-& (R_iNsTr_20_645_update_start_)
        // iNsTr_23
        $T[R_iNsTr_23_646_sample_start_] 
        $T[R_iNsTr_23_646_sample_completed_] 
        $T[R_iNsTr_23_646_update_start_] 
        $T[R_iNsTr_23_646_update_completed_] 
        // implicit reference
        R_iNsTr_23_646_sample_start_ <-& (SUB_u64_u64_642_update_completed_)
        R_iNsTr_23_646_sample_completed_ <-& (R_iNsTr_23_646_sample_start_)
        R_iNsTr_23_646_update_start_ <-& (R_iNsTr_23_646_sample_completed_)
        R_iNsTr_23_646_update_completed_ <-& (R_iNsTr_23_646_update_start_)
        // quotientx_x1x_xix_xi
        $T[R_quotientx_x1x_xix_xi_647_sample_start_] 
        $T[R_quotientx_x1x_xix_xi_647_sample_completed_] 
        $T[R_quotientx_x1x_xix_xi_647_update_start_] 
        $T[R_quotientx_x1x_xix_xi_647_update_completed_] 
        // implicit reference
        R_quotientx_x1x_xix_xi_647_sample_start_ <-& ($entry)
        R_quotientx_x1x_xix_xi_647_sample_completed_ <-& (R_quotientx_x1x_xix_xi_647_sample_start_)
        R_quotientx_x1x_xix_xi_647_update_start_ <-& (R_quotientx_x1x_xix_xi_647_sample_completed_)
        R_quotientx_x1x_xix_xi_647_update_completed_ <-& (R_quotientx_x1x_xix_xi_647_update_start_)
        MUX_648_sample_start_ <-& (R_iNsTr_20_645_update_completed_)
        MUX_648_sample_start_ <-& (R_iNsTr_23_646_update_completed_)
        MUX_648_sample_start_ <-& (R_quotientx_x1x_xix_xi_647_update_completed_)
        ;;[MUX_648_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_648_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_648_sample_start_ &-> (MUX_648_start)
        MUX_648_sample_completed_ <-& (MUX_648_start)
        MUX_648_update_start_ &-> (MUX_648_complete)
        MUX_648_update_completed_ <-& (MUX_648_complete)
        MUX_648_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_24
        // iNsTr_24
        // implicit reference
        // 		iNsTr_25 := (iNsTr_15 - iNsTr_24)
        //  file prog.linked.opt.aa, line 264
        // Source expression
        // (iNsTr_15 - iNsTr_24)
        $T[SUB_u64_u64_653_sample_start_] 
        $T[SUB_u64_u64_653_sample_completed_] 
        $T[SUB_u64_u64_653_update_start_] 
        $T[SUB_u64_u64_653_update_completed_] 
        // iNsTr_15
        $T[R_iNsTr_15_651_sample_start_] 
        $T[R_iNsTr_15_651_sample_completed_] 
        $T[R_iNsTr_15_651_update_start_] 
        $T[R_iNsTr_15_651_update_completed_] 
        // implicit reference
        R_iNsTr_15_651_sample_start_ <-& ($entry)
        R_iNsTr_15_651_sample_completed_ <-& (R_iNsTr_15_651_sample_start_)
        R_iNsTr_15_651_update_start_ <-& (R_iNsTr_15_651_sample_completed_)
        R_iNsTr_15_651_update_completed_ <-& (R_iNsTr_15_651_update_start_)
        // iNsTr_24
        $T[R_iNsTr_24_652_sample_start_] 
        $T[R_iNsTr_24_652_sample_completed_] 
        $T[R_iNsTr_24_652_update_start_] 
        $T[R_iNsTr_24_652_update_completed_] 
        // implicit reference
        R_iNsTr_24_652_sample_start_ <-& (MUX_648_update_completed_)
        R_iNsTr_24_652_sample_completed_ <-& (R_iNsTr_24_652_sample_start_)
        R_iNsTr_24_652_update_start_ <-& (R_iNsTr_24_652_sample_completed_)
        R_iNsTr_24_652_update_completed_ <-& (R_iNsTr_24_652_update_start_)
        SUB_u64_u64_653_sample_start_ <-& (R_iNsTr_15_651_update_completed_)
        SUB_u64_u64_653_sample_start_ <-& (R_iNsTr_24_652_update_completed_)
        ;;[SUB_u64_u64_653_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u64_u64_653_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u64_u64_653_sample_start_ &-> (SUB_u64_u64_653_Sample)
        SUB_u64_u64_653_sample_completed_ <-& (SUB_u64_u64_653_Sample)
        SUB_u64_u64_653_sample_completed_ &-> ($null)
        SUB_u64_u64_653_update_start_ &-> (SUB_u64_u64_653_Update)
        SUB_u64_u64_653_update_completed_ <-& (SUB_u64_u64_653_Update)
        // Target expression
        // (as target) iNsTr_25
        // iNsTr_25
        // implicit reference
        // 		iNsTr_26 := ($cast ($uint<32>) iNsTr_25 )
        //  file prog.linked.opt.aa, line 265
        // Source expression
        // ($cast ($uint<32>) iNsTr_25 )
        $T[type_cast_657_sample_start_] 
        $T[type_cast_657_sample_completed_] 
        $T[type_cast_657_update_start_] 
        $T[type_cast_657_update_completed_] 
        // iNsTr_25
        $T[R_iNsTr_25_656_sample_start_] 
        $T[R_iNsTr_25_656_sample_completed_] 
        $T[R_iNsTr_25_656_update_start_] 
        $T[R_iNsTr_25_656_update_completed_] 
        // implicit reference
        R_iNsTr_25_656_sample_start_ <-& (SUB_u64_u64_653_update_completed_)
        R_iNsTr_25_656_sample_completed_ <-& (R_iNsTr_25_656_sample_start_)
        R_iNsTr_25_656_update_start_ <-& (R_iNsTr_25_656_sample_completed_)
        R_iNsTr_25_656_update_completed_ <-& (R_iNsTr_25_656_update_start_)
        type_cast_657_sample_start_ <-& (R_iNsTr_25_656_update_completed_)
        ;;[type_cast_657_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_657_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_657_sample_start_ &-> (type_cast_657_Sample)
        type_cast_657_sample_completed_ <-& (type_cast_657_Sample)
        type_cast_657_sample_completed_ &-> ($null)
        type_cast_657_update_start_ &-> (type_cast_657_Update)
        type_cast_657_update_completed_ <-& (type_cast_657_Update)
        // Target expression
        // (as target) iNsTr_26
        // iNsTr_26
        // implicit reference
        // 		->(iNsTr_8) := iNsTr_1
        //  file prog.linked.opt.aa, line 266
        // Source expression
        // iNsTr_1
        $T[R_iNsTr_1_661_sample_start_] 
        $T[R_iNsTr_1_661_sample_completed_] 
        $T[R_iNsTr_1_661_update_start_] 
        $T[R_iNsTr_1_661_update_completed_] 
        // implicit reference
        R_iNsTr_1_661_sample_start_ <-& ($entry)
        R_iNsTr_1_661_sample_completed_ <-& (R_iNsTr_1_661_sample_start_)
        R_iNsTr_1_661_update_start_ <-& (R_iNsTr_1_661_sample_completed_)
        R_iNsTr_1_661_update_completed_ <-& (R_iNsTr_1_661_update_start_)
        // Target expression
        // ->(iNsTr_8)
        $T[ptr_deref_660_sample_start_] 
        $T[ptr_deref_660_sample_completed_] 
        $T[ptr_deref_660_update_start_] 
        $T[ptr_deref_660_update_completed_] 
        $T[ptr_deref_660_base_address_calculated] 
        // iNsTr_8
        $T[R_iNsTr_8_659_sample_start_] 
        $T[R_iNsTr_8_659_sample_completed_] 
        $T[R_iNsTr_8_659_update_start_] 
        $T[R_iNsTr_8_659_update_completed_] 
        // implicit reference
        R_iNsTr_8_659_sample_start_ <-& ($entry)
        R_iNsTr_8_659_sample_completed_ <-& (R_iNsTr_8_659_sample_start_)
        R_iNsTr_8_659_update_start_ <-& (R_iNsTr_8_659_sample_completed_)
        R_iNsTr_8_659_update_completed_ <-& (R_iNsTr_8_659_update_start_)
        $T[ptr_deref_660_word_address_calculated] 
        $T[ptr_deref_660_root_address_calculated] 
        $T[ptr_deref_660_base_address_resized] 
        ;;[ptr_deref_660_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_660_base_address_calculated &-> (ptr_deref_660_base_addr_resize)
        ptr_deref_660_base_address_resized <-& (ptr_deref_660_base_addr_resize)
        ;;[ptr_deref_660_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_660_base_address_resized &-> (ptr_deref_660_base_plus_offset)
        ptr_deref_660_root_address_calculated <-& (ptr_deref_660_base_plus_offset)
        ;;[ptr_deref_660_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_660_root_address_calculated &-> (ptr_deref_660_word_addrgen)
        ptr_deref_660_word_address_calculated <-& (ptr_deref_660_word_addrgen)
        ;;[ptr_deref_660_Sample] 
        {
          ;;[ptr_deref_660_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_660_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_660_sample_start_ <-& (ptr_deref_660_word_address_calculated)
        ptr_deref_660_sample_start_ &-> (ptr_deref_660_Sample)
        ptr_deref_660_sample_completed_ <-& (ptr_deref_660_Sample)
        ptr_deref_660_sample_completed_ &-> ($null)
        ptr_deref_660_update_start_ &-> (ptr_deref_660_Update)
        ptr_deref_660_update_completed_ <-& (ptr_deref_660_Update)
        ptr_deref_660_base_address_calculated <-& (R_iNsTr_8_659_update_completed_)
        ptr_deref_660_sample_start_ <-& (ptr_deref_660_base_address_calculated)
        ptr_deref_660_sample_start_ <-& (R_iNsTr_1_661_update_completed_)
        // 		iNsTr_28 := (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 267
        // Source expression
        // (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_667_sample_start_] 
        $T[ADD_u32_u32_667_sample_completed_] 
        $T[ADD_u32_u32_667_update_start_] 
        $T[ADD_u32_u32_667_update_completed_] 
        // iNsTr_2
        $T[R_iNsTr_2_664_sample_start_] 
        $T[R_iNsTr_2_664_sample_completed_] 
        $T[R_iNsTr_2_664_update_start_] 
        $T[R_iNsTr_2_664_update_completed_] 
        // implicit reference
        R_iNsTr_2_664_sample_start_ <-& ($entry)
        R_iNsTr_2_664_sample_completed_ <-& (R_iNsTr_2_664_sample_start_)
        R_iNsTr_2_664_update_start_ <-& (R_iNsTr_2_664_sample_completed_)
        R_iNsTr_2_664_update_completed_ <-& (R_iNsTr_2_664_update_start_)
        ADD_u32_u32_667_sample_start_ <-& (R_iNsTr_2_664_update_completed_)
        ;;[ADD_u32_u32_667_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_667_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_667_sample_start_ &-> (ADD_u32_u32_667_Sample)
        ADD_u32_u32_667_sample_completed_ <-& (ADD_u32_u32_667_Sample)
        ADD_u32_u32_667_sample_completed_ &-> ($null)
        ADD_u32_u32_667_update_start_ &-> (ADD_u32_u32_667_Update)
        ADD_u32_u32_667_update_completed_ <-& (ADD_u32_u32_667_Update)
        // Target expression
        // (as target) iNsTr_28
        // iNsTr_28
        // implicit reference
        // 		iNsTr_29 := (iNsTr_28 == ($bitcast ($uint<32>) _b00000000000000000000000000011001  ))
        //  file prog.linked.opt.aa, line 268
        // Source expression
        // (iNsTr_28 == ($bitcast ($uint<32>) _b00000000000000000000000000011001  ))
        $T[EQ_u32_u1_673_sample_start_] 
        $T[EQ_u32_u1_673_sample_completed_] 
        $T[EQ_u32_u1_673_update_start_] 
        $T[EQ_u32_u1_673_update_completed_] 
        // iNsTr_28
        $T[R_iNsTr_28_670_sample_start_] 
        $T[R_iNsTr_28_670_sample_completed_] 
        $T[R_iNsTr_28_670_update_start_] 
        $T[R_iNsTr_28_670_update_completed_] 
        // implicit reference
        R_iNsTr_28_670_sample_start_ <-& (ADD_u32_u32_667_update_completed_)
        R_iNsTr_28_670_sample_completed_ <-& (R_iNsTr_28_670_sample_start_)
        R_iNsTr_28_670_update_start_ <-& (R_iNsTr_28_670_sample_completed_)
        R_iNsTr_28_670_update_completed_ <-& (R_iNsTr_28_670_update_start_)
        EQ_u32_u1_673_sample_start_ <-& (R_iNsTr_28_670_update_completed_)
        ;;[EQ_u32_u1_673_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_673_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_673_sample_start_ &-> (EQ_u32_u1_673_Sample)
        EQ_u32_u1_673_sample_completed_ <-& (EQ_u32_u1_673_Sample)
        EQ_u32_u1_673_sample_completed_ &-> ($null)
        EQ_u32_u1_673_update_start_ &-> (EQ_u32_u1_673_Update)
        EQ_u32_u1_673_update_completed_ <-& (EQ_u32_u1_673_Update)
        // Target expression
        // (as target) iNsTr_29
        // iNsTr_29
        // implicit reference
        // 		iNsTr_30 := ( $mux iNsTr_29 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_28 ) 
        //  file prog.linked.opt.aa, line 269
        // Source expression
        // ( $mux iNsTr_29 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_28 ) 
        $T[MUX_680_sample_start_] 
        $T[MUX_680_sample_completed_] 
        $T[MUX_680_update_start_] 
        $T[MUX_680_update_completed_] 
        // iNsTr_29
        $T[R_iNsTr_29_676_sample_start_] 
        $T[R_iNsTr_29_676_sample_completed_] 
        $T[R_iNsTr_29_676_update_start_] 
        $T[R_iNsTr_29_676_update_completed_] 
        // implicit reference
        R_iNsTr_29_676_sample_start_ <-& (EQ_u32_u1_673_update_completed_)
        R_iNsTr_29_676_sample_completed_ <-& (R_iNsTr_29_676_sample_start_)
        R_iNsTr_29_676_update_start_ <-& (R_iNsTr_29_676_sample_completed_)
        R_iNsTr_29_676_update_completed_ <-& (R_iNsTr_29_676_update_start_)
        // iNsTr_28
        $T[R_iNsTr_28_679_sample_start_] 
        $T[R_iNsTr_28_679_sample_completed_] 
        $T[R_iNsTr_28_679_update_start_] 
        $T[R_iNsTr_28_679_update_completed_] 
        // implicit reference
        R_iNsTr_28_679_sample_start_ <-& (ADD_u32_u32_667_update_completed_)
        R_iNsTr_28_679_sample_completed_ <-& (R_iNsTr_28_679_sample_start_)
        R_iNsTr_28_679_update_start_ <-& (R_iNsTr_28_679_sample_completed_)
        R_iNsTr_28_679_update_completed_ <-& (R_iNsTr_28_679_update_start_)
        MUX_680_sample_start_ <-& (R_iNsTr_29_676_update_completed_)
        MUX_680_sample_start_ <-& (R_iNsTr_28_679_update_completed_)
        ;;[MUX_680_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_680_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_680_sample_start_ &-> (MUX_680_start)
        MUX_680_sample_completed_ <-& (MUX_680_start)
        MUX_680_update_start_ &-> (MUX_680_complete)
        MUX_680_update_completed_ <-& (MUX_680_complete)
        MUX_680_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_30
        // iNsTr_30
        // implicit reference
        // 		HPbuff_ptr := iNsTr_30
        //  file prog.linked.opt.aa, line 270
        // Source expression
        // iNsTr_30
        $T[R_iNsTr_30_683_sample_start_] 
        $T[R_iNsTr_30_683_sample_completed_] 
        $T[R_iNsTr_30_683_update_start_] 
        $T[R_iNsTr_30_683_update_completed_] 
        // implicit reference
        R_iNsTr_30_683_sample_start_ <-& (MUX_680_update_completed_)
        R_iNsTr_30_683_sample_completed_ <-& (R_iNsTr_30_683_sample_start_)
        R_iNsTr_30_683_update_start_ <-& (R_iNsTr_30_683_sample_completed_)
        R_iNsTr_30_683_update_completed_ <-& (R_iNsTr_30_683_update_start_)
        // Target expression
        // (as target) HPbuff_ptr
        $T[STORE_HPbuff_ptr_682_sample_start_] 
        $T[STORE_HPbuff_ptr_682_sample_completed_] 
        $T[STORE_HPbuff_ptr_682_update_start_] 
        $T[STORE_HPbuff_ptr_682_update_completed_] 
        // HPbuff_ptr
        $T[STORE_HPbuff_ptr_682_word_address_calculated] 
        $T[STORE_HPbuff_ptr_682_root_address_calculated] 
        STORE_HPbuff_ptr_682_word_address_calculated <-& (STORE_HPbuff_ptr_682_root_address_calculated)
        ;;[STORE_HPbuff_ptr_682_Sample] 
        {
          ;;[STORE_HPbuff_ptr_682_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_HPbuff_ptr_682_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_HPbuff_ptr_682_sample_start_ <-& (STORE_HPbuff_ptr_682_word_address_calculated)
        STORE_HPbuff_ptr_682_sample_start_ &-> (STORE_HPbuff_ptr_682_Sample)
        STORE_HPbuff_ptr_682_sample_completed_ <-& (STORE_HPbuff_ptr_682_Sample)
        STORE_HPbuff_ptr_682_sample_completed_ &-> ($null)
        STORE_HPbuff_ptr_682_update_start_ &-> (STORE_HPbuff_ptr_682_Update)
        STORE_HPbuff_ptr_682_update_completed_ <-& (STORE_HPbuff_ptr_682_Update)
        STORE_HPbuff_ptr_682_sample_start_ <-& (R_iNsTr_30_683_update_completed_)
        // load-store dependencies..
      }
      assign_stmt_643_to_assign_stmt_684__entry__ |-> (assign_stmt_643_to_assign_stmt_684)
      assign_stmt_643_to_assign_stmt_684__exit__ <-| (assign_stmt_643_to_assign_stmt_684)
      ::[assign_stmt_687] 
      {
        // 		HPout_pipe := iNsTr_26
        //  file prog.linked.opt.aa, line 271
        // Source expression
        // iNsTr_26
        $T[R_iNsTr_26_686_sample_start_] 
        $T[R_iNsTr_26_686_sample_completed_] 
        $T[R_iNsTr_26_686_update_start_] 
        $T[R_iNsTr_26_686_update_completed_] 
        // implicit reference
        R_iNsTr_26_686_sample_start_ <-& ($entry)
        R_iNsTr_26_686_sample_completed_ <-& (R_iNsTr_26_686_sample_start_)
        R_iNsTr_26_686_update_start_ <-& (R_iNsTr_26_686_sample_completed_)
        R_iNsTr_26_686_update_completed_ <-& (R_iNsTr_26_686_update_start_)
        // Target expression
        // (as target) HPout_pipe
        $T[WPIPE_HPout_pipe_685_sample_start_] 
        $T[WPIPE_HPout_pipe_685_sample_completed_] 
        $T[WPIPE_HPout_pipe_685_update_start_] 
        $T[WPIPE_HPout_pipe_685_update_completed_] 
        ;;[WPIPE_HPout_pipe_685_Sample] 
        {
          // pipe write sample-start HPout_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_HPout_pipe_685_Update] 
        {
          // pipe write update (complete) HPout_pipe
          $T [req] $T [ack] 
        }
        WPIPE_HPout_pipe_685_sample_start_ &-> (WPIPE_HPout_pipe_685_Sample)
        WPIPE_HPout_pipe_685_sample_completed_ <-& (WPIPE_HPout_pipe_685_Sample)
        WPIPE_HPout_pipe_685_sample_completed_ &-> ($null)
        WPIPE_HPout_pipe_685_update_start_ &-> (WPIPE_HPout_pipe_685_Update)
        WPIPE_HPout_pipe_685_update_completed_ <-& (WPIPE_HPout_pipe_685_Update)
        WPIPE_HPout_pipe_685_sample_start_ <-& (R_iNsTr_26_686_update_completed_)
        // barrier: 		HPout_pipe := iNsTr_26
        // load-store dependencies..
        // pipe read/write dependencies for pipe HPout_pipe
      }
      assign_stmt_687__entry__ |-> (assign_stmt_687)
      assign_stmt_687__exit__ <-| (assign_stmt_687)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 209
      ;;[merge_stmt_497_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_497__entry__ |-> (merge_stmt_497_dead_link)
      merge_stmt_497__exit__ <-| (merge_stmt_497_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 209  --------------------------
      ||[bb_0_bbx_xnph6x_xix_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bbx_xnph6x_xix_xix_xpreheader |-> (bb_0_bbx_xnph6x_xix_xix_xpreheader_PhiReq)
      $P [merge_stmt_497_PhiReqMerge] 
      merge_stmt_497_PhiReqMerge <-| ( bb_0_bbx_xnph6x_xix_xix_xpreheader_PhiReq )
      ||[merge_stmt_497_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_497_PhiReqMerge |-> (merge_stmt_497_PhiAck)
      merge_stmt_497__exit__  <-| (merge_stmt_497_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 209  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 212
      //---------------------   merge statement  file prog.linked.opt.aa, line 212  --------------------------
      ||[bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_500] 
        {
          ||[phi_stmt_500_sources] 
          {
            // sources for 			$phi xx_x05x_xix_xi := 			  ($cast ($uint<64>) iNsTr_41 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) iNsTr_19 ) $on bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_41 )
            ;;[type_cast_503] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<64>) iNsTr_19 )
            ;;[type_cast_505] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_500_req] 
        }
        ;;[phi_stmt_506] 
        {
          ||[phi_stmt_506_sources] 
          {
            // sources for 			$phi quotientx_x04x_xix_xi := 			  ($cast ($uint<64>) iNsTr_40 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_40 )
            ;;[type_cast_509] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_506_req] 
        }
      }
      bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi |-> (bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi_PhiReq)
      ||[xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_500] 
        {
          ||[phi_stmt_500_sources] 
          {
            // sources for 			$phi xx_x05x_xix_xi := 			  ($cast ($uint<64>) iNsTr_41 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) iNsTr_19 ) $on bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_41 )
            ;;[type_cast_503] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<64>) iNsTr_19 )
            ;;[type_cast_505] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_500_req] 
        }
        ;;[phi_stmt_506] 
        {
          ||[phi_stmt_506_sources] 
          {
            // sources for 			$phi quotientx_x04x_xix_xi := 			  ($cast ($uint<64>) iNsTr_40 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_40 )
            ;;[type_cast_509] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_506_req] 
        }
      }
      xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi |-> (xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq)
      $P [merge_stmt_499_PhiReqMerge] 
      merge_stmt_499_PhiReqMerge <-| ( bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi_PhiReq  xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq )
      ||[merge_stmt_499_PhiAck] 
      {
        $T [phi_stmt_500_ack] 
        $T [phi_stmt_506_ack] 
      }
      merge_stmt_499_PhiReqMerge |-> (merge_stmt_499_PhiAck)
      merge_stmt_499__exit__  <-| (merge_stmt_499_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 212  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 223
      ;;[merge_stmt_532_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_532__entry__ |-> (merge_stmt_532_dead_link)
      merge_stmt_532__exit__ <-| (merge_stmt_532_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 223  --------------------------
      ||[bbx_xnph6x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph6x_xix_xi_bbx_xnphx_xix_xix_xpreheader |-> (bbx_xnph6x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq)
      $P [merge_stmt_532_PhiReqMerge] 
      merge_stmt_532_PhiReqMerge <-| ( bbx_xnph6x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq )
      ||[merge_stmt_532_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_532_PhiReqMerge |-> (merge_stmt_532_PhiAck)
      merge_stmt_532__exit__  <-| (merge_stmt_532_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 223  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 226
      //---------------------   merge statement  file prog.linked.opt.aa, line 226  --------------------------
      ||[bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_535] 
        {
          ||[phi_stmt_535_sources] 
          {
            // sources for 			$phi shifted_divisorx_x02x_xix_xi := 			  ($cast ($uint<64>) iNsTr_44 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_44 )
            ;;[type_cast_538] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_535_req] 
        }
        ;;[phi_stmt_542] 
        {
          ||[phi_stmt_542_sources] 
          {
            // sources for 			$phi curr_quotientx_x01x_xix_xi := 			  ($cast ($uint<64>) iNsTr_45 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_45 )
            ;;[type_cast_545] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_542_req] 
        }
      }
      bbx_xnphx_xix_xi_bbx_xnphx_xix_xi |-> (bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq)
      ||[bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_535] 
        {
          ||[phi_stmt_535_sources] 
          {
            // sources for 			$phi shifted_divisorx_x02x_xix_xi := 			  ($cast ($uint<64>) iNsTr_44 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_44 )
            ;;[type_cast_538] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_535_req] 
        }
        ;;[phi_stmt_542] 
        {
          ||[phi_stmt_542_sources] 
          {
            // sources for 			$phi curr_quotientx_x01x_xix_xi := 			  ($cast ($uint<64>) iNsTr_45 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_45 )
            ;;[type_cast_545] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_542_req] 
        }
      }
      bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi |-> (bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq)
      $P [merge_stmt_534_PhiReqMerge] 
      merge_stmt_534_PhiReqMerge <-| ( bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq  bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq )
      ||[merge_stmt_534_PhiAck] 
      {
        $T [phi_stmt_535_ack] 
        $T [phi_stmt_542_ack] 
      }
      merge_stmt_534_PhiReqMerge |-> (merge_stmt_534_PhiAck)
      merge_stmt_534__exit__  <-| (merge_stmt_534_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 226  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 238
      ;;[merge_stmt_573_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_573__entry__ |-> (merge_stmt_573_dead_link)
      merge_stmt_573__exit__ <-| (merge_stmt_573_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 238  --------------------------
      ||[bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_574] 
        {
          ||[phi_stmt_574_sources] 
          {
            // sources for 			$phi xx_xlcssa1 := 			  ($cast ($uint<64>) iNsTr_45 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_45 )
            ;;[type_cast_577] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_574_req] 
        }
        ;;[phi_stmt_578] 
        {
          ||[phi_stmt_578_sources] 
          {
            // sources for 			$phi xx_xlcssa := 			  ($cast ($uint<64>) iNsTr_44 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_44 )
            ;;[type_cast_581] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_578_req] 
        }
      }
      bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit |-> (bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq)
      $P [merge_stmt_573_PhiReqMerge] 
      merge_stmt_573_PhiReqMerge <-| ( bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq )
      ||[merge_stmt_573_PhiAck] 
      {
        $T [phi_stmt_574_ack] 
        $T [phi_stmt_578_ack] 
      }
      merge_stmt_573_PhiReqMerge |-> (merge_stmt_573_PhiAck)
      merge_stmt_573__exit__  <-| (merge_stmt_573_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 238  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 243
      //---------------------   merge statement  file prog.linked.opt.aa, line 243  --------------------------
      ||[bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_585] 
        {
          ||[phi_stmt_585_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) xx_xlcssa )
            ;;[type_cast_591] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_585_req] 
        }
        ;;[phi_stmt_592] 
        {
          ||[phi_stmt_592_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) xx_xlcssa1 )
            ;;[type_cast_598] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_592_req] 
        }
      }
      bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi |-> (bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq)
      ||[xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_585] 
        {
          ||[phi_stmt_585_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) xx_xlcssa )
            ;;[type_cast_591] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_585_req] 
        }
        ;;[phi_stmt_592] 
        {
          ||[phi_stmt_592_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) xx_xlcssa1 )
            ;;[type_cast_598] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_592_req] 
        }
      }
      xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi |-> (xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq)
      $P [merge_stmt_584_PhiReqMerge] 
      merge_stmt_584_PhiReqMerge <-| ( bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq  xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq )
      ||[merge_stmt_584_PhiAck] 
      {
        $T [phi_stmt_585_ack] 
        $T [phi_stmt_592_ack] 
      }
      merge_stmt_584_PhiReqMerge |-> (merge_stmt_584_PhiAck)
      merge_stmt_584__exit__  <-| (merge_stmt_584_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 243  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 255
      ;;[merge_stmt_622_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_622__entry__ |-> (merge_stmt_622_dead_link)
      merge_stmt_622__exit__ <-| (merge_stmt_622_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 255  --------------------------
      ||[xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_623] 
        {
          ||[phi_stmt_623_sources] 
          {
            // sources for 			$phi xx_xlcssa2 := 			  ($cast ($uint<64>) iNsTr_40 ) $on xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_40 )
            ;;[type_cast_626] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_623_req] 
        }
      }
      xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit |-> (xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit_PhiReq)
      $P [merge_stmt_622_PhiReqMerge] 
      merge_stmt_622_PhiReqMerge <-| ( xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit_PhiReq )
      ||[merge_stmt_622_PhiAck] 
      {
        $T [phi_stmt_623_ack] 
      }
      merge_stmt_622_PhiReqMerge |-> (merge_stmt_622_PhiAck)
      merge_stmt_622__exit__  <-| (merge_stmt_622_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 255  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 259
      //---------------------   merge statement  file prog.linked.opt.aa, line 259  --------------------------
      ||[bb_0_divideSignedx_xexit_PhiReq] 
      {
        ;;[phi_stmt_630] 
        {
          ||[phi_stmt_630_sources] 
          {
            // sources for 			$phi quotientx_x1x_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_divideSignedx_xexit			  ($cast ($uint<64>) xx_xlcssa2 ) $on divideSignedx_xexitx_xloopexit_divideSignedx_xexit // type of target is $uint<64>
            // ($cast ($uint<64>) xx_xlcssa2 )
            ;;[type_cast_636] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_630_req] 
        }
      }
      bb_0_divideSignedx_xexit |-> (bb_0_divideSignedx_xexit_PhiReq)
      ||[divideSignedx_xexitx_xloopexit_divideSignedx_xexit_PhiReq] 
      {
        ;;[phi_stmt_630] 
        {
          ||[phi_stmt_630_sources] 
          {
            // sources for 			$phi quotientx_x1x_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_divideSignedx_xexit			  ($cast ($uint<64>) xx_xlcssa2 ) $on divideSignedx_xexitx_xloopexit_divideSignedx_xexit // type of target is $uint<64>
            // ($cast ($uint<64>) xx_xlcssa2 )
            ;;[type_cast_636] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_630_req] 
        }
      }
      divideSignedx_xexitx_xloopexit_divideSignedx_xexit |-> (divideSignedx_xexitx_xloopexit_divideSignedx_xexit_PhiReq)
      $P [merge_stmt_629_PhiReqMerge] 
      merge_stmt_629_PhiReqMerge <-| ( bb_0_divideSignedx_xexit_PhiReq  divideSignedx_xexitx_xloopexit_divideSignedx_xexit_PhiReq )
      ||[merge_stmt_629_PhiAck] 
      {
        $T [phi_stmt_630_ack] 
      }
      merge_stmt_629_PhiReqMerge |-> (merge_stmt_629_PhiAck)
      merge_stmt_629__exit__  <-| (merge_stmt_629_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 259  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 273
      //---------------------   merge statement  file prog.linked.opt.aa, line 273  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_689_PhiReqMerge] 
      merge_stmt_689_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_689_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_689_PhiReqMerge |-> (merge_stmt_689_PhiAck)
      merge_stmt_689__exit__  <-| (merge_stmt_689_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 273  --------------------------
      assign_stmt_384__entry__ <-| (branch_block_stmt_381__entry__)
      assign_stmt_387_to_assign_stmt_490__entry__ <-| (assign_stmt_384__exit__)
      if_stmt_491__entry__ <-| (assign_stmt_387_to_assign_stmt_490__exit__)
      merge_stmt_497__entry__ <-| (if_stmt_491__exit__)
      bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi <-| (merge_stmt_497__exit__)
      assign_stmt_519_to_assign_stmt_525__entry__ <-| (merge_stmt_499__exit__)
      if_stmt_526__entry__ <-| (assign_stmt_519_to_assign_stmt_525__exit__)
      merge_stmt_532__entry__ <-| (if_stmt_526__exit__)
      bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi <-| (merge_stmt_532__exit__)
      assign_stmt_555_to_assign_stmt_566__entry__ <-| (merge_stmt_534__exit__)
      if_stmt_567__entry__ <-| (assign_stmt_555_to_assign_stmt_566__exit__)
      merge_stmt_573__entry__ <-| (if_stmt_567__exit__)
      xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi <-| (merge_stmt_573__exit__)
      assign_stmt_604_to_assign_stmt_615__entry__ <-| (merge_stmt_584__exit__)
      if_stmt_616__entry__ <-| (assign_stmt_604_to_assign_stmt_615__exit__)
      merge_stmt_622__entry__ <-| (if_stmt_616__exit__)
      divideSignedx_xexitx_xloopexit_divideSignedx_xexit <-| (merge_stmt_622__exit__)
      assign_stmt_643_to_assign_stmt_684__entry__ <-| (merge_stmt_629__exit__)
      assign_stmt_687__entry__ <-| (assign_stmt_643_to_assign_stmt_684__exit__)
      return__ <-| (assign_stmt_687__exit__)
      merge_stmt_689__exit__ |-> (branch_block_stmt_381__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %hpFilt%body%
    //  file prog.linked.opt.aa, line 209
    // constant-object-declarations for block %hpFilt%body%
    //  file prog.linked.opt.aa, line 212
    // constant-object-declarations for block %hpFilt%body%
    //  file prog.linked.opt.aa, line 223
    // constant-object-declarations for block %hpFilt%body%
    //  file prog.linked.opt.aa, line 226
    // constant-object-declarations for block %hpFilt%body%
    //  file prog.linked.opt.aa, line 238
    // constant-object-declarations for block %hpFilt%body%
    //  file prog.linked.opt.aa, line 243
    // constant-object-declarations for block %hpFilt%body%
    //  file prog.linked.opt.aa, line 255
    // constant-object-declarations for block %hpFilt%body%
    //  file prog.linked.opt.aa, line 259
    // constant-object-declarations for block %hpFilt%body%
    //  file prog.linked.opt.aa, line 273
    // constant-object-declarations for block %hpFilt%body
    //  file prog.linked.opt.aa, line 181
    // constant-object-declarations for block %hpFilt
    //  file prog.linked.opt.aa, line 176
    // constant-declarations for block %hpFilt%body
    //  file prog.linked.opt.aa, line 181
    // HPbuff_ptr
    $constant $W[LOAD_HPbuff_ptr_386_word_address_0] : $pointer<memory_space_7> := _b0
    // ($bitcast ($uint<32>) _b11111111111111111111111111110100  )
    $constant $W[type_cast_391_wire_constant] : $int<32> := _b11111111111111111111111111110100// -12
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_399_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000001101  )
    $constant $W[type_cast_405_wire_constant] : $int<32> := _b00000000000000000000000000001101// 13
    // ( $mux iNsTr_4 iNsTr_5  iNsTr_3 ) 
    // HPy1
    $constant $W[LOAD_HPy1_415_word_address_0] : $pointer<memory_space_8> := _b0
    // @(HPbuff[iNsTr_2])
    $constant $W[array_obj_ref_419_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_419_offset_scale_factor_0] : $int<5> := _b00001// 1
    // ->(iNsTr_8)
    $constant $W[ptr_deref_424_word_offset_0] : $int<5> := _b00000// 0
    // HPy1
    $constant $W[STORE_HPy1_436_word_address_0] : $pointer<memory_space_8> := _b0
    // @(HPbuff[iNsTr_6])
    $constant $W[array_obj_ref_441_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_441_offset_scale_factor_0] : $int<5> := _b00001// 1
    // ->(iNsTr_13)
    $constant $W[ptr_deref_446_word_offset_0] : $int<5> := _b00000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_462_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_467_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ( $mux iNsTr_17 iNsTr_18  iNsTr_16 ) 
    // ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_482_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  )
    $constant $W[type_cast_488_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000011001// 25
    // if-statement  
    //  file prog.linked.opt.aa, line 204
    // constant-declarations for block %hpFilt%body%
    //  file prog.linked.opt.aa, line 209
    // constant-declarations for block %hpFilt%body%
    //  file prog.linked.opt.aa, line 212
    // constant-declarations for phi:  			$phi xx_x05x_xix_xi := 			  ($cast ($uint<64>) iNsTr_41 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) iNsTr_19 ) $on bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 213
    // constant-declarations for phi:  			$phi quotientx_x04x_xix_xi := 			  ($cast ($uint<64>) iNsTr_40 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 214
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_512_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_517_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  )
    $constant $W[type_cast_523_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000011001// 25
    // if-statement  
    //  file prog.linked.opt.aa, line 218
    // constant-declarations for block %hpFilt%body%
    //  file prog.linked.opt.aa, line 223
    // constant-declarations for block %hpFilt%body%
    //  file prog.linked.opt.aa, line 226
    // constant-declarations for phi:  			$phi shifted_divisorx_x02x_xix_xi := 			  ($cast ($uint<64>) iNsTr_44 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 227
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ) )
    $constant $W[type_cast_541_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000011001// 25
    // constant-declarations for phi:  			$phi curr_quotientx_x01x_xix_xi := 			  ($cast ($uint<64>) iNsTr_45 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 228
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )
    $constant $W[type_cast_548_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_553_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_559_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 233
    // constant-declarations for block %hpFilt%body%
    //  file prog.linked.opt.aa, line 238
    // constant-declarations for phi:  			$phi xx_xlcssa1 := 			  ($cast ($uint<64>) iNsTr_45 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 239
    // constant-declarations for phi:  			$phi xx_xlcssa := 			  ($cast ($uint<64>) iNsTr_44 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 240
    // constant-declarations for block %hpFilt%body%
    //  file prog.linked.opt.aa, line 243
    // constant-declarations for phi:  			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 244
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ) )
    $constant $W[type_cast_589_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000011001// 25
    // constant-declarations for phi:  			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 245
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )
    $constant $W[type_cast_596_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  )
    $constant $W[type_cast_613_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000011001// 25
    // if-statement  
    //  file prog.linked.opt.aa, line 250
    // constant-declarations for block %hpFilt%body%
    //  file prog.linked.opt.aa, line 255
    // constant-declarations for phi:  			$phi xx_xlcssa2 := 			  ($cast ($uint<64>) iNsTr_40 ) $on xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 256
    // constant-declarations for block %hpFilt%body%
    //  file prog.linked.opt.aa, line 259
    // constant-declarations for phi:  			$phi quotientx_x1x_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_divideSignedx_xexit			  ($cast ($uint<64>) xx_xlcssa2 ) $on divideSignedx_xexitx_xloopexit_divideSignedx_xexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 260
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_634_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_640_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ( $mux iNsTr_20 iNsTr_23  quotientx_x1x_xix_xi ) 
    // ->(iNsTr_8)
    $constant $W[ptr_deref_660_word_offset_0] : $int<5> := _b00000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_666_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000011001  )
    $constant $W[type_cast_672_wire_constant] : $int<32> := _b00000000000000000000000000011001// 25
    // ( $mux iNsTr_29 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_28 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_678_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // HPbuff_ptr
    $constant $W[STORE_HPbuff_ptr_682_word_address_0] : $pointer<memory_space_7> := _b0
    // constant-declarations for block %hpFilt%body%
    //  file prog.linked.opt.aa, line 273
    // block %hpFilt%body
    //  file prog.linked.opt.aa, line 181
    // 		iNsTr_1 := LPout_pipe
    //  file prog.linked.opt.aa, line 183
    // iNsTr_1
    $W[iNsTr_1_384] : $int<32>
    // 		iNsTr_2 := HPbuff_ptr
    //  file prog.linked.opt.aa, line 184
    // HPbuff_ptr
    $W[LOAD_HPbuff_ptr_386_data_0] : $int<32>
    // iNsTr_2
    $W[iNsTr_2_387] : $int<32>
    // 		iNsTr_3 := (iNsTr_2 + ($bitcast ($uint<32>) _b11111111111111111111111111110100  ))
    //  file prog.linked.opt.aa, line 185
    // iNsTr_3
    $W[iNsTr_3_393] : $int<32>
    // 		iNsTr_4 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 186
    // ($bitcast ($int<32>) iNsTr_3 )
    $intermediate $W[type_cast_396_wire] : $int<32>
    // iNsTr_4
    $W[iNsTr_4_401] : $int<1>
    // 		iNsTr_5 := (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000001101  ))
    //  file prog.linked.opt.aa, line 187
    // iNsTr_5
    $W[iNsTr_5_407] : $int<32>
    // 		iNsTr_6 := ( $mux iNsTr_4 iNsTr_5  iNsTr_3 ) 
    //  file prog.linked.opt.aa, line 188
    // iNsTr_6
    $W[iNsTr_6_413] : $int<32>
    // 		iNsTr_7 := HPy1
    //  file prog.linked.opt.aa, line 189
    // HPy1
    $W[LOAD_HPy1_415_data_0] : $int<32>
    // iNsTr_7
    $W[iNsTr_7_416] : $int<32>
    // 		iNsTr_8 := @(HPbuff[iNsTr_2])
    //  file prog.linked.opt.aa, line 190
    // @(HPbuff[iNsTr_2])
    $intermediate $W[R_iNsTr_2_418_resized] : $int<5>
    $intermediate $W[R_iNsTr_2_418_scaled] : $int<5>
    $intermediate $W[array_obj_ref_419_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_419_root_address] : $int<5>
    // iNsTr_8
    $W[iNsTr_8_421] : $int<32>
    // 		iNsTr_9 := ->(iNsTr_8)
    //  file prog.linked.opt.aa, line 191
    // ->(iNsTr_8)
    $intermediate $W[ptr_deref_424_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_424_root_address] : $int<5>
    $W[ptr_deref_424_word_address_0] : $pointer<memory_space_6>
    $W[ptr_deref_424_data_0] : $int<32>
    // iNsTr_9
    $W[iNsTr_9_425] : $int<32>
    // 		iNsTr_10 := (iNsTr_7 + iNsTr_1)
    //  file prog.linked.opt.aa, line 192
    // iNsTr_10
    $W[iNsTr_10_430] : $int<32>
    // 		iNsTr_11 := (iNsTr_10 - iNsTr_9)
    //  file prog.linked.opt.aa, line 193
    // iNsTr_11
    $W[iNsTr_11_435] : $int<32>
    // 		HPy1 := iNsTr_11
    //  file prog.linked.opt.aa, line 194
    // HPy1
    $constant $W[STORE_HPy1_436_word_address_0] : $pointer<memory_space_8> := _b0
    $W[STORE_HPy1_436_data_0] : $int<32>
    // 		iNsTr_13 := @(HPbuff[iNsTr_6])
    //  file prog.linked.opt.aa, line 195
    // @(HPbuff[iNsTr_6])
    $intermediate $W[R_iNsTr_6_440_resized] : $int<5>
    $intermediate $W[R_iNsTr_6_440_scaled] : $int<5>
    $intermediate $W[array_obj_ref_441_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_441_root_address] : $int<5>
    // iNsTr_13
    $W[iNsTr_13_443] : $int<32>
    // 		iNsTr_14 := ->(iNsTr_13)
    //  file prog.linked.opt.aa, line 196
    // ->(iNsTr_13)
    $intermediate $W[ptr_deref_446_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_446_root_address] : $int<5>
    $W[ptr_deref_446_word_address_0] : $pointer<memory_space_6>
    $W[ptr_deref_446_data_0] : $int<32>
    // iNsTr_14
    $W[iNsTr_14_447] : $int<32>
    // 		iNsTr_15 := ($cast ($uint<64>) iNsTr_14 )
    //  file prog.linked.opt.aa, line 197
    // iNsTr_15
    $W[iNsTr_15_451] : $int<64>
    // 		iNsTr_16 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_11 ) )
    //  file prog.linked.opt.aa, line 198
    // ($cast ($int<64>) iNsTr_11 )
    $intermediate $W[type_cast_454_wire] : $int<64>
    // iNsTr_16
    $W[iNsTr_16_456] : $int<64>
    // 		iNsTr_17 := (($bitcast ($int<32>) iNsTr_11 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 199
    // ($bitcast ($int<32>) iNsTr_11 )
    $intermediate $W[type_cast_459_wire] : $int<32>
    // iNsTr_17
    $W[iNsTr_17_464] : $int<1>
    // 		iNsTr_18 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - iNsTr_16)
    //  file prog.linked.opt.aa, line 200
    // iNsTr_18
    $W[iNsTr_18_470] : $int<64>
    // 		iNsTr_19 := ( $mux iNsTr_17 iNsTr_18  iNsTr_16 ) 
    //  file prog.linked.opt.aa, line 201
    // iNsTr_19
    $W[iNsTr_19_476] : $int<64>
    // 		iNsTr_20 := (($bitcast ($int<64>) iNsTr_19 ) < ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 202
    // ($bitcast ($int<64>) iNsTr_19 )
    $intermediate $W[type_cast_479_wire] : $int<64>
    // iNsTr_20
    $W[iNsTr_20_484] : $int<1>
    // 		iNsTr_21 := (iNsTr_19 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
    //  file prog.linked.opt.aa, line 203
    // iNsTr_21
    $W[iNsTr_21_490] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 204
    // merge-statement  
    //  file prog.linked.opt.aa, line 212
    // 			$phi xx_x05x_xix_xi := 			  ($cast ($uint<64>) iNsTr_41 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) iNsTr_19 ) $on bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 213
    // ($cast ($uint<64>) iNsTr_41 )
    $intermediate $W[type_cast_503_wire] : $int<64>
    // ($cast ($uint<64>) iNsTr_19 )
    $intermediate $W[type_cast_505_wire] : $int<64>
    // xx_x05x_xix_xi
    $W[xx_x05x_xix_xi_500] : $int<64>
    // 			$phi quotientx_x04x_xix_xi := 			  ($cast ($uint<64>) iNsTr_40 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 214
    // ($cast ($uint<64>) iNsTr_40 )
    $intermediate $W[type_cast_509_wire] : $int<64>
    // quotientx_x04x_xix_xi
    $W[quotientx_x04x_xix_xi_506] : $int<64>
    // 		iNsTr_36 := (xx_x05x_xix_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 216
    // iNsTr_36
    $W[iNsTr_36_519] : $int<64>
    // 		iNsTr_37 := (iNsTr_36 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
    //  file prog.linked.opt.aa, line 217
    // iNsTr_37
    $W[iNsTr_37_525] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 218
    // merge-statement  
    //  file prog.linked.opt.aa, line 226
    // 			$phi shifted_divisorx_x02x_xix_xi := 			  ($cast ($uint<64>) iNsTr_44 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 227
    // ($cast ($uint<64>) iNsTr_44 )
    $intermediate $W[type_cast_538_wire] : $int<64>
    // shifted_divisorx_x02x_xix_xi
    $W[shifted_divisorx_x02x_xix_xi_535] : $int<64>
    // 			$phi curr_quotientx_x01x_xix_xi := 			  ($cast ($uint<64>) iNsTr_45 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 228
    // ($cast ($uint<64>) iNsTr_45 )
    $intermediate $W[type_cast_545_wire] : $int<64>
    // curr_quotientx_x01x_xix_xi
    $W[curr_quotientx_x01x_xix_xi_542] : $int<64>
    // 		iNsTr_44 := (shifted_divisorx_x02x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 230
    // iNsTr_44
    $W[iNsTr_44_555] : $int<64>
    // 		iNsTr_45 := (curr_quotientx_x01x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 231
    // iNsTr_45
    $W[iNsTr_45_561] : $int<64>
    // 		iNsTr_46 := (iNsTr_44 < iNsTr_36)
    //  file prog.linked.opt.aa, line 232
    // iNsTr_46
    $W[iNsTr_46_566] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 233
    // merge-statement  
    //  file prog.linked.opt.aa, line 238
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<64>) iNsTr_45 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 239
    // ($cast ($uint<64>) iNsTr_45 )
    $intermediate $W[type_cast_577_wire] : $int<64>
    // xx_xlcssa1
    $W[xx_xlcssa1_574] : $int<64>
    // 			$phi xx_xlcssa := 			  ($cast ($uint<64>) iNsTr_44 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 240
    // ($cast ($uint<64>) iNsTr_44 )
    $intermediate $W[type_cast_581_wire] : $int<64>
    // xx_xlcssa
    $W[xx_xlcssa_578] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 243
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 244
    // ($cast ($uint<64>) xx_xlcssa )
    $intermediate $W[type_cast_591_wire] : $int<64>
    // shifted_divisorx_x0x_xlcssax_xix_xi
    $W[shifted_divisorx_x0x_xlcssax_xix_xi_585] : $int<64>
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 245
    // ($cast ($uint<64>) xx_xlcssa1 )
    $intermediate $W[type_cast_598_wire] : $int<64>
    // curr_quotientx_x0x_xlcssax_xix_xi
    $W[curr_quotientx_x0x_xlcssax_xix_xi_592] : $int<64>
    // 		iNsTr_40 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x04x_xix_xi)
    //  file prog.linked.opt.aa, line 247
    // iNsTr_40
    $W[iNsTr_40_604] : $int<64>
    // 		iNsTr_41 := (xx_x05x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    //  file prog.linked.opt.aa, line 248
    // iNsTr_41
    $W[iNsTr_41_609] : $int<64>
    // 		iNsTr_42 := (iNsTr_41 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
    //  file prog.linked.opt.aa, line 249
    // iNsTr_42
    $W[iNsTr_42_615] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 250
    // merge-statement  
    //  file prog.linked.opt.aa, line 255
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<64>) iNsTr_40 ) $on xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 256
    // ($cast ($uint<64>) iNsTr_40 )
    $intermediate $W[type_cast_626_wire] : $int<64>
    // xx_xlcssa2
    $W[xx_xlcssa2_623] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 259
    // 			$phi quotientx_x1x_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_divideSignedx_xexit			  ($cast ($uint<64>) xx_xlcssa2 ) $on divideSignedx_xexitx_xloopexit_divideSignedx_xexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 260
    // ($cast ($uint<64>) xx_xlcssa2 )
    $intermediate $W[type_cast_636_wire] : $int<64>
    // quotientx_x1x_xix_xi
    $W[quotientx_x1x_xix_xi_630] : $int<64>
    // 		iNsTr_23 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - quotientx_x1x_xix_xi)
    //  file prog.linked.opt.aa, line 262
    // iNsTr_23
    $W[iNsTr_23_643] : $int<64>
    // 		iNsTr_24 := ( $mux iNsTr_20 iNsTr_23  quotientx_x1x_xix_xi ) 
    //  file prog.linked.opt.aa, line 263
    // iNsTr_24
    $W[iNsTr_24_649] : $int<64>
    // 		iNsTr_25 := (iNsTr_15 - iNsTr_24)
    //  file prog.linked.opt.aa, line 264
    // iNsTr_25
    $W[iNsTr_25_654] : $int<64>
    // 		iNsTr_26 := ($cast ($uint<32>) iNsTr_25 )
    //  file prog.linked.opt.aa, line 265
    // iNsTr_26
    $W[iNsTr_26_658] : $int<32>
    // 		->(iNsTr_8) := iNsTr_1
    //  file prog.linked.opt.aa, line 266
    // ->(iNsTr_8)
    $intermediate $W[ptr_deref_660_wire] : $int<32>
    $intermediate $W[ptr_deref_660_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_660_root_address] : $int<5>
    $W[ptr_deref_660_word_address_0] : $pointer<memory_space_6>
    $W[ptr_deref_660_data_0] : $int<32>
    // 		iNsTr_28 := (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 267
    // iNsTr_28
    $W[iNsTr_28_668] : $int<32>
    // 		iNsTr_29 := (iNsTr_28 == ($bitcast ($uint<32>) _b00000000000000000000000000011001  ))
    //  file prog.linked.opt.aa, line 268
    // iNsTr_29
    $W[iNsTr_29_674] : $int<1>
    // 		iNsTr_30 := ( $mux iNsTr_29 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_28 ) 
    //  file prog.linked.opt.aa, line 269
    // iNsTr_30
    $W[iNsTr_30_681] : $int<32>
    // 		HPbuff_ptr := iNsTr_30
    //  file prog.linked.opt.aa, line 270
    // HPbuff_ptr
    $constant $W[STORE_HPbuff_ptr_682_word_address_0] : $pointer<memory_space_7> := _b0
    $W[STORE_HPbuff_ptr_682_data_0] : $int<32>
    // 		HPout_pipe := iNsTr_26
    //  file prog.linked.opt.aa, line 271
    // HPout_pipe
    // datapath-instances for block %hpFilt%body
    //  file prog.linked.opt.aa, line 181
    // 		iNsTr_1 := LPout_pipe
    //  file prog.linked.opt.aa, line 183
    // LPout_pipe
    $ioport $in [RPIPE_LPout_pipe_383_inst] (LPout_pipe) (iNsTr_1_384) 
    // 		iNsTr_2 := HPbuff_ptr
    //  file prog.linked.opt.aa, line 184
    // HPbuff_ptr
    $load [LOAD_HPbuff_ptr_386_load_0] $from memory_space_7 (LOAD_HPbuff_ptr_386_word_address_0) (LOAD_HPbuff_ptr_386_data_0) 
    $delay LOAD_HPbuff_ptr_386_load_0 1
    &/ [LOAD_HPbuff_ptr_386_gather_scatter] (LOAD_HPbuff_ptr_386_data_0) (iNsTr_2_387) 
    // 		iNsTr_3 := (iNsTr_2 + ($bitcast ($uint<32>) _b11111111111111111111111111110100  ))
    //  file prog.linked.opt.aa, line 185
    // (iNsTr_2 + ($bitcast ($uint<32>) _b11111111111111111111111111110100  ))
    +[ADD_u32_u32_392_inst] (iNsTr_2_387 type_cast_391_wire_constant) (iNsTr_3_393) 
    $delay ADD_u32_u32_392_inst 1
    // 		iNsTr_4 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 186
    // ($bitcast ($int<32>) iNsTr_3 )
    $S:=$U [type_cast_396_inst] (iNsTr_3_393) (type_cast_396_wire)   $flowthrough
    $delay type_cast_396_inst 0
    // (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    $S<$S[SLT_i32_u1_400_inst] (type_cast_396_wire type_cast_399_wire_constant) (iNsTr_4_401) 
    $delay SLT_i32_u1_400_inst 1
    // 		iNsTr_5 := (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000001101  ))
    //  file prog.linked.opt.aa, line 187
    // (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000001101  ))
    +[ADD_u32_u32_406_inst] (iNsTr_2_387 type_cast_405_wire_constant) (iNsTr_5_407) 
    $delay ADD_u32_u32_406_inst 1
    // 		iNsTr_6 := ( $mux iNsTr_4 iNsTr_5  iNsTr_3 ) 
    //  file prog.linked.opt.aa, line 188
    // ( $mux iNsTr_4 iNsTr_5  iNsTr_3 ) 
    ? [MUX_412_inst] (iNsTr_4_401 iNsTr_5_407 iNsTr_3_393) (iNsTr_6_413) 
    // 		iNsTr_7 := HPy1
    //  file prog.linked.opt.aa, line 189
    // HPy1
    $load [LOAD_HPy1_415_load_0] $from memory_space_8 (LOAD_HPy1_415_word_address_0) (LOAD_HPy1_415_data_0) 
    $delay LOAD_HPy1_415_load_0 1
    &/ [LOAD_HPy1_415_gather_scatter] (LOAD_HPy1_415_data_0) (iNsTr_7_416) 
    // 		iNsTr_8 := @(HPbuff[iNsTr_2])
    //  file prog.linked.opt.aa, line 190
    &/ [array_obj_ref_419_index_0_resize] (iNsTr_2_387) (R_iNsTr_2_418_resized) 
    &/ [array_obj_ref_419_index_0_rename] (R_iNsTr_2_418_resized) (R_iNsTr_2_418_scaled) 
    &/ [array_obj_ref_419_index_offset] (R_iNsTr_2_418_scaled) (array_obj_ref_419_final_offset) 
    &/ [array_obj_ref_419_root_address_inst] (array_obj_ref_419_final_offset) (array_obj_ref_419_root_address) 
    # := [addr_of_420_final_reg] (array_obj_ref_419_root_address) (iNsTr_8_421) 
    // 		iNsTr_9 := ->(iNsTr_8)
    //  file prog.linked.opt.aa, line 191
    // ->(iNsTr_8)
    &/ [ptr_deref_424_base_resize] (iNsTr_8_421) (ptr_deref_424_resized_base_address) 
    &/ [ptr_deref_424_root_address_inst] (ptr_deref_424_resized_base_address) (ptr_deref_424_root_address) 
    &/ [ptr_deref_424_addr_0] (ptr_deref_424_root_address) (ptr_deref_424_word_address_0) 
    $load [ptr_deref_424_load_0] $from memory_space_6 (ptr_deref_424_word_address_0) (ptr_deref_424_data_0) 
    $delay ptr_deref_424_load_0 2
    &/ [ptr_deref_424_gather_scatter] (ptr_deref_424_data_0) (iNsTr_9_425) 
    // 		iNsTr_10 := (iNsTr_7 + iNsTr_1)
    //  file prog.linked.opt.aa, line 192
    // (iNsTr_7 + iNsTr_1)
    +[ADD_u32_u32_429_inst] (iNsTr_7_416 iNsTr_1_384) (iNsTr_10_430) 
    $delay ADD_u32_u32_429_inst 1
    // 		iNsTr_11 := (iNsTr_10 - iNsTr_9)
    //  file prog.linked.opt.aa, line 193
    // (iNsTr_10 - iNsTr_9)
    -[SUB_u32_u32_434_inst] (iNsTr_10_430 iNsTr_9_425) (iNsTr_11_435) 
    $delay SUB_u32_u32_434_inst 1
    // 		HPy1 := iNsTr_11
    //  file prog.linked.opt.aa, line 194
    // HPy1
    $store [STORE_HPy1_436_store_0] $to memory_space_8 (STORE_HPy1_436_word_address_0 STORE_HPy1_436_data_0) 
    $delay STORE_HPy1_436_store_0 1
    &/ [STORE_HPy1_436_gather_scatter] (iNsTr_11_435) (STORE_HPy1_436_data_0) 
    // 		iNsTr_13 := @(HPbuff[iNsTr_6])
    //  file prog.linked.opt.aa, line 195
    &/ [array_obj_ref_441_index_0_resize] (iNsTr_6_413) (R_iNsTr_6_440_resized) 
    &/ [array_obj_ref_441_index_0_rename] (R_iNsTr_6_440_resized) (R_iNsTr_6_440_scaled) 
    &/ [array_obj_ref_441_index_offset] (R_iNsTr_6_440_scaled) (array_obj_ref_441_final_offset) 
    &/ [array_obj_ref_441_root_address_inst] (array_obj_ref_441_final_offset) (array_obj_ref_441_root_address) 
    # := [addr_of_442_final_reg] (array_obj_ref_441_root_address) (iNsTr_13_443) 
    // 		iNsTr_14 := ->(iNsTr_13)
    //  file prog.linked.opt.aa, line 196
    // ->(iNsTr_13)
    &/ [ptr_deref_446_base_resize] (iNsTr_13_443) (ptr_deref_446_resized_base_address) 
    &/ [ptr_deref_446_root_address_inst] (ptr_deref_446_resized_base_address) (ptr_deref_446_root_address) 
    &/ [ptr_deref_446_addr_0] (ptr_deref_446_root_address) (ptr_deref_446_word_address_0) 
    $load [ptr_deref_446_load_0] $from memory_space_6 (ptr_deref_446_word_address_0) (ptr_deref_446_data_0) 
    $delay ptr_deref_446_load_0 2
    &/ [ptr_deref_446_gather_scatter] (ptr_deref_446_data_0) (iNsTr_14_447) 
    // 		iNsTr_15 := ($cast ($uint<64>) iNsTr_14 )
    //  file prog.linked.opt.aa, line 197
    // ($cast ($uint<64>) iNsTr_14 )
    # := [type_cast_450_inst] (iNsTr_14_447) (iNsTr_15_451) 
    $delay type_cast_450_inst 1
    // 		iNsTr_16 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_11 ) )
    //  file prog.linked.opt.aa, line 198
    // ($cast ($int<64>) iNsTr_11 )
    $S:=$U [type_cast_454_inst] (iNsTr_11_435) (type_cast_454_wire)  
    $delay type_cast_454_inst 1
    // ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_11 ) )
    # := [type_cast_455_inst] (type_cast_454_wire) (iNsTr_16_456) 
    $delay type_cast_455_inst 1
    // 		iNsTr_17 := (($bitcast ($int<32>) iNsTr_11 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 199
    // ($bitcast ($int<32>) iNsTr_11 )
    $S:=$U [type_cast_459_inst] (iNsTr_11_435) (type_cast_459_wire)   $flowthrough
    $delay type_cast_459_inst 0
    // (($bitcast ($int<32>) iNsTr_11 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    $S<$S[SLT_i32_u1_463_inst] (type_cast_459_wire type_cast_462_wire_constant) (iNsTr_17_464) 
    $delay SLT_i32_u1_463_inst 1
    // 		iNsTr_18 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - iNsTr_16)
    //  file prog.linked.opt.aa, line 200
    // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - iNsTr_16)
    -[SUB_u64_u64_469_inst] (type_cast_467_wire_constant iNsTr_16_456) (iNsTr_18_470) 
    $delay SUB_u64_u64_469_inst 1
    // 		iNsTr_19 := ( $mux iNsTr_17 iNsTr_18  iNsTr_16 ) 
    //  file prog.linked.opt.aa, line 201
    // ( $mux iNsTr_17 iNsTr_18  iNsTr_16 ) 
    ? [MUX_475_inst] (iNsTr_17_464 iNsTr_18_470 iNsTr_16_456) (iNsTr_19_476) 
    // 		iNsTr_20 := (($bitcast ($int<64>) iNsTr_19 ) < ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 202
    // ($bitcast ($int<64>) iNsTr_19 )
    $S:=$U [type_cast_479_inst] (iNsTr_19_476) (type_cast_479_wire)   $flowthrough
    $delay type_cast_479_inst 0
    // (($bitcast ($int<64>) iNsTr_19 ) < ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ))
    $S<$S[SLT_i64_u1_483_inst] (type_cast_479_wire type_cast_482_wire_constant) (iNsTr_20_484) 
    $delay SLT_i64_u1_483_inst 1
    // 		iNsTr_21 := (iNsTr_19 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
    //  file prog.linked.opt.aa, line 203
    // (iNsTr_19 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
    <[ULT_u64_u1_489_inst] (iNsTr_19_476 type_cast_488_wire_constant) (iNsTr_21_490) 
    $delay ULT_u64_u1_489_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 204
    ==0? [if_stmt_491_branch] (iNsTr_21_490)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 212
    // 			$phi xx_x05x_xix_xi := 			  ($cast ($uint<64>) iNsTr_41 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) iNsTr_19 ) $on bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 213
    // ($cast ($uint<64>) iNsTr_41 )
    # := [type_cast_503_inst] (iNsTr_41_609) (type_cast_503_wire) 
    $delay type_cast_503_inst 1
    // ($cast ($uint<64>) iNsTr_19 )
    # := [type_cast_505_inst] (iNsTr_19_476) (type_cast_505_wire) 
    $delay type_cast_505_inst 1
    $phi [phi_stmt_500] (type_cast_503_wire type_cast_505_wire) ( xx_x05x_xix_xi_500 )
    // 			$phi quotientx_x04x_xix_xi := 			  ($cast ($uint<64>) iNsTr_40 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 214
    // ($cast ($uint<64>) iNsTr_40 )
    # := [type_cast_509_inst] (iNsTr_40_604) (type_cast_509_wire) 
    $delay type_cast_509_inst 1
    $phi [phi_stmt_506] (type_cast_509_wire type_cast_512_wire_constant) ( quotientx_x04x_xix_xi_506 )
    // 		iNsTr_36 := (xx_x05x_xix_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 216
    // (xx_x05x_xix_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    >>[LSHR_u64_u64_518_inst] (xx_x05x_xix_xi_500 type_cast_517_wire_constant) (iNsTr_36_519) 
    $delay LSHR_u64_u64_518_inst 1
    // 		iNsTr_37 := (iNsTr_36 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
    //  file prog.linked.opt.aa, line 217
    // (iNsTr_36 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
    >[UGT_u64_u1_524_inst] (iNsTr_36_519 type_cast_523_wire_constant) (iNsTr_37_525) 
    $delay UGT_u64_u1_524_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 218
    ==0? [if_stmt_526_branch] (iNsTr_37_525)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 226
    // 			$phi shifted_divisorx_x02x_xix_xi := 			  ($cast ($uint<64>) iNsTr_44 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 227
    // ($cast ($uint<64>) iNsTr_44 )
    # := [type_cast_538_inst] (iNsTr_44_555) (type_cast_538_wire) 
    $delay type_cast_538_inst 1
    $phi [phi_stmt_535] (type_cast_538_wire type_cast_541_wire_constant) ( shifted_divisorx_x02x_xix_xi_535 )
    // 			$phi curr_quotientx_x01x_xix_xi := 			  ($cast ($uint<64>) iNsTr_45 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 228
    // ($cast ($uint<64>) iNsTr_45 )
    # := [type_cast_545_inst] (iNsTr_45_561) (type_cast_545_wire) 
    $delay type_cast_545_inst 1
    $phi [phi_stmt_542] (type_cast_545_wire type_cast_548_wire_constant) ( curr_quotientx_x01x_xix_xi_542 )
    // 		iNsTr_44 := (shifted_divisorx_x02x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 230
    // (shifted_divisorx_x02x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    <<[SHL_u64_u64_554_inst] (shifted_divisorx_x02x_xix_xi_535 type_cast_553_wire_constant) (iNsTr_44_555) 
    $delay SHL_u64_u64_554_inst 1
    // 		iNsTr_45 := (curr_quotientx_x01x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 231
    // (curr_quotientx_x01x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    <<[SHL_u64_u64_560_inst] (curr_quotientx_x01x_xix_xi_542 type_cast_559_wire_constant) (iNsTr_45_561) 
    $delay SHL_u64_u64_560_inst 1
    // 		iNsTr_46 := (iNsTr_44 < iNsTr_36)
    //  file prog.linked.opt.aa, line 232
    // (iNsTr_44 < iNsTr_36)
    <[ULT_u64_u1_565_inst] (iNsTr_44_555 iNsTr_36_519) (iNsTr_46_566) 
    $delay ULT_u64_u1_565_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 233
    ==0? [if_stmt_567_branch] (iNsTr_46_566)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 238
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<64>) iNsTr_45 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 239
    // ($cast ($uint<64>) iNsTr_45 )
    # := [type_cast_577_inst] (iNsTr_45_561) (type_cast_577_wire) 
    $delay type_cast_577_inst 1
    $phi [phi_stmt_574] (type_cast_577_wire) ( xx_xlcssa1_574 )
    // 			$phi xx_xlcssa := 			  ($cast ($uint<64>) iNsTr_44 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 240
    // ($cast ($uint<64>) iNsTr_44 )
    # := [type_cast_581_inst] (iNsTr_44_555) (type_cast_581_wire) 
    $delay type_cast_581_inst 1
    $phi [phi_stmt_578] (type_cast_581_wire) ( xx_xlcssa_578 )
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 243
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 244
    // ($cast ($uint<64>) xx_xlcssa )
    # := [type_cast_591_inst] (xx_xlcssa_578) (type_cast_591_wire) 
    $delay type_cast_591_inst 1
    $phi [phi_stmt_585] (type_cast_589_wire_constant type_cast_591_wire) ( shifted_divisorx_x0x_xlcssax_xix_xi_585 )
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 245
    // ($cast ($uint<64>) xx_xlcssa1 )
    # := [type_cast_598_inst] (xx_xlcssa1_574) (type_cast_598_wire) 
    $delay type_cast_598_inst 1
    $phi [phi_stmt_592] (type_cast_596_wire_constant type_cast_598_wire) ( curr_quotientx_x0x_xlcssax_xix_xi_592 )
    // 		iNsTr_40 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x04x_xix_xi)
    //  file prog.linked.opt.aa, line 247
    // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x04x_xix_xi)
    +[ADD_u64_u64_603_inst] (curr_quotientx_x0x_xlcssax_xix_xi_592 quotientx_x04x_xix_xi_506) (iNsTr_40_604) 
    $delay ADD_u64_u64_603_inst 1
    // 		iNsTr_41 := (xx_x05x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    //  file prog.linked.opt.aa, line 248
    // (xx_x05x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    -[SUB_u64_u64_608_inst] (xx_x05x_xix_xi_500 shifted_divisorx_x0x_xlcssax_xix_xi_585) (iNsTr_41_609) 
    $delay SUB_u64_u64_608_inst 1
    // 		iNsTr_42 := (iNsTr_41 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
    //  file prog.linked.opt.aa, line 249
    // (iNsTr_41 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
    <[ULT_u64_u1_614_inst] (iNsTr_41_609 type_cast_613_wire_constant) (iNsTr_42_615) 
    $delay ULT_u64_u1_614_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 250
    ==0? [if_stmt_616_branch] (iNsTr_42_615)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 255
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<64>) iNsTr_40 ) $on xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 256
    // ($cast ($uint<64>) iNsTr_40 )
    # := [type_cast_626_inst] (iNsTr_40_604) (type_cast_626_wire) 
    $delay type_cast_626_inst 1
    $phi [phi_stmt_623] (type_cast_626_wire) ( xx_xlcssa2_623 )
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 259
    // 			$phi quotientx_x1x_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_divideSignedx_xexit			  ($cast ($uint<64>) xx_xlcssa2 ) $on divideSignedx_xexitx_xloopexit_divideSignedx_xexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 260
    // ($cast ($uint<64>) xx_xlcssa2 )
    # := [type_cast_636_inst] (xx_xlcssa2_623) (type_cast_636_wire) 
    $delay type_cast_636_inst 1
    $phi [phi_stmt_630] (type_cast_634_wire_constant type_cast_636_wire) ( quotientx_x1x_xix_xi_630 )
    // 		iNsTr_23 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - quotientx_x1x_xix_xi)
    //  file prog.linked.opt.aa, line 262
    // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - quotientx_x1x_xix_xi)
    -[SUB_u64_u64_642_inst] (type_cast_640_wire_constant quotientx_x1x_xix_xi_630) (iNsTr_23_643) 
    $delay SUB_u64_u64_642_inst 1
    // 		iNsTr_24 := ( $mux iNsTr_20 iNsTr_23  quotientx_x1x_xix_xi ) 
    //  file prog.linked.opt.aa, line 263
    // ( $mux iNsTr_20 iNsTr_23  quotientx_x1x_xix_xi ) 
    ? [MUX_648_inst] (iNsTr_20_484 iNsTr_23_643 quotientx_x1x_xix_xi_630) (iNsTr_24_649) 
    // 		iNsTr_25 := (iNsTr_15 - iNsTr_24)
    //  file prog.linked.opt.aa, line 264
    // (iNsTr_15 - iNsTr_24)
    -[SUB_u64_u64_653_inst] (iNsTr_15_451 iNsTr_24_649) (iNsTr_25_654) 
    $delay SUB_u64_u64_653_inst 1
    // 		iNsTr_26 := ($cast ($uint<32>) iNsTr_25 )
    //  file prog.linked.opt.aa, line 265
    // ($cast ($uint<32>) iNsTr_25 )
    # := [type_cast_657_inst] (iNsTr_25_654) (iNsTr_26_658) 
    $delay type_cast_657_inst 1
    // 		->(iNsTr_8) := iNsTr_1
    //  file prog.linked.opt.aa, line 266
    // ->(iNsTr_8)
    &/ [ptr_deref_660_base_resize] (iNsTr_8_421) (ptr_deref_660_resized_base_address) 
    &/ [ptr_deref_660_root_address_inst] (ptr_deref_660_resized_base_address) (ptr_deref_660_root_address) 
    &/ [ptr_deref_660_addr_0] (ptr_deref_660_root_address) (ptr_deref_660_word_address_0) 
    $store [ptr_deref_660_store_0] $to memory_space_6 (ptr_deref_660_word_address_0 ptr_deref_660_data_0) 
    $delay ptr_deref_660_store_0 2
    &/ [ptr_deref_660_gather_scatter] (iNsTr_1_384) (ptr_deref_660_data_0) 
    // 		iNsTr_28 := (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 267
    // (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_667_inst] (iNsTr_2_387 type_cast_666_wire_constant) (iNsTr_28_668) 
    $delay ADD_u32_u32_667_inst 1
    // 		iNsTr_29 := (iNsTr_28 == ($bitcast ($uint<32>) _b00000000000000000000000000011001  ))
    //  file prog.linked.opt.aa, line 268
    // (iNsTr_28 == ($bitcast ($uint<32>) _b00000000000000000000000000011001  ))
    ==[EQ_u32_u1_673_inst] (iNsTr_28_668 type_cast_672_wire_constant) (iNsTr_29_674) 
    $delay EQ_u32_u1_673_inst 1
    // 		iNsTr_30 := ( $mux iNsTr_29 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_28 ) 
    //  file prog.linked.opt.aa, line 269
    // ( $mux iNsTr_29 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_28 ) 
    ? [MUX_680_inst] (iNsTr_29_674 type_cast_678_wire_constant iNsTr_28_668) (iNsTr_30_681) 
    // 		HPbuff_ptr := iNsTr_30
    //  file prog.linked.opt.aa, line 270
    // HPbuff_ptr
    $store [STORE_HPbuff_ptr_682_store_0] $to memory_space_7 (STORE_HPbuff_ptr_682_word_address_0 STORE_HPbuff_ptr_682_data_0) 
    $delay STORE_HPbuff_ptr_682_store_0 1
    &/ [STORE_HPbuff_ptr_682_gather_scatter] (iNsTr_30_681) (STORE_HPbuff_ptr_682_data_0) 
    // 		HPout_pipe := iNsTr_26
    //  file prog.linked.opt.aa, line 271
    // HPout_pipe
    $ioport $out [WPIPE_HPout_pipe_685_inst]  (iNsTr_26_658) (HPout_pipe) 
    $buffering $in WPIPE_HPout_pipe_685_inst iNsTr_26_658 1
  }
  // end data-path
  // 		iNsTr_1 := LPout_pipe
  //  file prog.linked.opt.aa, line 183
  // LPout_pipe
  RPIPE_LPout_pipe_383_inst <=> (branch_block_stmt_381/assign_stmt_384/RPIPE_LPout_pipe_383_Sample/rr branch_block_stmt_381/assign_stmt_384/RPIPE_LPout_pipe_383_Update/cr) (branch_block_stmt_381/assign_stmt_384/RPIPE_LPout_pipe_383_Sample/ra branch_block_stmt_381/assign_stmt_384/RPIPE_LPout_pipe_383_Update/ca)
  // 		iNsTr_2 := HPbuff_ptr
  //  file prog.linked.opt.aa, line 184
  // HPbuff_ptr
  LOAD_HPbuff_ptr_386_gather_scatter <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/LOAD_HPbuff_ptr_386_Update/LOAD_HPbuff_ptr_386_Merge/merge_req) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/LOAD_HPbuff_ptr_386_Update/LOAD_HPbuff_ptr_386_Merge/merge_ack)
  LOAD_HPbuff_ptr_386_load_0 <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/LOAD_HPbuff_ptr_386_Sample/word_access_start/word_0/rr branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/LOAD_HPbuff_ptr_386_Update/word_access_complete/word_0/cr) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/LOAD_HPbuff_ptr_386_Sample/word_access_start/word_0/ra branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/LOAD_HPbuff_ptr_386_Update/word_access_complete/word_0/ca)
  // 		iNsTr_3 := (iNsTr_2 + ($bitcast ($uint<32>) _b11111111111111111111111111110100  ))
  //  file prog.linked.opt.aa, line 185
  // (iNsTr_2 + ($bitcast ($uint<32>) _b11111111111111111111111111110100  ))
  ADD_u32_u32_392_inst <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ADD_u32_u32_392_Sample/rr branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ADD_u32_u32_392_Update/cr) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ADD_u32_u32_392_Sample/ra branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ADD_u32_u32_392_Update/ca)
  // 		iNsTr_4 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.linked.opt.aa, line 186
  // (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) iNsTr_3 )
  type_cast_396_inst <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/type_cast_396_Sample/rr branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/type_cast_396_Update/cr) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/type_cast_396_Sample/ra branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/type_cast_396_Update/ca)
  SLT_i32_u1_400_inst <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/SLT_i32_u1_400_Sample/rr branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/SLT_i32_u1_400_Update/cr) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/SLT_i32_u1_400_Sample/ra branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/SLT_i32_u1_400_Update/ca)
  // 		iNsTr_5 := (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000001101  ))
  //  file prog.linked.opt.aa, line 187
  // (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000001101  ))
  ADD_u32_u32_406_inst <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ADD_u32_u32_406_Sample/rr branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ADD_u32_u32_406_Update/cr) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ADD_u32_u32_406_Sample/ra branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ADD_u32_u32_406_Update/ca)
  // 		iNsTr_6 := ( $mux iNsTr_4 iNsTr_5  iNsTr_3 ) 
  //  file prog.linked.opt.aa, line 188
  // ( $mux iNsTr_4 iNsTr_5  iNsTr_3 ) 
  MUX_412_inst <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/MUX_412_start/req branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/MUX_412_complete/req) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/MUX_412_start/ack branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/MUX_412_complete/ack)
  // 		iNsTr_7 := HPy1
  //  file prog.linked.opt.aa, line 189
  // HPy1
  LOAD_HPy1_415_gather_scatter <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/LOAD_HPy1_415_Update/LOAD_HPy1_415_Merge/merge_req) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/LOAD_HPy1_415_Update/LOAD_HPy1_415_Merge/merge_ack)
  LOAD_HPy1_415_load_0 <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/LOAD_HPy1_415_Sample/word_access_start/word_0/rr branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/LOAD_HPy1_415_Update/word_access_complete/word_0/cr) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/LOAD_HPy1_415_Sample/word_access_start/word_0/ra branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/LOAD_HPy1_415_Update/word_access_complete/word_0/ca)
  // 		iNsTr_8 := @(HPbuff[iNsTr_2])
  //  file prog.linked.opt.aa, line 190
  array_obj_ref_419_index_0_resize <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/array_obj_ref_419_index_resize_0/index_resize_req) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/array_obj_ref_419_index_resize_0/index_resize_ack)
  array_obj_ref_419_index_0_rename <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/array_obj_ref_419_index_scale_0/scale_rename_req) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/array_obj_ref_419_index_scale_0/scale_rename_ack)
  array_obj_ref_419_index_offset <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/array_obj_ref_419_final_index_sum_regn/req) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/array_obj_ref_419_final_index_sum_regn/ack)
  array_obj_ref_419_root_address_inst <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/array_obj_ref_419_base_plus_offset/sum_rename_req) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/array_obj_ref_419_base_plus_offset/sum_rename_ack)
  addr_of_420_final_reg <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/addr_of_420_request/req branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/addr_of_420_complete/req) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/addr_of_420_request/ack branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/addr_of_420_complete/ack)
  // 		iNsTr_9 := ->(iNsTr_8)
  //  file prog.linked.opt.aa, line 191
  ptr_deref_424_base_resize <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ptr_deref_424_base_addr_resize/base_resize_req) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ptr_deref_424_base_addr_resize/base_resize_ack)
  ptr_deref_424_root_address_inst <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ptr_deref_424_base_plus_offset/sum_rename_req) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ptr_deref_424_base_plus_offset/sum_rename_ack)
  ptr_deref_424_addr_0 <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ptr_deref_424_word_addrgen/root_register_req) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ptr_deref_424_word_addrgen/root_register_ack)
  ptr_deref_424_gather_scatter <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ptr_deref_424_Update/ptr_deref_424_Merge/merge_req) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ptr_deref_424_Update/ptr_deref_424_Merge/merge_ack)
  ptr_deref_424_load_0 <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ptr_deref_424_Sample/word_access_start/word_0/rr branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ptr_deref_424_Update/word_access_complete/word_0/cr) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ptr_deref_424_Sample/word_access_start/word_0/ra branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ptr_deref_424_Update/word_access_complete/word_0/ca)
  // 		iNsTr_10 := (iNsTr_7 + iNsTr_1)
  //  file prog.linked.opt.aa, line 192
  // (iNsTr_7 + iNsTr_1)
  ADD_u32_u32_429_inst <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ADD_u32_u32_429_Sample/rr branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ADD_u32_u32_429_Update/cr) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ADD_u32_u32_429_Sample/ra branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ADD_u32_u32_429_Update/ca)
  // 		iNsTr_11 := (iNsTr_10 - iNsTr_9)
  //  file prog.linked.opt.aa, line 193
  // (iNsTr_10 - iNsTr_9)
  SUB_u32_u32_434_inst <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/SUB_u32_u32_434_Sample/rr branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/SUB_u32_u32_434_Update/cr) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/SUB_u32_u32_434_Sample/ra branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/SUB_u32_u32_434_Update/ca)
  // 		HPy1 := iNsTr_11
  //  file prog.linked.opt.aa, line 194
  // HPy1
  STORE_HPy1_436_gather_scatter <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/STORE_HPy1_436_Sample/STORE_HPy1_436_Split/split_req) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/STORE_HPy1_436_Sample/STORE_HPy1_436_Split/split_ack)
  STORE_HPy1_436_store_0 <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/STORE_HPy1_436_Sample/word_access_start/word_0/rr branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/STORE_HPy1_436_Update/word_access_complete/word_0/cr) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/STORE_HPy1_436_Sample/word_access_start/word_0/ra branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/STORE_HPy1_436_Update/word_access_complete/word_0/ca)
  // 		iNsTr_13 := @(HPbuff[iNsTr_6])
  //  file prog.linked.opt.aa, line 195
  array_obj_ref_441_index_0_resize <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/array_obj_ref_441_index_resize_0/index_resize_req) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/array_obj_ref_441_index_resize_0/index_resize_ack)
  array_obj_ref_441_index_0_rename <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/array_obj_ref_441_index_scale_0/scale_rename_req) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/array_obj_ref_441_index_scale_0/scale_rename_ack)
  array_obj_ref_441_index_offset <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/array_obj_ref_441_final_index_sum_regn/req) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/array_obj_ref_441_final_index_sum_regn/ack)
  array_obj_ref_441_root_address_inst <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/array_obj_ref_441_base_plus_offset/sum_rename_req) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/array_obj_ref_441_base_plus_offset/sum_rename_ack)
  addr_of_442_final_reg <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/addr_of_442_request/req branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/addr_of_442_complete/req) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/addr_of_442_request/ack branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/addr_of_442_complete/ack)
  // 		iNsTr_14 := ->(iNsTr_13)
  //  file prog.linked.opt.aa, line 196
  ptr_deref_446_base_resize <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ptr_deref_446_base_addr_resize/base_resize_req) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ptr_deref_446_base_addr_resize/base_resize_ack)
  ptr_deref_446_root_address_inst <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ptr_deref_446_base_plus_offset/sum_rename_req) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ptr_deref_446_base_plus_offset/sum_rename_ack)
  ptr_deref_446_addr_0 <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ptr_deref_446_word_addrgen/root_register_req) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ptr_deref_446_word_addrgen/root_register_ack)
  ptr_deref_446_gather_scatter <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ptr_deref_446_Update/ptr_deref_446_Merge/merge_req) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ptr_deref_446_Update/ptr_deref_446_Merge/merge_ack)
  ptr_deref_446_load_0 <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ptr_deref_446_Sample/word_access_start/word_0/rr branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ptr_deref_446_Update/word_access_complete/word_0/cr) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ptr_deref_446_Sample/word_access_start/word_0/ra branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ptr_deref_446_Update/word_access_complete/word_0/ca)
  // 		iNsTr_15 := ($cast ($uint<64>) iNsTr_14 )
  //  file prog.linked.opt.aa, line 197
  // ($cast ($uint<64>) iNsTr_14 )
  type_cast_450_inst <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/type_cast_450_Sample/rr branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/type_cast_450_Update/cr) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/type_cast_450_Sample/ra branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/type_cast_450_Update/ca)
  // 		iNsTr_16 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_11 ) )
  //  file prog.linked.opt.aa, line 198
  // ($cast ($int<64>) iNsTr_11 )
  type_cast_454_inst <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/type_cast_454_Sample/rr branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/type_cast_454_Update/cr) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/type_cast_454_Sample/ra branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/type_cast_454_Update/ca)
  // ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_11 ) )
  type_cast_455_inst <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/type_cast_455_Sample/rr branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/type_cast_455_Update/cr) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/type_cast_455_Sample/ra branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/type_cast_455_Update/ca)
  // 		iNsTr_17 := (($bitcast ($int<32>) iNsTr_11 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.linked.opt.aa, line 199
  // (($bitcast ($int<32>) iNsTr_11 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) iNsTr_11 )
  type_cast_459_inst <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/type_cast_459_Sample/rr branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/type_cast_459_Update/cr) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/type_cast_459_Sample/ra branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/type_cast_459_Update/ca)
  SLT_i32_u1_463_inst <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/SLT_i32_u1_463_Sample/rr branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/SLT_i32_u1_463_Update/cr) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/SLT_i32_u1_463_Sample/ra branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/SLT_i32_u1_463_Update/ca)
  // 		iNsTr_18 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - iNsTr_16)
  //  file prog.linked.opt.aa, line 200
  // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - iNsTr_16)
  SUB_u64_u64_469_inst <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/SUB_u64_u64_469_Sample/rr branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/SUB_u64_u64_469_Update/cr) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/SUB_u64_u64_469_Sample/ra branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/SUB_u64_u64_469_Update/ca)
  // 		iNsTr_19 := ( $mux iNsTr_17 iNsTr_18  iNsTr_16 ) 
  //  file prog.linked.opt.aa, line 201
  // ( $mux iNsTr_17 iNsTr_18  iNsTr_16 ) 
  MUX_475_inst <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/MUX_475_start/req branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/MUX_475_complete/req) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/MUX_475_start/ack branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/MUX_475_complete/ack)
  // 		iNsTr_20 := (($bitcast ($int<64>) iNsTr_19 ) < ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ))
  //  file prog.linked.opt.aa, line 202
  // (($bitcast ($int<64>) iNsTr_19 ) < ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ))
  // ($bitcast ($int<64>) iNsTr_19 )
  type_cast_479_inst <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/type_cast_479_Sample/rr branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/type_cast_479_Update/cr) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/type_cast_479_Sample/ra branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/type_cast_479_Update/ca)
  SLT_i64_u1_483_inst <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/SLT_i64_u1_483_Sample/rr branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/SLT_i64_u1_483_Update/cr) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/SLT_i64_u1_483_Sample/ra branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/SLT_i64_u1_483_Update/ca)
  // 		iNsTr_21 := (iNsTr_19 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
  //  file prog.linked.opt.aa, line 203
  // (iNsTr_19 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
  ULT_u64_u1_489_inst <=> (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ULT_u64_u1_489_Sample/rr branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ULT_u64_u1_489_Update/cr) (branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ULT_u64_u1_489_Sample/ra branch_block_stmt_381/assign_stmt_387_to_assign_stmt_490/ULT_u64_u1_489_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 204
  if_stmt_491_branch <=> (branch_block_stmt_381/if_stmt_491_eval_test/branch_req) (branch_block_stmt_381/if_stmt_491_else_link/else_choice_transition branch_block_stmt_381/if_stmt_491_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 209
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 212
  // ($cast ($uint<64>) iNsTr_41 )
  type_cast_503_inst <=> (branch_block_stmt_381/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_500/phi_stmt_500_sources/type_cast_503/SplitProtocol/Sample/rr branch_block_stmt_381/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_500/phi_stmt_500_sources/type_cast_503/SplitProtocol/Update/cr) (branch_block_stmt_381/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_500/phi_stmt_500_sources/type_cast_503/SplitProtocol/Sample/ra branch_block_stmt_381/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_500/phi_stmt_500_sources/type_cast_503/SplitProtocol/Update/ca)
  // ($cast ($uint<64>) iNsTr_19 )
  type_cast_505_inst <=> (branch_block_stmt_381/bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_500/phi_stmt_500_sources/type_cast_505/SplitProtocol/Sample/rr branch_block_stmt_381/bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_500/phi_stmt_500_sources/type_cast_505/SplitProtocol/Update/cr) (branch_block_stmt_381/bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_500/phi_stmt_500_sources/type_cast_505/SplitProtocol/Sample/ra branch_block_stmt_381/bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_500/phi_stmt_500_sources/type_cast_505/SplitProtocol/Update/ca)
  phi_stmt_500 <=> (branch_block_stmt_381/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_500/phi_stmt_500_req branch_block_stmt_381/bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_500/phi_stmt_500_req) (branch_block_stmt_381/merge_stmt_499_PhiAck/phi_stmt_500_ack)
  // ($cast ($uint<64>) iNsTr_40 )
  type_cast_509_inst <=> (branch_block_stmt_381/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_506/phi_stmt_506_sources/type_cast_509/SplitProtocol/Sample/rr branch_block_stmt_381/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_506/phi_stmt_506_sources/type_cast_509/SplitProtocol/Update/cr) (branch_block_stmt_381/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_506/phi_stmt_506_sources/type_cast_509/SplitProtocol/Sample/ra branch_block_stmt_381/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_506/phi_stmt_506_sources/type_cast_509/SplitProtocol/Update/ca)
  phi_stmt_506 <=> (branch_block_stmt_381/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_506/phi_stmt_506_req branch_block_stmt_381/bbx_xnph6x_xix_xix_xpreheader_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_506/phi_stmt_506_req) (branch_block_stmt_381/merge_stmt_499_PhiAck/phi_stmt_506_ack)
  // 		iNsTr_36 := (xx_x05x_xix_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 216
  // (xx_x05x_xix_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  LSHR_u64_u64_518_inst <=> (branch_block_stmt_381/assign_stmt_519_to_assign_stmt_525/LSHR_u64_u64_518_Sample/rr branch_block_stmt_381/assign_stmt_519_to_assign_stmt_525/LSHR_u64_u64_518_Update/cr) (branch_block_stmt_381/assign_stmt_519_to_assign_stmt_525/LSHR_u64_u64_518_Sample/ra branch_block_stmt_381/assign_stmt_519_to_assign_stmt_525/LSHR_u64_u64_518_Update/ca)
  // 		iNsTr_37 := (iNsTr_36 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
  //  file prog.linked.opt.aa, line 217
  // (iNsTr_36 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
  UGT_u64_u1_524_inst <=> (branch_block_stmt_381/assign_stmt_519_to_assign_stmt_525/UGT_u64_u1_524_Sample/rr branch_block_stmt_381/assign_stmt_519_to_assign_stmt_525/UGT_u64_u1_524_Update/cr) (branch_block_stmt_381/assign_stmt_519_to_assign_stmt_525/UGT_u64_u1_524_Sample/ra branch_block_stmt_381/assign_stmt_519_to_assign_stmt_525/UGT_u64_u1_524_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 218
  if_stmt_526_branch <=> (branch_block_stmt_381/if_stmt_526_eval_test/branch_req) (branch_block_stmt_381/if_stmt_526_else_link/else_choice_transition branch_block_stmt_381/if_stmt_526_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 223
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 226
  // ($cast ($uint<64>) iNsTr_44 )
  type_cast_538_inst <=> (branch_block_stmt_381/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_535/phi_stmt_535_sources/type_cast_538/SplitProtocol/Sample/rr branch_block_stmt_381/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_535/phi_stmt_535_sources/type_cast_538/SplitProtocol/Update/cr) (branch_block_stmt_381/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_535/phi_stmt_535_sources/type_cast_538/SplitProtocol/Sample/ra branch_block_stmt_381/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_535/phi_stmt_535_sources/type_cast_538/SplitProtocol/Update/ca)
  phi_stmt_535 <=> (branch_block_stmt_381/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_535/phi_stmt_535_req branch_block_stmt_381/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_535/phi_stmt_535_req) (branch_block_stmt_381/merge_stmt_534_PhiAck/phi_stmt_535_ack)
  // ($cast ($uint<64>) iNsTr_45 )
  type_cast_545_inst <=> (branch_block_stmt_381/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_542/phi_stmt_542_sources/type_cast_545/SplitProtocol/Sample/rr branch_block_stmt_381/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_542/phi_stmt_542_sources/type_cast_545/SplitProtocol/Update/cr) (branch_block_stmt_381/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_542/phi_stmt_542_sources/type_cast_545/SplitProtocol/Sample/ra branch_block_stmt_381/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_542/phi_stmt_542_sources/type_cast_545/SplitProtocol/Update/ca)
  phi_stmt_542 <=> (branch_block_stmt_381/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_542/phi_stmt_542_req branch_block_stmt_381/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_542/phi_stmt_542_req) (branch_block_stmt_381/merge_stmt_534_PhiAck/phi_stmt_542_ack)
  // 		iNsTr_44 := (shifted_divisorx_x02x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 230
  // (shifted_divisorx_x02x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  SHL_u64_u64_554_inst <=> (branch_block_stmt_381/assign_stmt_555_to_assign_stmt_566/SHL_u64_u64_554_Sample/rr branch_block_stmt_381/assign_stmt_555_to_assign_stmt_566/SHL_u64_u64_554_Update/cr) (branch_block_stmt_381/assign_stmt_555_to_assign_stmt_566/SHL_u64_u64_554_Sample/ra branch_block_stmt_381/assign_stmt_555_to_assign_stmt_566/SHL_u64_u64_554_Update/ca)
  // 		iNsTr_45 := (curr_quotientx_x01x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 231
  // (curr_quotientx_x01x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  SHL_u64_u64_560_inst <=> (branch_block_stmt_381/assign_stmt_555_to_assign_stmt_566/SHL_u64_u64_560_Sample/rr branch_block_stmt_381/assign_stmt_555_to_assign_stmt_566/SHL_u64_u64_560_Update/cr) (branch_block_stmt_381/assign_stmt_555_to_assign_stmt_566/SHL_u64_u64_560_Sample/ra branch_block_stmt_381/assign_stmt_555_to_assign_stmt_566/SHL_u64_u64_560_Update/ca)
  // 		iNsTr_46 := (iNsTr_44 < iNsTr_36)
  //  file prog.linked.opt.aa, line 232
  // (iNsTr_44 < iNsTr_36)
  ULT_u64_u1_565_inst <=> (branch_block_stmt_381/assign_stmt_555_to_assign_stmt_566/ULT_u64_u1_565_Sample/rr branch_block_stmt_381/assign_stmt_555_to_assign_stmt_566/ULT_u64_u1_565_Update/cr) (branch_block_stmt_381/assign_stmt_555_to_assign_stmt_566/ULT_u64_u1_565_Sample/ra branch_block_stmt_381/assign_stmt_555_to_assign_stmt_566/ULT_u64_u1_565_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 233
  if_stmt_567_branch <=> (branch_block_stmt_381/if_stmt_567_eval_test/branch_req) (branch_block_stmt_381/if_stmt_567_else_link/else_choice_transition branch_block_stmt_381/if_stmt_567_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 238
  // ($cast ($uint<64>) iNsTr_45 )
  type_cast_577_inst <=> (branch_block_stmt_381/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_574/phi_stmt_574_sources/type_cast_577/SplitProtocol/Sample/rr branch_block_stmt_381/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_574/phi_stmt_574_sources/type_cast_577/SplitProtocol/Update/cr) (branch_block_stmt_381/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_574/phi_stmt_574_sources/type_cast_577/SplitProtocol/Sample/ra branch_block_stmt_381/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_574/phi_stmt_574_sources/type_cast_577/SplitProtocol/Update/ca)
  phi_stmt_574 <=> (branch_block_stmt_381/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_574/phi_stmt_574_req) (branch_block_stmt_381/merge_stmt_573_PhiAck/phi_stmt_574_ack)
  // ($cast ($uint<64>) iNsTr_44 )
  type_cast_581_inst <=> (branch_block_stmt_381/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_578/phi_stmt_578_sources/type_cast_581/SplitProtocol/Sample/rr branch_block_stmt_381/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_578/phi_stmt_578_sources/type_cast_581/SplitProtocol/Update/cr) (branch_block_stmt_381/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_578/phi_stmt_578_sources/type_cast_581/SplitProtocol/Sample/ra branch_block_stmt_381/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_578/phi_stmt_578_sources/type_cast_581/SplitProtocol/Update/ca)
  phi_stmt_578 <=> (branch_block_stmt_381/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_578/phi_stmt_578_req) (branch_block_stmt_381/merge_stmt_573_PhiAck/phi_stmt_578_ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 243
  // ($cast ($uint<64>) xx_xlcssa )
  type_cast_591_inst <=> (branch_block_stmt_381/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_585/phi_stmt_585_sources/type_cast_591/SplitProtocol/Sample/rr branch_block_stmt_381/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_585/phi_stmt_585_sources/type_cast_591/SplitProtocol/Update/cr) (branch_block_stmt_381/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_585/phi_stmt_585_sources/type_cast_591/SplitProtocol/Sample/ra branch_block_stmt_381/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_585/phi_stmt_585_sources/type_cast_591/SplitProtocol/Update/ca)
  phi_stmt_585 <=> (branch_block_stmt_381/bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_585/phi_stmt_585_req branch_block_stmt_381/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_585/phi_stmt_585_req) (branch_block_stmt_381/merge_stmt_584_PhiAck/phi_stmt_585_ack)
  // ($cast ($uint<64>) xx_xlcssa1 )
  type_cast_598_inst <=> (branch_block_stmt_381/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_592/phi_stmt_592_sources/type_cast_598/SplitProtocol/Sample/rr branch_block_stmt_381/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_592/phi_stmt_592_sources/type_cast_598/SplitProtocol/Update/cr) (branch_block_stmt_381/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_592/phi_stmt_592_sources/type_cast_598/SplitProtocol/Sample/ra branch_block_stmt_381/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_592/phi_stmt_592_sources/type_cast_598/SplitProtocol/Update/ca)
  phi_stmt_592 <=> (branch_block_stmt_381/bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_592/phi_stmt_592_req branch_block_stmt_381/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_592/phi_stmt_592_req) (branch_block_stmt_381/merge_stmt_584_PhiAck/phi_stmt_592_ack)
  // 		iNsTr_40 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x04x_xix_xi)
  //  file prog.linked.opt.aa, line 247
  // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x04x_xix_xi)
  ADD_u64_u64_603_inst <=> (branch_block_stmt_381/assign_stmt_604_to_assign_stmt_615/ADD_u64_u64_603_Sample/rr branch_block_stmt_381/assign_stmt_604_to_assign_stmt_615/ADD_u64_u64_603_Update/cr) (branch_block_stmt_381/assign_stmt_604_to_assign_stmt_615/ADD_u64_u64_603_Sample/ra branch_block_stmt_381/assign_stmt_604_to_assign_stmt_615/ADD_u64_u64_603_Update/ca)
  // 		iNsTr_41 := (xx_x05x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
  //  file prog.linked.opt.aa, line 248
  // (xx_x05x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
  SUB_u64_u64_608_inst <=> (branch_block_stmt_381/assign_stmt_604_to_assign_stmt_615/SUB_u64_u64_608_Sample/rr branch_block_stmt_381/assign_stmt_604_to_assign_stmt_615/SUB_u64_u64_608_Update/cr) (branch_block_stmt_381/assign_stmt_604_to_assign_stmt_615/SUB_u64_u64_608_Sample/ra branch_block_stmt_381/assign_stmt_604_to_assign_stmt_615/SUB_u64_u64_608_Update/ca)
  // 		iNsTr_42 := (iNsTr_41 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
  //  file prog.linked.opt.aa, line 249
  // (iNsTr_41 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011001  ))
  ULT_u64_u1_614_inst <=> (branch_block_stmt_381/assign_stmt_604_to_assign_stmt_615/ULT_u64_u1_614_Sample/rr branch_block_stmt_381/assign_stmt_604_to_assign_stmt_615/ULT_u64_u1_614_Update/cr) (branch_block_stmt_381/assign_stmt_604_to_assign_stmt_615/ULT_u64_u1_614_Sample/ra branch_block_stmt_381/assign_stmt_604_to_assign_stmt_615/ULT_u64_u1_614_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 250
  if_stmt_616_branch <=> (branch_block_stmt_381/if_stmt_616_eval_test/branch_req) (branch_block_stmt_381/if_stmt_616_else_link/else_choice_transition branch_block_stmt_381/if_stmt_616_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 255
  // ($cast ($uint<64>) iNsTr_40 )
  type_cast_626_inst <=> (branch_block_stmt_381/xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit_PhiReq/phi_stmt_623/phi_stmt_623_sources/type_cast_626/SplitProtocol/Sample/rr branch_block_stmt_381/xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit_PhiReq/phi_stmt_623/phi_stmt_623_sources/type_cast_626/SplitProtocol/Update/cr) (branch_block_stmt_381/xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit_PhiReq/phi_stmt_623/phi_stmt_623_sources/type_cast_626/SplitProtocol/Sample/ra branch_block_stmt_381/xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit_PhiReq/phi_stmt_623/phi_stmt_623_sources/type_cast_626/SplitProtocol/Update/ca)
  phi_stmt_623 <=> (branch_block_stmt_381/xx_x_crit_edgex_xix_xi_divideSignedx_xexitx_xloopexit_PhiReq/phi_stmt_623/phi_stmt_623_req) (branch_block_stmt_381/merge_stmt_622_PhiAck/phi_stmt_623_ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 259
  // ($cast ($uint<64>) xx_xlcssa2 )
  type_cast_636_inst <=> (branch_block_stmt_381/divideSignedx_xexitx_xloopexit_divideSignedx_xexit_PhiReq/phi_stmt_630/phi_stmt_630_sources/type_cast_636/SplitProtocol/Sample/rr branch_block_stmt_381/divideSignedx_xexitx_xloopexit_divideSignedx_xexit_PhiReq/phi_stmt_630/phi_stmt_630_sources/type_cast_636/SplitProtocol/Update/cr) (branch_block_stmt_381/divideSignedx_xexitx_xloopexit_divideSignedx_xexit_PhiReq/phi_stmt_630/phi_stmt_630_sources/type_cast_636/SplitProtocol/Sample/ra branch_block_stmt_381/divideSignedx_xexitx_xloopexit_divideSignedx_xexit_PhiReq/phi_stmt_630/phi_stmt_630_sources/type_cast_636/SplitProtocol/Update/ca)
  phi_stmt_630 <=> (branch_block_stmt_381/bb_0_divideSignedx_xexit_PhiReq/phi_stmt_630/phi_stmt_630_req branch_block_stmt_381/divideSignedx_xexitx_xloopexit_divideSignedx_xexit_PhiReq/phi_stmt_630/phi_stmt_630_req) (branch_block_stmt_381/merge_stmt_629_PhiAck/phi_stmt_630_ack)
  // 		iNsTr_23 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - quotientx_x1x_xix_xi)
  //  file prog.linked.opt.aa, line 262
  // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - quotientx_x1x_xix_xi)
  SUB_u64_u64_642_inst <=> (branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/SUB_u64_u64_642_Sample/rr branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/SUB_u64_u64_642_Update/cr) (branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/SUB_u64_u64_642_Sample/ra branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/SUB_u64_u64_642_Update/ca)
  // 		iNsTr_24 := ( $mux iNsTr_20 iNsTr_23  quotientx_x1x_xix_xi ) 
  //  file prog.linked.opt.aa, line 263
  // ( $mux iNsTr_20 iNsTr_23  quotientx_x1x_xix_xi ) 
  MUX_648_inst <=> (branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/MUX_648_start/req branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/MUX_648_complete/req) (branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/MUX_648_start/ack branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/MUX_648_complete/ack)
  // 		iNsTr_25 := (iNsTr_15 - iNsTr_24)
  //  file prog.linked.opt.aa, line 264
  // (iNsTr_15 - iNsTr_24)
  SUB_u64_u64_653_inst <=> (branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/SUB_u64_u64_653_Sample/rr branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/SUB_u64_u64_653_Update/cr) (branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/SUB_u64_u64_653_Sample/ra branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/SUB_u64_u64_653_Update/ca)
  // 		iNsTr_26 := ($cast ($uint<32>) iNsTr_25 )
  //  file prog.linked.opt.aa, line 265
  // ($cast ($uint<32>) iNsTr_25 )
  type_cast_657_inst <=> (branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/type_cast_657_Sample/rr branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/type_cast_657_Update/cr) (branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/type_cast_657_Sample/ra branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/type_cast_657_Update/ca)
  // 		->(iNsTr_8) := iNsTr_1
  //  file prog.linked.opt.aa, line 266
  ptr_deref_660_base_resize <=> (branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/ptr_deref_660_base_addr_resize/base_resize_req) (branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/ptr_deref_660_base_addr_resize/base_resize_ack)
  ptr_deref_660_root_address_inst <=> (branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/ptr_deref_660_base_plus_offset/sum_rename_req) (branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/ptr_deref_660_base_plus_offset/sum_rename_ack)
  ptr_deref_660_addr_0 <=> (branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/ptr_deref_660_word_addrgen/root_register_req) (branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/ptr_deref_660_word_addrgen/root_register_ack)
  ptr_deref_660_gather_scatter <=> (branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/ptr_deref_660_Sample/ptr_deref_660_Split/split_req) (branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/ptr_deref_660_Sample/ptr_deref_660_Split/split_ack)
  ptr_deref_660_store_0 <=> (branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/ptr_deref_660_Sample/word_access_start/word_0/rr branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/ptr_deref_660_Update/word_access_complete/word_0/cr) (branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/ptr_deref_660_Sample/word_access_start/word_0/ra branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/ptr_deref_660_Update/word_access_complete/word_0/ca)
  // 		iNsTr_28 := (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 267
  // (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_667_inst <=> (branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/ADD_u32_u32_667_Sample/rr branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/ADD_u32_u32_667_Update/cr) (branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/ADD_u32_u32_667_Sample/ra branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/ADD_u32_u32_667_Update/ca)
  // 		iNsTr_29 := (iNsTr_28 == ($bitcast ($uint<32>) _b00000000000000000000000000011001  ))
  //  file prog.linked.opt.aa, line 268
  // (iNsTr_28 == ($bitcast ($uint<32>) _b00000000000000000000000000011001  ))
  EQ_u32_u1_673_inst <=> (branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/EQ_u32_u1_673_Sample/rr branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/EQ_u32_u1_673_Update/cr) (branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/EQ_u32_u1_673_Sample/ra branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/EQ_u32_u1_673_Update/ca)
  // 		iNsTr_30 := ( $mux iNsTr_29 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_28 ) 
  //  file prog.linked.opt.aa, line 269
  // ( $mux iNsTr_29 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_28 ) 
  MUX_680_inst <=> (branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/MUX_680_start/req branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/MUX_680_complete/req) (branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/MUX_680_start/ack branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/MUX_680_complete/ack)
  // 		HPbuff_ptr := iNsTr_30
  //  file prog.linked.opt.aa, line 270
  // HPbuff_ptr
  STORE_HPbuff_ptr_682_gather_scatter <=> (branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/STORE_HPbuff_ptr_682_Sample/STORE_HPbuff_ptr_682_Split/split_req) (branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/STORE_HPbuff_ptr_682_Sample/STORE_HPbuff_ptr_682_Split/split_ack)
  STORE_HPbuff_ptr_682_store_0 <=> (branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/STORE_HPbuff_ptr_682_Sample/word_access_start/word_0/rr branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/STORE_HPbuff_ptr_682_Update/word_access_complete/word_0/cr) (branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/STORE_HPbuff_ptr_682_Sample/word_access_start/word_0/ra branch_block_stmt_381/assign_stmt_643_to_assign_stmt_684/STORE_HPbuff_ptr_682_Update/word_access_complete/word_0/ca)
  // 		HPout_pipe := iNsTr_26
  //  file prog.linked.opt.aa, line 271
  // HPout_pipe
  WPIPE_HPout_pipe_685_inst <=> (branch_block_stmt_381/assign_stmt_687/WPIPE_HPout_pipe_685_Sample/req branch_block_stmt_381/assign_stmt_687/WPIPE_HPout_pipe_685_Update/req) (branch_block_stmt_381/assign_stmt_687/WPIPE_HPout_pipe_685_Sample/ack branch_block_stmt_381/assign_stmt_687/WPIPE_HPout_pipe_685_Update/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 273
}
$module [QRSFilt] 
{
  $in initialize:$int<8>
  // can point into 
  // pipe-declarations for block %QRSFilt
  //  file prog.linked.opt.aa, line 277
  // pipe-declarations for block %QRSFilt%body
  //  file prog.linked.opt.aa, line 282
  // pipe-declarations for block %QRSFilt%body%
  //  file prog.linked.opt.aa, line 290
  // pipe-declarations for block %QRSFilt%body%
  //  file prog.linked.opt.aa, line 293
  // pipe-declarations for block %QRSFilt%body%
  //  file prog.linked.opt.aa, line 306
  // pipe-declarations for block %QRSFilt%body%
  //  file prog.linked.opt.aa, line 309
  // pipe-declarations for block %QRSFilt%body%
  //  file prog.linked.opt.aa, line 322
  // pipe-declarations for block %QRSFilt%body%
  //  file prog.linked.opt.aa, line 325
  // pipe-declarations for block %QRSFilt%body%
  //  file prog.linked.opt.aa, line 338
  // pipe-declarations for block %QRSFilt%body%
  //  file prog.linked.opt.aa, line 349
  // pipe-declarations for block %QRSFilt%body%
  //  file prog.linked.opt.aa, line 381
  // pipe-declarations for block %QRSFilt%body%
  //  file prog.linked.opt.aa, line 389
  // pipe-declarations for block %QRSFilt%body%
  //  file prog.linked.opt.aa, line 393
  // pipe-declarations for block %QRSFilt%body%
  //  file prog.linked.opt.aa, line 404
  // pipe-declarations for block %QRSFilt%body%
  //  file prog.linked.opt.aa, line 407
  // pipe-declarations for block %QRSFilt%body%
  //  file prog.linked.opt.aa, line 419
  // pipe-declarations for block %QRSFilt%body%
  //  file prog.linked.opt.aa, line 424
  // pipe-declarations for block %QRSFilt%body%
  //  file prog.linked.opt.aa, line 436
  // pipe-declarations for block %QRSFilt%body%
  //  file prog.linked.opt.aa, line 441
  // pipe-declarations for block %QRSFilt%body%
  //  file prog.linked.opt.aa, line 451
  // pipe-declarations for block %QRSFilt%body%
  //  file prog.linked.opt.aa, line 454
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_694] // Branch Block  file prog.linked.opt.aa, line 282
    {
      $P [branch_block_stmt_694__entry__]
      branch_block_stmt_694__entry__ <-| ($entry)
      $P [branch_block_stmt_694__exit__]
      branch_block_stmt_694__exit__ |-> ($exit)
      $P [assign_stmt_700__entry__] 
      $P [assign_stmt_700__exit__] 
      $P [if_stmt_701__entry__] 
      $P [if_stmt_701__exit__] 
      $P [merge_stmt_707__entry__] 
      $P [merge_stmt_707__exit__] 
      $P [xx_xpreheaderx_xpreheader_xx_xpreheader]
      $P [merge_stmt_709__exit__] 
      $P [do_while_stmt_716__entry__] 
      $P [do_while_stmt_716__exit__] 
      $P [xx_xpreheader_bbx_xnph4x_xix_xpreheader]
      $P [merge_stmt_750__exit__] 
      $P [bbx_xnph4x_xix_xpreheader_bbx_xnph4x_xi]
      $P [merge_stmt_752__exit__] 
      $P [do_while_stmt_759__entry__] 
      $P [do_while_stmt_759__exit__] 
      $P [bbx_xnph4x_xi_bbx_xnphx_xix_xpreheader]
      $P [merge_stmt_793__exit__] 
      $P [bbx_xnphx_xix_xpreheader_bbx_xnphx_xi]
      $P [merge_stmt_795__exit__] 
      $P [do_while_stmt_802__entry__] 
      $P [do_while_stmt_802__exit__] 
      $P [bbx_xnphx_xi_initFiltx_xexit]
      $P [merge_stmt_836__exit__] 
      $P [assign_stmt_840_to_assign_stmt_868__entry__] 
      $P [assign_stmt_840_to_assign_stmt_868__exit__] 
      $P [initFiltx_xexit_UnifiedReturnBlock]
      $P [merge_stmt_870__exit__] 
      $P [call_stmt_871__entry__] 
      $P [call_stmt_871__exit__] 
      $P [call_stmt_872__entry__] 
      $P [call_stmt_872__exit__] 
      $P [assign_stmt_875__entry__] 
      $P [assign_stmt_875__exit__] 
      $P [assign_stmt_878_to_assign_stmt_938__entry__] 
      $P [assign_stmt_878_to_assign_stmt_938__exit__] 
      $P [assign_stmt_941__entry__] 
      $P [assign_stmt_941__exit__] 
      $P [assign_stmt_944__entry__] 
      $P [assign_stmt_944__exit__] 
      $P [assign_stmt_947_to_assign_stmt_980__entry__] 
      $P [assign_stmt_947_to_assign_stmt_980__exit__] 
      $P [if_stmt_981__entry__] 
      $P [if_stmt_981__exit__] 
      $P [merge_stmt_987__entry__] 
      $P [merge_stmt_987__exit__] 
      $P [assign_stmt_993__entry__] 
      $P [assign_stmt_993__exit__] 
      $P [if_stmt_994__entry__] 
      $P [if_stmt_994__exit__] 
      $P [merge_stmt_1000__entry__] 
      $P [merge_stmt_1000__exit__] 
      $P [assign_stmt_1005__entry__] 
      $P [assign_stmt_1005__exit__] 
      $P [bbx_xnph6x_xix_xpreheaderx_xi_bbx_xnph6x_xix_xi]
      $P [merge_stmt_1007__exit__] 
      $P [assign_stmt_1027_to_assign_stmt_1033__entry__] 
      $P [assign_stmt_1027_to_assign_stmt_1033__exit__] 
      $P [if_stmt_1034__entry__] 
      $P [if_stmt_1034__exit__] 
      $P [merge_stmt_1040__entry__] 
      $P [merge_stmt_1040__exit__] 
      $P [bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi]
      $P [merge_stmt_1042__exit__] 
      $P [assign_stmt_1063_to_assign_stmt_1074__entry__] 
      $P [assign_stmt_1063_to_assign_stmt_1074__exit__] 
      $P [if_stmt_1075__entry__] 
      $P [if_stmt_1075__exit__] 
      $P [merge_stmt_1081__entry__] 
      $P [merge_stmt_1081__exit__] 
      $P [xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi]
      $P [merge_stmt_1092__exit__] 
      $P [assign_stmt_1112_to_assign_stmt_1123__entry__] 
      $P [assign_stmt_1112_to_assign_stmt_1123__exit__] 
      $P [if_stmt_1124__entry__] 
      $P [if_stmt_1124__exit__] 
      $P [merge_stmt_1130__entry__] 
      $P [merge_stmt_1130__exit__] 
      $P [assign_stmt_1139__entry__] 
      $P [assign_stmt_1139__exit__] 
      $P [divideUnsignedx_xexitx_xloopexitx_xi_mvWinx_xexit]
      $P [merge_stmt_1141__exit__] 
      $P [assign_stmt_1156_to_assign_stmt_1178__entry__] 
      $P [assign_stmt_1156_to_assign_stmt_1178__exit__] 
      $P [assign_stmt_1181__entry__] 
      $P [assign_stmt_1181__exit__] 
      $P [mvWinx_xexit_UnifiedReturnBlock]
      $P [merge_stmt_1183__exit__] 
      $P [return__]
      $P [merge_stmt_1185__exit__] 
      ::[assign_stmt_700] 
      {
        // 		iNsTr_0 := (initialize == ($bitcast ($uint<8>) _b00000000  ))
        //  file prog.linked.opt.aa, line 284
        // Source expression
        // (initialize == ($bitcast ($uint<8>) _b00000000  ))
        $T[EQ_u8_u1_699_sample_start_] 
        $T[EQ_u8_u1_699_sample_completed_] 
        $T[EQ_u8_u1_699_update_start_] 
        $T[EQ_u8_u1_699_update_completed_] 
        // initialize
        $T[R_initialize_696_sample_start_] 
        $T[R_initialize_696_sample_completed_] 
        $T[R_initialize_696_update_start_] 
        $T[R_initialize_696_update_completed_] 
        // reference to interface object
        R_initialize_696_sample_start_ <-& ($entry)
        R_initialize_696_sample_completed_ <-& (R_initialize_696_sample_start_)
        R_initialize_696_update_start_ <-& (R_initialize_696_sample_completed_)
        R_initialize_696_update_completed_ <-& (R_initialize_696_update_start_)
        EQ_u8_u1_699_sample_start_ <-& (R_initialize_696_update_completed_)
        ;;[EQ_u8_u1_699_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u8_u1_699_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u8_u1_699_sample_start_ &-> (EQ_u8_u1_699_Sample)
        EQ_u8_u1_699_sample_completed_ <-& (EQ_u8_u1_699_Sample)
        EQ_u8_u1_699_sample_completed_ &-> ($null)
        EQ_u8_u1_699_update_start_ &-> (EQ_u8_u1_699_Update)
        EQ_u8_u1_699_update_completed_ <-& (EQ_u8_u1_699_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_700__entry__ |-> (assign_stmt_700)
      assign_stmt_700__exit__ <-| (assign_stmt_700)
      // if-statement  
      //  file prog.linked.opt.aa, line 285
      ;;[if_stmt_701_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_701__entry__ |-> (if_stmt_701_dead_link)
      if_stmt_701__exit__ <-| (if_stmt_701_dead_link)
      ;;[if_stmt_701_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_701__entry__ |-> (if_stmt_701_eval_test)
      $P [R_iNsTr_0_702_place]
      R_iNsTr_0_702_place <-| (if_stmt_701_eval_test)
      ;;[if_stmt_701_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_701_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_0_702_place |-> (if_stmt_701_if_link if_stmt_701_else_link)
      $P [bb_0_bb_8]
      bb_0_bb_8 <-| (if_stmt_701_if_link)
      $P [bb_0_xx_xpreheaderx_xpreheader]
      bb_0_xx_xpreheaderx_xpreheader <-| (if_stmt_701_else_link)
      // do-while-statement  
      //  file prog.linked.opt.aa, line 296
      <o> [do_while_stmt_716]  $depth 7 $buffering 2 
      {
        $P[do_while_stmt_716__entry__] 
        $P[do_while_stmt_716__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_716_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          // (pipelined) PHI statement phi_stmt_718
          // 			$phi indexx_x05x_xi := 			  ($cast ($uint<32>) iNsTr_42 ) $on $loopback			  indexx_x05x_xi_at_entry $on $entry // type of target is $uint<32>
          $T[phi_stmt_718_loopback_trigger] 
          $T[phi_stmt_718_loopback_sample_req_from_phi_seq] 
          $T[phi_stmt_718_loopback_sample_req] 
          phi_stmt_718_loopback_trigger <-& (back_edge_to_loop_body)
          phi_stmt_718_loopback_sample_req <-& (phi_stmt_718_loopback_sample_req_from_phi_seq)
          $T[phi_stmt_718_entry_trigger] 
          $T[phi_stmt_718_entry_sample_req_from_phi_seq] 
          $T[phi_stmt_718_entry_sample_req] 
          phi_stmt_718_entry_trigger <-& (first_time_through_loop_body)
          phi_stmt_718_entry_sample_req <-& (phi_stmt_718_entry_sample_req_from_phi_seq)
          $T[phi_stmt_718_sample_start_] 
          $T[phi_stmt_718_sample_completed_] 
          $T[phi_stmt_718_update_start_] 
          $T[phi_stmt_718_update_completed_] 
          phi_stmt_718_update_start_ o<-& (phi_stmt_718_update_completed_ 0)
          phi_stmt_718_sample_start_ o<-& (phi_stmt_718_sample_completed_ 1)
          $T[phi_stmt_718_merged_reqs] 
          $transitionmerge [phi_stmt_718_req_merge] (phi_stmt_718_entry_sample_req phi_stmt_718_loopback_sample_req) (phi_stmt_718_merged_reqs)
          phi_stmt_718_merged_reqs &-> ($null)
          // ($cast ($uint<32>) iNsTr_42 )
          $T[type_cast_721_sample_start_] 
          $T[type_cast_721_sample_completed_] 
          $T[type_cast_721_update_start_] 
          $T[type_cast_721_update_completed_] 
          // iNsTr_42
          $T[R_iNsTr_42_720_sample_start_] 
          $T[R_iNsTr_42_720_sample_completed_] 
          $T[R_iNsTr_42_720_update_start_] 
          $T[R_iNsTr_42_720_update_completed_] 
          // implicit reference
          R_iNsTr_42_720_sample_start_ <-& ($entry)
          R_iNsTr_42_720_sample_completed_ <-& (R_iNsTr_42_720_sample_start_)
          R_iNsTr_42_720_update_start_ <-& (R_iNsTr_42_720_sample_completed_)
          R_iNsTr_42_720_update_completed_ <-& (R_iNsTr_42_720_update_start_)
          type_cast_721_sample_start_ <-& (R_iNsTr_42_720_update_completed_)
          ;;[type_cast_721_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_721_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_721_sample_start_ &-> (type_cast_721_Sample)
          type_cast_721_sample_completed_ <-& (type_cast_721_Sample)
          type_cast_721_sample_completed_ &-> ($null)
          type_cast_721_update_start_ &-> (type_cast_721_Update)
          type_cast_721_update_completed_ <-& (type_cast_721_Update)
          // RAW reenables for iNsTr_42
          R_iNsTr_42_720_update_start_ o<-& (type_cast_721_sample_completed_ 1)
          // self-release: 
          type_cast_721_sample_start_ o<-& (type_cast_721_sample_completed_ 1)
          type_cast_721_update_start_ o<-& (type_cast_721_update_completed_ 0)
          phi_stmt_718_sample_start_ <-& (type_cast_721_update_completed_)
          // RAW reenables for ($cast ($uint<32>) iNsTr_42 )
          type_cast_721_update_start_ o<-& (phi_stmt_718_sample_completed_ 0)
          // indexx_x05x_xi_at_entry
          $T[R_indexx_x05x_xi_at_entry_722_sample_start_] 
          $T[R_indexx_x05x_xi_at_entry_722_sample_completed_] 
          $T[R_indexx_x05x_xi_at_entry_722_update_start_] 
          $T[R_indexx_x05x_xi_at_entry_722_update_completed_] 
          // implicit reference
          R_indexx_x05x_xi_at_entry_722_sample_start_ <-& ($entry)
          R_indexx_x05x_xi_at_entry_722_sample_completed_ <-& (R_indexx_x05x_xi_at_entry_722_sample_start_)
          R_indexx_x05x_xi_at_entry_722_update_start_ <-& (R_indexx_x05x_xi_at_entry_722_sample_completed_)
          R_indexx_x05x_xi_at_entry_722_update_completed_ <-& (R_indexx_x05x_xi_at_entry_722_update_start_)
          phi_stmt_718_sample_start_ <-& (R_indexx_x05x_xi_at_entry_722_update_completed_)
          // RAW reenables for indexx_x05x_xi_at_entry
          R_indexx_x05x_xi_at_entry_722_update_start_ o<-& (phi_stmt_718_sample_completed_ 1)
          $T[phi_stmt_718_phi_sequencer_done] 
          phi_stmt_718_phi_sequencer_done &-> ($null)
          $phisequencer [ phi_stmt_718_phi_seq] ( phi_stmt_718_loopback_trigger phi_stmt_718_entry_trigger  : phi_stmt_718_sample_start_ : phi_stmt_718_sample_completed_ ) ( phi_stmt_718_loopback_sample_req_from_phi_seq phi_stmt_718_entry_sample_req_from_phi_seq  : phi_stmt_718_phi_sequencer_done ) 
          condition_evaluated <-& (phi_stmt_718_sample_completed_)
          // 			scevgep10x_xi := @(LPbuff[indexx_x05x_xi])
          //  file prog.linked.opt.aa, line 300
          // Source expression
          // @(LPbuff[indexx_x05x_xi])
          $T[addr_of_727_sample_start_] 
          $T[addr_of_727_sample_completed_] 
          $T[addr_of_727_update_start_] 
          $T[addr_of_727_update_completed_] 
          $T[array_obj_ref_726_root_address_calculated] 
          $T[array_obj_ref_726_offset_calculated] 
          $T[array_obj_ref_726_index_resized_0] 
          $T[array_obj_ref_726_index_scaled_0] 
          // indexx_x05x_xi
          $T[R_indexx_x05x_xi_725_sample_start_] 
          $T[R_indexx_x05x_xi_725_sample_completed_] 
          $T[R_indexx_x05x_xi_725_update_start_] 
          $T[R_indexx_x05x_xi_725_update_completed_] 
          // implicit reference
          R_indexx_x05x_xi_725_sample_start_ <-& (phi_stmt_718_update_completed_)
          R_indexx_x05x_xi_725_sample_completed_ <-& (R_indexx_x05x_xi_725_sample_start_)
          R_indexx_x05x_xi_725_update_start_ <-& (R_indexx_x05x_xi_725_sample_completed_)
          R_indexx_x05x_xi_725_update_completed_ <-& (R_indexx_x05x_xi_725_update_start_)
          ;;[array_obj_ref_726_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          R_indexx_x05x_xi_725_update_completed_ &-> (array_obj_ref_726_index_resize_0)
          array_obj_ref_726_index_resized_0 <-& (array_obj_ref_726_index_resize_0)
          ;;[array_obj_ref_726_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_726_index_resized_0 &-> (array_obj_ref_726_index_scale_0)
          array_obj_ref_726_index_scaled_0 <-& (array_obj_ref_726_index_scale_0)
          ;;[array_obj_ref_726_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_726_index_scaled_0 &-> (array_obj_ref_726_final_index_sum_regn)
          array_obj_ref_726_offset_calculated <-& (array_obj_ref_726_final_index_sum_regn)
          ;;[array_obj_ref_726_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_726_offset_calculated &-> (array_obj_ref_726_base_plus_offset)
          array_obj_ref_726_root_address_calculated <-& (array_obj_ref_726_base_plus_offset)
          ;;[addr_of_727_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_727_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_727_sample_start_ <-& (array_obj_ref_726_root_address_calculated)
          addr_of_727_sample_start_ &-> (addr_of_727_request)
          addr_of_727_sample_completed_ <-& (addr_of_727_request)
          addr_of_727_update_start_ &-> (addr_of_727_complete)
          addr_of_727_update_completed_ <-& (addr_of_727_complete)
          // reenables .
          phi_stmt_718_update_start_ o<-& (addr_of_727_sample_completed_ 0)
          // self-release 
          addr_of_727_sample_start_ o<-& (addr_of_727_sample_completed_ 1)
          addr_of_727_update_start_ o<-& (addr_of_727_update_completed_ 0)
          // Target expression
          // (as target) scevgep10x_xi
          // scevgep10x_xi
          // implicit reference
          // 			->(scevgep10x_xi) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
          //  file prog.linked.opt.aa, line 301
          // Target expression
          // ->(scevgep10x_xi)
          $T[ptr_deref_730_sample_start_] 
          $T[ptr_deref_730_sample_completed_] 
          $T[ptr_deref_730_update_start_] 
          $T[ptr_deref_730_update_completed_] 
          $T[ptr_deref_730_base_address_calculated] 
          // scevgep10x_xi
          $T[R_scevgep10x_xi_729_sample_start_] 
          $T[R_scevgep10x_xi_729_sample_completed_] 
          $T[R_scevgep10x_xi_729_update_start_] 
          $T[R_scevgep10x_xi_729_update_completed_] 
          // implicit reference
          R_scevgep10x_xi_729_sample_start_ <-& (addr_of_727_update_completed_)
          R_scevgep10x_xi_729_sample_completed_ <-& (R_scevgep10x_xi_729_sample_start_)
          R_scevgep10x_xi_729_update_start_ <-& (R_scevgep10x_xi_729_sample_completed_)
          R_scevgep10x_xi_729_update_completed_ <-& (R_scevgep10x_xi_729_update_start_)
          $T[ptr_deref_730_word_address_calculated] 
          $T[ptr_deref_730_root_address_calculated] 
          $T[ptr_deref_730_base_address_resized] 
          ;;[ptr_deref_730_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_730_base_address_calculated &-> (ptr_deref_730_base_addr_resize)
          ptr_deref_730_base_address_resized <-& (ptr_deref_730_base_addr_resize)
          ;;[ptr_deref_730_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_730_base_address_resized &-> (ptr_deref_730_base_plus_offset)
          ptr_deref_730_root_address_calculated <-& (ptr_deref_730_base_plus_offset)
          ;;[ptr_deref_730_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_730_root_address_calculated &-> (ptr_deref_730_word_addrgen)
          ptr_deref_730_word_address_calculated <-& (ptr_deref_730_word_addrgen)
          ;;[ptr_deref_730_Sample] 
          {
            ;;[ptr_deref_730_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_730_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          ptr_deref_730_sample_start_ <-& (ptr_deref_730_word_address_calculated)
          // reenable-joins
          addr_of_727_update_start_ o<-& (ptr_deref_730_sample_completed_ 0)
          ptr_deref_730_sample_start_ &-> (ptr_deref_730_Sample)
          ptr_deref_730_sample_completed_ <-& (ptr_deref_730_Sample)
          ptr_deref_730_sample_completed_ &-> ($null)
          ptr_deref_730_update_start_ &-> (ptr_deref_730_Update)
          ptr_deref_730_update_completed_ <-& (ptr_deref_730_Update)
          ptr_deref_730_base_address_calculated <-& (R_scevgep10x_xi_729_update_completed_)
          ptr_deref_730_sample_start_ <-& (ptr_deref_730_base_address_calculated)
          // RAW reenables for scevgep10x_xi
          addr_of_727_update_start_ o<-& (ptr_deref_730_sample_completed_ 0)
          // self-release: 
          ptr_deref_730_sample_start_ o<-& (ptr_deref_730_sample_completed_ 1)
          ptr_deref_730_update_start_ o<-& (ptr_deref_730_update_completed_ 0)
          // 			iNsTr_42 := (indexx_x05x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          //  file prog.linked.opt.aa, line 302
          // Source expression
          // (indexx_x05x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          $T[ADD_u32_u32_738_sample_start_] 
          $T[ADD_u32_u32_738_sample_completed_] 
          $T[ADD_u32_u32_738_update_start_] 
          $T[ADD_u32_u32_738_update_completed_] 
          // indexx_x05x_xi
          $T[R_indexx_x05x_xi_735_sample_start_] 
          $T[R_indexx_x05x_xi_735_sample_completed_] 
          $T[R_indexx_x05x_xi_735_update_start_] 
          $T[R_indexx_x05x_xi_735_update_completed_] 
          // implicit reference
          R_indexx_x05x_xi_735_sample_start_ <-& (phi_stmt_718_update_completed_)
          R_indexx_x05x_xi_735_sample_completed_ <-& (R_indexx_x05x_xi_735_sample_start_)
          R_indexx_x05x_xi_735_update_start_ <-& (R_indexx_x05x_xi_735_sample_completed_)
          R_indexx_x05x_xi_735_update_completed_ <-& (R_indexx_x05x_xi_735_update_start_)
          ADD_u32_u32_738_sample_start_ <-& (R_indexx_x05x_xi_735_update_completed_)
          ;;[ADD_u32_u32_738_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u32_u32_738_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u32_u32_738_sample_start_ &-> (ADD_u32_u32_738_Sample)
          ADD_u32_u32_738_sample_completed_ <-& (ADD_u32_u32_738_Sample)
          ADD_u32_u32_738_sample_completed_ &-> ($null)
          ADD_u32_u32_738_update_start_ &-> (ADD_u32_u32_738_Update)
          ADD_u32_u32_738_update_completed_ <-& (ADD_u32_u32_738_Update)
          // RAW reenables for indexx_x05x_xi
          phi_stmt_718_update_start_ o<-& (ADD_u32_u32_738_sample_completed_ 0)
          // self-release: 
          ADD_u32_u32_738_sample_start_ o<-& (ADD_u32_u32_738_sample_completed_ 1)
          ADD_u32_u32_738_update_start_ o<-& (ADD_u32_u32_738_update_completed_ 0)
          // Target expression
          // (as target) iNsTr_42
          // iNsTr_42
          // implicit reference
          // WAR dependency: Read: iNsTr_42 before Write: 			iNsTr_42 := (indexx_x05x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          ADD_u32_u32_738_sample_start_ <-& (phi_stmt_718_sample_completed_)
          // WAR dependency: release  Read: iNsTr_42 with Write: 			iNsTr_42 := (indexx_x05x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          R_iNsTr_42_720_sample_start_ o<-& (ADD_u32_u32_738_update_completed_ 1)
          // 			exitcond2 := (iNsTr_42 == ($bitcast ($uint<32>) _b00000000000000000000000000001010  ))
          //  file prog.linked.opt.aa, line 303
          // Source expression
          // (iNsTr_42 == ($bitcast ($uint<32>) _b00000000000000000000000000001010  ))
          $T[EQ_u32_u1_744_sample_start_] 
          $T[EQ_u32_u1_744_sample_completed_] 
          $T[EQ_u32_u1_744_update_start_] 
          $T[EQ_u32_u1_744_update_completed_] 
          // iNsTr_42
          $T[R_iNsTr_42_741_sample_start_] 
          $T[R_iNsTr_42_741_sample_completed_] 
          $T[R_iNsTr_42_741_update_start_] 
          $T[R_iNsTr_42_741_update_completed_] 
          // implicit reference
          R_iNsTr_42_741_sample_start_ <-& (ADD_u32_u32_738_update_completed_)
          R_iNsTr_42_741_sample_completed_ <-& (R_iNsTr_42_741_sample_start_)
          R_iNsTr_42_741_update_start_ <-& (R_iNsTr_42_741_sample_completed_)
          R_iNsTr_42_741_update_completed_ <-& (R_iNsTr_42_741_update_start_)
          EQ_u32_u1_744_sample_start_ <-& (R_iNsTr_42_741_update_completed_)
          ;;[EQ_u32_u1_744_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[EQ_u32_u1_744_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          EQ_u32_u1_744_sample_start_ &-> (EQ_u32_u1_744_Sample)
          EQ_u32_u1_744_sample_completed_ <-& (EQ_u32_u1_744_Sample)
          EQ_u32_u1_744_sample_completed_ &-> ($null)
          EQ_u32_u1_744_update_start_ &-> (EQ_u32_u1_744_Update)
          EQ_u32_u1_744_update_completed_ <-& (EQ_u32_u1_744_Update)
          // RAW reenables for iNsTr_42
          ADD_u32_u32_738_update_start_ o<-& (EQ_u32_u1_744_sample_completed_ 0)
          // self-release: 
          EQ_u32_u1_744_sample_start_ o<-& (EQ_u32_u1_744_sample_completed_ 1)
          EQ_u32_u1_744_update_start_ o<-& (EQ_u32_u1_744_update_completed_ 0)
          // Target expression
          // (as target) exitcond2
          // exitcond2
          // implicit reference
          // ( ~ exitcond2 )
          $T[NOT_u1_u1_748_sample_start_] 
          $T[NOT_u1_u1_748_sample_completed_] 
          $T[NOT_u1_u1_748_update_start_] 
          $T[NOT_u1_u1_748_update_completed_] 
          // exitcond2
          $T[R_exitcond2_747_sample_start_] 
          $T[R_exitcond2_747_sample_completed_] 
          $T[R_exitcond2_747_update_start_] 
          $T[R_exitcond2_747_update_completed_] 
          // implicit reference
          R_exitcond2_747_sample_start_ <-& (EQ_u32_u1_744_update_completed_)
          R_exitcond2_747_sample_completed_ <-& (R_exitcond2_747_sample_start_)
          R_exitcond2_747_update_start_ <-& (R_exitcond2_747_sample_completed_)
          R_exitcond2_747_update_completed_ <-& (R_exitcond2_747_update_start_)
          NOT_u1_u1_748_sample_start_ <-& (R_exitcond2_747_update_completed_)
          ;;[NOT_u1_u1_748_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[NOT_u1_u1_748_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          NOT_u1_u1_748_sample_start_ &-> (NOT_u1_u1_748_Sample)
          NOT_u1_u1_748_sample_completed_ <-& (NOT_u1_u1_748_Sample)
          NOT_u1_u1_748_sample_completed_ &-> ($null)
          NOT_u1_u1_748_update_start_ &-> (NOT_u1_u1_748_Update)
          NOT_u1_u1_748_update_completed_ <-& (NOT_u1_u1_748_Update)
          // flow-through
          NOT_u1_u1_748_update_start_ <-& (NOT_u1_u1_748_sample_completed_)
          NOT_u1_u1_748_update_completed_ &-> (condition_evaluated)
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // reenable across ring for memory space memory_space_9
          // leading and trailing sets are the same... no ring dependency
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_716__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_716_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_716__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_716_loop_body : condition_evaluated
        $bind do_while_stmt_716__entry__  => do_while_stmt_716_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_716_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_716__exit__)
      }
      do_while_stmt_716__entry__ |-> (do_while_stmt_716)
      do_while_stmt_716__exit__ <-| (do_while_stmt_716)
      // do-while-statement  
      //  file prog.linked.opt.aa, line 312
      <o> [do_while_stmt_759]  $depth 7 $buffering 2 
      {
        $P[do_while_stmt_759__entry__] 
        $P[do_while_stmt_759__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_759_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          // (pipelined) PHI statement phi_stmt_761
          // 			$phi indexx_x13x_xi := 			  ($cast ($uint<32>) iNsTr_53 ) $on $loopback			  indexx_x13x_xi_at_entry $on $entry // type of target is $uint<32>
          $T[phi_stmt_761_loopback_trigger] 
          $T[phi_stmt_761_loopback_sample_req_from_phi_seq] 
          $T[phi_stmt_761_loopback_sample_req] 
          phi_stmt_761_loopback_trigger <-& (back_edge_to_loop_body)
          phi_stmt_761_loopback_sample_req <-& (phi_stmt_761_loopback_sample_req_from_phi_seq)
          $T[phi_stmt_761_entry_trigger] 
          $T[phi_stmt_761_entry_sample_req_from_phi_seq] 
          $T[phi_stmt_761_entry_sample_req] 
          phi_stmt_761_entry_trigger <-& (first_time_through_loop_body)
          phi_stmt_761_entry_sample_req <-& (phi_stmt_761_entry_sample_req_from_phi_seq)
          $T[phi_stmt_761_sample_start_] 
          $T[phi_stmt_761_sample_completed_] 
          $T[phi_stmt_761_update_start_] 
          $T[phi_stmt_761_update_completed_] 
          phi_stmt_761_update_start_ o<-& (phi_stmt_761_update_completed_ 0)
          phi_stmt_761_sample_start_ o<-& (phi_stmt_761_sample_completed_ 1)
          $T[phi_stmt_761_merged_reqs] 
          $transitionmerge [phi_stmt_761_req_merge] (phi_stmt_761_entry_sample_req phi_stmt_761_loopback_sample_req) (phi_stmt_761_merged_reqs)
          phi_stmt_761_merged_reqs &-> ($null)
          // ($cast ($uint<32>) iNsTr_53 )
          $T[type_cast_764_sample_start_] 
          $T[type_cast_764_sample_completed_] 
          $T[type_cast_764_update_start_] 
          $T[type_cast_764_update_completed_] 
          // iNsTr_53
          $T[R_iNsTr_53_763_sample_start_] 
          $T[R_iNsTr_53_763_sample_completed_] 
          $T[R_iNsTr_53_763_update_start_] 
          $T[R_iNsTr_53_763_update_completed_] 
          // implicit reference
          R_iNsTr_53_763_sample_start_ <-& ($entry)
          R_iNsTr_53_763_sample_completed_ <-& (R_iNsTr_53_763_sample_start_)
          R_iNsTr_53_763_update_start_ <-& (R_iNsTr_53_763_sample_completed_)
          R_iNsTr_53_763_update_completed_ <-& (R_iNsTr_53_763_update_start_)
          type_cast_764_sample_start_ <-& (R_iNsTr_53_763_update_completed_)
          ;;[type_cast_764_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_764_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_764_sample_start_ &-> (type_cast_764_Sample)
          type_cast_764_sample_completed_ <-& (type_cast_764_Sample)
          type_cast_764_sample_completed_ &-> ($null)
          type_cast_764_update_start_ &-> (type_cast_764_Update)
          type_cast_764_update_completed_ <-& (type_cast_764_Update)
          // RAW reenables for iNsTr_53
          R_iNsTr_53_763_update_start_ o<-& (type_cast_764_sample_completed_ 1)
          // self-release: 
          type_cast_764_sample_start_ o<-& (type_cast_764_sample_completed_ 1)
          type_cast_764_update_start_ o<-& (type_cast_764_update_completed_ 0)
          phi_stmt_761_sample_start_ <-& (type_cast_764_update_completed_)
          // RAW reenables for ($cast ($uint<32>) iNsTr_53 )
          type_cast_764_update_start_ o<-& (phi_stmt_761_sample_completed_ 0)
          // indexx_x13x_xi_at_entry
          $T[R_indexx_x13x_xi_at_entry_765_sample_start_] 
          $T[R_indexx_x13x_xi_at_entry_765_sample_completed_] 
          $T[R_indexx_x13x_xi_at_entry_765_update_start_] 
          $T[R_indexx_x13x_xi_at_entry_765_update_completed_] 
          // implicit reference
          R_indexx_x13x_xi_at_entry_765_sample_start_ <-& ($entry)
          R_indexx_x13x_xi_at_entry_765_sample_completed_ <-& (R_indexx_x13x_xi_at_entry_765_sample_start_)
          R_indexx_x13x_xi_at_entry_765_update_start_ <-& (R_indexx_x13x_xi_at_entry_765_sample_completed_)
          R_indexx_x13x_xi_at_entry_765_update_completed_ <-& (R_indexx_x13x_xi_at_entry_765_update_start_)
          phi_stmt_761_sample_start_ <-& (R_indexx_x13x_xi_at_entry_765_update_completed_)
          // RAW reenables for indexx_x13x_xi_at_entry
          R_indexx_x13x_xi_at_entry_765_update_start_ o<-& (phi_stmt_761_sample_completed_ 1)
          $T[phi_stmt_761_phi_sequencer_done] 
          phi_stmt_761_phi_sequencer_done &-> ($null)
          $phisequencer [ phi_stmt_761_phi_seq] ( phi_stmt_761_loopback_trigger phi_stmt_761_entry_trigger  : phi_stmt_761_sample_start_ : phi_stmt_761_sample_completed_ ) ( phi_stmt_761_loopback_sample_req_from_phi_seq phi_stmt_761_entry_sample_req_from_phi_seq  : phi_stmt_761_phi_sequencer_done ) 
          condition_evaluated <-& (phi_stmt_761_sample_completed_)
          // 			scevgep8x_xi := @(HPbuff[indexx_x13x_xi])
          //  file prog.linked.opt.aa, line 316
          // Source expression
          // @(HPbuff[indexx_x13x_xi])
          $T[addr_of_770_sample_start_] 
          $T[addr_of_770_sample_completed_] 
          $T[addr_of_770_update_start_] 
          $T[addr_of_770_update_completed_] 
          $T[array_obj_ref_769_root_address_calculated] 
          $T[array_obj_ref_769_offset_calculated] 
          $T[array_obj_ref_769_index_resized_0] 
          $T[array_obj_ref_769_index_scaled_0] 
          // indexx_x13x_xi
          $T[R_indexx_x13x_xi_768_sample_start_] 
          $T[R_indexx_x13x_xi_768_sample_completed_] 
          $T[R_indexx_x13x_xi_768_update_start_] 
          $T[R_indexx_x13x_xi_768_update_completed_] 
          // implicit reference
          R_indexx_x13x_xi_768_sample_start_ <-& (phi_stmt_761_update_completed_)
          R_indexx_x13x_xi_768_sample_completed_ <-& (R_indexx_x13x_xi_768_sample_start_)
          R_indexx_x13x_xi_768_update_start_ <-& (R_indexx_x13x_xi_768_sample_completed_)
          R_indexx_x13x_xi_768_update_completed_ <-& (R_indexx_x13x_xi_768_update_start_)
          ;;[array_obj_ref_769_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          R_indexx_x13x_xi_768_update_completed_ &-> (array_obj_ref_769_index_resize_0)
          array_obj_ref_769_index_resized_0 <-& (array_obj_ref_769_index_resize_0)
          ;;[array_obj_ref_769_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_769_index_resized_0 &-> (array_obj_ref_769_index_scale_0)
          array_obj_ref_769_index_scaled_0 <-& (array_obj_ref_769_index_scale_0)
          ;;[array_obj_ref_769_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_769_index_scaled_0 &-> (array_obj_ref_769_final_index_sum_regn)
          array_obj_ref_769_offset_calculated <-& (array_obj_ref_769_final_index_sum_regn)
          ;;[array_obj_ref_769_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_769_offset_calculated &-> (array_obj_ref_769_base_plus_offset)
          array_obj_ref_769_root_address_calculated <-& (array_obj_ref_769_base_plus_offset)
          ;;[addr_of_770_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_770_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_770_sample_start_ <-& (array_obj_ref_769_root_address_calculated)
          addr_of_770_sample_start_ &-> (addr_of_770_request)
          addr_of_770_sample_completed_ <-& (addr_of_770_request)
          addr_of_770_update_start_ &-> (addr_of_770_complete)
          addr_of_770_update_completed_ <-& (addr_of_770_complete)
          // reenables .
          phi_stmt_761_update_start_ o<-& (addr_of_770_sample_completed_ 0)
          // self-release 
          addr_of_770_sample_start_ o<-& (addr_of_770_sample_completed_ 1)
          addr_of_770_update_start_ o<-& (addr_of_770_update_completed_ 0)
          // Target expression
          // (as target) scevgep8x_xi
          // scevgep8x_xi
          // implicit reference
          // 			->(scevgep8x_xi) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
          //  file prog.linked.opt.aa, line 317
          // Target expression
          // ->(scevgep8x_xi)
          $T[ptr_deref_773_sample_start_] 
          $T[ptr_deref_773_sample_completed_] 
          $T[ptr_deref_773_update_start_] 
          $T[ptr_deref_773_update_completed_] 
          $T[ptr_deref_773_base_address_calculated] 
          // scevgep8x_xi
          $T[R_scevgep8x_xi_772_sample_start_] 
          $T[R_scevgep8x_xi_772_sample_completed_] 
          $T[R_scevgep8x_xi_772_update_start_] 
          $T[R_scevgep8x_xi_772_update_completed_] 
          // implicit reference
          R_scevgep8x_xi_772_sample_start_ <-& (addr_of_770_update_completed_)
          R_scevgep8x_xi_772_sample_completed_ <-& (R_scevgep8x_xi_772_sample_start_)
          R_scevgep8x_xi_772_update_start_ <-& (R_scevgep8x_xi_772_sample_completed_)
          R_scevgep8x_xi_772_update_completed_ <-& (R_scevgep8x_xi_772_update_start_)
          $T[ptr_deref_773_word_address_calculated] 
          $T[ptr_deref_773_root_address_calculated] 
          $T[ptr_deref_773_base_address_resized] 
          ;;[ptr_deref_773_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_773_base_address_calculated &-> (ptr_deref_773_base_addr_resize)
          ptr_deref_773_base_address_resized <-& (ptr_deref_773_base_addr_resize)
          ;;[ptr_deref_773_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_773_base_address_resized &-> (ptr_deref_773_base_plus_offset)
          ptr_deref_773_root_address_calculated <-& (ptr_deref_773_base_plus_offset)
          ;;[ptr_deref_773_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_773_root_address_calculated &-> (ptr_deref_773_word_addrgen)
          ptr_deref_773_word_address_calculated <-& (ptr_deref_773_word_addrgen)
          ;;[ptr_deref_773_Sample] 
          {
            ;;[ptr_deref_773_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_773_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          ptr_deref_773_sample_start_ <-& (ptr_deref_773_word_address_calculated)
          // reenable-joins
          addr_of_770_update_start_ o<-& (ptr_deref_773_sample_completed_ 0)
          ptr_deref_773_sample_start_ &-> (ptr_deref_773_Sample)
          ptr_deref_773_sample_completed_ <-& (ptr_deref_773_Sample)
          ptr_deref_773_sample_completed_ &-> ($null)
          ptr_deref_773_update_start_ &-> (ptr_deref_773_Update)
          ptr_deref_773_update_completed_ <-& (ptr_deref_773_Update)
          ptr_deref_773_base_address_calculated <-& (R_scevgep8x_xi_772_update_completed_)
          ptr_deref_773_sample_start_ <-& (ptr_deref_773_base_address_calculated)
          // RAW reenables for scevgep8x_xi
          addr_of_770_update_start_ o<-& (ptr_deref_773_sample_completed_ 0)
          // self-release: 
          ptr_deref_773_sample_start_ o<-& (ptr_deref_773_sample_completed_ 1)
          ptr_deref_773_update_start_ o<-& (ptr_deref_773_update_completed_ 0)
          // 			iNsTr_53 := (indexx_x13x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          //  file prog.linked.opt.aa, line 318
          // Source expression
          // (indexx_x13x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          $T[ADD_u32_u32_781_sample_start_] 
          $T[ADD_u32_u32_781_sample_completed_] 
          $T[ADD_u32_u32_781_update_start_] 
          $T[ADD_u32_u32_781_update_completed_] 
          // indexx_x13x_xi
          $T[R_indexx_x13x_xi_778_sample_start_] 
          $T[R_indexx_x13x_xi_778_sample_completed_] 
          $T[R_indexx_x13x_xi_778_update_start_] 
          $T[R_indexx_x13x_xi_778_update_completed_] 
          // implicit reference
          R_indexx_x13x_xi_778_sample_start_ <-& (phi_stmt_761_update_completed_)
          R_indexx_x13x_xi_778_sample_completed_ <-& (R_indexx_x13x_xi_778_sample_start_)
          R_indexx_x13x_xi_778_update_start_ <-& (R_indexx_x13x_xi_778_sample_completed_)
          R_indexx_x13x_xi_778_update_completed_ <-& (R_indexx_x13x_xi_778_update_start_)
          ADD_u32_u32_781_sample_start_ <-& (R_indexx_x13x_xi_778_update_completed_)
          ;;[ADD_u32_u32_781_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u32_u32_781_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u32_u32_781_sample_start_ &-> (ADD_u32_u32_781_Sample)
          ADD_u32_u32_781_sample_completed_ <-& (ADD_u32_u32_781_Sample)
          ADD_u32_u32_781_sample_completed_ &-> ($null)
          ADD_u32_u32_781_update_start_ &-> (ADD_u32_u32_781_Update)
          ADD_u32_u32_781_update_completed_ <-& (ADD_u32_u32_781_Update)
          // RAW reenables for indexx_x13x_xi
          phi_stmt_761_update_start_ o<-& (ADD_u32_u32_781_sample_completed_ 0)
          // self-release: 
          ADD_u32_u32_781_sample_start_ o<-& (ADD_u32_u32_781_sample_completed_ 1)
          ADD_u32_u32_781_update_start_ o<-& (ADD_u32_u32_781_update_completed_ 0)
          // Target expression
          // (as target) iNsTr_53
          // iNsTr_53
          // implicit reference
          // WAR dependency: Read: iNsTr_53 before Write: 			iNsTr_53 := (indexx_x13x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          ADD_u32_u32_781_sample_start_ <-& (phi_stmt_761_sample_completed_)
          // WAR dependency: release  Read: iNsTr_53 with Write: 			iNsTr_53 := (indexx_x13x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          R_iNsTr_53_763_sample_start_ o<-& (ADD_u32_u32_781_update_completed_ 1)
          // 			exitcond := (iNsTr_53 == ($bitcast ($uint<32>) _b00000000000000000000000000011001  ))
          //  file prog.linked.opt.aa, line 319
          // Source expression
          // (iNsTr_53 == ($bitcast ($uint<32>) _b00000000000000000000000000011001  ))
          $T[EQ_u32_u1_787_sample_start_] 
          $T[EQ_u32_u1_787_sample_completed_] 
          $T[EQ_u32_u1_787_update_start_] 
          $T[EQ_u32_u1_787_update_completed_] 
          // iNsTr_53
          $T[R_iNsTr_53_784_sample_start_] 
          $T[R_iNsTr_53_784_sample_completed_] 
          $T[R_iNsTr_53_784_update_start_] 
          $T[R_iNsTr_53_784_update_completed_] 
          // implicit reference
          R_iNsTr_53_784_sample_start_ <-& (ADD_u32_u32_781_update_completed_)
          R_iNsTr_53_784_sample_completed_ <-& (R_iNsTr_53_784_sample_start_)
          R_iNsTr_53_784_update_start_ <-& (R_iNsTr_53_784_sample_completed_)
          R_iNsTr_53_784_update_completed_ <-& (R_iNsTr_53_784_update_start_)
          EQ_u32_u1_787_sample_start_ <-& (R_iNsTr_53_784_update_completed_)
          ;;[EQ_u32_u1_787_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[EQ_u32_u1_787_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          EQ_u32_u1_787_sample_start_ &-> (EQ_u32_u1_787_Sample)
          EQ_u32_u1_787_sample_completed_ <-& (EQ_u32_u1_787_Sample)
          EQ_u32_u1_787_sample_completed_ &-> ($null)
          EQ_u32_u1_787_update_start_ &-> (EQ_u32_u1_787_Update)
          EQ_u32_u1_787_update_completed_ <-& (EQ_u32_u1_787_Update)
          // RAW reenables for iNsTr_53
          ADD_u32_u32_781_update_start_ o<-& (EQ_u32_u1_787_sample_completed_ 0)
          // self-release: 
          EQ_u32_u1_787_sample_start_ o<-& (EQ_u32_u1_787_sample_completed_ 1)
          EQ_u32_u1_787_update_start_ o<-& (EQ_u32_u1_787_update_completed_ 0)
          // Target expression
          // (as target) exitcond
          // exitcond
          // implicit reference
          // ( ~ exitcond )
          $T[NOT_u1_u1_791_sample_start_] 
          $T[NOT_u1_u1_791_sample_completed_] 
          $T[NOT_u1_u1_791_update_start_] 
          $T[NOT_u1_u1_791_update_completed_] 
          // exitcond
          $T[R_exitcond_790_sample_start_] 
          $T[R_exitcond_790_sample_completed_] 
          $T[R_exitcond_790_update_start_] 
          $T[R_exitcond_790_update_completed_] 
          // implicit reference
          R_exitcond_790_sample_start_ <-& (EQ_u32_u1_787_update_completed_)
          R_exitcond_790_sample_completed_ <-& (R_exitcond_790_sample_start_)
          R_exitcond_790_update_start_ <-& (R_exitcond_790_sample_completed_)
          R_exitcond_790_update_completed_ <-& (R_exitcond_790_update_start_)
          NOT_u1_u1_791_sample_start_ <-& (R_exitcond_790_update_completed_)
          ;;[NOT_u1_u1_791_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[NOT_u1_u1_791_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          NOT_u1_u1_791_sample_start_ &-> (NOT_u1_u1_791_Sample)
          NOT_u1_u1_791_sample_completed_ <-& (NOT_u1_u1_791_Sample)
          NOT_u1_u1_791_sample_completed_ &-> ($null)
          NOT_u1_u1_791_update_start_ &-> (NOT_u1_u1_791_Update)
          NOT_u1_u1_791_update_completed_ <-& (NOT_u1_u1_791_Update)
          // flow-through
          NOT_u1_u1_791_update_start_ <-& (NOT_u1_u1_791_sample_completed_)
          NOT_u1_u1_791_update_completed_ &-> (condition_evaluated)
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // reenable across ring for memory space memory_space_6
          // leading and trailing sets are the same... no ring dependency
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_759__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_759_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_759__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_759_loop_body : condition_evaluated
        $bind do_while_stmt_759__entry__  => do_while_stmt_759_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_759_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_759__exit__)
      }
      do_while_stmt_759__entry__ |-> (do_while_stmt_759)
      do_while_stmt_759__exit__ <-| (do_while_stmt_759)
      // do-while-statement  
      //  file prog.linked.opt.aa, line 328
      <o> [do_while_stmt_802]  $depth 7 $buffering 2 
      {
        $P[do_while_stmt_802__entry__] 
        $P[do_while_stmt_802__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_802_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          // (pipelined) PHI statement phi_stmt_804
          // 			$phi indexx_x21x_xi := 			  ($cast ($uint<32>) iNsTr_68 ) $on $loopback			  indexx_x21x_xi_at_entry $on $entry // type of target is $uint<32>
          $T[phi_stmt_804_loopback_trigger] 
          $T[phi_stmt_804_loopback_sample_req_from_phi_seq] 
          $T[phi_stmt_804_loopback_sample_req] 
          phi_stmt_804_loopback_trigger <-& (back_edge_to_loop_body)
          phi_stmt_804_loopback_sample_req <-& (phi_stmt_804_loopback_sample_req_from_phi_seq)
          $T[phi_stmt_804_entry_trigger] 
          $T[phi_stmt_804_entry_sample_req_from_phi_seq] 
          $T[phi_stmt_804_entry_sample_req] 
          phi_stmt_804_entry_trigger <-& (first_time_through_loop_body)
          phi_stmt_804_entry_sample_req <-& (phi_stmt_804_entry_sample_req_from_phi_seq)
          $T[phi_stmt_804_sample_start_] 
          $T[phi_stmt_804_sample_completed_] 
          $T[phi_stmt_804_update_start_] 
          $T[phi_stmt_804_update_completed_] 
          phi_stmt_804_update_start_ o<-& (phi_stmt_804_update_completed_ 0)
          phi_stmt_804_sample_start_ o<-& (phi_stmt_804_sample_completed_ 1)
          $T[phi_stmt_804_merged_reqs] 
          $transitionmerge [phi_stmt_804_req_merge] (phi_stmt_804_entry_sample_req phi_stmt_804_loopback_sample_req) (phi_stmt_804_merged_reqs)
          phi_stmt_804_merged_reqs &-> ($null)
          // ($cast ($uint<32>) iNsTr_68 )
          $T[type_cast_807_sample_start_] 
          $T[type_cast_807_sample_completed_] 
          $T[type_cast_807_update_start_] 
          $T[type_cast_807_update_completed_] 
          // iNsTr_68
          $T[R_iNsTr_68_806_sample_start_] 
          $T[R_iNsTr_68_806_sample_completed_] 
          $T[R_iNsTr_68_806_update_start_] 
          $T[R_iNsTr_68_806_update_completed_] 
          // implicit reference
          R_iNsTr_68_806_sample_start_ <-& ($entry)
          R_iNsTr_68_806_sample_completed_ <-& (R_iNsTr_68_806_sample_start_)
          R_iNsTr_68_806_update_start_ <-& (R_iNsTr_68_806_sample_completed_)
          R_iNsTr_68_806_update_completed_ <-& (R_iNsTr_68_806_update_start_)
          type_cast_807_sample_start_ <-& (R_iNsTr_68_806_update_completed_)
          ;;[type_cast_807_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_807_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_807_sample_start_ &-> (type_cast_807_Sample)
          type_cast_807_sample_completed_ <-& (type_cast_807_Sample)
          type_cast_807_sample_completed_ &-> ($null)
          type_cast_807_update_start_ &-> (type_cast_807_Update)
          type_cast_807_update_completed_ <-& (type_cast_807_Update)
          // RAW reenables for iNsTr_68
          R_iNsTr_68_806_update_start_ o<-& (type_cast_807_sample_completed_ 1)
          // self-release: 
          type_cast_807_sample_start_ o<-& (type_cast_807_sample_completed_ 1)
          type_cast_807_update_start_ o<-& (type_cast_807_update_completed_ 0)
          phi_stmt_804_sample_start_ <-& (type_cast_807_update_completed_)
          // RAW reenables for ($cast ($uint<32>) iNsTr_68 )
          type_cast_807_update_start_ o<-& (phi_stmt_804_sample_completed_ 0)
          // indexx_x21x_xi_at_entry
          $T[R_indexx_x21x_xi_at_entry_808_sample_start_] 
          $T[R_indexx_x21x_xi_at_entry_808_sample_completed_] 
          $T[R_indexx_x21x_xi_at_entry_808_update_start_] 
          $T[R_indexx_x21x_xi_at_entry_808_update_completed_] 
          // implicit reference
          R_indexx_x21x_xi_at_entry_808_sample_start_ <-& ($entry)
          R_indexx_x21x_xi_at_entry_808_sample_completed_ <-& (R_indexx_x21x_xi_at_entry_808_sample_start_)
          R_indexx_x21x_xi_at_entry_808_update_start_ <-& (R_indexx_x21x_xi_at_entry_808_sample_completed_)
          R_indexx_x21x_xi_at_entry_808_update_completed_ <-& (R_indexx_x21x_xi_at_entry_808_update_start_)
          phi_stmt_804_sample_start_ <-& (R_indexx_x21x_xi_at_entry_808_update_completed_)
          // RAW reenables for indexx_x21x_xi_at_entry
          R_indexx_x21x_xi_at_entry_808_update_start_ o<-& (phi_stmt_804_sample_completed_ 1)
          $T[phi_stmt_804_phi_sequencer_done] 
          phi_stmt_804_phi_sequencer_done &-> ($null)
          $phisequencer [ phi_stmt_804_phi_seq] ( phi_stmt_804_loopback_trigger phi_stmt_804_entry_trigger  : phi_stmt_804_sample_start_ : phi_stmt_804_sample_completed_ ) ( phi_stmt_804_loopback_sample_req_from_phi_seq phi_stmt_804_entry_sample_req_from_phi_seq  : phi_stmt_804_phi_sequencer_done ) 
          condition_evaluated <-& (phi_stmt_804_sample_completed_)
          // 			scevgepx_xi := @(DERIVbuff[indexx_x21x_xi])
          //  file prog.linked.opt.aa, line 332
          // Source expression
          // @(DERIVbuff[indexx_x21x_xi])
          $T[addr_of_813_sample_start_] 
          $T[addr_of_813_sample_completed_] 
          $T[addr_of_813_update_start_] 
          $T[addr_of_813_update_completed_] 
          $T[array_obj_ref_812_root_address_calculated] 
          $T[array_obj_ref_812_offset_calculated] 
          $T[array_obj_ref_812_index_resized_0] 
          $T[array_obj_ref_812_index_scaled_0] 
          // indexx_x21x_xi
          $T[R_indexx_x21x_xi_811_sample_start_] 
          $T[R_indexx_x21x_xi_811_sample_completed_] 
          $T[R_indexx_x21x_xi_811_update_start_] 
          $T[R_indexx_x21x_xi_811_update_completed_] 
          // implicit reference
          R_indexx_x21x_xi_811_sample_start_ <-& (phi_stmt_804_update_completed_)
          R_indexx_x21x_xi_811_sample_completed_ <-& (R_indexx_x21x_xi_811_sample_start_)
          R_indexx_x21x_xi_811_update_start_ <-& (R_indexx_x21x_xi_811_sample_completed_)
          R_indexx_x21x_xi_811_update_completed_ <-& (R_indexx_x21x_xi_811_update_start_)
          ;;[array_obj_ref_812_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          R_indexx_x21x_xi_811_update_completed_ &-> (array_obj_ref_812_index_resize_0)
          array_obj_ref_812_index_resized_0 <-& (array_obj_ref_812_index_resize_0)
          ;;[array_obj_ref_812_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_812_index_resized_0 &-> (array_obj_ref_812_index_scale_0)
          array_obj_ref_812_index_scaled_0 <-& (array_obj_ref_812_index_scale_0)
          ;;[array_obj_ref_812_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_812_index_scaled_0 &-> (array_obj_ref_812_final_index_sum_regn)
          array_obj_ref_812_offset_calculated <-& (array_obj_ref_812_final_index_sum_regn)
          ;;[array_obj_ref_812_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_812_offset_calculated &-> (array_obj_ref_812_base_plus_offset)
          array_obj_ref_812_root_address_calculated <-& (array_obj_ref_812_base_plus_offset)
          ;;[addr_of_813_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_813_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_813_sample_start_ <-& (array_obj_ref_812_root_address_calculated)
          addr_of_813_sample_start_ &-> (addr_of_813_request)
          addr_of_813_sample_completed_ <-& (addr_of_813_request)
          addr_of_813_update_start_ &-> (addr_of_813_complete)
          addr_of_813_update_completed_ <-& (addr_of_813_complete)
          // reenables .
          phi_stmt_804_update_start_ o<-& (addr_of_813_sample_completed_ 0)
          // self-release 
          addr_of_813_sample_start_ o<-& (addr_of_813_sample_completed_ 1)
          addr_of_813_update_start_ o<-& (addr_of_813_update_completed_ 0)
          // Target expression
          // (as target) scevgepx_xi
          // scevgepx_xi
          // implicit reference
          // 			->(scevgepx_xi) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
          //  file prog.linked.opt.aa, line 333
          // Target expression
          // ->(scevgepx_xi)
          $T[ptr_deref_816_sample_start_] 
          $T[ptr_deref_816_sample_completed_] 
          $T[ptr_deref_816_update_start_] 
          $T[ptr_deref_816_update_completed_] 
          $T[ptr_deref_816_base_address_calculated] 
          // scevgepx_xi
          $T[R_scevgepx_xi_815_sample_start_] 
          $T[R_scevgepx_xi_815_sample_completed_] 
          $T[R_scevgepx_xi_815_update_start_] 
          $T[R_scevgepx_xi_815_update_completed_] 
          // implicit reference
          R_scevgepx_xi_815_sample_start_ <-& (addr_of_813_update_completed_)
          R_scevgepx_xi_815_sample_completed_ <-& (R_scevgepx_xi_815_sample_start_)
          R_scevgepx_xi_815_update_start_ <-& (R_scevgepx_xi_815_sample_completed_)
          R_scevgepx_xi_815_update_completed_ <-& (R_scevgepx_xi_815_update_start_)
          $T[ptr_deref_816_word_address_calculated] 
          $T[ptr_deref_816_root_address_calculated] 
          $T[ptr_deref_816_base_address_resized] 
          ;;[ptr_deref_816_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_816_base_address_calculated &-> (ptr_deref_816_base_addr_resize)
          ptr_deref_816_base_address_resized <-& (ptr_deref_816_base_addr_resize)
          ;;[ptr_deref_816_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_816_base_address_resized &-> (ptr_deref_816_base_plus_offset)
          ptr_deref_816_root_address_calculated <-& (ptr_deref_816_base_plus_offset)
          ;;[ptr_deref_816_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_816_root_address_calculated &-> (ptr_deref_816_word_addrgen)
          ptr_deref_816_word_address_calculated <-& (ptr_deref_816_word_addrgen)
          ;;[ptr_deref_816_Sample] 
          {
            ;;[ptr_deref_816_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_816_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          ptr_deref_816_sample_start_ <-& (ptr_deref_816_word_address_calculated)
          // reenable-joins
          addr_of_813_update_start_ o<-& (ptr_deref_816_sample_completed_ 0)
          ptr_deref_816_sample_start_ &-> (ptr_deref_816_Sample)
          ptr_deref_816_sample_completed_ <-& (ptr_deref_816_Sample)
          ptr_deref_816_sample_completed_ &-> ($null)
          ptr_deref_816_update_start_ &-> (ptr_deref_816_Update)
          ptr_deref_816_update_completed_ <-& (ptr_deref_816_Update)
          ptr_deref_816_base_address_calculated <-& (R_scevgepx_xi_815_update_completed_)
          ptr_deref_816_sample_start_ <-& (ptr_deref_816_base_address_calculated)
          // RAW reenables for scevgepx_xi
          addr_of_813_update_start_ o<-& (ptr_deref_816_sample_completed_ 0)
          // self-release: 
          ptr_deref_816_sample_start_ o<-& (ptr_deref_816_sample_completed_ 1)
          ptr_deref_816_update_start_ o<-& (ptr_deref_816_update_completed_ 0)
          // 			iNsTr_68 := (indexx_x21x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          //  file prog.linked.opt.aa, line 334
          // Source expression
          // (indexx_x21x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          $T[ADD_u32_u32_824_sample_start_] 
          $T[ADD_u32_u32_824_sample_completed_] 
          $T[ADD_u32_u32_824_update_start_] 
          $T[ADD_u32_u32_824_update_completed_] 
          // indexx_x21x_xi
          $T[R_indexx_x21x_xi_821_sample_start_] 
          $T[R_indexx_x21x_xi_821_sample_completed_] 
          $T[R_indexx_x21x_xi_821_update_start_] 
          $T[R_indexx_x21x_xi_821_update_completed_] 
          // implicit reference
          R_indexx_x21x_xi_821_sample_start_ <-& (phi_stmt_804_update_completed_)
          R_indexx_x21x_xi_821_sample_completed_ <-& (R_indexx_x21x_xi_821_sample_start_)
          R_indexx_x21x_xi_821_update_start_ <-& (R_indexx_x21x_xi_821_sample_completed_)
          R_indexx_x21x_xi_821_update_completed_ <-& (R_indexx_x21x_xi_821_update_start_)
          ADD_u32_u32_824_sample_start_ <-& (R_indexx_x21x_xi_821_update_completed_)
          ;;[ADD_u32_u32_824_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u32_u32_824_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u32_u32_824_sample_start_ &-> (ADD_u32_u32_824_Sample)
          ADD_u32_u32_824_sample_completed_ <-& (ADD_u32_u32_824_Sample)
          ADD_u32_u32_824_sample_completed_ &-> ($null)
          ADD_u32_u32_824_update_start_ &-> (ADD_u32_u32_824_Update)
          ADD_u32_u32_824_update_completed_ <-& (ADD_u32_u32_824_Update)
          // RAW reenables for indexx_x21x_xi
          phi_stmt_804_update_start_ o<-& (ADD_u32_u32_824_sample_completed_ 0)
          // self-release: 
          ADD_u32_u32_824_sample_start_ o<-& (ADD_u32_u32_824_sample_completed_ 1)
          ADD_u32_u32_824_update_start_ o<-& (ADD_u32_u32_824_update_completed_ 0)
          // Target expression
          // (as target) iNsTr_68
          // iNsTr_68
          // implicit reference
          // WAR dependency: Read: iNsTr_68 before Write: 			iNsTr_68 := (indexx_x21x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          ADD_u32_u32_824_sample_start_ <-& (phi_stmt_804_sample_completed_)
          // WAR dependency: release  Read: iNsTr_68 with Write: 			iNsTr_68 := (indexx_x21x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          R_iNsTr_68_806_sample_start_ o<-& (ADD_u32_u32_824_update_completed_ 1)
          // 			exitcond1 := (iNsTr_68 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
          //  file prog.linked.opt.aa, line 335
          // Source expression
          // (iNsTr_68 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
          $T[EQ_u32_u1_830_sample_start_] 
          $T[EQ_u32_u1_830_sample_completed_] 
          $T[EQ_u32_u1_830_update_start_] 
          $T[EQ_u32_u1_830_update_completed_] 
          // iNsTr_68
          $T[R_iNsTr_68_827_sample_start_] 
          $T[R_iNsTr_68_827_sample_completed_] 
          $T[R_iNsTr_68_827_update_start_] 
          $T[R_iNsTr_68_827_update_completed_] 
          // implicit reference
          R_iNsTr_68_827_sample_start_ <-& (ADD_u32_u32_824_update_completed_)
          R_iNsTr_68_827_sample_completed_ <-& (R_iNsTr_68_827_sample_start_)
          R_iNsTr_68_827_update_start_ <-& (R_iNsTr_68_827_sample_completed_)
          R_iNsTr_68_827_update_completed_ <-& (R_iNsTr_68_827_update_start_)
          EQ_u32_u1_830_sample_start_ <-& (R_iNsTr_68_827_update_completed_)
          ;;[EQ_u32_u1_830_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[EQ_u32_u1_830_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          EQ_u32_u1_830_sample_start_ &-> (EQ_u32_u1_830_Sample)
          EQ_u32_u1_830_sample_completed_ <-& (EQ_u32_u1_830_Sample)
          EQ_u32_u1_830_sample_completed_ &-> ($null)
          EQ_u32_u1_830_update_start_ &-> (EQ_u32_u1_830_Update)
          EQ_u32_u1_830_update_completed_ <-& (EQ_u32_u1_830_Update)
          // RAW reenables for iNsTr_68
          ADD_u32_u32_824_update_start_ o<-& (EQ_u32_u1_830_sample_completed_ 0)
          // self-release: 
          EQ_u32_u1_830_sample_start_ o<-& (EQ_u32_u1_830_sample_completed_ 1)
          EQ_u32_u1_830_update_start_ o<-& (EQ_u32_u1_830_update_completed_ 0)
          // Target expression
          // (as target) exitcond1
          // exitcond1
          // implicit reference
          // ( ~ exitcond1 )
          $T[NOT_u1_u1_834_sample_start_] 
          $T[NOT_u1_u1_834_sample_completed_] 
          $T[NOT_u1_u1_834_update_start_] 
          $T[NOT_u1_u1_834_update_completed_] 
          // exitcond1
          $T[R_exitcond1_833_sample_start_] 
          $T[R_exitcond1_833_sample_completed_] 
          $T[R_exitcond1_833_update_start_] 
          $T[R_exitcond1_833_update_completed_] 
          // implicit reference
          R_exitcond1_833_sample_start_ <-& (EQ_u32_u1_830_update_completed_)
          R_exitcond1_833_sample_completed_ <-& (R_exitcond1_833_sample_start_)
          R_exitcond1_833_update_start_ <-& (R_exitcond1_833_sample_completed_)
          R_exitcond1_833_update_completed_ <-& (R_exitcond1_833_update_start_)
          NOT_u1_u1_834_sample_start_ <-& (R_exitcond1_833_update_completed_)
          ;;[NOT_u1_u1_834_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[NOT_u1_u1_834_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          NOT_u1_u1_834_sample_start_ &-> (NOT_u1_u1_834_Sample)
          NOT_u1_u1_834_sample_completed_ <-& (NOT_u1_u1_834_Sample)
          NOT_u1_u1_834_sample_completed_ &-> ($null)
          NOT_u1_u1_834_update_start_ &-> (NOT_u1_u1_834_Update)
          NOT_u1_u1_834_update_completed_ <-& (NOT_u1_u1_834_Update)
          // flow-through
          NOT_u1_u1_834_update_start_ <-& (NOT_u1_u1_834_sample_completed_)
          NOT_u1_u1_834_update_completed_ &-> (condition_evaluated)
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // reenable across ring for memory space memory_space_4
          // leading and trailing sets are the same... no ring dependency
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_802__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_802_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_802__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_802_loop_body : condition_evaluated
        $bind do_while_stmt_802__entry__  => do_while_stmt_802_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_802_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_802__exit__)
      }
      do_while_stmt_802__entry__ |-> (do_while_stmt_802)
      do_while_stmt_802__exit__ <-| (do_while_stmt_802)
      ::[assign_stmt_840_to_assign_stmt_868] 
      {
        // 		LPy1 := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 340
        // Target expression
        // (as target) LPy1
        $T[STORE_LPy1_837_sample_start_] 
        $T[STORE_LPy1_837_sample_completed_] 
        $T[STORE_LPy1_837_update_start_] 
        $T[STORE_LPy1_837_update_completed_] 
        // LPy1
        $T[STORE_LPy1_837_word_address_calculated] 
        $T[STORE_LPy1_837_root_address_calculated] 
        STORE_LPy1_837_word_address_calculated <-& (STORE_LPy1_837_root_address_calculated)
        ;;[STORE_LPy1_837_Sample] 
        {
          ;;[STORE_LPy1_837_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_LPy1_837_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_LPy1_837_sample_start_ <-& (STORE_LPy1_837_word_address_calculated)
        STORE_LPy1_837_sample_start_ &-> (STORE_LPy1_837_Sample)
        STORE_LPy1_837_sample_completed_ <-& (STORE_LPy1_837_Sample)
        STORE_LPy1_837_sample_completed_ &-> ($null)
        STORE_LPy1_837_update_start_ &-> (STORE_LPy1_837_Update)
        STORE_LPy1_837_update_completed_ <-& (STORE_LPy1_837_Update)
        // 		LPy2 := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 341
        // Target expression
        // (as target) LPy2
        $T[STORE_LPy2_841_sample_start_] 
        $T[STORE_LPy2_841_sample_completed_] 
        $T[STORE_LPy2_841_update_start_] 
        $T[STORE_LPy2_841_update_completed_] 
        // LPy2
        $T[STORE_LPy2_841_word_address_calculated] 
        $T[STORE_LPy2_841_root_address_calculated] 
        STORE_LPy2_841_word_address_calculated <-& (STORE_LPy2_841_root_address_calculated)
        ;;[STORE_LPy2_841_Sample] 
        {
          ;;[STORE_LPy2_841_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_LPy2_841_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_LPy2_841_sample_start_ <-& (STORE_LPy2_841_word_address_calculated)
        STORE_LPy2_841_sample_start_ &-> (STORE_LPy2_841_Sample)
        STORE_LPy2_841_sample_completed_ <-& (STORE_LPy2_841_Sample)
        STORE_LPy2_841_sample_completed_ &-> ($null)
        STORE_LPy2_841_update_start_ &-> (STORE_LPy2_841_Update)
        STORE_LPy2_841_update_completed_ <-& (STORE_LPy2_841_Update)
        // 		HPy1 := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 342
        // Target expression
        // (as target) HPy1
        $T[STORE_HPy1_845_sample_start_] 
        $T[STORE_HPy1_845_sample_completed_] 
        $T[STORE_HPy1_845_update_start_] 
        $T[STORE_HPy1_845_update_completed_] 
        // HPy1
        $T[STORE_HPy1_845_word_address_calculated] 
        $T[STORE_HPy1_845_root_address_calculated] 
        STORE_HPy1_845_word_address_calculated <-& (STORE_HPy1_845_root_address_calculated)
        ;;[STORE_HPy1_845_Sample] 
        {
          ;;[STORE_HPy1_845_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_HPy1_845_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_HPy1_845_sample_start_ <-& (STORE_HPy1_845_word_address_calculated)
        STORE_HPy1_845_sample_start_ &-> (STORE_HPy1_845_Sample)
        STORE_HPy1_845_sample_completed_ <-& (STORE_HPy1_845_Sample)
        STORE_HPy1_845_sample_completed_ &-> ($null)
        STORE_HPy1_845_update_start_ &-> (STORE_HPy1_845_Update)
        STORE_HPy1_845_update_completed_ <-& (STORE_HPy1_845_Update)
        // 		WINsum := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 343
        // Target expression
        // (as target) WINsum
        $T[STORE_WINsum_849_sample_start_] 
        $T[STORE_WINsum_849_sample_completed_] 
        $T[STORE_WINsum_849_update_start_] 
        $T[STORE_WINsum_849_update_completed_] 
        // WINsum
        $T[STORE_WINsum_849_word_address_calculated] 
        $T[STORE_WINsum_849_root_address_calculated] 
        STORE_WINsum_849_word_address_calculated <-& (STORE_WINsum_849_root_address_calculated)
        ;;[STORE_WINsum_849_Sample] 
        {
          ;;[STORE_WINsum_849_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_WINsum_849_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_WINsum_849_sample_start_ <-& (STORE_WINsum_849_word_address_calculated)
        STORE_WINsum_849_sample_start_ &-> (STORE_WINsum_849_Sample)
        STORE_WINsum_849_sample_completed_ <-& (STORE_WINsum_849_Sample)
        STORE_WINsum_849_sample_completed_ &-> ($null)
        STORE_WINsum_849_update_start_ &-> (STORE_WINsum_849_Update)
        STORE_WINsum_849_update_completed_ <-& (STORE_WINsum_849_Update)
        // 		LPbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 344
        // Target expression
        // (as target) LPbuff_ptr
        $T[STORE_LPbuff_ptr_853_sample_start_] 
        $T[STORE_LPbuff_ptr_853_sample_completed_] 
        $T[STORE_LPbuff_ptr_853_update_start_] 
        $T[STORE_LPbuff_ptr_853_update_completed_] 
        // LPbuff_ptr
        $T[STORE_LPbuff_ptr_853_word_address_calculated] 
        $T[STORE_LPbuff_ptr_853_root_address_calculated] 
        STORE_LPbuff_ptr_853_word_address_calculated <-& (STORE_LPbuff_ptr_853_root_address_calculated)
        ;;[STORE_LPbuff_ptr_853_Sample] 
        {
          ;;[STORE_LPbuff_ptr_853_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_LPbuff_ptr_853_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_LPbuff_ptr_853_sample_start_ <-& (STORE_LPbuff_ptr_853_word_address_calculated)
        STORE_LPbuff_ptr_853_sample_start_ &-> (STORE_LPbuff_ptr_853_Sample)
        STORE_LPbuff_ptr_853_sample_completed_ <-& (STORE_LPbuff_ptr_853_Sample)
        STORE_LPbuff_ptr_853_sample_completed_ &-> ($null)
        STORE_LPbuff_ptr_853_update_start_ &-> (STORE_LPbuff_ptr_853_Update)
        STORE_LPbuff_ptr_853_update_completed_ <-& (STORE_LPbuff_ptr_853_Update)
        // 		HPbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 345
        // Target expression
        // (as target) HPbuff_ptr
        $T[STORE_HPbuff_ptr_857_sample_start_] 
        $T[STORE_HPbuff_ptr_857_sample_completed_] 
        $T[STORE_HPbuff_ptr_857_update_start_] 
        $T[STORE_HPbuff_ptr_857_update_completed_] 
        // HPbuff_ptr
        $T[STORE_HPbuff_ptr_857_word_address_calculated] 
        $T[STORE_HPbuff_ptr_857_root_address_calculated] 
        STORE_HPbuff_ptr_857_word_address_calculated <-& (STORE_HPbuff_ptr_857_root_address_calculated)
        ;;[STORE_HPbuff_ptr_857_Sample] 
        {
          ;;[STORE_HPbuff_ptr_857_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_HPbuff_ptr_857_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_HPbuff_ptr_857_sample_start_ <-& (STORE_HPbuff_ptr_857_word_address_calculated)
        STORE_HPbuff_ptr_857_sample_start_ &-> (STORE_HPbuff_ptr_857_Sample)
        STORE_HPbuff_ptr_857_sample_completed_ <-& (STORE_HPbuff_ptr_857_Sample)
        STORE_HPbuff_ptr_857_sample_completed_ &-> ($null)
        STORE_HPbuff_ptr_857_update_start_ &-> (STORE_HPbuff_ptr_857_Update)
        STORE_HPbuff_ptr_857_update_completed_ <-& (STORE_HPbuff_ptr_857_Update)
        // 		DERIVbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 346
        // Target expression
        // (as target) DERIVbuff_ptr
        $T[STORE_DERIVbuff_ptr_861_sample_start_] 
        $T[STORE_DERIVbuff_ptr_861_sample_completed_] 
        $T[STORE_DERIVbuff_ptr_861_update_start_] 
        $T[STORE_DERIVbuff_ptr_861_update_completed_] 
        // DERIVbuff_ptr
        $T[STORE_DERIVbuff_ptr_861_word_address_calculated] 
        $T[STORE_DERIVbuff_ptr_861_root_address_calculated] 
        STORE_DERIVbuff_ptr_861_word_address_calculated <-& (STORE_DERIVbuff_ptr_861_root_address_calculated)
        ;;[STORE_DERIVbuff_ptr_861_Sample] 
        {
          ;;[STORE_DERIVbuff_ptr_861_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_DERIVbuff_ptr_861_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_DERIVbuff_ptr_861_sample_start_ <-& (STORE_DERIVbuff_ptr_861_word_address_calculated)
        STORE_DERIVbuff_ptr_861_sample_start_ &-> (STORE_DERIVbuff_ptr_861_Sample)
        STORE_DERIVbuff_ptr_861_sample_completed_ <-& (STORE_DERIVbuff_ptr_861_Sample)
        STORE_DERIVbuff_ptr_861_sample_completed_ &-> ($null)
        STORE_DERIVbuff_ptr_861_update_start_ &-> (STORE_DERIVbuff_ptr_861_Update)
        STORE_DERIVbuff_ptr_861_update_completed_ <-& (STORE_DERIVbuff_ptr_861_Update)
        // 		WINbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 347
        // Target expression
        // (as target) WINbuff_ptr
        $T[STORE_WINbuff_ptr_865_sample_start_] 
        $T[STORE_WINbuff_ptr_865_sample_completed_] 
        $T[STORE_WINbuff_ptr_865_update_start_] 
        $T[STORE_WINbuff_ptr_865_update_completed_] 
        // WINbuff_ptr
        $T[STORE_WINbuff_ptr_865_word_address_calculated] 
        $T[STORE_WINbuff_ptr_865_root_address_calculated] 
        STORE_WINbuff_ptr_865_word_address_calculated <-& (STORE_WINbuff_ptr_865_root_address_calculated)
        ;;[STORE_WINbuff_ptr_865_Sample] 
        {
          ;;[STORE_WINbuff_ptr_865_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_WINbuff_ptr_865_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_WINbuff_ptr_865_sample_start_ <-& (STORE_WINbuff_ptr_865_word_address_calculated)
        STORE_WINbuff_ptr_865_sample_start_ &-> (STORE_WINbuff_ptr_865_Sample)
        STORE_WINbuff_ptr_865_sample_completed_ <-& (STORE_WINbuff_ptr_865_Sample)
        STORE_WINbuff_ptr_865_sample_completed_ &-> ($null)
        STORE_WINbuff_ptr_865_update_start_ &-> (STORE_WINbuff_ptr_865_Update)
        STORE_WINbuff_ptr_865_update_completed_ <-& (STORE_WINbuff_ptr_865_Update)
        // load-store dependencies..
      }
      assign_stmt_840_to_assign_stmt_868__entry__ |-> (assign_stmt_840_to_assign_stmt_868)
      assign_stmt_840_to_assign_stmt_868__exit__ <-| (assign_stmt_840_to_assign_stmt_868)
      ::[call_stmt_871] 
      {
        // 		$call lpFilt () () 
        //  file prog.linked.opt.aa, line 351
        $T[call_stmt_871_sample_start_] 
        $T[call_stmt_871_sample_completed_] 
        $T[call_stmt_871_update_start_] 
        $T[call_stmt_871_update_completed_] 
        ;;[call_stmt_871_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_871_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_871_sample_start_ &-> (call_stmt_871_Sample)
        call_stmt_871_sample_completed_ <-& (call_stmt_871_Sample)
        call_stmt_871_sample_completed_ &-> ($null)
        call_stmt_871_update_start_ &-> (call_stmt_871_Update)
        call_stmt_871_update_completed_ <-& (call_stmt_871_Update)
        // barrier: 		$call lpFilt () () 
        // load-store dependencies..
      }
      call_stmt_871__entry__ |-> (call_stmt_871)
      call_stmt_871__exit__ <-| (call_stmt_871)
      ::[call_stmt_872] 
      {
        // 		$call hpFilt () () 
        //  file prog.linked.opt.aa, line 352
        $T[call_stmt_872_sample_start_] 
        $T[call_stmt_872_sample_completed_] 
        $T[call_stmt_872_update_start_] 
        $T[call_stmt_872_update_completed_] 
        ;;[call_stmt_872_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_872_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_872_sample_start_ &-> (call_stmt_872_Sample)
        call_stmt_872_sample_completed_ <-& (call_stmt_872_Sample)
        call_stmt_872_sample_completed_ &-> ($null)
        call_stmt_872_update_start_ &-> (call_stmt_872_Update)
        call_stmt_872_update_completed_ <-& (call_stmt_872_Update)
        // barrier: 		$call hpFilt () () 
        // load-store dependencies..
      }
      call_stmt_872__entry__ |-> (call_stmt_872)
      call_stmt_872__exit__ <-| (call_stmt_872)
      ::[assign_stmt_875] 
      {
        // 		iNsTr_5 := HPout_pipe
        //  file prog.linked.opt.aa, line 353
        // Source expression
        // HPout_pipe
        $T[RPIPE_HPout_pipe_874_sample_start_] 
        $T[RPIPE_HPout_pipe_874_sample_completed_] 
        $T[RPIPE_HPout_pipe_874_update_start_] 
        $T[RPIPE_HPout_pipe_874_update_completed_] 
        ;;[RPIPE_HPout_pipe_874_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_HPout_pipe_874_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_HPout_pipe_874_sample_start_ &-> (RPIPE_HPout_pipe_874_Sample)
        RPIPE_HPout_pipe_874_sample_completed_ <-& (RPIPE_HPout_pipe_874_Sample)
        RPIPE_HPout_pipe_874_sample_completed_ &-> ($null)
        RPIPE_HPout_pipe_874_update_start_ &-> (RPIPE_HPout_pipe_874_Update)
        RPIPE_HPout_pipe_874_update_completed_ <-& (RPIPE_HPout_pipe_874_Update)
        // Target expression
        // (as target) iNsTr_5
        // iNsTr_5
        // implicit reference
        // barrier: 		iNsTr_5 := HPout_pipe
        // load-store dependencies..
        // pipe read/write dependencies for pipe HPout_pipe
      }
      assign_stmt_875__entry__ |-> (assign_stmt_875)
      assign_stmt_875__exit__ <-| (assign_stmt_875)
      ::[assign_stmt_878_to_assign_stmt_938] 
      {
        // 		iNsTr_6 := DERIVbuff_ptr
        //  file prog.linked.opt.aa, line 354
        // Source expression
        // DERIVbuff_ptr
        $T[LOAD_DERIVbuff_ptr_877_sample_start_] 
        $T[LOAD_DERIVbuff_ptr_877_sample_completed_] 
        $T[LOAD_DERIVbuff_ptr_877_update_start_] 
        $T[LOAD_DERIVbuff_ptr_877_update_completed_] 
        $T[LOAD_DERIVbuff_ptr_877_sample_start_] 
        $T[LOAD_DERIVbuff_ptr_877_sample_completed_] 
        $T[LOAD_DERIVbuff_ptr_877_update_start_] 
        $T[LOAD_DERIVbuff_ptr_877_update_completed_] 
        $T[LOAD_DERIVbuff_ptr_877_word_address_calculated] 
        $T[LOAD_DERIVbuff_ptr_877_root_address_calculated] 
        LOAD_DERIVbuff_ptr_877_word_address_calculated <-& (LOAD_DERIVbuff_ptr_877_root_address_calculated)
        ;;[LOAD_DERIVbuff_ptr_877_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_DERIVbuff_ptr_877_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_DERIVbuff_ptr_877_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_DERIVbuff_ptr_877_sample_start_ <-& (LOAD_DERIVbuff_ptr_877_word_address_calculated)
        LOAD_DERIVbuff_ptr_877_sample_start_ &-> (LOAD_DERIVbuff_ptr_877_Sample)
        LOAD_DERIVbuff_ptr_877_sample_completed_ <-& (LOAD_DERIVbuff_ptr_877_Sample)
        LOAD_DERIVbuff_ptr_877_sample_completed_ &-> ($null)
        LOAD_DERIVbuff_ptr_877_update_start_ &-> (LOAD_DERIVbuff_ptr_877_Update)
        LOAD_DERIVbuff_ptr_877_update_completed_ <-& (LOAD_DERIVbuff_ptr_877_Update)
        // Target expression
        // (as target) iNsTr_6
        // iNsTr_6
        // implicit reference
        // 		iNsTr_7 := @(DERIVbuff[iNsTr_6])
        //  file prog.linked.opt.aa, line 355
        // Source expression
        // @(DERIVbuff[iNsTr_6])
        $T[addr_of_882_sample_start_] 
        $T[addr_of_882_sample_completed_] 
        $T[addr_of_882_update_start_] 
        $T[addr_of_882_update_completed_] 
        $T[array_obj_ref_881_root_address_calculated] 
        $T[array_obj_ref_881_offset_calculated] 
        $T[array_obj_ref_881_index_resized_0] 
        $T[array_obj_ref_881_index_scaled_0] 
        // iNsTr_6
        $T[R_iNsTr_6_880_sample_start_] 
        $T[R_iNsTr_6_880_sample_completed_] 
        $T[R_iNsTr_6_880_update_start_] 
        $T[R_iNsTr_6_880_update_completed_] 
        // implicit reference
        R_iNsTr_6_880_sample_start_ <-& (LOAD_DERIVbuff_ptr_877_update_completed_)
        R_iNsTr_6_880_sample_completed_ <-& (R_iNsTr_6_880_sample_start_)
        R_iNsTr_6_880_update_start_ <-& (R_iNsTr_6_880_sample_completed_)
        R_iNsTr_6_880_update_completed_ <-& (R_iNsTr_6_880_update_start_)
        ;;[array_obj_ref_881_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        R_iNsTr_6_880_update_completed_ &-> (array_obj_ref_881_index_resize_0)
        array_obj_ref_881_index_resized_0 <-& (array_obj_ref_881_index_resize_0)
        ;;[array_obj_ref_881_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_881_index_resized_0 &-> (array_obj_ref_881_index_scale_0)
        array_obj_ref_881_index_scaled_0 <-& (array_obj_ref_881_index_scale_0)
        ;;[array_obj_ref_881_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_881_index_scaled_0 &-> (array_obj_ref_881_final_index_sum_regn)
        array_obj_ref_881_offset_calculated <-& (array_obj_ref_881_final_index_sum_regn)
        ;;[array_obj_ref_881_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_881_offset_calculated &-> (array_obj_ref_881_base_plus_offset)
        array_obj_ref_881_root_address_calculated <-& (array_obj_ref_881_base_plus_offset)
        ;;[addr_of_882_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_882_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_882_sample_start_ <-& (array_obj_ref_881_root_address_calculated)
        addr_of_882_sample_start_ &-> (addr_of_882_request)
        addr_of_882_sample_completed_ <-& (addr_of_882_request)
        addr_of_882_update_start_ &-> (addr_of_882_complete)
        addr_of_882_update_completed_ <-& (addr_of_882_complete)
        // Target expression
        // (as target) iNsTr_7
        // iNsTr_7
        // implicit reference
        // 		iNsTr_8 := ->(iNsTr_7)
        //  file prog.linked.opt.aa, line 356
        // Source expression
        // ->(iNsTr_7)
        $T[ptr_deref_886_sample_start_] 
        $T[ptr_deref_886_sample_completed_] 
        $T[ptr_deref_886_update_start_] 
        $T[ptr_deref_886_update_completed_] 
        $T[ptr_deref_886_base_address_calculated] 
        // iNsTr_7
        $T[R_iNsTr_7_885_sample_start_] 
        $T[R_iNsTr_7_885_sample_completed_] 
        $T[R_iNsTr_7_885_update_start_] 
        $T[R_iNsTr_7_885_update_completed_] 
        // implicit reference
        R_iNsTr_7_885_sample_start_ <-& (addr_of_882_update_completed_)
        R_iNsTr_7_885_sample_completed_ <-& (R_iNsTr_7_885_sample_start_)
        R_iNsTr_7_885_update_start_ <-& (R_iNsTr_7_885_sample_completed_)
        R_iNsTr_7_885_update_completed_ <-& (R_iNsTr_7_885_update_start_)
        $T[ptr_deref_886_word_address_calculated] 
        $T[ptr_deref_886_root_address_calculated] 
        $T[ptr_deref_886_base_address_resized] 
        ;;[ptr_deref_886_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_886_base_address_calculated &-> (ptr_deref_886_base_addr_resize)
        ptr_deref_886_base_address_resized <-& (ptr_deref_886_base_addr_resize)
        ;;[ptr_deref_886_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_886_base_address_resized &-> (ptr_deref_886_base_plus_offset)
        ptr_deref_886_root_address_calculated <-& (ptr_deref_886_base_plus_offset)
        ;;[ptr_deref_886_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_886_root_address_calculated &-> (ptr_deref_886_word_addrgen)
        ptr_deref_886_word_address_calculated <-& (ptr_deref_886_word_addrgen)
        ;;[ptr_deref_886_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_886_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_886_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_886_sample_start_ <-& (ptr_deref_886_word_address_calculated)
        ptr_deref_886_sample_start_ &-> (ptr_deref_886_Sample)
        ptr_deref_886_sample_completed_ <-& (ptr_deref_886_Sample)
        ptr_deref_886_sample_completed_ &-> ($null)
        ptr_deref_886_update_start_ &-> (ptr_deref_886_Update)
        ptr_deref_886_update_completed_ <-& (ptr_deref_886_Update)
        ptr_deref_886_base_address_calculated <-& (R_iNsTr_7_885_update_completed_)
        ptr_deref_886_sample_start_ <-& (ptr_deref_886_base_address_calculated)
        // Target expression
        // (as target) iNsTr_8
        // iNsTr_8
        // implicit reference
        // 		iNsTr_9 := (iNsTr_5 - iNsTr_8)
        //  file prog.linked.opt.aa, line 357
        // Source expression
        // (iNsTr_5 - iNsTr_8)
        $T[SUB_u32_u32_891_sample_start_] 
        $T[SUB_u32_u32_891_sample_completed_] 
        $T[SUB_u32_u32_891_update_start_] 
        $T[SUB_u32_u32_891_update_completed_] 
        // iNsTr_5
        $T[R_iNsTr_5_889_sample_start_] 
        $T[R_iNsTr_5_889_sample_completed_] 
        $T[R_iNsTr_5_889_update_start_] 
        $T[R_iNsTr_5_889_update_completed_] 
        // implicit reference
        R_iNsTr_5_889_sample_start_ <-& ($entry)
        R_iNsTr_5_889_sample_completed_ <-& (R_iNsTr_5_889_sample_start_)
        R_iNsTr_5_889_update_start_ <-& (R_iNsTr_5_889_sample_completed_)
        R_iNsTr_5_889_update_completed_ <-& (R_iNsTr_5_889_update_start_)
        // iNsTr_8
        $T[R_iNsTr_8_890_sample_start_] 
        $T[R_iNsTr_8_890_sample_completed_] 
        $T[R_iNsTr_8_890_update_start_] 
        $T[R_iNsTr_8_890_update_completed_] 
        // implicit reference
        R_iNsTr_8_890_sample_start_ <-& (ptr_deref_886_update_completed_)
        R_iNsTr_8_890_sample_completed_ <-& (R_iNsTr_8_890_sample_start_)
        R_iNsTr_8_890_update_start_ <-& (R_iNsTr_8_890_sample_completed_)
        R_iNsTr_8_890_update_completed_ <-& (R_iNsTr_8_890_update_start_)
        SUB_u32_u32_891_sample_start_ <-& (R_iNsTr_5_889_update_completed_)
        SUB_u32_u32_891_sample_start_ <-& (R_iNsTr_8_890_update_completed_)
        ;;[SUB_u32_u32_891_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_891_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_891_sample_start_ &-> (SUB_u32_u32_891_Sample)
        SUB_u32_u32_891_sample_completed_ <-& (SUB_u32_u32_891_Sample)
        SUB_u32_u32_891_sample_completed_ &-> ($null)
        SUB_u32_u32_891_update_start_ &-> (SUB_u32_u32_891_Update)
        SUB_u32_u32_891_update_completed_ <-& (SUB_u32_u32_891_Update)
        // Target expression
        // (as target) iNsTr_9
        // iNsTr_9
        // implicit reference
        // 		isposx_xi := (($bitcast ($int<32>) iNsTr_9 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ))
        //  file prog.linked.opt.aa, line 358
        // Source expression
        // (($bitcast ($int<32>) iNsTr_9 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ))
        $T[SGT_i32_u1_899_sample_start_] 
        $T[SGT_i32_u1_899_sample_completed_] 
        $T[SGT_i32_u1_899_update_start_] 
        $T[SGT_i32_u1_899_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_9 )
        $T[type_cast_895_sample_start_] 
        $T[type_cast_895_sample_completed_] 
        $T[type_cast_895_update_start_] 
        $T[type_cast_895_update_completed_] 
        // iNsTr_9
        $T[R_iNsTr_9_894_sample_start_] 
        $T[R_iNsTr_9_894_sample_completed_] 
        $T[R_iNsTr_9_894_update_start_] 
        $T[R_iNsTr_9_894_update_completed_] 
        // implicit reference
        R_iNsTr_9_894_sample_start_ <-& (SUB_u32_u32_891_update_completed_)
        R_iNsTr_9_894_sample_completed_ <-& (R_iNsTr_9_894_sample_start_)
        R_iNsTr_9_894_update_start_ <-& (R_iNsTr_9_894_sample_completed_)
        R_iNsTr_9_894_update_completed_ <-& (R_iNsTr_9_894_update_start_)
        type_cast_895_sample_start_ <-& (R_iNsTr_9_894_update_completed_)
        ;;[type_cast_895_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_895_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_895_sample_start_ &-> (type_cast_895_Sample)
        type_cast_895_sample_completed_ <-& (type_cast_895_Sample)
        type_cast_895_sample_completed_ &-> ($null)
        type_cast_895_update_start_ &-> (type_cast_895_Update)
        type_cast_895_update_completed_ <-& (type_cast_895_Update)
        // flow-through
        type_cast_895_update_start_ <-& (type_cast_895_sample_completed_)
        SGT_i32_u1_899_sample_start_ <-& (type_cast_895_update_completed_)
        ;;[SGT_i32_u1_899_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_899_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_899_sample_start_ &-> (SGT_i32_u1_899_Sample)
        SGT_i32_u1_899_sample_completed_ <-& (SGT_i32_u1_899_Sample)
        SGT_i32_u1_899_sample_completed_ &-> ($null)
        SGT_i32_u1_899_update_start_ &-> (SGT_i32_u1_899_Update)
        SGT_i32_u1_899_update_completed_ <-& (SGT_i32_u1_899_Update)
        // Target expression
        // (as target) isposx_xi
        // isposx_xi
        // implicit reference
        // 		negx_xi := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_9)
        //  file prog.linked.opt.aa, line 359
        // Source expression
        // (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_9)
        $T[SUB_u32_u32_905_sample_start_] 
        $T[SUB_u32_u32_905_sample_completed_] 
        $T[SUB_u32_u32_905_update_start_] 
        $T[SUB_u32_u32_905_update_completed_] 
        // iNsTr_9
        $T[R_iNsTr_9_904_sample_start_] 
        $T[R_iNsTr_9_904_sample_completed_] 
        $T[R_iNsTr_9_904_update_start_] 
        $T[R_iNsTr_9_904_update_completed_] 
        // implicit reference
        R_iNsTr_9_904_sample_start_ <-& (SUB_u32_u32_891_update_completed_)
        R_iNsTr_9_904_sample_completed_ <-& (R_iNsTr_9_904_sample_start_)
        R_iNsTr_9_904_update_start_ <-& (R_iNsTr_9_904_sample_completed_)
        R_iNsTr_9_904_update_completed_ <-& (R_iNsTr_9_904_update_start_)
        SUB_u32_u32_905_sample_start_ <-& (R_iNsTr_9_904_update_completed_)
        ;;[SUB_u32_u32_905_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_905_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_905_sample_start_ &-> (SUB_u32_u32_905_Sample)
        SUB_u32_u32_905_sample_completed_ <-& (SUB_u32_u32_905_Sample)
        SUB_u32_u32_905_sample_completed_ &-> ($null)
        SUB_u32_u32_905_update_start_ &-> (SUB_u32_u32_905_Update)
        SUB_u32_u32_905_update_completed_ <-& (SUB_u32_u32_905_Update)
        // Target expression
        // (as target) negx_xi
        // negx_xi
        // implicit reference
        // 		iNsTr_10 := ( $mux isposx_xi iNsTr_9  negx_xi ) 
        //  file prog.linked.opt.aa, line 360
        // Source expression
        // ( $mux isposx_xi iNsTr_9  negx_xi ) 
        $T[MUX_911_sample_start_] 
        $T[MUX_911_sample_completed_] 
        $T[MUX_911_update_start_] 
        $T[MUX_911_update_completed_] 
        // isposx_xi
        $T[R_isposx_xi_908_sample_start_] 
        $T[R_isposx_xi_908_sample_completed_] 
        $T[R_isposx_xi_908_update_start_] 
        $T[R_isposx_xi_908_update_completed_] 
        // implicit reference
        R_isposx_xi_908_sample_start_ <-& (SGT_i32_u1_899_update_completed_)
        R_isposx_xi_908_sample_completed_ <-& (R_isposx_xi_908_sample_start_)
        R_isposx_xi_908_update_start_ <-& (R_isposx_xi_908_sample_completed_)
        R_isposx_xi_908_update_completed_ <-& (R_isposx_xi_908_update_start_)
        // iNsTr_9
        $T[R_iNsTr_9_909_sample_start_] 
        $T[R_iNsTr_9_909_sample_completed_] 
        $T[R_iNsTr_9_909_update_start_] 
        $T[R_iNsTr_9_909_update_completed_] 
        // implicit reference
        R_iNsTr_9_909_sample_start_ <-& (SUB_u32_u32_891_update_completed_)
        R_iNsTr_9_909_sample_completed_ <-& (R_iNsTr_9_909_sample_start_)
        R_iNsTr_9_909_update_start_ <-& (R_iNsTr_9_909_sample_completed_)
        R_iNsTr_9_909_update_completed_ <-& (R_iNsTr_9_909_update_start_)
        // negx_xi
        $T[R_negx_xi_910_sample_start_] 
        $T[R_negx_xi_910_sample_completed_] 
        $T[R_negx_xi_910_update_start_] 
        $T[R_negx_xi_910_update_completed_] 
        // implicit reference
        R_negx_xi_910_sample_start_ <-& (SUB_u32_u32_905_update_completed_)
        R_negx_xi_910_sample_completed_ <-& (R_negx_xi_910_sample_start_)
        R_negx_xi_910_update_start_ <-& (R_negx_xi_910_sample_completed_)
        R_negx_xi_910_update_completed_ <-& (R_negx_xi_910_update_start_)
        MUX_911_sample_start_ <-& (R_isposx_xi_908_update_completed_)
        MUX_911_sample_start_ <-& (R_iNsTr_9_909_update_completed_)
        MUX_911_sample_start_ <-& (R_negx_xi_910_update_completed_)
        ;;[MUX_911_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_911_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_911_sample_start_ &-> (MUX_911_start)
        MUX_911_sample_completed_ <-& (MUX_911_start)
        MUX_911_update_start_ &-> (MUX_911_complete)
        MUX_911_update_completed_ <-& (MUX_911_complete)
        MUX_911_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_10
        // iNsTr_10
        // implicit reference
        // 		->(iNsTr_7) := iNsTr_5
        //  file prog.linked.opt.aa, line 361
        // Source expression
        // iNsTr_5
        $T[R_iNsTr_5_915_sample_start_] 
        $T[R_iNsTr_5_915_sample_completed_] 
        $T[R_iNsTr_5_915_update_start_] 
        $T[R_iNsTr_5_915_update_completed_] 
        // implicit reference
        R_iNsTr_5_915_sample_start_ <-& ($entry)
        R_iNsTr_5_915_sample_completed_ <-& (R_iNsTr_5_915_sample_start_)
        R_iNsTr_5_915_update_start_ <-& (R_iNsTr_5_915_sample_completed_)
        R_iNsTr_5_915_update_completed_ <-& (R_iNsTr_5_915_update_start_)
        // Target expression
        // ->(iNsTr_7)
        $T[ptr_deref_914_sample_start_] 
        $T[ptr_deref_914_sample_completed_] 
        $T[ptr_deref_914_update_start_] 
        $T[ptr_deref_914_update_completed_] 
        $T[ptr_deref_914_base_address_calculated] 
        // iNsTr_7
        $T[R_iNsTr_7_913_sample_start_] 
        $T[R_iNsTr_7_913_sample_completed_] 
        $T[R_iNsTr_7_913_update_start_] 
        $T[R_iNsTr_7_913_update_completed_] 
        // implicit reference
        R_iNsTr_7_913_sample_start_ <-& (addr_of_882_update_completed_)
        R_iNsTr_7_913_sample_completed_ <-& (R_iNsTr_7_913_sample_start_)
        R_iNsTr_7_913_update_start_ <-& (R_iNsTr_7_913_sample_completed_)
        R_iNsTr_7_913_update_completed_ <-& (R_iNsTr_7_913_update_start_)
        $T[ptr_deref_914_word_address_calculated] 
        $T[ptr_deref_914_root_address_calculated] 
        $T[ptr_deref_914_base_address_resized] 
        ;;[ptr_deref_914_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_914_base_address_calculated &-> (ptr_deref_914_base_addr_resize)
        ptr_deref_914_base_address_resized <-& (ptr_deref_914_base_addr_resize)
        ;;[ptr_deref_914_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_914_base_address_resized &-> (ptr_deref_914_base_plus_offset)
        ptr_deref_914_root_address_calculated <-& (ptr_deref_914_base_plus_offset)
        ;;[ptr_deref_914_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_914_root_address_calculated &-> (ptr_deref_914_word_addrgen)
        ptr_deref_914_word_address_calculated <-& (ptr_deref_914_word_addrgen)
        ;;[ptr_deref_914_Sample] 
        {
          ;;[ptr_deref_914_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_914_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_914_sample_start_ <-& (ptr_deref_914_word_address_calculated)
        ptr_deref_914_sample_start_ &-> (ptr_deref_914_Sample)
        ptr_deref_914_sample_completed_ <-& (ptr_deref_914_Sample)
        ptr_deref_914_sample_completed_ &-> ($null)
        ptr_deref_914_update_start_ &-> (ptr_deref_914_Update)
        ptr_deref_914_update_completed_ <-& (ptr_deref_914_Update)
        ptr_deref_914_base_address_calculated <-& (R_iNsTr_7_913_update_completed_)
        ptr_deref_914_sample_start_ <-& (ptr_deref_914_base_address_calculated)
        ptr_deref_914_sample_start_ <-& (R_iNsTr_5_915_update_completed_)
        // 		iNsTr_12 := (iNsTr_6 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 362
        // Source expression
        // (iNsTr_6 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_921_sample_start_] 
        $T[ADD_u32_u32_921_sample_completed_] 
        $T[ADD_u32_u32_921_update_start_] 
        $T[ADD_u32_u32_921_update_completed_] 
        // iNsTr_6
        $T[R_iNsTr_6_918_sample_start_] 
        $T[R_iNsTr_6_918_sample_completed_] 
        $T[R_iNsTr_6_918_update_start_] 
        $T[R_iNsTr_6_918_update_completed_] 
        // implicit reference
        R_iNsTr_6_918_sample_start_ <-& (LOAD_DERIVbuff_ptr_877_update_completed_)
        R_iNsTr_6_918_sample_completed_ <-& (R_iNsTr_6_918_sample_start_)
        R_iNsTr_6_918_update_start_ <-& (R_iNsTr_6_918_sample_completed_)
        R_iNsTr_6_918_update_completed_ <-& (R_iNsTr_6_918_update_start_)
        ADD_u32_u32_921_sample_start_ <-& (R_iNsTr_6_918_update_completed_)
        ;;[ADD_u32_u32_921_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_921_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_921_sample_start_ &-> (ADD_u32_u32_921_Sample)
        ADD_u32_u32_921_sample_completed_ <-& (ADD_u32_u32_921_Sample)
        ADD_u32_u32_921_sample_completed_ &-> ($null)
        ADD_u32_u32_921_update_start_ &-> (ADD_u32_u32_921_Update)
        ADD_u32_u32_921_update_completed_ <-& (ADD_u32_u32_921_Update)
        // Target expression
        // (as target) iNsTr_12
        // iNsTr_12
        // implicit reference
        // 		iNsTr_13 := (iNsTr_12 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
        //  file prog.linked.opt.aa, line 363
        // Source expression
        // (iNsTr_12 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
        $T[EQ_u32_u1_927_sample_start_] 
        $T[EQ_u32_u1_927_sample_completed_] 
        $T[EQ_u32_u1_927_update_start_] 
        $T[EQ_u32_u1_927_update_completed_] 
        // iNsTr_12
        $T[R_iNsTr_12_924_sample_start_] 
        $T[R_iNsTr_12_924_sample_completed_] 
        $T[R_iNsTr_12_924_update_start_] 
        $T[R_iNsTr_12_924_update_completed_] 
        // implicit reference
        R_iNsTr_12_924_sample_start_ <-& (ADD_u32_u32_921_update_completed_)
        R_iNsTr_12_924_sample_completed_ <-& (R_iNsTr_12_924_sample_start_)
        R_iNsTr_12_924_update_start_ <-& (R_iNsTr_12_924_sample_completed_)
        R_iNsTr_12_924_update_completed_ <-& (R_iNsTr_12_924_update_start_)
        EQ_u32_u1_927_sample_start_ <-& (R_iNsTr_12_924_update_completed_)
        ;;[EQ_u32_u1_927_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_927_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_927_sample_start_ &-> (EQ_u32_u1_927_Sample)
        EQ_u32_u1_927_sample_completed_ <-& (EQ_u32_u1_927_Sample)
        EQ_u32_u1_927_sample_completed_ &-> ($null)
        EQ_u32_u1_927_update_start_ &-> (EQ_u32_u1_927_Update)
        EQ_u32_u1_927_update_completed_ <-& (EQ_u32_u1_927_Update)
        // Target expression
        // (as target) iNsTr_13
        // iNsTr_13
        // implicit reference
        // 		iNsTr_14 := ( $mux iNsTr_13 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_12 ) 
        //  file prog.linked.opt.aa, line 364
        // Source expression
        // ( $mux iNsTr_13 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_12 ) 
        $T[MUX_934_sample_start_] 
        $T[MUX_934_sample_completed_] 
        $T[MUX_934_update_start_] 
        $T[MUX_934_update_completed_] 
        // iNsTr_13
        $T[R_iNsTr_13_930_sample_start_] 
        $T[R_iNsTr_13_930_sample_completed_] 
        $T[R_iNsTr_13_930_update_start_] 
        $T[R_iNsTr_13_930_update_completed_] 
        // implicit reference
        R_iNsTr_13_930_sample_start_ <-& (EQ_u32_u1_927_update_completed_)
        R_iNsTr_13_930_sample_completed_ <-& (R_iNsTr_13_930_sample_start_)
        R_iNsTr_13_930_update_start_ <-& (R_iNsTr_13_930_sample_completed_)
        R_iNsTr_13_930_update_completed_ <-& (R_iNsTr_13_930_update_start_)
        // iNsTr_12
        $T[R_iNsTr_12_933_sample_start_] 
        $T[R_iNsTr_12_933_sample_completed_] 
        $T[R_iNsTr_12_933_update_start_] 
        $T[R_iNsTr_12_933_update_completed_] 
        // implicit reference
        R_iNsTr_12_933_sample_start_ <-& (ADD_u32_u32_921_update_completed_)
        R_iNsTr_12_933_sample_completed_ <-& (R_iNsTr_12_933_sample_start_)
        R_iNsTr_12_933_update_start_ <-& (R_iNsTr_12_933_sample_completed_)
        R_iNsTr_12_933_update_completed_ <-& (R_iNsTr_12_933_update_start_)
        MUX_934_sample_start_ <-& (R_iNsTr_13_930_update_completed_)
        MUX_934_sample_start_ <-& (R_iNsTr_12_933_update_completed_)
        ;;[MUX_934_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_934_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_934_sample_start_ &-> (MUX_934_start)
        MUX_934_sample_completed_ <-& (MUX_934_start)
        MUX_934_update_start_ &-> (MUX_934_complete)
        MUX_934_update_completed_ <-& (MUX_934_complete)
        MUX_934_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_14
        // iNsTr_14
        // implicit reference
        // 		DERIVbuff_ptr := iNsTr_14
        //  file prog.linked.opt.aa, line 365
        // Source expression
        // iNsTr_14
        $T[R_iNsTr_14_937_sample_start_] 
        $T[R_iNsTr_14_937_sample_completed_] 
        $T[R_iNsTr_14_937_update_start_] 
        $T[R_iNsTr_14_937_update_completed_] 
        // implicit reference
        R_iNsTr_14_937_sample_start_ <-& (MUX_934_update_completed_)
        R_iNsTr_14_937_sample_completed_ <-& (R_iNsTr_14_937_sample_start_)
        R_iNsTr_14_937_update_start_ <-& (R_iNsTr_14_937_sample_completed_)
        R_iNsTr_14_937_update_completed_ <-& (R_iNsTr_14_937_update_start_)
        // Target expression
        // (as target) DERIVbuff_ptr
        $T[STORE_DERIVbuff_ptr_936_sample_start_] 
        $T[STORE_DERIVbuff_ptr_936_sample_completed_] 
        $T[STORE_DERIVbuff_ptr_936_update_start_] 
        $T[STORE_DERIVbuff_ptr_936_update_completed_] 
        // DERIVbuff_ptr
        $T[STORE_DERIVbuff_ptr_936_word_address_calculated] 
        $T[STORE_DERIVbuff_ptr_936_root_address_calculated] 
        STORE_DERIVbuff_ptr_936_word_address_calculated <-& (STORE_DERIVbuff_ptr_936_root_address_calculated)
        ;;[STORE_DERIVbuff_ptr_936_Sample] 
        {
          ;;[STORE_DERIVbuff_ptr_936_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_DERIVbuff_ptr_936_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_DERIVbuff_ptr_936_sample_start_ <-& (STORE_DERIVbuff_ptr_936_word_address_calculated)
        STORE_DERIVbuff_ptr_936_sample_start_ &-> (STORE_DERIVbuff_ptr_936_Sample)
        STORE_DERIVbuff_ptr_936_sample_completed_ <-& (STORE_DERIVbuff_ptr_936_Sample)
        STORE_DERIVbuff_ptr_936_sample_completed_ &-> ($null)
        STORE_DERIVbuff_ptr_936_update_start_ &-> (STORE_DERIVbuff_ptr_936_Update)
        STORE_DERIVbuff_ptr_936_update_completed_ <-& (STORE_DERIVbuff_ptr_936_Update)
        STORE_DERIVbuff_ptr_936_sample_start_ <-& (R_iNsTr_14_937_update_completed_)
        // load-store dependencies..
        $T [ptr_deref_886_ptr_deref_914_delay] $delay
        // ->(iNsTr_7)(load) -> ->(iNsTr_7)(store)
        ptr_deref_914_sample_start_ <-& (ptr_deref_886_ptr_deref_914_delay)
        ptr_deref_886_ptr_deref_914_delay <-& (ptr_deref_886_sample_completed_)
        $T [LOAD_DERIVbuff_ptr_877_STORE_DERIVbuff_ptr_936_delay] $delay
        // DERIVbuff_ptr(load) -> DERIVbuff_ptr(store)
        STORE_DERIVbuff_ptr_936_sample_start_ <-& (LOAD_DERIVbuff_ptr_877_STORE_DERIVbuff_ptr_936_delay)
        LOAD_DERIVbuff_ptr_877_STORE_DERIVbuff_ptr_936_delay <-& (LOAD_DERIVbuff_ptr_877_sample_completed_)
      }
      assign_stmt_878_to_assign_stmt_938__entry__ |-> (assign_stmt_878_to_assign_stmt_938)
      assign_stmt_878_to_assign_stmt_938__exit__ <-| (assign_stmt_878_to_assign_stmt_938)
      ::[assign_stmt_941] 
      {
        // 		DERIVout_pipe := iNsTr_10
        //  file prog.linked.opt.aa, line 366
        // Source expression
        // iNsTr_10
        $T[R_iNsTr_10_940_sample_start_] 
        $T[R_iNsTr_10_940_sample_completed_] 
        $T[R_iNsTr_10_940_update_start_] 
        $T[R_iNsTr_10_940_update_completed_] 
        // implicit reference
        R_iNsTr_10_940_sample_start_ <-& ($entry)
        R_iNsTr_10_940_sample_completed_ <-& (R_iNsTr_10_940_sample_start_)
        R_iNsTr_10_940_update_start_ <-& (R_iNsTr_10_940_sample_completed_)
        R_iNsTr_10_940_update_completed_ <-& (R_iNsTr_10_940_update_start_)
        // Target expression
        // (as target) DERIVout_pipe
        $T[WPIPE_DERIVout_pipe_939_sample_start_] 
        $T[WPIPE_DERIVout_pipe_939_sample_completed_] 
        $T[WPIPE_DERIVout_pipe_939_update_start_] 
        $T[WPIPE_DERIVout_pipe_939_update_completed_] 
        ;;[WPIPE_DERIVout_pipe_939_Sample] 
        {
          // pipe write sample-start DERIVout_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DERIVout_pipe_939_Update] 
        {
          // pipe write update (complete) DERIVout_pipe
          $T [req] $T [ack] 
        }
        WPIPE_DERIVout_pipe_939_sample_start_ &-> (WPIPE_DERIVout_pipe_939_Sample)
        WPIPE_DERIVout_pipe_939_sample_completed_ <-& (WPIPE_DERIVout_pipe_939_Sample)
        WPIPE_DERIVout_pipe_939_sample_completed_ &-> ($null)
        WPIPE_DERIVout_pipe_939_update_start_ &-> (WPIPE_DERIVout_pipe_939_Update)
        WPIPE_DERIVout_pipe_939_update_completed_ <-& (WPIPE_DERIVout_pipe_939_Update)
        WPIPE_DERIVout_pipe_939_sample_start_ <-& (R_iNsTr_10_940_update_completed_)
        // barrier: 		DERIVout_pipe := iNsTr_10
        // load-store dependencies..
        // pipe read/write dependencies for pipe DERIVout_pipe
      }
      assign_stmt_941__entry__ |-> (assign_stmt_941)
      assign_stmt_941__exit__ <-| (assign_stmt_941)
      ::[assign_stmt_944] 
      {
        // 		iNsTr_19 := DERIVout_pipe
        //  file prog.linked.opt.aa, line 367
        // Source expression
        // DERIVout_pipe
        $T[RPIPE_DERIVout_pipe_943_sample_start_] 
        $T[RPIPE_DERIVout_pipe_943_sample_completed_] 
        $T[RPIPE_DERIVout_pipe_943_update_start_] 
        $T[RPIPE_DERIVout_pipe_943_update_completed_] 
        ;;[RPIPE_DERIVout_pipe_943_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DERIVout_pipe_943_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DERIVout_pipe_943_sample_start_ &-> (RPIPE_DERIVout_pipe_943_Sample)
        RPIPE_DERIVout_pipe_943_sample_completed_ <-& (RPIPE_DERIVout_pipe_943_Sample)
        RPIPE_DERIVout_pipe_943_sample_completed_ &-> ($null)
        RPIPE_DERIVout_pipe_943_update_start_ &-> (RPIPE_DERIVout_pipe_943_Update)
        RPIPE_DERIVout_pipe_943_update_completed_ <-& (RPIPE_DERIVout_pipe_943_Update)
        // Target expression
        // (as target) iNsTr_19
        // iNsTr_19
        // implicit reference
        // barrier: 		iNsTr_19 := DERIVout_pipe
        // load-store dependencies..
        // pipe read/write dependencies for pipe DERIVout_pipe
      }
      assign_stmt_944__entry__ |-> (assign_stmt_944)
      assign_stmt_944__exit__ <-| (assign_stmt_944)
      ::[assign_stmt_947_to_assign_stmt_980] 
      {
        // 		iNsTr_20 := WINbuff_ptr
        //  file prog.linked.opt.aa, line 368
        // Source expression
        // WINbuff_ptr
        $T[LOAD_WINbuff_ptr_946_sample_start_] 
        $T[LOAD_WINbuff_ptr_946_sample_completed_] 
        $T[LOAD_WINbuff_ptr_946_update_start_] 
        $T[LOAD_WINbuff_ptr_946_update_completed_] 
        $T[LOAD_WINbuff_ptr_946_sample_start_] 
        $T[LOAD_WINbuff_ptr_946_sample_completed_] 
        $T[LOAD_WINbuff_ptr_946_update_start_] 
        $T[LOAD_WINbuff_ptr_946_update_completed_] 
        $T[LOAD_WINbuff_ptr_946_word_address_calculated] 
        $T[LOAD_WINbuff_ptr_946_root_address_calculated] 
        LOAD_WINbuff_ptr_946_word_address_calculated <-& (LOAD_WINbuff_ptr_946_root_address_calculated)
        ;;[LOAD_WINbuff_ptr_946_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_WINbuff_ptr_946_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_WINbuff_ptr_946_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_WINbuff_ptr_946_sample_start_ <-& (LOAD_WINbuff_ptr_946_word_address_calculated)
        LOAD_WINbuff_ptr_946_sample_start_ &-> (LOAD_WINbuff_ptr_946_Sample)
        LOAD_WINbuff_ptr_946_sample_completed_ <-& (LOAD_WINbuff_ptr_946_Sample)
        LOAD_WINbuff_ptr_946_sample_completed_ &-> ($null)
        LOAD_WINbuff_ptr_946_update_start_ &-> (LOAD_WINbuff_ptr_946_Update)
        LOAD_WINbuff_ptr_946_update_completed_ <-& (LOAD_WINbuff_ptr_946_Update)
        // Target expression
        // (as target) iNsTr_20
        // iNsTr_20
        // implicit reference
        // 		iNsTr_21 := WINsum
        //  file prog.linked.opt.aa, line 369
        // Source expression
        // WINsum
        $T[LOAD_WINsum_949_sample_start_] 
        $T[LOAD_WINsum_949_sample_completed_] 
        $T[LOAD_WINsum_949_update_start_] 
        $T[LOAD_WINsum_949_update_completed_] 
        $T[LOAD_WINsum_949_sample_start_] 
        $T[LOAD_WINsum_949_sample_completed_] 
        $T[LOAD_WINsum_949_update_start_] 
        $T[LOAD_WINsum_949_update_completed_] 
        $T[LOAD_WINsum_949_word_address_calculated] 
        $T[LOAD_WINsum_949_root_address_calculated] 
        LOAD_WINsum_949_word_address_calculated <-& (LOAD_WINsum_949_root_address_calculated)
        ;;[LOAD_WINsum_949_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_WINsum_949_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_WINsum_949_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_WINsum_949_sample_start_ <-& (LOAD_WINsum_949_word_address_calculated)
        LOAD_WINsum_949_sample_start_ &-> (LOAD_WINsum_949_Sample)
        LOAD_WINsum_949_sample_completed_ <-& (LOAD_WINsum_949_Sample)
        LOAD_WINsum_949_sample_completed_ &-> ($null)
        LOAD_WINsum_949_update_start_ &-> (LOAD_WINsum_949_Update)
        LOAD_WINsum_949_update_completed_ <-& (LOAD_WINsum_949_Update)
        // Target expression
        // (as target) iNsTr_21
        // iNsTr_21
        // implicit reference
        // 		iNsTr_22 := @(WINbuff[iNsTr_20])
        //  file prog.linked.opt.aa, line 370
        // Source expression
        // @(WINbuff[iNsTr_20])
        $T[addr_of_954_sample_start_] 
        $T[addr_of_954_sample_completed_] 
        $T[addr_of_954_update_start_] 
        $T[addr_of_954_update_completed_] 
        $T[array_obj_ref_953_root_address_calculated] 
        $T[array_obj_ref_953_offset_calculated] 
        $T[array_obj_ref_953_index_resized_0] 
        $T[array_obj_ref_953_index_scaled_0] 
        // iNsTr_20
        $T[R_iNsTr_20_952_sample_start_] 
        $T[R_iNsTr_20_952_sample_completed_] 
        $T[R_iNsTr_20_952_update_start_] 
        $T[R_iNsTr_20_952_update_completed_] 
        // implicit reference
        R_iNsTr_20_952_sample_start_ <-& (LOAD_WINbuff_ptr_946_update_completed_)
        R_iNsTr_20_952_sample_completed_ <-& (R_iNsTr_20_952_sample_start_)
        R_iNsTr_20_952_update_start_ <-& (R_iNsTr_20_952_sample_completed_)
        R_iNsTr_20_952_update_completed_ <-& (R_iNsTr_20_952_update_start_)
        ;;[array_obj_ref_953_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        R_iNsTr_20_952_update_completed_ &-> (array_obj_ref_953_index_resize_0)
        array_obj_ref_953_index_resized_0 <-& (array_obj_ref_953_index_resize_0)
        ;;[array_obj_ref_953_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_953_index_resized_0 &-> (array_obj_ref_953_index_scale_0)
        array_obj_ref_953_index_scaled_0 <-& (array_obj_ref_953_index_scale_0)
        ;;[array_obj_ref_953_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_953_index_scaled_0 &-> (array_obj_ref_953_final_index_sum_regn)
        array_obj_ref_953_offset_calculated <-& (array_obj_ref_953_final_index_sum_regn)
        ;;[array_obj_ref_953_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_953_offset_calculated &-> (array_obj_ref_953_base_plus_offset)
        array_obj_ref_953_root_address_calculated <-& (array_obj_ref_953_base_plus_offset)
        ;;[addr_of_954_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_954_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_954_sample_start_ <-& (array_obj_ref_953_root_address_calculated)
        addr_of_954_sample_start_ &-> (addr_of_954_request)
        addr_of_954_sample_completed_ <-& (addr_of_954_request)
        addr_of_954_update_start_ &-> (addr_of_954_complete)
        addr_of_954_update_completed_ <-& (addr_of_954_complete)
        // Target expression
        // (as target) iNsTr_22
        // iNsTr_22
        // implicit reference
        // 		iNsTr_23 := ->(iNsTr_22)
        //  file prog.linked.opt.aa, line 371
        // Source expression
        // ->(iNsTr_22)
        $T[ptr_deref_958_sample_start_] 
        $T[ptr_deref_958_sample_completed_] 
        $T[ptr_deref_958_update_start_] 
        $T[ptr_deref_958_update_completed_] 
        $T[ptr_deref_958_base_address_calculated] 
        // iNsTr_22
        $T[R_iNsTr_22_957_sample_start_] 
        $T[R_iNsTr_22_957_sample_completed_] 
        $T[R_iNsTr_22_957_update_start_] 
        $T[R_iNsTr_22_957_update_completed_] 
        // implicit reference
        R_iNsTr_22_957_sample_start_ <-& (addr_of_954_update_completed_)
        R_iNsTr_22_957_sample_completed_ <-& (R_iNsTr_22_957_sample_start_)
        R_iNsTr_22_957_update_start_ <-& (R_iNsTr_22_957_sample_completed_)
        R_iNsTr_22_957_update_completed_ <-& (R_iNsTr_22_957_update_start_)
        $T[ptr_deref_958_word_address_calculated] 
        $T[ptr_deref_958_root_address_calculated] 
        $T[ptr_deref_958_base_address_resized] 
        ;;[ptr_deref_958_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_958_base_address_calculated &-> (ptr_deref_958_base_addr_resize)
        ptr_deref_958_base_address_resized <-& (ptr_deref_958_base_addr_resize)
        ;;[ptr_deref_958_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_958_base_address_resized &-> (ptr_deref_958_base_plus_offset)
        ptr_deref_958_root_address_calculated <-& (ptr_deref_958_base_plus_offset)
        ;;[ptr_deref_958_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_958_root_address_calculated &-> (ptr_deref_958_word_addrgen)
        ptr_deref_958_word_address_calculated <-& (ptr_deref_958_word_addrgen)
        ;;[ptr_deref_958_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_958_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_958_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_958_sample_start_ <-& (ptr_deref_958_word_address_calculated)
        ptr_deref_958_sample_start_ &-> (ptr_deref_958_Sample)
        ptr_deref_958_sample_completed_ <-& (ptr_deref_958_Sample)
        ptr_deref_958_sample_completed_ &-> ($null)
        ptr_deref_958_update_start_ &-> (ptr_deref_958_Update)
        ptr_deref_958_update_completed_ <-& (ptr_deref_958_Update)
        ptr_deref_958_base_address_calculated <-& (R_iNsTr_22_957_update_completed_)
        ptr_deref_958_sample_start_ <-& (ptr_deref_958_base_address_calculated)
        // Target expression
        // (as target) iNsTr_23
        // iNsTr_23
        // implicit reference
        // 		iNsTr_24 := (iNsTr_21 + iNsTr_19)
        //  file prog.linked.opt.aa, line 372
        // Source expression
        // (iNsTr_21 + iNsTr_19)
        $T[ADD_u32_u32_963_sample_start_] 
        $T[ADD_u32_u32_963_sample_completed_] 
        $T[ADD_u32_u32_963_update_start_] 
        $T[ADD_u32_u32_963_update_completed_] 
        // iNsTr_21
        $T[R_iNsTr_21_961_sample_start_] 
        $T[R_iNsTr_21_961_sample_completed_] 
        $T[R_iNsTr_21_961_update_start_] 
        $T[R_iNsTr_21_961_update_completed_] 
        // implicit reference
        R_iNsTr_21_961_sample_start_ <-& (LOAD_WINsum_949_update_completed_)
        R_iNsTr_21_961_sample_completed_ <-& (R_iNsTr_21_961_sample_start_)
        R_iNsTr_21_961_update_start_ <-& (R_iNsTr_21_961_sample_completed_)
        R_iNsTr_21_961_update_completed_ <-& (R_iNsTr_21_961_update_start_)
        // iNsTr_19
        $T[R_iNsTr_19_962_sample_start_] 
        $T[R_iNsTr_19_962_sample_completed_] 
        $T[R_iNsTr_19_962_update_start_] 
        $T[R_iNsTr_19_962_update_completed_] 
        // implicit reference
        R_iNsTr_19_962_sample_start_ <-& ($entry)
        R_iNsTr_19_962_sample_completed_ <-& (R_iNsTr_19_962_sample_start_)
        R_iNsTr_19_962_update_start_ <-& (R_iNsTr_19_962_sample_completed_)
        R_iNsTr_19_962_update_completed_ <-& (R_iNsTr_19_962_update_start_)
        ADD_u32_u32_963_sample_start_ <-& (R_iNsTr_21_961_update_completed_)
        ADD_u32_u32_963_sample_start_ <-& (R_iNsTr_19_962_update_completed_)
        ;;[ADD_u32_u32_963_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_963_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_963_sample_start_ &-> (ADD_u32_u32_963_Sample)
        ADD_u32_u32_963_sample_completed_ <-& (ADD_u32_u32_963_Sample)
        ADD_u32_u32_963_sample_completed_ &-> ($null)
        ADD_u32_u32_963_update_start_ &-> (ADD_u32_u32_963_Update)
        ADD_u32_u32_963_update_completed_ <-& (ADD_u32_u32_963_Update)
        // Target expression
        // (as target) iNsTr_24
        // iNsTr_24
        // implicit reference
        // 		iNsTr_25 := (iNsTr_24 - iNsTr_23)
        //  file prog.linked.opt.aa, line 373
        // Source expression
        // (iNsTr_24 - iNsTr_23)
        $T[SUB_u32_u32_968_sample_start_] 
        $T[SUB_u32_u32_968_sample_completed_] 
        $T[SUB_u32_u32_968_update_start_] 
        $T[SUB_u32_u32_968_update_completed_] 
        // iNsTr_24
        $T[R_iNsTr_24_966_sample_start_] 
        $T[R_iNsTr_24_966_sample_completed_] 
        $T[R_iNsTr_24_966_update_start_] 
        $T[R_iNsTr_24_966_update_completed_] 
        // implicit reference
        R_iNsTr_24_966_sample_start_ <-& (ADD_u32_u32_963_update_completed_)
        R_iNsTr_24_966_sample_completed_ <-& (R_iNsTr_24_966_sample_start_)
        R_iNsTr_24_966_update_start_ <-& (R_iNsTr_24_966_sample_completed_)
        R_iNsTr_24_966_update_completed_ <-& (R_iNsTr_24_966_update_start_)
        // iNsTr_23
        $T[R_iNsTr_23_967_sample_start_] 
        $T[R_iNsTr_23_967_sample_completed_] 
        $T[R_iNsTr_23_967_update_start_] 
        $T[R_iNsTr_23_967_update_completed_] 
        // implicit reference
        R_iNsTr_23_967_sample_start_ <-& (ptr_deref_958_update_completed_)
        R_iNsTr_23_967_sample_completed_ <-& (R_iNsTr_23_967_sample_start_)
        R_iNsTr_23_967_update_start_ <-& (R_iNsTr_23_967_sample_completed_)
        R_iNsTr_23_967_update_completed_ <-& (R_iNsTr_23_967_update_start_)
        SUB_u32_u32_968_sample_start_ <-& (R_iNsTr_24_966_update_completed_)
        SUB_u32_u32_968_sample_start_ <-& (R_iNsTr_23_967_update_completed_)
        ;;[SUB_u32_u32_968_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_968_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_968_sample_start_ &-> (SUB_u32_u32_968_Sample)
        SUB_u32_u32_968_sample_completed_ <-& (SUB_u32_u32_968_Sample)
        SUB_u32_u32_968_sample_completed_ &-> ($null)
        SUB_u32_u32_968_update_start_ &-> (SUB_u32_u32_968_Update)
        SUB_u32_u32_968_update_completed_ <-& (SUB_u32_u32_968_Update)
        // Target expression
        // (as target) iNsTr_25
        // iNsTr_25
        // implicit reference
        // 		WINsum := iNsTr_25
        //  file prog.linked.opt.aa, line 374
        // Source expression
        // iNsTr_25
        $T[R_iNsTr_25_971_sample_start_] 
        $T[R_iNsTr_25_971_sample_completed_] 
        $T[R_iNsTr_25_971_update_start_] 
        $T[R_iNsTr_25_971_update_completed_] 
        // implicit reference
        R_iNsTr_25_971_sample_start_ <-& (SUB_u32_u32_968_update_completed_)
        R_iNsTr_25_971_sample_completed_ <-& (R_iNsTr_25_971_sample_start_)
        R_iNsTr_25_971_update_start_ <-& (R_iNsTr_25_971_sample_completed_)
        R_iNsTr_25_971_update_completed_ <-& (R_iNsTr_25_971_update_start_)
        // Target expression
        // (as target) WINsum
        $T[STORE_WINsum_970_sample_start_] 
        $T[STORE_WINsum_970_sample_completed_] 
        $T[STORE_WINsum_970_update_start_] 
        $T[STORE_WINsum_970_update_completed_] 
        // WINsum
        $T[STORE_WINsum_970_word_address_calculated] 
        $T[STORE_WINsum_970_root_address_calculated] 
        STORE_WINsum_970_word_address_calculated <-& (STORE_WINsum_970_root_address_calculated)
        ;;[STORE_WINsum_970_Sample] 
        {
          ;;[STORE_WINsum_970_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_WINsum_970_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_WINsum_970_sample_start_ <-& (STORE_WINsum_970_word_address_calculated)
        STORE_WINsum_970_sample_start_ &-> (STORE_WINsum_970_Sample)
        STORE_WINsum_970_sample_completed_ <-& (STORE_WINsum_970_Sample)
        STORE_WINsum_970_sample_completed_ &-> ($null)
        STORE_WINsum_970_update_start_ &-> (STORE_WINsum_970_Update)
        STORE_WINsum_970_update_completed_ <-& (STORE_WINsum_970_Update)
        STORE_WINsum_970_sample_start_ <-& (R_iNsTr_25_971_update_completed_)
        // 		iNsTr_27 := (($bitcast ($int<32>) iNsTr_25 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000001111101000000000000  ) ))
        //  file prog.linked.opt.aa, line 375
        // Source expression
        // (($bitcast ($int<32>) iNsTr_25 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000001111101000000000000  ) ))
        $T[SGT_i32_u1_979_sample_start_] 
        $T[SGT_i32_u1_979_sample_completed_] 
        $T[SGT_i32_u1_979_update_start_] 
        $T[SGT_i32_u1_979_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_25 )
        $T[type_cast_975_sample_start_] 
        $T[type_cast_975_sample_completed_] 
        $T[type_cast_975_update_start_] 
        $T[type_cast_975_update_completed_] 
        // iNsTr_25
        $T[R_iNsTr_25_974_sample_start_] 
        $T[R_iNsTr_25_974_sample_completed_] 
        $T[R_iNsTr_25_974_update_start_] 
        $T[R_iNsTr_25_974_update_completed_] 
        // implicit reference
        R_iNsTr_25_974_sample_start_ <-& (SUB_u32_u32_968_update_completed_)
        R_iNsTr_25_974_sample_completed_ <-& (R_iNsTr_25_974_sample_start_)
        R_iNsTr_25_974_update_start_ <-& (R_iNsTr_25_974_sample_completed_)
        R_iNsTr_25_974_update_completed_ <-& (R_iNsTr_25_974_update_start_)
        type_cast_975_sample_start_ <-& (R_iNsTr_25_974_update_completed_)
        ;;[type_cast_975_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_975_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_975_sample_start_ &-> (type_cast_975_Sample)
        type_cast_975_sample_completed_ <-& (type_cast_975_Sample)
        type_cast_975_sample_completed_ &-> ($null)
        type_cast_975_update_start_ &-> (type_cast_975_Update)
        type_cast_975_update_completed_ <-& (type_cast_975_Update)
        // flow-through
        type_cast_975_update_start_ <-& (type_cast_975_sample_completed_)
        SGT_i32_u1_979_sample_start_ <-& (type_cast_975_update_completed_)
        ;;[SGT_i32_u1_979_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_979_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_979_sample_start_ &-> (SGT_i32_u1_979_Sample)
        SGT_i32_u1_979_sample_completed_ <-& (SGT_i32_u1_979_Sample)
        SGT_i32_u1_979_sample_completed_ &-> ($null)
        SGT_i32_u1_979_update_start_ &-> (SGT_i32_u1_979_Update)
        SGT_i32_u1_979_update_completed_ <-& (SGT_i32_u1_979_Update)
        // Target expression
        // (as target) iNsTr_27
        // iNsTr_27
        // implicit reference
        // load-store dependencies..
        $T [LOAD_WINsum_949_STORE_WINsum_970_delay] $delay
        // WINsum(load) -> WINsum(store)
        STORE_WINsum_970_sample_start_ <-& (LOAD_WINsum_949_STORE_WINsum_970_delay)
        LOAD_WINsum_949_STORE_WINsum_970_delay <-& (LOAD_WINsum_949_sample_completed_)
      }
      assign_stmt_947_to_assign_stmt_980__entry__ |-> (assign_stmt_947_to_assign_stmt_980)
      assign_stmt_947_to_assign_stmt_980__exit__ <-| (assign_stmt_947_to_assign_stmt_980)
      // if-statement  
      //  file prog.linked.opt.aa, line 376
      ;;[if_stmt_981_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_981__entry__ |-> (if_stmt_981_dead_link)
      if_stmt_981__exit__ <-| (if_stmt_981_dead_link)
      ;;[if_stmt_981_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_981__entry__ |-> (if_stmt_981_eval_test)
      $P [R_iNsTr_27_982_place]
      R_iNsTr_27_982_place <-| (if_stmt_981_eval_test)
      ;;[if_stmt_981_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_981_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_27_982_place |-> (if_stmt_981_if_link if_stmt_981_else_link)
      $P [bb_8_mvWinx_xexit]
      bb_8_mvWinx_xexit <-| (if_stmt_981_if_link)
      $P [bb_8_bb_9]
      bb_8_bb_9 <-| (if_stmt_981_else_link)
      ::[assign_stmt_993] 
      {
        // 		iNsTr_38 := (iNsTr_25 < ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
        //  file prog.linked.opt.aa, line 383
        // Source expression
        // (iNsTr_25 < ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
        $T[ULT_u32_u1_992_sample_start_] 
        $T[ULT_u32_u1_992_sample_completed_] 
        $T[ULT_u32_u1_992_update_start_] 
        $T[ULT_u32_u1_992_update_completed_] 
        // iNsTr_25
        $T[R_iNsTr_25_989_sample_start_] 
        $T[R_iNsTr_25_989_sample_completed_] 
        $T[R_iNsTr_25_989_update_start_] 
        $T[R_iNsTr_25_989_update_completed_] 
        // implicit reference
        R_iNsTr_25_989_sample_start_ <-& ($entry)
        R_iNsTr_25_989_sample_completed_ <-& (R_iNsTr_25_989_sample_start_)
        R_iNsTr_25_989_update_start_ <-& (R_iNsTr_25_989_sample_completed_)
        R_iNsTr_25_989_update_completed_ <-& (R_iNsTr_25_989_update_start_)
        ULT_u32_u1_992_sample_start_ <-& (R_iNsTr_25_989_update_completed_)
        ;;[ULT_u32_u1_992_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_992_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_992_sample_start_ &-> (ULT_u32_u1_992_Sample)
        ULT_u32_u1_992_sample_completed_ <-& (ULT_u32_u1_992_Sample)
        ULT_u32_u1_992_sample_completed_ &-> ($null)
        ULT_u32_u1_992_update_start_ &-> (ULT_u32_u1_992_Update)
        ULT_u32_u1_992_update_completed_ <-& (ULT_u32_u1_992_Update)
        // Target expression
        // (as target) iNsTr_38
        // iNsTr_38
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_993__entry__ |-> (assign_stmt_993)
      assign_stmt_993__exit__ <-| (assign_stmt_993)
      // if-statement  
      //  file prog.linked.opt.aa, line 384
      ;;[if_stmt_994_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_994__entry__ |-> (if_stmt_994_dead_link)
      if_stmt_994__exit__ <-| (if_stmt_994_dead_link)
      ;;[if_stmt_994_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_994__entry__ |-> (if_stmt_994_eval_test)
      $P [R_iNsTr_38_995_place]
      R_iNsTr_38_995_place <-| (if_stmt_994_eval_test)
      ;;[if_stmt_994_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_994_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_38_995_place |-> (if_stmt_994_if_link if_stmt_994_else_link)
      $P [bb_9_mvWinx_xexit]
      bb_9_mvWinx_xexit <-| (if_stmt_994_if_link)
      $P [bb_9_bbx_xnph6x_xix_xpreheaderx_xi]
      bb_9_bbx_xnph6x_xix_xpreheaderx_xi <-| (if_stmt_994_else_link)
      ::[assign_stmt_1005] 
      {
        // 		iNsTr_45 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_25 ) )
        //  file prog.linked.opt.aa, line 391
        // Source expression
        // ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_25 ) )
        $T[type_cast_1004_sample_start_] 
        $T[type_cast_1004_sample_completed_] 
        $T[type_cast_1004_update_start_] 
        $T[type_cast_1004_update_completed_] 
        // ($cast ($int<64>) iNsTr_25 )
        $T[type_cast_1003_sample_start_] 
        $T[type_cast_1003_sample_completed_] 
        $T[type_cast_1003_update_start_] 
        $T[type_cast_1003_update_completed_] 
        // iNsTr_25
        $T[R_iNsTr_25_1002_sample_start_] 
        $T[R_iNsTr_25_1002_sample_completed_] 
        $T[R_iNsTr_25_1002_update_start_] 
        $T[R_iNsTr_25_1002_update_completed_] 
        // implicit reference
        R_iNsTr_25_1002_sample_start_ <-& ($entry)
        R_iNsTr_25_1002_sample_completed_ <-& (R_iNsTr_25_1002_sample_start_)
        R_iNsTr_25_1002_update_start_ <-& (R_iNsTr_25_1002_sample_completed_)
        R_iNsTr_25_1002_update_completed_ <-& (R_iNsTr_25_1002_update_start_)
        type_cast_1003_sample_start_ <-& (R_iNsTr_25_1002_update_completed_)
        ;;[type_cast_1003_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1003_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1003_sample_start_ &-> (type_cast_1003_Sample)
        type_cast_1003_sample_completed_ <-& (type_cast_1003_Sample)
        type_cast_1003_sample_completed_ &-> ($null)
        type_cast_1003_update_start_ &-> (type_cast_1003_Update)
        type_cast_1003_update_completed_ <-& (type_cast_1003_Update)
        type_cast_1004_sample_start_ <-& (type_cast_1003_update_completed_)
        ;;[type_cast_1004_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1004_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1004_sample_start_ &-> (type_cast_1004_Sample)
        type_cast_1004_sample_completed_ <-& (type_cast_1004_Sample)
        type_cast_1004_sample_completed_ &-> ($null)
        type_cast_1004_update_start_ &-> (type_cast_1004_Update)
        type_cast_1004_update_completed_ <-& (type_cast_1004_Update)
        // Target expression
        // (as target) iNsTr_45
        // iNsTr_45
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1005__entry__ |-> (assign_stmt_1005)
      assign_stmt_1005__exit__ <-| (assign_stmt_1005)
      ::[assign_stmt_1027_to_assign_stmt_1033] 
      {
        // 		iNsTr_48 := (xx_x05x_xix_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 397
        // Source expression
        // (xx_x05x_xix_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[LSHR_u64_u64_1026_sample_start_] 
        $T[LSHR_u64_u64_1026_sample_completed_] 
        $T[LSHR_u64_u64_1026_update_start_] 
        $T[LSHR_u64_u64_1026_update_completed_] 
        // xx_x05x_xix_xi
        $T[R_xx_x05x_xix_xi_1023_sample_start_] 
        $T[R_xx_x05x_xix_xi_1023_sample_completed_] 
        $T[R_xx_x05x_xix_xi_1023_update_start_] 
        $T[R_xx_x05x_xix_xi_1023_update_completed_] 
        // implicit reference
        R_xx_x05x_xix_xi_1023_sample_start_ <-& ($entry)
        R_xx_x05x_xix_xi_1023_sample_completed_ <-& (R_xx_x05x_xix_xi_1023_sample_start_)
        R_xx_x05x_xix_xi_1023_update_start_ <-& (R_xx_x05x_xix_xi_1023_sample_completed_)
        R_xx_x05x_xix_xi_1023_update_completed_ <-& (R_xx_x05x_xix_xi_1023_update_start_)
        LSHR_u64_u64_1026_sample_start_ <-& (R_xx_x05x_xix_xi_1023_update_completed_)
        ;;[LSHR_u64_u64_1026_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u64_u64_1026_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u64_u64_1026_sample_start_ &-> (LSHR_u64_u64_1026_Sample)
        LSHR_u64_u64_1026_sample_completed_ <-& (LSHR_u64_u64_1026_Sample)
        LSHR_u64_u64_1026_sample_completed_ &-> ($null)
        LSHR_u64_u64_1026_update_start_ &-> (LSHR_u64_u64_1026_Update)
        LSHR_u64_u64_1026_update_completed_ <-& (LSHR_u64_u64_1026_Update)
        // Target expression
        // (as target) iNsTr_48
        // iNsTr_48
        // implicit reference
        // 		iNsTr_49 := (iNsTr_48 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
        //  file prog.linked.opt.aa, line 398
        // Source expression
        // (iNsTr_48 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
        $T[UGT_u64_u1_1032_sample_start_] 
        $T[UGT_u64_u1_1032_sample_completed_] 
        $T[UGT_u64_u1_1032_update_start_] 
        $T[UGT_u64_u1_1032_update_completed_] 
        // iNsTr_48
        $T[R_iNsTr_48_1029_sample_start_] 
        $T[R_iNsTr_48_1029_sample_completed_] 
        $T[R_iNsTr_48_1029_update_start_] 
        $T[R_iNsTr_48_1029_update_completed_] 
        // implicit reference
        R_iNsTr_48_1029_sample_start_ <-& (LSHR_u64_u64_1026_update_completed_)
        R_iNsTr_48_1029_sample_completed_ <-& (R_iNsTr_48_1029_sample_start_)
        R_iNsTr_48_1029_update_start_ <-& (R_iNsTr_48_1029_sample_completed_)
        R_iNsTr_48_1029_update_completed_ <-& (R_iNsTr_48_1029_update_start_)
        UGT_u64_u1_1032_sample_start_ <-& (R_iNsTr_48_1029_update_completed_)
        ;;[UGT_u64_u1_1032_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u64_u1_1032_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u64_u1_1032_sample_start_ &-> (UGT_u64_u1_1032_Sample)
        UGT_u64_u1_1032_sample_completed_ <-& (UGT_u64_u1_1032_Sample)
        UGT_u64_u1_1032_sample_completed_ &-> ($null)
        UGT_u64_u1_1032_update_start_ &-> (UGT_u64_u1_1032_Update)
        UGT_u64_u1_1032_update_completed_ <-& (UGT_u64_u1_1032_Update)
        // Target expression
        // (as target) iNsTr_49
        // iNsTr_49
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1027_to_assign_stmt_1033__entry__ |-> (assign_stmt_1027_to_assign_stmt_1033)
      assign_stmt_1027_to_assign_stmt_1033__exit__ <-| (assign_stmt_1027_to_assign_stmt_1033)
      // if-statement  
      //  file prog.linked.opt.aa, line 399
      ;;[if_stmt_1034_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1034__entry__ |-> (if_stmt_1034_dead_link)
      if_stmt_1034__exit__ <-| (if_stmt_1034_dead_link)
      ;;[if_stmt_1034_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1034__entry__ |-> (if_stmt_1034_eval_test)
      $P [R_iNsTr_49_1035_place]
      R_iNsTr_49_1035_place <-| (if_stmt_1034_eval_test)
      ;;[if_stmt_1034_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1034_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_49_1035_place |-> (if_stmt_1034_if_link if_stmt_1034_else_link)
      $P [bbx_xnph6x_xix_xi_bbx_xnphx_xix_xix_xpreheader]
      bbx_xnph6x_xix_xi_bbx_xnphx_xix_xix_xpreheader <-| (if_stmt_1034_if_link)
      $P [bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi]
      bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi <-| (if_stmt_1034_else_link)
      ::[assign_stmt_1063_to_assign_stmt_1074] 
      {
        // 		iNsTr_61 := (shifted_divisorx_x02x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 411
        // Source expression
        // (shifted_divisorx_x02x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[SHL_u64_u64_1062_sample_start_] 
        $T[SHL_u64_u64_1062_sample_completed_] 
        $T[SHL_u64_u64_1062_update_start_] 
        $T[SHL_u64_u64_1062_update_completed_] 
        // shifted_divisorx_x02x_xix_xi
        $T[R_shifted_divisorx_x02x_xix_xi_1059_sample_start_] 
        $T[R_shifted_divisorx_x02x_xix_xi_1059_sample_completed_] 
        $T[R_shifted_divisorx_x02x_xix_xi_1059_update_start_] 
        $T[R_shifted_divisorx_x02x_xix_xi_1059_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x02x_xix_xi_1059_sample_start_ <-& ($entry)
        R_shifted_divisorx_x02x_xix_xi_1059_sample_completed_ <-& (R_shifted_divisorx_x02x_xix_xi_1059_sample_start_)
        R_shifted_divisorx_x02x_xix_xi_1059_update_start_ <-& (R_shifted_divisorx_x02x_xix_xi_1059_sample_completed_)
        R_shifted_divisorx_x02x_xix_xi_1059_update_completed_ <-& (R_shifted_divisorx_x02x_xix_xi_1059_update_start_)
        SHL_u64_u64_1062_sample_start_ <-& (R_shifted_divisorx_x02x_xix_xi_1059_update_completed_)
        ;;[SHL_u64_u64_1062_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u64_u64_1062_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u64_u64_1062_sample_start_ &-> (SHL_u64_u64_1062_Sample)
        SHL_u64_u64_1062_sample_completed_ <-& (SHL_u64_u64_1062_Sample)
        SHL_u64_u64_1062_sample_completed_ &-> ($null)
        SHL_u64_u64_1062_update_start_ &-> (SHL_u64_u64_1062_Update)
        SHL_u64_u64_1062_update_completed_ <-& (SHL_u64_u64_1062_Update)
        // Target expression
        // (as target) iNsTr_61
        // iNsTr_61
        // implicit reference
        // 		iNsTr_62 := (curr_quotientx_x01x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 412
        // Source expression
        // (curr_quotientx_x01x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[SHL_u64_u64_1068_sample_start_] 
        $T[SHL_u64_u64_1068_sample_completed_] 
        $T[SHL_u64_u64_1068_update_start_] 
        $T[SHL_u64_u64_1068_update_completed_] 
        // curr_quotientx_x01x_xix_xi
        $T[R_curr_quotientx_x01x_xix_xi_1065_sample_start_] 
        $T[R_curr_quotientx_x01x_xix_xi_1065_sample_completed_] 
        $T[R_curr_quotientx_x01x_xix_xi_1065_update_start_] 
        $T[R_curr_quotientx_x01x_xix_xi_1065_update_completed_] 
        // implicit reference
        R_curr_quotientx_x01x_xix_xi_1065_sample_start_ <-& ($entry)
        R_curr_quotientx_x01x_xix_xi_1065_sample_completed_ <-& (R_curr_quotientx_x01x_xix_xi_1065_sample_start_)
        R_curr_quotientx_x01x_xix_xi_1065_update_start_ <-& (R_curr_quotientx_x01x_xix_xi_1065_sample_completed_)
        R_curr_quotientx_x01x_xix_xi_1065_update_completed_ <-& (R_curr_quotientx_x01x_xix_xi_1065_update_start_)
        SHL_u64_u64_1068_sample_start_ <-& (R_curr_quotientx_x01x_xix_xi_1065_update_completed_)
        ;;[SHL_u64_u64_1068_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u64_u64_1068_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u64_u64_1068_sample_start_ &-> (SHL_u64_u64_1068_Sample)
        SHL_u64_u64_1068_sample_completed_ <-& (SHL_u64_u64_1068_Sample)
        SHL_u64_u64_1068_sample_completed_ &-> ($null)
        SHL_u64_u64_1068_update_start_ &-> (SHL_u64_u64_1068_Update)
        SHL_u64_u64_1068_update_completed_ <-& (SHL_u64_u64_1068_Update)
        // Target expression
        // (as target) iNsTr_62
        // iNsTr_62
        // implicit reference
        // 		iNsTr_63 := (iNsTr_61 < iNsTr_48)
        //  file prog.linked.opt.aa, line 413
        // Source expression
        // (iNsTr_61 < iNsTr_48)
        $T[ULT_u64_u1_1073_sample_start_] 
        $T[ULT_u64_u1_1073_sample_completed_] 
        $T[ULT_u64_u1_1073_update_start_] 
        $T[ULT_u64_u1_1073_update_completed_] 
        // iNsTr_61
        $T[R_iNsTr_61_1071_sample_start_] 
        $T[R_iNsTr_61_1071_sample_completed_] 
        $T[R_iNsTr_61_1071_update_start_] 
        $T[R_iNsTr_61_1071_update_completed_] 
        // implicit reference
        R_iNsTr_61_1071_sample_start_ <-& (SHL_u64_u64_1062_update_completed_)
        R_iNsTr_61_1071_sample_completed_ <-& (R_iNsTr_61_1071_sample_start_)
        R_iNsTr_61_1071_update_start_ <-& (R_iNsTr_61_1071_sample_completed_)
        R_iNsTr_61_1071_update_completed_ <-& (R_iNsTr_61_1071_update_start_)
        // iNsTr_48
        $T[R_iNsTr_48_1072_sample_start_] 
        $T[R_iNsTr_48_1072_sample_completed_] 
        $T[R_iNsTr_48_1072_update_start_] 
        $T[R_iNsTr_48_1072_update_completed_] 
        // implicit reference
        R_iNsTr_48_1072_sample_start_ <-& ($entry)
        R_iNsTr_48_1072_sample_completed_ <-& (R_iNsTr_48_1072_sample_start_)
        R_iNsTr_48_1072_update_start_ <-& (R_iNsTr_48_1072_sample_completed_)
        R_iNsTr_48_1072_update_completed_ <-& (R_iNsTr_48_1072_update_start_)
        ULT_u64_u1_1073_sample_start_ <-& (R_iNsTr_61_1071_update_completed_)
        ULT_u64_u1_1073_sample_start_ <-& (R_iNsTr_48_1072_update_completed_)
        ;;[ULT_u64_u1_1073_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u64_u1_1073_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u64_u1_1073_sample_start_ &-> (ULT_u64_u1_1073_Sample)
        ULT_u64_u1_1073_sample_completed_ <-& (ULT_u64_u1_1073_Sample)
        ULT_u64_u1_1073_sample_completed_ &-> ($null)
        ULT_u64_u1_1073_update_start_ &-> (ULT_u64_u1_1073_Update)
        ULT_u64_u1_1073_update_completed_ <-& (ULT_u64_u1_1073_Update)
        // Target expression
        // (as target) iNsTr_63
        // iNsTr_63
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1063_to_assign_stmt_1074__entry__ |-> (assign_stmt_1063_to_assign_stmt_1074)
      assign_stmt_1063_to_assign_stmt_1074__exit__ <-| (assign_stmt_1063_to_assign_stmt_1074)
      // if-statement  
      //  file prog.linked.opt.aa, line 414
      ;;[if_stmt_1075_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1075__entry__ |-> (if_stmt_1075_dead_link)
      if_stmt_1075__exit__ <-| (if_stmt_1075_dead_link)
      ;;[if_stmt_1075_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1075__entry__ |-> (if_stmt_1075_eval_test)
      $P [R_iNsTr_63_1076_place]
      R_iNsTr_63_1076_place <-| (if_stmt_1075_eval_test)
      ;;[if_stmt_1075_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1075_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_63_1076_place |-> (if_stmt_1075_if_link if_stmt_1075_else_link)
      $P [bbx_xnphx_xix_xi_bbx_xnphx_xix_xi]
      bbx_xnphx_xix_xi_bbx_xnphx_xix_xi <-| (if_stmt_1075_if_link)
      $P [bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit]
      bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit <-| (if_stmt_1075_else_link)
      ::[assign_stmt_1112_to_assign_stmt_1123] 
      {
        // 		iNsTr_56 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x04x_xix_xi)
        //  file prog.linked.opt.aa, line 428
        // Source expression
        // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x04x_xix_xi)
        $T[ADD_u64_u64_1111_sample_start_] 
        $T[ADD_u64_u64_1111_sample_completed_] 
        $T[ADD_u64_u64_1111_update_start_] 
        $T[ADD_u64_u64_1111_update_completed_] 
        // curr_quotientx_x0x_xlcssax_xix_xi
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_1109_sample_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_1109_sample_completed_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_1109_update_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_1109_update_completed_] 
        // implicit reference
        R_curr_quotientx_x0x_xlcssax_xix_xi_1109_sample_start_ <-& ($entry)
        R_curr_quotientx_x0x_xlcssax_xix_xi_1109_sample_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_1109_sample_start_)
        R_curr_quotientx_x0x_xlcssax_xix_xi_1109_update_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_1109_sample_completed_)
        R_curr_quotientx_x0x_xlcssax_xix_xi_1109_update_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_1109_update_start_)
        // quotientx_x04x_xix_xi
        $T[R_quotientx_x04x_xix_xi_1110_sample_start_] 
        $T[R_quotientx_x04x_xix_xi_1110_sample_completed_] 
        $T[R_quotientx_x04x_xix_xi_1110_update_start_] 
        $T[R_quotientx_x04x_xix_xi_1110_update_completed_] 
        // implicit reference
        R_quotientx_x04x_xix_xi_1110_sample_start_ <-& ($entry)
        R_quotientx_x04x_xix_xi_1110_sample_completed_ <-& (R_quotientx_x04x_xix_xi_1110_sample_start_)
        R_quotientx_x04x_xix_xi_1110_update_start_ <-& (R_quotientx_x04x_xix_xi_1110_sample_completed_)
        R_quotientx_x04x_xix_xi_1110_update_completed_ <-& (R_quotientx_x04x_xix_xi_1110_update_start_)
        ADD_u64_u64_1111_sample_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_1109_update_completed_)
        ADD_u64_u64_1111_sample_start_ <-& (R_quotientx_x04x_xix_xi_1110_update_completed_)
        ;;[ADD_u64_u64_1111_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_1111_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_1111_sample_start_ &-> (ADD_u64_u64_1111_Sample)
        ADD_u64_u64_1111_sample_completed_ <-& (ADD_u64_u64_1111_Sample)
        ADD_u64_u64_1111_sample_completed_ &-> ($null)
        ADD_u64_u64_1111_update_start_ &-> (ADD_u64_u64_1111_Update)
        ADD_u64_u64_1111_update_completed_ <-& (ADD_u64_u64_1111_Update)
        // Target expression
        // (as target) iNsTr_56
        // iNsTr_56
        // implicit reference
        // 		iNsTr_57 := (xx_x05x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
        //  file prog.linked.opt.aa, line 429
        // Source expression
        // (xx_x05x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
        $T[SUB_u64_u64_1116_sample_start_] 
        $T[SUB_u64_u64_1116_sample_completed_] 
        $T[SUB_u64_u64_1116_update_start_] 
        $T[SUB_u64_u64_1116_update_completed_] 
        // xx_x05x_xix_xi
        $T[R_xx_x05x_xix_xi_1114_sample_start_] 
        $T[R_xx_x05x_xix_xi_1114_sample_completed_] 
        $T[R_xx_x05x_xix_xi_1114_update_start_] 
        $T[R_xx_x05x_xix_xi_1114_update_completed_] 
        // implicit reference
        R_xx_x05x_xix_xi_1114_sample_start_ <-& ($entry)
        R_xx_x05x_xix_xi_1114_sample_completed_ <-& (R_xx_x05x_xix_xi_1114_sample_start_)
        R_xx_x05x_xix_xi_1114_update_start_ <-& (R_xx_x05x_xix_xi_1114_sample_completed_)
        R_xx_x05x_xix_xi_1114_update_completed_ <-& (R_xx_x05x_xix_xi_1114_update_start_)
        // shifted_divisorx_x0x_xlcssax_xix_xi
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_1115_sample_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_1115_sample_completed_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_1115_update_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_1115_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x0x_xlcssax_xix_xi_1115_sample_start_ <-& ($entry)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_1115_sample_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_1115_sample_start_)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_1115_update_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_1115_sample_completed_)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_1115_update_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_1115_update_start_)
        SUB_u64_u64_1116_sample_start_ <-& (R_xx_x05x_xix_xi_1114_update_completed_)
        SUB_u64_u64_1116_sample_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_1115_update_completed_)
        ;;[SUB_u64_u64_1116_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u64_u64_1116_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u64_u64_1116_sample_start_ &-> (SUB_u64_u64_1116_Sample)
        SUB_u64_u64_1116_sample_completed_ <-& (SUB_u64_u64_1116_Sample)
        SUB_u64_u64_1116_sample_completed_ &-> ($null)
        SUB_u64_u64_1116_update_start_ &-> (SUB_u64_u64_1116_Update)
        SUB_u64_u64_1116_update_completed_ <-& (SUB_u64_u64_1116_Update)
        // Target expression
        // (as target) iNsTr_57
        // iNsTr_57
        // implicit reference
        // 		iNsTr_58 := (iNsTr_57 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
        //  file prog.linked.opt.aa, line 430
        // Source expression
        // (iNsTr_57 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
        $T[ULT_u64_u1_1122_sample_start_] 
        $T[ULT_u64_u1_1122_sample_completed_] 
        $T[ULT_u64_u1_1122_update_start_] 
        $T[ULT_u64_u1_1122_update_completed_] 
        // iNsTr_57
        $T[R_iNsTr_57_1119_sample_start_] 
        $T[R_iNsTr_57_1119_sample_completed_] 
        $T[R_iNsTr_57_1119_update_start_] 
        $T[R_iNsTr_57_1119_update_completed_] 
        // implicit reference
        R_iNsTr_57_1119_sample_start_ <-& (SUB_u64_u64_1116_update_completed_)
        R_iNsTr_57_1119_sample_completed_ <-& (R_iNsTr_57_1119_sample_start_)
        R_iNsTr_57_1119_update_start_ <-& (R_iNsTr_57_1119_sample_completed_)
        R_iNsTr_57_1119_update_completed_ <-& (R_iNsTr_57_1119_update_start_)
        ULT_u64_u1_1122_sample_start_ <-& (R_iNsTr_57_1119_update_completed_)
        ;;[ULT_u64_u1_1122_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u64_u1_1122_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u64_u1_1122_sample_start_ &-> (ULT_u64_u1_1122_Sample)
        ULT_u64_u1_1122_sample_completed_ <-& (ULT_u64_u1_1122_Sample)
        ULT_u64_u1_1122_sample_completed_ &-> ($null)
        ULT_u64_u1_1122_update_start_ &-> (ULT_u64_u1_1122_Update)
        ULT_u64_u1_1122_update_completed_ <-& (ULT_u64_u1_1122_Update)
        // Target expression
        // (as target) iNsTr_58
        // iNsTr_58
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1112_to_assign_stmt_1123__entry__ |-> (assign_stmt_1112_to_assign_stmt_1123)
      assign_stmt_1112_to_assign_stmt_1123__exit__ <-| (assign_stmt_1112_to_assign_stmt_1123)
      // if-statement  
      //  file prog.linked.opt.aa, line 431
      ;;[if_stmt_1124_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1124__entry__ |-> (if_stmt_1124_dead_link)
      if_stmt_1124__exit__ <-| (if_stmt_1124_dead_link)
      ;;[if_stmt_1124_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1124__entry__ |-> (if_stmt_1124_eval_test)
      $P [R_iNsTr_58_1125_place]
      R_iNsTr_58_1125_place <-| (if_stmt_1124_eval_test)
      ;;[if_stmt_1124_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1124_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_58_1125_place |-> (if_stmt_1124_if_link if_stmt_1124_else_link)
      $P [xx_x_crit_edgex_xix_xi_divideUnsignedx_xexitx_xloopexitx_xi]
      xx_x_crit_edgex_xix_xi_divideUnsignedx_xexitx_xloopexitx_xi <-| (if_stmt_1124_if_link)
      $P [xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi]
      xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi <-| (if_stmt_1124_else_link)
      ::[assign_stmt_1139] 
      {
        // 		extractx_xtx_xi := ($cast ($uint<32>) xx_xlcssa4 )
        //  file prog.linked.opt.aa, line 439
        // Source expression
        // ($cast ($uint<32>) xx_xlcssa4 )
        $T[type_cast_1138_sample_start_] 
        $T[type_cast_1138_sample_completed_] 
        $T[type_cast_1138_update_start_] 
        $T[type_cast_1138_update_completed_] 
        // xx_xlcssa4
        $T[R_xx_xlcssa4_1137_sample_start_] 
        $T[R_xx_xlcssa4_1137_sample_completed_] 
        $T[R_xx_xlcssa4_1137_update_start_] 
        $T[R_xx_xlcssa4_1137_update_completed_] 
        // implicit reference
        R_xx_xlcssa4_1137_sample_start_ <-& ($entry)
        R_xx_xlcssa4_1137_sample_completed_ <-& (R_xx_xlcssa4_1137_sample_start_)
        R_xx_xlcssa4_1137_update_start_ <-& (R_xx_xlcssa4_1137_sample_completed_)
        R_xx_xlcssa4_1137_update_completed_ <-& (R_xx_xlcssa4_1137_update_start_)
        type_cast_1138_sample_start_ <-& (R_xx_xlcssa4_1137_update_completed_)
        ;;[type_cast_1138_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1138_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1138_sample_start_ &-> (type_cast_1138_Sample)
        type_cast_1138_sample_completed_ <-& (type_cast_1138_Sample)
        type_cast_1138_sample_completed_ &-> ($null)
        type_cast_1138_update_start_ &-> (type_cast_1138_Update)
        type_cast_1138_update_completed_ <-& (type_cast_1138_Update)
        // Target expression
        // (as target) extractx_xtx_xi
        // extractx_xtx_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1139__entry__ |-> (assign_stmt_1139)
      assign_stmt_1139__exit__ <-| (assign_stmt_1139)
      ::[assign_stmt_1156_to_assign_stmt_1178] 
      {
        // 		->(iNsTr_22) := iNsTr_19
        //  file prog.linked.opt.aa, line 444
        // Source expression
        // iNsTr_19
        $T[R_iNsTr_19_1155_sample_start_] 
        $T[R_iNsTr_19_1155_sample_completed_] 
        $T[R_iNsTr_19_1155_update_start_] 
        $T[R_iNsTr_19_1155_update_completed_] 
        // implicit reference
        R_iNsTr_19_1155_sample_start_ <-& ($entry)
        R_iNsTr_19_1155_sample_completed_ <-& (R_iNsTr_19_1155_sample_start_)
        R_iNsTr_19_1155_update_start_ <-& (R_iNsTr_19_1155_sample_completed_)
        R_iNsTr_19_1155_update_completed_ <-& (R_iNsTr_19_1155_update_start_)
        // Target expression
        // ->(iNsTr_22)
        $T[ptr_deref_1154_sample_start_] 
        $T[ptr_deref_1154_sample_completed_] 
        $T[ptr_deref_1154_update_start_] 
        $T[ptr_deref_1154_update_completed_] 
        $T[ptr_deref_1154_base_address_calculated] 
        // iNsTr_22
        $T[R_iNsTr_22_1153_sample_start_] 
        $T[R_iNsTr_22_1153_sample_completed_] 
        $T[R_iNsTr_22_1153_update_start_] 
        $T[R_iNsTr_22_1153_update_completed_] 
        // implicit reference
        R_iNsTr_22_1153_sample_start_ <-& ($entry)
        R_iNsTr_22_1153_sample_completed_ <-& (R_iNsTr_22_1153_sample_start_)
        R_iNsTr_22_1153_update_start_ <-& (R_iNsTr_22_1153_sample_completed_)
        R_iNsTr_22_1153_update_completed_ <-& (R_iNsTr_22_1153_update_start_)
        $T[ptr_deref_1154_word_address_calculated] 
        $T[ptr_deref_1154_root_address_calculated] 
        $T[ptr_deref_1154_base_address_resized] 
        ;;[ptr_deref_1154_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_1154_base_address_calculated &-> (ptr_deref_1154_base_addr_resize)
        ptr_deref_1154_base_address_resized <-& (ptr_deref_1154_base_addr_resize)
        ;;[ptr_deref_1154_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_1154_base_address_resized &-> (ptr_deref_1154_base_plus_offset)
        ptr_deref_1154_root_address_calculated <-& (ptr_deref_1154_base_plus_offset)
        ;;[ptr_deref_1154_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_1154_root_address_calculated &-> (ptr_deref_1154_word_addrgen)
        ptr_deref_1154_word_address_calculated <-& (ptr_deref_1154_word_addrgen)
        ;;[ptr_deref_1154_Sample] 
        {
          ;;[ptr_deref_1154_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_1154_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_1154_sample_start_ <-& (ptr_deref_1154_word_address_calculated)
        ptr_deref_1154_sample_start_ &-> (ptr_deref_1154_Sample)
        ptr_deref_1154_sample_completed_ <-& (ptr_deref_1154_Sample)
        ptr_deref_1154_sample_completed_ &-> ($null)
        ptr_deref_1154_update_start_ &-> (ptr_deref_1154_Update)
        ptr_deref_1154_update_completed_ <-& (ptr_deref_1154_Update)
        ptr_deref_1154_base_address_calculated <-& (R_iNsTr_22_1153_update_completed_)
        ptr_deref_1154_sample_start_ <-& (ptr_deref_1154_base_address_calculated)
        ptr_deref_1154_sample_start_ <-& (R_iNsTr_19_1155_update_completed_)
        // 		iNsTr_31 := (iNsTr_20 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 445
        // Source expression
        // (iNsTr_20 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_1161_sample_start_] 
        $T[ADD_u32_u32_1161_sample_completed_] 
        $T[ADD_u32_u32_1161_update_start_] 
        $T[ADD_u32_u32_1161_update_completed_] 
        // iNsTr_20
        $T[R_iNsTr_20_1158_sample_start_] 
        $T[R_iNsTr_20_1158_sample_completed_] 
        $T[R_iNsTr_20_1158_update_start_] 
        $T[R_iNsTr_20_1158_update_completed_] 
        // implicit reference
        R_iNsTr_20_1158_sample_start_ <-& ($entry)
        R_iNsTr_20_1158_sample_completed_ <-& (R_iNsTr_20_1158_sample_start_)
        R_iNsTr_20_1158_update_start_ <-& (R_iNsTr_20_1158_sample_completed_)
        R_iNsTr_20_1158_update_completed_ <-& (R_iNsTr_20_1158_update_start_)
        ADD_u32_u32_1161_sample_start_ <-& (R_iNsTr_20_1158_update_completed_)
        ;;[ADD_u32_u32_1161_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_1161_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_1161_sample_start_ &-> (ADD_u32_u32_1161_Sample)
        ADD_u32_u32_1161_sample_completed_ <-& (ADD_u32_u32_1161_Sample)
        ADD_u32_u32_1161_sample_completed_ &-> ($null)
        ADD_u32_u32_1161_update_start_ &-> (ADD_u32_u32_1161_Update)
        ADD_u32_u32_1161_update_completed_ <-& (ADD_u32_u32_1161_Update)
        // Target expression
        // (as target) iNsTr_31
        // iNsTr_31
        // implicit reference
        // 		iNsTr_32 := (iNsTr_31 == ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
        //  file prog.linked.opt.aa, line 446
        // Source expression
        // (iNsTr_31 == ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
        $T[EQ_u32_u1_1167_sample_start_] 
        $T[EQ_u32_u1_1167_sample_completed_] 
        $T[EQ_u32_u1_1167_update_start_] 
        $T[EQ_u32_u1_1167_update_completed_] 
        // iNsTr_31
        $T[R_iNsTr_31_1164_sample_start_] 
        $T[R_iNsTr_31_1164_sample_completed_] 
        $T[R_iNsTr_31_1164_update_start_] 
        $T[R_iNsTr_31_1164_update_completed_] 
        // implicit reference
        R_iNsTr_31_1164_sample_start_ <-& (ADD_u32_u32_1161_update_completed_)
        R_iNsTr_31_1164_sample_completed_ <-& (R_iNsTr_31_1164_sample_start_)
        R_iNsTr_31_1164_update_start_ <-& (R_iNsTr_31_1164_sample_completed_)
        R_iNsTr_31_1164_update_completed_ <-& (R_iNsTr_31_1164_update_start_)
        EQ_u32_u1_1167_sample_start_ <-& (R_iNsTr_31_1164_update_completed_)
        ;;[EQ_u32_u1_1167_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_1167_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_1167_sample_start_ &-> (EQ_u32_u1_1167_Sample)
        EQ_u32_u1_1167_sample_completed_ <-& (EQ_u32_u1_1167_Sample)
        EQ_u32_u1_1167_sample_completed_ &-> ($null)
        EQ_u32_u1_1167_update_start_ &-> (EQ_u32_u1_1167_Update)
        EQ_u32_u1_1167_update_completed_ <-& (EQ_u32_u1_1167_Update)
        // Target expression
        // (as target) iNsTr_32
        // iNsTr_32
        // implicit reference
        // 		iNsTr_33 := ( $mux iNsTr_32 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_31 ) 
        //  file prog.linked.opt.aa, line 447
        // Source expression
        // ( $mux iNsTr_32 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_31 ) 
        $T[MUX_1174_sample_start_] 
        $T[MUX_1174_sample_completed_] 
        $T[MUX_1174_update_start_] 
        $T[MUX_1174_update_completed_] 
        // iNsTr_32
        $T[R_iNsTr_32_1170_sample_start_] 
        $T[R_iNsTr_32_1170_sample_completed_] 
        $T[R_iNsTr_32_1170_update_start_] 
        $T[R_iNsTr_32_1170_update_completed_] 
        // implicit reference
        R_iNsTr_32_1170_sample_start_ <-& (EQ_u32_u1_1167_update_completed_)
        R_iNsTr_32_1170_sample_completed_ <-& (R_iNsTr_32_1170_sample_start_)
        R_iNsTr_32_1170_update_start_ <-& (R_iNsTr_32_1170_sample_completed_)
        R_iNsTr_32_1170_update_completed_ <-& (R_iNsTr_32_1170_update_start_)
        // iNsTr_31
        $T[R_iNsTr_31_1173_sample_start_] 
        $T[R_iNsTr_31_1173_sample_completed_] 
        $T[R_iNsTr_31_1173_update_start_] 
        $T[R_iNsTr_31_1173_update_completed_] 
        // implicit reference
        R_iNsTr_31_1173_sample_start_ <-& (ADD_u32_u32_1161_update_completed_)
        R_iNsTr_31_1173_sample_completed_ <-& (R_iNsTr_31_1173_sample_start_)
        R_iNsTr_31_1173_update_start_ <-& (R_iNsTr_31_1173_sample_completed_)
        R_iNsTr_31_1173_update_completed_ <-& (R_iNsTr_31_1173_update_start_)
        MUX_1174_sample_start_ <-& (R_iNsTr_32_1170_update_completed_)
        MUX_1174_sample_start_ <-& (R_iNsTr_31_1173_update_completed_)
        ;;[MUX_1174_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1174_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1174_sample_start_ &-> (MUX_1174_start)
        MUX_1174_sample_completed_ <-& (MUX_1174_start)
        MUX_1174_update_start_ &-> (MUX_1174_complete)
        MUX_1174_update_completed_ <-& (MUX_1174_complete)
        MUX_1174_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_33
        // iNsTr_33
        // implicit reference
        // 		WINbuff_ptr := iNsTr_33
        //  file prog.linked.opt.aa, line 448
        // Source expression
        // iNsTr_33
        $T[R_iNsTr_33_1177_sample_start_] 
        $T[R_iNsTr_33_1177_sample_completed_] 
        $T[R_iNsTr_33_1177_update_start_] 
        $T[R_iNsTr_33_1177_update_completed_] 
        // implicit reference
        R_iNsTr_33_1177_sample_start_ <-& (MUX_1174_update_completed_)
        R_iNsTr_33_1177_sample_completed_ <-& (R_iNsTr_33_1177_sample_start_)
        R_iNsTr_33_1177_update_start_ <-& (R_iNsTr_33_1177_sample_completed_)
        R_iNsTr_33_1177_update_completed_ <-& (R_iNsTr_33_1177_update_start_)
        // Target expression
        // (as target) WINbuff_ptr
        $T[STORE_WINbuff_ptr_1176_sample_start_] 
        $T[STORE_WINbuff_ptr_1176_sample_completed_] 
        $T[STORE_WINbuff_ptr_1176_update_start_] 
        $T[STORE_WINbuff_ptr_1176_update_completed_] 
        // WINbuff_ptr
        $T[STORE_WINbuff_ptr_1176_word_address_calculated] 
        $T[STORE_WINbuff_ptr_1176_root_address_calculated] 
        STORE_WINbuff_ptr_1176_word_address_calculated <-& (STORE_WINbuff_ptr_1176_root_address_calculated)
        ;;[STORE_WINbuff_ptr_1176_Sample] 
        {
          ;;[STORE_WINbuff_ptr_1176_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_WINbuff_ptr_1176_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_WINbuff_ptr_1176_sample_start_ <-& (STORE_WINbuff_ptr_1176_word_address_calculated)
        STORE_WINbuff_ptr_1176_sample_start_ &-> (STORE_WINbuff_ptr_1176_Sample)
        STORE_WINbuff_ptr_1176_sample_completed_ <-& (STORE_WINbuff_ptr_1176_Sample)
        STORE_WINbuff_ptr_1176_sample_completed_ &-> ($null)
        STORE_WINbuff_ptr_1176_update_start_ &-> (STORE_WINbuff_ptr_1176_Update)
        STORE_WINbuff_ptr_1176_update_completed_ <-& (STORE_WINbuff_ptr_1176_Update)
        STORE_WINbuff_ptr_1176_sample_start_ <-& (R_iNsTr_33_1177_update_completed_)
        // load-store dependencies..
      }
      assign_stmt_1156_to_assign_stmt_1178__entry__ |-> (assign_stmt_1156_to_assign_stmt_1178)
      assign_stmt_1156_to_assign_stmt_1178__exit__ <-| (assign_stmt_1156_to_assign_stmt_1178)
      ::[assign_stmt_1181] 
      {
        // 		filt_output_pipe := outputx_x0x_xi
        //  file prog.linked.opt.aa, line 449
        // Source expression
        // outputx_x0x_xi
        $T[R_outputx_x0x_xi_1180_sample_start_] 
        $T[R_outputx_x0x_xi_1180_sample_completed_] 
        $T[R_outputx_x0x_xi_1180_update_start_] 
        $T[R_outputx_x0x_xi_1180_update_completed_] 
        // implicit reference
        R_outputx_x0x_xi_1180_sample_start_ <-& ($entry)
        R_outputx_x0x_xi_1180_sample_completed_ <-& (R_outputx_x0x_xi_1180_sample_start_)
        R_outputx_x0x_xi_1180_update_start_ <-& (R_outputx_x0x_xi_1180_sample_completed_)
        R_outputx_x0x_xi_1180_update_completed_ <-& (R_outputx_x0x_xi_1180_update_start_)
        // Target expression
        // (as target) filt_output_pipe
        $T[WPIPE_filt_output_pipe_1179_sample_start_] 
        $T[WPIPE_filt_output_pipe_1179_sample_completed_] 
        $T[WPIPE_filt_output_pipe_1179_update_start_] 
        $T[WPIPE_filt_output_pipe_1179_update_completed_] 
        ;;[WPIPE_filt_output_pipe_1179_Sample] 
        {
          // pipe write sample-start filt_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_filt_output_pipe_1179_Update] 
        {
          // pipe write update (complete) filt_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_filt_output_pipe_1179_sample_start_ &-> (WPIPE_filt_output_pipe_1179_Sample)
        WPIPE_filt_output_pipe_1179_sample_completed_ <-& (WPIPE_filt_output_pipe_1179_Sample)
        WPIPE_filt_output_pipe_1179_sample_completed_ &-> ($null)
        WPIPE_filt_output_pipe_1179_update_start_ &-> (WPIPE_filt_output_pipe_1179_Update)
        WPIPE_filt_output_pipe_1179_update_completed_ <-& (WPIPE_filt_output_pipe_1179_Update)
        WPIPE_filt_output_pipe_1179_sample_start_ <-& (R_outputx_x0x_xi_1180_update_completed_)
        // barrier: 		filt_output_pipe := outputx_x0x_xi
        // load-store dependencies..
        // pipe read/write dependencies for pipe filt_output_pipe
      }
      assign_stmt_1181__entry__ |-> (assign_stmt_1181)
      assign_stmt_1181__exit__ <-| (assign_stmt_1181)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 290
      ;;[merge_stmt_707_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_707__entry__ |-> (merge_stmt_707_dead_link)
      merge_stmt_707__exit__ <-| (merge_stmt_707_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 290  --------------------------
      ||[bb_0_xx_xpreheaderx_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_xx_xpreheaderx_xpreheader |-> (bb_0_xx_xpreheaderx_xpreheader_PhiReq)
      $P [merge_stmt_707_PhiReqMerge] 
      merge_stmt_707_PhiReqMerge <-| ( bb_0_xx_xpreheaderx_xpreheader_PhiReq )
      ||[merge_stmt_707_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_707_PhiReqMerge |-> (merge_stmt_707_PhiAck)
      merge_stmt_707__exit__  <-| (merge_stmt_707_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 290  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 293
      //---------------------   merge statement  file prog.linked.opt.aa, line 293  --------------------------
      ||[xx_xpreheaderx_xpreheader_xx_xpreheader_PhiReq] 
      {
        ;;[phi_stmt_710] 
        {
          ||[phi_stmt_710_sources] 
          {
            // sources for 			$phi indexx_x05x_xi_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on xx_xpreheaderx_xpreheader_xx_xpreheader // type of target is $uint<32>
          }
          $T [phi_stmt_710_req] 
        }
      }
      xx_xpreheaderx_xpreheader_xx_xpreheader |-> (xx_xpreheaderx_xpreheader_xx_xpreheader_PhiReq)
      $P [merge_stmt_709_PhiReqMerge] 
      merge_stmt_709_PhiReqMerge <-| ( xx_xpreheaderx_xpreheader_xx_xpreheader_PhiReq )
      ||[merge_stmt_709_PhiAck] 
      {
        $T [phi_stmt_710_ack] 
      }
      merge_stmt_709_PhiReqMerge |-> (merge_stmt_709_PhiAck)
      merge_stmt_709__exit__  <-| (merge_stmt_709_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 293  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 306
      //---------------------   merge statement  file prog.linked.opt.aa, line 306  --------------------------
      ||[xx_xpreheader_bbx_xnph4x_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      xx_xpreheader_bbx_xnph4x_xix_xpreheader |-> (xx_xpreheader_bbx_xnph4x_xix_xpreheader_PhiReq)
      $P [merge_stmt_750_PhiReqMerge] 
      merge_stmt_750_PhiReqMerge <-| ( xx_xpreheader_bbx_xnph4x_xix_xpreheader_PhiReq )
      ||[merge_stmt_750_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_750_PhiReqMerge |-> (merge_stmt_750_PhiAck)
      merge_stmt_750__exit__  <-| (merge_stmt_750_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 306  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 309
      //---------------------   merge statement  file prog.linked.opt.aa, line 309  --------------------------
      ||[bbx_xnph4x_xix_xpreheader_bbx_xnph4x_xi_PhiReq] 
      {
        ;;[phi_stmt_753] 
        {
          ||[phi_stmt_753_sources] 
          {
            // sources for 			$phi indexx_x13x_xi_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph4x_xix_xpreheader_bbx_xnph4x_xi // type of target is $uint<32>
          }
          $T [phi_stmt_753_req] 
        }
      }
      bbx_xnph4x_xix_xpreheader_bbx_xnph4x_xi |-> (bbx_xnph4x_xix_xpreheader_bbx_xnph4x_xi_PhiReq)
      $P [merge_stmt_752_PhiReqMerge] 
      merge_stmt_752_PhiReqMerge <-| ( bbx_xnph4x_xix_xpreheader_bbx_xnph4x_xi_PhiReq )
      ||[merge_stmt_752_PhiAck] 
      {
        $T [phi_stmt_753_ack] 
      }
      merge_stmt_752_PhiReqMerge |-> (merge_stmt_752_PhiAck)
      merge_stmt_752__exit__  <-| (merge_stmt_752_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 309  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 322
      //---------------------   merge statement  file prog.linked.opt.aa, line 322  --------------------------
      ||[bbx_xnph4x_xi_bbx_xnphx_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph4x_xi_bbx_xnphx_xix_xpreheader |-> (bbx_xnph4x_xi_bbx_xnphx_xix_xpreheader_PhiReq)
      $P [merge_stmt_793_PhiReqMerge] 
      merge_stmt_793_PhiReqMerge <-| ( bbx_xnph4x_xi_bbx_xnphx_xix_xpreheader_PhiReq )
      ||[merge_stmt_793_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_793_PhiReqMerge |-> (merge_stmt_793_PhiAck)
      merge_stmt_793__exit__  <-| (merge_stmt_793_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 322  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 325
      //---------------------   merge statement  file prog.linked.opt.aa, line 325  --------------------------
      ||[bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq] 
      {
        ;;[phi_stmt_796] 
        {
          ||[phi_stmt_796_sources] 
          {
            // sources for 			$phi indexx_x21x_xi_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<32>
          }
          $T [phi_stmt_796_req] 
        }
      }
      bbx_xnphx_xix_xpreheader_bbx_xnphx_xi |-> (bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq)
      $P [merge_stmt_795_PhiReqMerge] 
      merge_stmt_795_PhiReqMerge <-| ( bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq )
      ||[merge_stmt_795_PhiAck] 
      {
        $T [phi_stmt_796_ack] 
      }
      merge_stmt_795_PhiReqMerge |-> (merge_stmt_795_PhiAck)
      merge_stmt_795__exit__  <-| (merge_stmt_795_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 325  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 338
      //---------------------   merge statement  file prog.linked.opt.aa, line 338  --------------------------
      ||[bbx_xnphx_xi_initFiltx_xexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnphx_xi_initFiltx_xexit |-> (bbx_xnphx_xi_initFiltx_xexit_PhiReq)
      $P [merge_stmt_836_PhiReqMerge] 
      merge_stmt_836_PhiReqMerge <-| ( bbx_xnphx_xi_initFiltx_xexit_PhiReq )
      ||[merge_stmt_836_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_836_PhiReqMerge |-> (merge_stmt_836_PhiAck)
      merge_stmt_836__exit__  <-| (merge_stmt_836_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 338  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 349
      //---------------------   merge statement  file prog.linked.opt.aa, line 349  --------------------------
      ||[bb_0_bb_8_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_8 |-> (bb_0_bb_8_PhiReq)
      $P [merge_stmt_870_PhiReqMerge] 
      merge_stmt_870_PhiReqMerge <-| ( bb_0_bb_8_PhiReq )
      ||[merge_stmt_870_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_870_PhiReqMerge |-> (merge_stmt_870_PhiAck)
      merge_stmt_870__exit__  <-| (merge_stmt_870_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 349  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 381
      ;;[merge_stmt_987_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_987__entry__ |-> (merge_stmt_987_dead_link)
      merge_stmt_987__exit__ <-| (merge_stmt_987_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 381  --------------------------
      ||[bb_8_bb_9_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_8_bb_9 |-> (bb_8_bb_9_PhiReq)
      $P [merge_stmt_987_PhiReqMerge] 
      merge_stmt_987_PhiReqMerge <-| ( bb_8_bb_9_PhiReq )
      ||[merge_stmt_987_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_987_PhiReqMerge |-> (merge_stmt_987_PhiAck)
      merge_stmt_987__exit__  <-| (merge_stmt_987_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 381  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 389
      ;;[merge_stmt_1000_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1000__entry__ |-> (merge_stmt_1000_dead_link)
      merge_stmt_1000__exit__ <-| (merge_stmt_1000_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 389  --------------------------
      ||[bb_9_bbx_xnph6x_xix_xpreheaderx_xi_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_9_bbx_xnph6x_xix_xpreheaderx_xi |-> (bb_9_bbx_xnph6x_xix_xpreheaderx_xi_PhiReq)
      $P [merge_stmt_1000_PhiReqMerge] 
      merge_stmt_1000_PhiReqMerge <-| ( bb_9_bbx_xnph6x_xix_xpreheaderx_xi_PhiReq )
      ||[merge_stmt_1000_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1000_PhiReqMerge |-> (merge_stmt_1000_PhiAck)
      merge_stmt_1000__exit__  <-| (merge_stmt_1000_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 389  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 393
      //---------------------   merge statement  file prog.linked.opt.aa, line 393  --------------------------
      ||[bbx_xnph6x_xix_xpreheaderx_xi_bbx_xnph6x_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1008] 
        {
          ||[phi_stmt_1008_sources] 
          {
            // sources for 			$phi xx_x05x_xix_xi := 			  ($cast ($uint<64>) iNsTr_57 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) iNsTr_45 ) $on bbx_xnph6x_xix_xpreheaderx_xi_bbx_xnph6x_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_57 )
            ;;[type_cast_1011] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<64>) iNsTr_45 )
            ;;[type_cast_1013] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1008_req] 
        }
        ;;[phi_stmt_1014] 
        {
          ||[phi_stmt_1014_sources] 
          {
            // sources for 			$phi quotientx_x04x_xix_xi := 			  ($cast ($uint<64>) iNsTr_56 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xix_xpreheaderx_xi_bbx_xnph6x_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_56 )
            ;;[type_cast_1017] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1014_req] 
        }
      }
      bbx_xnph6x_xix_xpreheaderx_xi_bbx_xnph6x_xix_xi |-> (bbx_xnph6x_xix_xpreheaderx_xi_bbx_xnph6x_xix_xi_PhiReq)
      ||[xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1008] 
        {
          ||[phi_stmt_1008_sources] 
          {
            // sources for 			$phi xx_x05x_xix_xi := 			  ($cast ($uint<64>) iNsTr_57 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) iNsTr_45 ) $on bbx_xnph6x_xix_xpreheaderx_xi_bbx_xnph6x_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_57 )
            ;;[type_cast_1011] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<64>) iNsTr_45 )
            ;;[type_cast_1013] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1008_req] 
        }
        ;;[phi_stmt_1014] 
        {
          ||[phi_stmt_1014_sources] 
          {
            // sources for 			$phi quotientx_x04x_xix_xi := 			  ($cast ($uint<64>) iNsTr_56 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xix_xpreheaderx_xi_bbx_xnph6x_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_56 )
            ;;[type_cast_1017] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1014_req] 
        }
      }
      xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi |-> (xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq)
      $P [merge_stmt_1007_PhiReqMerge] 
      merge_stmt_1007_PhiReqMerge <-| ( bbx_xnph6x_xix_xpreheaderx_xi_bbx_xnph6x_xix_xi_PhiReq  xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq )
      ||[merge_stmt_1007_PhiAck] 
      {
        $T [phi_stmt_1008_ack] 
        $T [phi_stmt_1014_ack] 
      }
      merge_stmt_1007_PhiReqMerge |-> (merge_stmt_1007_PhiAck)
      merge_stmt_1007__exit__  <-| (merge_stmt_1007_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 393  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 404
      ;;[merge_stmt_1040_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1040__entry__ |-> (merge_stmt_1040_dead_link)
      merge_stmt_1040__exit__ <-| (merge_stmt_1040_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 404  --------------------------
      ||[bbx_xnph6x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph6x_xix_xi_bbx_xnphx_xix_xix_xpreheader |-> (bbx_xnph6x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq)
      $P [merge_stmt_1040_PhiReqMerge] 
      merge_stmt_1040_PhiReqMerge <-| ( bbx_xnph6x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq )
      ||[merge_stmt_1040_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1040_PhiReqMerge |-> (merge_stmt_1040_PhiAck)
      merge_stmt_1040__exit__  <-| (merge_stmt_1040_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 404  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 407
      //---------------------   merge statement  file prog.linked.opt.aa, line 407  --------------------------
      ||[bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1043] 
        {
          ||[phi_stmt_1043_sources] 
          {
            // sources for 			$phi shifted_divisorx_x02x_xix_xi := 			  ($cast ($uint<64>) iNsTr_61 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_61 )
            ;;[type_cast_1046] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1043_req] 
        }
        ;;[phi_stmt_1050] 
        {
          ||[phi_stmt_1050_sources] 
          {
            // sources for 			$phi curr_quotientx_x01x_xix_xi := 			  ($cast ($uint<64>) iNsTr_62 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_62 )
            ;;[type_cast_1053] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1050_req] 
        }
      }
      bbx_xnphx_xix_xi_bbx_xnphx_xix_xi |-> (bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq)
      ||[bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1043] 
        {
          ||[phi_stmt_1043_sources] 
          {
            // sources for 			$phi shifted_divisorx_x02x_xix_xi := 			  ($cast ($uint<64>) iNsTr_61 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_61 )
            ;;[type_cast_1046] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1043_req] 
        }
        ;;[phi_stmt_1050] 
        {
          ||[phi_stmt_1050_sources] 
          {
            // sources for 			$phi curr_quotientx_x01x_xix_xi := 			  ($cast ($uint<64>) iNsTr_62 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_62 )
            ;;[type_cast_1053] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1050_req] 
        }
      }
      bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi |-> (bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq)
      $P [merge_stmt_1042_PhiReqMerge] 
      merge_stmt_1042_PhiReqMerge <-| ( bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq  bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq )
      ||[merge_stmt_1042_PhiAck] 
      {
        $T [phi_stmt_1043_ack] 
        $T [phi_stmt_1050_ack] 
      }
      merge_stmt_1042_PhiReqMerge |-> (merge_stmt_1042_PhiAck)
      merge_stmt_1042__exit__  <-| (merge_stmt_1042_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 407  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 419
      ;;[merge_stmt_1081_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1081__entry__ |-> (merge_stmt_1081_dead_link)
      merge_stmt_1081__exit__ <-| (merge_stmt_1081_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 419  --------------------------
      ||[bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_1082] 
        {
          ||[phi_stmt_1082_sources] 
          {
            // sources for 			$phi xx_xlcssa3 := 			  ($cast ($uint<64>) iNsTr_62 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_62 )
            ;;[type_cast_1085] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1082_req] 
        }
        ;;[phi_stmt_1086] 
        {
          ||[phi_stmt_1086_sources] 
          {
            // sources for 			$phi xx_xlcssa := 			  ($cast ($uint<64>) iNsTr_61 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_61 )
            ;;[type_cast_1089] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1086_req] 
        }
      }
      bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit |-> (bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq)
      $P [merge_stmt_1081_PhiReqMerge] 
      merge_stmt_1081_PhiReqMerge <-| ( bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq )
      ||[merge_stmt_1081_PhiAck] 
      {
        $T [phi_stmt_1082_ack] 
        $T [phi_stmt_1086_ack] 
      }
      merge_stmt_1081_PhiReqMerge |-> (merge_stmt_1081_PhiAck)
      merge_stmt_1081__exit__  <-| (merge_stmt_1081_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 419  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 424
      //---------------------   merge statement  file prog.linked.opt.aa, line 424  --------------------------
      ||[bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1093] 
        {
          ||[phi_stmt_1093_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) xx_xlcssa )
            ;;[type_cast_1099] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1093_req] 
        }
        ;;[phi_stmt_1100] 
        {
          ||[phi_stmt_1100_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) xx_xlcssa3 )
            ;;[type_cast_1106] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1100_req] 
        }
      }
      bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi |-> (bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq)
      ||[xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1093] 
        {
          ||[phi_stmt_1093_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) xx_xlcssa )
            ;;[type_cast_1099] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1093_req] 
        }
        ;;[phi_stmt_1100] 
        {
          ||[phi_stmt_1100_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
            // ($cast ($uint<64>) xx_xlcssa3 )
            ;;[type_cast_1106] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1100_req] 
        }
      }
      xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi |-> (xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq)
      $P [merge_stmt_1092_PhiReqMerge] 
      merge_stmt_1092_PhiReqMerge <-| ( bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq  xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq )
      ||[merge_stmt_1092_PhiAck] 
      {
        $T [phi_stmt_1093_ack] 
        $T [phi_stmt_1100_ack] 
      }
      merge_stmt_1092_PhiReqMerge |-> (merge_stmt_1092_PhiAck)
      merge_stmt_1092__exit__  <-| (merge_stmt_1092_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 424  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 436
      ;;[merge_stmt_1130_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1130__entry__ |-> (merge_stmt_1130_dead_link)
      merge_stmt_1130__exit__ <-| (merge_stmt_1130_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 436  --------------------------
      ||[xx_x_crit_edgex_xix_xi_divideUnsignedx_xexitx_xloopexitx_xi_PhiReq] 
      {
        ;;[phi_stmt_1131] 
        {
          ||[phi_stmt_1131_sources] 
          {
            // sources for 			$phi xx_xlcssa4 := 			  ($cast ($uint<64>) iNsTr_56 ) $on xx_x_crit_edgex_xix_xi_divideUnsignedx_xexitx_xloopexitx_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_56 )
            ;;[type_cast_1134] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1131_req] 
        }
      }
      xx_x_crit_edgex_xix_xi_divideUnsignedx_xexitx_xloopexitx_xi |-> (xx_x_crit_edgex_xix_xi_divideUnsignedx_xexitx_xloopexitx_xi_PhiReq)
      $P [merge_stmt_1130_PhiReqMerge] 
      merge_stmt_1130_PhiReqMerge <-| ( xx_x_crit_edgex_xix_xi_divideUnsignedx_xexitx_xloopexitx_xi_PhiReq )
      ||[merge_stmt_1130_PhiAck] 
      {
        $T [phi_stmt_1131_ack] 
      }
      merge_stmt_1130_PhiReqMerge |-> (merge_stmt_1130_PhiAck)
      merge_stmt_1130__exit__  <-| (merge_stmt_1130_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 436  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 441
      //---------------------   merge statement  file prog.linked.opt.aa, line 441  --------------------------
      ||[bb_8_mvWinx_xexit_PhiReq] 
      {
        ;;[phi_stmt_1142] 
        {
          ||[phi_stmt_1142_sources] 
          {
            // sources for 			$phi outputx_x0x_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000111110100000000  ) ) $on bb_8_mvWinx_xexit			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_9_mvWinx_xexit			  ($cast ($uint<32>) extractx_xtx_xi ) $on divideUnsignedx_xexitx_xloopexitx_xi_mvWinx_xexit // type of target is $uint<32>
            // ($cast ($uint<32>) extractx_xtx_xi )
            ;;[type_cast_1151] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1142_req] 
        }
      }
      bb_8_mvWinx_xexit |-> (bb_8_mvWinx_xexit_PhiReq)
      ||[bb_9_mvWinx_xexit_PhiReq] 
      {
        ;;[phi_stmt_1142] 
        {
          ||[phi_stmt_1142_sources] 
          {
            // sources for 			$phi outputx_x0x_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000111110100000000  ) ) $on bb_8_mvWinx_xexit			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_9_mvWinx_xexit			  ($cast ($uint<32>) extractx_xtx_xi ) $on divideUnsignedx_xexitx_xloopexitx_xi_mvWinx_xexit // type of target is $uint<32>
            // ($cast ($uint<32>) extractx_xtx_xi )
            ;;[type_cast_1151] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1142_req] 
        }
      }
      bb_9_mvWinx_xexit |-> (bb_9_mvWinx_xexit_PhiReq)
      ||[divideUnsignedx_xexitx_xloopexitx_xi_mvWinx_xexit_PhiReq] 
      {
        ;;[phi_stmt_1142] 
        {
          ||[phi_stmt_1142_sources] 
          {
            // sources for 			$phi outputx_x0x_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000111110100000000  ) ) $on bb_8_mvWinx_xexit			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_9_mvWinx_xexit			  ($cast ($uint<32>) extractx_xtx_xi ) $on divideUnsignedx_xexitx_xloopexitx_xi_mvWinx_xexit // type of target is $uint<32>
            // ($cast ($uint<32>) extractx_xtx_xi )
            ;;[type_cast_1151] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1142_req] 
        }
      }
      divideUnsignedx_xexitx_xloopexitx_xi_mvWinx_xexit |-> (divideUnsignedx_xexitx_xloopexitx_xi_mvWinx_xexit_PhiReq)
      $P [merge_stmt_1141_PhiReqMerge] 
      merge_stmt_1141_PhiReqMerge <-| ( bb_8_mvWinx_xexit_PhiReq  bb_9_mvWinx_xexit_PhiReq  divideUnsignedx_xexitx_xloopexitx_xi_mvWinx_xexit_PhiReq )
      ||[merge_stmt_1141_PhiAck] 
      {
        $T [phi_stmt_1142_ack] 
      }
      merge_stmt_1141_PhiReqMerge |-> (merge_stmt_1141_PhiAck)
      merge_stmt_1141__exit__  <-| (merge_stmt_1141_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 441  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 451
      //---------------------   merge statement  file prog.linked.opt.aa, line 451  --------------------------
      ||[initFiltx_xexit_UnifiedReturnBlock_PhiReq] 
      {
        // no phi statements in merge..
      }
      initFiltx_xexit_UnifiedReturnBlock |-> (initFiltx_xexit_UnifiedReturnBlock_PhiReq)
      ||[mvWinx_xexit_UnifiedReturnBlock_PhiReq] 
      {
        // no phi statements in merge..
      }
      mvWinx_xexit_UnifiedReturnBlock |-> (mvWinx_xexit_UnifiedReturnBlock_PhiReq)
      $P [merge_stmt_1183_PhiReqMerge] 
      merge_stmt_1183_PhiReqMerge <-| ( initFiltx_xexit_UnifiedReturnBlock_PhiReq  mvWinx_xexit_UnifiedReturnBlock_PhiReq )
      ||[merge_stmt_1183_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1183_PhiReqMerge |-> (merge_stmt_1183_PhiAck)
      merge_stmt_1183__exit__  <-| (merge_stmt_1183_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 451  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 454
      //---------------------   merge statement  file prog.linked.opt.aa, line 454  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_1185_PhiReqMerge] 
      merge_stmt_1185_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_1185_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1185_PhiReqMerge |-> (merge_stmt_1185_PhiAck)
      merge_stmt_1185__exit__  <-| (merge_stmt_1185_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 454  --------------------------
      assign_stmt_700__entry__ <-| (branch_block_stmt_694__entry__)
      if_stmt_701__entry__ <-| (assign_stmt_700__exit__)
      merge_stmt_707__entry__ <-| (if_stmt_701__exit__)
      xx_xpreheaderx_xpreheader_xx_xpreheader <-| (merge_stmt_707__exit__)
      do_while_stmt_716__entry__ <-| (merge_stmt_709__exit__)
      xx_xpreheader_bbx_xnph4x_xix_xpreheader <-| (do_while_stmt_716__exit__)
      bbx_xnph4x_xix_xpreheader_bbx_xnph4x_xi <-| (merge_stmt_750__exit__)
      do_while_stmt_759__entry__ <-| (merge_stmt_752__exit__)
      bbx_xnph4x_xi_bbx_xnphx_xix_xpreheader <-| (do_while_stmt_759__exit__)
      bbx_xnphx_xix_xpreheader_bbx_xnphx_xi <-| (merge_stmt_793__exit__)
      do_while_stmt_802__entry__ <-| (merge_stmt_795__exit__)
      bbx_xnphx_xi_initFiltx_xexit <-| (do_while_stmt_802__exit__)
      assign_stmt_840_to_assign_stmt_868__entry__ <-| (merge_stmt_836__exit__)
      initFiltx_xexit_UnifiedReturnBlock <-| (assign_stmt_840_to_assign_stmt_868__exit__)
      call_stmt_871__entry__ <-| (merge_stmt_870__exit__)
      call_stmt_872__entry__ <-| (call_stmt_871__exit__)
      assign_stmt_875__entry__ <-| (call_stmt_872__exit__)
      assign_stmt_878_to_assign_stmt_938__entry__ <-| (assign_stmt_875__exit__)
      assign_stmt_941__entry__ <-| (assign_stmt_878_to_assign_stmt_938__exit__)
      assign_stmt_944__entry__ <-| (assign_stmt_941__exit__)
      assign_stmt_947_to_assign_stmt_980__entry__ <-| (assign_stmt_944__exit__)
      if_stmt_981__entry__ <-| (assign_stmt_947_to_assign_stmt_980__exit__)
      merge_stmt_987__entry__ <-| (if_stmt_981__exit__)
      assign_stmt_993__entry__ <-| (merge_stmt_987__exit__)
      if_stmt_994__entry__ <-| (assign_stmt_993__exit__)
      merge_stmt_1000__entry__ <-| (if_stmt_994__exit__)
      assign_stmt_1005__entry__ <-| (merge_stmt_1000__exit__)
      bbx_xnph6x_xix_xpreheaderx_xi_bbx_xnph6x_xix_xi <-| (assign_stmt_1005__exit__)
      assign_stmt_1027_to_assign_stmt_1033__entry__ <-| (merge_stmt_1007__exit__)
      if_stmt_1034__entry__ <-| (assign_stmt_1027_to_assign_stmt_1033__exit__)
      merge_stmt_1040__entry__ <-| (if_stmt_1034__exit__)
      bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi <-| (merge_stmt_1040__exit__)
      assign_stmt_1063_to_assign_stmt_1074__entry__ <-| (merge_stmt_1042__exit__)
      if_stmt_1075__entry__ <-| (assign_stmt_1063_to_assign_stmt_1074__exit__)
      merge_stmt_1081__entry__ <-| (if_stmt_1075__exit__)
      xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi <-| (merge_stmt_1081__exit__)
      assign_stmt_1112_to_assign_stmt_1123__entry__ <-| (merge_stmt_1092__exit__)
      if_stmt_1124__entry__ <-| (assign_stmt_1112_to_assign_stmt_1123__exit__)
      merge_stmt_1130__entry__ <-| (if_stmt_1124__exit__)
      assign_stmt_1139__entry__ <-| (merge_stmt_1130__exit__)
      divideUnsignedx_xexitx_xloopexitx_xi_mvWinx_xexit <-| (assign_stmt_1139__exit__)
      assign_stmt_1156_to_assign_stmt_1178__entry__ <-| (merge_stmt_1141__exit__)
      assign_stmt_1181__entry__ <-| (assign_stmt_1156_to_assign_stmt_1178__exit__)
      mvWinx_xexit_UnifiedReturnBlock <-| (assign_stmt_1181__exit__)
      return__ <-| (merge_stmt_1183__exit__)
      merge_stmt_1185__exit__ |-> (branch_block_stmt_694__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 290
    // constant-object-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 293
    // constant-object-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 297
    // constant-object-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 306
    // constant-object-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 309
    // constant-object-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 313
    // constant-object-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 322
    // constant-object-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 325
    // constant-object-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 329
    // constant-object-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 338
    // constant-object-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 349
    // constant-object-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 381
    // constant-object-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 389
    // constant-object-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 393
    // constant-object-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 404
    // constant-object-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 407
    // constant-object-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 419
    // constant-object-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 424
    // constant-object-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 436
    // constant-object-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 441
    // constant-object-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 451
    // constant-object-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 454
    // constant-object-declarations for block %QRSFilt%body
    //  file prog.linked.opt.aa, line 282
    // constant-object-declarations for block %QRSFilt
    //  file prog.linked.opt.aa, line 277
    // constant-declarations for block %QRSFilt%body
    //  file prog.linked.opt.aa, line 282
    // ($bitcast ($uint<8>) _b00000000  )
    $constant $W[type_cast_698_wire_constant] : $int<8> := _b00000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 285
    // constant-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 290
    // constant-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 293
    // constant-declarations for phi:  			$phi indexx_x05x_xi_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on xx_xpreheaderx_xpreheader_xx_xpreheader // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 294
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_714_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // do-while statement  
    //  file prog.linked.opt.aa, line 296
    // constant-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 297
    // constant-declarations for phi:  			$phi indexx_x05x_xi := 			  ($cast ($uint<32>) iNsTr_42 ) $on $loopback			  indexx_x05x_xi_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 298
    // @(LPbuff[indexx_x05x_xi])
    $constant $W[array_obj_ref_726_resized_base_address] : $int<4> := _b0000// 0
    $constant $W[array_obj_ref_726_offset_scale_factor_0] : $int<4> := _b0001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_732_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ->(scevgep10x_xi)
    $constant $W[ptr_deref_730_word_offset_0] : $int<4> := _b0000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_737_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000001010  )
    $constant $W[type_cast_743_wire_constant] : $int<32> := _b00000000000000000000000000001010// 10
    // constant-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 306
    // constant-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 309
    // constant-declarations for phi:  			$phi indexx_x13x_xi_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph4x_xix_xpreheader_bbx_xnph4x_xi // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 310
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_757_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // do-while statement  
    //  file prog.linked.opt.aa, line 312
    // constant-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 313
    // constant-declarations for phi:  			$phi indexx_x13x_xi := 			  ($cast ($uint<32>) iNsTr_53 ) $on $loopback			  indexx_x13x_xi_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 314
    // @(HPbuff[indexx_x13x_xi])
    $constant $W[array_obj_ref_769_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_769_offset_scale_factor_0] : $int<5> := _b00001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_775_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ->(scevgep8x_xi)
    $constant $W[ptr_deref_773_word_offset_0] : $int<5> := _b00000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_780_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000011001  )
    $constant $W[type_cast_786_wire_constant] : $int<32> := _b00000000000000000000000000011001// 25
    // constant-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 322
    // constant-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 325
    // constant-declarations for phi:  			$phi indexx_x21x_xi_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 326
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_800_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // do-while statement  
    //  file prog.linked.opt.aa, line 328
    // constant-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 329
    // constant-declarations for phi:  			$phi indexx_x21x_xi := 			  ($cast ($uint<32>) iNsTr_68 ) $on $loopback			  indexx_x21x_xi_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 330
    // @(DERIVbuff[indexx_x21x_xi])
    $constant $W[array_obj_ref_812_resized_base_address] : $int<2> := _b00// 0
    $constant $W[array_obj_ref_812_offset_scale_factor_0] : $int<2> := _b01// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_818_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ->(scevgepx_xi)
    $constant $W[ptr_deref_816_word_offset_0] : $int<2> := _b00// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_823_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000010  )
    $constant $W[type_cast_829_wire_constant] : $int<32> := _b00000000000000000000000000000010// 2
    // constant-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 338
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_839_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // LPy1
    $constant $W[STORE_LPy1_837_word_address_0] : $pointer<memory_space_11> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_843_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // LPy2
    $constant $W[STORE_LPy2_841_word_address_0] : $pointer<memory_space_12> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_847_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // HPy1
    $constant $W[STORE_HPy1_845_word_address_0] : $pointer<memory_space_8> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_851_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // WINsum
    $constant $W[STORE_WINsum_849_word_address_0] : $pointer<memory_space_19> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_855_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // LPbuff_ptr
    $constant $W[STORE_LPbuff_ptr_853_word_address_0] : $pointer<memory_space_10> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_859_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // HPbuff_ptr
    $constant $W[STORE_HPbuff_ptr_857_word_address_0] : $pointer<memory_space_7> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_863_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // DERIVbuff_ptr
    $constant $W[STORE_DERIVbuff_ptr_861_word_address_0] : $pointer<memory_space_5> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_867_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // WINbuff_ptr
    $constant $W[STORE_WINbuff_ptr_865_word_address_0] : $pointer<memory_space_18> := _b0
    // constant-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 349
    // 		$call lpFilt () () 
    //  file prog.linked.opt.aa, line 351
    // 		$call hpFilt () () 
    //  file prog.linked.opt.aa, line 352
    // DERIVbuff_ptr
    $constant $W[LOAD_DERIVbuff_ptr_877_word_address_0] : $pointer<memory_space_5> := _b0
    // @(DERIVbuff[iNsTr_6])
    $constant $W[array_obj_ref_881_resized_base_address] : $int<2> := _b00// 0
    $constant $W[array_obj_ref_881_offset_scale_factor_0] : $int<2> := _b01// 1
    // ->(iNsTr_7)
    $constant $W[ptr_deref_886_word_offset_0] : $int<2> := _b00// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) )
    $constant $W[type_cast_898_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_903_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ( $mux isposx_xi iNsTr_9  negx_xi ) 
    // ->(iNsTr_7)
    $constant $W[ptr_deref_914_word_offset_0] : $int<2> := _b00// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_920_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000010  )
    $constant $W[type_cast_926_wire_constant] : $int<32> := _b00000000000000000000000000000010// 2
    // ( $mux iNsTr_13 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_12 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_932_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // DERIVbuff_ptr
    $constant $W[STORE_DERIVbuff_ptr_936_word_address_0] : $pointer<memory_space_5> := _b0
    // WINbuff_ptr
    $constant $W[LOAD_WINbuff_ptr_946_word_address_0] : $pointer<memory_space_18> := _b0
    // WINsum
    $constant $W[LOAD_WINsum_949_word_address_0] : $pointer<memory_space_19> := _b0
    // @(WINbuff[iNsTr_20])
    $constant $W[array_obj_ref_953_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_953_offset_scale_factor_0] : $int<5> := _b00001// 1
    // ->(iNsTr_22)
    $constant $W[ptr_deref_958_word_offset_0] : $int<5> := _b00000// 0
    // WINsum
    $constant $W[STORE_WINsum_970_word_address_0] : $pointer<memory_space_19> := _b0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000001111101000000000000  ) )
    $constant $W[type_cast_978_wire_constant] : $int<32> := _b00000000000001111101000000000000// 512000
    // if-statement  
    //  file prog.linked.opt.aa, line 376
    // constant-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 381
    // ($bitcast ($uint<32>) _b00000000000000000000000000010000  )
    $constant $W[type_cast_991_wire_constant] : $int<32> := _b00000000000000000000000000010000// 16
    // if-statement  
    //  file prog.linked.opt.aa, line 384
    // constant-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 389
    // constant-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 393
    // constant-declarations for phi:  			$phi xx_x05x_xix_xi := 			  ($cast ($uint<64>) iNsTr_57 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) iNsTr_45 ) $on bbx_xnph6x_xix_xpreheaderx_xi_bbx_xnph6x_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 394
    // constant-declarations for phi:  			$phi quotientx_x04x_xix_xi := 			  ($cast ($uint<64>) iNsTr_56 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xix_xpreheaderx_xi_bbx_xnph6x_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 395
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_1020_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1025_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )
    $constant $W[type_cast_1031_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000010000// 16
    // if-statement  
    //  file prog.linked.opt.aa, line 399
    // constant-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 404
    // constant-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 407
    // constant-declarations for phi:  			$phi shifted_divisorx_x02x_xix_xi := 			  ($cast ($uint<64>) iNsTr_61 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 408
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ) )
    $constant $W[type_cast_1049_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000010000// 16
    // constant-declarations for phi:  			$phi curr_quotientx_x01x_xix_xi := 			  ($cast ($uint<64>) iNsTr_62 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 409
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )
    $constant $W[type_cast_1056_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1061_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1067_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 414
    // constant-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 419
    // constant-declarations for phi:  			$phi xx_xlcssa3 := 			  ($cast ($uint<64>) iNsTr_62 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 420
    // constant-declarations for phi:  			$phi xx_xlcssa := 			  ($cast ($uint<64>) iNsTr_61 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 421
    // constant-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 424
    // constant-declarations for phi:  			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 425
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ) )
    $constant $W[type_cast_1097_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000010000// 16
    // constant-declarations for phi:  			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 426
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )
    $constant $W[type_cast_1104_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )
    $constant $W[type_cast_1121_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000010000// 16
    // if-statement  
    //  file prog.linked.opt.aa, line 431
    // constant-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 436
    // constant-declarations for phi:  			$phi xx_xlcssa4 := 			  ($cast ($uint<64>) iNsTr_56 ) $on xx_x_crit_edgex_xix_xi_divideUnsignedx_xexitx_xloopexitx_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 437
    // constant-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 441
    // constant-declarations for phi:  			$phi outputx_x0x_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000111110100000000  ) ) $on bb_8_mvWinx_xexit			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_9_mvWinx_xexit			  ($cast ($uint<32>) extractx_xtx_xi ) $on divideUnsignedx_xexitx_xloopexitx_xi_mvWinx_xexit // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 442
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000111110100000000  ) )
    $constant $W[type_cast_1146_wire_constant] : $int<32> := _b00000000000000000111110100000000// 32000
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_1149_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ->(iNsTr_22)
    $constant $W[ptr_deref_1154_word_offset_0] : $int<5> := _b00000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1160_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000010000  )
    $constant $W[type_cast_1166_wire_constant] : $int<32> := _b00000000000000000000000000010000// 16
    // ( $mux iNsTr_32 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_31 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_1172_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // WINbuff_ptr
    $constant $W[STORE_WINbuff_ptr_1176_word_address_0] : $pointer<memory_space_18> := _b0
    // constant-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 451
    // constant-declarations for block %QRSFilt%body%
    //  file prog.linked.opt.aa, line 454
    // block %QRSFilt%body
    //  file prog.linked.opt.aa, line 282
    // 		iNsTr_0 := (initialize == ($bitcast ($uint<8>) _b00000000  ))
    //  file prog.linked.opt.aa, line 284
    // iNsTr_0
    $W[iNsTr_0_700] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 285
    // merge-statement  
    //  file prog.linked.opt.aa, line 293
    // 			$phi indexx_x05x_xi_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on xx_xpreheaderx_xpreheader_xx_xpreheader // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 294
    // indexx_x05x_xi_at_entry
    $W[indexx_x05x_xi_at_entry_710] : $int<32>
    // do-while statement  
    //  file prog.linked.opt.aa, line 296
    // ( ~ exitcond2 )
    $intermediate $W[NOT_u1_u1_748_wire] : $int<1>
    // merge-statement  
    //  file prog.linked.opt.aa, line 297
    // 			$phi indexx_x05x_xi := 			  ($cast ($uint<32>) iNsTr_42 ) $on $loopback			  indexx_x05x_xi_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 298
    // ($cast ($uint<32>) iNsTr_42 )
    $intermediate $W[type_cast_721_wire] : $int<32>
    // indexx_x05x_xi
    $W[indexx_x05x_xi_718] : $int<32>
    // 			scevgep10x_xi := @(LPbuff[indexx_x05x_xi])
    //  file prog.linked.opt.aa, line 300
    // @(LPbuff[indexx_x05x_xi])
    $intermediate $W[R_indexx_x05x_xi_725_resized] : $int<4>
    $intermediate $W[R_indexx_x05x_xi_725_scaled] : $int<4>
    $intermediate $W[array_obj_ref_726_final_offset] : $int<4>
    $intermediate $W[array_obj_ref_726_root_address] : $int<4>
    // scevgep10x_xi
    $W[scevgep10x_xi_728] : $int<32>
    // 			->(scevgep10x_xi) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 301
    // ->(scevgep10x_xi)
    $intermediate $W[ptr_deref_730_wire] : $int<32>
    $intermediate $W[ptr_deref_730_resized_base_address] : $int<4>
    $intermediate $W[ptr_deref_730_root_address] : $int<4>
    $W[ptr_deref_730_word_address_0] : $pointer<memory_space_9>
    $W[ptr_deref_730_data_0] : $int<32>
    // 			iNsTr_42 := (indexx_x05x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 302
    // iNsTr_42
    $W[iNsTr_42_739] : $int<32>
    // 			exitcond2 := (iNsTr_42 == ($bitcast ($uint<32>) _b00000000000000000000000000001010  ))
    //  file prog.linked.opt.aa, line 303
    // exitcond2
    $W[exitcond2_745] : $int<1>
    // merge-statement  
    //  file prog.linked.opt.aa, line 309
    // 			$phi indexx_x13x_xi_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph4x_xix_xpreheader_bbx_xnph4x_xi // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 310
    // indexx_x13x_xi_at_entry
    $W[indexx_x13x_xi_at_entry_753] : $int<32>
    // do-while statement  
    //  file prog.linked.opt.aa, line 312
    // ( ~ exitcond )
    $intermediate $W[NOT_u1_u1_791_wire] : $int<1>
    // merge-statement  
    //  file prog.linked.opt.aa, line 313
    // 			$phi indexx_x13x_xi := 			  ($cast ($uint<32>) iNsTr_53 ) $on $loopback			  indexx_x13x_xi_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 314
    // ($cast ($uint<32>) iNsTr_53 )
    $intermediate $W[type_cast_764_wire] : $int<32>
    // indexx_x13x_xi
    $W[indexx_x13x_xi_761] : $int<32>
    // 			scevgep8x_xi := @(HPbuff[indexx_x13x_xi])
    //  file prog.linked.opt.aa, line 316
    // @(HPbuff[indexx_x13x_xi])
    $intermediate $W[R_indexx_x13x_xi_768_resized] : $int<5>
    $intermediate $W[R_indexx_x13x_xi_768_scaled] : $int<5>
    $intermediate $W[array_obj_ref_769_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_769_root_address] : $int<5>
    // scevgep8x_xi
    $W[scevgep8x_xi_771] : $int<32>
    // 			->(scevgep8x_xi) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 317
    // ->(scevgep8x_xi)
    $intermediate $W[ptr_deref_773_wire] : $int<32>
    $intermediate $W[ptr_deref_773_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_773_root_address] : $int<5>
    $W[ptr_deref_773_word_address_0] : $pointer<memory_space_6>
    $W[ptr_deref_773_data_0] : $int<32>
    // 			iNsTr_53 := (indexx_x13x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 318
    // iNsTr_53
    $W[iNsTr_53_782] : $int<32>
    // 			exitcond := (iNsTr_53 == ($bitcast ($uint<32>) _b00000000000000000000000000011001  ))
    //  file prog.linked.opt.aa, line 319
    // exitcond
    $W[exitcond_788] : $int<1>
    // merge-statement  
    //  file prog.linked.opt.aa, line 325
    // 			$phi indexx_x21x_xi_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 326
    // indexx_x21x_xi_at_entry
    $W[indexx_x21x_xi_at_entry_796] : $int<32>
    // do-while statement  
    //  file prog.linked.opt.aa, line 328
    // ( ~ exitcond1 )
    $intermediate $W[NOT_u1_u1_834_wire] : $int<1>
    // merge-statement  
    //  file prog.linked.opt.aa, line 329
    // 			$phi indexx_x21x_xi := 			  ($cast ($uint<32>) iNsTr_68 ) $on $loopback			  indexx_x21x_xi_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 330
    // ($cast ($uint<32>) iNsTr_68 )
    $intermediate $W[type_cast_807_wire] : $int<32>
    // indexx_x21x_xi
    $W[indexx_x21x_xi_804] : $int<32>
    // 			scevgepx_xi := @(DERIVbuff[indexx_x21x_xi])
    //  file prog.linked.opt.aa, line 332
    // @(DERIVbuff[indexx_x21x_xi])
    $intermediate $W[R_indexx_x21x_xi_811_resized] : $int<2>
    $intermediate $W[R_indexx_x21x_xi_811_scaled] : $int<2>
    $intermediate $W[array_obj_ref_812_final_offset] : $int<2>
    $intermediate $W[array_obj_ref_812_root_address] : $int<2>
    // scevgepx_xi
    $W[scevgepx_xi_814] : $int<32>
    // 			->(scevgepx_xi) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 333
    // ->(scevgepx_xi)
    $intermediate $W[ptr_deref_816_wire] : $int<32>
    $intermediate $W[ptr_deref_816_resized_base_address] : $int<2>
    $intermediate $W[ptr_deref_816_root_address] : $int<2>
    $W[ptr_deref_816_word_address_0] : $pointer<memory_space_4>
    $W[ptr_deref_816_data_0] : $int<32>
    // 			iNsTr_68 := (indexx_x21x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 334
    // iNsTr_68
    $W[iNsTr_68_825] : $int<32>
    // 			exitcond1 := (iNsTr_68 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
    //  file prog.linked.opt.aa, line 335
    // exitcond1
    $W[exitcond1_831] : $int<1>
    // 		LPy1 := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 340
    // LPy1
    $constant $W[STORE_LPy1_837_word_address_0] : $pointer<memory_space_11> := _b0
    $W[STORE_LPy1_837_data_0] : $int<32>
    // 		LPy2 := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 341
    // LPy2
    $constant $W[STORE_LPy2_841_word_address_0] : $pointer<memory_space_12> := _b0
    $W[STORE_LPy2_841_data_0] : $int<32>
    // 		HPy1 := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 342
    // HPy1
    $constant $W[STORE_HPy1_845_word_address_0] : $pointer<memory_space_8> := _b0
    $W[STORE_HPy1_845_data_0] : $int<32>
    // 		WINsum := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 343
    // WINsum
    $constant $W[STORE_WINsum_849_word_address_0] : $pointer<memory_space_19> := _b0
    $W[STORE_WINsum_849_data_0] : $int<32>
    // 		LPbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 344
    // LPbuff_ptr
    $constant $W[STORE_LPbuff_ptr_853_word_address_0] : $pointer<memory_space_10> := _b0
    $W[STORE_LPbuff_ptr_853_data_0] : $int<32>
    // 		HPbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 345
    // HPbuff_ptr
    $constant $W[STORE_HPbuff_ptr_857_word_address_0] : $pointer<memory_space_7> := _b0
    $W[STORE_HPbuff_ptr_857_data_0] : $int<32>
    // 		DERIVbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 346
    // DERIVbuff_ptr
    $constant $W[STORE_DERIVbuff_ptr_861_word_address_0] : $pointer<memory_space_5> := _b0
    $W[STORE_DERIVbuff_ptr_861_data_0] : $int<32>
    // 		WINbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 347
    // WINbuff_ptr
    $constant $W[STORE_WINbuff_ptr_865_word_address_0] : $pointer<memory_space_18> := _b0
    $W[STORE_WINbuff_ptr_865_data_0] : $int<32>
    // 		$call lpFilt () () 
    //  file prog.linked.opt.aa, line 351
    // 		$call hpFilt () () 
    //  file prog.linked.opt.aa, line 352
    // 		iNsTr_5 := HPout_pipe
    //  file prog.linked.opt.aa, line 353
    // iNsTr_5
    $W[iNsTr_5_875] : $int<32>
    // 		iNsTr_6 := DERIVbuff_ptr
    //  file prog.linked.opt.aa, line 354
    // DERIVbuff_ptr
    $W[LOAD_DERIVbuff_ptr_877_data_0] : $int<32>
    // iNsTr_6
    $W[iNsTr_6_878] : $int<32>
    // 		iNsTr_7 := @(DERIVbuff[iNsTr_6])
    //  file prog.linked.opt.aa, line 355
    // @(DERIVbuff[iNsTr_6])
    $intermediate $W[R_iNsTr_6_880_resized] : $int<2>
    $intermediate $W[R_iNsTr_6_880_scaled] : $int<2>
    $intermediate $W[array_obj_ref_881_final_offset] : $int<2>
    $intermediate $W[array_obj_ref_881_root_address] : $int<2>
    // iNsTr_7
    $W[iNsTr_7_883] : $int<32>
    // 		iNsTr_8 := ->(iNsTr_7)
    //  file prog.linked.opt.aa, line 356
    // ->(iNsTr_7)
    $intermediate $W[ptr_deref_886_resized_base_address] : $int<2>
    $intermediate $W[ptr_deref_886_root_address] : $int<2>
    $W[ptr_deref_886_word_address_0] : $pointer<memory_space_4>
    $W[ptr_deref_886_data_0] : $int<32>
    // iNsTr_8
    $W[iNsTr_8_887] : $int<32>
    // 		iNsTr_9 := (iNsTr_5 - iNsTr_8)
    //  file prog.linked.opt.aa, line 357
    // iNsTr_9
    $W[iNsTr_9_892] : $int<32>
    // 		isposx_xi := (($bitcast ($int<32>) iNsTr_9 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ))
    //  file prog.linked.opt.aa, line 358
    // ($bitcast ($int<32>) iNsTr_9 )
    $intermediate $W[type_cast_895_wire] : $int<32>
    // isposx_xi
    $W[isposx_xi_900] : $int<1>
    // 		negx_xi := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_9)
    //  file prog.linked.opt.aa, line 359
    // negx_xi
    $W[negx_xi_906] : $int<32>
    // 		iNsTr_10 := ( $mux isposx_xi iNsTr_9  negx_xi ) 
    //  file prog.linked.opt.aa, line 360
    // iNsTr_10
    $W[iNsTr_10_912] : $int<32>
    // 		->(iNsTr_7) := iNsTr_5
    //  file prog.linked.opt.aa, line 361
    // ->(iNsTr_7)
    $intermediate $W[ptr_deref_914_wire] : $int<32>
    $intermediate $W[ptr_deref_914_resized_base_address] : $int<2>
    $intermediate $W[ptr_deref_914_root_address] : $int<2>
    $W[ptr_deref_914_word_address_0] : $pointer<memory_space_4>
    $W[ptr_deref_914_data_0] : $int<32>
    // 		iNsTr_12 := (iNsTr_6 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 362
    // iNsTr_12
    $W[iNsTr_12_922] : $int<32>
    // 		iNsTr_13 := (iNsTr_12 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
    //  file prog.linked.opt.aa, line 363
    // iNsTr_13
    $W[iNsTr_13_928] : $int<1>
    // 		iNsTr_14 := ( $mux iNsTr_13 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_12 ) 
    //  file prog.linked.opt.aa, line 364
    // iNsTr_14
    $W[iNsTr_14_935] : $int<32>
    // 		DERIVbuff_ptr := iNsTr_14
    //  file prog.linked.opt.aa, line 365
    // DERIVbuff_ptr
    $constant $W[STORE_DERIVbuff_ptr_936_word_address_0] : $pointer<memory_space_5> := _b0
    $W[STORE_DERIVbuff_ptr_936_data_0] : $int<32>
    // 		DERIVout_pipe := iNsTr_10
    //  file prog.linked.opt.aa, line 366
    // DERIVout_pipe
    // 		iNsTr_19 := DERIVout_pipe
    //  file prog.linked.opt.aa, line 367
    // iNsTr_19
    $W[iNsTr_19_944] : $int<32>
    // 		iNsTr_20 := WINbuff_ptr
    //  file prog.linked.opt.aa, line 368
    // WINbuff_ptr
    $W[LOAD_WINbuff_ptr_946_data_0] : $int<32>
    // iNsTr_20
    $W[iNsTr_20_947] : $int<32>
    // 		iNsTr_21 := WINsum
    //  file prog.linked.opt.aa, line 369
    // WINsum
    $W[LOAD_WINsum_949_data_0] : $int<32>
    // iNsTr_21
    $W[iNsTr_21_950] : $int<32>
    // 		iNsTr_22 := @(WINbuff[iNsTr_20])
    //  file prog.linked.opt.aa, line 370
    // @(WINbuff[iNsTr_20])
    $intermediate $W[R_iNsTr_20_952_resized] : $int<5>
    $intermediate $W[R_iNsTr_20_952_scaled] : $int<5>
    $intermediate $W[array_obj_ref_953_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_953_root_address] : $int<5>
    // iNsTr_22
    $W[iNsTr_22_955] : $int<32>
    // 		iNsTr_23 := ->(iNsTr_22)
    //  file prog.linked.opt.aa, line 371
    // ->(iNsTr_22)
    $intermediate $W[ptr_deref_958_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_958_root_address] : $int<5>
    $W[ptr_deref_958_word_address_0] : $pointer<memory_space_17>
    $W[ptr_deref_958_data_0] : $int<32>
    // iNsTr_23
    $W[iNsTr_23_959] : $int<32>
    // 		iNsTr_24 := (iNsTr_21 + iNsTr_19)
    //  file prog.linked.opt.aa, line 372
    // iNsTr_24
    $W[iNsTr_24_964] : $int<32>
    // 		iNsTr_25 := (iNsTr_24 - iNsTr_23)
    //  file prog.linked.opt.aa, line 373
    // iNsTr_25
    $W[iNsTr_25_969] : $int<32>
    // 		WINsum := iNsTr_25
    //  file prog.linked.opt.aa, line 374
    // WINsum
    $constant $W[STORE_WINsum_970_word_address_0] : $pointer<memory_space_19> := _b0
    $W[STORE_WINsum_970_data_0] : $int<32>
    // 		iNsTr_27 := (($bitcast ($int<32>) iNsTr_25 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000001111101000000000000  ) ))
    //  file prog.linked.opt.aa, line 375
    // ($bitcast ($int<32>) iNsTr_25 )
    $intermediate $W[type_cast_975_wire] : $int<32>
    // iNsTr_27
    $W[iNsTr_27_980] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 376
    // 		iNsTr_38 := (iNsTr_25 < ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
    //  file prog.linked.opt.aa, line 383
    // iNsTr_38
    $W[iNsTr_38_993] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 384
    // 		iNsTr_45 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_25 ) )
    //  file prog.linked.opt.aa, line 391
    // ($cast ($int<64>) iNsTr_25 )
    $intermediate $W[type_cast_1003_wire] : $int<64>
    // iNsTr_45
    $W[iNsTr_45_1005] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 393
    // 			$phi xx_x05x_xix_xi := 			  ($cast ($uint<64>) iNsTr_57 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) iNsTr_45 ) $on bbx_xnph6x_xix_xpreheaderx_xi_bbx_xnph6x_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 394
    // ($cast ($uint<64>) iNsTr_57 )
    $intermediate $W[type_cast_1011_wire] : $int<64>
    // ($cast ($uint<64>) iNsTr_45 )
    $intermediate $W[type_cast_1013_wire] : $int<64>
    // xx_x05x_xix_xi
    $W[xx_x05x_xix_xi_1008] : $int<64>
    // 			$phi quotientx_x04x_xix_xi := 			  ($cast ($uint<64>) iNsTr_56 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xix_xpreheaderx_xi_bbx_xnph6x_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 395
    // ($cast ($uint<64>) iNsTr_56 )
    $intermediate $W[type_cast_1017_wire] : $int<64>
    // quotientx_x04x_xix_xi
    $W[quotientx_x04x_xix_xi_1014] : $int<64>
    // 		iNsTr_48 := (xx_x05x_xix_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 397
    // iNsTr_48
    $W[iNsTr_48_1027] : $int<64>
    // 		iNsTr_49 := (iNsTr_48 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
    //  file prog.linked.opt.aa, line 398
    // iNsTr_49
    $W[iNsTr_49_1033] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 399
    // merge-statement  
    //  file prog.linked.opt.aa, line 407
    // 			$phi shifted_divisorx_x02x_xix_xi := 			  ($cast ($uint<64>) iNsTr_61 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 408
    // ($cast ($uint<64>) iNsTr_61 )
    $intermediate $W[type_cast_1046_wire] : $int<64>
    // shifted_divisorx_x02x_xix_xi
    $W[shifted_divisorx_x02x_xix_xi_1043] : $int<64>
    // 			$phi curr_quotientx_x01x_xix_xi := 			  ($cast ($uint<64>) iNsTr_62 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 409
    // ($cast ($uint<64>) iNsTr_62 )
    $intermediate $W[type_cast_1053_wire] : $int<64>
    // curr_quotientx_x01x_xix_xi
    $W[curr_quotientx_x01x_xix_xi_1050] : $int<64>
    // 		iNsTr_61 := (shifted_divisorx_x02x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 411
    // iNsTr_61
    $W[iNsTr_61_1063] : $int<64>
    // 		iNsTr_62 := (curr_quotientx_x01x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 412
    // iNsTr_62
    $W[iNsTr_62_1069] : $int<64>
    // 		iNsTr_63 := (iNsTr_61 < iNsTr_48)
    //  file prog.linked.opt.aa, line 413
    // iNsTr_63
    $W[iNsTr_63_1074] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 414
    // merge-statement  
    //  file prog.linked.opt.aa, line 419
    // 			$phi xx_xlcssa3 := 			  ($cast ($uint<64>) iNsTr_62 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 420
    // ($cast ($uint<64>) iNsTr_62 )
    $intermediate $W[type_cast_1085_wire] : $int<64>
    // xx_xlcssa3
    $W[xx_xlcssa3_1082] : $int<64>
    // 			$phi xx_xlcssa := 			  ($cast ($uint<64>) iNsTr_61 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 421
    // ($cast ($uint<64>) iNsTr_61 )
    $intermediate $W[type_cast_1089_wire] : $int<64>
    // xx_xlcssa
    $W[xx_xlcssa_1086] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 424
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 425
    // ($cast ($uint<64>) xx_xlcssa )
    $intermediate $W[type_cast_1099_wire] : $int<64>
    // shifted_divisorx_x0x_xlcssax_xix_xi
    $W[shifted_divisorx_x0x_xlcssax_xix_xi_1093] : $int<64>
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 426
    // ($cast ($uint<64>) xx_xlcssa3 )
    $intermediate $W[type_cast_1106_wire] : $int<64>
    // curr_quotientx_x0x_xlcssax_xix_xi
    $W[curr_quotientx_x0x_xlcssax_xix_xi_1100] : $int<64>
    // 		iNsTr_56 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x04x_xix_xi)
    //  file prog.linked.opt.aa, line 428
    // iNsTr_56
    $W[iNsTr_56_1112] : $int<64>
    // 		iNsTr_57 := (xx_x05x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    //  file prog.linked.opt.aa, line 429
    // iNsTr_57
    $W[iNsTr_57_1117] : $int<64>
    // 		iNsTr_58 := (iNsTr_57 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
    //  file prog.linked.opt.aa, line 430
    // iNsTr_58
    $W[iNsTr_58_1123] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 431
    // merge-statement  
    //  file prog.linked.opt.aa, line 436
    // 			$phi xx_xlcssa4 := 			  ($cast ($uint<64>) iNsTr_56 ) $on xx_x_crit_edgex_xix_xi_divideUnsignedx_xexitx_xloopexitx_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 437
    // ($cast ($uint<64>) iNsTr_56 )
    $intermediate $W[type_cast_1134_wire] : $int<64>
    // xx_xlcssa4
    $W[xx_xlcssa4_1131] : $int<64>
    // 		extractx_xtx_xi := ($cast ($uint<32>) xx_xlcssa4 )
    //  file prog.linked.opt.aa, line 439
    // extractx_xtx_xi
    $W[extractx_xtx_xi_1139] : $int<32>
    // merge-statement  
    //  file prog.linked.opt.aa, line 441
    // 			$phi outputx_x0x_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000111110100000000  ) ) $on bb_8_mvWinx_xexit			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_9_mvWinx_xexit			  ($cast ($uint<32>) extractx_xtx_xi ) $on divideUnsignedx_xexitx_xloopexitx_xi_mvWinx_xexit // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 442
    // ($cast ($uint<32>) extractx_xtx_xi )
    $intermediate $W[type_cast_1151_wire] : $int<32>
    // outputx_x0x_xi
    $W[outputx_x0x_xi_1142] : $int<32>
    // 		->(iNsTr_22) := iNsTr_19
    //  file prog.linked.opt.aa, line 444
    // ->(iNsTr_22)
    $intermediate $W[ptr_deref_1154_wire] : $int<32>
    $intermediate $W[ptr_deref_1154_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_1154_root_address] : $int<5>
    $W[ptr_deref_1154_word_address_0] : $pointer<memory_space_17>
    $W[ptr_deref_1154_data_0] : $int<32>
    // 		iNsTr_31 := (iNsTr_20 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 445
    // iNsTr_31
    $W[iNsTr_31_1162] : $int<32>
    // 		iNsTr_32 := (iNsTr_31 == ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
    //  file prog.linked.opt.aa, line 446
    // iNsTr_32
    $W[iNsTr_32_1168] : $int<1>
    // 		iNsTr_33 := ( $mux iNsTr_32 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_31 ) 
    //  file prog.linked.opt.aa, line 447
    // iNsTr_33
    $W[iNsTr_33_1175] : $int<32>
    // 		WINbuff_ptr := iNsTr_33
    //  file prog.linked.opt.aa, line 448
    // WINbuff_ptr
    $constant $W[STORE_WINbuff_ptr_1176_word_address_0] : $pointer<memory_space_18> := _b0
    $W[STORE_WINbuff_ptr_1176_data_0] : $int<32>
    // 		filt_output_pipe := outputx_x0x_xi
    //  file prog.linked.opt.aa, line 449
    // filt_output_pipe
    // datapath-instances for block %QRSFilt%body
    //  file prog.linked.opt.aa, line 282
    // 		iNsTr_0 := (initialize == ($bitcast ($uint<8>) _b00000000  ))
    //  file prog.linked.opt.aa, line 284
    // (initialize == ($bitcast ($uint<8>) _b00000000  ))
    ==[EQ_u8_u1_699_inst] (initialize type_cast_698_wire_constant) (iNsTr_0_700) 
    $delay EQ_u8_u1_699_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 285
    ==0? [if_stmt_701_branch] (iNsTr_0_700)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 293
    // 			$phi indexx_x05x_xi_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on xx_xpreheaderx_xpreheader_xx_xpreheader // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 294
    $phi [phi_stmt_710] (type_cast_714_wire_constant) ( indexx_x05x_xi_at_entry_710 )
    // datapath-instances for do-while  
    //  file prog.linked.opt.aa, line 296
    // ( ~ exitcond2 )
    ~ [NOT_u1_u1_748_inst] (exitcond2_745) (NOT_u1_u1_748_wire)   $flowthrough
    $delay NOT_u1_u1_748_inst 0
    ==0? [do_while_stmt_716_branch] (NOT_u1_u1_748_wire)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 297
    // 			$phi indexx_x05x_xi := 			  ($cast ($uint<32>) iNsTr_42 ) $on $loopback			  indexx_x05x_xi_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 298
    // ($cast ($uint<32>) iNsTr_42 )
    # := [type_cast_721_inst] (iNsTr_42_739) (type_cast_721_wire) 
    $delay type_cast_721_inst 1
    # $phi [phi_stmt_718] (type_cast_721_wire indexx_x05x_xi_at_entry_710) ( indexx_x05x_xi_718 )
    // 			scevgep10x_xi := @(LPbuff[indexx_x05x_xi])
    //  file prog.linked.opt.aa, line 300
    &/ [array_obj_ref_726_index_0_resize] (indexx_x05x_xi_718) (R_indexx_x05x_xi_725_resized) 
    &/ [array_obj_ref_726_index_0_rename] (R_indexx_x05x_xi_725_resized) (R_indexx_x05x_xi_725_scaled) 
    &/ [array_obj_ref_726_index_offset] (R_indexx_x05x_xi_725_scaled) (array_obj_ref_726_final_offset) 
    &/ [array_obj_ref_726_root_address_inst] (array_obj_ref_726_final_offset) (array_obj_ref_726_root_address) 
    # := [addr_of_727_final_reg] (array_obj_ref_726_root_address) (scevgep10x_xi_728) 
    // 			->(scevgep10x_xi) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 301
    // ->(scevgep10x_xi)
    &/ [ptr_deref_730_base_resize] (scevgep10x_xi_728) (ptr_deref_730_resized_base_address) 
    &/ [ptr_deref_730_root_address_inst] (ptr_deref_730_resized_base_address) (ptr_deref_730_root_address) 
    &/ [ptr_deref_730_addr_0] (ptr_deref_730_root_address) (ptr_deref_730_word_address_0) 
    $store [ptr_deref_730_store_0] $to memory_space_9 (ptr_deref_730_word_address_0 ptr_deref_730_data_0) 
    $delay ptr_deref_730_store_0 2
    &/ [ptr_deref_730_gather_scatter] (type_cast_732_wire_constant) (ptr_deref_730_data_0) 
    // 			iNsTr_42 := (indexx_x05x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 302
    // (indexx_x05x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_738_inst] (indexx_x05x_xi_718 type_cast_737_wire_constant) (iNsTr_42_739) 
    $delay ADD_u32_u32_738_inst 1
    // 			exitcond2 := (iNsTr_42 == ($bitcast ($uint<32>) _b00000000000000000000000000001010  ))
    //  file prog.linked.opt.aa, line 303
    // (iNsTr_42 == ($bitcast ($uint<32>) _b00000000000000000000000000001010  ))
    ==[EQ_u32_u1_744_inst] (iNsTr_42_739 type_cast_743_wire_constant) (exitcond2_745) 
    $delay EQ_u32_u1_744_inst 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 309
    // 			$phi indexx_x13x_xi_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph4x_xix_xpreheader_bbx_xnph4x_xi // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 310
    $phi [phi_stmt_753] (type_cast_757_wire_constant) ( indexx_x13x_xi_at_entry_753 )
    // datapath-instances for do-while  
    //  file prog.linked.opt.aa, line 312
    // ( ~ exitcond )
    ~ [NOT_u1_u1_791_inst] (exitcond_788) (NOT_u1_u1_791_wire)   $flowthrough
    $delay NOT_u1_u1_791_inst 0
    ==0? [do_while_stmt_759_branch] (NOT_u1_u1_791_wire)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 313
    // 			$phi indexx_x13x_xi := 			  ($cast ($uint<32>) iNsTr_53 ) $on $loopback			  indexx_x13x_xi_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 314
    // ($cast ($uint<32>) iNsTr_53 )
    # := [type_cast_764_inst] (iNsTr_53_782) (type_cast_764_wire) 
    $delay type_cast_764_inst 1
    # $phi [phi_stmt_761] (type_cast_764_wire indexx_x13x_xi_at_entry_753) ( indexx_x13x_xi_761 )
    // 			scevgep8x_xi := @(HPbuff[indexx_x13x_xi])
    //  file prog.linked.opt.aa, line 316
    &/ [array_obj_ref_769_index_0_resize] (indexx_x13x_xi_761) (R_indexx_x13x_xi_768_resized) 
    &/ [array_obj_ref_769_index_0_rename] (R_indexx_x13x_xi_768_resized) (R_indexx_x13x_xi_768_scaled) 
    &/ [array_obj_ref_769_index_offset] (R_indexx_x13x_xi_768_scaled) (array_obj_ref_769_final_offset) 
    &/ [array_obj_ref_769_root_address_inst] (array_obj_ref_769_final_offset) (array_obj_ref_769_root_address) 
    # := [addr_of_770_final_reg] (array_obj_ref_769_root_address) (scevgep8x_xi_771) 
    // 			->(scevgep8x_xi) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 317
    // ->(scevgep8x_xi)
    &/ [ptr_deref_773_base_resize] (scevgep8x_xi_771) (ptr_deref_773_resized_base_address) 
    &/ [ptr_deref_773_root_address_inst] (ptr_deref_773_resized_base_address) (ptr_deref_773_root_address) 
    &/ [ptr_deref_773_addr_0] (ptr_deref_773_root_address) (ptr_deref_773_word_address_0) 
    $store [ptr_deref_773_store_0] $to memory_space_6 (ptr_deref_773_word_address_0 ptr_deref_773_data_0) 
    $delay ptr_deref_773_store_0 2
    &/ [ptr_deref_773_gather_scatter] (type_cast_775_wire_constant) (ptr_deref_773_data_0) 
    // 			iNsTr_53 := (indexx_x13x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 318
    // (indexx_x13x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_781_inst] (indexx_x13x_xi_761 type_cast_780_wire_constant) (iNsTr_53_782) 
    $delay ADD_u32_u32_781_inst 1
    // 			exitcond := (iNsTr_53 == ($bitcast ($uint<32>) _b00000000000000000000000000011001  ))
    //  file prog.linked.opt.aa, line 319
    // (iNsTr_53 == ($bitcast ($uint<32>) _b00000000000000000000000000011001  ))
    ==[EQ_u32_u1_787_inst] (iNsTr_53_782 type_cast_786_wire_constant) (exitcond_788) 
    $delay EQ_u32_u1_787_inst 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 325
    // 			$phi indexx_x21x_xi_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 326
    $phi [phi_stmt_796] (type_cast_800_wire_constant) ( indexx_x21x_xi_at_entry_796 )
    // datapath-instances for do-while  
    //  file prog.linked.opt.aa, line 328
    // ( ~ exitcond1 )
    ~ [NOT_u1_u1_834_inst] (exitcond1_831) (NOT_u1_u1_834_wire)   $flowthrough
    $delay NOT_u1_u1_834_inst 0
    ==0? [do_while_stmt_802_branch] (NOT_u1_u1_834_wire)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 329
    // 			$phi indexx_x21x_xi := 			  ($cast ($uint<32>) iNsTr_68 ) $on $loopback			  indexx_x21x_xi_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 330
    // ($cast ($uint<32>) iNsTr_68 )
    # := [type_cast_807_inst] (iNsTr_68_825) (type_cast_807_wire) 
    $delay type_cast_807_inst 1
    # $phi [phi_stmt_804] (type_cast_807_wire indexx_x21x_xi_at_entry_796) ( indexx_x21x_xi_804 )
    // 			scevgepx_xi := @(DERIVbuff[indexx_x21x_xi])
    //  file prog.linked.opt.aa, line 332
    &/ [array_obj_ref_812_index_0_resize] (indexx_x21x_xi_804) (R_indexx_x21x_xi_811_resized) 
    &/ [array_obj_ref_812_index_0_rename] (R_indexx_x21x_xi_811_resized) (R_indexx_x21x_xi_811_scaled) 
    &/ [array_obj_ref_812_index_offset] (R_indexx_x21x_xi_811_scaled) (array_obj_ref_812_final_offset) 
    &/ [array_obj_ref_812_root_address_inst] (array_obj_ref_812_final_offset) (array_obj_ref_812_root_address) 
    # := [addr_of_813_final_reg] (array_obj_ref_812_root_address) (scevgepx_xi_814) 
    // 			->(scevgepx_xi) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 333
    // ->(scevgepx_xi)
    &/ [ptr_deref_816_base_resize] (scevgepx_xi_814) (ptr_deref_816_resized_base_address) 
    &/ [ptr_deref_816_root_address_inst] (ptr_deref_816_resized_base_address) (ptr_deref_816_root_address) 
    &/ [ptr_deref_816_addr_0] (ptr_deref_816_root_address) (ptr_deref_816_word_address_0) 
    $store [ptr_deref_816_store_0] $to memory_space_4 (ptr_deref_816_word_address_0 ptr_deref_816_data_0) 
    $delay ptr_deref_816_store_0 2
    &/ [ptr_deref_816_gather_scatter] (type_cast_818_wire_constant) (ptr_deref_816_data_0) 
    // 			iNsTr_68 := (indexx_x21x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 334
    // (indexx_x21x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_824_inst] (indexx_x21x_xi_804 type_cast_823_wire_constant) (iNsTr_68_825) 
    $delay ADD_u32_u32_824_inst 1
    // 			exitcond1 := (iNsTr_68 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
    //  file prog.linked.opt.aa, line 335
    // (iNsTr_68 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
    ==[EQ_u32_u1_830_inst] (iNsTr_68_825 type_cast_829_wire_constant) (exitcond1_831) 
    $delay EQ_u32_u1_830_inst 1
    // 		LPy1 := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 340
    // LPy1
    $store [STORE_LPy1_837_store_0] $to memory_space_11 (STORE_LPy1_837_word_address_0 STORE_LPy1_837_data_0) 
    $delay STORE_LPy1_837_store_0 1
    &/ [STORE_LPy1_837_gather_scatter] (type_cast_839_wire_constant) (STORE_LPy1_837_data_0) 
    // 		LPy2 := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 341
    // LPy2
    $store [STORE_LPy2_841_store_0] $to memory_space_12 (STORE_LPy2_841_word_address_0 STORE_LPy2_841_data_0) 
    $delay STORE_LPy2_841_store_0 1
    &/ [STORE_LPy2_841_gather_scatter] (type_cast_843_wire_constant) (STORE_LPy2_841_data_0) 
    // 		HPy1 := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 342
    // HPy1
    $store [STORE_HPy1_845_store_0] $to memory_space_8 (STORE_HPy1_845_word_address_0 STORE_HPy1_845_data_0) 
    $delay STORE_HPy1_845_store_0 1
    &/ [STORE_HPy1_845_gather_scatter] (type_cast_847_wire_constant) (STORE_HPy1_845_data_0) 
    // 		WINsum := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 343
    // WINsum
    $store [STORE_WINsum_849_store_0] $to memory_space_19 (STORE_WINsum_849_word_address_0 STORE_WINsum_849_data_0) 
    $delay STORE_WINsum_849_store_0 1
    &/ [STORE_WINsum_849_gather_scatter] (type_cast_851_wire_constant) (STORE_WINsum_849_data_0) 
    // 		LPbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 344
    // LPbuff_ptr
    $store [STORE_LPbuff_ptr_853_store_0] $to memory_space_10 (STORE_LPbuff_ptr_853_word_address_0 STORE_LPbuff_ptr_853_data_0) 
    $delay STORE_LPbuff_ptr_853_store_0 1
    &/ [STORE_LPbuff_ptr_853_gather_scatter] (type_cast_855_wire_constant) (STORE_LPbuff_ptr_853_data_0) 
    // 		HPbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 345
    // HPbuff_ptr
    $store [STORE_HPbuff_ptr_857_store_0] $to memory_space_7 (STORE_HPbuff_ptr_857_word_address_0 STORE_HPbuff_ptr_857_data_0) 
    $delay STORE_HPbuff_ptr_857_store_0 1
    &/ [STORE_HPbuff_ptr_857_gather_scatter] (type_cast_859_wire_constant) (STORE_HPbuff_ptr_857_data_0) 
    // 		DERIVbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 346
    // DERIVbuff_ptr
    $store [STORE_DERIVbuff_ptr_861_store_0] $to memory_space_5 (STORE_DERIVbuff_ptr_861_word_address_0 STORE_DERIVbuff_ptr_861_data_0) 
    $delay STORE_DERIVbuff_ptr_861_store_0 1
    &/ [STORE_DERIVbuff_ptr_861_gather_scatter] (type_cast_863_wire_constant) (STORE_DERIVbuff_ptr_861_data_0) 
    // 		WINbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 347
    // WINbuff_ptr
    $store [STORE_WINbuff_ptr_865_store_0] $to memory_space_18 (STORE_WINbuff_ptr_865_word_address_0 STORE_WINbuff_ptr_865_data_0) 
    $delay STORE_WINbuff_ptr_865_store_0 1
    &/ [STORE_WINbuff_ptr_865_gather_scatter] (type_cast_867_wire_constant) (STORE_WINbuff_ptr_865_data_0) 
    // 		$call lpFilt () () 
    //  file prog.linked.opt.aa, line 351
    $call [call_stmt_871_call] $module lpFilt() () 
    $delay call_stmt_871_call 2
    // 		$call hpFilt () () 
    //  file prog.linked.opt.aa, line 352
    $call [call_stmt_872_call] $module hpFilt() () 
    $delay call_stmt_872_call 2
    // 		iNsTr_5 := HPout_pipe
    //  file prog.linked.opt.aa, line 353
    // HPout_pipe
    $ioport $in [RPIPE_HPout_pipe_874_inst] (HPout_pipe) (iNsTr_5_875) 
    // 		iNsTr_6 := DERIVbuff_ptr
    //  file prog.linked.opt.aa, line 354
    // DERIVbuff_ptr
    $load [LOAD_DERIVbuff_ptr_877_load_0] $from memory_space_5 (LOAD_DERIVbuff_ptr_877_word_address_0) (LOAD_DERIVbuff_ptr_877_data_0) 
    $delay LOAD_DERIVbuff_ptr_877_load_0 1
    &/ [LOAD_DERIVbuff_ptr_877_gather_scatter] (LOAD_DERIVbuff_ptr_877_data_0) (iNsTr_6_878) 
    // 		iNsTr_7 := @(DERIVbuff[iNsTr_6])
    //  file prog.linked.opt.aa, line 355
    &/ [array_obj_ref_881_index_0_resize] (iNsTr_6_878) (R_iNsTr_6_880_resized) 
    &/ [array_obj_ref_881_index_0_rename] (R_iNsTr_6_880_resized) (R_iNsTr_6_880_scaled) 
    &/ [array_obj_ref_881_index_offset] (R_iNsTr_6_880_scaled) (array_obj_ref_881_final_offset) 
    &/ [array_obj_ref_881_root_address_inst] (array_obj_ref_881_final_offset) (array_obj_ref_881_root_address) 
    # := [addr_of_882_final_reg] (array_obj_ref_881_root_address) (iNsTr_7_883) 
    // 		iNsTr_8 := ->(iNsTr_7)
    //  file prog.linked.opt.aa, line 356
    // ->(iNsTr_7)
    &/ [ptr_deref_886_base_resize] (iNsTr_7_883) (ptr_deref_886_resized_base_address) 
    &/ [ptr_deref_886_root_address_inst] (ptr_deref_886_resized_base_address) (ptr_deref_886_root_address) 
    &/ [ptr_deref_886_addr_0] (ptr_deref_886_root_address) (ptr_deref_886_word_address_0) 
    $load [ptr_deref_886_load_0] $from memory_space_4 (ptr_deref_886_word_address_0) (ptr_deref_886_data_0) 
    $delay ptr_deref_886_load_0 2
    &/ [ptr_deref_886_gather_scatter] (ptr_deref_886_data_0) (iNsTr_8_887) 
    // 		iNsTr_9 := (iNsTr_5 - iNsTr_8)
    //  file prog.linked.opt.aa, line 357
    // (iNsTr_5 - iNsTr_8)
    -[SUB_u32_u32_891_inst] (iNsTr_5_875 iNsTr_8_887) (iNsTr_9_892) 
    $delay SUB_u32_u32_891_inst 1
    // 		isposx_xi := (($bitcast ($int<32>) iNsTr_9 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ))
    //  file prog.linked.opt.aa, line 358
    // ($bitcast ($int<32>) iNsTr_9 )
    $S:=$U [type_cast_895_inst] (iNsTr_9_892) (type_cast_895_wire)   $flowthrough
    $delay type_cast_895_inst 0
    // (($bitcast ($int<32>) iNsTr_9 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ))
    $S>$S[SGT_i32_u1_899_inst] (type_cast_895_wire type_cast_898_wire_constant) (isposx_xi_900) 
    $delay SGT_i32_u1_899_inst 1
    // 		negx_xi := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_9)
    //  file prog.linked.opt.aa, line 359
    // (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_9)
    -[SUB_u32_u32_905_inst] (type_cast_903_wire_constant iNsTr_9_892) (negx_xi_906) 
    $delay SUB_u32_u32_905_inst 1
    // 		iNsTr_10 := ( $mux isposx_xi iNsTr_9  negx_xi ) 
    //  file prog.linked.opt.aa, line 360
    // ( $mux isposx_xi iNsTr_9  negx_xi ) 
    ? [MUX_911_inst] (isposx_xi_900 iNsTr_9_892 negx_xi_906) (iNsTr_10_912) 
    // 		->(iNsTr_7) := iNsTr_5
    //  file prog.linked.opt.aa, line 361
    // ->(iNsTr_7)
    &/ [ptr_deref_914_base_resize] (iNsTr_7_883) (ptr_deref_914_resized_base_address) 
    &/ [ptr_deref_914_root_address_inst] (ptr_deref_914_resized_base_address) (ptr_deref_914_root_address) 
    &/ [ptr_deref_914_addr_0] (ptr_deref_914_root_address) (ptr_deref_914_word_address_0) 
    $store [ptr_deref_914_store_0] $to memory_space_4 (ptr_deref_914_word_address_0 ptr_deref_914_data_0) 
    $delay ptr_deref_914_store_0 2
    &/ [ptr_deref_914_gather_scatter] (iNsTr_5_875) (ptr_deref_914_data_0) 
    // 		iNsTr_12 := (iNsTr_6 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 362
    // (iNsTr_6 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_921_inst] (iNsTr_6_878 type_cast_920_wire_constant) (iNsTr_12_922) 
    $delay ADD_u32_u32_921_inst 1
    // 		iNsTr_13 := (iNsTr_12 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
    //  file prog.linked.opt.aa, line 363
    // (iNsTr_12 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
    ==[EQ_u32_u1_927_inst] (iNsTr_12_922 type_cast_926_wire_constant) (iNsTr_13_928) 
    $delay EQ_u32_u1_927_inst 1
    // 		iNsTr_14 := ( $mux iNsTr_13 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_12 ) 
    //  file prog.linked.opt.aa, line 364
    // ( $mux iNsTr_13 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_12 ) 
    ? [MUX_934_inst] (iNsTr_13_928 type_cast_932_wire_constant iNsTr_12_922) (iNsTr_14_935) 
    // 		DERIVbuff_ptr := iNsTr_14
    //  file prog.linked.opt.aa, line 365
    // DERIVbuff_ptr
    $store [STORE_DERIVbuff_ptr_936_store_0] $to memory_space_5 (STORE_DERIVbuff_ptr_936_word_address_0 STORE_DERIVbuff_ptr_936_data_0) 
    $delay STORE_DERIVbuff_ptr_936_store_0 1
    &/ [STORE_DERIVbuff_ptr_936_gather_scatter] (iNsTr_14_935) (STORE_DERIVbuff_ptr_936_data_0) 
    // 		DERIVout_pipe := iNsTr_10
    //  file prog.linked.opt.aa, line 366
    // DERIVout_pipe
    $ioport $out [WPIPE_DERIVout_pipe_939_inst]  (iNsTr_10_912) (DERIVout_pipe) 
    $buffering $in WPIPE_DERIVout_pipe_939_inst iNsTr_10_912 1
    // 		iNsTr_19 := DERIVout_pipe
    //  file prog.linked.opt.aa, line 367
    // DERIVout_pipe
    $ioport $in [RPIPE_DERIVout_pipe_943_inst] (DERIVout_pipe) (iNsTr_19_944) 
    // 		iNsTr_20 := WINbuff_ptr
    //  file prog.linked.opt.aa, line 368
    // WINbuff_ptr
    $load [LOAD_WINbuff_ptr_946_load_0] $from memory_space_18 (LOAD_WINbuff_ptr_946_word_address_0) (LOAD_WINbuff_ptr_946_data_0) 
    $delay LOAD_WINbuff_ptr_946_load_0 1
    &/ [LOAD_WINbuff_ptr_946_gather_scatter] (LOAD_WINbuff_ptr_946_data_0) (iNsTr_20_947) 
    // 		iNsTr_21 := WINsum
    //  file prog.linked.opt.aa, line 369
    // WINsum
    $load [LOAD_WINsum_949_load_0] $from memory_space_19 (LOAD_WINsum_949_word_address_0) (LOAD_WINsum_949_data_0) 
    $delay LOAD_WINsum_949_load_0 1
    &/ [LOAD_WINsum_949_gather_scatter] (LOAD_WINsum_949_data_0) (iNsTr_21_950) 
    // 		iNsTr_22 := @(WINbuff[iNsTr_20])
    //  file prog.linked.opt.aa, line 370
    &/ [array_obj_ref_953_index_0_resize] (iNsTr_20_947) (R_iNsTr_20_952_resized) 
    &/ [array_obj_ref_953_index_0_rename] (R_iNsTr_20_952_resized) (R_iNsTr_20_952_scaled) 
    &/ [array_obj_ref_953_index_offset] (R_iNsTr_20_952_scaled) (array_obj_ref_953_final_offset) 
    &/ [array_obj_ref_953_root_address_inst] (array_obj_ref_953_final_offset) (array_obj_ref_953_root_address) 
    # := [addr_of_954_final_reg] (array_obj_ref_953_root_address) (iNsTr_22_955) 
    // 		iNsTr_23 := ->(iNsTr_22)
    //  file prog.linked.opt.aa, line 371
    // ->(iNsTr_22)
    &/ [ptr_deref_958_base_resize] (iNsTr_22_955) (ptr_deref_958_resized_base_address) 
    &/ [ptr_deref_958_root_address_inst] (ptr_deref_958_resized_base_address) (ptr_deref_958_root_address) 
    &/ [ptr_deref_958_addr_0] (ptr_deref_958_root_address) (ptr_deref_958_word_address_0) 
    $load [ptr_deref_958_load_0] $from memory_space_17 (ptr_deref_958_word_address_0) (ptr_deref_958_data_0) 
    $delay ptr_deref_958_load_0 2
    &/ [ptr_deref_958_gather_scatter] (ptr_deref_958_data_0) (iNsTr_23_959) 
    // 		iNsTr_24 := (iNsTr_21 + iNsTr_19)
    //  file prog.linked.opt.aa, line 372
    // (iNsTr_21 + iNsTr_19)
    +[ADD_u32_u32_963_inst] (iNsTr_21_950 iNsTr_19_944) (iNsTr_24_964) 
    $delay ADD_u32_u32_963_inst 1
    // 		iNsTr_25 := (iNsTr_24 - iNsTr_23)
    //  file prog.linked.opt.aa, line 373
    // (iNsTr_24 - iNsTr_23)
    -[SUB_u32_u32_968_inst] (iNsTr_24_964 iNsTr_23_959) (iNsTr_25_969) 
    $delay SUB_u32_u32_968_inst 1
    // 		WINsum := iNsTr_25
    //  file prog.linked.opt.aa, line 374
    // WINsum
    $store [STORE_WINsum_970_store_0] $to memory_space_19 (STORE_WINsum_970_word_address_0 STORE_WINsum_970_data_0) 
    $delay STORE_WINsum_970_store_0 1
    &/ [STORE_WINsum_970_gather_scatter] (iNsTr_25_969) (STORE_WINsum_970_data_0) 
    // 		iNsTr_27 := (($bitcast ($int<32>) iNsTr_25 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000001111101000000000000  ) ))
    //  file prog.linked.opt.aa, line 375
    // ($bitcast ($int<32>) iNsTr_25 )
    $S:=$U [type_cast_975_inst] (iNsTr_25_969) (type_cast_975_wire)   $flowthrough
    $delay type_cast_975_inst 0
    // (($bitcast ($int<32>) iNsTr_25 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000001111101000000000000  ) ))
    $S>$S[SGT_i32_u1_979_inst] (type_cast_975_wire type_cast_978_wire_constant) (iNsTr_27_980) 
    $delay SGT_i32_u1_979_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 376
    ==0? [if_stmt_981_branch] (iNsTr_27_980)
    // 		iNsTr_38 := (iNsTr_25 < ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
    //  file prog.linked.opt.aa, line 383
    // (iNsTr_25 < ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
    <[ULT_u32_u1_992_inst] (iNsTr_25_969 type_cast_991_wire_constant) (iNsTr_38_993) 
    $delay ULT_u32_u1_992_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 384
    ==0? [if_stmt_994_branch] (iNsTr_38_993)
    // 		iNsTr_45 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_25 ) )
    //  file prog.linked.opt.aa, line 391
    // ($cast ($int<64>) iNsTr_25 )
    $S:=$U [type_cast_1003_inst] (iNsTr_25_969) (type_cast_1003_wire)  
    $delay type_cast_1003_inst 1
    // ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_25 ) )
    # := [type_cast_1004_inst] (type_cast_1003_wire) (iNsTr_45_1005) 
    $delay type_cast_1004_inst 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 393
    // 			$phi xx_x05x_xix_xi := 			  ($cast ($uint<64>) iNsTr_57 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) iNsTr_45 ) $on bbx_xnph6x_xix_xpreheaderx_xi_bbx_xnph6x_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 394
    // ($cast ($uint<64>) iNsTr_57 )
    # := [type_cast_1011_inst] (iNsTr_57_1117) (type_cast_1011_wire) 
    $delay type_cast_1011_inst 1
    // ($cast ($uint<64>) iNsTr_45 )
    # := [type_cast_1013_inst] (iNsTr_45_1005) (type_cast_1013_wire) 
    $delay type_cast_1013_inst 1
    $phi [phi_stmt_1008] (type_cast_1011_wire type_cast_1013_wire) ( xx_x05x_xix_xi_1008 )
    // 			$phi quotientx_x04x_xix_xi := 			  ($cast ($uint<64>) iNsTr_56 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xix_xpreheaderx_xi_bbx_xnph6x_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 395
    // ($cast ($uint<64>) iNsTr_56 )
    # := [type_cast_1017_inst] (iNsTr_56_1112) (type_cast_1017_wire) 
    $delay type_cast_1017_inst 1
    $phi [phi_stmt_1014] (type_cast_1017_wire type_cast_1020_wire_constant) ( quotientx_x04x_xix_xi_1014 )
    // 		iNsTr_48 := (xx_x05x_xix_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 397
    // (xx_x05x_xix_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    >>[LSHR_u64_u64_1026_inst] (xx_x05x_xix_xi_1008 type_cast_1025_wire_constant) (iNsTr_48_1027) 
    $delay LSHR_u64_u64_1026_inst 1
    // 		iNsTr_49 := (iNsTr_48 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
    //  file prog.linked.opt.aa, line 398
    // (iNsTr_48 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
    >[UGT_u64_u1_1032_inst] (iNsTr_48_1027 type_cast_1031_wire_constant) (iNsTr_49_1033) 
    $delay UGT_u64_u1_1032_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 399
    ==0? [if_stmt_1034_branch] (iNsTr_49_1033)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 407
    // 			$phi shifted_divisorx_x02x_xix_xi := 			  ($cast ($uint<64>) iNsTr_61 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 408
    // ($cast ($uint<64>) iNsTr_61 )
    # := [type_cast_1046_inst] (iNsTr_61_1063) (type_cast_1046_wire) 
    $delay type_cast_1046_inst 1
    $phi [phi_stmt_1043] (type_cast_1046_wire type_cast_1049_wire_constant) ( shifted_divisorx_x02x_xix_xi_1043 )
    // 			$phi curr_quotientx_x01x_xix_xi := 			  ($cast ($uint<64>) iNsTr_62 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 409
    // ($cast ($uint<64>) iNsTr_62 )
    # := [type_cast_1053_inst] (iNsTr_62_1069) (type_cast_1053_wire) 
    $delay type_cast_1053_inst 1
    $phi [phi_stmt_1050] (type_cast_1053_wire type_cast_1056_wire_constant) ( curr_quotientx_x01x_xix_xi_1050 )
    // 		iNsTr_61 := (shifted_divisorx_x02x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 411
    // (shifted_divisorx_x02x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    <<[SHL_u64_u64_1062_inst] (shifted_divisorx_x02x_xix_xi_1043 type_cast_1061_wire_constant) (iNsTr_61_1063) 
    $delay SHL_u64_u64_1062_inst 1
    // 		iNsTr_62 := (curr_quotientx_x01x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 412
    // (curr_quotientx_x01x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    <<[SHL_u64_u64_1068_inst] (curr_quotientx_x01x_xix_xi_1050 type_cast_1067_wire_constant) (iNsTr_62_1069) 
    $delay SHL_u64_u64_1068_inst 1
    // 		iNsTr_63 := (iNsTr_61 < iNsTr_48)
    //  file prog.linked.opt.aa, line 413
    // (iNsTr_61 < iNsTr_48)
    <[ULT_u64_u1_1073_inst] (iNsTr_61_1063 iNsTr_48_1027) (iNsTr_63_1074) 
    $delay ULT_u64_u1_1073_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 414
    ==0? [if_stmt_1075_branch] (iNsTr_63_1074)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 419
    // 			$phi xx_xlcssa3 := 			  ($cast ($uint<64>) iNsTr_62 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 420
    // ($cast ($uint<64>) iNsTr_62 )
    # := [type_cast_1085_inst] (iNsTr_62_1069) (type_cast_1085_wire) 
    $delay type_cast_1085_inst 1
    $phi [phi_stmt_1082] (type_cast_1085_wire) ( xx_xlcssa3_1082 )
    // 			$phi xx_xlcssa := 			  ($cast ($uint<64>) iNsTr_61 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 421
    // ($cast ($uint<64>) iNsTr_61 )
    # := [type_cast_1089_inst] (iNsTr_61_1063) (type_cast_1089_wire) 
    $delay type_cast_1089_inst 1
    $phi [phi_stmt_1086] (type_cast_1089_wire) ( xx_xlcssa_1086 )
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 424
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 425
    // ($cast ($uint<64>) xx_xlcssa )
    # := [type_cast_1099_inst] (xx_xlcssa_1086) (type_cast_1099_wire) 
    $delay type_cast_1099_inst 1
    $phi [phi_stmt_1093] (type_cast_1097_wire_constant type_cast_1099_wire) ( shifted_divisorx_x0x_xlcssax_xix_xi_1093 )
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<64>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 426
    // ($cast ($uint<64>) xx_xlcssa3 )
    # := [type_cast_1106_inst] (xx_xlcssa3_1082) (type_cast_1106_wire) 
    $delay type_cast_1106_inst 1
    $phi [phi_stmt_1100] (type_cast_1104_wire_constant type_cast_1106_wire) ( curr_quotientx_x0x_xlcssax_xix_xi_1100 )
    // 		iNsTr_56 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x04x_xix_xi)
    //  file prog.linked.opt.aa, line 428
    // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x04x_xix_xi)
    +[ADD_u64_u64_1111_inst] (curr_quotientx_x0x_xlcssax_xix_xi_1100 quotientx_x04x_xix_xi_1014) (iNsTr_56_1112) 
    $delay ADD_u64_u64_1111_inst 1
    // 		iNsTr_57 := (xx_x05x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    //  file prog.linked.opt.aa, line 429
    // (xx_x05x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    -[SUB_u64_u64_1116_inst] (xx_x05x_xix_xi_1008 shifted_divisorx_x0x_xlcssax_xix_xi_1093) (iNsTr_57_1117) 
    $delay SUB_u64_u64_1116_inst 1
    // 		iNsTr_58 := (iNsTr_57 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
    //  file prog.linked.opt.aa, line 430
    // (iNsTr_57 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
    <[ULT_u64_u1_1122_inst] (iNsTr_57_1117 type_cast_1121_wire_constant) (iNsTr_58_1123) 
    $delay ULT_u64_u1_1122_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 431
    ==0? [if_stmt_1124_branch] (iNsTr_58_1123)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 436
    // 			$phi xx_xlcssa4 := 			  ($cast ($uint<64>) iNsTr_56 ) $on xx_x_crit_edgex_xix_xi_divideUnsignedx_xexitx_xloopexitx_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 437
    // ($cast ($uint<64>) iNsTr_56 )
    # := [type_cast_1134_inst] (iNsTr_56_1112) (type_cast_1134_wire) 
    $delay type_cast_1134_inst 1
    $phi [phi_stmt_1131] (type_cast_1134_wire) ( xx_xlcssa4_1131 )
    // 		extractx_xtx_xi := ($cast ($uint<32>) xx_xlcssa4 )
    //  file prog.linked.opt.aa, line 439
    // ($cast ($uint<32>) xx_xlcssa4 )
    # := [type_cast_1138_inst] (xx_xlcssa4_1131) (extractx_xtx_xi_1139) 
    $delay type_cast_1138_inst 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 441
    // 			$phi outputx_x0x_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000111110100000000  ) ) $on bb_8_mvWinx_xexit			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_9_mvWinx_xexit			  ($cast ($uint<32>) extractx_xtx_xi ) $on divideUnsignedx_xexitx_xloopexitx_xi_mvWinx_xexit // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 442
    // ($cast ($uint<32>) extractx_xtx_xi )
    # := [type_cast_1151_inst] (extractx_xtx_xi_1139) (type_cast_1151_wire) 
    $delay type_cast_1151_inst 1
    $phi [phi_stmt_1142] (type_cast_1146_wire_constant type_cast_1149_wire_constant type_cast_1151_wire) ( outputx_x0x_xi_1142 )
    // 		->(iNsTr_22) := iNsTr_19
    //  file prog.linked.opt.aa, line 444
    // ->(iNsTr_22)
    &/ [ptr_deref_1154_base_resize] (iNsTr_22_955) (ptr_deref_1154_resized_base_address) 
    &/ [ptr_deref_1154_root_address_inst] (ptr_deref_1154_resized_base_address) (ptr_deref_1154_root_address) 
    &/ [ptr_deref_1154_addr_0] (ptr_deref_1154_root_address) (ptr_deref_1154_word_address_0) 
    $store [ptr_deref_1154_store_0] $to memory_space_17 (ptr_deref_1154_word_address_0 ptr_deref_1154_data_0) 
    $delay ptr_deref_1154_store_0 2
    &/ [ptr_deref_1154_gather_scatter] (iNsTr_19_944) (ptr_deref_1154_data_0) 
    // 		iNsTr_31 := (iNsTr_20 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 445
    // (iNsTr_20 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_1161_inst] (iNsTr_20_947 type_cast_1160_wire_constant) (iNsTr_31_1162) 
    $delay ADD_u32_u32_1161_inst 1
    // 		iNsTr_32 := (iNsTr_31 == ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
    //  file prog.linked.opt.aa, line 446
    // (iNsTr_31 == ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
    ==[EQ_u32_u1_1167_inst] (iNsTr_31_1162 type_cast_1166_wire_constant) (iNsTr_32_1168) 
    $delay EQ_u32_u1_1167_inst 1
    // 		iNsTr_33 := ( $mux iNsTr_32 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_31 ) 
    //  file prog.linked.opt.aa, line 447
    // ( $mux iNsTr_32 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_31 ) 
    ? [MUX_1174_inst] (iNsTr_32_1168 type_cast_1172_wire_constant iNsTr_31_1162) (iNsTr_33_1175) 
    // 		WINbuff_ptr := iNsTr_33
    //  file prog.linked.opt.aa, line 448
    // WINbuff_ptr
    $store [STORE_WINbuff_ptr_1176_store_0] $to memory_space_18 (STORE_WINbuff_ptr_1176_word_address_0 STORE_WINbuff_ptr_1176_data_0) 
    $delay STORE_WINbuff_ptr_1176_store_0 1
    &/ [STORE_WINbuff_ptr_1176_gather_scatter] (iNsTr_33_1175) (STORE_WINbuff_ptr_1176_data_0) 
    // 		filt_output_pipe := outputx_x0x_xi
    //  file prog.linked.opt.aa, line 449
    // filt_output_pipe
    $ioport $out [WPIPE_filt_output_pipe_1179_inst]  (outputx_x0x_xi_1142) (filt_output_pipe) 
    $buffering $in WPIPE_filt_output_pipe_1179_inst outputx_x0x_xi_1142 1
  }
  // end data-path
  // 		iNsTr_0 := (initialize == ($bitcast ($uint<8>) _b00000000  ))
  //  file prog.linked.opt.aa, line 284
  // (initialize == ($bitcast ($uint<8>) _b00000000  ))
  EQ_u8_u1_699_inst <=> (branch_block_stmt_694/assign_stmt_700/EQ_u8_u1_699_Sample/rr branch_block_stmt_694/assign_stmt_700/EQ_u8_u1_699_Update/cr) (branch_block_stmt_694/assign_stmt_700/EQ_u8_u1_699_Sample/ra branch_block_stmt_694/assign_stmt_700/EQ_u8_u1_699_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 285
  if_stmt_701_branch <=> (branch_block_stmt_694/if_stmt_701_eval_test/branch_req) (branch_block_stmt_694/if_stmt_701_else_link/else_choice_transition branch_block_stmt_694/if_stmt_701_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 290
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 293
  phi_stmt_710 <=> (branch_block_stmt_694/xx_xpreheaderx_xpreheader_xx_xpreheader_PhiReq/phi_stmt_710/phi_stmt_710_req) (branch_block_stmt_694/merge_stmt_709_PhiAck/phi_stmt_710_ack)
  // CP-DP links for do-while  do_while_stmt_716
  //  file prog.linked.opt.aa, line 296
  phi_stmt_718 <=> (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/phi_stmt_718_loopback_sample_req branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/phi_stmt_718_entry_sample_req branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/phi_stmt_718_update_start_) (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/phi_stmt_718_sample_completed_ branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/phi_stmt_718_update_completed_)
  // ($cast ($uint<32>) iNsTr_42 )
  type_cast_721_inst <=> (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/type_cast_721_Sample/rr branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/type_cast_721_Update/cr) (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/type_cast_721_Sample/ra branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/type_cast_721_Update/ca)
  // 			scevgep10x_xi := @(LPbuff[indexx_x05x_xi])
  //  file prog.linked.opt.aa, line 300
  array_obj_ref_726_index_0_resize <=> (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/array_obj_ref_726_index_resize_0/index_resize_req) (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/array_obj_ref_726_index_resize_0/index_resize_ack)
  array_obj_ref_726_index_0_rename <=> (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/array_obj_ref_726_index_scale_0/scale_rename_req) (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/array_obj_ref_726_index_scale_0/scale_rename_ack)
  array_obj_ref_726_index_offset <=> (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/array_obj_ref_726_final_index_sum_regn/req) (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/array_obj_ref_726_final_index_sum_regn/ack)
  array_obj_ref_726_root_address_inst <=> (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/array_obj_ref_726_base_plus_offset/sum_rename_req) (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/array_obj_ref_726_base_plus_offset/sum_rename_ack)
  addr_of_727_final_reg <=> (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/addr_of_727_request/req branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/addr_of_727_complete/req) (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/addr_of_727_request/ack branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/addr_of_727_complete/ack)
  // 			->(scevgep10x_xi) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 301
  ptr_deref_730_base_resize <=> (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/ptr_deref_730_base_addr_resize/base_resize_req) (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/ptr_deref_730_base_addr_resize/base_resize_ack)
  ptr_deref_730_root_address_inst <=> (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/ptr_deref_730_base_plus_offset/sum_rename_req) (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/ptr_deref_730_base_plus_offset/sum_rename_ack)
  ptr_deref_730_addr_0 <=> (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/ptr_deref_730_word_addrgen/root_register_req) (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/ptr_deref_730_word_addrgen/root_register_ack)
  ptr_deref_730_gather_scatter <=> (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/ptr_deref_730_Sample/ptr_deref_730_Split/split_req) (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/ptr_deref_730_Sample/ptr_deref_730_Split/split_ack)
  ptr_deref_730_store_0 <=> (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/ptr_deref_730_Sample/word_access_start/word_0/rr branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/ptr_deref_730_Update/word_access_complete/word_0/cr) (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/ptr_deref_730_Sample/word_access_start/word_0/ra branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/ptr_deref_730_Update/word_access_complete/word_0/ca)
  // 			iNsTr_42 := (indexx_x05x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 302
  // (indexx_x05x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_738_inst <=> (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/ADD_u32_u32_738_Sample/rr branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/ADD_u32_u32_738_Update/cr) (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/ADD_u32_u32_738_Sample/ra branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/ADD_u32_u32_738_Update/ca)
  // 			exitcond2 := (iNsTr_42 == ($bitcast ($uint<32>) _b00000000000000000000000000001010  ))
  //  file prog.linked.opt.aa, line 303
  // (iNsTr_42 == ($bitcast ($uint<32>) _b00000000000000000000000000001010  ))
  EQ_u32_u1_744_inst <=> (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/EQ_u32_u1_744_Sample/rr branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/EQ_u32_u1_744_Update/cr) (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/EQ_u32_u1_744_Sample/ra branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/EQ_u32_u1_744_Update/ca)
  // ( ~ exitcond2 )
  NOT_u1_u1_748_inst <=> (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/NOT_u1_u1_748_Sample/rr branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/NOT_u1_u1_748_Update/cr) (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/NOT_u1_u1_748_Sample/ra branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/NOT_u1_u1_748_Update/ca)
  do_while_stmt_716_branch <=> (branch_block_stmt_694/do_while_stmt_716/do_while_stmt_716_loop_body/condition_evaluated) (branch_block_stmt_694/do_while_stmt_716/loop_exit/ack branch_block_stmt_694/do_while_stmt_716/loop_taken/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 306
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 309
  phi_stmt_753 <=> (branch_block_stmt_694/bbx_xnph4x_xix_xpreheader_bbx_xnph4x_xi_PhiReq/phi_stmt_753/phi_stmt_753_req) (branch_block_stmt_694/merge_stmt_752_PhiAck/phi_stmt_753_ack)
  // CP-DP links for do-while  do_while_stmt_759
  //  file prog.linked.opt.aa, line 312
  phi_stmt_761 <=> (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/phi_stmt_761_loopback_sample_req branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/phi_stmt_761_entry_sample_req branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/phi_stmt_761_update_start_) (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/phi_stmt_761_sample_completed_ branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/phi_stmt_761_update_completed_)
  // ($cast ($uint<32>) iNsTr_53 )
  type_cast_764_inst <=> (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/type_cast_764_Sample/rr branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/type_cast_764_Update/cr) (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/type_cast_764_Sample/ra branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/type_cast_764_Update/ca)
  // 			scevgep8x_xi := @(HPbuff[indexx_x13x_xi])
  //  file prog.linked.opt.aa, line 316
  array_obj_ref_769_index_0_resize <=> (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/array_obj_ref_769_index_resize_0/index_resize_req) (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/array_obj_ref_769_index_resize_0/index_resize_ack)
  array_obj_ref_769_index_0_rename <=> (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/array_obj_ref_769_index_scale_0/scale_rename_req) (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/array_obj_ref_769_index_scale_0/scale_rename_ack)
  array_obj_ref_769_index_offset <=> (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/array_obj_ref_769_final_index_sum_regn/req) (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/array_obj_ref_769_final_index_sum_regn/ack)
  array_obj_ref_769_root_address_inst <=> (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/array_obj_ref_769_base_plus_offset/sum_rename_req) (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/array_obj_ref_769_base_plus_offset/sum_rename_ack)
  addr_of_770_final_reg <=> (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/addr_of_770_request/req branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/addr_of_770_complete/req) (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/addr_of_770_request/ack branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/addr_of_770_complete/ack)
  // 			->(scevgep8x_xi) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 317
  ptr_deref_773_base_resize <=> (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/ptr_deref_773_base_addr_resize/base_resize_req) (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/ptr_deref_773_base_addr_resize/base_resize_ack)
  ptr_deref_773_root_address_inst <=> (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/ptr_deref_773_base_plus_offset/sum_rename_req) (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/ptr_deref_773_base_plus_offset/sum_rename_ack)
  ptr_deref_773_addr_0 <=> (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/ptr_deref_773_word_addrgen/root_register_req) (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/ptr_deref_773_word_addrgen/root_register_ack)
  ptr_deref_773_gather_scatter <=> (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/ptr_deref_773_Sample/ptr_deref_773_Split/split_req) (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/ptr_deref_773_Sample/ptr_deref_773_Split/split_ack)
  ptr_deref_773_store_0 <=> (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/ptr_deref_773_Sample/word_access_start/word_0/rr branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/ptr_deref_773_Update/word_access_complete/word_0/cr) (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/ptr_deref_773_Sample/word_access_start/word_0/ra branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/ptr_deref_773_Update/word_access_complete/word_0/ca)
  // 			iNsTr_53 := (indexx_x13x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 318
  // (indexx_x13x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_781_inst <=> (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/ADD_u32_u32_781_Sample/rr branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/ADD_u32_u32_781_Update/cr) (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/ADD_u32_u32_781_Sample/ra branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/ADD_u32_u32_781_Update/ca)
  // 			exitcond := (iNsTr_53 == ($bitcast ($uint<32>) _b00000000000000000000000000011001  ))
  //  file prog.linked.opt.aa, line 319
  // (iNsTr_53 == ($bitcast ($uint<32>) _b00000000000000000000000000011001  ))
  EQ_u32_u1_787_inst <=> (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/EQ_u32_u1_787_Sample/rr branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/EQ_u32_u1_787_Update/cr) (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/EQ_u32_u1_787_Sample/ra branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/EQ_u32_u1_787_Update/ca)
  // ( ~ exitcond )
  NOT_u1_u1_791_inst <=> (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/NOT_u1_u1_791_Sample/rr branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/NOT_u1_u1_791_Update/cr) (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/NOT_u1_u1_791_Sample/ra branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/NOT_u1_u1_791_Update/ca)
  do_while_stmt_759_branch <=> (branch_block_stmt_694/do_while_stmt_759/do_while_stmt_759_loop_body/condition_evaluated) (branch_block_stmt_694/do_while_stmt_759/loop_exit/ack branch_block_stmt_694/do_while_stmt_759/loop_taken/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 322
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 325
  phi_stmt_796 <=> (branch_block_stmt_694/bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq/phi_stmt_796/phi_stmt_796_req) (branch_block_stmt_694/merge_stmt_795_PhiAck/phi_stmt_796_ack)
  // CP-DP links for do-while  do_while_stmt_802
  //  file prog.linked.opt.aa, line 328
  phi_stmt_804 <=> (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/phi_stmt_804_loopback_sample_req branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/phi_stmt_804_entry_sample_req branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/phi_stmt_804_update_start_) (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/phi_stmt_804_sample_completed_ branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/phi_stmt_804_update_completed_)
  // ($cast ($uint<32>) iNsTr_68 )
  type_cast_807_inst <=> (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/type_cast_807_Sample/rr branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/type_cast_807_Update/cr) (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/type_cast_807_Sample/ra branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/type_cast_807_Update/ca)
  // 			scevgepx_xi := @(DERIVbuff[indexx_x21x_xi])
  //  file prog.linked.opt.aa, line 332
  array_obj_ref_812_index_0_resize <=> (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/array_obj_ref_812_index_resize_0/index_resize_req) (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/array_obj_ref_812_index_resize_0/index_resize_ack)
  array_obj_ref_812_index_0_rename <=> (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/array_obj_ref_812_index_scale_0/scale_rename_req) (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/array_obj_ref_812_index_scale_0/scale_rename_ack)
  array_obj_ref_812_index_offset <=> (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/array_obj_ref_812_final_index_sum_regn/req) (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/array_obj_ref_812_final_index_sum_regn/ack)
  array_obj_ref_812_root_address_inst <=> (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/array_obj_ref_812_base_plus_offset/sum_rename_req) (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/array_obj_ref_812_base_plus_offset/sum_rename_ack)
  addr_of_813_final_reg <=> (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/addr_of_813_request/req branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/addr_of_813_complete/req) (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/addr_of_813_request/ack branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/addr_of_813_complete/ack)
  // 			->(scevgepx_xi) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 333
  ptr_deref_816_base_resize <=> (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/ptr_deref_816_base_addr_resize/base_resize_req) (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/ptr_deref_816_base_addr_resize/base_resize_ack)
  ptr_deref_816_root_address_inst <=> (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/ptr_deref_816_base_plus_offset/sum_rename_req) (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/ptr_deref_816_base_plus_offset/sum_rename_ack)
  ptr_deref_816_addr_0 <=> (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/ptr_deref_816_word_addrgen/root_register_req) (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/ptr_deref_816_word_addrgen/root_register_ack)
  ptr_deref_816_gather_scatter <=> (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/ptr_deref_816_Sample/ptr_deref_816_Split/split_req) (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/ptr_deref_816_Sample/ptr_deref_816_Split/split_ack)
  ptr_deref_816_store_0 <=> (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/ptr_deref_816_Sample/word_access_start/word_0/rr branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/ptr_deref_816_Update/word_access_complete/word_0/cr) (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/ptr_deref_816_Sample/word_access_start/word_0/ra branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/ptr_deref_816_Update/word_access_complete/word_0/ca)
  // 			iNsTr_68 := (indexx_x21x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 334
  // (indexx_x21x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_824_inst <=> (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/ADD_u32_u32_824_Sample/rr branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/ADD_u32_u32_824_Update/cr) (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/ADD_u32_u32_824_Sample/ra branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/ADD_u32_u32_824_Update/ca)
  // 			exitcond1 := (iNsTr_68 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
  //  file prog.linked.opt.aa, line 335
  // (iNsTr_68 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
  EQ_u32_u1_830_inst <=> (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/EQ_u32_u1_830_Sample/rr branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/EQ_u32_u1_830_Update/cr) (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/EQ_u32_u1_830_Sample/ra branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/EQ_u32_u1_830_Update/ca)
  // ( ~ exitcond1 )
  NOT_u1_u1_834_inst <=> (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/NOT_u1_u1_834_Sample/rr branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/NOT_u1_u1_834_Update/cr) (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/NOT_u1_u1_834_Sample/ra branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/NOT_u1_u1_834_Update/ca)
  do_while_stmt_802_branch <=> (branch_block_stmt_694/do_while_stmt_802/do_while_stmt_802_loop_body/condition_evaluated) (branch_block_stmt_694/do_while_stmt_802/loop_exit/ack branch_block_stmt_694/do_while_stmt_802/loop_taken/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 338
  // 		LPy1 := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 340
  // LPy1
  STORE_LPy1_837_gather_scatter <=> (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_LPy1_837_Sample/STORE_LPy1_837_Split/split_req) (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_LPy1_837_Sample/STORE_LPy1_837_Split/split_ack)
  STORE_LPy1_837_store_0 <=> (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_LPy1_837_Sample/word_access_start/word_0/rr branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_LPy1_837_Update/word_access_complete/word_0/cr) (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_LPy1_837_Sample/word_access_start/word_0/ra branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_LPy1_837_Update/word_access_complete/word_0/ca)
  // 		LPy2 := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 341
  // LPy2
  STORE_LPy2_841_gather_scatter <=> (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_LPy2_841_Sample/STORE_LPy2_841_Split/split_req) (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_LPy2_841_Sample/STORE_LPy2_841_Split/split_ack)
  STORE_LPy2_841_store_0 <=> (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_LPy2_841_Sample/word_access_start/word_0/rr branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_LPy2_841_Update/word_access_complete/word_0/cr) (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_LPy2_841_Sample/word_access_start/word_0/ra branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_LPy2_841_Update/word_access_complete/word_0/ca)
  // 		HPy1 := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 342
  // HPy1
  STORE_HPy1_845_gather_scatter <=> (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_HPy1_845_Sample/STORE_HPy1_845_Split/split_req) (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_HPy1_845_Sample/STORE_HPy1_845_Split/split_ack)
  STORE_HPy1_845_store_0 <=> (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_HPy1_845_Sample/word_access_start/word_0/rr branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_HPy1_845_Update/word_access_complete/word_0/cr) (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_HPy1_845_Sample/word_access_start/word_0/ra branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_HPy1_845_Update/word_access_complete/word_0/ca)
  // 		WINsum := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 343
  // WINsum
  STORE_WINsum_849_gather_scatter <=> (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_WINsum_849_Sample/STORE_WINsum_849_Split/split_req) (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_WINsum_849_Sample/STORE_WINsum_849_Split/split_ack)
  STORE_WINsum_849_store_0 <=> (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_WINsum_849_Sample/word_access_start/word_0/rr branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_WINsum_849_Update/word_access_complete/word_0/cr) (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_WINsum_849_Sample/word_access_start/word_0/ra branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_WINsum_849_Update/word_access_complete/word_0/ca)
  // 		LPbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 344
  // LPbuff_ptr
  STORE_LPbuff_ptr_853_gather_scatter <=> (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_LPbuff_ptr_853_Sample/STORE_LPbuff_ptr_853_Split/split_req) (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_LPbuff_ptr_853_Sample/STORE_LPbuff_ptr_853_Split/split_ack)
  STORE_LPbuff_ptr_853_store_0 <=> (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_LPbuff_ptr_853_Sample/word_access_start/word_0/rr branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_LPbuff_ptr_853_Update/word_access_complete/word_0/cr) (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_LPbuff_ptr_853_Sample/word_access_start/word_0/ra branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_LPbuff_ptr_853_Update/word_access_complete/word_0/ca)
  // 		HPbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 345
  // HPbuff_ptr
  STORE_HPbuff_ptr_857_gather_scatter <=> (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_HPbuff_ptr_857_Sample/STORE_HPbuff_ptr_857_Split/split_req) (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_HPbuff_ptr_857_Sample/STORE_HPbuff_ptr_857_Split/split_ack)
  STORE_HPbuff_ptr_857_store_0 <=> (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_HPbuff_ptr_857_Sample/word_access_start/word_0/rr branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_HPbuff_ptr_857_Update/word_access_complete/word_0/cr) (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_HPbuff_ptr_857_Sample/word_access_start/word_0/ra branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_HPbuff_ptr_857_Update/word_access_complete/word_0/ca)
  // 		DERIVbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 346
  // DERIVbuff_ptr
  STORE_DERIVbuff_ptr_861_gather_scatter <=> (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_DERIVbuff_ptr_861_Sample/STORE_DERIVbuff_ptr_861_Split/split_req) (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_DERIVbuff_ptr_861_Sample/STORE_DERIVbuff_ptr_861_Split/split_ack)
  STORE_DERIVbuff_ptr_861_store_0 <=> (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_DERIVbuff_ptr_861_Sample/word_access_start/word_0/rr branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_DERIVbuff_ptr_861_Update/word_access_complete/word_0/cr) (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_DERIVbuff_ptr_861_Sample/word_access_start/word_0/ra branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_DERIVbuff_ptr_861_Update/word_access_complete/word_0/ca)
  // 		WINbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 347
  // WINbuff_ptr
  STORE_WINbuff_ptr_865_gather_scatter <=> (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_WINbuff_ptr_865_Sample/STORE_WINbuff_ptr_865_Split/split_req) (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_WINbuff_ptr_865_Sample/STORE_WINbuff_ptr_865_Split/split_ack)
  STORE_WINbuff_ptr_865_store_0 <=> (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_WINbuff_ptr_865_Sample/word_access_start/word_0/rr branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_WINbuff_ptr_865_Update/word_access_complete/word_0/cr) (branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_WINbuff_ptr_865_Sample/word_access_start/word_0/ra branch_block_stmt_694/assign_stmt_840_to_assign_stmt_868/STORE_WINbuff_ptr_865_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 349
  // 		$call lpFilt () () 
  //  file prog.linked.opt.aa, line 351
  call_stmt_871_call <=> (branch_block_stmt_694/call_stmt_871/call_stmt_871_Sample/crr branch_block_stmt_694/call_stmt_871/call_stmt_871_Update/ccr) (branch_block_stmt_694/call_stmt_871/call_stmt_871_Sample/cra branch_block_stmt_694/call_stmt_871/call_stmt_871_Update/cca)
  // 		$call hpFilt () () 
  //  file prog.linked.opt.aa, line 352
  call_stmt_872_call <=> (branch_block_stmt_694/call_stmt_872/call_stmt_872_Sample/crr branch_block_stmt_694/call_stmt_872/call_stmt_872_Update/ccr) (branch_block_stmt_694/call_stmt_872/call_stmt_872_Sample/cra branch_block_stmt_694/call_stmt_872/call_stmt_872_Update/cca)
  // 		iNsTr_5 := HPout_pipe
  //  file prog.linked.opt.aa, line 353
  // HPout_pipe
  RPIPE_HPout_pipe_874_inst <=> (branch_block_stmt_694/assign_stmt_875/RPIPE_HPout_pipe_874_Sample/rr branch_block_stmt_694/assign_stmt_875/RPIPE_HPout_pipe_874_Update/cr) (branch_block_stmt_694/assign_stmt_875/RPIPE_HPout_pipe_874_Sample/ra branch_block_stmt_694/assign_stmt_875/RPIPE_HPout_pipe_874_Update/ca)
  // 		iNsTr_6 := DERIVbuff_ptr
  //  file prog.linked.opt.aa, line 354
  // DERIVbuff_ptr
  LOAD_DERIVbuff_ptr_877_gather_scatter <=> (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/LOAD_DERIVbuff_ptr_877_Update/LOAD_DERIVbuff_ptr_877_Merge/merge_req) (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/LOAD_DERIVbuff_ptr_877_Update/LOAD_DERIVbuff_ptr_877_Merge/merge_ack)
  LOAD_DERIVbuff_ptr_877_load_0 <=> (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/LOAD_DERIVbuff_ptr_877_Sample/word_access_start/word_0/rr branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/LOAD_DERIVbuff_ptr_877_Update/word_access_complete/word_0/cr) (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/LOAD_DERIVbuff_ptr_877_Sample/word_access_start/word_0/ra branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/LOAD_DERIVbuff_ptr_877_Update/word_access_complete/word_0/ca)
  // 		iNsTr_7 := @(DERIVbuff[iNsTr_6])
  //  file prog.linked.opt.aa, line 355
  array_obj_ref_881_index_0_resize <=> (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/array_obj_ref_881_index_resize_0/index_resize_req) (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/array_obj_ref_881_index_resize_0/index_resize_ack)
  array_obj_ref_881_index_0_rename <=> (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/array_obj_ref_881_index_scale_0/scale_rename_req) (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/array_obj_ref_881_index_scale_0/scale_rename_ack)
  array_obj_ref_881_index_offset <=> (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/array_obj_ref_881_final_index_sum_regn/req) (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/array_obj_ref_881_final_index_sum_regn/ack)
  array_obj_ref_881_root_address_inst <=> (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/array_obj_ref_881_base_plus_offset/sum_rename_req) (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/array_obj_ref_881_base_plus_offset/sum_rename_ack)
  addr_of_882_final_reg <=> (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/addr_of_882_request/req branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/addr_of_882_complete/req) (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/addr_of_882_request/ack branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/addr_of_882_complete/ack)
  // 		iNsTr_8 := ->(iNsTr_7)
  //  file prog.linked.opt.aa, line 356
  ptr_deref_886_base_resize <=> (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/ptr_deref_886_base_addr_resize/base_resize_req) (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/ptr_deref_886_base_addr_resize/base_resize_ack)
  ptr_deref_886_root_address_inst <=> (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/ptr_deref_886_base_plus_offset/sum_rename_req) (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/ptr_deref_886_base_plus_offset/sum_rename_ack)
  ptr_deref_886_addr_0 <=> (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/ptr_deref_886_word_addrgen/root_register_req) (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/ptr_deref_886_word_addrgen/root_register_ack)
  ptr_deref_886_gather_scatter <=> (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/ptr_deref_886_Update/ptr_deref_886_Merge/merge_req) (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/ptr_deref_886_Update/ptr_deref_886_Merge/merge_ack)
  ptr_deref_886_load_0 <=> (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/ptr_deref_886_Sample/word_access_start/word_0/rr branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/ptr_deref_886_Update/word_access_complete/word_0/cr) (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/ptr_deref_886_Sample/word_access_start/word_0/ra branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/ptr_deref_886_Update/word_access_complete/word_0/ca)
  // 		iNsTr_9 := (iNsTr_5 - iNsTr_8)
  //  file prog.linked.opt.aa, line 357
  // (iNsTr_5 - iNsTr_8)
  SUB_u32_u32_891_inst <=> (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/SUB_u32_u32_891_Sample/rr branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/SUB_u32_u32_891_Update/cr) (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/SUB_u32_u32_891_Sample/ra branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/SUB_u32_u32_891_Update/ca)
  // 		isposx_xi := (($bitcast ($int<32>) iNsTr_9 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ))
  //  file prog.linked.opt.aa, line 358
  // (($bitcast ($int<32>) iNsTr_9 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ))
  // ($bitcast ($int<32>) iNsTr_9 )
  type_cast_895_inst <=> (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/type_cast_895_Sample/rr branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/type_cast_895_Update/cr) (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/type_cast_895_Sample/ra branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/type_cast_895_Update/ca)
  SGT_i32_u1_899_inst <=> (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/SGT_i32_u1_899_Sample/rr branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/SGT_i32_u1_899_Update/cr) (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/SGT_i32_u1_899_Sample/ra branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/SGT_i32_u1_899_Update/ca)
  // 		negx_xi := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_9)
  //  file prog.linked.opt.aa, line 359
  // (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_9)
  SUB_u32_u32_905_inst <=> (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/SUB_u32_u32_905_Sample/rr branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/SUB_u32_u32_905_Update/cr) (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/SUB_u32_u32_905_Sample/ra branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/SUB_u32_u32_905_Update/ca)
  // 		iNsTr_10 := ( $mux isposx_xi iNsTr_9  negx_xi ) 
  //  file prog.linked.opt.aa, line 360
  // ( $mux isposx_xi iNsTr_9  negx_xi ) 
  MUX_911_inst <=> (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/MUX_911_start/req branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/MUX_911_complete/req) (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/MUX_911_start/ack branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/MUX_911_complete/ack)
  // 		->(iNsTr_7) := iNsTr_5
  //  file prog.linked.opt.aa, line 361
  ptr_deref_914_base_resize <=> (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/ptr_deref_914_base_addr_resize/base_resize_req) (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/ptr_deref_914_base_addr_resize/base_resize_ack)
  ptr_deref_914_root_address_inst <=> (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/ptr_deref_914_base_plus_offset/sum_rename_req) (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/ptr_deref_914_base_plus_offset/sum_rename_ack)
  ptr_deref_914_addr_0 <=> (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/ptr_deref_914_word_addrgen/root_register_req) (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/ptr_deref_914_word_addrgen/root_register_ack)
  ptr_deref_914_gather_scatter <=> (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/ptr_deref_914_Sample/ptr_deref_914_Split/split_req) (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/ptr_deref_914_Sample/ptr_deref_914_Split/split_ack)
  ptr_deref_914_store_0 <=> (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/ptr_deref_914_Sample/word_access_start/word_0/rr branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/ptr_deref_914_Update/word_access_complete/word_0/cr) (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/ptr_deref_914_Sample/word_access_start/word_0/ra branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/ptr_deref_914_Update/word_access_complete/word_0/ca)
  // 		iNsTr_12 := (iNsTr_6 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 362
  // (iNsTr_6 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_921_inst <=> (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/ADD_u32_u32_921_Sample/rr branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/ADD_u32_u32_921_Update/cr) (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/ADD_u32_u32_921_Sample/ra branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/ADD_u32_u32_921_Update/ca)
  // 		iNsTr_13 := (iNsTr_12 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
  //  file prog.linked.opt.aa, line 363
  // (iNsTr_12 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
  EQ_u32_u1_927_inst <=> (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/EQ_u32_u1_927_Sample/rr branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/EQ_u32_u1_927_Update/cr) (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/EQ_u32_u1_927_Sample/ra branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/EQ_u32_u1_927_Update/ca)
  // 		iNsTr_14 := ( $mux iNsTr_13 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_12 ) 
  //  file prog.linked.opt.aa, line 364
  // ( $mux iNsTr_13 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_12 ) 
  MUX_934_inst <=> (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/MUX_934_start/req branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/MUX_934_complete/req) (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/MUX_934_start/ack branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/MUX_934_complete/ack)
  // 		DERIVbuff_ptr := iNsTr_14
  //  file prog.linked.opt.aa, line 365
  // DERIVbuff_ptr
  STORE_DERIVbuff_ptr_936_gather_scatter <=> (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/STORE_DERIVbuff_ptr_936_Sample/STORE_DERIVbuff_ptr_936_Split/split_req) (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/STORE_DERIVbuff_ptr_936_Sample/STORE_DERIVbuff_ptr_936_Split/split_ack)
  STORE_DERIVbuff_ptr_936_store_0 <=> (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/STORE_DERIVbuff_ptr_936_Sample/word_access_start/word_0/rr branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/STORE_DERIVbuff_ptr_936_Update/word_access_complete/word_0/cr) (branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/STORE_DERIVbuff_ptr_936_Sample/word_access_start/word_0/ra branch_block_stmt_694/assign_stmt_878_to_assign_stmt_938/STORE_DERIVbuff_ptr_936_Update/word_access_complete/word_0/ca)
  // 		DERIVout_pipe := iNsTr_10
  //  file prog.linked.opt.aa, line 366
  // DERIVout_pipe
  WPIPE_DERIVout_pipe_939_inst <=> (branch_block_stmt_694/assign_stmt_941/WPIPE_DERIVout_pipe_939_Sample/req branch_block_stmt_694/assign_stmt_941/WPIPE_DERIVout_pipe_939_Update/req) (branch_block_stmt_694/assign_stmt_941/WPIPE_DERIVout_pipe_939_Sample/ack branch_block_stmt_694/assign_stmt_941/WPIPE_DERIVout_pipe_939_Update/ack)
  // 		iNsTr_19 := DERIVout_pipe
  //  file prog.linked.opt.aa, line 367
  // DERIVout_pipe
  RPIPE_DERIVout_pipe_943_inst <=> (branch_block_stmt_694/assign_stmt_944/RPIPE_DERIVout_pipe_943_Sample/rr branch_block_stmt_694/assign_stmt_944/RPIPE_DERIVout_pipe_943_Update/cr) (branch_block_stmt_694/assign_stmt_944/RPIPE_DERIVout_pipe_943_Sample/ra branch_block_stmt_694/assign_stmt_944/RPIPE_DERIVout_pipe_943_Update/ca)
  // 		iNsTr_20 := WINbuff_ptr
  //  file prog.linked.opt.aa, line 368
  // WINbuff_ptr
  LOAD_WINbuff_ptr_946_gather_scatter <=> (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/LOAD_WINbuff_ptr_946_Update/LOAD_WINbuff_ptr_946_Merge/merge_req) (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/LOAD_WINbuff_ptr_946_Update/LOAD_WINbuff_ptr_946_Merge/merge_ack)
  LOAD_WINbuff_ptr_946_load_0 <=> (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/LOAD_WINbuff_ptr_946_Sample/word_access_start/word_0/rr branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/LOAD_WINbuff_ptr_946_Update/word_access_complete/word_0/cr) (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/LOAD_WINbuff_ptr_946_Sample/word_access_start/word_0/ra branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/LOAD_WINbuff_ptr_946_Update/word_access_complete/word_0/ca)
  // 		iNsTr_21 := WINsum
  //  file prog.linked.opt.aa, line 369
  // WINsum
  LOAD_WINsum_949_gather_scatter <=> (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/LOAD_WINsum_949_Update/LOAD_WINsum_949_Merge/merge_req) (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/LOAD_WINsum_949_Update/LOAD_WINsum_949_Merge/merge_ack)
  LOAD_WINsum_949_load_0 <=> (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/LOAD_WINsum_949_Sample/word_access_start/word_0/rr branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/LOAD_WINsum_949_Update/word_access_complete/word_0/cr) (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/LOAD_WINsum_949_Sample/word_access_start/word_0/ra branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/LOAD_WINsum_949_Update/word_access_complete/word_0/ca)
  // 		iNsTr_22 := @(WINbuff[iNsTr_20])
  //  file prog.linked.opt.aa, line 370
  array_obj_ref_953_index_0_resize <=> (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/array_obj_ref_953_index_resize_0/index_resize_req) (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/array_obj_ref_953_index_resize_0/index_resize_ack)
  array_obj_ref_953_index_0_rename <=> (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/array_obj_ref_953_index_scale_0/scale_rename_req) (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/array_obj_ref_953_index_scale_0/scale_rename_ack)
  array_obj_ref_953_index_offset <=> (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/array_obj_ref_953_final_index_sum_regn/req) (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/array_obj_ref_953_final_index_sum_regn/ack)
  array_obj_ref_953_root_address_inst <=> (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/array_obj_ref_953_base_plus_offset/sum_rename_req) (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/array_obj_ref_953_base_plus_offset/sum_rename_ack)
  addr_of_954_final_reg <=> (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/addr_of_954_request/req branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/addr_of_954_complete/req) (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/addr_of_954_request/ack branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/addr_of_954_complete/ack)
  // 		iNsTr_23 := ->(iNsTr_22)
  //  file prog.linked.opt.aa, line 371
  ptr_deref_958_base_resize <=> (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/ptr_deref_958_base_addr_resize/base_resize_req) (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/ptr_deref_958_base_addr_resize/base_resize_ack)
  ptr_deref_958_root_address_inst <=> (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/ptr_deref_958_base_plus_offset/sum_rename_req) (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/ptr_deref_958_base_plus_offset/sum_rename_ack)
  ptr_deref_958_addr_0 <=> (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/ptr_deref_958_word_addrgen/root_register_req) (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/ptr_deref_958_word_addrgen/root_register_ack)
  ptr_deref_958_gather_scatter <=> (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/ptr_deref_958_Update/ptr_deref_958_Merge/merge_req) (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/ptr_deref_958_Update/ptr_deref_958_Merge/merge_ack)
  ptr_deref_958_load_0 <=> (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/ptr_deref_958_Sample/word_access_start/word_0/rr branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/ptr_deref_958_Update/word_access_complete/word_0/cr) (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/ptr_deref_958_Sample/word_access_start/word_0/ra branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/ptr_deref_958_Update/word_access_complete/word_0/ca)
  // 		iNsTr_24 := (iNsTr_21 + iNsTr_19)
  //  file prog.linked.opt.aa, line 372
  // (iNsTr_21 + iNsTr_19)
  ADD_u32_u32_963_inst <=> (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/ADD_u32_u32_963_Sample/rr branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/ADD_u32_u32_963_Update/cr) (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/ADD_u32_u32_963_Sample/ra branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/ADD_u32_u32_963_Update/ca)
  // 		iNsTr_25 := (iNsTr_24 - iNsTr_23)
  //  file prog.linked.opt.aa, line 373
  // (iNsTr_24 - iNsTr_23)
  SUB_u32_u32_968_inst <=> (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/SUB_u32_u32_968_Sample/rr branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/SUB_u32_u32_968_Update/cr) (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/SUB_u32_u32_968_Sample/ra branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/SUB_u32_u32_968_Update/ca)
  // 		WINsum := iNsTr_25
  //  file prog.linked.opt.aa, line 374
  // WINsum
  STORE_WINsum_970_gather_scatter <=> (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/STORE_WINsum_970_Sample/STORE_WINsum_970_Split/split_req) (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/STORE_WINsum_970_Sample/STORE_WINsum_970_Split/split_ack)
  STORE_WINsum_970_store_0 <=> (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/STORE_WINsum_970_Sample/word_access_start/word_0/rr branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/STORE_WINsum_970_Update/word_access_complete/word_0/cr) (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/STORE_WINsum_970_Sample/word_access_start/word_0/ra branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/STORE_WINsum_970_Update/word_access_complete/word_0/ca)
  // 		iNsTr_27 := (($bitcast ($int<32>) iNsTr_25 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000001111101000000000000  ) ))
  //  file prog.linked.opt.aa, line 375
  // (($bitcast ($int<32>) iNsTr_25 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000001111101000000000000  ) ))
  // ($bitcast ($int<32>) iNsTr_25 )
  type_cast_975_inst <=> (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/type_cast_975_Sample/rr branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/type_cast_975_Update/cr) (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/type_cast_975_Sample/ra branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/type_cast_975_Update/ca)
  SGT_i32_u1_979_inst <=> (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/SGT_i32_u1_979_Sample/rr branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/SGT_i32_u1_979_Update/cr) (branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/SGT_i32_u1_979_Sample/ra branch_block_stmt_694/assign_stmt_947_to_assign_stmt_980/SGT_i32_u1_979_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 376
  if_stmt_981_branch <=> (branch_block_stmt_694/if_stmt_981_eval_test/branch_req) (branch_block_stmt_694/if_stmt_981_else_link/else_choice_transition branch_block_stmt_694/if_stmt_981_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 381
  // 		iNsTr_38 := (iNsTr_25 < ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
  //  file prog.linked.opt.aa, line 383
  // (iNsTr_25 < ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
  ULT_u32_u1_992_inst <=> (branch_block_stmt_694/assign_stmt_993/ULT_u32_u1_992_Sample/rr branch_block_stmt_694/assign_stmt_993/ULT_u32_u1_992_Update/cr) (branch_block_stmt_694/assign_stmt_993/ULT_u32_u1_992_Sample/ra branch_block_stmt_694/assign_stmt_993/ULT_u32_u1_992_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 384
  if_stmt_994_branch <=> (branch_block_stmt_694/if_stmt_994_eval_test/branch_req) (branch_block_stmt_694/if_stmt_994_else_link/else_choice_transition branch_block_stmt_694/if_stmt_994_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 389
  // 		iNsTr_45 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_25 ) )
  //  file prog.linked.opt.aa, line 391
  // ($cast ($int<64>) iNsTr_25 )
  type_cast_1003_inst <=> (branch_block_stmt_694/assign_stmt_1005/type_cast_1003_Sample/rr branch_block_stmt_694/assign_stmt_1005/type_cast_1003_Update/cr) (branch_block_stmt_694/assign_stmt_1005/type_cast_1003_Sample/ra branch_block_stmt_694/assign_stmt_1005/type_cast_1003_Update/ca)
  // ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_25 ) )
  type_cast_1004_inst <=> (branch_block_stmt_694/assign_stmt_1005/type_cast_1004_Sample/rr branch_block_stmt_694/assign_stmt_1005/type_cast_1004_Update/cr) (branch_block_stmt_694/assign_stmt_1005/type_cast_1004_Sample/ra branch_block_stmt_694/assign_stmt_1005/type_cast_1004_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 393
  // ($cast ($uint<64>) iNsTr_57 )
  type_cast_1011_inst <=> (branch_block_stmt_694/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_1008/phi_stmt_1008_sources/type_cast_1011/SplitProtocol/Sample/rr branch_block_stmt_694/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_1008/phi_stmt_1008_sources/type_cast_1011/SplitProtocol/Update/cr) (branch_block_stmt_694/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_1008/phi_stmt_1008_sources/type_cast_1011/SplitProtocol/Sample/ra branch_block_stmt_694/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_1008/phi_stmt_1008_sources/type_cast_1011/SplitProtocol/Update/ca)
  // ($cast ($uint<64>) iNsTr_45 )
  type_cast_1013_inst <=> (branch_block_stmt_694/bbx_xnph6x_xix_xpreheaderx_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_1008/phi_stmt_1008_sources/type_cast_1013/SplitProtocol/Sample/rr branch_block_stmt_694/bbx_xnph6x_xix_xpreheaderx_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_1008/phi_stmt_1008_sources/type_cast_1013/SplitProtocol/Update/cr) (branch_block_stmt_694/bbx_xnph6x_xix_xpreheaderx_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_1008/phi_stmt_1008_sources/type_cast_1013/SplitProtocol/Sample/ra branch_block_stmt_694/bbx_xnph6x_xix_xpreheaderx_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_1008/phi_stmt_1008_sources/type_cast_1013/SplitProtocol/Update/ca)
  phi_stmt_1008 <=> (branch_block_stmt_694/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_1008/phi_stmt_1008_req branch_block_stmt_694/bbx_xnph6x_xix_xpreheaderx_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_1008/phi_stmt_1008_req) (branch_block_stmt_694/merge_stmt_1007_PhiAck/phi_stmt_1008_ack)
  // ($cast ($uint<64>) iNsTr_56 )
  type_cast_1017_inst <=> (branch_block_stmt_694/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_1014/phi_stmt_1014_sources/type_cast_1017/SplitProtocol/Sample/rr branch_block_stmt_694/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_1014/phi_stmt_1014_sources/type_cast_1017/SplitProtocol/Update/cr) (branch_block_stmt_694/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_1014/phi_stmt_1014_sources/type_cast_1017/SplitProtocol/Sample/ra branch_block_stmt_694/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_1014/phi_stmt_1014_sources/type_cast_1017/SplitProtocol/Update/ca)
  phi_stmt_1014 <=> (branch_block_stmt_694/xx_x_crit_edgex_xix_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_1014/phi_stmt_1014_req branch_block_stmt_694/bbx_xnph6x_xix_xpreheaderx_xi_bbx_xnph6x_xix_xi_PhiReq/phi_stmt_1014/phi_stmt_1014_req) (branch_block_stmt_694/merge_stmt_1007_PhiAck/phi_stmt_1014_ack)
  // 		iNsTr_48 := (xx_x05x_xix_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 397
  // (xx_x05x_xix_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  LSHR_u64_u64_1026_inst <=> (branch_block_stmt_694/assign_stmt_1027_to_assign_stmt_1033/LSHR_u64_u64_1026_Sample/rr branch_block_stmt_694/assign_stmt_1027_to_assign_stmt_1033/LSHR_u64_u64_1026_Update/cr) (branch_block_stmt_694/assign_stmt_1027_to_assign_stmt_1033/LSHR_u64_u64_1026_Sample/ra branch_block_stmt_694/assign_stmt_1027_to_assign_stmt_1033/LSHR_u64_u64_1026_Update/ca)
  // 		iNsTr_49 := (iNsTr_48 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
  //  file prog.linked.opt.aa, line 398
  // (iNsTr_48 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
  UGT_u64_u1_1032_inst <=> (branch_block_stmt_694/assign_stmt_1027_to_assign_stmt_1033/UGT_u64_u1_1032_Sample/rr branch_block_stmt_694/assign_stmt_1027_to_assign_stmt_1033/UGT_u64_u1_1032_Update/cr) (branch_block_stmt_694/assign_stmt_1027_to_assign_stmt_1033/UGT_u64_u1_1032_Sample/ra branch_block_stmt_694/assign_stmt_1027_to_assign_stmt_1033/UGT_u64_u1_1032_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 399
  if_stmt_1034_branch <=> (branch_block_stmt_694/if_stmt_1034_eval_test/branch_req) (branch_block_stmt_694/if_stmt_1034_else_link/else_choice_transition branch_block_stmt_694/if_stmt_1034_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 404
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 407
  // ($cast ($uint<64>) iNsTr_61 )
  type_cast_1046_inst <=> (branch_block_stmt_694/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1043/phi_stmt_1043_sources/type_cast_1046/SplitProtocol/Sample/rr branch_block_stmt_694/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1043/phi_stmt_1043_sources/type_cast_1046/SplitProtocol/Update/cr) (branch_block_stmt_694/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1043/phi_stmt_1043_sources/type_cast_1046/SplitProtocol/Sample/ra branch_block_stmt_694/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1043/phi_stmt_1043_sources/type_cast_1046/SplitProtocol/Update/ca)
  phi_stmt_1043 <=> (branch_block_stmt_694/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1043/phi_stmt_1043_req branch_block_stmt_694/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1043/phi_stmt_1043_req) (branch_block_stmt_694/merge_stmt_1042_PhiAck/phi_stmt_1043_ack)
  // ($cast ($uint<64>) iNsTr_62 )
  type_cast_1053_inst <=> (branch_block_stmt_694/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1050/phi_stmt_1050_sources/type_cast_1053/SplitProtocol/Sample/rr branch_block_stmt_694/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1050/phi_stmt_1050_sources/type_cast_1053/SplitProtocol/Update/cr) (branch_block_stmt_694/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1050/phi_stmt_1050_sources/type_cast_1053/SplitProtocol/Sample/ra branch_block_stmt_694/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1050/phi_stmt_1050_sources/type_cast_1053/SplitProtocol/Update/ca)
  phi_stmt_1050 <=> (branch_block_stmt_694/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1050/phi_stmt_1050_req branch_block_stmt_694/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1050/phi_stmt_1050_req) (branch_block_stmt_694/merge_stmt_1042_PhiAck/phi_stmt_1050_ack)
  // 		iNsTr_61 := (shifted_divisorx_x02x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 411
  // (shifted_divisorx_x02x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  SHL_u64_u64_1062_inst <=> (branch_block_stmt_694/assign_stmt_1063_to_assign_stmt_1074/SHL_u64_u64_1062_Sample/rr branch_block_stmt_694/assign_stmt_1063_to_assign_stmt_1074/SHL_u64_u64_1062_Update/cr) (branch_block_stmt_694/assign_stmt_1063_to_assign_stmt_1074/SHL_u64_u64_1062_Sample/ra branch_block_stmt_694/assign_stmt_1063_to_assign_stmt_1074/SHL_u64_u64_1062_Update/ca)
  // 		iNsTr_62 := (curr_quotientx_x01x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 412
  // (curr_quotientx_x01x_xix_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  SHL_u64_u64_1068_inst <=> (branch_block_stmt_694/assign_stmt_1063_to_assign_stmt_1074/SHL_u64_u64_1068_Sample/rr branch_block_stmt_694/assign_stmt_1063_to_assign_stmt_1074/SHL_u64_u64_1068_Update/cr) (branch_block_stmt_694/assign_stmt_1063_to_assign_stmt_1074/SHL_u64_u64_1068_Sample/ra branch_block_stmt_694/assign_stmt_1063_to_assign_stmt_1074/SHL_u64_u64_1068_Update/ca)
  // 		iNsTr_63 := (iNsTr_61 < iNsTr_48)
  //  file prog.linked.opt.aa, line 413
  // (iNsTr_61 < iNsTr_48)
  ULT_u64_u1_1073_inst <=> (branch_block_stmt_694/assign_stmt_1063_to_assign_stmt_1074/ULT_u64_u1_1073_Sample/rr branch_block_stmt_694/assign_stmt_1063_to_assign_stmt_1074/ULT_u64_u1_1073_Update/cr) (branch_block_stmt_694/assign_stmt_1063_to_assign_stmt_1074/ULT_u64_u1_1073_Sample/ra branch_block_stmt_694/assign_stmt_1063_to_assign_stmt_1074/ULT_u64_u1_1073_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 414
  if_stmt_1075_branch <=> (branch_block_stmt_694/if_stmt_1075_eval_test/branch_req) (branch_block_stmt_694/if_stmt_1075_else_link/else_choice_transition branch_block_stmt_694/if_stmt_1075_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 419
  // ($cast ($uint<64>) iNsTr_62 )
  type_cast_1085_inst <=> (branch_block_stmt_694/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1082/phi_stmt_1082_sources/type_cast_1085/SplitProtocol/Sample/rr branch_block_stmt_694/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1082/phi_stmt_1082_sources/type_cast_1085/SplitProtocol/Update/cr) (branch_block_stmt_694/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1082/phi_stmt_1082_sources/type_cast_1085/SplitProtocol/Sample/ra branch_block_stmt_694/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1082/phi_stmt_1082_sources/type_cast_1085/SplitProtocol/Update/ca)
  phi_stmt_1082 <=> (branch_block_stmt_694/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1082/phi_stmt_1082_req) (branch_block_stmt_694/merge_stmt_1081_PhiAck/phi_stmt_1082_ack)
  // ($cast ($uint<64>) iNsTr_61 )
  type_cast_1089_inst <=> (branch_block_stmt_694/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1086/phi_stmt_1086_sources/type_cast_1089/SplitProtocol/Sample/rr branch_block_stmt_694/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1086/phi_stmt_1086_sources/type_cast_1089/SplitProtocol/Update/cr) (branch_block_stmt_694/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1086/phi_stmt_1086_sources/type_cast_1089/SplitProtocol/Sample/ra branch_block_stmt_694/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1086/phi_stmt_1086_sources/type_cast_1089/SplitProtocol/Update/ca)
  phi_stmt_1086 <=> (branch_block_stmt_694/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1086/phi_stmt_1086_req) (branch_block_stmt_694/merge_stmt_1081_PhiAck/phi_stmt_1086_ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 424
  // ($cast ($uint<64>) xx_xlcssa )
  type_cast_1099_inst <=> (branch_block_stmt_694/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1093/phi_stmt_1093_sources/type_cast_1099/SplitProtocol/Sample/rr branch_block_stmt_694/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1093/phi_stmt_1093_sources/type_cast_1099/SplitProtocol/Update/cr) (branch_block_stmt_694/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1093/phi_stmt_1093_sources/type_cast_1099/SplitProtocol/Sample/ra branch_block_stmt_694/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1093/phi_stmt_1093_sources/type_cast_1099/SplitProtocol/Update/ca)
  phi_stmt_1093 <=> (branch_block_stmt_694/bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1093/phi_stmt_1093_req branch_block_stmt_694/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1093/phi_stmt_1093_req) (branch_block_stmt_694/merge_stmt_1092_PhiAck/phi_stmt_1093_ack)
  // ($cast ($uint<64>) xx_xlcssa3 )
  type_cast_1106_inst <=> (branch_block_stmt_694/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1100/phi_stmt_1100_sources/type_cast_1106/SplitProtocol/Sample/rr branch_block_stmt_694/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1100/phi_stmt_1100_sources/type_cast_1106/SplitProtocol/Update/cr) (branch_block_stmt_694/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1100/phi_stmt_1100_sources/type_cast_1106/SplitProtocol/Sample/ra branch_block_stmt_694/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1100/phi_stmt_1100_sources/type_cast_1106/SplitProtocol/Update/ca)
  phi_stmt_1100 <=> (branch_block_stmt_694/bbx_xnph6x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1100/phi_stmt_1100_req branch_block_stmt_694/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1100/phi_stmt_1100_req) (branch_block_stmt_694/merge_stmt_1092_PhiAck/phi_stmt_1100_ack)
  // 		iNsTr_56 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x04x_xix_xi)
  //  file prog.linked.opt.aa, line 428
  // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x04x_xix_xi)
  ADD_u64_u64_1111_inst <=> (branch_block_stmt_694/assign_stmt_1112_to_assign_stmt_1123/ADD_u64_u64_1111_Sample/rr branch_block_stmt_694/assign_stmt_1112_to_assign_stmt_1123/ADD_u64_u64_1111_Update/cr) (branch_block_stmt_694/assign_stmt_1112_to_assign_stmt_1123/ADD_u64_u64_1111_Sample/ra branch_block_stmt_694/assign_stmt_1112_to_assign_stmt_1123/ADD_u64_u64_1111_Update/ca)
  // 		iNsTr_57 := (xx_x05x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
  //  file prog.linked.opt.aa, line 429
  // (xx_x05x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
  SUB_u64_u64_1116_inst <=> (branch_block_stmt_694/assign_stmt_1112_to_assign_stmt_1123/SUB_u64_u64_1116_Sample/rr branch_block_stmt_694/assign_stmt_1112_to_assign_stmt_1123/SUB_u64_u64_1116_Update/cr) (branch_block_stmt_694/assign_stmt_1112_to_assign_stmt_1123/SUB_u64_u64_1116_Sample/ra branch_block_stmt_694/assign_stmt_1112_to_assign_stmt_1123/SUB_u64_u64_1116_Update/ca)
  // 		iNsTr_58 := (iNsTr_57 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
  //  file prog.linked.opt.aa, line 430
  // (iNsTr_57 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
  ULT_u64_u1_1122_inst <=> (branch_block_stmt_694/assign_stmt_1112_to_assign_stmt_1123/ULT_u64_u1_1122_Sample/rr branch_block_stmt_694/assign_stmt_1112_to_assign_stmt_1123/ULT_u64_u1_1122_Update/cr) (branch_block_stmt_694/assign_stmt_1112_to_assign_stmt_1123/ULT_u64_u1_1122_Sample/ra branch_block_stmt_694/assign_stmt_1112_to_assign_stmt_1123/ULT_u64_u1_1122_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 431
  if_stmt_1124_branch <=> (branch_block_stmt_694/if_stmt_1124_eval_test/branch_req) (branch_block_stmt_694/if_stmt_1124_else_link/else_choice_transition branch_block_stmt_694/if_stmt_1124_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 436
  // ($cast ($uint<64>) iNsTr_56 )
  type_cast_1134_inst <=> (branch_block_stmt_694/xx_x_crit_edgex_xix_xi_divideUnsignedx_xexitx_xloopexitx_xi_PhiReq/phi_stmt_1131/phi_stmt_1131_sources/type_cast_1134/SplitProtocol/Sample/rr branch_block_stmt_694/xx_x_crit_edgex_xix_xi_divideUnsignedx_xexitx_xloopexitx_xi_PhiReq/phi_stmt_1131/phi_stmt_1131_sources/type_cast_1134/SplitProtocol/Update/cr) (branch_block_stmt_694/xx_x_crit_edgex_xix_xi_divideUnsignedx_xexitx_xloopexitx_xi_PhiReq/phi_stmt_1131/phi_stmt_1131_sources/type_cast_1134/SplitProtocol/Sample/ra branch_block_stmt_694/xx_x_crit_edgex_xix_xi_divideUnsignedx_xexitx_xloopexitx_xi_PhiReq/phi_stmt_1131/phi_stmt_1131_sources/type_cast_1134/SplitProtocol/Update/ca)
  phi_stmt_1131 <=> (branch_block_stmt_694/xx_x_crit_edgex_xix_xi_divideUnsignedx_xexitx_xloopexitx_xi_PhiReq/phi_stmt_1131/phi_stmt_1131_req) (branch_block_stmt_694/merge_stmt_1130_PhiAck/phi_stmt_1131_ack)
  // 		extractx_xtx_xi := ($cast ($uint<32>) xx_xlcssa4 )
  //  file prog.linked.opt.aa, line 439
  // ($cast ($uint<32>) xx_xlcssa4 )
  type_cast_1138_inst <=> (branch_block_stmt_694/assign_stmt_1139/type_cast_1138_Sample/rr branch_block_stmt_694/assign_stmt_1139/type_cast_1138_Update/cr) (branch_block_stmt_694/assign_stmt_1139/type_cast_1138_Sample/ra branch_block_stmt_694/assign_stmt_1139/type_cast_1138_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 441
  // ($cast ($uint<32>) extractx_xtx_xi )
  type_cast_1151_inst <=> (branch_block_stmt_694/divideUnsignedx_xexitx_xloopexitx_xi_mvWinx_xexit_PhiReq/phi_stmt_1142/phi_stmt_1142_sources/type_cast_1151/SplitProtocol/Sample/rr branch_block_stmt_694/divideUnsignedx_xexitx_xloopexitx_xi_mvWinx_xexit_PhiReq/phi_stmt_1142/phi_stmt_1142_sources/type_cast_1151/SplitProtocol/Update/cr) (branch_block_stmt_694/divideUnsignedx_xexitx_xloopexitx_xi_mvWinx_xexit_PhiReq/phi_stmt_1142/phi_stmt_1142_sources/type_cast_1151/SplitProtocol/Sample/ra branch_block_stmt_694/divideUnsignedx_xexitx_xloopexitx_xi_mvWinx_xexit_PhiReq/phi_stmt_1142/phi_stmt_1142_sources/type_cast_1151/SplitProtocol/Update/ca)
  phi_stmt_1142 <=> (branch_block_stmt_694/bb_8_mvWinx_xexit_PhiReq/phi_stmt_1142/phi_stmt_1142_req branch_block_stmt_694/bb_9_mvWinx_xexit_PhiReq/phi_stmt_1142/phi_stmt_1142_req branch_block_stmt_694/divideUnsignedx_xexitx_xloopexitx_xi_mvWinx_xexit_PhiReq/phi_stmt_1142/phi_stmt_1142_req) (branch_block_stmt_694/merge_stmt_1141_PhiAck/phi_stmt_1142_ack)
  // 		->(iNsTr_22) := iNsTr_19
  //  file prog.linked.opt.aa, line 444
  ptr_deref_1154_base_resize <=> (branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/ptr_deref_1154_base_addr_resize/base_resize_req) (branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/ptr_deref_1154_base_addr_resize/base_resize_ack)
  ptr_deref_1154_root_address_inst <=> (branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/ptr_deref_1154_base_plus_offset/sum_rename_req) (branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/ptr_deref_1154_base_plus_offset/sum_rename_ack)
  ptr_deref_1154_addr_0 <=> (branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/ptr_deref_1154_word_addrgen/root_register_req) (branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/ptr_deref_1154_word_addrgen/root_register_ack)
  ptr_deref_1154_gather_scatter <=> (branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/ptr_deref_1154_Sample/ptr_deref_1154_Split/split_req) (branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/ptr_deref_1154_Sample/ptr_deref_1154_Split/split_ack)
  ptr_deref_1154_store_0 <=> (branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/ptr_deref_1154_Sample/word_access_start/word_0/rr branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/ptr_deref_1154_Update/word_access_complete/word_0/cr) (branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/ptr_deref_1154_Sample/word_access_start/word_0/ra branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/ptr_deref_1154_Update/word_access_complete/word_0/ca)
  // 		iNsTr_31 := (iNsTr_20 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 445
  // (iNsTr_20 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_1161_inst <=> (branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/ADD_u32_u32_1161_Sample/rr branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/ADD_u32_u32_1161_Update/cr) (branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/ADD_u32_u32_1161_Sample/ra branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/ADD_u32_u32_1161_Update/ca)
  // 		iNsTr_32 := (iNsTr_31 == ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
  //  file prog.linked.opt.aa, line 446
  // (iNsTr_31 == ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
  EQ_u32_u1_1167_inst <=> (branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/EQ_u32_u1_1167_Sample/rr branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/EQ_u32_u1_1167_Update/cr) (branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/EQ_u32_u1_1167_Sample/ra branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/EQ_u32_u1_1167_Update/ca)
  // 		iNsTr_33 := ( $mux iNsTr_32 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_31 ) 
  //  file prog.linked.opt.aa, line 447
  // ( $mux iNsTr_32 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_31 ) 
  MUX_1174_inst <=> (branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/MUX_1174_start/req branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/MUX_1174_complete/req) (branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/MUX_1174_start/ack branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/MUX_1174_complete/ack)
  // 		WINbuff_ptr := iNsTr_33
  //  file prog.linked.opt.aa, line 448
  // WINbuff_ptr
  STORE_WINbuff_ptr_1176_gather_scatter <=> (branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/STORE_WINbuff_ptr_1176_Sample/STORE_WINbuff_ptr_1176_Split/split_req) (branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/STORE_WINbuff_ptr_1176_Sample/STORE_WINbuff_ptr_1176_Split/split_ack)
  STORE_WINbuff_ptr_1176_store_0 <=> (branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/STORE_WINbuff_ptr_1176_Sample/word_access_start/word_0/rr branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/STORE_WINbuff_ptr_1176_Update/word_access_complete/word_0/cr) (branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/STORE_WINbuff_ptr_1176_Sample/word_access_start/word_0/ra branch_block_stmt_694/assign_stmt_1156_to_assign_stmt_1178/STORE_WINbuff_ptr_1176_Update/word_access_complete/word_0/ca)
  // 		filt_output_pipe := outputx_x0x_xi
  //  file prog.linked.opt.aa, line 449
  // filt_output_pipe
  WPIPE_filt_output_pipe_1179_inst <=> (branch_block_stmt_694/assign_stmt_1181/WPIPE_filt_output_pipe_1179_Sample/req branch_block_stmt_694/assign_stmt_1181/WPIPE_filt_output_pipe_1179_Update/req) (branch_block_stmt_694/assign_stmt_1181/WPIPE_filt_output_pipe_1179_Sample/ack branch_block_stmt_694/assign_stmt_1181/WPIPE_filt_output_pipe_1179_Update/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 451
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 454
}
$module [blsCheck] 
{
  $out ret_val__:$int<8>
  // can point into  mempool
  // pipe-declarations for block %blsCheck
  //  file prog.linked.opt.aa, line 458
  // pipe-declarations for block %blsCheck%body
  //  file prog.linked.opt.aa, line 463
  // pipe-declarations for block %blsCheck%body%
  //  file prog.linked.opt.aa, line 467
  // pipe-declarations for block %blsCheck%body%
  //  file prog.linked.opt.aa, line 493
  // pipe-declarations for block %blsCheck%body%
  //  file prog.linked.opt.aa, line 511
  // pipe-declarations for block %blsCheck%body%
  //  file prog.linked.opt.aa, line 519
  // pipe-declarations for block %blsCheck%body%
  //  file prog.linked.opt.aa, line 524
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_1190] // Branch Block  file prog.linked.opt.aa, line 463
    {
      $P [branch_block_stmt_1190__entry__]
      branch_block_stmt_1190__entry__ <-| ($entry)
      $P [branch_block_stmt_1190__exit__]
      branch_block_stmt_1190__exit__ |-> ($exit)
      $P [assign_stmt_1193__entry__] 
      $P [assign_stmt_1193__exit__] 
      $P [bbx_xnph_bb_1]
      $P [merge_stmt_1195__exit__] 
      $P [assign_stmt_1242_to_assign_stmt_1315__entry__] 
      $P [assign_stmt_1242_to_assign_stmt_1315__exit__] 
      $P [if_stmt_1316__entry__] 
      $P [if_stmt_1316__exit__] 
      $P [merge_stmt_1322__entry__] 
      $P [merge_stmt_1322__exit__] 
      $P [assign_stmt_1342_to_assign_stmt_1385__entry__] 
      $P [assign_stmt_1342_to_assign_stmt_1385__exit__] 
      $P [if_stmt_1386__entry__] 
      $P [if_stmt_1386__exit__] 
      $P [merge_stmt_1392__entry__] 
      $P [merge_stmt_1392__exit__] 
      $P [assign_stmt_1397_to_assign_stmt_1425__entry__] 
      $P [assign_stmt_1397_to_assign_stmt_1425__exit__] 
      $P [bb_3_bb_4]
      $P [merge_stmt_1427__exit__] 
      $P [assign_stmt_1439__entry__] 
      $P [assign_stmt_1439__exit__] 
      $P [return__]
      $P [merge_stmt_1441__exit__] 
      ::[assign_stmt_1193] 
      {
        // 		iNsTr_0 := DDbuff_ptr
        //  file prog.linked.opt.aa, line 465
        // Source expression
        // DDbuff_ptr
        $T[LOAD_DDbuff_ptr_1192_sample_start_] 
        $T[LOAD_DDbuff_ptr_1192_sample_completed_] 
        $T[LOAD_DDbuff_ptr_1192_update_start_] 
        $T[LOAD_DDbuff_ptr_1192_update_completed_] 
        $T[LOAD_DDbuff_ptr_1192_sample_start_] 
        $T[LOAD_DDbuff_ptr_1192_sample_completed_] 
        $T[LOAD_DDbuff_ptr_1192_update_start_] 
        $T[LOAD_DDbuff_ptr_1192_update_completed_] 
        $T[LOAD_DDbuff_ptr_1192_word_address_calculated] 
        $T[LOAD_DDbuff_ptr_1192_root_address_calculated] 
        LOAD_DDbuff_ptr_1192_word_address_calculated <-& (LOAD_DDbuff_ptr_1192_root_address_calculated)
        ;;[LOAD_DDbuff_ptr_1192_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_DDbuff_ptr_1192_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_DDbuff_ptr_1192_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_DDbuff_ptr_1192_sample_start_ <-& (LOAD_DDbuff_ptr_1192_word_address_calculated)
        LOAD_DDbuff_ptr_1192_sample_start_ &-> (LOAD_DDbuff_ptr_1192_Sample)
        LOAD_DDbuff_ptr_1192_sample_completed_ <-& (LOAD_DDbuff_ptr_1192_Sample)
        LOAD_DDbuff_ptr_1192_sample_completed_ &-> ($null)
        LOAD_DDbuff_ptr_1192_update_start_ &-> (LOAD_DDbuff_ptr_1192_Update)
        LOAD_DDbuff_ptr_1192_update_completed_ <-& (LOAD_DDbuff_ptr_1192_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1193__entry__ |-> (assign_stmt_1193)
      assign_stmt_1193__exit__ <-| (assign_stmt_1193)
      ::[assign_stmt_1242_to_assign_stmt_1315] 
      {
        // 		iNsTr_3 := @(DDbuff[ptrx_x02])
        //  file prog.linked.opt.aa, line 475
        // Source expression
        // @(DDbuff[ptrx_x02])
        $T[addr_of_1241_sample_start_] 
        $T[addr_of_1241_sample_completed_] 
        $T[addr_of_1241_update_start_] 
        $T[addr_of_1241_update_completed_] 
        $T[array_obj_ref_1240_root_address_calculated] 
        $T[array_obj_ref_1240_offset_calculated] 
        $T[array_obj_ref_1240_index_resized_0] 
        $T[array_obj_ref_1240_index_scaled_0] 
        // ptrx_x02
        $T[R_ptrx_x02_1239_sample_start_] 
        $T[R_ptrx_x02_1239_sample_completed_] 
        $T[R_ptrx_x02_1239_update_start_] 
        $T[R_ptrx_x02_1239_update_completed_] 
        // implicit reference
        R_ptrx_x02_1239_sample_start_ <-& ($entry)
        R_ptrx_x02_1239_sample_completed_ <-& (R_ptrx_x02_1239_sample_start_)
        R_ptrx_x02_1239_update_start_ <-& (R_ptrx_x02_1239_sample_completed_)
        R_ptrx_x02_1239_update_completed_ <-& (R_ptrx_x02_1239_update_start_)
        ;;[array_obj_ref_1240_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        R_ptrx_x02_1239_update_completed_ &-> (array_obj_ref_1240_index_resize_0)
        array_obj_ref_1240_index_resized_0 <-& (array_obj_ref_1240_index_resize_0)
        ;;[array_obj_ref_1240_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_1240_index_resized_0 &-> (array_obj_ref_1240_index_scale_0)
        array_obj_ref_1240_index_scaled_0 <-& (array_obj_ref_1240_index_scale_0)
        ;;[array_obj_ref_1240_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_1240_index_scaled_0 &-> (array_obj_ref_1240_final_index_sum_regn)
        array_obj_ref_1240_offset_calculated <-& (array_obj_ref_1240_final_index_sum_regn)
        ;;[array_obj_ref_1240_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_1240_offset_calculated &-> (array_obj_ref_1240_base_plus_offset)
        array_obj_ref_1240_root_address_calculated <-& (array_obj_ref_1240_base_plus_offset)
        ;;[addr_of_1241_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_1241_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_1241_sample_start_ <-& (array_obj_ref_1240_root_address_calculated)
        addr_of_1241_sample_start_ &-> (addr_of_1241_request)
        addr_of_1241_sample_completed_ <-& (addr_of_1241_request)
        addr_of_1241_update_start_ &-> (addr_of_1241_complete)
        addr_of_1241_update_completed_ <-& (addr_of_1241_complete)
        // Target expression
        // (as target) iNsTr_3
        // iNsTr_3
        // implicit reference
        // 		iNsTr_4 := ->(iNsTr_3)
        //  file prog.linked.opt.aa, line 476
        // Source expression
        // ->(iNsTr_3)
        $T[ptr_deref_1245_sample_start_] 
        $T[ptr_deref_1245_sample_completed_] 
        $T[ptr_deref_1245_update_start_] 
        $T[ptr_deref_1245_update_completed_] 
        $T[ptr_deref_1245_base_address_calculated] 
        // iNsTr_3
        $T[R_iNsTr_3_1244_sample_start_] 
        $T[R_iNsTr_3_1244_sample_completed_] 
        $T[R_iNsTr_3_1244_update_start_] 
        $T[R_iNsTr_3_1244_update_completed_] 
        // implicit reference
        R_iNsTr_3_1244_sample_start_ <-& (addr_of_1241_update_completed_)
        R_iNsTr_3_1244_sample_completed_ <-& (R_iNsTr_3_1244_sample_start_)
        R_iNsTr_3_1244_update_start_ <-& (R_iNsTr_3_1244_sample_completed_)
        R_iNsTr_3_1244_update_completed_ <-& (R_iNsTr_3_1244_update_start_)
        $T[ptr_deref_1245_word_address_calculated] 
        $T[ptr_deref_1245_root_address_calculated] 
        $T[ptr_deref_1245_base_address_resized] 
        ;;[ptr_deref_1245_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_1245_base_address_calculated &-> (ptr_deref_1245_base_addr_resize)
        ptr_deref_1245_base_address_resized <-& (ptr_deref_1245_base_addr_resize)
        ;;[ptr_deref_1245_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_1245_base_address_resized &-> (ptr_deref_1245_base_plus_offset)
        ptr_deref_1245_root_address_calculated <-& (ptr_deref_1245_base_plus_offset)
        ;;[ptr_deref_1245_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_1245_root_address_calculated &-> (ptr_deref_1245_word_addrgen)
        ptr_deref_1245_word_address_calculated <-& (ptr_deref_1245_word_addrgen)
        ;;[ptr_deref_1245_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_1245_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_1245_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_1245_sample_start_ <-& (ptr_deref_1245_word_address_calculated)
        ptr_deref_1245_sample_start_ &-> (ptr_deref_1245_Sample)
        ptr_deref_1245_sample_completed_ <-& (ptr_deref_1245_Sample)
        ptr_deref_1245_sample_completed_ &-> ($null)
        ptr_deref_1245_update_start_ &-> (ptr_deref_1245_Update)
        ptr_deref_1245_update_completed_ <-& (ptr_deref_1245_Update)
        ptr_deref_1245_base_address_calculated <-& (R_iNsTr_3_1244_update_completed_)
        ptr_deref_1245_sample_start_ <-& (ptr_deref_1245_base_address_calculated)
        // Target expression
        // (as target) iNsTr_4
        // iNsTr_4
        // implicit reference
        // 		iNsTr_5 := (($bitcast ($int<32>) iNsTr_4 ) > ($bitcast ($int<32>) maxx_x07 ))
        //  file prog.linked.opt.aa, line 477
        // Source expression
        // (($bitcast ($int<32>) iNsTr_4 ) > ($bitcast ($int<32>) maxx_x07 ))
        $T[SGT_i32_u1_1252_sample_start_] 
        $T[SGT_i32_u1_1252_sample_completed_] 
        $T[SGT_i32_u1_1252_update_start_] 
        $T[SGT_i32_u1_1252_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_4 )
        $T[type_cast_1249_sample_start_] 
        $T[type_cast_1249_sample_completed_] 
        $T[type_cast_1249_update_start_] 
        $T[type_cast_1249_update_completed_] 
        // iNsTr_4
        $T[R_iNsTr_4_1248_sample_start_] 
        $T[R_iNsTr_4_1248_sample_completed_] 
        $T[R_iNsTr_4_1248_update_start_] 
        $T[R_iNsTr_4_1248_update_completed_] 
        // implicit reference
        R_iNsTr_4_1248_sample_start_ <-& (ptr_deref_1245_update_completed_)
        R_iNsTr_4_1248_sample_completed_ <-& (R_iNsTr_4_1248_sample_start_)
        R_iNsTr_4_1248_update_start_ <-& (R_iNsTr_4_1248_sample_completed_)
        R_iNsTr_4_1248_update_completed_ <-& (R_iNsTr_4_1248_update_start_)
        type_cast_1249_sample_start_ <-& (R_iNsTr_4_1248_update_completed_)
        ;;[type_cast_1249_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1249_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1249_sample_start_ &-> (type_cast_1249_Sample)
        type_cast_1249_sample_completed_ <-& (type_cast_1249_Sample)
        type_cast_1249_sample_completed_ &-> ($null)
        type_cast_1249_update_start_ &-> (type_cast_1249_Update)
        type_cast_1249_update_completed_ <-& (type_cast_1249_Update)
        // flow-through
        type_cast_1249_update_start_ <-& (type_cast_1249_sample_completed_)
        // ($bitcast ($int<32>) maxx_x07 )
        $T[type_cast_1251_sample_start_] 
        $T[type_cast_1251_sample_completed_] 
        $T[type_cast_1251_update_start_] 
        $T[type_cast_1251_update_completed_] 
        // maxx_x07
        $T[R_maxx_x07_1250_sample_start_] 
        $T[R_maxx_x07_1250_sample_completed_] 
        $T[R_maxx_x07_1250_update_start_] 
        $T[R_maxx_x07_1250_update_completed_] 
        // implicit reference
        R_maxx_x07_1250_sample_start_ <-& ($entry)
        R_maxx_x07_1250_sample_completed_ <-& (R_maxx_x07_1250_sample_start_)
        R_maxx_x07_1250_update_start_ <-& (R_maxx_x07_1250_sample_completed_)
        R_maxx_x07_1250_update_completed_ <-& (R_maxx_x07_1250_update_start_)
        type_cast_1251_sample_start_ <-& (R_maxx_x07_1250_update_completed_)
        ;;[type_cast_1251_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1251_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1251_sample_start_ &-> (type_cast_1251_Sample)
        type_cast_1251_sample_completed_ <-& (type_cast_1251_Sample)
        type_cast_1251_sample_completed_ &-> ($null)
        type_cast_1251_update_start_ &-> (type_cast_1251_Update)
        type_cast_1251_update_completed_ <-& (type_cast_1251_Update)
        // flow-through
        type_cast_1251_update_start_ <-& (type_cast_1251_sample_completed_)
        SGT_i32_u1_1252_sample_start_ <-& (type_cast_1249_update_completed_)
        SGT_i32_u1_1252_sample_start_ <-& (type_cast_1251_update_completed_)
        ;;[SGT_i32_u1_1252_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_1252_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_1252_sample_start_ &-> (SGT_i32_u1_1252_Sample)
        SGT_i32_u1_1252_sample_completed_ <-& (SGT_i32_u1_1252_Sample)
        SGT_i32_u1_1252_sample_completed_ &-> ($null)
        SGT_i32_u1_1252_update_start_ &-> (SGT_i32_u1_1252_Update)
        SGT_i32_u1_1252_update_completed_ <-& (SGT_i32_u1_1252_Update)
        // Target expression
        // (as target) iNsTr_5
        // iNsTr_5
        // implicit reference
        // 		iNsTr_6 := (($bitcast ($int<32>) iNsTr_4 ) < ($bitcast ($int<32>) minx_x06 ))
        //  file prog.linked.opt.aa, line 478
        // Source expression
        // (($bitcast ($int<32>) iNsTr_4 ) < ($bitcast ($int<32>) minx_x06 ))
        $T[SLT_i32_u1_1259_sample_start_] 
        $T[SLT_i32_u1_1259_sample_completed_] 
        $T[SLT_i32_u1_1259_update_start_] 
        $T[SLT_i32_u1_1259_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_4 )
        $T[type_cast_1256_sample_start_] 
        $T[type_cast_1256_sample_completed_] 
        $T[type_cast_1256_update_start_] 
        $T[type_cast_1256_update_completed_] 
        // iNsTr_4
        $T[R_iNsTr_4_1255_sample_start_] 
        $T[R_iNsTr_4_1255_sample_completed_] 
        $T[R_iNsTr_4_1255_update_start_] 
        $T[R_iNsTr_4_1255_update_completed_] 
        // implicit reference
        R_iNsTr_4_1255_sample_start_ <-& (ptr_deref_1245_update_completed_)
        R_iNsTr_4_1255_sample_completed_ <-& (R_iNsTr_4_1255_sample_start_)
        R_iNsTr_4_1255_update_start_ <-& (R_iNsTr_4_1255_sample_completed_)
        R_iNsTr_4_1255_update_completed_ <-& (R_iNsTr_4_1255_update_start_)
        type_cast_1256_sample_start_ <-& (R_iNsTr_4_1255_update_completed_)
        ;;[type_cast_1256_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1256_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1256_sample_start_ &-> (type_cast_1256_Sample)
        type_cast_1256_sample_completed_ <-& (type_cast_1256_Sample)
        type_cast_1256_sample_completed_ &-> ($null)
        type_cast_1256_update_start_ &-> (type_cast_1256_Update)
        type_cast_1256_update_completed_ <-& (type_cast_1256_Update)
        // flow-through
        type_cast_1256_update_start_ <-& (type_cast_1256_sample_completed_)
        // ($bitcast ($int<32>) minx_x06 )
        $T[type_cast_1258_sample_start_] 
        $T[type_cast_1258_sample_completed_] 
        $T[type_cast_1258_update_start_] 
        $T[type_cast_1258_update_completed_] 
        // minx_x06
        $T[R_minx_x06_1257_sample_start_] 
        $T[R_minx_x06_1257_sample_completed_] 
        $T[R_minx_x06_1257_update_start_] 
        $T[R_minx_x06_1257_update_completed_] 
        // implicit reference
        R_minx_x06_1257_sample_start_ <-& ($entry)
        R_minx_x06_1257_sample_completed_ <-& (R_minx_x06_1257_sample_start_)
        R_minx_x06_1257_update_start_ <-& (R_minx_x06_1257_sample_completed_)
        R_minx_x06_1257_update_completed_ <-& (R_minx_x06_1257_update_start_)
        type_cast_1258_sample_start_ <-& (R_minx_x06_1257_update_completed_)
        ;;[type_cast_1258_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1258_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1258_sample_start_ &-> (type_cast_1258_Sample)
        type_cast_1258_sample_completed_ <-& (type_cast_1258_Sample)
        type_cast_1258_sample_completed_ &-> ($null)
        type_cast_1258_update_start_ &-> (type_cast_1258_Update)
        type_cast_1258_update_completed_ <-& (type_cast_1258_Update)
        // flow-through
        type_cast_1258_update_start_ <-& (type_cast_1258_sample_completed_)
        SLT_i32_u1_1259_sample_start_ <-& (type_cast_1256_update_completed_)
        SLT_i32_u1_1259_sample_start_ <-& (type_cast_1258_update_completed_)
        ;;[SLT_i32_u1_1259_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_i32_u1_1259_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_i32_u1_1259_sample_start_ &-> (SLT_i32_u1_1259_Sample)
        SLT_i32_u1_1259_sample_completed_ <-& (SLT_i32_u1_1259_Sample)
        SLT_i32_u1_1259_sample_completed_ &-> ($null)
        SLT_i32_u1_1259_update_start_ &-> (SLT_i32_u1_1259_Update)
        SLT_i32_u1_1259_update_completed_ <-& (SLT_i32_u1_1259_Update)
        // Target expression
        // (as target) iNsTr_6
        // iNsTr_6
        // implicit reference
        // 		iNsTr_7 := ( $mux iNsTr_5 iNsTr_2  maxtx_x05 ) 
        //  file prog.linked.opt.aa, line 479
        // Source expression
        // ( $mux iNsTr_5 iNsTr_2  maxtx_x05 ) 
        $T[MUX_1265_sample_start_] 
        $T[MUX_1265_sample_completed_] 
        $T[MUX_1265_update_start_] 
        $T[MUX_1265_update_completed_] 
        // iNsTr_5
        $T[R_iNsTr_5_1262_sample_start_] 
        $T[R_iNsTr_5_1262_sample_completed_] 
        $T[R_iNsTr_5_1262_update_start_] 
        $T[R_iNsTr_5_1262_update_completed_] 
        // implicit reference
        R_iNsTr_5_1262_sample_start_ <-& (SGT_i32_u1_1252_update_completed_)
        R_iNsTr_5_1262_sample_completed_ <-& (R_iNsTr_5_1262_sample_start_)
        R_iNsTr_5_1262_update_start_ <-& (R_iNsTr_5_1262_sample_completed_)
        R_iNsTr_5_1262_update_completed_ <-& (R_iNsTr_5_1262_update_start_)
        // iNsTr_2
        $T[R_iNsTr_2_1263_sample_start_] 
        $T[R_iNsTr_2_1263_sample_completed_] 
        $T[R_iNsTr_2_1263_update_start_] 
        $T[R_iNsTr_2_1263_update_completed_] 
        // implicit reference
        R_iNsTr_2_1263_sample_start_ <-& ($entry)
        R_iNsTr_2_1263_sample_completed_ <-& (R_iNsTr_2_1263_sample_start_)
        R_iNsTr_2_1263_update_start_ <-& (R_iNsTr_2_1263_sample_completed_)
        R_iNsTr_2_1263_update_completed_ <-& (R_iNsTr_2_1263_update_start_)
        // maxtx_x05
        $T[R_maxtx_x05_1264_sample_start_] 
        $T[R_maxtx_x05_1264_sample_completed_] 
        $T[R_maxtx_x05_1264_update_start_] 
        $T[R_maxtx_x05_1264_update_completed_] 
        // implicit reference
        R_maxtx_x05_1264_sample_start_ <-& ($entry)
        R_maxtx_x05_1264_sample_completed_ <-& (R_maxtx_x05_1264_sample_start_)
        R_maxtx_x05_1264_update_start_ <-& (R_maxtx_x05_1264_sample_completed_)
        R_maxtx_x05_1264_update_completed_ <-& (R_maxtx_x05_1264_update_start_)
        MUX_1265_sample_start_ <-& (R_iNsTr_5_1262_update_completed_)
        MUX_1265_sample_start_ <-& (R_iNsTr_2_1263_update_completed_)
        MUX_1265_sample_start_ <-& (R_maxtx_x05_1264_update_completed_)
        ;;[MUX_1265_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1265_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1265_sample_start_ &-> (MUX_1265_start)
        MUX_1265_sample_completed_ <-& (MUX_1265_start)
        MUX_1265_update_start_ &-> (MUX_1265_complete)
        MUX_1265_update_completed_ <-& (MUX_1265_complete)
        MUX_1265_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_7
        // iNsTr_7
        // implicit reference
        // 		iNsTr_8 := ( $mux iNsTr_5 iNsTr_4  maxx_x07 ) 
        //  file prog.linked.opt.aa, line 480
        // Source expression
        // ( $mux iNsTr_5 iNsTr_4  maxx_x07 ) 
        $T[MUX_1271_sample_start_] 
        $T[MUX_1271_sample_completed_] 
        $T[MUX_1271_update_start_] 
        $T[MUX_1271_update_completed_] 
        // iNsTr_5
        $T[R_iNsTr_5_1268_sample_start_] 
        $T[R_iNsTr_5_1268_sample_completed_] 
        $T[R_iNsTr_5_1268_update_start_] 
        $T[R_iNsTr_5_1268_update_completed_] 
        // implicit reference
        R_iNsTr_5_1268_sample_start_ <-& (SGT_i32_u1_1252_update_completed_)
        R_iNsTr_5_1268_sample_completed_ <-& (R_iNsTr_5_1268_sample_start_)
        R_iNsTr_5_1268_update_start_ <-& (R_iNsTr_5_1268_sample_completed_)
        R_iNsTr_5_1268_update_completed_ <-& (R_iNsTr_5_1268_update_start_)
        // iNsTr_4
        $T[R_iNsTr_4_1269_sample_start_] 
        $T[R_iNsTr_4_1269_sample_completed_] 
        $T[R_iNsTr_4_1269_update_start_] 
        $T[R_iNsTr_4_1269_update_completed_] 
        // implicit reference
        R_iNsTr_4_1269_sample_start_ <-& (ptr_deref_1245_update_completed_)
        R_iNsTr_4_1269_sample_completed_ <-& (R_iNsTr_4_1269_sample_start_)
        R_iNsTr_4_1269_update_start_ <-& (R_iNsTr_4_1269_sample_completed_)
        R_iNsTr_4_1269_update_completed_ <-& (R_iNsTr_4_1269_update_start_)
        // maxx_x07
        $T[R_maxx_x07_1270_sample_start_] 
        $T[R_maxx_x07_1270_sample_completed_] 
        $T[R_maxx_x07_1270_update_start_] 
        $T[R_maxx_x07_1270_update_completed_] 
        // implicit reference
        R_maxx_x07_1270_sample_start_ <-& ($entry)
        R_maxx_x07_1270_sample_completed_ <-& (R_maxx_x07_1270_sample_start_)
        R_maxx_x07_1270_update_start_ <-& (R_maxx_x07_1270_sample_completed_)
        R_maxx_x07_1270_update_completed_ <-& (R_maxx_x07_1270_update_start_)
        MUX_1271_sample_start_ <-& (R_iNsTr_5_1268_update_completed_)
        MUX_1271_sample_start_ <-& (R_iNsTr_4_1269_update_completed_)
        MUX_1271_sample_start_ <-& (R_maxx_x07_1270_update_completed_)
        ;;[MUX_1271_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1271_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1271_sample_start_ &-> (MUX_1271_start)
        MUX_1271_sample_completed_ <-& (MUX_1271_start)
        MUX_1271_update_start_ &-> (MUX_1271_complete)
        MUX_1271_update_completed_ <-& (MUX_1271_complete)
        MUX_1271_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_8
        // iNsTr_8
        // implicit reference
        // 		iNsTr_9 := ( $mux iNsTr_6 iNsTr_2  mintx_x04 ) 
        //  file prog.linked.opt.aa, line 481
        // Source expression
        // ( $mux iNsTr_6 iNsTr_2  mintx_x04 ) 
        $T[MUX_1277_sample_start_] 
        $T[MUX_1277_sample_completed_] 
        $T[MUX_1277_update_start_] 
        $T[MUX_1277_update_completed_] 
        // iNsTr_6
        $T[R_iNsTr_6_1274_sample_start_] 
        $T[R_iNsTr_6_1274_sample_completed_] 
        $T[R_iNsTr_6_1274_update_start_] 
        $T[R_iNsTr_6_1274_update_completed_] 
        // implicit reference
        R_iNsTr_6_1274_sample_start_ <-& (SLT_i32_u1_1259_update_completed_)
        R_iNsTr_6_1274_sample_completed_ <-& (R_iNsTr_6_1274_sample_start_)
        R_iNsTr_6_1274_update_start_ <-& (R_iNsTr_6_1274_sample_completed_)
        R_iNsTr_6_1274_update_completed_ <-& (R_iNsTr_6_1274_update_start_)
        // iNsTr_2
        $T[R_iNsTr_2_1275_sample_start_] 
        $T[R_iNsTr_2_1275_sample_completed_] 
        $T[R_iNsTr_2_1275_update_start_] 
        $T[R_iNsTr_2_1275_update_completed_] 
        // implicit reference
        R_iNsTr_2_1275_sample_start_ <-& ($entry)
        R_iNsTr_2_1275_sample_completed_ <-& (R_iNsTr_2_1275_sample_start_)
        R_iNsTr_2_1275_update_start_ <-& (R_iNsTr_2_1275_sample_completed_)
        R_iNsTr_2_1275_update_completed_ <-& (R_iNsTr_2_1275_update_start_)
        // mintx_x04
        $T[R_mintx_x04_1276_sample_start_] 
        $T[R_mintx_x04_1276_sample_completed_] 
        $T[R_mintx_x04_1276_update_start_] 
        $T[R_mintx_x04_1276_update_completed_] 
        // implicit reference
        R_mintx_x04_1276_sample_start_ <-& ($entry)
        R_mintx_x04_1276_sample_completed_ <-& (R_mintx_x04_1276_sample_start_)
        R_mintx_x04_1276_update_start_ <-& (R_mintx_x04_1276_sample_completed_)
        R_mintx_x04_1276_update_completed_ <-& (R_mintx_x04_1276_update_start_)
        MUX_1277_sample_start_ <-& (R_iNsTr_6_1274_update_completed_)
        MUX_1277_sample_start_ <-& (R_iNsTr_2_1275_update_completed_)
        MUX_1277_sample_start_ <-& (R_mintx_x04_1276_update_completed_)
        ;;[MUX_1277_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1277_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1277_sample_start_ &-> (MUX_1277_start)
        MUX_1277_sample_completed_ <-& (MUX_1277_start)
        MUX_1277_update_start_ &-> (MUX_1277_complete)
        MUX_1277_update_completed_ <-& (MUX_1277_complete)
        MUX_1277_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_9
        // iNsTr_9
        // implicit reference
        // 		iNsTr_10 := ( $mux iNsTr_6 iNsTr_4  minx_x06 ) 
        //  file prog.linked.opt.aa, line 482
        // Source expression
        // ( $mux iNsTr_6 iNsTr_4  minx_x06 ) 
        $T[MUX_1283_sample_start_] 
        $T[MUX_1283_sample_completed_] 
        $T[MUX_1283_update_start_] 
        $T[MUX_1283_update_completed_] 
        // iNsTr_6
        $T[R_iNsTr_6_1280_sample_start_] 
        $T[R_iNsTr_6_1280_sample_completed_] 
        $T[R_iNsTr_6_1280_update_start_] 
        $T[R_iNsTr_6_1280_update_completed_] 
        // implicit reference
        R_iNsTr_6_1280_sample_start_ <-& (SLT_i32_u1_1259_update_completed_)
        R_iNsTr_6_1280_sample_completed_ <-& (R_iNsTr_6_1280_sample_start_)
        R_iNsTr_6_1280_update_start_ <-& (R_iNsTr_6_1280_sample_completed_)
        R_iNsTr_6_1280_update_completed_ <-& (R_iNsTr_6_1280_update_start_)
        // iNsTr_4
        $T[R_iNsTr_4_1281_sample_start_] 
        $T[R_iNsTr_4_1281_sample_completed_] 
        $T[R_iNsTr_4_1281_update_start_] 
        $T[R_iNsTr_4_1281_update_completed_] 
        // implicit reference
        R_iNsTr_4_1281_sample_start_ <-& (ptr_deref_1245_update_completed_)
        R_iNsTr_4_1281_sample_completed_ <-& (R_iNsTr_4_1281_sample_start_)
        R_iNsTr_4_1281_update_start_ <-& (R_iNsTr_4_1281_sample_completed_)
        R_iNsTr_4_1281_update_completed_ <-& (R_iNsTr_4_1281_update_start_)
        // minx_x06
        $T[R_minx_x06_1282_sample_start_] 
        $T[R_minx_x06_1282_sample_completed_] 
        $T[R_minx_x06_1282_update_start_] 
        $T[R_minx_x06_1282_update_completed_] 
        // implicit reference
        R_minx_x06_1282_sample_start_ <-& ($entry)
        R_minx_x06_1282_sample_completed_ <-& (R_minx_x06_1282_sample_start_)
        R_minx_x06_1282_update_start_ <-& (R_minx_x06_1282_sample_completed_)
        R_minx_x06_1282_update_completed_ <-& (R_minx_x06_1282_update_start_)
        MUX_1283_sample_start_ <-& (R_iNsTr_6_1280_update_completed_)
        MUX_1283_sample_start_ <-& (R_iNsTr_4_1281_update_completed_)
        MUX_1283_sample_start_ <-& (R_minx_x06_1282_update_completed_)
        ;;[MUX_1283_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1283_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1283_sample_start_ &-> (MUX_1283_start)
        MUX_1283_sample_completed_ <-& (MUX_1283_start)
        MUX_1283_update_start_ &-> (MUX_1283_complete)
        MUX_1283_update_completed_ <-& (MUX_1283_complete)
        MUX_1283_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_10
        // iNsTr_10
        // implicit reference
        // 		iNsTr_11 := (ptrx_x02 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 483
        // Source expression
        // (ptrx_x02 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_1289_sample_start_] 
        $T[ADD_u32_u32_1289_sample_completed_] 
        $T[ADD_u32_u32_1289_update_start_] 
        $T[ADD_u32_u32_1289_update_completed_] 
        // ptrx_x02
        $T[R_ptrx_x02_1286_sample_start_] 
        $T[R_ptrx_x02_1286_sample_completed_] 
        $T[R_ptrx_x02_1286_update_start_] 
        $T[R_ptrx_x02_1286_update_completed_] 
        // implicit reference
        R_ptrx_x02_1286_sample_start_ <-& ($entry)
        R_ptrx_x02_1286_sample_completed_ <-& (R_ptrx_x02_1286_sample_start_)
        R_ptrx_x02_1286_update_start_ <-& (R_ptrx_x02_1286_sample_completed_)
        R_ptrx_x02_1286_update_completed_ <-& (R_ptrx_x02_1286_update_start_)
        ADD_u32_u32_1289_sample_start_ <-& (R_ptrx_x02_1286_update_completed_)
        ;;[ADD_u32_u32_1289_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_1289_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_1289_sample_start_ &-> (ADD_u32_u32_1289_Sample)
        ADD_u32_u32_1289_sample_completed_ <-& (ADD_u32_u32_1289_Sample)
        ADD_u32_u32_1289_sample_completed_ &-> ($null)
        ADD_u32_u32_1289_update_start_ &-> (ADD_u32_u32_1289_Update)
        ADD_u32_u32_1289_update_completed_ <-& (ADD_u32_u32_1289_Update)
        // Target expression
        // (as target) iNsTr_11
        // iNsTr_11
        // implicit reference
        // 		iNsTr_12 := (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 484
        // Source expression
        // (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_1295_sample_start_] 
        $T[ADD_u32_u32_1295_sample_completed_] 
        $T[ADD_u32_u32_1295_update_start_] 
        $T[ADD_u32_u32_1295_update_completed_] 
        // iNsTr_2
        $T[R_iNsTr_2_1292_sample_start_] 
        $T[R_iNsTr_2_1292_sample_completed_] 
        $T[R_iNsTr_2_1292_update_start_] 
        $T[R_iNsTr_2_1292_update_completed_] 
        // implicit reference
        R_iNsTr_2_1292_sample_start_ <-& ($entry)
        R_iNsTr_2_1292_sample_completed_ <-& (R_iNsTr_2_1292_sample_start_)
        R_iNsTr_2_1292_update_start_ <-& (R_iNsTr_2_1292_sample_completed_)
        R_iNsTr_2_1292_update_completed_ <-& (R_iNsTr_2_1292_update_start_)
        ADD_u32_u32_1295_sample_start_ <-& (R_iNsTr_2_1292_update_completed_)
        ;;[ADD_u32_u32_1295_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_1295_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_1295_sample_start_ &-> (ADD_u32_u32_1295_Sample)
        ADD_u32_u32_1295_sample_completed_ <-& (ADD_u32_u32_1295_Sample)
        ADD_u32_u32_1295_sample_completed_ &-> ($null)
        ADD_u32_u32_1295_update_start_ &-> (ADD_u32_u32_1295_Update)
        ADD_u32_u32_1295_update_completed_ <-& (ADD_u32_u32_1295_Update)
        // Target expression
        // (as target) iNsTr_12
        // iNsTr_12
        // implicit reference
        // 		iNsTr_13 := (iNsTr_11 == ($bitcast ($uint<32>) _b00000000000000000000000001011100  ))
        //  file prog.linked.opt.aa, line 485
        // Source expression
        // (iNsTr_11 == ($bitcast ($uint<32>) _b00000000000000000000000001011100  ))
        $T[EQ_u32_u1_1301_sample_start_] 
        $T[EQ_u32_u1_1301_sample_completed_] 
        $T[EQ_u32_u1_1301_update_start_] 
        $T[EQ_u32_u1_1301_update_completed_] 
        // iNsTr_11
        $T[R_iNsTr_11_1298_sample_start_] 
        $T[R_iNsTr_11_1298_sample_completed_] 
        $T[R_iNsTr_11_1298_update_start_] 
        $T[R_iNsTr_11_1298_update_completed_] 
        // implicit reference
        R_iNsTr_11_1298_sample_start_ <-& (ADD_u32_u32_1289_update_completed_)
        R_iNsTr_11_1298_sample_completed_ <-& (R_iNsTr_11_1298_sample_start_)
        R_iNsTr_11_1298_update_start_ <-& (R_iNsTr_11_1298_sample_completed_)
        R_iNsTr_11_1298_update_completed_ <-& (R_iNsTr_11_1298_update_start_)
        EQ_u32_u1_1301_sample_start_ <-& (R_iNsTr_11_1298_update_completed_)
        ;;[EQ_u32_u1_1301_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_1301_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_1301_sample_start_ &-> (EQ_u32_u1_1301_Sample)
        EQ_u32_u1_1301_sample_completed_ <-& (EQ_u32_u1_1301_Sample)
        EQ_u32_u1_1301_sample_completed_ &-> ($null)
        EQ_u32_u1_1301_update_start_ &-> (EQ_u32_u1_1301_Update)
        EQ_u32_u1_1301_update_completed_ <-& (EQ_u32_u1_1301_Update)
        // Target expression
        // (as target) iNsTr_13
        // iNsTr_13
        // implicit reference
        // 		iNsTr_14 := ( $mux iNsTr_13 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_11 ) 
        //  file prog.linked.opt.aa, line 486
        // Source expression
        // ( $mux iNsTr_13 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_11 ) 
        $T[MUX_1308_sample_start_] 
        $T[MUX_1308_sample_completed_] 
        $T[MUX_1308_update_start_] 
        $T[MUX_1308_update_completed_] 
        // iNsTr_13
        $T[R_iNsTr_13_1304_sample_start_] 
        $T[R_iNsTr_13_1304_sample_completed_] 
        $T[R_iNsTr_13_1304_update_start_] 
        $T[R_iNsTr_13_1304_update_completed_] 
        // implicit reference
        R_iNsTr_13_1304_sample_start_ <-& (EQ_u32_u1_1301_update_completed_)
        R_iNsTr_13_1304_sample_completed_ <-& (R_iNsTr_13_1304_sample_start_)
        R_iNsTr_13_1304_update_start_ <-& (R_iNsTr_13_1304_sample_completed_)
        R_iNsTr_13_1304_update_completed_ <-& (R_iNsTr_13_1304_update_start_)
        // iNsTr_11
        $T[R_iNsTr_11_1307_sample_start_] 
        $T[R_iNsTr_11_1307_sample_completed_] 
        $T[R_iNsTr_11_1307_update_start_] 
        $T[R_iNsTr_11_1307_update_completed_] 
        // implicit reference
        R_iNsTr_11_1307_sample_start_ <-& (ADD_u32_u32_1289_update_completed_)
        R_iNsTr_11_1307_sample_completed_ <-& (R_iNsTr_11_1307_sample_start_)
        R_iNsTr_11_1307_update_start_ <-& (R_iNsTr_11_1307_sample_completed_)
        R_iNsTr_11_1307_update_completed_ <-& (R_iNsTr_11_1307_update_start_)
        MUX_1308_sample_start_ <-& (R_iNsTr_13_1304_update_completed_)
        MUX_1308_sample_start_ <-& (R_iNsTr_11_1307_update_completed_)
        ;;[MUX_1308_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1308_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1308_sample_start_ &-> (MUX_1308_start)
        MUX_1308_sample_completed_ <-& (MUX_1308_start)
        MUX_1308_update_start_ &-> (MUX_1308_complete)
        MUX_1308_update_completed_ <-& (MUX_1308_complete)
        MUX_1308_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_14
        // iNsTr_14
        // implicit reference
        // 		exitcond4 := (iNsTr_12 == ($bitcast ($uint<32>) _b00000000000000000000000000101100  ))
        //  file prog.linked.opt.aa, line 487
        // Source expression
        // (iNsTr_12 == ($bitcast ($uint<32>) _b00000000000000000000000000101100  ))
        $T[EQ_u32_u1_1314_sample_start_] 
        $T[EQ_u32_u1_1314_sample_completed_] 
        $T[EQ_u32_u1_1314_update_start_] 
        $T[EQ_u32_u1_1314_update_completed_] 
        // iNsTr_12
        $T[R_iNsTr_12_1311_sample_start_] 
        $T[R_iNsTr_12_1311_sample_completed_] 
        $T[R_iNsTr_12_1311_update_start_] 
        $T[R_iNsTr_12_1311_update_completed_] 
        // implicit reference
        R_iNsTr_12_1311_sample_start_ <-& (ADD_u32_u32_1295_update_completed_)
        R_iNsTr_12_1311_sample_completed_ <-& (R_iNsTr_12_1311_sample_start_)
        R_iNsTr_12_1311_update_start_ <-& (R_iNsTr_12_1311_sample_completed_)
        R_iNsTr_12_1311_update_completed_ <-& (R_iNsTr_12_1311_update_start_)
        EQ_u32_u1_1314_sample_start_ <-& (R_iNsTr_12_1311_update_completed_)
        ;;[EQ_u32_u1_1314_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_1314_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_1314_sample_start_ &-> (EQ_u32_u1_1314_Sample)
        EQ_u32_u1_1314_sample_completed_ <-& (EQ_u32_u1_1314_Sample)
        EQ_u32_u1_1314_sample_completed_ &-> ($null)
        EQ_u32_u1_1314_update_start_ &-> (EQ_u32_u1_1314_Update)
        EQ_u32_u1_1314_update_completed_ <-& (EQ_u32_u1_1314_Update)
        // Target expression
        // (as target) exitcond4
        // exitcond4
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1242_to_assign_stmt_1315__entry__ |-> (assign_stmt_1242_to_assign_stmt_1315)
      assign_stmt_1242_to_assign_stmt_1315__exit__ <-| (assign_stmt_1242_to_assign_stmt_1315)
      // if-statement  
      //  file prog.linked.opt.aa, line 488
      ;;[if_stmt_1316_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1316__entry__ |-> (if_stmt_1316_dead_link)
      if_stmt_1316__exit__ <-| (if_stmt_1316_dead_link)
      ;;[if_stmt_1316_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1316__entry__ |-> (if_stmt_1316_eval_test)
      $P [R_exitcond4_1317_place]
      R_exitcond4_1317_place <-| (if_stmt_1316_eval_test)
      ;;[if_stmt_1316_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1316_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_exitcond4_1317_place |-> (if_stmt_1316_if_link if_stmt_1316_else_link)
      $P [bb_1_xx_x_crit_edge]
      bb_1_xx_x_crit_edge <-| (if_stmt_1316_if_link)
      $P [bb_1_bb_1]
      bb_1_bb_1 <-| (if_stmt_1316_else_link)
      ::[assign_stmt_1342_to_assign_stmt_1385] 
      {
        // 		maxDer := xx_xlcssa1
        //  file prog.linked.opt.aa, line 499
        // Source expression
        // xx_xlcssa1
        $T[R_xx_xlcssa1_1341_sample_start_] 
        $T[R_xx_xlcssa1_1341_sample_completed_] 
        $T[R_xx_xlcssa1_1341_update_start_] 
        $T[R_xx_xlcssa1_1341_update_completed_] 
        // implicit reference
        R_xx_xlcssa1_1341_sample_start_ <-& ($entry)
        R_xx_xlcssa1_1341_sample_completed_ <-& (R_xx_xlcssa1_1341_sample_start_)
        R_xx_xlcssa1_1341_update_start_ <-& (R_xx_xlcssa1_1341_sample_completed_)
        R_xx_xlcssa1_1341_update_completed_ <-& (R_xx_xlcssa1_1341_update_start_)
        // Target expression
        // (as target) maxDer
        $T[STORE_maxDer_1340_sample_start_] 
        $T[STORE_maxDer_1340_sample_completed_] 
        $T[STORE_maxDer_1340_update_start_] 
        $T[STORE_maxDer_1340_update_completed_] 
        // maxDer
        $T[STORE_maxDer_1340_word_address_calculated] 
        $T[STORE_maxDer_1340_root_address_calculated] 
        STORE_maxDer_1340_word_address_calculated <-& (STORE_maxDer_1340_root_address_calculated)
        ;;[STORE_maxDer_1340_Sample] 
        {
          ;;[STORE_maxDer_1340_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_maxDer_1340_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_maxDer_1340_sample_start_ <-& (STORE_maxDer_1340_word_address_calculated)
        STORE_maxDer_1340_sample_start_ &-> (STORE_maxDer_1340_Sample)
        STORE_maxDer_1340_sample_completed_ <-& (STORE_maxDer_1340_Sample)
        STORE_maxDer_1340_sample_completed_ &-> ($null)
        STORE_maxDer_1340_update_start_ &-> (STORE_maxDer_1340_Update)
        STORE_maxDer_1340_update_completed_ <-& (STORE_maxDer_1340_Update)
        STORE_maxDer_1340_sample_start_ <-& (R_xx_xlcssa1_1341_update_completed_)
        // 		iNsTr_17 := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - xx_xlcssa3)
        //  file prog.linked.opt.aa, line 500
        // Source expression
        // (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - xx_xlcssa3)
        $T[SUB_u32_u32_1347_sample_start_] 
        $T[SUB_u32_u32_1347_sample_completed_] 
        $T[SUB_u32_u32_1347_update_start_] 
        $T[SUB_u32_u32_1347_update_completed_] 
        // xx_xlcssa3
        $T[R_xx_xlcssa3_1346_sample_start_] 
        $T[R_xx_xlcssa3_1346_sample_completed_] 
        $T[R_xx_xlcssa3_1346_update_start_] 
        $T[R_xx_xlcssa3_1346_update_completed_] 
        // implicit reference
        R_xx_xlcssa3_1346_sample_start_ <-& ($entry)
        R_xx_xlcssa3_1346_sample_completed_ <-& (R_xx_xlcssa3_1346_sample_start_)
        R_xx_xlcssa3_1346_update_start_ <-& (R_xx_xlcssa3_1346_sample_completed_)
        R_xx_xlcssa3_1346_update_completed_ <-& (R_xx_xlcssa3_1346_update_start_)
        SUB_u32_u32_1347_sample_start_ <-& (R_xx_xlcssa3_1346_update_completed_)
        ;;[SUB_u32_u32_1347_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_1347_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_1347_sample_start_ &-> (SUB_u32_u32_1347_Sample)
        SUB_u32_u32_1347_sample_completed_ <-& (SUB_u32_u32_1347_Sample)
        SUB_u32_u32_1347_sample_completed_ &-> ($null)
        SUB_u32_u32_1347_update_start_ &-> (SUB_u32_u32_1347_Update)
        SUB_u32_u32_1347_update_completed_ <-& (SUB_u32_u32_1347_Update)
        // Target expression
        // (as target) iNsTr_17
        // iNsTr_17
        // implicit reference
        // 		iNsTr_18 := ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_17 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
        //  file prog.linked.opt.aa, line 501
        // Source expression
        // ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_17 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
        $T[type_cast_1356_sample_start_] 
        $T[type_cast_1356_sample_completed_] 
        $T[type_cast_1356_update_start_] 
        $T[type_cast_1356_update_completed_] 
        // (($bitcast ($int<32>) iNsTr_17 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) ))
        $T[ASHR_i32_i32_1355_sample_start_] 
        $T[ASHR_i32_i32_1355_sample_completed_] 
        $T[ASHR_i32_i32_1355_update_start_] 
        $T[ASHR_i32_i32_1355_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_17 )
        $T[type_cast_1351_sample_start_] 
        $T[type_cast_1351_sample_completed_] 
        $T[type_cast_1351_update_start_] 
        $T[type_cast_1351_update_completed_] 
        // iNsTr_17
        $T[R_iNsTr_17_1350_sample_start_] 
        $T[R_iNsTr_17_1350_sample_completed_] 
        $T[R_iNsTr_17_1350_update_start_] 
        $T[R_iNsTr_17_1350_update_completed_] 
        // implicit reference
        R_iNsTr_17_1350_sample_start_ <-& (SUB_u32_u32_1347_update_completed_)
        R_iNsTr_17_1350_sample_completed_ <-& (R_iNsTr_17_1350_sample_start_)
        R_iNsTr_17_1350_update_start_ <-& (R_iNsTr_17_1350_sample_completed_)
        R_iNsTr_17_1350_update_completed_ <-& (R_iNsTr_17_1350_update_start_)
        type_cast_1351_sample_start_ <-& (R_iNsTr_17_1350_update_completed_)
        ;;[type_cast_1351_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1351_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1351_sample_start_ &-> (type_cast_1351_Sample)
        type_cast_1351_sample_completed_ <-& (type_cast_1351_Sample)
        type_cast_1351_sample_completed_ &-> ($null)
        type_cast_1351_update_start_ &-> (type_cast_1351_Update)
        type_cast_1351_update_completed_ <-& (type_cast_1351_Update)
        // flow-through
        type_cast_1351_update_start_ <-& (type_cast_1351_sample_completed_)
        ASHR_i32_i32_1355_sample_start_ <-& (type_cast_1351_update_completed_)
        ;;[ASHR_i32_i32_1355_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ASHR_i32_i32_1355_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ASHR_i32_i32_1355_sample_start_ &-> (ASHR_i32_i32_1355_Sample)
        ASHR_i32_i32_1355_sample_completed_ <-& (ASHR_i32_i32_1355_Sample)
        ASHR_i32_i32_1355_sample_completed_ &-> ($null)
        ASHR_i32_i32_1355_update_start_ &-> (ASHR_i32_i32_1355_Update)
        ASHR_i32_i32_1355_update_completed_ <-& (ASHR_i32_i32_1355_Update)
        // flow-through
        ASHR_i32_i32_1355_update_start_ <-& (ASHR_i32_i32_1355_sample_completed_)
        type_cast_1356_sample_start_ <-& (ASHR_i32_i32_1355_update_completed_)
        ;;[type_cast_1356_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1356_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1356_sample_start_ &-> (type_cast_1356_Sample)
        type_cast_1356_sample_completed_ <-& (type_cast_1356_Sample)
        type_cast_1356_sample_completed_ &-> ($null)
        type_cast_1356_update_start_ &-> (type_cast_1356_Update)
        type_cast_1356_update_completed_ <-& (type_cast_1356_Update)
        // Target expression
        // (as target) iNsTr_18
        // iNsTr_18
        // implicit reference
        // 		iNsTr_19 := (($bitcast ($int<32>) xx_xlcssa1 ) > ($bitcast ($int<32>) iNsTr_18 ))
        //  file prog.linked.opt.aa, line 502
        // Source expression
        // (($bitcast ($int<32>) xx_xlcssa1 ) > ($bitcast ($int<32>) iNsTr_18 ))
        $T[SGT_i32_u1_1363_sample_start_] 
        $T[SGT_i32_u1_1363_sample_completed_] 
        $T[SGT_i32_u1_1363_update_start_] 
        $T[SGT_i32_u1_1363_update_completed_] 
        // ($bitcast ($int<32>) xx_xlcssa1 )
        $T[type_cast_1360_sample_start_] 
        $T[type_cast_1360_sample_completed_] 
        $T[type_cast_1360_update_start_] 
        $T[type_cast_1360_update_completed_] 
        // xx_xlcssa1
        $T[R_xx_xlcssa1_1359_sample_start_] 
        $T[R_xx_xlcssa1_1359_sample_completed_] 
        $T[R_xx_xlcssa1_1359_update_start_] 
        $T[R_xx_xlcssa1_1359_update_completed_] 
        // implicit reference
        R_xx_xlcssa1_1359_sample_start_ <-& ($entry)
        R_xx_xlcssa1_1359_sample_completed_ <-& (R_xx_xlcssa1_1359_sample_start_)
        R_xx_xlcssa1_1359_update_start_ <-& (R_xx_xlcssa1_1359_sample_completed_)
        R_xx_xlcssa1_1359_update_completed_ <-& (R_xx_xlcssa1_1359_update_start_)
        type_cast_1360_sample_start_ <-& (R_xx_xlcssa1_1359_update_completed_)
        ;;[type_cast_1360_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1360_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1360_sample_start_ &-> (type_cast_1360_Sample)
        type_cast_1360_sample_completed_ <-& (type_cast_1360_Sample)
        type_cast_1360_sample_completed_ &-> ($null)
        type_cast_1360_update_start_ &-> (type_cast_1360_Update)
        type_cast_1360_update_completed_ <-& (type_cast_1360_Update)
        // flow-through
        type_cast_1360_update_start_ <-& (type_cast_1360_sample_completed_)
        // ($bitcast ($int<32>) iNsTr_18 )
        $T[type_cast_1362_sample_start_] 
        $T[type_cast_1362_sample_completed_] 
        $T[type_cast_1362_update_start_] 
        $T[type_cast_1362_update_completed_] 
        // iNsTr_18
        $T[R_iNsTr_18_1361_sample_start_] 
        $T[R_iNsTr_18_1361_sample_completed_] 
        $T[R_iNsTr_18_1361_update_start_] 
        $T[R_iNsTr_18_1361_update_completed_] 
        // implicit reference
        R_iNsTr_18_1361_sample_start_ <-& (type_cast_1356_update_completed_)
        R_iNsTr_18_1361_sample_completed_ <-& (R_iNsTr_18_1361_sample_start_)
        R_iNsTr_18_1361_update_start_ <-& (R_iNsTr_18_1361_sample_completed_)
        R_iNsTr_18_1361_update_completed_ <-& (R_iNsTr_18_1361_update_start_)
        type_cast_1362_sample_start_ <-& (R_iNsTr_18_1361_update_completed_)
        ;;[type_cast_1362_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1362_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1362_sample_start_ &-> (type_cast_1362_Sample)
        type_cast_1362_sample_completed_ <-& (type_cast_1362_Sample)
        type_cast_1362_sample_completed_ &-> ($null)
        type_cast_1362_update_start_ &-> (type_cast_1362_Update)
        type_cast_1362_update_completed_ <-& (type_cast_1362_Update)
        // flow-through
        type_cast_1362_update_start_ <-& (type_cast_1362_sample_completed_)
        SGT_i32_u1_1363_sample_start_ <-& (type_cast_1360_update_completed_)
        SGT_i32_u1_1363_sample_start_ <-& (type_cast_1362_update_completed_)
        ;;[SGT_i32_u1_1363_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_1363_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_1363_sample_start_ &-> (SGT_i32_u1_1363_Sample)
        SGT_i32_u1_1363_sample_completed_ <-& (SGT_i32_u1_1363_Sample)
        SGT_i32_u1_1363_sample_completed_ &-> ($null)
        SGT_i32_u1_1363_update_start_ &-> (SGT_i32_u1_1363_Update)
        SGT_i32_u1_1363_update_completed_ <-& (SGT_i32_u1_1363_Update)
        // Target expression
        // (as target) iNsTr_19
        // iNsTr_19
        // implicit reference
        // 		iNsTr_20 := ($bitcast ($uint<32>) (($bitcast ($int<32>) xx_xlcssa1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
        //  file prog.linked.opt.aa, line 503
        // Source expression
        // ($bitcast ($uint<32>) (($bitcast ($int<32>) xx_xlcssa1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
        $T[type_cast_1372_sample_start_] 
        $T[type_cast_1372_sample_completed_] 
        $T[type_cast_1372_update_start_] 
        $T[type_cast_1372_update_completed_] 
        // (($bitcast ($int<32>) xx_xlcssa1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) ))
        $T[ASHR_i32_i32_1371_sample_start_] 
        $T[ASHR_i32_i32_1371_sample_completed_] 
        $T[ASHR_i32_i32_1371_update_start_] 
        $T[ASHR_i32_i32_1371_update_completed_] 
        // ($bitcast ($int<32>) xx_xlcssa1 )
        $T[type_cast_1367_sample_start_] 
        $T[type_cast_1367_sample_completed_] 
        $T[type_cast_1367_update_start_] 
        $T[type_cast_1367_update_completed_] 
        // xx_xlcssa1
        $T[R_xx_xlcssa1_1366_sample_start_] 
        $T[R_xx_xlcssa1_1366_sample_completed_] 
        $T[R_xx_xlcssa1_1366_update_start_] 
        $T[R_xx_xlcssa1_1366_update_completed_] 
        // implicit reference
        R_xx_xlcssa1_1366_sample_start_ <-& ($entry)
        R_xx_xlcssa1_1366_sample_completed_ <-& (R_xx_xlcssa1_1366_sample_start_)
        R_xx_xlcssa1_1366_update_start_ <-& (R_xx_xlcssa1_1366_sample_completed_)
        R_xx_xlcssa1_1366_update_completed_ <-& (R_xx_xlcssa1_1366_update_start_)
        type_cast_1367_sample_start_ <-& (R_xx_xlcssa1_1366_update_completed_)
        ;;[type_cast_1367_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1367_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1367_sample_start_ &-> (type_cast_1367_Sample)
        type_cast_1367_sample_completed_ <-& (type_cast_1367_Sample)
        type_cast_1367_sample_completed_ &-> ($null)
        type_cast_1367_update_start_ &-> (type_cast_1367_Update)
        type_cast_1367_update_completed_ <-& (type_cast_1367_Update)
        // flow-through
        type_cast_1367_update_start_ <-& (type_cast_1367_sample_completed_)
        ASHR_i32_i32_1371_sample_start_ <-& (type_cast_1367_update_completed_)
        ;;[ASHR_i32_i32_1371_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ASHR_i32_i32_1371_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ASHR_i32_i32_1371_sample_start_ &-> (ASHR_i32_i32_1371_Sample)
        ASHR_i32_i32_1371_sample_completed_ <-& (ASHR_i32_i32_1371_Sample)
        ASHR_i32_i32_1371_sample_completed_ &-> ($null)
        ASHR_i32_i32_1371_update_start_ &-> (ASHR_i32_i32_1371_Update)
        ASHR_i32_i32_1371_update_completed_ <-& (ASHR_i32_i32_1371_Update)
        // flow-through
        ASHR_i32_i32_1371_update_start_ <-& (ASHR_i32_i32_1371_sample_completed_)
        type_cast_1372_sample_start_ <-& (ASHR_i32_i32_1371_update_completed_)
        ;;[type_cast_1372_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1372_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1372_sample_start_ &-> (type_cast_1372_Sample)
        type_cast_1372_sample_completed_ <-& (type_cast_1372_Sample)
        type_cast_1372_sample_completed_ &-> ($null)
        type_cast_1372_update_start_ &-> (type_cast_1372_Update)
        type_cast_1372_update_completed_ <-& (type_cast_1372_Update)
        // Target expression
        // (as target) iNsTr_20
        // iNsTr_20
        // implicit reference
        // 		iNsTr_21 := (($bitcast ($int<32>) iNsTr_20 ) < ($bitcast ($int<32>) iNsTr_17 ))
        //  file prog.linked.opt.aa, line 504
        // Source expression
        // (($bitcast ($int<32>) iNsTr_20 ) < ($bitcast ($int<32>) iNsTr_17 ))
        $T[SLT_i32_u1_1379_sample_start_] 
        $T[SLT_i32_u1_1379_sample_completed_] 
        $T[SLT_i32_u1_1379_update_start_] 
        $T[SLT_i32_u1_1379_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_20 )
        $T[type_cast_1376_sample_start_] 
        $T[type_cast_1376_sample_completed_] 
        $T[type_cast_1376_update_start_] 
        $T[type_cast_1376_update_completed_] 
        // iNsTr_20
        $T[R_iNsTr_20_1375_sample_start_] 
        $T[R_iNsTr_20_1375_sample_completed_] 
        $T[R_iNsTr_20_1375_update_start_] 
        $T[R_iNsTr_20_1375_update_completed_] 
        // implicit reference
        R_iNsTr_20_1375_sample_start_ <-& (type_cast_1372_update_completed_)
        R_iNsTr_20_1375_sample_completed_ <-& (R_iNsTr_20_1375_sample_start_)
        R_iNsTr_20_1375_update_start_ <-& (R_iNsTr_20_1375_sample_completed_)
        R_iNsTr_20_1375_update_completed_ <-& (R_iNsTr_20_1375_update_start_)
        type_cast_1376_sample_start_ <-& (R_iNsTr_20_1375_update_completed_)
        ;;[type_cast_1376_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1376_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1376_sample_start_ &-> (type_cast_1376_Sample)
        type_cast_1376_sample_completed_ <-& (type_cast_1376_Sample)
        type_cast_1376_sample_completed_ &-> ($null)
        type_cast_1376_update_start_ &-> (type_cast_1376_Update)
        type_cast_1376_update_completed_ <-& (type_cast_1376_Update)
        // flow-through
        type_cast_1376_update_start_ <-& (type_cast_1376_sample_completed_)
        // ($bitcast ($int<32>) iNsTr_17 )
        $T[type_cast_1378_sample_start_] 
        $T[type_cast_1378_sample_completed_] 
        $T[type_cast_1378_update_start_] 
        $T[type_cast_1378_update_completed_] 
        // iNsTr_17
        $T[R_iNsTr_17_1377_sample_start_] 
        $T[R_iNsTr_17_1377_sample_completed_] 
        $T[R_iNsTr_17_1377_update_start_] 
        $T[R_iNsTr_17_1377_update_completed_] 
        // implicit reference
        R_iNsTr_17_1377_sample_start_ <-& (SUB_u32_u32_1347_update_completed_)
        R_iNsTr_17_1377_sample_completed_ <-& (R_iNsTr_17_1377_sample_start_)
        R_iNsTr_17_1377_update_start_ <-& (R_iNsTr_17_1377_sample_completed_)
        R_iNsTr_17_1377_update_completed_ <-& (R_iNsTr_17_1377_update_start_)
        type_cast_1378_sample_start_ <-& (R_iNsTr_17_1377_update_completed_)
        ;;[type_cast_1378_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1378_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1378_sample_start_ &-> (type_cast_1378_Sample)
        type_cast_1378_sample_completed_ <-& (type_cast_1378_Sample)
        type_cast_1378_sample_completed_ &-> ($null)
        type_cast_1378_update_start_ &-> (type_cast_1378_Update)
        type_cast_1378_update_completed_ <-& (type_cast_1378_Update)
        // flow-through
        type_cast_1378_update_start_ <-& (type_cast_1378_sample_completed_)
        SLT_i32_u1_1379_sample_start_ <-& (type_cast_1376_update_completed_)
        SLT_i32_u1_1379_sample_start_ <-& (type_cast_1378_update_completed_)
        ;;[SLT_i32_u1_1379_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_i32_u1_1379_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_i32_u1_1379_sample_start_ &-> (SLT_i32_u1_1379_Sample)
        SLT_i32_u1_1379_sample_completed_ <-& (SLT_i32_u1_1379_Sample)
        SLT_i32_u1_1379_sample_completed_ &-> ($null)
        SLT_i32_u1_1379_update_start_ &-> (SLT_i32_u1_1379_Update)
        SLT_i32_u1_1379_update_completed_ <-& (SLT_i32_u1_1379_Update)
        // Target expression
        // (as target) iNsTr_21
        // iNsTr_21
        // implicit reference
        // 		orx_xcond := (iNsTr_19 & iNsTr_21)
        //  file prog.linked.opt.aa, line 505
        // Source expression
        // (iNsTr_19 & iNsTr_21)
        $T[AND_u1_u1_1384_sample_start_] 
        $T[AND_u1_u1_1384_sample_completed_] 
        $T[AND_u1_u1_1384_update_start_] 
        $T[AND_u1_u1_1384_update_completed_] 
        // iNsTr_19
        $T[R_iNsTr_19_1382_sample_start_] 
        $T[R_iNsTr_19_1382_sample_completed_] 
        $T[R_iNsTr_19_1382_update_start_] 
        $T[R_iNsTr_19_1382_update_completed_] 
        // implicit reference
        R_iNsTr_19_1382_sample_start_ <-& (SGT_i32_u1_1363_update_completed_)
        R_iNsTr_19_1382_sample_completed_ <-& (R_iNsTr_19_1382_sample_start_)
        R_iNsTr_19_1382_update_start_ <-& (R_iNsTr_19_1382_sample_completed_)
        R_iNsTr_19_1382_update_completed_ <-& (R_iNsTr_19_1382_update_start_)
        // iNsTr_21
        $T[R_iNsTr_21_1383_sample_start_] 
        $T[R_iNsTr_21_1383_sample_completed_] 
        $T[R_iNsTr_21_1383_update_start_] 
        $T[R_iNsTr_21_1383_update_completed_] 
        // implicit reference
        R_iNsTr_21_1383_sample_start_ <-& (SLT_i32_u1_1379_update_completed_)
        R_iNsTr_21_1383_sample_completed_ <-& (R_iNsTr_21_1383_sample_start_)
        R_iNsTr_21_1383_update_start_ <-& (R_iNsTr_21_1383_sample_completed_)
        R_iNsTr_21_1383_update_completed_ <-& (R_iNsTr_21_1383_update_start_)
        AND_u1_u1_1384_sample_start_ <-& (R_iNsTr_19_1382_update_completed_)
        AND_u1_u1_1384_sample_start_ <-& (R_iNsTr_21_1383_update_completed_)
        ;;[AND_u1_u1_1384_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_1384_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_1384_sample_start_ &-> (AND_u1_u1_1384_Sample)
        AND_u1_u1_1384_sample_completed_ <-& (AND_u1_u1_1384_Sample)
        AND_u1_u1_1384_sample_completed_ &-> ($null)
        AND_u1_u1_1384_update_start_ &-> (AND_u1_u1_1384_Update)
        AND_u1_u1_1384_update_completed_ <-& (AND_u1_u1_1384_Update)
        // Target expression
        // (as target) orx_xcond
        // orx_xcond
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1342_to_assign_stmt_1385__entry__ |-> (assign_stmt_1342_to_assign_stmt_1385)
      assign_stmt_1342_to_assign_stmt_1385__exit__ <-| (assign_stmt_1342_to_assign_stmt_1385)
      // if-statement  
      //  file prog.linked.opt.aa, line 506
      ;;[if_stmt_1386_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1386__entry__ |-> (if_stmt_1386_dead_link)
      if_stmt_1386__exit__ <-| (if_stmt_1386_dead_link)
      ;;[if_stmt_1386_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1386__entry__ |-> (if_stmt_1386_eval_test)
      $P [R_orx_xcond_1387_place]
      R_orx_xcond_1387_place <-| (if_stmt_1386_eval_test)
      ;;[if_stmt_1386_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1386_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcond_1387_place |-> (if_stmt_1386_if_link if_stmt_1386_else_link)
      $P [xx_x_crit_edge_bb_3]
      xx_x_crit_edge_bb_3 <-| (if_stmt_1386_if_link)
      $P [xx_x_crit_edge_bb_4]
      xx_x_crit_edge_bb_4 <-| (if_stmt_1386_else_link)
      ::[assign_stmt_1397_to_assign_stmt_1425] 
      {
        // 		iNsTr_23 := (xx_xlcssa - xx_xlcssa2)
        //  file prog.linked.opt.aa, line 513
        // Source expression
        // (xx_xlcssa - xx_xlcssa2)
        $T[SUB_u32_u32_1396_sample_start_] 
        $T[SUB_u32_u32_1396_sample_completed_] 
        $T[SUB_u32_u32_1396_update_start_] 
        $T[SUB_u32_u32_1396_update_completed_] 
        // xx_xlcssa
        $T[R_xx_xlcssa_1394_sample_start_] 
        $T[R_xx_xlcssa_1394_sample_completed_] 
        $T[R_xx_xlcssa_1394_update_start_] 
        $T[R_xx_xlcssa_1394_update_completed_] 
        // implicit reference
        R_xx_xlcssa_1394_sample_start_ <-& ($entry)
        R_xx_xlcssa_1394_sample_completed_ <-& (R_xx_xlcssa_1394_sample_start_)
        R_xx_xlcssa_1394_update_start_ <-& (R_xx_xlcssa_1394_sample_completed_)
        R_xx_xlcssa_1394_update_completed_ <-& (R_xx_xlcssa_1394_update_start_)
        // xx_xlcssa2
        $T[R_xx_xlcssa2_1395_sample_start_] 
        $T[R_xx_xlcssa2_1395_sample_completed_] 
        $T[R_xx_xlcssa2_1395_update_start_] 
        $T[R_xx_xlcssa2_1395_update_completed_] 
        // implicit reference
        R_xx_xlcssa2_1395_sample_start_ <-& ($entry)
        R_xx_xlcssa2_1395_sample_completed_ <-& (R_xx_xlcssa2_1395_sample_start_)
        R_xx_xlcssa2_1395_update_start_ <-& (R_xx_xlcssa2_1395_sample_completed_)
        R_xx_xlcssa2_1395_update_completed_ <-& (R_xx_xlcssa2_1395_update_start_)
        SUB_u32_u32_1396_sample_start_ <-& (R_xx_xlcssa_1394_update_completed_)
        SUB_u32_u32_1396_sample_start_ <-& (R_xx_xlcssa2_1395_update_completed_)
        ;;[SUB_u32_u32_1396_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_1396_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_1396_sample_start_ &-> (SUB_u32_u32_1396_Sample)
        SUB_u32_u32_1396_sample_completed_ <-& (SUB_u32_u32_1396_Sample)
        SUB_u32_u32_1396_sample_completed_ &-> ($null)
        SUB_u32_u32_1396_update_start_ &-> (SUB_u32_u32_1396_Update)
        SUB_u32_u32_1396_update_completed_ <-& (SUB_u32_u32_1396_Update)
        // Target expression
        // (as target) iNsTr_23
        // iNsTr_23
        // implicit reference
        // 		ispos := (($bitcast ($int<32>) iNsTr_23 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ))
        //  file prog.linked.opt.aa, line 514
        // Source expression
        // (($bitcast ($int<32>) iNsTr_23 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ))
        $T[SGT_i32_u1_1404_sample_start_] 
        $T[SGT_i32_u1_1404_sample_completed_] 
        $T[SGT_i32_u1_1404_update_start_] 
        $T[SGT_i32_u1_1404_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_23 )
        $T[type_cast_1400_sample_start_] 
        $T[type_cast_1400_sample_completed_] 
        $T[type_cast_1400_update_start_] 
        $T[type_cast_1400_update_completed_] 
        // iNsTr_23
        $T[R_iNsTr_23_1399_sample_start_] 
        $T[R_iNsTr_23_1399_sample_completed_] 
        $T[R_iNsTr_23_1399_update_start_] 
        $T[R_iNsTr_23_1399_update_completed_] 
        // implicit reference
        R_iNsTr_23_1399_sample_start_ <-& (SUB_u32_u32_1396_update_completed_)
        R_iNsTr_23_1399_sample_completed_ <-& (R_iNsTr_23_1399_sample_start_)
        R_iNsTr_23_1399_update_start_ <-& (R_iNsTr_23_1399_sample_completed_)
        R_iNsTr_23_1399_update_completed_ <-& (R_iNsTr_23_1399_update_start_)
        type_cast_1400_sample_start_ <-& (R_iNsTr_23_1399_update_completed_)
        ;;[type_cast_1400_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1400_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1400_sample_start_ &-> (type_cast_1400_Sample)
        type_cast_1400_sample_completed_ <-& (type_cast_1400_Sample)
        type_cast_1400_sample_completed_ &-> ($null)
        type_cast_1400_update_start_ &-> (type_cast_1400_Update)
        type_cast_1400_update_completed_ <-& (type_cast_1400_Update)
        // flow-through
        type_cast_1400_update_start_ <-& (type_cast_1400_sample_completed_)
        SGT_i32_u1_1404_sample_start_ <-& (type_cast_1400_update_completed_)
        ;;[SGT_i32_u1_1404_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_1404_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_1404_sample_start_ &-> (SGT_i32_u1_1404_Sample)
        SGT_i32_u1_1404_sample_completed_ <-& (SGT_i32_u1_1404_Sample)
        SGT_i32_u1_1404_sample_completed_ &-> ($null)
        SGT_i32_u1_1404_update_start_ &-> (SGT_i32_u1_1404_Update)
        SGT_i32_u1_1404_update_completed_ <-& (SGT_i32_u1_1404_Update)
        // Target expression
        // (as target) ispos
        // ispos
        // implicit reference
        // 		neg := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_23)
        //  file prog.linked.opt.aa, line 515
        // Source expression
        // (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_23)
        $T[SUB_u32_u32_1410_sample_start_] 
        $T[SUB_u32_u32_1410_sample_completed_] 
        $T[SUB_u32_u32_1410_update_start_] 
        $T[SUB_u32_u32_1410_update_completed_] 
        // iNsTr_23
        $T[R_iNsTr_23_1409_sample_start_] 
        $T[R_iNsTr_23_1409_sample_completed_] 
        $T[R_iNsTr_23_1409_update_start_] 
        $T[R_iNsTr_23_1409_update_completed_] 
        // implicit reference
        R_iNsTr_23_1409_sample_start_ <-& (SUB_u32_u32_1396_update_completed_)
        R_iNsTr_23_1409_sample_completed_ <-& (R_iNsTr_23_1409_sample_start_)
        R_iNsTr_23_1409_update_start_ <-& (R_iNsTr_23_1409_sample_completed_)
        R_iNsTr_23_1409_update_completed_ <-& (R_iNsTr_23_1409_update_start_)
        SUB_u32_u32_1410_sample_start_ <-& (R_iNsTr_23_1409_update_completed_)
        ;;[SUB_u32_u32_1410_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_1410_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_1410_sample_start_ &-> (SUB_u32_u32_1410_Sample)
        SUB_u32_u32_1410_sample_completed_ <-& (SUB_u32_u32_1410_Sample)
        SUB_u32_u32_1410_sample_completed_ &-> ($null)
        SUB_u32_u32_1410_update_start_ &-> (SUB_u32_u32_1410_Update)
        SUB_u32_u32_1410_update_completed_ <-& (SUB_u32_u32_1410_Update)
        // Target expression
        // (as target) neg
        // neg
        // implicit reference
        // 		iNsTr_24 := ( $mux ispos iNsTr_23  neg ) 
        //  file prog.linked.opt.aa, line 516
        // Source expression
        // ( $mux ispos iNsTr_23  neg ) 
        $T[MUX_1416_sample_start_] 
        $T[MUX_1416_sample_completed_] 
        $T[MUX_1416_update_start_] 
        $T[MUX_1416_update_completed_] 
        // ispos
        $T[R_ispos_1413_sample_start_] 
        $T[R_ispos_1413_sample_completed_] 
        $T[R_ispos_1413_update_start_] 
        $T[R_ispos_1413_update_completed_] 
        // implicit reference
        R_ispos_1413_sample_start_ <-& (SGT_i32_u1_1404_update_completed_)
        R_ispos_1413_sample_completed_ <-& (R_ispos_1413_sample_start_)
        R_ispos_1413_update_start_ <-& (R_ispos_1413_sample_completed_)
        R_ispos_1413_update_completed_ <-& (R_ispos_1413_update_start_)
        // iNsTr_23
        $T[R_iNsTr_23_1414_sample_start_] 
        $T[R_iNsTr_23_1414_sample_completed_] 
        $T[R_iNsTr_23_1414_update_start_] 
        $T[R_iNsTr_23_1414_update_completed_] 
        // implicit reference
        R_iNsTr_23_1414_sample_start_ <-& (SUB_u32_u32_1396_update_completed_)
        R_iNsTr_23_1414_sample_completed_ <-& (R_iNsTr_23_1414_sample_start_)
        R_iNsTr_23_1414_update_start_ <-& (R_iNsTr_23_1414_sample_completed_)
        R_iNsTr_23_1414_update_completed_ <-& (R_iNsTr_23_1414_update_start_)
        // neg
        $T[R_neg_1415_sample_start_] 
        $T[R_neg_1415_sample_completed_] 
        $T[R_neg_1415_update_start_] 
        $T[R_neg_1415_update_completed_] 
        // implicit reference
        R_neg_1415_sample_start_ <-& (SUB_u32_u32_1410_update_completed_)
        R_neg_1415_sample_completed_ <-& (R_neg_1415_sample_start_)
        R_neg_1415_update_start_ <-& (R_neg_1415_sample_completed_)
        R_neg_1415_update_completed_ <-& (R_neg_1415_update_start_)
        MUX_1416_sample_start_ <-& (R_ispos_1413_update_completed_)
        MUX_1416_sample_start_ <-& (R_iNsTr_23_1414_update_completed_)
        MUX_1416_sample_start_ <-& (R_neg_1415_update_completed_)
        ;;[MUX_1416_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1416_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1416_sample_start_ &-> (MUX_1416_start)
        MUX_1416_sample_completed_ <-& (MUX_1416_start)
        MUX_1416_update_start_ &-> (MUX_1416_complete)
        MUX_1416_update_completed_ <-& (MUX_1416_complete)
        MUX_1416_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_24
        // iNsTr_24
        // implicit reference
        // 		phitmp := (($bitcast ($int<32>) iNsTr_24 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000011101  ) ))
        //  file prog.linked.opt.aa, line 517
        // Source expression
        // (($bitcast ($int<32>) iNsTr_24 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000011101  ) ))
        $T[SGT_i32_u1_1424_sample_start_] 
        $T[SGT_i32_u1_1424_sample_completed_] 
        $T[SGT_i32_u1_1424_update_start_] 
        $T[SGT_i32_u1_1424_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_24 )
        $T[type_cast_1420_sample_start_] 
        $T[type_cast_1420_sample_completed_] 
        $T[type_cast_1420_update_start_] 
        $T[type_cast_1420_update_completed_] 
        // iNsTr_24
        $T[R_iNsTr_24_1419_sample_start_] 
        $T[R_iNsTr_24_1419_sample_completed_] 
        $T[R_iNsTr_24_1419_update_start_] 
        $T[R_iNsTr_24_1419_update_completed_] 
        // implicit reference
        R_iNsTr_24_1419_sample_start_ <-& (MUX_1416_update_completed_)
        R_iNsTr_24_1419_sample_completed_ <-& (R_iNsTr_24_1419_sample_start_)
        R_iNsTr_24_1419_update_start_ <-& (R_iNsTr_24_1419_sample_completed_)
        R_iNsTr_24_1419_update_completed_ <-& (R_iNsTr_24_1419_update_start_)
        type_cast_1420_sample_start_ <-& (R_iNsTr_24_1419_update_completed_)
        ;;[type_cast_1420_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1420_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1420_sample_start_ &-> (type_cast_1420_Sample)
        type_cast_1420_sample_completed_ <-& (type_cast_1420_Sample)
        type_cast_1420_sample_completed_ &-> ($null)
        type_cast_1420_update_start_ &-> (type_cast_1420_Update)
        type_cast_1420_update_completed_ <-& (type_cast_1420_Update)
        // flow-through
        type_cast_1420_update_start_ <-& (type_cast_1420_sample_completed_)
        SGT_i32_u1_1424_sample_start_ <-& (type_cast_1420_update_completed_)
        ;;[SGT_i32_u1_1424_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_1424_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_1424_sample_start_ &-> (SGT_i32_u1_1424_Sample)
        SGT_i32_u1_1424_sample_completed_ <-& (SGT_i32_u1_1424_Sample)
        SGT_i32_u1_1424_sample_completed_ &-> ($null)
        SGT_i32_u1_1424_update_start_ &-> (SGT_i32_u1_1424_Update)
        SGT_i32_u1_1424_update_completed_ <-& (SGT_i32_u1_1424_Update)
        // Target expression
        // (as target) phitmp
        // phitmp
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1397_to_assign_stmt_1425__entry__ |-> (assign_stmt_1397_to_assign_stmt_1425)
      assign_stmt_1397_to_assign_stmt_1425__exit__ <-| (assign_stmt_1397_to_assign_stmt_1425)
      ::[assign_stmt_1439] 
      {
        // 		ret_val__ := ($cast ($uint<8>) iNsTr_26 )
        //  file prog.linked.opt.aa, line 522
        // Source expression
        // ($cast ($uint<8>) iNsTr_26 )
        $T[type_cast_1438_sample_start_] 
        $T[type_cast_1438_sample_completed_] 
        $T[type_cast_1438_update_start_] 
        $T[type_cast_1438_update_completed_] 
        // iNsTr_26
        $T[R_iNsTr_26_1437_sample_start_] 
        $T[R_iNsTr_26_1437_sample_completed_] 
        $T[R_iNsTr_26_1437_update_start_] 
        $T[R_iNsTr_26_1437_update_completed_] 
        // implicit reference
        R_iNsTr_26_1437_sample_start_ <-& ($entry)
        R_iNsTr_26_1437_sample_completed_ <-& (R_iNsTr_26_1437_sample_start_)
        R_iNsTr_26_1437_update_start_ <-& (R_iNsTr_26_1437_sample_completed_)
        R_iNsTr_26_1437_update_completed_ <-& (R_iNsTr_26_1437_update_start_)
        type_cast_1438_sample_start_ <-& (R_iNsTr_26_1437_update_completed_)
        ;;[type_cast_1438_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1438_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1438_sample_start_ &-> (type_cast_1438_Sample)
        type_cast_1438_sample_completed_ <-& (type_cast_1438_Sample)
        type_cast_1438_sample_completed_ &-> ($null)
        type_cast_1438_update_start_ &-> (type_cast_1438_Update)
        type_cast_1438_update_completed_ <-& (type_cast_1438_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_1439__entry__ |-> (assign_stmt_1439)
      assign_stmt_1439__exit__ <-| (assign_stmt_1439)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 467
      //---------------------   merge statement  file prog.linked.opt.aa, line 467  --------------------------
      ||[bb_1_bb_1_PhiReq] 
      {
        ;;[phi_stmt_1196] 
        {
          ||[phi_stmt_1196_sources] 
          {
            // sources for 			$phi maxx_x07 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_8 ) $on bb_1_bb_1 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_8 )
            ;;[type_cast_1202] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1196_req] 
        }
        ;;[phi_stmt_1203] 
        {
          ||[phi_stmt_1203_sources] 
          {
            // sources for 			$phi minx_x06 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_10 ) $on bb_1_bb_1 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_10 )
            ;;[type_cast_1209] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1203_req] 
        }
        ;;[phi_stmt_1210] 
        {
          ||[phi_stmt_1210_sources] 
          {
            // sources for 			$phi maxtx_x05 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_7 ) $on bb_1_bb_1 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_7 )
            ;;[type_cast_1216] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1210_req] 
        }
        ;;[phi_stmt_1217] 
        {
          ||[phi_stmt_1217_sources] 
          {
            // sources for 			$phi mintx_x04 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_9 ) $on bb_1_bb_1 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_9 )
            ;;[type_cast_1223] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1217_req] 
        }
        ;;[phi_stmt_1224] 
        {
          ||[phi_stmt_1224_sources] 
          {
            // sources for 			$phi iNsTr_2 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_12 ) $on bb_1_bb_1 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_12 )
            ;;[type_cast_1230] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1224_req] 
        }
        ;;[phi_stmt_1231] 
        {
          ||[phi_stmt_1231_sources] 
          {
            // sources for 			$phi ptrx_x02 := 			  ($cast ($uint<32>) iNsTr_0 ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_14 ) $on bb_1_bb_1 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_0 )
            ;;[type_cast_1234] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_14 )
            ;;[type_cast_1236] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1231_req] 
        }
      }
      bb_1_bb_1 |-> (bb_1_bb_1_PhiReq)
      ||[bbx_xnph_bb_1_PhiReq] 
      {
        ;;[phi_stmt_1196] 
        {
          ||[phi_stmt_1196_sources] 
          {
            // sources for 			$phi maxx_x07 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_8 ) $on bb_1_bb_1 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_8 )
            ;;[type_cast_1202] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1196_req] 
        }
        ;;[phi_stmt_1203] 
        {
          ||[phi_stmt_1203_sources] 
          {
            // sources for 			$phi minx_x06 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_10 ) $on bb_1_bb_1 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_10 )
            ;;[type_cast_1209] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1203_req] 
        }
        ;;[phi_stmt_1210] 
        {
          ||[phi_stmt_1210_sources] 
          {
            // sources for 			$phi maxtx_x05 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_7 ) $on bb_1_bb_1 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_7 )
            ;;[type_cast_1216] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1210_req] 
        }
        ;;[phi_stmt_1217] 
        {
          ||[phi_stmt_1217_sources] 
          {
            // sources for 			$phi mintx_x04 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_9 ) $on bb_1_bb_1 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_9 )
            ;;[type_cast_1223] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1217_req] 
        }
        ;;[phi_stmt_1224] 
        {
          ||[phi_stmt_1224_sources] 
          {
            // sources for 			$phi iNsTr_2 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_12 ) $on bb_1_bb_1 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_12 )
            ;;[type_cast_1230] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1224_req] 
        }
        ;;[phi_stmt_1231] 
        {
          ||[phi_stmt_1231_sources] 
          {
            // sources for 			$phi ptrx_x02 := 			  ($cast ($uint<32>) iNsTr_0 ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_14 ) $on bb_1_bb_1 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_0 )
            ;;[type_cast_1234] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_14 )
            ;;[type_cast_1236] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1231_req] 
        }
      }
      bbx_xnph_bb_1 |-> (bbx_xnph_bb_1_PhiReq)
      $P [merge_stmt_1195_PhiReqMerge] 
      merge_stmt_1195_PhiReqMerge <-| ( bb_1_bb_1_PhiReq  bbx_xnph_bb_1_PhiReq )
      ||[merge_stmt_1195_PhiAck] 
      {
        $T [phi_stmt_1196_ack] 
        $T [phi_stmt_1203_ack] 
        $T [phi_stmt_1210_ack] 
        $T [phi_stmt_1217_ack] 
        $T [phi_stmt_1224_ack] 
        $T [phi_stmt_1231_ack] 
      }
      merge_stmt_1195_PhiReqMerge |-> (merge_stmt_1195_PhiAck)
      merge_stmt_1195__exit__  <-| (merge_stmt_1195_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 467  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 493
      ;;[merge_stmt_1322_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1322__entry__ |-> (merge_stmt_1322_dead_link)
      merge_stmt_1322__exit__ <-| (merge_stmt_1322_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 493  --------------------------
      ||[bb_1_xx_x_crit_edge_PhiReq] 
      {
        ;;[phi_stmt_1323] 
        {
          ||[phi_stmt_1323_sources] 
          {
            // sources for 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_10 ) $on bb_1_xx_x_crit_edge // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_10 )
            ;;[type_cast_1326] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1323_req] 
        }
        ;;[phi_stmt_1327] 
        {
          ||[phi_stmt_1327_sources] 
          {
            // sources for 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_9 ) $on bb_1_xx_x_crit_edge // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_9 )
            ;;[type_cast_1330] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1327_req] 
        }
        ;;[phi_stmt_1331] 
        {
          ||[phi_stmt_1331_sources] 
          {
            // sources for 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_8 ) $on bb_1_xx_x_crit_edge // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_8 )
            ;;[type_cast_1334] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1331_req] 
        }
        ;;[phi_stmt_1335] 
        {
          ||[phi_stmt_1335_sources] 
          {
            // sources for 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_7 ) $on bb_1_xx_x_crit_edge // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_7 )
            ;;[type_cast_1338] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1335_req] 
        }
      }
      bb_1_xx_x_crit_edge |-> (bb_1_xx_x_crit_edge_PhiReq)
      $P [merge_stmt_1322_PhiReqMerge] 
      merge_stmt_1322_PhiReqMerge <-| ( bb_1_xx_x_crit_edge_PhiReq )
      ||[merge_stmt_1322_PhiAck] 
      {
        $T [phi_stmt_1323_ack] 
        $T [phi_stmt_1327_ack] 
        $T [phi_stmt_1331_ack] 
        $T [phi_stmt_1335_ack] 
      }
      merge_stmt_1322_PhiReqMerge |-> (merge_stmt_1322_PhiAck)
      merge_stmt_1322__exit__  <-| (merge_stmt_1322_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 493  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 511
      ;;[merge_stmt_1392_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1392__entry__ |-> (merge_stmt_1392_dead_link)
      merge_stmt_1392__exit__ <-| (merge_stmt_1392_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 511  --------------------------
      ||[xx_x_crit_edge_bb_3_PhiReq] 
      {
        // no phi statements in merge..
      }
      xx_x_crit_edge_bb_3 |-> (xx_x_crit_edge_bb_3_PhiReq)
      $P [merge_stmt_1392_PhiReqMerge] 
      merge_stmt_1392_PhiReqMerge <-| ( xx_x_crit_edge_bb_3_PhiReq )
      ||[merge_stmt_1392_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1392_PhiReqMerge |-> (merge_stmt_1392_PhiAck)
      merge_stmt_1392__exit__  <-| (merge_stmt_1392_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 511  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 519
      //---------------------   merge statement  file prog.linked.opt.aa, line 519  --------------------------
      ||[bb_3_bb_4_PhiReq] 
      {
        ;;[phi_stmt_1428] 
        {
          ||[phi_stmt_1428_sources] 
          {
            // sources for 			$phi iNsTr_26 := 			  ($cast ($uint<1>) ($bitcast ($uint<1>) _b1  ) ) $on xx_x_crit_edge_bb_4			  ($cast ($uint<1>) phitmp ) $on bb_3_bb_4 // type of target is $uint<1>
            // ($cast ($uint<1>) phitmp )
            ;;[type_cast_1434] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1428_req] 
        }
      }
      bb_3_bb_4 |-> (bb_3_bb_4_PhiReq)
      ||[xx_x_crit_edge_bb_4_PhiReq] 
      {
        ;;[phi_stmt_1428] 
        {
          ||[phi_stmt_1428_sources] 
          {
            // sources for 			$phi iNsTr_26 := 			  ($cast ($uint<1>) ($bitcast ($uint<1>) _b1  ) ) $on xx_x_crit_edge_bb_4			  ($cast ($uint<1>) phitmp ) $on bb_3_bb_4 // type of target is $uint<1>
            // ($cast ($uint<1>) phitmp )
            ;;[type_cast_1434] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1428_req] 
        }
      }
      xx_x_crit_edge_bb_4 |-> (xx_x_crit_edge_bb_4_PhiReq)
      $P [merge_stmt_1427_PhiReqMerge] 
      merge_stmt_1427_PhiReqMerge <-| ( bb_3_bb_4_PhiReq  xx_x_crit_edge_bb_4_PhiReq )
      ||[merge_stmt_1427_PhiAck] 
      {
        $T [phi_stmt_1428_ack] 
      }
      merge_stmt_1427_PhiReqMerge |-> (merge_stmt_1427_PhiAck)
      merge_stmt_1427__exit__  <-| (merge_stmt_1427_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 519  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 524
      //---------------------   merge statement  file prog.linked.opt.aa, line 524  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_1441_PhiReqMerge] 
      merge_stmt_1441_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_1441_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1441_PhiReqMerge |-> (merge_stmt_1441_PhiAck)
      merge_stmt_1441__exit__  <-| (merge_stmt_1441_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 524  --------------------------
      assign_stmt_1193__entry__ <-| (branch_block_stmt_1190__entry__)
      bbx_xnph_bb_1 <-| (assign_stmt_1193__exit__)
      assign_stmt_1242_to_assign_stmt_1315__entry__ <-| (merge_stmt_1195__exit__)
      if_stmt_1316__entry__ <-| (assign_stmt_1242_to_assign_stmt_1315__exit__)
      merge_stmt_1322__entry__ <-| (if_stmt_1316__exit__)
      assign_stmt_1342_to_assign_stmt_1385__entry__ <-| (merge_stmt_1322__exit__)
      if_stmt_1386__entry__ <-| (assign_stmt_1342_to_assign_stmt_1385__exit__)
      merge_stmt_1392__entry__ <-| (if_stmt_1386__exit__)
      assign_stmt_1397_to_assign_stmt_1425__entry__ <-| (merge_stmt_1392__exit__)
      bb_3_bb_4 <-| (assign_stmt_1397_to_assign_stmt_1425__exit__)
      assign_stmt_1439__entry__ <-| (merge_stmt_1427__exit__)
      return__ <-| (assign_stmt_1439__exit__)
      merge_stmt_1441__exit__ |-> (branch_block_stmt_1190__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %blsCheck%body%
    //  file prog.linked.opt.aa, line 467
    // constant-object-declarations for block %blsCheck%body%
    //  file prog.linked.opt.aa, line 493
    // constant-object-declarations for block %blsCheck%body%
    //  file prog.linked.opt.aa, line 511
    // constant-object-declarations for block %blsCheck%body%
    //  file prog.linked.opt.aa, line 519
    // constant-object-declarations for block %blsCheck%body%
    //  file prog.linked.opt.aa, line 524
    // constant-object-declarations for block %blsCheck%body
    //  file prog.linked.opt.aa, line 463
    // constant-object-declarations for block %blsCheck
    //  file prog.linked.opt.aa, line 458
    // constant-declarations for block %blsCheck%body
    //  file prog.linked.opt.aa, line 463
    // DDbuff_ptr
    $constant $W[LOAD_DDbuff_ptr_1192_word_address_0] : $pointer<memory_space_3> := _b0
    // constant-declarations for block %blsCheck%body%
    //  file prog.linked.opt.aa, line 467
    // constant-declarations for phi:  			$phi maxx_x07 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_8 ) $on bb_1_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 468
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_1200_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi minx_x06 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_10 ) $on bb_1_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 469
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_1207_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi maxtx_x05 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_7 ) $on bb_1_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 470
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) )
    $constant $W[type_cast_1214_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi mintx_x04 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_9 ) $on bb_1_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 471
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) )
    $constant $W[type_cast_1221_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi iNsTr_2 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_12 ) $on bb_1_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 472
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_1228_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi ptrx_x02 := 			  ($cast ($uint<32>) iNsTr_0 ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_14 ) $on bb_1_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 473
    // @(DDbuff[ptrx_x02])
    $constant $W[array_obj_ref_1240_resized_base_address] : $int<7> := _b0000000// 0
    $constant $W[array_obj_ref_1240_offset_scale_factor_0] : $int<7> := _b0000001// 1
    // ->(iNsTr_3)
    $constant $W[ptr_deref_1245_word_offset_0] : $int<7> := _b0000000// 0
    // ( $mux iNsTr_5 iNsTr_2  maxtx_x05 ) 
    // ( $mux iNsTr_5 iNsTr_4  maxx_x07 ) 
    // ( $mux iNsTr_6 iNsTr_2  mintx_x04 ) 
    // ( $mux iNsTr_6 iNsTr_4  minx_x06 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1288_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1294_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000001011100  )
    $constant $W[type_cast_1300_wire_constant] : $int<32> := _b00000000000000000000000001011100// 92
    // ( $mux iNsTr_13 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_11 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_1306_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000101100  )
    $constant $W[type_cast_1313_wire_constant] : $int<32> := _b00000000000000000000000000101100// 44
    // if-statement  
    //  file prog.linked.opt.aa, line 488
    // constant-declarations for block %blsCheck%body%
    //  file prog.linked.opt.aa, line 493
    // constant-declarations for phi:  			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_10 ) $on bb_1_xx_x_crit_edge // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 494
    // constant-declarations for phi:  			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_9 ) $on bb_1_xx_x_crit_edge // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 495
    // constant-declarations for phi:  			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_8 ) $on bb_1_xx_x_crit_edge // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 496
    // constant-declarations for phi:  			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_7 ) $on bb_1_xx_x_crit_edge // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 497
    // maxDer
    $constant $W[STORE_maxDer_1340_word_address_0] : $pointer<memory_space_21> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_1345_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )
    $constant $W[type_cast_1354_wire_constant] : $int<32> := _b00000000000000000000000000000011// 3
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )
    $constant $W[type_cast_1370_wire_constant] : $int<32> := _b00000000000000000000000000000011// 3
    // if-statement  
    //  file prog.linked.opt.aa, line 506
    // constant-declarations for block %blsCheck%body%
    //  file prog.linked.opt.aa, line 511
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) )
    $constant $W[type_cast_1403_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_1408_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ( $mux ispos iNsTr_23  neg ) 
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000011101  ) )
    $constant $W[type_cast_1423_wire_constant] : $int<32> := _b00000000000000000000000000011101// 29
    // constant-declarations for block %blsCheck%body%
    //  file prog.linked.opt.aa, line 519
    // constant-declarations for phi:  			$phi iNsTr_26 := 			  ($cast ($uint<1>) ($bitcast ($uint<1>) _b1  ) ) $on xx_x_crit_edge_bb_4			  ($cast ($uint<1>) phitmp ) $on bb_3_bb_4 // type of target is $uint<1>
    //  file prog.linked.opt.aa, line 520
    // ($cast ($uint<1>) ($bitcast ($uint<1>) _b1  ) )
    $constant $W[type_cast_1432_wire_constant] : $int<1> := _b1// 1
    // constant-declarations for block %blsCheck%body%
    //  file prog.linked.opt.aa, line 524
    // block %blsCheck%body
    //  file prog.linked.opt.aa, line 463
    // 		iNsTr_0 := DDbuff_ptr
    //  file prog.linked.opt.aa, line 465
    // DDbuff_ptr
    $W[LOAD_DDbuff_ptr_1192_data_0] : $int<32>
    // iNsTr_0
    $W[iNsTr_0_1193] : $int<32>
    // merge-statement  
    //  file prog.linked.opt.aa, line 467
    // 			$phi maxx_x07 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_8 ) $on bb_1_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 468
    // ($cast ($uint<32>) iNsTr_8 )
    $intermediate $W[type_cast_1202_wire] : $int<32>
    // maxx_x07
    $W[maxx_x07_1196] : $int<32>
    // 			$phi minx_x06 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_10 ) $on bb_1_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 469
    // ($cast ($uint<32>) iNsTr_10 )
    $intermediate $W[type_cast_1209_wire] : $int<32>
    // minx_x06
    $W[minx_x06_1203] : $int<32>
    // 			$phi maxtx_x05 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_7 ) $on bb_1_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 470
    // ($cast ($uint<32>) iNsTr_7 )
    $intermediate $W[type_cast_1216_wire] : $int<32>
    // maxtx_x05
    $W[maxtx_x05_1210] : $int<32>
    // 			$phi mintx_x04 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_9 ) $on bb_1_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 471
    // ($cast ($uint<32>) iNsTr_9 )
    $intermediate $W[type_cast_1223_wire] : $int<32>
    // mintx_x04
    $W[mintx_x04_1217] : $int<32>
    // 			$phi iNsTr_2 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_12 ) $on bb_1_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 472
    // ($cast ($uint<32>) iNsTr_12 )
    $intermediate $W[type_cast_1230_wire] : $int<32>
    // iNsTr_2
    $W[iNsTr_2_1224] : $int<32>
    // 			$phi ptrx_x02 := 			  ($cast ($uint<32>) iNsTr_0 ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_14 ) $on bb_1_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 473
    // ($cast ($uint<32>) iNsTr_0 )
    $intermediate $W[type_cast_1234_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_14 )
    $intermediate $W[type_cast_1236_wire] : $int<32>
    // ptrx_x02
    $W[ptrx_x02_1231] : $int<32>
    // 		iNsTr_3 := @(DDbuff[ptrx_x02])
    //  file prog.linked.opt.aa, line 475
    // @(DDbuff[ptrx_x02])
    $intermediate $W[R_ptrx_x02_1239_resized] : $int<7>
    $intermediate $W[R_ptrx_x02_1239_scaled] : $int<7>
    $intermediate $W[array_obj_ref_1240_final_offset] : $int<7>
    $intermediate $W[array_obj_ref_1240_root_address] : $int<7>
    // iNsTr_3
    $W[iNsTr_3_1242] : $int<32>
    // 		iNsTr_4 := ->(iNsTr_3)
    //  file prog.linked.opt.aa, line 476
    // ->(iNsTr_3)
    $intermediate $W[ptr_deref_1245_resized_base_address] : $int<7>
    $intermediate $W[ptr_deref_1245_root_address] : $int<7>
    $W[ptr_deref_1245_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_1245_data_0] : $int<32>
    // iNsTr_4
    $W[iNsTr_4_1246] : $int<32>
    // 		iNsTr_5 := (($bitcast ($int<32>) iNsTr_4 ) > ($bitcast ($int<32>) maxx_x07 ))
    //  file prog.linked.opt.aa, line 477
    // ($bitcast ($int<32>) iNsTr_4 )
    $intermediate $W[type_cast_1249_wire] : $int<32>
    // ($bitcast ($int<32>) maxx_x07 )
    $intermediate $W[type_cast_1251_wire] : $int<32>
    // iNsTr_5
    $W[iNsTr_5_1253] : $int<1>
    // 		iNsTr_6 := (($bitcast ($int<32>) iNsTr_4 ) < ($bitcast ($int<32>) minx_x06 ))
    //  file prog.linked.opt.aa, line 478
    // ($bitcast ($int<32>) iNsTr_4 )
    $intermediate $W[type_cast_1256_wire] : $int<32>
    // ($bitcast ($int<32>) minx_x06 )
    $intermediate $W[type_cast_1258_wire] : $int<32>
    // iNsTr_6
    $W[iNsTr_6_1260] : $int<1>
    // 		iNsTr_7 := ( $mux iNsTr_5 iNsTr_2  maxtx_x05 ) 
    //  file prog.linked.opt.aa, line 479
    // iNsTr_7
    $W[iNsTr_7_1266] : $int<32>
    // 		iNsTr_8 := ( $mux iNsTr_5 iNsTr_4  maxx_x07 ) 
    //  file prog.linked.opt.aa, line 480
    // iNsTr_8
    $W[iNsTr_8_1272] : $int<32>
    // 		iNsTr_9 := ( $mux iNsTr_6 iNsTr_2  mintx_x04 ) 
    //  file prog.linked.opt.aa, line 481
    // iNsTr_9
    $W[iNsTr_9_1278] : $int<32>
    // 		iNsTr_10 := ( $mux iNsTr_6 iNsTr_4  minx_x06 ) 
    //  file prog.linked.opt.aa, line 482
    // iNsTr_10
    $W[iNsTr_10_1284] : $int<32>
    // 		iNsTr_11 := (ptrx_x02 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 483
    // iNsTr_11
    $W[iNsTr_11_1290] : $int<32>
    // 		iNsTr_12 := (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 484
    // iNsTr_12
    $W[iNsTr_12_1296] : $int<32>
    // 		iNsTr_13 := (iNsTr_11 == ($bitcast ($uint<32>) _b00000000000000000000000001011100  ))
    //  file prog.linked.opt.aa, line 485
    // iNsTr_13
    $W[iNsTr_13_1302] : $int<1>
    // 		iNsTr_14 := ( $mux iNsTr_13 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_11 ) 
    //  file prog.linked.opt.aa, line 486
    // iNsTr_14
    $W[iNsTr_14_1309] : $int<32>
    // 		exitcond4 := (iNsTr_12 == ($bitcast ($uint<32>) _b00000000000000000000000000101100  ))
    //  file prog.linked.opt.aa, line 487
    // exitcond4
    $W[exitcond4_1315] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 488
    // merge-statement  
    //  file prog.linked.opt.aa, line 493
    // 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_10 ) $on bb_1_xx_x_crit_edge // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 494
    // ($cast ($uint<32>) iNsTr_10 )
    $intermediate $W[type_cast_1326_wire] : $int<32>
    // xx_xlcssa3
    $W[xx_xlcssa3_1323] : $int<32>
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_9 ) $on bb_1_xx_x_crit_edge // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 495
    // ($cast ($uint<32>) iNsTr_9 )
    $intermediate $W[type_cast_1330_wire] : $int<32>
    // xx_xlcssa2
    $W[xx_xlcssa2_1327] : $int<32>
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_8 ) $on bb_1_xx_x_crit_edge // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 496
    // ($cast ($uint<32>) iNsTr_8 )
    $intermediate $W[type_cast_1334_wire] : $int<32>
    // xx_xlcssa1
    $W[xx_xlcssa1_1331] : $int<32>
    // 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_7 ) $on bb_1_xx_x_crit_edge // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 497
    // ($cast ($uint<32>) iNsTr_7 )
    $intermediate $W[type_cast_1338_wire] : $int<32>
    // xx_xlcssa
    $W[xx_xlcssa_1335] : $int<32>
    // 		maxDer := xx_xlcssa1
    //  file prog.linked.opt.aa, line 499
    // maxDer
    $constant $W[STORE_maxDer_1340_word_address_0] : $pointer<memory_space_21> := _b0
    $W[STORE_maxDer_1340_data_0] : $int<32>
    // 		iNsTr_17 := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - xx_xlcssa3)
    //  file prog.linked.opt.aa, line 500
    // iNsTr_17
    $W[iNsTr_17_1348] : $int<32>
    // 		iNsTr_18 := ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_17 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
    //  file prog.linked.opt.aa, line 501
    // ($bitcast ($int<32>) iNsTr_17 )
    $intermediate $W[type_cast_1351_wire] : $int<32>
    // (($bitcast ($int<32>) iNsTr_17 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) ))
    $intermediate $W[ASHR_i32_i32_1355_wire] : $int<32>
    // iNsTr_18
    $W[iNsTr_18_1357] : $int<32>
    // 		iNsTr_19 := (($bitcast ($int<32>) xx_xlcssa1 ) > ($bitcast ($int<32>) iNsTr_18 ))
    //  file prog.linked.opt.aa, line 502
    // ($bitcast ($int<32>) xx_xlcssa1 )
    $intermediate $W[type_cast_1360_wire] : $int<32>
    // ($bitcast ($int<32>) iNsTr_18 )
    $intermediate $W[type_cast_1362_wire] : $int<32>
    // iNsTr_19
    $W[iNsTr_19_1364] : $int<1>
    // 		iNsTr_20 := ($bitcast ($uint<32>) (($bitcast ($int<32>) xx_xlcssa1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
    //  file prog.linked.opt.aa, line 503
    // ($bitcast ($int<32>) xx_xlcssa1 )
    $intermediate $W[type_cast_1367_wire] : $int<32>
    // (($bitcast ($int<32>) xx_xlcssa1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) ))
    $intermediate $W[ASHR_i32_i32_1371_wire] : $int<32>
    // iNsTr_20
    $W[iNsTr_20_1373] : $int<32>
    // 		iNsTr_21 := (($bitcast ($int<32>) iNsTr_20 ) < ($bitcast ($int<32>) iNsTr_17 ))
    //  file prog.linked.opt.aa, line 504
    // ($bitcast ($int<32>) iNsTr_20 )
    $intermediate $W[type_cast_1376_wire] : $int<32>
    // ($bitcast ($int<32>) iNsTr_17 )
    $intermediate $W[type_cast_1378_wire] : $int<32>
    // iNsTr_21
    $W[iNsTr_21_1380] : $int<1>
    // 		orx_xcond := (iNsTr_19 & iNsTr_21)
    //  file prog.linked.opt.aa, line 505
    // orx_xcond
    $W[orx_xcond_1385] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 506
    // 		iNsTr_23 := (xx_xlcssa - xx_xlcssa2)
    //  file prog.linked.opt.aa, line 513
    // iNsTr_23
    $W[iNsTr_23_1397] : $int<32>
    // 		ispos := (($bitcast ($int<32>) iNsTr_23 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ))
    //  file prog.linked.opt.aa, line 514
    // ($bitcast ($int<32>) iNsTr_23 )
    $intermediate $W[type_cast_1400_wire] : $int<32>
    // ispos
    $W[ispos_1405] : $int<1>
    // 		neg := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_23)
    //  file prog.linked.opt.aa, line 515
    // neg
    $W[neg_1411] : $int<32>
    // 		iNsTr_24 := ( $mux ispos iNsTr_23  neg ) 
    //  file prog.linked.opt.aa, line 516
    // iNsTr_24
    $W[iNsTr_24_1417] : $int<32>
    // 		phitmp := (($bitcast ($int<32>) iNsTr_24 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000011101  ) ))
    //  file prog.linked.opt.aa, line 517
    // ($bitcast ($int<32>) iNsTr_24 )
    $intermediate $W[type_cast_1420_wire] : $int<32>
    // phitmp
    $W[phitmp_1425] : $int<1>
    // merge-statement  
    //  file prog.linked.opt.aa, line 519
    // 			$phi iNsTr_26 := 			  ($cast ($uint<1>) ($bitcast ($uint<1>) _b1  ) ) $on xx_x_crit_edge_bb_4			  ($cast ($uint<1>) phitmp ) $on bb_3_bb_4 // type of target is $uint<1>
    //  file prog.linked.opt.aa, line 520
    // ($cast ($uint<1>) phitmp )
    $intermediate $W[type_cast_1434_wire] : $int<1>
    // iNsTr_26
    $W[iNsTr_26_1428] : $int<1>
    // 		ret_val__ := ($cast ($uint<8>) iNsTr_26 )
    //  file prog.linked.opt.aa, line 522
    // ret_val__
    // datapath-instances for block %blsCheck%body
    //  file prog.linked.opt.aa, line 463
    // 		iNsTr_0 := DDbuff_ptr
    //  file prog.linked.opt.aa, line 465
    // DDbuff_ptr
    $load [LOAD_DDbuff_ptr_1192_load_0] $from memory_space_3 (LOAD_DDbuff_ptr_1192_word_address_0) (LOAD_DDbuff_ptr_1192_data_0) 
    $delay LOAD_DDbuff_ptr_1192_load_0 1
    &/ [LOAD_DDbuff_ptr_1192_gather_scatter] (LOAD_DDbuff_ptr_1192_data_0) (iNsTr_0_1193) 
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 467
    // 			$phi maxx_x07 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_8 ) $on bb_1_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 468
    // ($cast ($uint<32>) iNsTr_8 )
    # := [type_cast_1202_inst] (iNsTr_8_1272) (type_cast_1202_wire) 
    $delay type_cast_1202_inst 1
    $phi [phi_stmt_1196] (type_cast_1200_wire_constant type_cast_1202_wire) ( maxx_x07_1196 )
    // 			$phi minx_x06 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_10 ) $on bb_1_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 469
    // ($cast ($uint<32>) iNsTr_10 )
    # := [type_cast_1209_inst] (iNsTr_10_1284) (type_cast_1209_wire) 
    $delay type_cast_1209_inst 1
    $phi [phi_stmt_1203] (type_cast_1207_wire_constant type_cast_1209_wire) ( minx_x06_1203 )
    // 			$phi maxtx_x05 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_7 ) $on bb_1_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 470
    // ($cast ($uint<32>) iNsTr_7 )
    # := [type_cast_1216_inst] (iNsTr_7_1266) (type_cast_1216_wire) 
    $delay type_cast_1216_inst 1
    $phi [phi_stmt_1210] (type_cast_1214_wire_constant type_cast_1216_wire) ( maxtx_x05_1210 )
    // 			$phi mintx_x04 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_9 ) $on bb_1_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 471
    // ($cast ($uint<32>) iNsTr_9 )
    # := [type_cast_1223_inst] (iNsTr_9_1278) (type_cast_1223_wire) 
    $delay type_cast_1223_inst 1
    $phi [phi_stmt_1217] (type_cast_1221_wire_constant type_cast_1223_wire) ( mintx_x04_1217 )
    // 			$phi iNsTr_2 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_12 ) $on bb_1_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 472
    // ($cast ($uint<32>) iNsTr_12 )
    # := [type_cast_1230_inst] (iNsTr_12_1296) (type_cast_1230_wire) 
    $delay type_cast_1230_inst 1
    $phi [phi_stmt_1224] (type_cast_1228_wire_constant type_cast_1230_wire) ( iNsTr_2_1224 )
    // 			$phi ptrx_x02 := 			  ($cast ($uint<32>) iNsTr_0 ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_14 ) $on bb_1_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 473
    // ($cast ($uint<32>) iNsTr_0 )
    # := [type_cast_1234_inst] (iNsTr_0_1193) (type_cast_1234_wire) 
    $delay type_cast_1234_inst 1
    // ($cast ($uint<32>) iNsTr_14 )
    # := [type_cast_1236_inst] (iNsTr_14_1309) (type_cast_1236_wire) 
    $delay type_cast_1236_inst 1
    $phi [phi_stmt_1231] (type_cast_1234_wire type_cast_1236_wire) ( ptrx_x02_1231 )
    // 		iNsTr_3 := @(DDbuff[ptrx_x02])
    //  file prog.linked.opt.aa, line 475
    &/ [array_obj_ref_1240_index_0_resize] (ptrx_x02_1231) (R_ptrx_x02_1239_resized) 
    &/ [array_obj_ref_1240_index_0_rename] (R_ptrx_x02_1239_resized) (R_ptrx_x02_1239_scaled) 
    &/ [array_obj_ref_1240_index_offset] (R_ptrx_x02_1239_scaled) (array_obj_ref_1240_final_offset) 
    &/ [array_obj_ref_1240_root_address_inst] (array_obj_ref_1240_final_offset) (array_obj_ref_1240_root_address) 
    # := [addr_of_1241_final_reg] (array_obj_ref_1240_root_address) (iNsTr_3_1242) 
    // 		iNsTr_4 := ->(iNsTr_3)
    //  file prog.linked.opt.aa, line 476
    // ->(iNsTr_3)
    &/ [ptr_deref_1245_base_resize] (iNsTr_3_1242) (ptr_deref_1245_resized_base_address) 
    &/ [ptr_deref_1245_root_address_inst] (ptr_deref_1245_resized_base_address) (ptr_deref_1245_root_address) 
    &/ [ptr_deref_1245_addr_0] (ptr_deref_1245_root_address) (ptr_deref_1245_word_address_0) 
    $load [ptr_deref_1245_load_0] $from memory_space_2 (ptr_deref_1245_word_address_0) (ptr_deref_1245_data_0) 
    $delay ptr_deref_1245_load_0 2
    &/ [ptr_deref_1245_gather_scatter] (ptr_deref_1245_data_0) (iNsTr_4_1246) 
    // 		iNsTr_5 := (($bitcast ($int<32>) iNsTr_4 ) > ($bitcast ($int<32>) maxx_x07 ))
    //  file prog.linked.opt.aa, line 477
    // ($bitcast ($int<32>) iNsTr_4 )
    $S:=$U [type_cast_1249_inst] (iNsTr_4_1246) (type_cast_1249_wire)   $flowthrough
    $delay type_cast_1249_inst 0
    // ($bitcast ($int<32>) maxx_x07 )
    $S:=$U [type_cast_1251_inst] (maxx_x07_1196) (type_cast_1251_wire)   $flowthrough
    $delay type_cast_1251_inst 0
    // (($bitcast ($int<32>) iNsTr_4 ) > ($bitcast ($int<32>) maxx_x07 ))
    $S>$S[SGT_i32_u1_1252_inst] (type_cast_1249_wire type_cast_1251_wire) (iNsTr_5_1253) 
    $delay SGT_i32_u1_1252_inst 1
    // 		iNsTr_6 := (($bitcast ($int<32>) iNsTr_4 ) < ($bitcast ($int<32>) minx_x06 ))
    //  file prog.linked.opt.aa, line 478
    // ($bitcast ($int<32>) iNsTr_4 )
    $S:=$U [type_cast_1256_inst] (iNsTr_4_1246) (type_cast_1256_wire)   $flowthrough
    $delay type_cast_1256_inst 0
    // ($bitcast ($int<32>) minx_x06 )
    $S:=$U [type_cast_1258_inst] (minx_x06_1203) (type_cast_1258_wire)   $flowthrough
    $delay type_cast_1258_inst 0
    // (($bitcast ($int<32>) iNsTr_4 ) < ($bitcast ($int<32>) minx_x06 ))
    $S<$S[SLT_i32_u1_1259_inst] (type_cast_1256_wire type_cast_1258_wire) (iNsTr_6_1260) 
    $delay SLT_i32_u1_1259_inst 1
    // 		iNsTr_7 := ( $mux iNsTr_5 iNsTr_2  maxtx_x05 ) 
    //  file prog.linked.opt.aa, line 479
    // ( $mux iNsTr_5 iNsTr_2  maxtx_x05 ) 
    ? [MUX_1265_inst] (iNsTr_5_1253 iNsTr_2_1224 maxtx_x05_1210) (iNsTr_7_1266) 
    // 		iNsTr_8 := ( $mux iNsTr_5 iNsTr_4  maxx_x07 ) 
    //  file prog.linked.opt.aa, line 480
    // ( $mux iNsTr_5 iNsTr_4  maxx_x07 ) 
    ? [MUX_1271_inst] (iNsTr_5_1253 iNsTr_4_1246 maxx_x07_1196) (iNsTr_8_1272) 
    // 		iNsTr_9 := ( $mux iNsTr_6 iNsTr_2  mintx_x04 ) 
    //  file prog.linked.opt.aa, line 481
    // ( $mux iNsTr_6 iNsTr_2  mintx_x04 ) 
    ? [MUX_1277_inst] (iNsTr_6_1260 iNsTr_2_1224 mintx_x04_1217) (iNsTr_9_1278) 
    // 		iNsTr_10 := ( $mux iNsTr_6 iNsTr_4  minx_x06 ) 
    //  file prog.linked.opt.aa, line 482
    // ( $mux iNsTr_6 iNsTr_4  minx_x06 ) 
    ? [MUX_1283_inst] (iNsTr_6_1260 iNsTr_4_1246 minx_x06_1203) (iNsTr_10_1284) 
    // 		iNsTr_11 := (ptrx_x02 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 483
    // (ptrx_x02 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_1289_inst] (ptrx_x02_1231 type_cast_1288_wire_constant) (iNsTr_11_1290) 
    $delay ADD_u32_u32_1289_inst 1
    // 		iNsTr_12 := (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 484
    // (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_1295_inst] (iNsTr_2_1224 type_cast_1294_wire_constant) (iNsTr_12_1296) 
    $delay ADD_u32_u32_1295_inst 1
    // 		iNsTr_13 := (iNsTr_11 == ($bitcast ($uint<32>) _b00000000000000000000000001011100  ))
    //  file prog.linked.opt.aa, line 485
    // (iNsTr_11 == ($bitcast ($uint<32>) _b00000000000000000000000001011100  ))
    ==[EQ_u32_u1_1301_inst] (iNsTr_11_1290 type_cast_1300_wire_constant) (iNsTr_13_1302) 
    $delay EQ_u32_u1_1301_inst 1
    // 		iNsTr_14 := ( $mux iNsTr_13 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_11 ) 
    //  file prog.linked.opt.aa, line 486
    // ( $mux iNsTr_13 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_11 ) 
    ? [MUX_1308_inst] (iNsTr_13_1302 type_cast_1306_wire_constant iNsTr_11_1290) (iNsTr_14_1309) 
    // 		exitcond4 := (iNsTr_12 == ($bitcast ($uint<32>) _b00000000000000000000000000101100  ))
    //  file prog.linked.opt.aa, line 487
    // (iNsTr_12 == ($bitcast ($uint<32>) _b00000000000000000000000000101100  ))
    ==[EQ_u32_u1_1314_inst] (iNsTr_12_1296 type_cast_1313_wire_constant) (exitcond4_1315) 
    $delay EQ_u32_u1_1314_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 488
    ==0? [if_stmt_1316_branch] (exitcond4_1315)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 493
    // 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_10 ) $on bb_1_xx_x_crit_edge // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 494
    // ($cast ($uint<32>) iNsTr_10 )
    # := [type_cast_1326_inst] (iNsTr_10_1284) (type_cast_1326_wire) 
    $delay type_cast_1326_inst 1
    $phi [phi_stmt_1323] (type_cast_1326_wire) ( xx_xlcssa3_1323 )
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_9 ) $on bb_1_xx_x_crit_edge // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 495
    // ($cast ($uint<32>) iNsTr_9 )
    # := [type_cast_1330_inst] (iNsTr_9_1278) (type_cast_1330_wire) 
    $delay type_cast_1330_inst 1
    $phi [phi_stmt_1327] (type_cast_1330_wire) ( xx_xlcssa2_1327 )
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_8 ) $on bb_1_xx_x_crit_edge // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 496
    // ($cast ($uint<32>) iNsTr_8 )
    # := [type_cast_1334_inst] (iNsTr_8_1272) (type_cast_1334_wire) 
    $delay type_cast_1334_inst 1
    $phi [phi_stmt_1331] (type_cast_1334_wire) ( xx_xlcssa1_1331 )
    // 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_7 ) $on bb_1_xx_x_crit_edge // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 497
    // ($cast ($uint<32>) iNsTr_7 )
    # := [type_cast_1338_inst] (iNsTr_7_1266) (type_cast_1338_wire) 
    $delay type_cast_1338_inst 1
    $phi [phi_stmt_1335] (type_cast_1338_wire) ( xx_xlcssa_1335 )
    // 		maxDer := xx_xlcssa1
    //  file prog.linked.opt.aa, line 499
    // maxDer
    $store [STORE_maxDer_1340_store_0] $to memory_space_21 (STORE_maxDer_1340_word_address_0 STORE_maxDer_1340_data_0) 
    $delay STORE_maxDer_1340_store_0 1
    &/ [STORE_maxDer_1340_gather_scatter] (xx_xlcssa1_1331) (STORE_maxDer_1340_data_0) 
    // 		iNsTr_17 := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - xx_xlcssa3)
    //  file prog.linked.opt.aa, line 500
    // (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - xx_xlcssa3)
    -[SUB_u32_u32_1347_inst] (type_cast_1345_wire_constant xx_xlcssa3_1323) (iNsTr_17_1348) 
    $delay SUB_u32_u32_1347_inst 1
    // 		iNsTr_18 := ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_17 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
    //  file prog.linked.opt.aa, line 501
    // ($bitcast ($int<32>) iNsTr_17 )
    $S:=$U [type_cast_1351_inst] (iNsTr_17_1348) (type_cast_1351_wire)   $flowthrough
    $delay type_cast_1351_inst 0
    // (($bitcast ($int<32>) iNsTr_17 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) ))
    $S>>[ASHR_i32_i32_1355_inst] (type_cast_1351_wire type_cast_1354_wire_constant) (ASHR_i32_i32_1355_wire)  $flowthrough
    $delay ASHR_i32_i32_1355_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_17 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
    # := [type_cast_1356_inst] (ASHR_i32_i32_1355_wire) (iNsTr_18_1357) 
    $delay type_cast_1356_inst 1
    // 		iNsTr_19 := (($bitcast ($int<32>) xx_xlcssa1 ) > ($bitcast ($int<32>) iNsTr_18 ))
    //  file prog.linked.opt.aa, line 502
    // ($bitcast ($int<32>) xx_xlcssa1 )
    $S:=$U [type_cast_1360_inst] (xx_xlcssa1_1331) (type_cast_1360_wire)   $flowthrough
    $delay type_cast_1360_inst 0
    // ($bitcast ($int<32>) iNsTr_18 )
    $S:=$U [type_cast_1362_inst] (iNsTr_18_1357) (type_cast_1362_wire)   $flowthrough
    $delay type_cast_1362_inst 0
    // (($bitcast ($int<32>) xx_xlcssa1 ) > ($bitcast ($int<32>) iNsTr_18 ))
    $S>$S[SGT_i32_u1_1363_inst] (type_cast_1360_wire type_cast_1362_wire) (iNsTr_19_1364) 
    $delay SGT_i32_u1_1363_inst 1
    // 		iNsTr_20 := ($bitcast ($uint<32>) (($bitcast ($int<32>) xx_xlcssa1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
    //  file prog.linked.opt.aa, line 503
    // ($bitcast ($int<32>) xx_xlcssa1 )
    $S:=$U [type_cast_1367_inst] (xx_xlcssa1_1331) (type_cast_1367_wire)   $flowthrough
    $delay type_cast_1367_inst 0
    // (($bitcast ($int<32>) xx_xlcssa1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) ))
    $S>>[ASHR_i32_i32_1371_inst] (type_cast_1367_wire type_cast_1370_wire_constant) (ASHR_i32_i32_1371_wire)  $flowthrough
    $delay ASHR_i32_i32_1371_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) xx_xlcssa1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
    # := [type_cast_1372_inst] (ASHR_i32_i32_1371_wire) (iNsTr_20_1373) 
    $delay type_cast_1372_inst 1
    // 		iNsTr_21 := (($bitcast ($int<32>) iNsTr_20 ) < ($bitcast ($int<32>) iNsTr_17 ))
    //  file prog.linked.opt.aa, line 504
    // ($bitcast ($int<32>) iNsTr_20 )
    $S:=$U [type_cast_1376_inst] (iNsTr_20_1373) (type_cast_1376_wire)   $flowthrough
    $delay type_cast_1376_inst 0
    // ($bitcast ($int<32>) iNsTr_17 )
    $S:=$U [type_cast_1378_inst] (iNsTr_17_1348) (type_cast_1378_wire)   $flowthrough
    $delay type_cast_1378_inst 0
    // (($bitcast ($int<32>) iNsTr_20 ) < ($bitcast ($int<32>) iNsTr_17 ))
    $S<$S[SLT_i32_u1_1379_inst] (type_cast_1376_wire type_cast_1378_wire) (iNsTr_21_1380) 
    $delay SLT_i32_u1_1379_inst 1
    // 		orx_xcond := (iNsTr_19 & iNsTr_21)
    //  file prog.linked.opt.aa, line 505
    // (iNsTr_19 & iNsTr_21)
    &[AND_u1_u1_1384_inst] (iNsTr_19_1364 iNsTr_21_1380) (orx_xcond_1385) 
    $delay AND_u1_u1_1384_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 506
    ==0? [if_stmt_1386_branch] (orx_xcond_1385)
    // 		iNsTr_23 := (xx_xlcssa - xx_xlcssa2)
    //  file prog.linked.opt.aa, line 513
    // (xx_xlcssa - xx_xlcssa2)
    -[SUB_u32_u32_1396_inst] (xx_xlcssa_1335 xx_xlcssa2_1327) (iNsTr_23_1397) 
    $delay SUB_u32_u32_1396_inst 1
    // 		ispos := (($bitcast ($int<32>) iNsTr_23 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ))
    //  file prog.linked.opt.aa, line 514
    // ($bitcast ($int<32>) iNsTr_23 )
    $S:=$U [type_cast_1400_inst] (iNsTr_23_1397) (type_cast_1400_wire)   $flowthrough
    $delay type_cast_1400_inst 0
    // (($bitcast ($int<32>) iNsTr_23 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ))
    $S>$S[SGT_i32_u1_1404_inst] (type_cast_1400_wire type_cast_1403_wire_constant) (ispos_1405) 
    $delay SGT_i32_u1_1404_inst 1
    // 		neg := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_23)
    //  file prog.linked.opt.aa, line 515
    // (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_23)
    -[SUB_u32_u32_1410_inst] (type_cast_1408_wire_constant iNsTr_23_1397) (neg_1411) 
    $delay SUB_u32_u32_1410_inst 1
    // 		iNsTr_24 := ( $mux ispos iNsTr_23  neg ) 
    //  file prog.linked.opt.aa, line 516
    // ( $mux ispos iNsTr_23  neg ) 
    ? [MUX_1416_inst] (ispos_1405 iNsTr_23_1397 neg_1411) (iNsTr_24_1417) 
    // 		phitmp := (($bitcast ($int<32>) iNsTr_24 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000011101  ) ))
    //  file prog.linked.opt.aa, line 517
    // ($bitcast ($int<32>) iNsTr_24 )
    $S:=$U [type_cast_1420_inst] (iNsTr_24_1417) (type_cast_1420_wire)   $flowthrough
    $delay type_cast_1420_inst 0
    // (($bitcast ($int<32>) iNsTr_24 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000011101  ) ))
    $S>$S[SGT_i32_u1_1424_inst] (type_cast_1420_wire type_cast_1423_wire_constant) (phitmp_1425) 
    $delay SGT_i32_u1_1424_inst 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 519
    // 			$phi iNsTr_26 := 			  ($cast ($uint<1>) ($bitcast ($uint<1>) _b1  ) ) $on xx_x_crit_edge_bb_4			  ($cast ($uint<1>) phitmp ) $on bb_3_bb_4 // type of target is $uint<1>
    //  file prog.linked.opt.aa, line 520
    // ($cast ($uint<1>) phitmp )
    # := [type_cast_1434_inst] (phitmp_1425) (type_cast_1434_wire) 
    $delay type_cast_1434_inst 1
    $phi [phi_stmt_1428] (type_cast_1432_wire_constant type_cast_1434_wire) ( iNsTr_26_1428 )
    // 		ret_val__ := ($cast ($uint<8>) iNsTr_26 )
    //  file prog.linked.opt.aa, line 522
    // ($cast ($uint<8>) iNsTr_26 )
    # := [type_cast_1438_inst] (iNsTr_26_1428) (ret_val__) 
    $delay type_cast_1438_inst 1
  }
  // end data-path
  // 		iNsTr_0 := DDbuff_ptr
  //  file prog.linked.opt.aa, line 465
  // DDbuff_ptr
  LOAD_DDbuff_ptr_1192_gather_scatter <=> (branch_block_stmt_1190/assign_stmt_1193/LOAD_DDbuff_ptr_1192_Update/LOAD_DDbuff_ptr_1192_Merge/merge_req) (branch_block_stmt_1190/assign_stmt_1193/LOAD_DDbuff_ptr_1192_Update/LOAD_DDbuff_ptr_1192_Merge/merge_ack)
  LOAD_DDbuff_ptr_1192_load_0 <=> (branch_block_stmt_1190/assign_stmt_1193/LOAD_DDbuff_ptr_1192_Sample/word_access_start/word_0/rr branch_block_stmt_1190/assign_stmt_1193/LOAD_DDbuff_ptr_1192_Update/word_access_complete/word_0/cr) (branch_block_stmt_1190/assign_stmt_1193/LOAD_DDbuff_ptr_1192_Sample/word_access_start/word_0/ra branch_block_stmt_1190/assign_stmt_1193/LOAD_DDbuff_ptr_1192_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 467
  // ($cast ($uint<32>) iNsTr_8 )
  type_cast_1202_inst <=> (branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1196/phi_stmt_1196_sources/type_cast_1202/SplitProtocol/Sample/rr branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1196/phi_stmt_1196_sources/type_cast_1202/SplitProtocol/Update/cr) (branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1196/phi_stmt_1196_sources/type_cast_1202/SplitProtocol/Sample/ra branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1196/phi_stmt_1196_sources/type_cast_1202/SplitProtocol/Update/ca)
  phi_stmt_1196 <=> (branch_block_stmt_1190/bbx_xnph_bb_1_PhiReq/phi_stmt_1196/phi_stmt_1196_req branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1196/phi_stmt_1196_req) (branch_block_stmt_1190/merge_stmt_1195_PhiAck/phi_stmt_1196_ack)
  // ($cast ($uint<32>) iNsTr_10 )
  type_cast_1209_inst <=> (branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1203/phi_stmt_1203_sources/type_cast_1209/SplitProtocol/Sample/rr branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1203/phi_stmt_1203_sources/type_cast_1209/SplitProtocol/Update/cr) (branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1203/phi_stmt_1203_sources/type_cast_1209/SplitProtocol/Sample/ra branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1203/phi_stmt_1203_sources/type_cast_1209/SplitProtocol/Update/ca)
  phi_stmt_1203 <=> (branch_block_stmt_1190/bbx_xnph_bb_1_PhiReq/phi_stmt_1203/phi_stmt_1203_req branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1203/phi_stmt_1203_req) (branch_block_stmt_1190/merge_stmt_1195_PhiAck/phi_stmt_1203_ack)
  // ($cast ($uint<32>) iNsTr_7 )
  type_cast_1216_inst <=> (branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1210/phi_stmt_1210_sources/type_cast_1216/SplitProtocol/Sample/rr branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1210/phi_stmt_1210_sources/type_cast_1216/SplitProtocol/Update/cr) (branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1210/phi_stmt_1210_sources/type_cast_1216/SplitProtocol/Sample/ra branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1210/phi_stmt_1210_sources/type_cast_1216/SplitProtocol/Update/ca)
  phi_stmt_1210 <=> (branch_block_stmt_1190/bbx_xnph_bb_1_PhiReq/phi_stmt_1210/phi_stmt_1210_req branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1210/phi_stmt_1210_req) (branch_block_stmt_1190/merge_stmt_1195_PhiAck/phi_stmt_1210_ack)
  // ($cast ($uint<32>) iNsTr_9 )
  type_cast_1223_inst <=> (branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1217/phi_stmt_1217_sources/type_cast_1223/SplitProtocol/Sample/rr branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1217/phi_stmt_1217_sources/type_cast_1223/SplitProtocol/Update/cr) (branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1217/phi_stmt_1217_sources/type_cast_1223/SplitProtocol/Sample/ra branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1217/phi_stmt_1217_sources/type_cast_1223/SplitProtocol/Update/ca)
  phi_stmt_1217 <=> (branch_block_stmt_1190/bbx_xnph_bb_1_PhiReq/phi_stmt_1217/phi_stmt_1217_req branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1217/phi_stmt_1217_req) (branch_block_stmt_1190/merge_stmt_1195_PhiAck/phi_stmt_1217_ack)
  // ($cast ($uint<32>) iNsTr_12 )
  type_cast_1230_inst <=> (branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1224/phi_stmt_1224_sources/type_cast_1230/SplitProtocol/Sample/rr branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1224/phi_stmt_1224_sources/type_cast_1230/SplitProtocol/Update/cr) (branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1224/phi_stmt_1224_sources/type_cast_1230/SplitProtocol/Sample/ra branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1224/phi_stmt_1224_sources/type_cast_1230/SplitProtocol/Update/ca)
  phi_stmt_1224 <=> (branch_block_stmt_1190/bbx_xnph_bb_1_PhiReq/phi_stmt_1224/phi_stmt_1224_req branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1224/phi_stmt_1224_req) (branch_block_stmt_1190/merge_stmt_1195_PhiAck/phi_stmt_1224_ack)
  // ($cast ($uint<32>) iNsTr_0 )
  type_cast_1234_inst <=> (branch_block_stmt_1190/bbx_xnph_bb_1_PhiReq/phi_stmt_1231/phi_stmt_1231_sources/type_cast_1234/SplitProtocol/Sample/rr branch_block_stmt_1190/bbx_xnph_bb_1_PhiReq/phi_stmt_1231/phi_stmt_1231_sources/type_cast_1234/SplitProtocol/Update/cr) (branch_block_stmt_1190/bbx_xnph_bb_1_PhiReq/phi_stmt_1231/phi_stmt_1231_sources/type_cast_1234/SplitProtocol/Sample/ra branch_block_stmt_1190/bbx_xnph_bb_1_PhiReq/phi_stmt_1231/phi_stmt_1231_sources/type_cast_1234/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_14 )
  type_cast_1236_inst <=> (branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1231/phi_stmt_1231_sources/type_cast_1236/SplitProtocol/Sample/rr branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1231/phi_stmt_1231_sources/type_cast_1236/SplitProtocol/Update/cr) (branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1231/phi_stmt_1231_sources/type_cast_1236/SplitProtocol/Sample/ra branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1231/phi_stmt_1231_sources/type_cast_1236/SplitProtocol/Update/ca)
  phi_stmt_1231 <=> (branch_block_stmt_1190/bbx_xnph_bb_1_PhiReq/phi_stmt_1231/phi_stmt_1231_req branch_block_stmt_1190/bb_1_bb_1_PhiReq/phi_stmt_1231/phi_stmt_1231_req) (branch_block_stmt_1190/merge_stmt_1195_PhiAck/phi_stmt_1231_ack)
  // 		iNsTr_3 := @(DDbuff[ptrx_x02])
  //  file prog.linked.opt.aa, line 475
  array_obj_ref_1240_index_0_resize <=> (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/array_obj_ref_1240_index_resize_0/index_resize_req) (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/array_obj_ref_1240_index_resize_0/index_resize_ack)
  array_obj_ref_1240_index_0_rename <=> (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/array_obj_ref_1240_index_scale_0/scale_rename_req) (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/array_obj_ref_1240_index_scale_0/scale_rename_ack)
  array_obj_ref_1240_index_offset <=> (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/array_obj_ref_1240_final_index_sum_regn/req) (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/array_obj_ref_1240_final_index_sum_regn/ack)
  array_obj_ref_1240_root_address_inst <=> (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/array_obj_ref_1240_base_plus_offset/sum_rename_req) (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/array_obj_ref_1240_base_plus_offset/sum_rename_ack)
  addr_of_1241_final_reg <=> (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/addr_of_1241_request/req branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/addr_of_1241_complete/req) (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/addr_of_1241_request/ack branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/addr_of_1241_complete/ack)
  // 		iNsTr_4 := ->(iNsTr_3)
  //  file prog.linked.opt.aa, line 476
  ptr_deref_1245_base_resize <=> (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/ptr_deref_1245_base_addr_resize/base_resize_req) (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/ptr_deref_1245_base_addr_resize/base_resize_ack)
  ptr_deref_1245_root_address_inst <=> (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/ptr_deref_1245_base_plus_offset/sum_rename_req) (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/ptr_deref_1245_base_plus_offset/sum_rename_ack)
  ptr_deref_1245_addr_0 <=> (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/ptr_deref_1245_word_addrgen/root_register_req) (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/ptr_deref_1245_word_addrgen/root_register_ack)
  ptr_deref_1245_gather_scatter <=> (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/ptr_deref_1245_Update/ptr_deref_1245_Merge/merge_req) (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/ptr_deref_1245_Update/ptr_deref_1245_Merge/merge_ack)
  ptr_deref_1245_load_0 <=> (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/ptr_deref_1245_Sample/word_access_start/word_0/rr branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/ptr_deref_1245_Update/word_access_complete/word_0/cr) (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/ptr_deref_1245_Sample/word_access_start/word_0/ra branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/ptr_deref_1245_Update/word_access_complete/word_0/ca)
  // 		iNsTr_5 := (($bitcast ($int<32>) iNsTr_4 ) > ($bitcast ($int<32>) maxx_x07 ))
  //  file prog.linked.opt.aa, line 477
  // (($bitcast ($int<32>) iNsTr_4 ) > ($bitcast ($int<32>) maxx_x07 ))
  // ($bitcast ($int<32>) iNsTr_4 )
  type_cast_1249_inst <=> (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/type_cast_1249_Sample/rr branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/type_cast_1249_Update/cr) (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/type_cast_1249_Sample/ra branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/type_cast_1249_Update/ca)
  // ($bitcast ($int<32>) maxx_x07 )
  type_cast_1251_inst <=> (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/type_cast_1251_Sample/rr branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/type_cast_1251_Update/cr) (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/type_cast_1251_Sample/ra branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/type_cast_1251_Update/ca)
  SGT_i32_u1_1252_inst <=> (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/SGT_i32_u1_1252_Sample/rr branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/SGT_i32_u1_1252_Update/cr) (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/SGT_i32_u1_1252_Sample/ra branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/SGT_i32_u1_1252_Update/ca)
  // 		iNsTr_6 := (($bitcast ($int<32>) iNsTr_4 ) < ($bitcast ($int<32>) minx_x06 ))
  //  file prog.linked.opt.aa, line 478
  // (($bitcast ($int<32>) iNsTr_4 ) < ($bitcast ($int<32>) minx_x06 ))
  // ($bitcast ($int<32>) iNsTr_4 )
  type_cast_1256_inst <=> (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/type_cast_1256_Sample/rr branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/type_cast_1256_Update/cr) (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/type_cast_1256_Sample/ra branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/type_cast_1256_Update/ca)
  // ($bitcast ($int<32>) minx_x06 )
  type_cast_1258_inst <=> (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/type_cast_1258_Sample/rr branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/type_cast_1258_Update/cr) (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/type_cast_1258_Sample/ra branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/type_cast_1258_Update/ca)
  SLT_i32_u1_1259_inst <=> (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/SLT_i32_u1_1259_Sample/rr branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/SLT_i32_u1_1259_Update/cr) (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/SLT_i32_u1_1259_Sample/ra branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/SLT_i32_u1_1259_Update/ca)
  // 		iNsTr_7 := ( $mux iNsTr_5 iNsTr_2  maxtx_x05 ) 
  //  file prog.linked.opt.aa, line 479
  // ( $mux iNsTr_5 iNsTr_2  maxtx_x05 ) 
  MUX_1265_inst <=> (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/MUX_1265_start/req branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/MUX_1265_complete/req) (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/MUX_1265_start/ack branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/MUX_1265_complete/ack)
  // 		iNsTr_8 := ( $mux iNsTr_5 iNsTr_4  maxx_x07 ) 
  //  file prog.linked.opt.aa, line 480
  // ( $mux iNsTr_5 iNsTr_4  maxx_x07 ) 
  MUX_1271_inst <=> (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/MUX_1271_start/req branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/MUX_1271_complete/req) (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/MUX_1271_start/ack branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/MUX_1271_complete/ack)
  // 		iNsTr_9 := ( $mux iNsTr_6 iNsTr_2  mintx_x04 ) 
  //  file prog.linked.opt.aa, line 481
  // ( $mux iNsTr_6 iNsTr_2  mintx_x04 ) 
  MUX_1277_inst <=> (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/MUX_1277_start/req branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/MUX_1277_complete/req) (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/MUX_1277_start/ack branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/MUX_1277_complete/ack)
  // 		iNsTr_10 := ( $mux iNsTr_6 iNsTr_4  minx_x06 ) 
  //  file prog.linked.opt.aa, line 482
  // ( $mux iNsTr_6 iNsTr_4  minx_x06 ) 
  MUX_1283_inst <=> (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/MUX_1283_start/req branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/MUX_1283_complete/req) (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/MUX_1283_start/ack branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/MUX_1283_complete/ack)
  // 		iNsTr_11 := (ptrx_x02 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 483
  // (ptrx_x02 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_1289_inst <=> (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/ADD_u32_u32_1289_Sample/rr branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/ADD_u32_u32_1289_Update/cr) (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/ADD_u32_u32_1289_Sample/ra branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/ADD_u32_u32_1289_Update/ca)
  // 		iNsTr_12 := (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 484
  // (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_1295_inst <=> (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/ADD_u32_u32_1295_Sample/rr branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/ADD_u32_u32_1295_Update/cr) (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/ADD_u32_u32_1295_Sample/ra branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/ADD_u32_u32_1295_Update/ca)
  // 		iNsTr_13 := (iNsTr_11 == ($bitcast ($uint<32>) _b00000000000000000000000001011100  ))
  //  file prog.linked.opt.aa, line 485
  // (iNsTr_11 == ($bitcast ($uint<32>) _b00000000000000000000000001011100  ))
  EQ_u32_u1_1301_inst <=> (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/EQ_u32_u1_1301_Sample/rr branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/EQ_u32_u1_1301_Update/cr) (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/EQ_u32_u1_1301_Sample/ra branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/EQ_u32_u1_1301_Update/ca)
  // 		iNsTr_14 := ( $mux iNsTr_13 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_11 ) 
  //  file prog.linked.opt.aa, line 486
  // ( $mux iNsTr_13 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_11 ) 
  MUX_1308_inst <=> (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/MUX_1308_start/req branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/MUX_1308_complete/req) (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/MUX_1308_start/ack branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/MUX_1308_complete/ack)
  // 		exitcond4 := (iNsTr_12 == ($bitcast ($uint<32>) _b00000000000000000000000000101100  ))
  //  file prog.linked.opt.aa, line 487
  // (iNsTr_12 == ($bitcast ($uint<32>) _b00000000000000000000000000101100  ))
  EQ_u32_u1_1314_inst <=> (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/EQ_u32_u1_1314_Sample/rr branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/EQ_u32_u1_1314_Update/cr) (branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/EQ_u32_u1_1314_Sample/ra branch_block_stmt_1190/assign_stmt_1242_to_assign_stmt_1315/EQ_u32_u1_1314_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 488
  if_stmt_1316_branch <=> (branch_block_stmt_1190/if_stmt_1316_eval_test/branch_req) (branch_block_stmt_1190/if_stmt_1316_else_link/else_choice_transition branch_block_stmt_1190/if_stmt_1316_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 493
  // ($cast ($uint<32>) iNsTr_10 )
  type_cast_1326_inst <=> (branch_block_stmt_1190/bb_1_xx_x_crit_edge_PhiReq/phi_stmt_1323/phi_stmt_1323_sources/type_cast_1326/SplitProtocol/Sample/rr branch_block_stmt_1190/bb_1_xx_x_crit_edge_PhiReq/phi_stmt_1323/phi_stmt_1323_sources/type_cast_1326/SplitProtocol/Update/cr) (branch_block_stmt_1190/bb_1_xx_x_crit_edge_PhiReq/phi_stmt_1323/phi_stmt_1323_sources/type_cast_1326/SplitProtocol/Sample/ra branch_block_stmt_1190/bb_1_xx_x_crit_edge_PhiReq/phi_stmt_1323/phi_stmt_1323_sources/type_cast_1326/SplitProtocol/Update/ca)
  phi_stmt_1323 <=> (branch_block_stmt_1190/bb_1_xx_x_crit_edge_PhiReq/phi_stmt_1323/phi_stmt_1323_req) (branch_block_stmt_1190/merge_stmt_1322_PhiAck/phi_stmt_1323_ack)
  // ($cast ($uint<32>) iNsTr_9 )
  type_cast_1330_inst <=> (branch_block_stmt_1190/bb_1_xx_x_crit_edge_PhiReq/phi_stmt_1327/phi_stmt_1327_sources/type_cast_1330/SplitProtocol/Sample/rr branch_block_stmt_1190/bb_1_xx_x_crit_edge_PhiReq/phi_stmt_1327/phi_stmt_1327_sources/type_cast_1330/SplitProtocol/Update/cr) (branch_block_stmt_1190/bb_1_xx_x_crit_edge_PhiReq/phi_stmt_1327/phi_stmt_1327_sources/type_cast_1330/SplitProtocol/Sample/ra branch_block_stmt_1190/bb_1_xx_x_crit_edge_PhiReq/phi_stmt_1327/phi_stmt_1327_sources/type_cast_1330/SplitProtocol/Update/ca)
  phi_stmt_1327 <=> (branch_block_stmt_1190/bb_1_xx_x_crit_edge_PhiReq/phi_stmt_1327/phi_stmt_1327_req) (branch_block_stmt_1190/merge_stmt_1322_PhiAck/phi_stmt_1327_ack)
  // ($cast ($uint<32>) iNsTr_8 )
  type_cast_1334_inst <=> (branch_block_stmt_1190/bb_1_xx_x_crit_edge_PhiReq/phi_stmt_1331/phi_stmt_1331_sources/type_cast_1334/SplitProtocol/Sample/rr branch_block_stmt_1190/bb_1_xx_x_crit_edge_PhiReq/phi_stmt_1331/phi_stmt_1331_sources/type_cast_1334/SplitProtocol/Update/cr) (branch_block_stmt_1190/bb_1_xx_x_crit_edge_PhiReq/phi_stmt_1331/phi_stmt_1331_sources/type_cast_1334/SplitProtocol/Sample/ra branch_block_stmt_1190/bb_1_xx_x_crit_edge_PhiReq/phi_stmt_1331/phi_stmt_1331_sources/type_cast_1334/SplitProtocol/Update/ca)
  phi_stmt_1331 <=> (branch_block_stmt_1190/bb_1_xx_x_crit_edge_PhiReq/phi_stmt_1331/phi_stmt_1331_req) (branch_block_stmt_1190/merge_stmt_1322_PhiAck/phi_stmt_1331_ack)
  // ($cast ($uint<32>) iNsTr_7 )
  type_cast_1338_inst <=> (branch_block_stmt_1190/bb_1_xx_x_crit_edge_PhiReq/phi_stmt_1335/phi_stmt_1335_sources/type_cast_1338/SplitProtocol/Sample/rr branch_block_stmt_1190/bb_1_xx_x_crit_edge_PhiReq/phi_stmt_1335/phi_stmt_1335_sources/type_cast_1338/SplitProtocol/Update/cr) (branch_block_stmt_1190/bb_1_xx_x_crit_edge_PhiReq/phi_stmt_1335/phi_stmt_1335_sources/type_cast_1338/SplitProtocol/Sample/ra branch_block_stmt_1190/bb_1_xx_x_crit_edge_PhiReq/phi_stmt_1335/phi_stmt_1335_sources/type_cast_1338/SplitProtocol/Update/ca)
  phi_stmt_1335 <=> (branch_block_stmt_1190/bb_1_xx_x_crit_edge_PhiReq/phi_stmt_1335/phi_stmt_1335_req) (branch_block_stmt_1190/merge_stmt_1322_PhiAck/phi_stmt_1335_ack)
  // 		maxDer := xx_xlcssa1
  //  file prog.linked.opt.aa, line 499
  // maxDer
  STORE_maxDer_1340_gather_scatter <=> (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/STORE_maxDer_1340_Sample/STORE_maxDer_1340_Split/split_req) (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/STORE_maxDer_1340_Sample/STORE_maxDer_1340_Split/split_ack)
  STORE_maxDer_1340_store_0 <=> (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/STORE_maxDer_1340_Sample/word_access_start/word_0/rr branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/STORE_maxDer_1340_Update/word_access_complete/word_0/cr) (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/STORE_maxDer_1340_Sample/word_access_start/word_0/ra branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/STORE_maxDer_1340_Update/word_access_complete/word_0/ca)
  // 		iNsTr_17 := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - xx_xlcssa3)
  //  file prog.linked.opt.aa, line 500
  // (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - xx_xlcssa3)
  SUB_u32_u32_1347_inst <=> (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/SUB_u32_u32_1347_Sample/rr branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/SUB_u32_u32_1347_Update/cr) (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/SUB_u32_u32_1347_Sample/ra branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/SUB_u32_u32_1347_Update/ca)
  // 		iNsTr_18 := ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_17 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
  //  file prog.linked.opt.aa, line 501
  // (($bitcast ($int<32>) iNsTr_17 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) ))
  // ($bitcast ($int<32>) iNsTr_17 )
  type_cast_1351_inst <=> (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1351_Sample/rr branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1351_Update/cr) (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1351_Sample/ra branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1351_Update/ca)
  ASHR_i32_i32_1355_inst <=> (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/ASHR_i32_i32_1355_Sample/rr branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/ASHR_i32_i32_1355_Update/cr) (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/ASHR_i32_i32_1355_Sample/ra branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/ASHR_i32_i32_1355_Update/ca)
  // ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_17 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
  type_cast_1356_inst <=> (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1356_Sample/rr branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1356_Update/cr) (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1356_Sample/ra branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1356_Update/ca)
  // 		iNsTr_19 := (($bitcast ($int<32>) xx_xlcssa1 ) > ($bitcast ($int<32>) iNsTr_18 ))
  //  file prog.linked.opt.aa, line 502
  // (($bitcast ($int<32>) xx_xlcssa1 ) > ($bitcast ($int<32>) iNsTr_18 ))
  // ($bitcast ($int<32>) xx_xlcssa1 )
  type_cast_1360_inst <=> (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1360_Sample/rr branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1360_Update/cr) (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1360_Sample/ra branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1360_Update/ca)
  // ($bitcast ($int<32>) iNsTr_18 )
  type_cast_1362_inst <=> (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1362_Sample/rr branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1362_Update/cr) (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1362_Sample/ra branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1362_Update/ca)
  SGT_i32_u1_1363_inst <=> (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/SGT_i32_u1_1363_Sample/rr branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/SGT_i32_u1_1363_Update/cr) (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/SGT_i32_u1_1363_Sample/ra branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/SGT_i32_u1_1363_Update/ca)
  // 		iNsTr_20 := ($bitcast ($uint<32>) (($bitcast ($int<32>) xx_xlcssa1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
  //  file prog.linked.opt.aa, line 503
  // (($bitcast ($int<32>) xx_xlcssa1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) ))
  // ($bitcast ($int<32>) xx_xlcssa1 )
  type_cast_1367_inst <=> (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1367_Sample/rr branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1367_Update/cr) (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1367_Sample/ra branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1367_Update/ca)
  ASHR_i32_i32_1371_inst <=> (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/ASHR_i32_i32_1371_Sample/rr branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/ASHR_i32_i32_1371_Update/cr) (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/ASHR_i32_i32_1371_Sample/ra branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/ASHR_i32_i32_1371_Update/ca)
  // ($bitcast ($uint<32>) (($bitcast ($int<32>) xx_xlcssa1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
  type_cast_1372_inst <=> (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1372_Sample/rr branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1372_Update/cr) (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1372_Sample/ra branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1372_Update/ca)
  // 		iNsTr_21 := (($bitcast ($int<32>) iNsTr_20 ) < ($bitcast ($int<32>) iNsTr_17 ))
  //  file prog.linked.opt.aa, line 504
  // (($bitcast ($int<32>) iNsTr_20 ) < ($bitcast ($int<32>) iNsTr_17 ))
  // ($bitcast ($int<32>) iNsTr_20 )
  type_cast_1376_inst <=> (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1376_Sample/rr branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1376_Update/cr) (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1376_Sample/ra branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1376_Update/ca)
  // ($bitcast ($int<32>) iNsTr_17 )
  type_cast_1378_inst <=> (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1378_Sample/rr branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1378_Update/cr) (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1378_Sample/ra branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/type_cast_1378_Update/ca)
  SLT_i32_u1_1379_inst <=> (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/SLT_i32_u1_1379_Sample/rr branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/SLT_i32_u1_1379_Update/cr) (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/SLT_i32_u1_1379_Sample/ra branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/SLT_i32_u1_1379_Update/ca)
  // 		orx_xcond := (iNsTr_19 & iNsTr_21)
  //  file prog.linked.opt.aa, line 505
  // (iNsTr_19 & iNsTr_21)
  AND_u1_u1_1384_inst <=> (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/AND_u1_u1_1384_Sample/rr branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/AND_u1_u1_1384_Update/cr) (branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/AND_u1_u1_1384_Sample/ra branch_block_stmt_1190/assign_stmt_1342_to_assign_stmt_1385/AND_u1_u1_1384_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 506
  if_stmt_1386_branch <=> (branch_block_stmt_1190/if_stmt_1386_eval_test/branch_req) (branch_block_stmt_1190/if_stmt_1386_else_link/else_choice_transition branch_block_stmt_1190/if_stmt_1386_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 511
  // 		iNsTr_23 := (xx_xlcssa - xx_xlcssa2)
  //  file prog.linked.opt.aa, line 513
  // (xx_xlcssa - xx_xlcssa2)
  SUB_u32_u32_1396_inst <=> (branch_block_stmt_1190/assign_stmt_1397_to_assign_stmt_1425/SUB_u32_u32_1396_Sample/rr branch_block_stmt_1190/assign_stmt_1397_to_assign_stmt_1425/SUB_u32_u32_1396_Update/cr) (branch_block_stmt_1190/assign_stmt_1397_to_assign_stmt_1425/SUB_u32_u32_1396_Sample/ra branch_block_stmt_1190/assign_stmt_1397_to_assign_stmt_1425/SUB_u32_u32_1396_Update/ca)
  // 		ispos := (($bitcast ($int<32>) iNsTr_23 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ))
  //  file prog.linked.opt.aa, line 514
  // (($bitcast ($int<32>) iNsTr_23 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ))
  // ($bitcast ($int<32>) iNsTr_23 )
  type_cast_1400_inst <=> (branch_block_stmt_1190/assign_stmt_1397_to_assign_stmt_1425/type_cast_1400_Sample/rr branch_block_stmt_1190/assign_stmt_1397_to_assign_stmt_1425/type_cast_1400_Update/cr) (branch_block_stmt_1190/assign_stmt_1397_to_assign_stmt_1425/type_cast_1400_Sample/ra branch_block_stmt_1190/assign_stmt_1397_to_assign_stmt_1425/type_cast_1400_Update/ca)
  SGT_i32_u1_1404_inst <=> (branch_block_stmt_1190/assign_stmt_1397_to_assign_stmt_1425/SGT_i32_u1_1404_Sample/rr branch_block_stmt_1190/assign_stmt_1397_to_assign_stmt_1425/SGT_i32_u1_1404_Update/cr) (branch_block_stmt_1190/assign_stmt_1397_to_assign_stmt_1425/SGT_i32_u1_1404_Sample/ra branch_block_stmt_1190/assign_stmt_1397_to_assign_stmt_1425/SGT_i32_u1_1404_Update/ca)
  // 		neg := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_23)
  //  file prog.linked.opt.aa, line 515
  // (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_23)
  SUB_u32_u32_1410_inst <=> (branch_block_stmt_1190/assign_stmt_1397_to_assign_stmt_1425/SUB_u32_u32_1410_Sample/rr branch_block_stmt_1190/assign_stmt_1397_to_assign_stmt_1425/SUB_u32_u32_1410_Update/cr) (branch_block_stmt_1190/assign_stmt_1397_to_assign_stmt_1425/SUB_u32_u32_1410_Sample/ra branch_block_stmt_1190/assign_stmt_1397_to_assign_stmt_1425/SUB_u32_u32_1410_Update/ca)
  // 		iNsTr_24 := ( $mux ispos iNsTr_23  neg ) 
  //  file prog.linked.opt.aa, line 516
  // ( $mux ispos iNsTr_23  neg ) 
  MUX_1416_inst <=> (branch_block_stmt_1190/assign_stmt_1397_to_assign_stmt_1425/MUX_1416_start/req branch_block_stmt_1190/assign_stmt_1397_to_assign_stmt_1425/MUX_1416_complete/req) (branch_block_stmt_1190/assign_stmt_1397_to_assign_stmt_1425/MUX_1416_start/ack branch_block_stmt_1190/assign_stmt_1397_to_assign_stmt_1425/MUX_1416_complete/ack)
  // 		phitmp := (($bitcast ($int<32>) iNsTr_24 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000011101  ) ))
  //  file prog.linked.opt.aa, line 517
  // (($bitcast ($int<32>) iNsTr_24 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000011101  ) ))
  // ($bitcast ($int<32>) iNsTr_24 )
  type_cast_1420_inst <=> (branch_block_stmt_1190/assign_stmt_1397_to_assign_stmt_1425/type_cast_1420_Sample/rr branch_block_stmt_1190/assign_stmt_1397_to_assign_stmt_1425/type_cast_1420_Update/cr) (branch_block_stmt_1190/assign_stmt_1397_to_assign_stmt_1425/type_cast_1420_Sample/ra branch_block_stmt_1190/assign_stmt_1397_to_assign_stmt_1425/type_cast_1420_Update/ca)
  SGT_i32_u1_1424_inst <=> (branch_block_stmt_1190/assign_stmt_1397_to_assign_stmt_1425/SGT_i32_u1_1424_Sample/rr branch_block_stmt_1190/assign_stmt_1397_to_assign_stmt_1425/SGT_i32_u1_1424_Update/cr) (branch_block_stmt_1190/assign_stmt_1397_to_assign_stmt_1425/SGT_i32_u1_1424_Sample/ra branch_block_stmt_1190/assign_stmt_1397_to_assign_stmt_1425/SGT_i32_u1_1424_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 519
  // ($cast ($uint<1>) phitmp )
  type_cast_1434_inst <=> (branch_block_stmt_1190/bb_3_bb_4_PhiReq/phi_stmt_1428/phi_stmt_1428_sources/type_cast_1434/SplitProtocol/Sample/rr branch_block_stmt_1190/bb_3_bb_4_PhiReq/phi_stmt_1428/phi_stmt_1428_sources/type_cast_1434/SplitProtocol/Update/cr) (branch_block_stmt_1190/bb_3_bb_4_PhiReq/phi_stmt_1428/phi_stmt_1428_sources/type_cast_1434/SplitProtocol/Sample/ra branch_block_stmt_1190/bb_3_bb_4_PhiReq/phi_stmt_1428/phi_stmt_1428_sources/type_cast_1434/SplitProtocol/Update/ca)
  phi_stmt_1428 <=> (branch_block_stmt_1190/xx_x_crit_edge_bb_4_PhiReq/phi_stmt_1428/phi_stmt_1428_req branch_block_stmt_1190/bb_3_bb_4_PhiReq/phi_stmt_1428/phi_stmt_1428_req) (branch_block_stmt_1190/merge_stmt_1427_PhiAck/phi_stmt_1428_ack)
  // 		ret_val__ := ($cast ($uint<8>) iNsTr_26 )
  //  file prog.linked.opt.aa, line 522
  // ($cast ($uint<8>) iNsTr_26 )
  type_cast_1438_inst <=> (branch_block_stmt_1190/assign_stmt_1439/type_cast_1438_Sample/rr branch_block_stmt_1190/assign_stmt_1439/type_cast_1438_Update/cr) (branch_block_stmt_1190/assign_stmt_1439/type_cast_1438_Sample/ra branch_block_stmt_1190/assign_stmt_1439/type_cast_1438_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 524
}
$module [circUpdateDet] 
{
  $in ptr:$int<32>
  // can point into  mempool
  size:$int<32>
  // can point into  mempool
  $out ret_val__:$int<32>
  // can point into  mempool
  // pipe-declarations for block %circUpdateDet
  //  file prog.linked.opt.aa, line 528
  // pipe-declarations for block %circUpdateDet%body
  //  file prog.linked.opt.aa, line 533
  // pipe-declarations for block %circUpdateDet%body%
  //  file prog.linked.opt.aa, line 539
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_1448] // Branch Block  file prog.linked.opt.aa, line 533
    {
      $P [branch_block_stmt_1448__entry__]
      branch_block_stmt_1448__entry__ <-| ($entry)
      $P [branch_block_stmt_1448__exit__]
      branch_block_stmt_1448__exit__ |-> ($exit)
      $P [assign_stmt_1454_to_assign_stmt_1466__entry__] 
      $P [assign_stmt_1454_to_assign_stmt_1466__exit__] 
      $P [return__]
      $P [merge_stmt_1468__exit__] 
      ::[assign_stmt_1454_to_assign_stmt_1466] 
      {
        // 		iNsTr_0 := (ptr + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 535
        // Source expression
        // (ptr + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_1453_sample_start_] 
        $T[ADD_u32_u32_1453_sample_completed_] 
        $T[ADD_u32_u32_1453_update_start_] 
        $T[ADD_u32_u32_1453_update_completed_] 
        // ptr
        $T[R_ptr_1450_sample_start_] 
        $T[R_ptr_1450_sample_completed_] 
        $T[R_ptr_1450_update_start_] 
        $T[R_ptr_1450_update_completed_] 
        // reference to interface object
        R_ptr_1450_sample_start_ <-& ($entry)
        R_ptr_1450_sample_completed_ <-& (R_ptr_1450_sample_start_)
        R_ptr_1450_update_start_ <-& (R_ptr_1450_sample_completed_)
        R_ptr_1450_update_completed_ <-& (R_ptr_1450_update_start_)
        ADD_u32_u32_1453_sample_start_ <-& (R_ptr_1450_update_completed_)
        ;;[ADD_u32_u32_1453_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_1453_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_1453_sample_start_ &-> (ADD_u32_u32_1453_Sample)
        ADD_u32_u32_1453_sample_completed_ <-& (ADD_u32_u32_1453_Sample)
        ADD_u32_u32_1453_sample_completed_ &-> ($null)
        ADD_u32_u32_1453_update_start_ &-> (ADD_u32_u32_1453_Update)
        ADD_u32_u32_1453_update_completed_ <-& (ADD_u32_u32_1453_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // 		iNsTr_1 := (iNsTr_0 == size)
        //  file prog.linked.opt.aa, line 536
        // Source expression
        // (iNsTr_0 == size)
        $T[EQ_u32_u1_1458_sample_start_] 
        $T[EQ_u32_u1_1458_sample_completed_] 
        $T[EQ_u32_u1_1458_update_start_] 
        $T[EQ_u32_u1_1458_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_1456_sample_start_] 
        $T[R_iNsTr_0_1456_sample_completed_] 
        $T[R_iNsTr_0_1456_update_start_] 
        $T[R_iNsTr_0_1456_update_completed_] 
        // implicit reference
        R_iNsTr_0_1456_sample_start_ <-& (ADD_u32_u32_1453_update_completed_)
        R_iNsTr_0_1456_sample_completed_ <-& (R_iNsTr_0_1456_sample_start_)
        R_iNsTr_0_1456_update_start_ <-& (R_iNsTr_0_1456_sample_completed_)
        R_iNsTr_0_1456_update_completed_ <-& (R_iNsTr_0_1456_update_start_)
        // size
        $T[R_size_1457_sample_start_] 
        $T[R_size_1457_sample_completed_] 
        $T[R_size_1457_update_start_] 
        $T[R_size_1457_update_completed_] 
        // reference to interface object
        R_size_1457_sample_start_ <-& ($entry)
        R_size_1457_sample_completed_ <-& (R_size_1457_sample_start_)
        R_size_1457_update_start_ <-& (R_size_1457_sample_completed_)
        R_size_1457_update_completed_ <-& (R_size_1457_update_start_)
        EQ_u32_u1_1458_sample_start_ <-& (R_iNsTr_0_1456_update_completed_)
        EQ_u32_u1_1458_sample_start_ <-& (R_size_1457_update_completed_)
        ;;[EQ_u32_u1_1458_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_1458_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_1458_sample_start_ &-> (EQ_u32_u1_1458_Sample)
        EQ_u32_u1_1458_sample_completed_ <-& (EQ_u32_u1_1458_Sample)
        EQ_u32_u1_1458_sample_completed_ &-> ($null)
        EQ_u32_u1_1458_update_start_ &-> (EQ_u32_u1_1458_Update)
        EQ_u32_u1_1458_update_completed_ <-& (EQ_u32_u1_1458_Update)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // 		ret_val__ := ( $mux iNsTr_1 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_0 ) 
        //  file prog.linked.opt.aa, line 537
        // Source expression
        // ( $mux iNsTr_1 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_0 ) 
        $T[MUX_1465_sample_start_] 
        $T[MUX_1465_sample_completed_] 
        $T[MUX_1465_update_start_] 
        $T[MUX_1465_update_completed_] 
        // iNsTr_1
        $T[R_iNsTr_1_1461_sample_start_] 
        $T[R_iNsTr_1_1461_sample_completed_] 
        $T[R_iNsTr_1_1461_update_start_] 
        $T[R_iNsTr_1_1461_update_completed_] 
        // implicit reference
        R_iNsTr_1_1461_sample_start_ <-& (EQ_u32_u1_1458_update_completed_)
        R_iNsTr_1_1461_sample_completed_ <-& (R_iNsTr_1_1461_sample_start_)
        R_iNsTr_1_1461_update_start_ <-& (R_iNsTr_1_1461_sample_completed_)
        R_iNsTr_1_1461_update_completed_ <-& (R_iNsTr_1_1461_update_start_)
        // iNsTr_0
        $T[R_iNsTr_0_1464_sample_start_] 
        $T[R_iNsTr_0_1464_sample_completed_] 
        $T[R_iNsTr_0_1464_update_start_] 
        $T[R_iNsTr_0_1464_update_completed_] 
        // implicit reference
        R_iNsTr_0_1464_sample_start_ <-& (ADD_u32_u32_1453_update_completed_)
        R_iNsTr_0_1464_sample_completed_ <-& (R_iNsTr_0_1464_sample_start_)
        R_iNsTr_0_1464_update_start_ <-& (R_iNsTr_0_1464_sample_completed_)
        R_iNsTr_0_1464_update_completed_ <-& (R_iNsTr_0_1464_update_start_)
        MUX_1465_sample_start_ <-& (R_iNsTr_1_1461_update_completed_)
        MUX_1465_sample_start_ <-& (R_iNsTr_0_1464_update_completed_)
        ;;[MUX_1465_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1465_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1465_sample_start_ &-> (MUX_1465_start)
        MUX_1465_sample_completed_ <-& (MUX_1465_start)
        MUX_1465_update_start_ &-> (MUX_1465_complete)
        MUX_1465_update_completed_ <-& (MUX_1465_complete)
        MUX_1465_sample_completed_ &-> ($null)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_1454_to_assign_stmt_1466__entry__ |-> (assign_stmt_1454_to_assign_stmt_1466)
      assign_stmt_1454_to_assign_stmt_1466__exit__ <-| (assign_stmt_1454_to_assign_stmt_1466)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 539
      //---------------------   merge statement  file prog.linked.opt.aa, line 539  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_1468_PhiReqMerge] 
      merge_stmt_1468_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_1468_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1468_PhiReqMerge |-> (merge_stmt_1468_PhiAck)
      merge_stmt_1468__exit__  <-| (merge_stmt_1468_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 539  --------------------------
      assign_stmt_1454_to_assign_stmt_1466__entry__ <-| (branch_block_stmt_1448__entry__)
      return__ <-| (assign_stmt_1454_to_assign_stmt_1466__exit__)
      merge_stmt_1468__exit__ |-> (branch_block_stmt_1448__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %circUpdateDet%body%
    //  file prog.linked.opt.aa, line 539
    // constant-object-declarations for block %circUpdateDet%body
    //  file prog.linked.opt.aa, line 533
    // constant-object-declarations for block %circUpdateDet
    //  file prog.linked.opt.aa, line 528
    // constant-declarations for block %circUpdateDet%body
    //  file prog.linked.opt.aa, line 533
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1452_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ( $mux iNsTr_1 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_0 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_1463_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for block %circUpdateDet%body%
    //  file prog.linked.opt.aa, line 539
    // block %circUpdateDet%body
    //  file prog.linked.opt.aa, line 533
    // 		iNsTr_0 := (ptr + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 535
    // iNsTr_0
    $W[iNsTr_0_1454] : $int<32>
    // 		iNsTr_1 := (iNsTr_0 == size)
    //  file prog.linked.opt.aa, line 536
    // iNsTr_1
    $W[iNsTr_1_1459] : $int<1>
    // 		ret_val__ := ( $mux iNsTr_1 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_0 ) 
    //  file prog.linked.opt.aa, line 537
    // ret_val__
    // datapath-instances for block %circUpdateDet%body
    //  file prog.linked.opt.aa, line 533
    // 		iNsTr_0 := (ptr + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 535
    // (ptr + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_1453_inst] (ptr type_cast_1452_wire_constant) (iNsTr_0_1454) 
    $delay ADD_u32_u32_1453_inst 1
    // 		iNsTr_1 := (iNsTr_0 == size)
    //  file prog.linked.opt.aa, line 536
    // (iNsTr_0 == size)
    ==[EQ_u32_u1_1458_inst] (iNsTr_0_1454 size) (iNsTr_1_1459) 
    $delay EQ_u32_u1_1458_inst 1
    // 		ret_val__ := ( $mux iNsTr_1 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_0 ) 
    //  file prog.linked.opt.aa, line 537
    // ( $mux iNsTr_1 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_0 ) 
    ? [MUX_1465_inst] (iNsTr_1_1459 type_cast_1463_wire_constant iNsTr_0_1454) (ret_val__) 
  }
  // end data-path
  // 		iNsTr_0 := (ptr + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 535
  // (ptr + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_1453_inst <=> (branch_block_stmt_1448/assign_stmt_1454_to_assign_stmt_1466/ADD_u32_u32_1453_Sample/rr branch_block_stmt_1448/assign_stmt_1454_to_assign_stmt_1466/ADD_u32_u32_1453_Update/cr) (branch_block_stmt_1448/assign_stmt_1454_to_assign_stmt_1466/ADD_u32_u32_1453_Sample/ra branch_block_stmt_1448/assign_stmt_1454_to_assign_stmt_1466/ADD_u32_u32_1453_Update/ca)
  // 		iNsTr_1 := (iNsTr_0 == size)
  //  file prog.linked.opt.aa, line 536
  // (iNsTr_0 == size)
  EQ_u32_u1_1458_inst <=> (branch_block_stmt_1448/assign_stmt_1454_to_assign_stmt_1466/EQ_u32_u1_1458_Sample/rr branch_block_stmt_1448/assign_stmt_1454_to_assign_stmt_1466/EQ_u32_u1_1458_Update/cr) (branch_block_stmt_1448/assign_stmt_1454_to_assign_stmt_1466/EQ_u32_u1_1458_Sample/ra branch_block_stmt_1448/assign_stmt_1454_to_assign_stmt_1466/EQ_u32_u1_1458_Update/ca)
  // 		ret_val__ := ( $mux iNsTr_1 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_0 ) 
  //  file prog.linked.opt.aa, line 537
  // ( $mux iNsTr_1 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_0 ) 
  MUX_1465_inst <=> (branch_block_stmt_1448/assign_stmt_1454_to_assign_stmt_1466/MUX_1465_start/req branch_block_stmt_1448/assign_stmt_1454_to_assign_stmt_1466/MUX_1465_complete/req) (branch_block_stmt_1448/assign_stmt_1454_to_assign_stmt_1466/MUX_1465_start/ack branch_block_stmt_1448/assign_stmt_1454_to_assign_stmt_1466/MUX_1465_complete/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 539
}
$module [circUpdateFilt] 
{
  $in ptr:$int<32>
  // can point into  mempool
  size:$int<32>
  // can point into  mempool
  $out ret_val__:$int<32>
  // can point into  mempool
  // pipe-declarations for block %circUpdateFilt
  //  file prog.linked.opt.aa, line 543
  // pipe-declarations for block %circUpdateFilt%body
  //  file prog.linked.opt.aa, line 548
  // pipe-declarations for block %circUpdateFilt%body%
  //  file prog.linked.opt.aa, line 554
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_1475] // Branch Block  file prog.linked.opt.aa, line 548
    {
      $P [branch_block_stmt_1475__entry__]
      branch_block_stmt_1475__entry__ <-| ($entry)
      $P [branch_block_stmt_1475__exit__]
      branch_block_stmt_1475__exit__ |-> ($exit)
      $P [assign_stmt_1481_to_assign_stmt_1493__entry__] 
      $P [assign_stmt_1481_to_assign_stmt_1493__exit__] 
      $P [return__]
      $P [merge_stmt_1495__exit__] 
      ::[assign_stmt_1481_to_assign_stmt_1493] 
      {
        // 		iNsTr_0 := (ptr + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 550
        // Source expression
        // (ptr + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_1480_sample_start_] 
        $T[ADD_u32_u32_1480_sample_completed_] 
        $T[ADD_u32_u32_1480_update_start_] 
        $T[ADD_u32_u32_1480_update_completed_] 
        // ptr
        $T[R_ptr_1477_sample_start_] 
        $T[R_ptr_1477_sample_completed_] 
        $T[R_ptr_1477_update_start_] 
        $T[R_ptr_1477_update_completed_] 
        // reference to interface object
        R_ptr_1477_sample_start_ <-& ($entry)
        R_ptr_1477_sample_completed_ <-& (R_ptr_1477_sample_start_)
        R_ptr_1477_update_start_ <-& (R_ptr_1477_sample_completed_)
        R_ptr_1477_update_completed_ <-& (R_ptr_1477_update_start_)
        ADD_u32_u32_1480_sample_start_ <-& (R_ptr_1477_update_completed_)
        ;;[ADD_u32_u32_1480_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_1480_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_1480_sample_start_ &-> (ADD_u32_u32_1480_Sample)
        ADD_u32_u32_1480_sample_completed_ <-& (ADD_u32_u32_1480_Sample)
        ADD_u32_u32_1480_sample_completed_ &-> ($null)
        ADD_u32_u32_1480_update_start_ &-> (ADD_u32_u32_1480_Update)
        ADD_u32_u32_1480_update_completed_ <-& (ADD_u32_u32_1480_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // 		iNsTr_1 := (iNsTr_0 == size)
        //  file prog.linked.opt.aa, line 551
        // Source expression
        // (iNsTr_0 == size)
        $T[EQ_u32_u1_1485_sample_start_] 
        $T[EQ_u32_u1_1485_sample_completed_] 
        $T[EQ_u32_u1_1485_update_start_] 
        $T[EQ_u32_u1_1485_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_1483_sample_start_] 
        $T[R_iNsTr_0_1483_sample_completed_] 
        $T[R_iNsTr_0_1483_update_start_] 
        $T[R_iNsTr_0_1483_update_completed_] 
        // implicit reference
        R_iNsTr_0_1483_sample_start_ <-& (ADD_u32_u32_1480_update_completed_)
        R_iNsTr_0_1483_sample_completed_ <-& (R_iNsTr_0_1483_sample_start_)
        R_iNsTr_0_1483_update_start_ <-& (R_iNsTr_0_1483_sample_completed_)
        R_iNsTr_0_1483_update_completed_ <-& (R_iNsTr_0_1483_update_start_)
        // size
        $T[R_size_1484_sample_start_] 
        $T[R_size_1484_sample_completed_] 
        $T[R_size_1484_update_start_] 
        $T[R_size_1484_update_completed_] 
        // reference to interface object
        R_size_1484_sample_start_ <-& ($entry)
        R_size_1484_sample_completed_ <-& (R_size_1484_sample_start_)
        R_size_1484_update_start_ <-& (R_size_1484_sample_completed_)
        R_size_1484_update_completed_ <-& (R_size_1484_update_start_)
        EQ_u32_u1_1485_sample_start_ <-& (R_iNsTr_0_1483_update_completed_)
        EQ_u32_u1_1485_sample_start_ <-& (R_size_1484_update_completed_)
        ;;[EQ_u32_u1_1485_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_1485_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_1485_sample_start_ &-> (EQ_u32_u1_1485_Sample)
        EQ_u32_u1_1485_sample_completed_ <-& (EQ_u32_u1_1485_Sample)
        EQ_u32_u1_1485_sample_completed_ &-> ($null)
        EQ_u32_u1_1485_update_start_ &-> (EQ_u32_u1_1485_Update)
        EQ_u32_u1_1485_update_completed_ <-& (EQ_u32_u1_1485_Update)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // 		ret_val__ := ( $mux iNsTr_1 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_0 ) 
        //  file prog.linked.opt.aa, line 552
        // Source expression
        // ( $mux iNsTr_1 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_0 ) 
        $T[MUX_1492_sample_start_] 
        $T[MUX_1492_sample_completed_] 
        $T[MUX_1492_update_start_] 
        $T[MUX_1492_update_completed_] 
        // iNsTr_1
        $T[R_iNsTr_1_1488_sample_start_] 
        $T[R_iNsTr_1_1488_sample_completed_] 
        $T[R_iNsTr_1_1488_update_start_] 
        $T[R_iNsTr_1_1488_update_completed_] 
        // implicit reference
        R_iNsTr_1_1488_sample_start_ <-& (EQ_u32_u1_1485_update_completed_)
        R_iNsTr_1_1488_sample_completed_ <-& (R_iNsTr_1_1488_sample_start_)
        R_iNsTr_1_1488_update_start_ <-& (R_iNsTr_1_1488_sample_completed_)
        R_iNsTr_1_1488_update_completed_ <-& (R_iNsTr_1_1488_update_start_)
        // iNsTr_0
        $T[R_iNsTr_0_1491_sample_start_] 
        $T[R_iNsTr_0_1491_sample_completed_] 
        $T[R_iNsTr_0_1491_update_start_] 
        $T[R_iNsTr_0_1491_update_completed_] 
        // implicit reference
        R_iNsTr_0_1491_sample_start_ <-& (ADD_u32_u32_1480_update_completed_)
        R_iNsTr_0_1491_sample_completed_ <-& (R_iNsTr_0_1491_sample_start_)
        R_iNsTr_0_1491_update_start_ <-& (R_iNsTr_0_1491_sample_completed_)
        R_iNsTr_0_1491_update_completed_ <-& (R_iNsTr_0_1491_update_start_)
        MUX_1492_sample_start_ <-& (R_iNsTr_1_1488_update_completed_)
        MUX_1492_sample_start_ <-& (R_iNsTr_0_1491_update_completed_)
        ;;[MUX_1492_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1492_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1492_sample_start_ &-> (MUX_1492_start)
        MUX_1492_sample_completed_ <-& (MUX_1492_start)
        MUX_1492_update_start_ &-> (MUX_1492_complete)
        MUX_1492_update_completed_ <-& (MUX_1492_complete)
        MUX_1492_sample_completed_ &-> ($null)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_1481_to_assign_stmt_1493__entry__ |-> (assign_stmt_1481_to_assign_stmt_1493)
      assign_stmt_1481_to_assign_stmt_1493__exit__ <-| (assign_stmt_1481_to_assign_stmt_1493)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 554
      //---------------------   merge statement  file prog.linked.opt.aa, line 554  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_1495_PhiReqMerge] 
      merge_stmt_1495_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_1495_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1495_PhiReqMerge |-> (merge_stmt_1495_PhiAck)
      merge_stmt_1495__exit__  <-| (merge_stmt_1495_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 554  --------------------------
      assign_stmt_1481_to_assign_stmt_1493__entry__ <-| (branch_block_stmt_1475__entry__)
      return__ <-| (assign_stmt_1481_to_assign_stmt_1493__exit__)
      merge_stmt_1495__exit__ |-> (branch_block_stmt_1475__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %circUpdateFilt%body%
    //  file prog.linked.opt.aa, line 554
    // constant-object-declarations for block %circUpdateFilt%body
    //  file prog.linked.opt.aa, line 548
    // constant-object-declarations for block %circUpdateFilt
    //  file prog.linked.opt.aa, line 543
    // constant-declarations for block %circUpdateFilt%body
    //  file prog.linked.opt.aa, line 548
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1479_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ( $mux iNsTr_1 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_0 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_1490_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for block %circUpdateFilt%body%
    //  file prog.linked.opt.aa, line 554
    // block %circUpdateFilt%body
    //  file prog.linked.opt.aa, line 548
    // 		iNsTr_0 := (ptr + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 550
    // iNsTr_0
    $W[iNsTr_0_1481] : $int<32>
    // 		iNsTr_1 := (iNsTr_0 == size)
    //  file prog.linked.opt.aa, line 551
    // iNsTr_1
    $W[iNsTr_1_1486] : $int<1>
    // 		ret_val__ := ( $mux iNsTr_1 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_0 ) 
    //  file prog.linked.opt.aa, line 552
    // ret_val__
    // datapath-instances for block %circUpdateFilt%body
    //  file prog.linked.opt.aa, line 548
    // 		iNsTr_0 := (ptr + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 550
    // (ptr + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_1480_inst] (ptr type_cast_1479_wire_constant) (iNsTr_0_1481) 
    $delay ADD_u32_u32_1480_inst 1
    // 		iNsTr_1 := (iNsTr_0 == size)
    //  file prog.linked.opt.aa, line 551
    // (iNsTr_0 == size)
    ==[EQ_u32_u1_1485_inst] (iNsTr_0_1481 size) (iNsTr_1_1486) 
    $delay EQ_u32_u1_1485_inst 1
    // 		ret_val__ := ( $mux iNsTr_1 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_0 ) 
    //  file prog.linked.opt.aa, line 552
    // ( $mux iNsTr_1 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_0 ) 
    ? [MUX_1492_inst] (iNsTr_1_1486 type_cast_1490_wire_constant iNsTr_0_1481) (ret_val__) 
  }
  // end data-path
  // 		iNsTr_0 := (ptr + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 550
  // (ptr + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_1480_inst <=> (branch_block_stmt_1475/assign_stmt_1481_to_assign_stmt_1493/ADD_u32_u32_1480_Sample/rr branch_block_stmt_1475/assign_stmt_1481_to_assign_stmt_1493/ADD_u32_u32_1480_Update/cr) (branch_block_stmt_1475/assign_stmt_1481_to_assign_stmt_1493/ADD_u32_u32_1480_Sample/ra branch_block_stmt_1475/assign_stmt_1481_to_assign_stmt_1493/ADD_u32_u32_1480_Update/ca)
  // 		iNsTr_1 := (iNsTr_0 == size)
  //  file prog.linked.opt.aa, line 551
  // (iNsTr_0 == size)
  EQ_u32_u1_1485_inst <=> (branch_block_stmt_1475/assign_stmt_1481_to_assign_stmt_1493/EQ_u32_u1_1485_Sample/rr branch_block_stmt_1475/assign_stmt_1481_to_assign_stmt_1493/EQ_u32_u1_1485_Update/cr) (branch_block_stmt_1475/assign_stmt_1481_to_assign_stmt_1493/EQ_u32_u1_1485_Sample/ra branch_block_stmt_1475/assign_stmt_1481_to_assign_stmt_1493/EQ_u32_u1_1485_Update/ca)
  // 		ret_val__ := ( $mux iNsTr_1 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_0 ) 
  //  file prog.linked.opt.aa, line 552
  // ( $mux iNsTr_1 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_0 ) 
  MUX_1492_inst <=> (branch_block_stmt_1475/assign_stmt_1481_to_assign_stmt_1493/MUX_1492_start/req branch_block_stmt_1475/assign_stmt_1481_to_assign_stmt_1493/MUX_1492_complete/req) (branch_block_stmt_1475/assign_stmt_1481_to_assign_stmt_1493/MUX_1492_start/ack branch_block_stmt_1475/assign_stmt_1481_to_assign_stmt_1493/MUX_1492_complete/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 554
}
$module [ddCalc] 
{
  $in datum:$int<32>
  // can point into  mempool
  $out ret_val__:$int<32>
  // can point into  mempool
  // pipe-declarations for block %ddCalc
  //  file prog.linked.opt.aa, line 558
  // pipe-declarations for block %ddCalc%body
  //  file prog.linked.opt.aa, line 563
  // pipe-declarations for block %ddCalc%body%
  //  file prog.linked.opt.aa, line 575
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_1501] // Branch Block  file prog.linked.opt.aa, line 563
    {
      $P [branch_block_stmt_1501__entry__]
      branch_block_stmt_1501__entry__ <-| ($entry)
      $P [branch_block_stmt_1501__exit__]
      branch_block_stmt_1501__exit__ |-> ($exit)
      $P [assign_stmt_1504_to_assign_stmt_1544__entry__] 
      $P [assign_stmt_1504_to_assign_stmt_1544__exit__] 
      $P [return__]
      $P [merge_stmt_1546__exit__] 
      ::[assign_stmt_1504_to_assign_stmt_1544] 
      {
        // 		iNsTr_0 := DDCALCbuff_ptr
        //  file prog.linked.opt.aa, line 565
        // Source expression
        // DDCALCbuff_ptr
        $T[LOAD_DDCALCbuff_ptr_1503_sample_start_] 
        $T[LOAD_DDCALCbuff_ptr_1503_sample_completed_] 
        $T[LOAD_DDCALCbuff_ptr_1503_update_start_] 
        $T[LOAD_DDCALCbuff_ptr_1503_update_completed_] 
        $T[LOAD_DDCALCbuff_ptr_1503_sample_start_] 
        $T[LOAD_DDCALCbuff_ptr_1503_sample_completed_] 
        $T[LOAD_DDCALCbuff_ptr_1503_update_start_] 
        $T[LOAD_DDCALCbuff_ptr_1503_update_completed_] 
        $T[LOAD_DDCALCbuff_ptr_1503_word_address_calculated] 
        $T[LOAD_DDCALCbuff_ptr_1503_root_address_calculated] 
        LOAD_DDCALCbuff_ptr_1503_word_address_calculated <-& (LOAD_DDCALCbuff_ptr_1503_root_address_calculated)
        ;;[LOAD_DDCALCbuff_ptr_1503_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_DDCALCbuff_ptr_1503_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_DDCALCbuff_ptr_1503_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_DDCALCbuff_ptr_1503_sample_start_ <-& (LOAD_DDCALCbuff_ptr_1503_word_address_calculated)
        LOAD_DDCALCbuff_ptr_1503_sample_start_ &-> (LOAD_DDCALCbuff_ptr_1503_Sample)
        LOAD_DDCALCbuff_ptr_1503_sample_completed_ <-& (LOAD_DDCALCbuff_ptr_1503_Sample)
        LOAD_DDCALCbuff_ptr_1503_sample_completed_ &-> ($null)
        LOAD_DDCALCbuff_ptr_1503_update_start_ &-> (LOAD_DDCALCbuff_ptr_1503_Update)
        LOAD_DDCALCbuff_ptr_1503_update_completed_ <-& (LOAD_DDCALCbuff_ptr_1503_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // 		iNsTr_1 := @(DDCALCbuff[iNsTr_0])
        //  file prog.linked.opt.aa, line 566
        // Source expression
        // @(DDCALCbuff[iNsTr_0])
        $T[addr_of_1508_sample_start_] 
        $T[addr_of_1508_sample_completed_] 
        $T[addr_of_1508_update_start_] 
        $T[addr_of_1508_update_completed_] 
        $T[array_obj_ref_1507_root_address_calculated] 
        $T[array_obj_ref_1507_offset_calculated] 
        $T[array_obj_ref_1507_index_resized_0] 
        $T[array_obj_ref_1507_index_scaled_0] 
        // iNsTr_0
        $T[R_iNsTr_0_1506_sample_start_] 
        $T[R_iNsTr_0_1506_sample_completed_] 
        $T[R_iNsTr_0_1506_update_start_] 
        $T[R_iNsTr_0_1506_update_completed_] 
        // implicit reference
        R_iNsTr_0_1506_sample_start_ <-& (LOAD_DDCALCbuff_ptr_1503_update_completed_)
        R_iNsTr_0_1506_sample_completed_ <-& (R_iNsTr_0_1506_sample_start_)
        R_iNsTr_0_1506_update_start_ <-& (R_iNsTr_0_1506_sample_completed_)
        R_iNsTr_0_1506_update_completed_ <-& (R_iNsTr_0_1506_update_start_)
        ;;[array_obj_ref_1507_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        R_iNsTr_0_1506_update_completed_ &-> (array_obj_ref_1507_index_resize_0)
        array_obj_ref_1507_index_resized_0 <-& (array_obj_ref_1507_index_resize_0)
        ;;[array_obj_ref_1507_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_1507_index_resized_0 &-> (array_obj_ref_1507_index_scale_0)
        array_obj_ref_1507_index_scaled_0 <-& (array_obj_ref_1507_index_scale_0)
        ;;[array_obj_ref_1507_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_1507_index_scaled_0 &-> (array_obj_ref_1507_final_index_sum_regn)
        array_obj_ref_1507_offset_calculated <-& (array_obj_ref_1507_final_index_sum_regn)
        ;;[array_obj_ref_1507_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_1507_offset_calculated &-> (array_obj_ref_1507_base_plus_offset)
        array_obj_ref_1507_root_address_calculated <-& (array_obj_ref_1507_base_plus_offset)
        ;;[addr_of_1508_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_1508_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_1508_sample_start_ <-& (array_obj_ref_1507_root_address_calculated)
        addr_of_1508_sample_start_ &-> (addr_of_1508_request)
        addr_of_1508_sample_completed_ <-& (addr_of_1508_request)
        addr_of_1508_update_start_ &-> (addr_of_1508_complete)
        addr_of_1508_update_completed_ <-& (addr_of_1508_complete)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // 		iNsTr_2 := ->(iNsTr_1)
        //  file prog.linked.opt.aa, line 567
        // Source expression
        // ->(iNsTr_1)
        $T[ptr_deref_1512_sample_start_] 
        $T[ptr_deref_1512_sample_completed_] 
        $T[ptr_deref_1512_update_start_] 
        $T[ptr_deref_1512_update_completed_] 
        $T[ptr_deref_1512_base_address_calculated] 
        // iNsTr_1
        $T[R_iNsTr_1_1511_sample_start_] 
        $T[R_iNsTr_1_1511_sample_completed_] 
        $T[R_iNsTr_1_1511_update_start_] 
        $T[R_iNsTr_1_1511_update_completed_] 
        // implicit reference
        R_iNsTr_1_1511_sample_start_ <-& (addr_of_1508_update_completed_)
        R_iNsTr_1_1511_sample_completed_ <-& (R_iNsTr_1_1511_sample_start_)
        R_iNsTr_1_1511_update_start_ <-& (R_iNsTr_1_1511_sample_completed_)
        R_iNsTr_1_1511_update_completed_ <-& (R_iNsTr_1_1511_update_start_)
        $T[ptr_deref_1512_word_address_calculated] 
        $T[ptr_deref_1512_root_address_calculated] 
        $T[ptr_deref_1512_base_address_resized] 
        ;;[ptr_deref_1512_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_1512_base_address_calculated &-> (ptr_deref_1512_base_addr_resize)
        ptr_deref_1512_base_address_resized <-& (ptr_deref_1512_base_addr_resize)
        ;;[ptr_deref_1512_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_1512_base_address_resized &-> (ptr_deref_1512_base_plus_offset)
        ptr_deref_1512_root_address_calculated <-& (ptr_deref_1512_base_plus_offset)
        ;;[ptr_deref_1512_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_1512_root_address_calculated &-> (ptr_deref_1512_word_addrgen)
        ptr_deref_1512_word_address_calculated <-& (ptr_deref_1512_word_addrgen)
        ;;[ptr_deref_1512_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_1512_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_1512_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_1512_sample_start_ <-& (ptr_deref_1512_word_address_calculated)
        ptr_deref_1512_sample_start_ &-> (ptr_deref_1512_Sample)
        ptr_deref_1512_sample_completed_ <-& (ptr_deref_1512_Sample)
        ptr_deref_1512_sample_completed_ &-> ($null)
        ptr_deref_1512_update_start_ &-> (ptr_deref_1512_Update)
        ptr_deref_1512_update_completed_ <-& (ptr_deref_1512_Update)
        ptr_deref_1512_base_address_calculated <-& (R_iNsTr_1_1511_update_completed_)
        ptr_deref_1512_sample_start_ <-& (ptr_deref_1512_base_address_calculated)
        // Target expression
        // (as target) iNsTr_2
        // iNsTr_2
        // implicit reference
        // 		ret_val__ := (datum - iNsTr_2)
        //  file prog.linked.opt.aa, line 568
        // Source expression
        // (datum - iNsTr_2)
        $T[SUB_u32_u32_1517_sample_start_] 
        $T[SUB_u32_u32_1517_sample_completed_] 
        $T[SUB_u32_u32_1517_update_start_] 
        $T[SUB_u32_u32_1517_update_completed_] 
        // datum
        $T[R_datum_1515_sample_start_] 
        $T[R_datum_1515_sample_completed_] 
        $T[R_datum_1515_update_start_] 
        $T[R_datum_1515_update_completed_] 
        // reference to interface object
        R_datum_1515_sample_start_ <-& ($entry)
        R_datum_1515_sample_completed_ <-& (R_datum_1515_sample_start_)
        R_datum_1515_update_start_ <-& (R_datum_1515_sample_completed_)
        R_datum_1515_update_completed_ <-& (R_datum_1515_update_start_)
        // iNsTr_2
        $T[R_iNsTr_2_1516_sample_start_] 
        $T[R_iNsTr_2_1516_sample_completed_] 
        $T[R_iNsTr_2_1516_update_start_] 
        $T[R_iNsTr_2_1516_update_completed_] 
        // implicit reference
        R_iNsTr_2_1516_sample_start_ <-& (ptr_deref_1512_update_completed_)
        R_iNsTr_2_1516_sample_completed_ <-& (R_iNsTr_2_1516_sample_start_)
        R_iNsTr_2_1516_update_start_ <-& (R_iNsTr_2_1516_sample_completed_)
        R_iNsTr_2_1516_update_completed_ <-& (R_iNsTr_2_1516_update_start_)
        SUB_u32_u32_1517_sample_start_ <-& (R_datum_1515_update_completed_)
        SUB_u32_u32_1517_sample_start_ <-& (R_iNsTr_2_1516_update_completed_)
        ;;[SUB_u32_u32_1517_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_1517_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_1517_sample_start_ &-> (SUB_u32_u32_1517_Sample)
        SUB_u32_u32_1517_sample_completed_ <-& (SUB_u32_u32_1517_Sample)
        SUB_u32_u32_1517_sample_completed_ &-> ($null)
        SUB_u32_u32_1517_update_start_ &-> (SUB_u32_u32_1517_Update)
        SUB_u32_u32_1517_update_completed_ <-& (SUB_u32_u32_1517_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // 		->(iNsTr_1) := datum
        //  file prog.linked.opt.aa, line 569
        // Source expression
        // datum
        $T[R_datum_1521_sample_start_] 
        $T[R_datum_1521_sample_completed_] 
        $T[R_datum_1521_update_start_] 
        $T[R_datum_1521_update_completed_] 
        // reference to interface object
        R_datum_1521_sample_start_ <-& ($entry)
        R_datum_1521_sample_completed_ <-& (R_datum_1521_sample_start_)
        R_datum_1521_update_start_ <-& (R_datum_1521_sample_completed_)
        R_datum_1521_update_completed_ <-& (R_datum_1521_update_start_)
        // Target expression
        // ->(iNsTr_1)
        $T[ptr_deref_1520_sample_start_] 
        $T[ptr_deref_1520_sample_completed_] 
        $T[ptr_deref_1520_update_start_] 
        $T[ptr_deref_1520_update_completed_] 
        $T[ptr_deref_1520_base_address_calculated] 
        // iNsTr_1
        $T[R_iNsTr_1_1519_sample_start_] 
        $T[R_iNsTr_1_1519_sample_completed_] 
        $T[R_iNsTr_1_1519_update_start_] 
        $T[R_iNsTr_1_1519_update_completed_] 
        // implicit reference
        R_iNsTr_1_1519_sample_start_ <-& (addr_of_1508_update_completed_)
        R_iNsTr_1_1519_sample_completed_ <-& (R_iNsTr_1_1519_sample_start_)
        R_iNsTr_1_1519_update_start_ <-& (R_iNsTr_1_1519_sample_completed_)
        R_iNsTr_1_1519_update_completed_ <-& (R_iNsTr_1_1519_update_start_)
        $T[ptr_deref_1520_word_address_calculated] 
        $T[ptr_deref_1520_root_address_calculated] 
        $T[ptr_deref_1520_base_address_resized] 
        ;;[ptr_deref_1520_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_1520_base_address_calculated &-> (ptr_deref_1520_base_addr_resize)
        ptr_deref_1520_base_address_resized <-& (ptr_deref_1520_base_addr_resize)
        ;;[ptr_deref_1520_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_1520_base_address_resized &-> (ptr_deref_1520_base_plus_offset)
        ptr_deref_1520_root_address_calculated <-& (ptr_deref_1520_base_plus_offset)
        ;;[ptr_deref_1520_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_1520_root_address_calculated &-> (ptr_deref_1520_word_addrgen)
        ptr_deref_1520_word_address_calculated <-& (ptr_deref_1520_word_addrgen)
        ;;[ptr_deref_1520_Sample] 
        {
          ;;[ptr_deref_1520_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_1520_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_1520_sample_start_ <-& (ptr_deref_1520_word_address_calculated)
        ptr_deref_1520_sample_start_ &-> (ptr_deref_1520_Sample)
        ptr_deref_1520_sample_completed_ <-& (ptr_deref_1520_Sample)
        ptr_deref_1520_sample_completed_ &-> ($null)
        ptr_deref_1520_update_start_ &-> (ptr_deref_1520_Update)
        ptr_deref_1520_update_completed_ <-& (ptr_deref_1520_Update)
        ptr_deref_1520_base_address_calculated <-& (R_iNsTr_1_1519_update_completed_)
        ptr_deref_1520_sample_start_ <-& (ptr_deref_1520_base_address_calculated)
        ptr_deref_1520_sample_start_ <-& (R_datum_1521_update_completed_)
        // 		iNsTr_5 := (iNsTr_0 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 570
        // Source expression
        // (iNsTr_0 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_1527_sample_start_] 
        $T[ADD_u32_u32_1527_sample_completed_] 
        $T[ADD_u32_u32_1527_update_start_] 
        $T[ADD_u32_u32_1527_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_1524_sample_start_] 
        $T[R_iNsTr_0_1524_sample_completed_] 
        $T[R_iNsTr_0_1524_update_start_] 
        $T[R_iNsTr_0_1524_update_completed_] 
        // implicit reference
        R_iNsTr_0_1524_sample_start_ <-& (LOAD_DDCALCbuff_ptr_1503_update_completed_)
        R_iNsTr_0_1524_sample_completed_ <-& (R_iNsTr_0_1524_sample_start_)
        R_iNsTr_0_1524_update_start_ <-& (R_iNsTr_0_1524_sample_completed_)
        R_iNsTr_0_1524_update_completed_ <-& (R_iNsTr_0_1524_update_start_)
        ADD_u32_u32_1527_sample_start_ <-& (R_iNsTr_0_1524_update_completed_)
        ;;[ADD_u32_u32_1527_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_1527_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_1527_sample_start_ &-> (ADD_u32_u32_1527_Sample)
        ADD_u32_u32_1527_sample_completed_ <-& (ADD_u32_u32_1527_Sample)
        ADD_u32_u32_1527_sample_completed_ &-> ($null)
        ADD_u32_u32_1527_update_start_ &-> (ADD_u32_u32_1527_Update)
        ADD_u32_u32_1527_update_completed_ <-& (ADD_u32_u32_1527_Update)
        // Target expression
        // (as target) iNsTr_5
        // iNsTr_5
        // implicit reference
        // 		iNsTr_6 := (iNsTr_5 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
        //  file prog.linked.opt.aa, line 571
        // Source expression
        // (iNsTr_5 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
        $T[EQ_u32_u1_1533_sample_start_] 
        $T[EQ_u32_u1_1533_sample_completed_] 
        $T[EQ_u32_u1_1533_update_start_] 
        $T[EQ_u32_u1_1533_update_completed_] 
        // iNsTr_5
        $T[R_iNsTr_5_1530_sample_start_] 
        $T[R_iNsTr_5_1530_sample_completed_] 
        $T[R_iNsTr_5_1530_update_start_] 
        $T[R_iNsTr_5_1530_update_completed_] 
        // implicit reference
        R_iNsTr_5_1530_sample_start_ <-& (ADD_u32_u32_1527_update_completed_)
        R_iNsTr_5_1530_sample_completed_ <-& (R_iNsTr_5_1530_sample_start_)
        R_iNsTr_5_1530_update_start_ <-& (R_iNsTr_5_1530_sample_completed_)
        R_iNsTr_5_1530_update_completed_ <-& (R_iNsTr_5_1530_update_start_)
        EQ_u32_u1_1533_sample_start_ <-& (R_iNsTr_5_1530_update_completed_)
        ;;[EQ_u32_u1_1533_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_1533_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_1533_sample_start_ &-> (EQ_u32_u1_1533_Sample)
        EQ_u32_u1_1533_sample_completed_ <-& (EQ_u32_u1_1533_Sample)
        EQ_u32_u1_1533_sample_completed_ &-> ($null)
        EQ_u32_u1_1533_update_start_ &-> (EQ_u32_u1_1533_Update)
        EQ_u32_u1_1533_update_completed_ <-& (EQ_u32_u1_1533_Update)
        // Target expression
        // (as target) iNsTr_6
        // iNsTr_6
        // implicit reference
        // 		iNsTr_7 := ( $mux iNsTr_6 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_5 ) 
        //  file prog.linked.opt.aa, line 572
        // Source expression
        // ( $mux iNsTr_6 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_5 ) 
        $T[MUX_1540_sample_start_] 
        $T[MUX_1540_sample_completed_] 
        $T[MUX_1540_update_start_] 
        $T[MUX_1540_update_completed_] 
        // iNsTr_6
        $T[R_iNsTr_6_1536_sample_start_] 
        $T[R_iNsTr_6_1536_sample_completed_] 
        $T[R_iNsTr_6_1536_update_start_] 
        $T[R_iNsTr_6_1536_update_completed_] 
        // implicit reference
        R_iNsTr_6_1536_sample_start_ <-& (EQ_u32_u1_1533_update_completed_)
        R_iNsTr_6_1536_sample_completed_ <-& (R_iNsTr_6_1536_sample_start_)
        R_iNsTr_6_1536_update_start_ <-& (R_iNsTr_6_1536_sample_completed_)
        R_iNsTr_6_1536_update_completed_ <-& (R_iNsTr_6_1536_update_start_)
        // iNsTr_5
        $T[R_iNsTr_5_1539_sample_start_] 
        $T[R_iNsTr_5_1539_sample_completed_] 
        $T[R_iNsTr_5_1539_update_start_] 
        $T[R_iNsTr_5_1539_update_completed_] 
        // implicit reference
        R_iNsTr_5_1539_sample_start_ <-& (ADD_u32_u32_1527_update_completed_)
        R_iNsTr_5_1539_sample_completed_ <-& (R_iNsTr_5_1539_sample_start_)
        R_iNsTr_5_1539_update_start_ <-& (R_iNsTr_5_1539_sample_completed_)
        R_iNsTr_5_1539_update_completed_ <-& (R_iNsTr_5_1539_update_start_)
        MUX_1540_sample_start_ <-& (R_iNsTr_6_1536_update_completed_)
        MUX_1540_sample_start_ <-& (R_iNsTr_5_1539_update_completed_)
        ;;[MUX_1540_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1540_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1540_sample_start_ &-> (MUX_1540_start)
        MUX_1540_sample_completed_ <-& (MUX_1540_start)
        MUX_1540_update_start_ &-> (MUX_1540_complete)
        MUX_1540_update_completed_ <-& (MUX_1540_complete)
        MUX_1540_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_7
        // iNsTr_7
        // implicit reference
        // 		DDCALCbuff_ptr := iNsTr_7
        //  file prog.linked.opt.aa, line 573
        // Source expression
        // iNsTr_7
        $T[R_iNsTr_7_1543_sample_start_] 
        $T[R_iNsTr_7_1543_sample_completed_] 
        $T[R_iNsTr_7_1543_update_start_] 
        $T[R_iNsTr_7_1543_update_completed_] 
        // implicit reference
        R_iNsTr_7_1543_sample_start_ <-& (MUX_1540_update_completed_)
        R_iNsTr_7_1543_sample_completed_ <-& (R_iNsTr_7_1543_sample_start_)
        R_iNsTr_7_1543_update_start_ <-& (R_iNsTr_7_1543_sample_completed_)
        R_iNsTr_7_1543_update_completed_ <-& (R_iNsTr_7_1543_update_start_)
        // Target expression
        // (as target) DDCALCbuff_ptr
        $T[STORE_DDCALCbuff_ptr_1542_sample_start_] 
        $T[STORE_DDCALCbuff_ptr_1542_sample_completed_] 
        $T[STORE_DDCALCbuff_ptr_1542_update_start_] 
        $T[STORE_DDCALCbuff_ptr_1542_update_completed_] 
        // DDCALCbuff_ptr
        $T[STORE_DDCALCbuff_ptr_1542_word_address_calculated] 
        $T[STORE_DDCALCbuff_ptr_1542_root_address_calculated] 
        STORE_DDCALCbuff_ptr_1542_word_address_calculated <-& (STORE_DDCALCbuff_ptr_1542_root_address_calculated)
        ;;[STORE_DDCALCbuff_ptr_1542_Sample] 
        {
          ;;[STORE_DDCALCbuff_ptr_1542_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_DDCALCbuff_ptr_1542_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_DDCALCbuff_ptr_1542_sample_start_ <-& (STORE_DDCALCbuff_ptr_1542_word_address_calculated)
        STORE_DDCALCbuff_ptr_1542_sample_start_ &-> (STORE_DDCALCbuff_ptr_1542_Sample)
        STORE_DDCALCbuff_ptr_1542_sample_completed_ <-& (STORE_DDCALCbuff_ptr_1542_Sample)
        STORE_DDCALCbuff_ptr_1542_sample_completed_ &-> ($null)
        STORE_DDCALCbuff_ptr_1542_update_start_ &-> (STORE_DDCALCbuff_ptr_1542_Update)
        STORE_DDCALCbuff_ptr_1542_update_completed_ <-& (STORE_DDCALCbuff_ptr_1542_Update)
        STORE_DDCALCbuff_ptr_1542_sample_start_ <-& (R_iNsTr_7_1543_update_completed_)
        // load-store dependencies..
        $T [ptr_deref_1512_ptr_deref_1520_delay] $delay
        // ->(iNsTr_1)(load) -> ->(iNsTr_1)(store)
        ptr_deref_1520_sample_start_ <-& (ptr_deref_1512_ptr_deref_1520_delay)
        ptr_deref_1512_ptr_deref_1520_delay <-& (ptr_deref_1512_sample_completed_)
        $T [LOAD_DDCALCbuff_ptr_1503_STORE_DDCALCbuff_ptr_1542_delay] $delay
        // DDCALCbuff_ptr(load) -> DDCALCbuff_ptr(store)
        STORE_DDCALCbuff_ptr_1542_sample_start_ <-& (LOAD_DDCALCbuff_ptr_1503_STORE_DDCALCbuff_ptr_1542_delay)
        LOAD_DDCALCbuff_ptr_1503_STORE_DDCALCbuff_ptr_1542_delay <-& (LOAD_DDCALCbuff_ptr_1503_sample_completed_)
      }
      assign_stmt_1504_to_assign_stmt_1544__entry__ |-> (assign_stmt_1504_to_assign_stmt_1544)
      assign_stmt_1504_to_assign_stmt_1544__exit__ <-| (assign_stmt_1504_to_assign_stmt_1544)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 575
      //---------------------   merge statement  file prog.linked.opt.aa, line 575  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_1546_PhiReqMerge] 
      merge_stmt_1546_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_1546_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1546_PhiReqMerge |-> (merge_stmt_1546_PhiAck)
      merge_stmt_1546__exit__  <-| (merge_stmt_1546_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 575  --------------------------
      assign_stmt_1504_to_assign_stmt_1544__entry__ <-| (branch_block_stmt_1501__entry__)
      return__ <-| (assign_stmt_1504_to_assign_stmt_1544__exit__)
      merge_stmt_1546__exit__ |-> (branch_block_stmt_1501__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %ddCalc%body%
    //  file prog.linked.opt.aa, line 575
    // constant-object-declarations for block %ddCalc%body
    //  file prog.linked.opt.aa, line 563
    // constant-object-declarations for block %ddCalc
    //  file prog.linked.opt.aa, line 558
    // constant-declarations for block %ddCalc%body
    //  file prog.linked.opt.aa, line 563
    // DDCALCbuff_ptr
    $constant $W[LOAD_DDCALCbuff_ptr_1503_word_address_0] : $pointer<memory_space_1> := _b0
    // @(DDCALCbuff[iNsTr_0])
    $constant $W[array_obj_ref_1507_resized_base_address] : $int<2> := _b00// 0
    $constant $W[array_obj_ref_1507_offset_scale_factor_0] : $int<2> := _b01// 1
    // ->(iNsTr_1)
    $constant $W[ptr_deref_1512_word_offset_0] : $int<2> := _b00// 0
    // ->(iNsTr_1)
    $constant $W[ptr_deref_1520_word_offset_0] : $int<2> := _b00// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1526_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000010  )
    $constant $W[type_cast_1532_wire_constant] : $int<32> := _b00000000000000000000000000000010// 2
    // ( $mux iNsTr_6 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_5 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_1538_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // DDCALCbuff_ptr
    $constant $W[STORE_DDCALCbuff_ptr_1542_word_address_0] : $pointer<memory_space_1> := _b0
    // constant-declarations for block %ddCalc%body%
    //  file prog.linked.opt.aa, line 575
    // block %ddCalc%body
    //  file prog.linked.opt.aa, line 563
    // 		iNsTr_0 := DDCALCbuff_ptr
    //  file prog.linked.opt.aa, line 565
    // DDCALCbuff_ptr
    $W[LOAD_DDCALCbuff_ptr_1503_data_0] : $int<32>
    // iNsTr_0
    $W[iNsTr_0_1504] : $int<32>
    // 		iNsTr_1 := @(DDCALCbuff[iNsTr_0])
    //  file prog.linked.opt.aa, line 566
    // @(DDCALCbuff[iNsTr_0])
    $intermediate $W[R_iNsTr_0_1506_resized] : $int<2>
    $intermediate $W[R_iNsTr_0_1506_scaled] : $int<2>
    $intermediate $W[array_obj_ref_1507_final_offset] : $int<2>
    $intermediate $W[array_obj_ref_1507_root_address] : $int<2>
    // iNsTr_1
    $W[iNsTr_1_1509] : $int<32>
    // 		iNsTr_2 := ->(iNsTr_1)
    //  file prog.linked.opt.aa, line 567
    // ->(iNsTr_1)
    $intermediate $W[ptr_deref_1512_resized_base_address] : $int<2>
    $intermediate $W[ptr_deref_1512_root_address] : $int<2>
    $W[ptr_deref_1512_word_address_0] : $pointer<memory_space_0>
    $W[ptr_deref_1512_data_0] : $int<32>
    // iNsTr_2
    $W[iNsTr_2_1513] : $int<32>
    // 		ret_val__ := (datum - iNsTr_2)
    //  file prog.linked.opt.aa, line 568
    // ret_val__
    // 		->(iNsTr_1) := datum
    //  file prog.linked.opt.aa, line 569
    // ->(iNsTr_1)
    $intermediate $W[ptr_deref_1520_wire] : $int<32>
    $intermediate $W[ptr_deref_1520_resized_base_address] : $int<2>
    $intermediate $W[ptr_deref_1520_root_address] : $int<2>
    $W[ptr_deref_1520_word_address_0] : $pointer<memory_space_0>
    $W[ptr_deref_1520_data_0] : $int<32>
    // 		iNsTr_5 := (iNsTr_0 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 570
    // iNsTr_5
    $W[iNsTr_5_1528] : $int<32>
    // 		iNsTr_6 := (iNsTr_5 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
    //  file prog.linked.opt.aa, line 571
    // iNsTr_6
    $W[iNsTr_6_1534] : $int<1>
    // 		iNsTr_7 := ( $mux iNsTr_6 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_5 ) 
    //  file prog.linked.opt.aa, line 572
    // iNsTr_7
    $W[iNsTr_7_1541] : $int<32>
    // 		DDCALCbuff_ptr := iNsTr_7
    //  file prog.linked.opt.aa, line 573
    // DDCALCbuff_ptr
    $constant $W[STORE_DDCALCbuff_ptr_1542_word_address_0] : $pointer<memory_space_1> := _b0
    $W[STORE_DDCALCbuff_ptr_1542_data_0] : $int<32>
    // datapath-instances for block %ddCalc%body
    //  file prog.linked.opt.aa, line 563
    // 		iNsTr_0 := DDCALCbuff_ptr
    //  file prog.linked.opt.aa, line 565
    // DDCALCbuff_ptr
    $load [LOAD_DDCALCbuff_ptr_1503_load_0] $from memory_space_1 (LOAD_DDCALCbuff_ptr_1503_word_address_0) (LOAD_DDCALCbuff_ptr_1503_data_0) 
    $delay LOAD_DDCALCbuff_ptr_1503_load_0 1
    &/ [LOAD_DDCALCbuff_ptr_1503_gather_scatter] (LOAD_DDCALCbuff_ptr_1503_data_0) (iNsTr_0_1504) 
    // 		iNsTr_1 := @(DDCALCbuff[iNsTr_0])
    //  file prog.linked.opt.aa, line 566
    &/ [array_obj_ref_1507_index_0_resize] (iNsTr_0_1504) (R_iNsTr_0_1506_resized) 
    &/ [array_obj_ref_1507_index_0_rename] (R_iNsTr_0_1506_resized) (R_iNsTr_0_1506_scaled) 
    &/ [array_obj_ref_1507_index_offset] (R_iNsTr_0_1506_scaled) (array_obj_ref_1507_final_offset) 
    &/ [array_obj_ref_1507_root_address_inst] (array_obj_ref_1507_final_offset) (array_obj_ref_1507_root_address) 
    # := [addr_of_1508_final_reg] (array_obj_ref_1507_root_address) (iNsTr_1_1509) 
    // 		iNsTr_2 := ->(iNsTr_1)
    //  file prog.linked.opt.aa, line 567
    // ->(iNsTr_1)
    &/ [ptr_deref_1512_base_resize] (iNsTr_1_1509) (ptr_deref_1512_resized_base_address) 
    &/ [ptr_deref_1512_root_address_inst] (ptr_deref_1512_resized_base_address) (ptr_deref_1512_root_address) 
    &/ [ptr_deref_1512_addr_0] (ptr_deref_1512_root_address) (ptr_deref_1512_word_address_0) 
    $load [ptr_deref_1512_load_0] $from memory_space_0 (ptr_deref_1512_word_address_0) (ptr_deref_1512_data_0) 
    $delay ptr_deref_1512_load_0 2
    &/ [ptr_deref_1512_gather_scatter] (ptr_deref_1512_data_0) (iNsTr_2_1513) 
    // 		ret_val__ := (datum - iNsTr_2)
    //  file prog.linked.opt.aa, line 568
    // (datum - iNsTr_2)
    -[SUB_u32_u32_1517_inst] (datum iNsTr_2_1513) (ret_val__) 
    $delay SUB_u32_u32_1517_inst 1
    // 		->(iNsTr_1) := datum
    //  file prog.linked.opt.aa, line 569
    // ->(iNsTr_1)
    &/ [ptr_deref_1520_base_resize] (iNsTr_1_1509) (ptr_deref_1520_resized_base_address) 
    &/ [ptr_deref_1520_root_address_inst] (ptr_deref_1520_resized_base_address) (ptr_deref_1520_root_address) 
    &/ [ptr_deref_1520_addr_0] (ptr_deref_1520_root_address) (ptr_deref_1520_word_address_0) 
    $store [ptr_deref_1520_store_0] $to memory_space_0 (ptr_deref_1520_word_address_0 ptr_deref_1520_data_0) 
    $delay ptr_deref_1520_store_0 2
    &/ [ptr_deref_1520_gather_scatter] (datum) (ptr_deref_1520_data_0) 
    // 		iNsTr_5 := (iNsTr_0 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 570
    // (iNsTr_0 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_1527_inst] (iNsTr_0_1504 type_cast_1526_wire_constant) (iNsTr_5_1528) 
    $delay ADD_u32_u32_1527_inst 1
    // 		iNsTr_6 := (iNsTr_5 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
    //  file prog.linked.opt.aa, line 571
    // (iNsTr_5 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
    ==[EQ_u32_u1_1533_inst] (iNsTr_5_1528 type_cast_1532_wire_constant) (iNsTr_6_1534) 
    $delay EQ_u32_u1_1533_inst 1
    // 		iNsTr_7 := ( $mux iNsTr_6 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_5 ) 
    //  file prog.linked.opt.aa, line 572
    // ( $mux iNsTr_6 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_5 ) 
    ? [MUX_1540_inst] (iNsTr_6_1534 type_cast_1538_wire_constant iNsTr_5_1528) (iNsTr_7_1541) 
    // 		DDCALCbuff_ptr := iNsTr_7
    //  file prog.linked.opt.aa, line 573
    // DDCALCbuff_ptr
    $store [STORE_DDCALCbuff_ptr_1542_store_0] $to memory_space_1 (STORE_DDCALCbuff_ptr_1542_word_address_0 STORE_DDCALCbuff_ptr_1542_data_0) 
    $delay STORE_DDCALCbuff_ptr_1542_store_0 1
    &/ [STORE_DDCALCbuff_ptr_1542_gather_scatter] (iNsTr_7_1541) (STORE_DDCALCbuff_ptr_1542_data_0) 
  }
  // end data-path
  // 		iNsTr_0 := DDCALCbuff_ptr
  //  file prog.linked.opt.aa, line 565
  // DDCALCbuff_ptr
  LOAD_DDCALCbuff_ptr_1503_gather_scatter <=> (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/LOAD_DDCALCbuff_ptr_1503_Update/LOAD_DDCALCbuff_ptr_1503_Merge/merge_req) (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/LOAD_DDCALCbuff_ptr_1503_Update/LOAD_DDCALCbuff_ptr_1503_Merge/merge_ack)
  LOAD_DDCALCbuff_ptr_1503_load_0 <=> (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/LOAD_DDCALCbuff_ptr_1503_Sample/word_access_start/word_0/rr branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/LOAD_DDCALCbuff_ptr_1503_Update/word_access_complete/word_0/cr) (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/LOAD_DDCALCbuff_ptr_1503_Sample/word_access_start/word_0/ra branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/LOAD_DDCALCbuff_ptr_1503_Update/word_access_complete/word_0/ca)
  // 		iNsTr_1 := @(DDCALCbuff[iNsTr_0])
  //  file prog.linked.opt.aa, line 566
  array_obj_ref_1507_index_0_resize <=> (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/array_obj_ref_1507_index_resize_0/index_resize_req) (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/array_obj_ref_1507_index_resize_0/index_resize_ack)
  array_obj_ref_1507_index_0_rename <=> (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/array_obj_ref_1507_index_scale_0/scale_rename_req) (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/array_obj_ref_1507_index_scale_0/scale_rename_ack)
  array_obj_ref_1507_index_offset <=> (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/array_obj_ref_1507_final_index_sum_regn/req) (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/array_obj_ref_1507_final_index_sum_regn/ack)
  array_obj_ref_1507_root_address_inst <=> (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/array_obj_ref_1507_base_plus_offset/sum_rename_req) (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/array_obj_ref_1507_base_plus_offset/sum_rename_ack)
  addr_of_1508_final_reg <=> (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/addr_of_1508_request/req branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/addr_of_1508_complete/req) (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/addr_of_1508_request/ack branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/addr_of_1508_complete/ack)
  // 		iNsTr_2 := ->(iNsTr_1)
  //  file prog.linked.opt.aa, line 567
  ptr_deref_1512_base_resize <=> (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/ptr_deref_1512_base_addr_resize/base_resize_req) (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/ptr_deref_1512_base_addr_resize/base_resize_ack)
  ptr_deref_1512_root_address_inst <=> (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/ptr_deref_1512_base_plus_offset/sum_rename_req) (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/ptr_deref_1512_base_plus_offset/sum_rename_ack)
  ptr_deref_1512_addr_0 <=> (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/ptr_deref_1512_word_addrgen/root_register_req) (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/ptr_deref_1512_word_addrgen/root_register_ack)
  ptr_deref_1512_gather_scatter <=> (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/ptr_deref_1512_Update/ptr_deref_1512_Merge/merge_req) (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/ptr_deref_1512_Update/ptr_deref_1512_Merge/merge_ack)
  ptr_deref_1512_load_0 <=> (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/ptr_deref_1512_Sample/word_access_start/word_0/rr branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/ptr_deref_1512_Update/word_access_complete/word_0/cr) (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/ptr_deref_1512_Sample/word_access_start/word_0/ra branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/ptr_deref_1512_Update/word_access_complete/word_0/ca)
  // 		ret_val__ := (datum - iNsTr_2)
  //  file prog.linked.opt.aa, line 568
  // (datum - iNsTr_2)
  SUB_u32_u32_1517_inst <=> (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/SUB_u32_u32_1517_Sample/rr branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/SUB_u32_u32_1517_Update/cr) (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/SUB_u32_u32_1517_Sample/ra branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/SUB_u32_u32_1517_Update/ca)
  // 		->(iNsTr_1) := datum
  //  file prog.linked.opt.aa, line 569
  ptr_deref_1520_base_resize <=> (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/ptr_deref_1520_base_addr_resize/base_resize_req) (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/ptr_deref_1520_base_addr_resize/base_resize_ack)
  ptr_deref_1520_root_address_inst <=> (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/ptr_deref_1520_base_plus_offset/sum_rename_req) (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/ptr_deref_1520_base_plus_offset/sum_rename_ack)
  ptr_deref_1520_addr_0 <=> (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/ptr_deref_1520_word_addrgen/root_register_req) (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/ptr_deref_1520_word_addrgen/root_register_ack)
  ptr_deref_1520_gather_scatter <=> (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/ptr_deref_1520_Sample/ptr_deref_1520_Split/split_req) (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/ptr_deref_1520_Sample/ptr_deref_1520_Split/split_ack)
  ptr_deref_1520_store_0 <=> (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/ptr_deref_1520_Sample/word_access_start/word_0/rr branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/ptr_deref_1520_Update/word_access_complete/word_0/cr) (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/ptr_deref_1520_Sample/word_access_start/word_0/ra branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/ptr_deref_1520_Update/word_access_complete/word_0/ca)
  // 		iNsTr_5 := (iNsTr_0 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 570
  // (iNsTr_0 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_1527_inst <=> (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/ADD_u32_u32_1527_Sample/rr branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/ADD_u32_u32_1527_Update/cr) (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/ADD_u32_u32_1527_Sample/ra branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/ADD_u32_u32_1527_Update/ca)
  // 		iNsTr_6 := (iNsTr_5 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
  //  file prog.linked.opt.aa, line 571
  // (iNsTr_5 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
  EQ_u32_u1_1533_inst <=> (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/EQ_u32_u1_1533_Sample/rr branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/EQ_u32_u1_1533_Update/cr) (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/EQ_u32_u1_1533_Sample/ra branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/EQ_u32_u1_1533_Update/ca)
  // 		iNsTr_7 := ( $mux iNsTr_6 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_5 ) 
  //  file prog.linked.opt.aa, line 572
  // ( $mux iNsTr_6 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_5 ) 
  MUX_1540_inst <=> (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/MUX_1540_start/req branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/MUX_1540_complete/req) (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/MUX_1540_start/ack branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/MUX_1540_complete/ack)
  // 		DDCALCbuff_ptr := iNsTr_7
  //  file prog.linked.opt.aa, line 573
  // DDCALCbuff_ptr
  STORE_DDCALCbuff_ptr_1542_gather_scatter <=> (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/STORE_DDCALCbuff_ptr_1542_Sample/STORE_DDCALCbuff_ptr_1542_Split/split_req) (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/STORE_DDCALCbuff_ptr_1542_Sample/STORE_DDCALCbuff_ptr_1542_Split/split_ack)
  STORE_DDCALCbuff_ptr_1542_store_0 <=> (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/STORE_DDCALCbuff_ptr_1542_Sample/word_access_start/word_0/rr branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/STORE_DDCALCbuff_ptr_1542_Update/word_access_complete/word_0/cr) (branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/STORE_DDCALCbuff_ptr_1542_Sample/word_access_start/word_0/ra branch_block_stmt_1501/assign_stmt_1504_to_assign_stmt_1544/STORE_DDCALCbuff_ptr_1542_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 575
}
$module [deriv] 
{
  // pipe-declarations for block %deriv
  //  file prog.linked.opt.aa, line 579
  // pipe-declarations for block %deriv%body
  //  file prog.linked.opt.aa, line 584
  // pipe-declarations for block %deriv%body%
  //  file prog.linked.opt.aa, line 601
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_1550] // Branch Block  file prog.linked.opt.aa, line 584
    {
      $P [branch_block_stmt_1550__entry__]
      branch_block_stmt_1550__entry__ <-| ($entry)
      $P [branch_block_stmt_1550__exit__]
      branch_block_stmt_1550__exit__ |-> ($exit)
      $P [assign_stmt_1553__entry__] 
      $P [assign_stmt_1553__exit__] 
      $P [assign_stmt_1556_to_assign_stmt_1616__entry__] 
      $P [assign_stmt_1556_to_assign_stmt_1616__exit__] 
      $P [assign_stmt_1619__entry__] 
      $P [assign_stmt_1619__exit__] 
      $P [return__]
      $P [merge_stmt_1621__exit__] 
      ::[assign_stmt_1553] 
      {
        // 		iNsTr_1 := HPout_pipe
        //  file prog.linked.opt.aa, line 586
        // Source expression
        // HPout_pipe
        $T[RPIPE_HPout_pipe_1552_sample_start_] 
        $T[RPIPE_HPout_pipe_1552_sample_completed_] 
        $T[RPIPE_HPout_pipe_1552_update_start_] 
        $T[RPIPE_HPout_pipe_1552_update_completed_] 
        ;;[RPIPE_HPout_pipe_1552_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_HPout_pipe_1552_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_HPout_pipe_1552_sample_start_ &-> (RPIPE_HPout_pipe_1552_Sample)
        RPIPE_HPout_pipe_1552_sample_completed_ <-& (RPIPE_HPout_pipe_1552_Sample)
        RPIPE_HPout_pipe_1552_sample_completed_ &-> ($null)
        RPIPE_HPout_pipe_1552_update_start_ &-> (RPIPE_HPout_pipe_1552_Update)
        RPIPE_HPout_pipe_1552_update_completed_ <-& (RPIPE_HPout_pipe_1552_Update)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // barrier: 		iNsTr_1 := HPout_pipe
        // load-store dependencies..
        // pipe read/write dependencies for pipe HPout_pipe
      }
      assign_stmt_1553__entry__ |-> (assign_stmt_1553)
      assign_stmt_1553__exit__ <-| (assign_stmt_1553)
      ::[assign_stmt_1556_to_assign_stmt_1616] 
      {
        // 		iNsTr_2 := DERIVbuff_ptr
        //  file prog.linked.opt.aa, line 587
        // Source expression
        // DERIVbuff_ptr
        $T[LOAD_DERIVbuff_ptr_1555_sample_start_] 
        $T[LOAD_DERIVbuff_ptr_1555_sample_completed_] 
        $T[LOAD_DERIVbuff_ptr_1555_update_start_] 
        $T[LOAD_DERIVbuff_ptr_1555_update_completed_] 
        $T[LOAD_DERIVbuff_ptr_1555_sample_start_] 
        $T[LOAD_DERIVbuff_ptr_1555_sample_completed_] 
        $T[LOAD_DERIVbuff_ptr_1555_update_start_] 
        $T[LOAD_DERIVbuff_ptr_1555_update_completed_] 
        $T[LOAD_DERIVbuff_ptr_1555_word_address_calculated] 
        $T[LOAD_DERIVbuff_ptr_1555_root_address_calculated] 
        LOAD_DERIVbuff_ptr_1555_word_address_calculated <-& (LOAD_DERIVbuff_ptr_1555_root_address_calculated)
        ;;[LOAD_DERIVbuff_ptr_1555_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_DERIVbuff_ptr_1555_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_DERIVbuff_ptr_1555_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_DERIVbuff_ptr_1555_sample_start_ <-& (LOAD_DERIVbuff_ptr_1555_word_address_calculated)
        LOAD_DERIVbuff_ptr_1555_sample_start_ &-> (LOAD_DERIVbuff_ptr_1555_Sample)
        LOAD_DERIVbuff_ptr_1555_sample_completed_ <-& (LOAD_DERIVbuff_ptr_1555_Sample)
        LOAD_DERIVbuff_ptr_1555_sample_completed_ &-> ($null)
        LOAD_DERIVbuff_ptr_1555_update_start_ &-> (LOAD_DERIVbuff_ptr_1555_Update)
        LOAD_DERIVbuff_ptr_1555_update_completed_ <-& (LOAD_DERIVbuff_ptr_1555_Update)
        // Target expression
        // (as target) iNsTr_2
        // iNsTr_2
        // implicit reference
        // 		iNsTr_3 := @(DERIVbuff[iNsTr_2])
        //  file prog.linked.opt.aa, line 588
        // Source expression
        // @(DERIVbuff[iNsTr_2])
        $T[addr_of_1560_sample_start_] 
        $T[addr_of_1560_sample_completed_] 
        $T[addr_of_1560_update_start_] 
        $T[addr_of_1560_update_completed_] 
        $T[array_obj_ref_1559_root_address_calculated] 
        $T[array_obj_ref_1559_offset_calculated] 
        $T[array_obj_ref_1559_index_resized_0] 
        $T[array_obj_ref_1559_index_scaled_0] 
        // iNsTr_2
        $T[R_iNsTr_2_1558_sample_start_] 
        $T[R_iNsTr_2_1558_sample_completed_] 
        $T[R_iNsTr_2_1558_update_start_] 
        $T[R_iNsTr_2_1558_update_completed_] 
        // implicit reference
        R_iNsTr_2_1558_sample_start_ <-& (LOAD_DERIVbuff_ptr_1555_update_completed_)
        R_iNsTr_2_1558_sample_completed_ <-& (R_iNsTr_2_1558_sample_start_)
        R_iNsTr_2_1558_update_start_ <-& (R_iNsTr_2_1558_sample_completed_)
        R_iNsTr_2_1558_update_completed_ <-& (R_iNsTr_2_1558_update_start_)
        ;;[array_obj_ref_1559_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        R_iNsTr_2_1558_update_completed_ &-> (array_obj_ref_1559_index_resize_0)
        array_obj_ref_1559_index_resized_0 <-& (array_obj_ref_1559_index_resize_0)
        ;;[array_obj_ref_1559_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_1559_index_resized_0 &-> (array_obj_ref_1559_index_scale_0)
        array_obj_ref_1559_index_scaled_0 <-& (array_obj_ref_1559_index_scale_0)
        ;;[array_obj_ref_1559_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_1559_index_scaled_0 &-> (array_obj_ref_1559_final_index_sum_regn)
        array_obj_ref_1559_offset_calculated <-& (array_obj_ref_1559_final_index_sum_regn)
        ;;[array_obj_ref_1559_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_1559_offset_calculated &-> (array_obj_ref_1559_base_plus_offset)
        array_obj_ref_1559_root_address_calculated <-& (array_obj_ref_1559_base_plus_offset)
        ;;[addr_of_1560_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_1560_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_1560_sample_start_ <-& (array_obj_ref_1559_root_address_calculated)
        addr_of_1560_sample_start_ &-> (addr_of_1560_request)
        addr_of_1560_sample_completed_ <-& (addr_of_1560_request)
        addr_of_1560_update_start_ &-> (addr_of_1560_complete)
        addr_of_1560_update_completed_ <-& (addr_of_1560_complete)
        // Target expression
        // (as target) iNsTr_3
        // iNsTr_3
        // implicit reference
        // 		iNsTr_4 := ->(iNsTr_3)
        //  file prog.linked.opt.aa, line 589
        // Source expression
        // ->(iNsTr_3)
        $T[ptr_deref_1564_sample_start_] 
        $T[ptr_deref_1564_sample_completed_] 
        $T[ptr_deref_1564_update_start_] 
        $T[ptr_deref_1564_update_completed_] 
        $T[ptr_deref_1564_base_address_calculated] 
        // iNsTr_3
        $T[R_iNsTr_3_1563_sample_start_] 
        $T[R_iNsTr_3_1563_sample_completed_] 
        $T[R_iNsTr_3_1563_update_start_] 
        $T[R_iNsTr_3_1563_update_completed_] 
        // implicit reference
        R_iNsTr_3_1563_sample_start_ <-& (addr_of_1560_update_completed_)
        R_iNsTr_3_1563_sample_completed_ <-& (R_iNsTr_3_1563_sample_start_)
        R_iNsTr_3_1563_update_start_ <-& (R_iNsTr_3_1563_sample_completed_)
        R_iNsTr_3_1563_update_completed_ <-& (R_iNsTr_3_1563_update_start_)
        $T[ptr_deref_1564_word_address_calculated] 
        $T[ptr_deref_1564_root_address_calculated] 
        $T[ptr_deref_1564_base_address_resized] 
        ;;[ptr_deref_1564_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_1564_base_address_calculated &-> (ptr_deref_1564_base_addr_resize)
        ptr_deref_1564_base_address_resized <-& (ptr_deref_1564_base_addr_resize)
        ;;[ptr_deref_1564_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_1564_base_address_resized &-> (ptr_deref_1564_base_plus_offset)
        ptr_deref_1564_root_address_calculated <-& (ptr_deref_1564_base_plus_offset)
        ;;[ptr_deref_1564_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_1564_root_address_calculated &-> (ptr_deref_1564_word_addrgen)
        ptr_deref_1564_word_address_calculated <-& (ptr_deref_1564_word_addrgen)
        ;;[ptr_deref_1564_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_1564_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_1564_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_1564_sample_start_ <-& (ptr_deref_1564_word_address_calculated)
        ptr_deref_1564_sample_start_ &-> (ptr_deref_1564_Sample)
        ptr_deref_1564_sample_completed_ <-& (ptr_deref_1564_Sample)
        ptr_deref_1564_sample_completed_ &-> ($null)
        ptr_deref_1564_update_start_ &-> (ptr_deref_1564_Update)
        ptr_deref_1564_update_completed_ <-& (ptr_deref_1564_Update)
        ptr_deref_1564_base_address_calculated <-& (R_iNsTr_3_1563_update_completed_)
        ptr_deref_1564_sample_start_ <-& (ptr_deref_1564_base_address_calculated)
        // Target expression
        // (as target) iNsTr_4
        // iNsTr_4
        // implicit reference
        // 		iNsTr_5 := (iNsTr_1 - iNsTr_4)
        //  file prog.linked.opt.aa, line 590
        // Source expression
        // (iNsTr_1 - iNsTr_4)
        $T[SUB_u32_u32_1569_sample_start_] 
        $T[SUB_u32_u32_1569_sample_completed_] 
        $T[SUB_u32_u32_1569_update_start_] 
        $T[SUB_u32_u32_1569_update_completed_] 
        // iNsTr_1
        $T[R_iNsTr_1_1567_sample_start_] 
        $T[R_iNsTr_1_1567_sample_completed_] 
        $T[R_iNsTr_1_1567_update_start_] 
        $T[R_iNsTr_1_1567_update_completed_] 
        // implicit reference
        R_iNsTr_1_1567_sample_start_ <-& ($entry)
        R_iNsTr_1_1567_sample_completed_ <-& (R_iNsTr_1_1567_sample_start_)
        R_iNsTr_1_1567_update_start_ <-& (R_iNsTr_1_1567_sample_completed_)
        R_iNsTr_1_1567_update_completed_ <-& (R_iNsTr_1_1567_update_start_)
        // iNsTr_4
        $T[R_iNsTr_4_1568_sample_start_] 
        $T[R_iNsTr_4_1568_sample_completed_] 
        $T[R_iNsTr_4_1568_update_start_] 
        $T[R_iNsTr_4_1568_update_completed_] 
        // implicit reference
        R_iNsTr_4_1568_sample_start_ <-& (ptr_deref_1564_update_completed_)
        R_iNsTr_4_1568_sample_completed_ <-& (R_iNsTr_4_1568_sample_start_)
        R_iNsTr_4_1568_update_start_ <-& (R_iNsTr_4_1568_sample_completed_)
        R_iNsTr_4_1568_update_completed_ <-& (R_iNsTr_4_1568_update_start_)
        SUB_u32_u32_1569_sample_start_ <-& (R_iNsTr_1_1567_update_completed_)
        SUB_u32_u32_1569_sample_start_ <-& (R_iNsTr_4_1568_update_completed_)
        ;;[SUB_u32_u32_1569_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_1569_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_1569_sample_start_ &-> (SUB_u32_u32_1569_Sample)
        SUB_u32_u32_1569_sample_completed_ <-& (SUB_u32_u32_1569_Sample)
        SUB_u32_u32_1569_sample_completed_ &-> ($null)
        SUB_u32_u32_1569_update_start_ &-> (SUB_u32_u32_1569_Update)
        SUB_u32_u32_1569_update_completed_ <-& (SUB_u32_u32_1569_Update)
        // Target expression
        // (as target) iNsTr_5
        // iNsTr_5
        // implicit reference
        // 		ispos := (($bitcast ($int<32>) iNsTr_5 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ))
        //  file prog.linked.opt.aa, line 591
        // Source expression
        // (($bitcast ($int<32>) iNsTr_5 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ))
        $T[SGT_i32_u1_1577_sample_start_] 
        $T[SGT_i32_u1_1577_sample_completed_] 
        $T[SGT_i32_u1_1577_update_start_] 
        $T[SGT_i32_u1_1577_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_5 )
        $T[type_cast_1573_sample_start_] 
        $T[type_cast_1573_sample_completed_] 
        $T[type_cast_1573_update_start_] 
        $T[type_cast_1573_update_completed_] 
        // iNsTr_5
        $T[R_iNsTr_5_1572_sample_start_] 
        $T[R_iNsTr_5_1572_sample_completed_] 
        $T[R_iNsTr_5_1572_update_start_] 
        $T[R_iNsTr_5_1572_update_completed_] 
        // implicit reference
        R_iNsTr_5_1572_sample_start_ <-& (SUB_u32_u32_1569_update_completed_)
        R_iNsTr_5_1572_sample_completed_ <-& (R_iNsTr_5_1572_sample_start_)
        R_iNsTr_5_1572_update_start_ <-& (R_iNsTr_5_1572_sample_completed_)
        R_iNsTr_5_1572_update_completed_ <-& (R_iNsTr_5_1572_update_start_)
        type_cast_1573_sample_start_ <-& (R_iNsTr_5_1572_update_completed_)
        ;;[type_cast_1573_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1573_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1573_sample_start_ &-> (type_cast_1573_Sample)
        type_cast_1573_sample_completed_ <-& (type_cast_1573_Sample)
        type_cast_1573_sample_completed_ &-> ($null)
        type_cast_1573_update_start_ &-> (type_cast_1573_Update)
        type_cast_1573_update_completed_ <-& (type_cast_1573_Update)
        // flow-through
        type_cast_1573_update_start_ <-& (type_cast_1573_sample_completed_)
        SGT_i32_u1_1577_sample_start_ <-& (type_cast_1573_update_completed_)
        ;;[SGT_i32_u1_1577_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_1577_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_1577_sample_start_ &-> (SGT_i32_u1_1577_Sample)
        SGT_i32_u1_1577_sample_completed_ <-& (SGT_i32_u1_1577_Sample)
        SGT_i32_u1_1577_sample_completed_ &-> ($null)
        SGT_i32_u1_1577_update_start_ &-> (SGT_i32_u1_1577_Update)
        SGT_i32_u1_1577_update_completed_ <-& (SGT_i32_u1_1577_Update)
        // Target expression
        // (as target) ispos
        // ispos
        // implicit reference
        // 		neg := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_5)
        //  file prog.linked.opt.aa, line 592
        // Source expression
        // (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_5)
        $T[SUB_u32_u32_1583_sample_start_] 
        $T[SUB_u32_u32_1583_sample_completed_] 
        $T[SUB_u32_u32_1583_update_start_] 
        $T[SUB_u32_u32_1583_update_completed_] 
        // iNsTr_5
        $T[R_iNsTr_5_1582_sample_start_] 
        $T[R_iNsTr_5_1582_sample_completed_] 
        $T[R_iNsTr_5_1582_update_start_] 
        $T[R_iNsTr_5_1582_update_completed_] 
        // implicit reference
        R_iNsTr_5_1582_sample_start_ <-& (SUB_u32_u32_1569_update_completed_)
        R_iNsTr_5_1582_sample_completed_ <-& (R_iNsTr_5_1582_sample_start_)
        R_iNsTr_5_1582_update_start_ <-& (R_iNsTr_5_1582_sample_completed_)
        R_iNsTr_5_1582_update_completed_ <-& (R_iNsTr_5_1582_update_start_)
        SUB_u32_u32_1583_sample_start_ <-& (R_iNsTr_5_1582_update_completed_)
        ;;[SUB_u32_u32_1583_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_1583_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_1583_sample_start_ &-> (SUB_u32_u32_1583_Sample)
        SUB_u32_u32_1583_sample_completed_ <-& (SUB_u32_u32_1583_Sample)
        SUB_u32_u32_1583_sample_completed_ &-> ($null)
        SUB_u32_u32_1583_update_start_ &-> (SUB_u32_u32_1583_Update)
        SUB_u32_u32_1583_update_completed_ <-& (SUB_u32_u32_1583_Update)
        // Target expression
        // (as target) neg
        // neg
        // implicit reference
        // 		iNsTr_6 := ( $mux ispos iNsTr_5  neg ) 
        //  file prog.linked.opt.aa, line 593
        // Source expression
        // ( $mux ispos iNsTr_5  neg ) 
        $T[MUX_1589_sample_start_] 
        $T[MUX_1589_sample_completed_] 
        $T[MUX_1589_update_start_] 
        $T[MUX_1589_update_completed_] 
        // ispos
        $T[R_ispos_1586_sample_start_] 
        $T[R_ispos_1586_sample_completed_] 
        $T[R_ispos_1586_update_start_] 
        $T[R_ispos_1586_update_completed_] 
        // implicit reference
        R_ispos_1586_sample_start_ <-& (SGT_i32_u1_1577_update_completed_)
        R_ispos_1586_sample_completed_ <-& (R_ispos_1586_sample_start_)
        R_ispos_1586_update_start_ <-& (R_ispos_1586_sample_completed_)
        R_ispos_1586_update_completed_ <-& (R_ispos_1586_update_start_)
        // iNsTr_5
        $T[R_iNsTr_5_1587_sample_start_] 
        $T[R_iNsTr_5_1587_sample_completed_] 
        $T[R_iNsTr_5_1587_update_start_] 
        $T[R_iNsTr_5_1587_update_completed_] 
        // implicit reference
        R_iNsTr_5_1587_sample_start_ <-& (SUB_u32_u32_1569_update_completed_)
        R_iNsTr_5_1587_sample_completed_ <-& (R_iNsTr_5_1587_sample_start_)
        R_iNsTr_5_1587_update_start_ <-& (R_iNsTr_5_1587_sample_completed_)
        R_iNsTr_5_1587_update_completed_ <-& (R_iNsTr_5_1587_update_start_)
        // neg
        $T[R_neg_1588_sample_start_] 
        $T[R_neg_1588_sample_completed_] 
        $T[R_neg_1588_update_start_] 
        $T[R_neg_1588_update_completed_] 
        // implicit reference
        R_neg_1588_sample_start_ <-& (SUB_u32_u32_1583_update_completed_)
        R_neg_1588_sample_completed_ <-& (R_neg_1588_sample_start_)
        R_neg_1588_update_start_ <-& (R_neg_1588_sample_completed_)
        R_neg_1588_update_completed_ <-& (R_neg_1588_update_start_)
        MUX_1589_sample_start_ <-& (R_ispos_1586_update_completed_)
        MUX_1589_sample_start_ <-& (R_iNsTr_5_1587_update_completed_)
        MUX_1589_sample_start_ <-& (R_neg_1588_update_completed_)
        ;;[MUX_1589_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1589_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1589_sample_start_ &-> (MUX_1589_start)
        MUX_1589_sample_completed_ <-& (MUX_1589_start)
        MUX_1589_update_start_ &-> (MUX_1589_complete)
        MUX_1589_update_completed_ <-& (MUX_1589_complete)
        MUX_1589_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_6
        // iNsTr_6
        // implicit reference
        // 		->(iNsTr_3) := iNsTr_1
        //  file prog.linked.opt.aa, line 594
        // Source expression
        // iNsTr_1
        $T[R_iNsTr_1_1593_sample_start_] 
        $T[R_iNsTr_1_1593_sample_completed_] 
        $T[R_iNsTr_1_1593_update_start_] 
        $T[R_iNsTr_1_1593_update_completed_] 
        // implicit reference
        R_iNsTr_1_1593_sample_start_ <-& ($entry)
        R_iNsTr_1_1593_sample_completed_ <-& (R_iNsTr_1_1593_sample_start_)
        R_iNsTr_1_1593_update_start_ <-& (R_iNsTr_1_1593_sample_completed_)
        R_iNsTr_1_1593_update_completed_ <-& (R_iNsTr_1_1593_update_start_)
        // Target expression
        // ->(iNsTr_3)
        $T[ptr_deref_1592_sample_start_] 
        $T[ptr_deref_1592_sample_completed_] 
        $T[ptr_deref_1592_update_start_] 
        $T[ptr_deref_1592_update_completed_] 
        $T[ptr_deref_1592_base_address_calculated] 
        // iNsTr_3
        $T[R_iNsTr_3_1591_sample_start_] 
        $T[R_iNsTr_3_1591_sample_completed_] 
        $T[R_iNsTr_3_1591_update_start_] 
        $T[R_iNsTr_3_1591_update_completed_] 
        // implicit reference
        R_iNsTr_3_1591_sample_start_ <-& (addr_of_1560_update_completed_)
        R_iNsTr_3_1591_sample_completed_ <-& (R_iNsTr_3_1591_sample_start_)
        R_iNsTr_3_1591_update_start_ <-& (R_iNsTr_3_1591_sample_completed_)
        R_iNsTr_3_1591_update_completed_ <-& (R_iNsTr_3_1591_update_start_)
        $T[ptr_deref_1592_word_address_calculated] 
        $T[ptr_deref_1592_root_address_calculated] 
        $T[ptr_deref_1592_base_address_resized] 
        ;;[ptr_deref_1592_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_1592_base_address_calculated &-> (ptr_deref_1592_base_addr_resize)
        ptr_deref_1592_base_address_resized <-& (ptr_deref_1592_base_addr_resize)
        ;;[ptr_deref_1592_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_1592_base_address_resized &-> (ptr_deref_1592_base_plus_offset)
        ptr_deref_1592_root_address_calculated <-& (ptr_deref_1592_base_plus_offset)
        ;;[ptr_deref_1592_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_1592_root_address_calculated &-> (ptr_deref_1592_word_addrgen)
        ptr_deref_1592_word_address_calculated <-& (ptr_deref_1592_word_addrgen)
        ;;[ptr_deref_1592_Sample] 
        {
          ;;[ptr_deref_1592_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_1592_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_1592_sample_start_ <-& (ptr_deref_1592_word_address_calculated)
        ptr_deref_1592_sample_start_ &-> (ptr_deref_1592_Sample)
        ptr_deref_1592_sample_completed_ <-& (ptr_deref_1592_Sample)
        ptr_deref_1592_sample_completed_ &-> ($null)
        ptr_deref_1592_update_start_ &-> (ptr_deref_1592_Update)
        ptr_deref_1592_update_completed_ <-& (ptr_deref_1592_Update)
        ptr_deref_1592_base_address_calculated <-& (R_iNsTr_3_1591_update_completed_)
        ptr_deref_1592_sample_start_ <-& (ptr_deref_1592_base_address_calculated)
        ptr_deref_1592_sample_start_ <-& (R_iNsTr_1_1593_update_completed_)
        // 		iNsTr_8 := (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 595
        // Source expression
        // (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_1599_sample_start_] 
        $T[ADD_u32_u32_1599_sample_completed_] 
        $T[ADD_u32_u32_1599_update_start_] 
        $T[ADD_u32_u32_1599_update_completed_] 
        // iNsTr_2
        $T[R_iNsTr_2_1596_sample_start_] 
        $T[R_iNsTr_2_1596_sample_completed_] 
        $T[R_iNsTr_2_1596_update_start_] 
        $T[R_iNsTr_2_1596_update_completed_] 
        // implicit reference
        R_iNsTr_2_1596_sample_start_ <-& (LOAD_DERIVbuff_ptr_1555_update_completed_)
        R_iNsTr_2_1596_sample_completed_ <-& (R_iNsTr_2_1596_sample_start_)
        R_iNsTr_2_1596_update_start_ <-& (R_iNsTr_2_1596_sample_completed_)
        R_iNsTr_2_1596_update_completed_ <-& (R_iNsTr_2_1596_update_start_)
        ADD_u32_u32_1599_sample_start_ <-& (R_iNsTr_2_1596_update_completed_)
        ;;[ADD_u32_u32_1599_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_1599_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_1599_sample_start_ &-> (ADD_u32_u32_1599_Sample)
        ADD_u32_u32_1599_sample_completed_ <-& (ADD_u32_u32_1599_Sample)
        ADD_u32_u32_1599_sample_completed_ &-> ($null)
        ADD_u32_u32_1599_update_start_ &-> (ADD_u32_u32_1599_Update)
        ADD_u32_u32_1599_update_completed_ <-& (ADD_u32_u32_1599_Update)
        // Target expression
        // (as target) iNsTr_8
        // iNsTr_8
        // implicit reference
        // 		iNsTr_9 := (iNsTr_8 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
        //  file prog.linked.opt.aa, line 596
        // Source expression
        // (iNsTr_8 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
        $T[EQ_u32_u1_1605_sample_start_] 
        $T[EQ_u32_u1_1605_sample_completed_] 
        $T[EQ_u32_u1_1605_update_start_] 
        $T[EQ_u32_u1_1605_update_completed_] 
        // iNsTr_8
        $T[R_iNsTr_8_1602_sample_start_] 
        $T[R_iNsTr_8_1602_sample_completed_] 
        $T[R_iNsTr_8_1602_update_start_] 
        $T[R_iNsTr_8_1602_update_completed_] 
        // implicit reference
        R_iNsTr_8_1602_sample_start_ <-& (ADD_u32_u32_1599_update_completed_)
        R_iNsTr_8_1602_sample_completed_ <-& (R_iNsTr_8_1602_sample_start_)
        R_iNsTr_8_1602_update_start_ <-& (R_iNsTr_8_1602_sample_completed_)
        R_iNsTr_8_1602_update_completed_ <-& (R_iNsTr_8_1602_update_start_)
        EQ_u32_u1_1605_sample_start_ <-& (R_iNsTr_8_1602_update_completed_)
        ;;[EQ_u32_u1_1605_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_1605_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_1605_sample_start_ &-> (EQ_u32_u1_1605_Sample)
        EQ_u32_u1_1605_sample_completed_ <-& (EQ_u32_u1_1605_Sample)
        EQ_u32_u1_1605_sample_completed_ &-> ($null)
        EQ_u32_u1_1605_update_start_ &-> (EQ_u32_u1_1605_Update)
        EQ_u32_u1_1605_update_completed_ <-& (EQ_u32_u1_1605_Update)
        // Target expression
        // (as target) iNsTr_9
        // iNsTr_9
        // implicit reference
        // 		iNsTr_10 := ( $mux iNsTr_9 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_8 ) 
        //  file prog.linked.opt.aa, line 597
        // Source expression
        // ( $mux iNsTr_9 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_8 ) 
        $T[MUX_1612_sample_start_] 
        $T[MUX_1612_sample_completed_] 
        $T[MUX_1612_update_start_] 
        $T[MUX_1612_update_completed_] 
        // iNsTr_9
        $T[R_iNsTr_9_1608_sample_start_] 
        $T[R_iNsTr_9_1608_sample_completed_] 
        $T[R_iNsTr_9_1608_update_start_] 
        $T[R_iNsTr_9_1608_update_completed_] 
        // implicit reference
        R_iNsTr_9_1608_sample_start_ <-& (EQ_u32_u1_1605_update_completed_)
        R_iNsTr_9_1608_sample_completed_ <-& (R_iNsTr_9_1608_sample_start_)
        R_iNsTr_9_1608_update_start_ <-& (R_iNsTr_9_1608_sample_completed_)
        R_iNsTr_9_1608_update_completed_ <-& (R_iNsTr_9_1608_update_start_)
        // iNsTr_8
        $T[R_iNsTr_8_1611_sample_start_] 
        $T[R_iNsTr_8_1611_sample_completed_] 
        $T[R_iNsTr_8_1611_update_start_] 
        $T[R_iNsTr_8_1611_update_completed_] 
        // implicit reference
        R_iNsTr_8_1611_sample_start_ <-& (ADD_u32_u32_1599_update_completed_)
        R_iNsTr_8_1611_sample_completed_ <-& (R_iNsTr_8_1611_sample_start_)
        R_iNsTr_8_1611_update_start_ <-& (R_iNsTr_8_1611_sample_completed_)
        R_iNsTr_8_1611_update_completed_ <-& (R_iNsTr_8_1611_update_start_)
        MUX_1612_sample_start_ <-& (R_iNsTr_9_1608_update_completed_)
        MUX_1612_sample_start_ <-& (R_iNsTr_8_1611_update_completed_)
        ;;[MUX_1612_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1612_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1612_sample_start_ &-> (MUX_1612_start)
        MUX_1612_sample_completed_ <-& (MUX_1612_start)
        MUX_1612_update_start_ &-> (MUX_1612_complete)
        MUX_1612_update_completed_ <-& (MUX_1612_complete)
        MUX_1612_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_10
        // iNsTr_10
        // implicit reference
        // 		DERIVbuff_ptr := iNsTr_10
        //  file prog.linked.opt.aa, line 598
        // Source expression
        // iNsTr_10
        $T[R_iNsTr_10_1615_sample_start_] 
        $T[R_iNsTr_10_1615_sample_completed_] 
        $T[R_iNsTr_10_1615_update_start_] 
        $T[R_iNsTr_10_1615_update_completed_] 
        // implicit reference
        R_iNsTr_10_1615_sample_start_ <-& (MUX_1612_update_completed_)
        R_iNsTr_10_1615_sample_completed_ <-& (R_iNsTr_10_1615_sample_start_)
        R_iNsTr_10_1615_update_start_ <-& (R_iNsTr_10_1615_sample_completed_)
        R_iNsTr_10_1615_update_completed_ <-& (R_iNsTr_10_1615_update_start_)
        // Target expression
        // (as target) DERIVbuff_ptr
        $T[STORE_DERIVbuff_ptr_1614_sample_start_] 
        $T[STORE_DERIVbuff_ptr_1614_sample_completed_] 
        $T[STORE_DERIVbuff_ptr_1614_update_start_] 
        $T[STORE_DERIVbuff_ptr_1614_update_completed_] 
        // DERIVbuff_ptr
        $T[STORE_DERIVbuff_ptr_1614_word_address_calculated] 
        $T[STORE_DERIVbuff_ptr_1614_root_address_calculated] 
        STORE_DERIVbuff_ptr_1614_word_address_calculated <-& (STORE_DERIVbuff_ptr_1614_root_address_calculated)
        ;;[STORE_DERIVbuff_ptr_1614_Sample] 
        {
          ;;[STORE_DERIVbuff_ptr_1614_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_DERIVbuff_ptr_1614_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_DERIVbuff_ptr_1614_sample_start_ <-& (STORE_DERIVbuff_ptr_1614_word_address_calculated)
        STORE_DERIVbuff_ptr_1614_sample_start_ &-> (STORE_DERIVbuff_ptr_1614_Sample)
        STORE_DERIVbuff_ptr_1614_sample_completed_ <-& (STORE_DERIVbuff_ptr_1614_Sample)
        STORE_DERIVbuff_ptr_1614_sample_completed_ &-> ($null)
        STORE_DERIVbuff_ptr_1614_update_start_ &-> (STORE_DERIVbuff_ptr_1614_Update)
        STORE_DERIVbuff_ptr_1614_update_completed_ <-& (STORE_DERIVbuff_ptr_1614_Update)
        STORE_DERIVbuff_ptr_1614_sample_start_ <-& (R_iNsTr_10_1615_update_completed_)
        // load-store dependencies..
        $T [ptr_deref_1564_ptr_deref_1592_delay] $delay
        // ->(iNsTr_3)(load) -> ->(iNsTr_3)(store)
        ptr_deref_1592_sample_start_ <-& (ptr_deref_1564_ptr_deref_1592_delay)
        ptr_deref_1564_ptr_deref_1592_delay <-& (ptr_deref_1564_sample_completed_)
        $T [LOAD_DERIVbuff_ptr_1555_STORE_DERIVbuff_ptr_1614_delay] $delay
        // DERIVbuff_ptr(load) -> DERIVbuff_ptr(store)
        STORE_DERIVbuff_ptr_1614_sample_start_ <-& (LOAD_DERIVbuff_ptr_1555_STORE_DERIVbuff_ptr_1614_delay)
        LOAD_DERIVbuff_ptr_1555_STORE_DERIVbuff_ptr_1614_delay <-& (LOAD_DERIVbuff_ptr_1555_sample_completed_)
      }
      assign_stmt_1556_to_assign_stmt_1616__entry__ |-> (assign_stmt_1556_to_assign_stmt_1616)
      assign_stmt_1556_to_assign_stmt_1616__exit__ <-| (assign_stmt_1556_to_assign_stmt_1616)
      ::[assign_stmt_1619] 
      {
        // 		DERIVout_pipe := iNsTr_6
        //  file prog.linked.opt.aa, line 599
        // Source expression
        // iNsTr_6
        $T[R_iNsTr_6_1618_sample_start_] 
        $T[R_iNsTr_6_1618_sample_completed_] 
        $T[R_iNsTr_6_1618_update_start_] 
        $T[R_iNsTr_6_1618_update_completed_] 
        // implicit reference
        R_iNsTr_6_1618_sample_start_ <-& ($entry)
        R_iNsTr_6_1618_sample_completed_ <-& (R_iNsTr_6_1618_sample_start_)
        R_iNsTr_6_1618_update_start_ <-& (R_iNsTr_6_1618_sample_completed_)
        R_iNsTr_6_1618_update_completed_ <-& (R_iNsTr_6_1618_update_start_)
        // Target expression
        // (as target) DERIVout_pipe
        $T[WPIPE_DERIVout_pipe_1617_sample_start_] 
        $T[WPIPE_DERIVout_pipe_1617_sample_completed_] 
        $T[WPIPE_DERIVout_pipe_1617_update_start_] 
        $T[WPIPE_DERIVout_pipe_1617_update_completed_] 
        ;;[WPIPE_DERIVout_pipe_1617_Sample] 
        {
          // pipe write sample-start DERIVout_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DERIVout_pipe_1617_Update] 
        {
          // pipe write update (complete) DERIVout_pipe
          $T [req] $T [ack] 
        }
        WPIPE_DERIVout_pipe_1617_sample_start_ &-> (WPIPE_DERIVout_pipe_1617_Sample)
        WPIPE_DERIVout_pipe_1617_sample_completed_ <-& (WPIPE_DERIVout_pipe_1617_Sample)
        WPIPE_DERIVout_pipe_1617_sample_completed_ &-> ($null)
        WPIPE_DERIVout_pipe_1617_update_start_ &-> (WPIPE_DERIVout_pipe_1617_Update)
        WPIPE_DERIVout_pipe_1617_update_completed_ <-& (WPIPE_DERIVout_pipe_1617_Update)
        WPIPE_DERIVout_pipe_1617_sample_start_ <-& (R_iNsTr_6_1618_update_completed_)
        // barrier: 		DERIVout_pipe := iNsTr_6
        // load-store dependencies..
        // pipe read/write dependencies for pipe DERIVout_pipe
      }
      assign_stmt_1619__entry__ |-> (assign_stmt_1619)
      assign_stmt_1619__exit__ <-| (assign_stmt_1619)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 601
      //---------------------   merge statement  file prog.linked.opt.aa, line 601  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_1621_PhiReqMerge] 
      merge_stmt_1621_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_1621_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1621_PhiReqMerge |-> (merge_stmt_1621_PhiAck)
      merge_stmt_1621__exit__  <-| (merge_stmt_1621_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 601  --------------------------
      assign_stmt_1553__entry__ <-| (branch_block_stmt_1550__entry__)
      assign_stmt_1556_to_assign_stmt_1616__entry__ <-| (assign_stmt_1553__exit__)
      assign_stmt_1619__entry__ <-| (assign_stmt_1556_to_assign_stmt_1616__exit__)
      return__ <-| (assign_stmt_1619__exit__)
      merge_stmt_1621__exit__ |-> (branch_block_stmt_1550__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %deriv%body%
    //  file prog.linked.opt.aa, line 601
    // constant-object-declarations for block %deriv%body
    //  file prog.linked.opt.aa, line 584
    // constant-object-declarations for block %deriv
    //  file prog.linked.opt.aa, line 579
    // constant-declarations for block %deriv%body
    //  file prog.linked.opt.aa, line 584
    // DERIVbuff_ptr
    $constant $W[LOAD_DERIVbuff_ptr_1555_word_address_0] : $pointer<memory_space_5> := _b0
    // @(DERIVbuff[iNsTr_2])
    $constant $W[array_obj_ref_1559_resized_base_address] : $int<2> := _b00// 0
    $constant $W[array_obj_ref_1559_offset_scale_factor_0] : $int<2> := _b01// 1
    // ->(iNsTr_3)
    $constant $W[ptr_deref_1564_word_offset_0] : $int<2> := _b00// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) )
    $constant $W[type_cast_1576_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_1581_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ( $mux ispos iNsTr_5  neg ) 
    // ->(iNsTr_3)
    $constant $W[ptr_deref_1592_word_offset_0] : $int<2> := _b00// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1598_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000010  )
    $constant $W[type_cast_1604_wire_constant] : $int<32> := _b00000000000000000000000000000010// 2
    // ( $mux iNsTr_9 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_8 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_1610_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // DERIVbuff_ptr
    $constant $W[STORE_DERIVbuff_ptr_1614_word_address_0] : $pointer<memory_space_5> := _b0
    // constant-declarations for block %deriv%body%
    //  file prog.linked.opt.aa, line 601
    // block %deriv%body
    //  file prog.linked.opt.aa, line 584
    // 		iNsTr_1 := HPout_pipe
    //  file prog.linked.opt.aa, line 586
    // iNsTr_1
    $W[iNsTr_1_1553] : $int<32>
    // 		iNsTr_2 := DERIVbuff_ptr
    //  file prog.linked.opt.aa, line 587
    // DERIVbuff_ptr
    $W[LOAD_DERIVbuff_ptr_1555_data_0] : $int<32>
    // iNsTr_2
    $W[iNsTr_2_1556] : $int<32>
    // 		iNsTr_3 := @(DERIVbuff[iNsTr_2])
    //  file prog.linked.opt.aa, line 588
    // @(DERIVbuff[iNsTr_2])
    $intermediate $W[R_iNsTr_2_1558_resized] : $int<2>
    $intermediate $W[R_iNsTr_2_1558_scaled] : $int<2>
    $intermediate $W[array_obj_ref_1559_final_offset] : $int<2>
    $intermediate $W[array_obj_ref_1559_root_address] : $int<2>
    // iNsTr_3
    $W[iNsTr_3_1561] : $int<32>
    // 		iNsTr_4 := ->(iNsTr_3)
    //  file prog.linked.opt.aa, line 589
    // ->(iNsTr_3)
    $intermediate $W[ptr_deref_1564_resized_base_address] : $int<2>
    $intermediate $W[ptr_deref_1564_root_address] : $int<2>
    $W[ptr_deref_1564_word_address_0] : $pointer<memory_space_4>
    $W[ptr_deref_1564_data_0] : $int<32>
    // iNsTr_4
    $W[iNsTr_4_1565] : $int<32>
    // 		iNsTr_5 := (iNsTr_1 - iNsTr_4)
    //  file prog.linked.opt.aa, line 590
    // iNsTr_5
    $W[iNsTr_5_1570] : $int<32>
    // 		ispos := (($bitcast ($int<32>) iNsTr_5 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ))
    //  file prog.linked.opt.aa, line 591
    // ($bitcast ($int<32>) iNsTr_5 )
    $intermediate $W[type_cast_1573_wire] : $int<32>
    // ispos
    $W[ispos_1578] : $int<1>
    // 		neg := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_5)
    //  file prog.linked.opt.aa, line 592
    // neg
    $W[neg_1584] : $int<32>
    // 		iNsTr_6 := ( $mux ispos iNsTr_5  neg ) 
    //  file prog.linked.opt.aa, line 593
    // iNsTr_6
    $W[iNsTr_6_1590] : $int<32>
    // 		->(iNsTr_3) := iNsTr_1
    //  file prog.linked.opt.aa, line 594
    // ->(iNsTr_3)
    $intermediate $W[ptr_deref_1592_wire] : $int<32>
    $intermediate $W[ptr_deref_1592_resized_base_address] : $int<2>
    $intermediate $W[ptr_deref_1592_root_address] : $int<2>
    $W[ptr_deref_1592_word_address_0] : $pointer<memory_space_4>
    $W[ptr_deref_1592_data_0] : $int<32>
    // 		iNsTr_8 := (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 595
    // iNsTr_8
    $W[iNsTr_8_1600] : $int<32>
    // 		iNsTr_9 := (iNsTr_8 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
    //  file prog.linked.opt.aa, line 596
    // iNsTr_9
    $W[iNsTr_9_1606] : $int<1>
    // 		iNsTr_10 := ( $mux iNsTr_9 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_8 ) 
    //  file prog.linked.opt.aa, line 597
    // iNsTr_10
    $W[iNsTr_10_1613] : $int<32>
    // 		DERIVbuff_ptr := iNsTr_10
    //  file prog.linked.opt.aa, line 598
    // DERIVbuff_ptr
    $constant $W[STORE_DERIVbuff_ptr_1614_word_address_0] : $pointer<memory_space_5> := _b0
    $W[STORE_DERIVbuff_ptr_1614_data_0] : $int<32>
    // 		DERIVout_pipe := iNsTr_6
    //  file prog.linked.opt.aa, line 599
    // DERIVout_pipe
    // datapath-instances for block %deriv%body
    //  file prog.linked.opt.aa, line 584
    // 		iNsTr_1 := HPout_pipe
    //  file prog.linked.opt.aa, line 586
    // HPout_pipe
    $ioport $in [RPIPE_HPout_pipe_1552_inst] (HPout_pipe) (iNsTr_1_1553) 
    // 		iNsTr_2 := DERIVbuff_ptr
    //  file prog.linked.opt.aa, line 587
    // DERIVbuff_ptr
    $load [LOAD_DERIVbuff_ptr_1555_load_0] $from memory_space_5 (LOAD_DERIVbuff_ptr_1555_word_address_0) (LOAD_DERIVbuff_ptr_1555_data_0) 
    $delay LOAD_DERIVbuff_ptr_1555_load_0 1
    &/ [LOAD_DERIVbuff_ptr_1555_gather_scatter] (LOAD_DERIVbuff_ptr_1555_data_0) (iNsTr_2_1556) 
    // 		iNsTr_3 := @(DERIVbuff[iNsTr_2])
    //  file prog.linked.opt.aa, line 588
    &/ [array_obj_ref_1559_index_0_resize] (iNsTr_2_1556) (R_iNsTr_2_1558_resized) 
    &/ [array_obj_ref_1559_index_0_rename] (R_iNsTr_2_1558_resized) (R_iNsTr_2_1558_scaled) 
    &/ [array_obj_ref_1559_index_offset] (R_iNsTr_2_1558_scaled) (array_obj_ref_1559_final_offset) 
    &/ [array_obj_ref_1559_root_address_inst] (array_obj_ref_1559_final_offset) (array_obj_ref_1559_root_address) 
    # := [addr_of_1560_final_reg] (array_obj_ref_1559_root_address) (iNsTr_3_1561) 
    // 		iNsTr_4 := ->(iNsTr_3)
    //  file prog.linked.opt.aa, line 589
    // ->(iNsTr_3)
    &/ [ptr_deref_1564_base_resize] (iNsTr_3_1561) (ptr_deref_1564_resized_base_address) 
    &/ [ptr_deref_1564_root_address_inst] (ptr_deref_1564_resized_base_address) (ptr_deref_1564_root_address) 
    &/ [ptr_deref_1564_addr_0] (ptr_deref_1564_root_address) (ptr_deref_1564_word_address_0) 
    $load [ptr_deref_1564_load_0] $from memory_space_4 (ptr_deref_1564_word_address_0) (ptr_deref_1564_data_0) 
    $delay ptr_deref_1564_load_0 2
    &/ [ptr_deref_1564_gather_scatter] (ptr_deref_1564_data_0) (iNsTr_4_1565) 
    // 		iNsTr_5 := (iNsTr_1 - iNsTr_4)
    //  file prog.linked.opt.aa, line 590
    // (iNsTr_1 - iNsTr_4)
    -[SUB_u32_u32_1569_inst] (iNsTr_1_1553 iNsTr_4_1565) (iNsTr_5_1570) 
    $delay SUB_u32_u32_1569_inst 1
    // 		ispos := (($bitcast ($int<32>) iNsTr_5 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ))
    //  file prog.linked.opt.aa, line 591
    // ($bitcast ($int<32>) iNsTr_5 )
    $S:=$U [type_cast_1573_inst] (iNsTr_5_1570) (type_cast_1573_wire)   $flowthrough
    $delay type_cast_1573_inst 0
    // (($bitcast ($int<32>) iNsTr_5 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ))
    $S>$S[SGT_i32_u1_1577_inst] (type_cast_1573_wire type_cast_1576_wire_constant) (ispos_1578) 
    $delay SGT_i32_u1_1577_inst 1
    // 		neg := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_5)
    //  file prog.linked.opt.aa, line 592
    // (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_5)
    -[SUB_u32_u32_1583_inst] (type_cast_1581_wire_constant iNsTr_5_1570) (neg_1584) 
    $delay SUB_u32_u32_1583_inst 1
    // 		iNsTr_6 := ( $mux ispos iNsTr_5  neg ) 
    //  file prog.linked.opt.aa, line 593
    // ( $mux ispos iNsTr_5  neg ) 
    ? [MUX_1589_inst] (ispos_1578 iNsTr_5_1570 neg_1584) (iNsTr_6_1590) 
    // 		->(iNsTr_3) := iNsTr_1
    //  file prog.linked.opt.aa, line 594
    // ->(iNsTr_3)
    &/ [ptr_deref_1592_base_resize] (iNsTr_3_1561) (ptr_deref_1592_resized_base_address) 
    &/ [ptr_deref_1592_root_address_inst] (ptr_deref_1592_resized_base_address) (ptr_deref_1592_root_address) 
    &/ [ptr_deref_1592_addr_0] (ptr_deref_1592_root_address) (ptr_deref_1592_word_address_0) 
    $store [ptr_deref_1592_store_0] $to memory_space_4 (ptr_deref_1592_word_address_0 ptr_deref_1592_data_0) 
    $delay ptr_deref_1592_store_0 2
    &/ [ptr_deref_1592_gather_scatter] (iNsTr_1_1553) (ptr_deref_1592_data_0) 
    // 		iNsTr_8 := (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 595
    // (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_1599_inst] (iNsTr_2_1556 type_cast_1598_wire_constant) (iNsTr_8_1600) 
    $delay ADD_u32_u32_1599_inst 1
    // 		iNsTr_9 := (iNsTr_8 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
    //  file prog.linked.opt.aa, line 596
    // (iNsTr_8 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
    ==[EQ_u32_u1_1605_inst] (iNsTr_8_1600 type_cast_1604_wire_constant) (iNsTr_9_1606) 
    $delay EQ_u32_u1_1605_inst 1
    // 		iNsTr_10 := ( $mux iNsTr_9 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_8 ) 
    //  file prog.linked.opt.aa, line 597
    // ( $mux iNsTr_9 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_8 ) 
    ? [MUX_1612_inst] (iNsTr_9_1606 type_cast_1610_wire_constant iNsTr_8_1600) (iNsTr_10_1613) 
    // 		DERIVbuff_ptr := iNsTr_10
    //  file prog.linked.opt.aa, line 598
    // DERIVbuff_ptr
    $store [STORE_DERIVbuff_ptr_1614_store_0] $to memory_space_5 (STORE_DERIVbuff_ptr_1614_word_address_0 STORE_DERIVbuff_ptr_1614_data_0) 
    $delay STORE_DERIVbuff_ptr_1614_store_0 1
    &/ [STORE_DERIVbuff_ptr_1614_gather_scatter] (iNsTr_10_1613) (STORE_DERIVbuff_ptr_1614_data_0) 
    // 		DERIVout_pipe := iNsTr_6
    //  file prog.linked.opt.aa, line 599
    // DERIVout_pipe
    $ioport $out [WPIPE_DERIVout_pipe_1617_inst]  (iNsTr_6_1590) (DERIVout_pipe) 
    $buffering $in WPIPE_DERIVout_pipe_1617_inst iNsTr_6_1590 1
  }
  // end data-path
  // 		iNsTr_1 := HPout_pipe
  //  file prog.linked.opt.aa, line 586
  // HPout_pipe
  RPIPE_HPout_pipe_1552_inst <=> (branch_block_stmt_1550/assign_stmt_1553/RPIPE_HPout_pipe_1552_Sample/rr branch_block_stmt_1550/assign_stmt_1553/RPIPE_HPout_pipe_1552_Update/cr) (branch_block_stmt_1550/assign_stmt_1553/RPIPE_HPout_pipe_1552_Sample/ra branch_block_stmt_1550/assign_stmt_1553/RPIPE_HPout_pipe_1552_Update/ca)
  // 		iNsTr_2 := DERIVbuff_ptr
  //  file prog.linked.opt.aa, line 587
  // DERIVbuff_ptr
  LOAD_DERIVbuff_ptr_1555_gather_scatter <=> (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/LOAD_DERIVbuff_ptr_1555_Update/LOAD_DERIVbuff_ptr_1555_Merge/merge_req) (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/LOAD_DERIVbuff_ptr_1555_Update/LOAD_DERIVbuff_ptr_1555_Merge/merge_ack)
  LOAD_DERIVbuff_ptr_1555_load_0 <=> (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/LOAD_DERIVbuff_ptr_1555_Sample/word_access_start/word_0/rr branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/LOAD_DERIVbuff_ptr_1555_Update/word_access_complete/word_0/cr) (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/LOAD_DERIVbuff_ptr_1555_Sample/word_access_start/word_0/ra branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/LOAD_DERIVbuff_ptr_1555_Update/word_access_complete/word_0/ca)
  // 		iNsTr_3 := @(DERIVbuff[iNsTr_2])
  //  file prog.linked.opt.aa, line 588
  array_obj_ref_1559_index_0_resize <=> (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/array_obj_ref_1559_index_resize_0/index_resize_req) (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/array_obj_ref_1559_index_resize_0/index_resize_ack)
  array_obj_ref_1559_index_0_rename <=> (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/array_obj_ref_1559_index_scale_0/scale_rename_req) (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/array_obj_ref_1559_index_scale_0/scale_rename_ack)
  array_obj_ref_1559_index_offset <=> (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/array_obj_ref_1559_final_index_sum_regn/req) (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/array_obj_ref_1559_final_index_sum_regn/ack)
  array_obj_ref_1559_root_address_inst <=> (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/array_obj_ref_1559_base_plus_offset/sum_rename_req) (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/array_obj_ref_1559_base_plus_offset/sum_rename_ack)
  addr_of_1560_final_reg <=> (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/addr_of_1560_request/req branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/addr_of_1560_complete/req) (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/addr_of_1560_request/ack branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/addr_of_1560_complete/ack)
  // 		iNsTr_4 := ->(iNsTr_3)
  //  file prog.linked.opt.aa, line 589
  ptr_deref_1564_base_resize <=> (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/ptr_deref_1564_base_addr_resize/base_resize_req) (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/ptr_deref_1564_base_addr_resize/base_resize_ack)
  ptr_deref_1564_root_address_inst <=> (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/ptr_deref_1564_base_plus_offset/sum_rename_req) (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/ptr_deref_1564_base_plus_offset/sum_rename_ack)
  ptr_deref_1564_addr_0 <=> (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/ptr_deref_1564_word_addrgen/root_register_req) (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/ptr_deref_1564_word_addrgen/root_register_ack)
  ptr_deref_1564_gather_scatter <=> (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/ptr_deref_1564_Update/ptr_deref_1564_Merge/merge_req) (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/ptr_deref_1564_Update/ptr_deref_1564_Merge/merge_ack)
  ptr_deref_1564_load_0 <=> (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/ptr_deref_1564_Sample/word_access_start/word_0/rr branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/ptr_deref_1564_Update/word_access_complete/word_0/cr) (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/ptr_deref_1564_Sample/word_access_start/word_0/ra branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/ptr_deref_1564_Update/word_access_complete/word_0/ca)
  // 		iNsTr_5 := (iNsTr_1 - iNsTr_4)
  //  file prog.linked.opt.aa, line 590
  // (iNsTr_1 - iNsTr_4)
  SUB_u32_u32_1569_inst <=> (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/SUB_u32_u32_1569_Sample/rr branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/SUB_u32_u32_1569_Update/cr) (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/SUB_u32_u32_1569_Sample/ra branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/SUB_u32_u32_1569_Update/ca)
  // 		ispos := (($bitcast ($int<32>) iNsTr_5 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ))
  //  file prog.linked.opt.aa, line 591
  // (($bitcast ($int<32>) iNsTr_5 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ))
  // ($bitcast ($int<32>) iNsTr_5 )
  type_cast_1573_inst <=> (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/type_cast_1573_Sample/rr branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/type_cast_1573_Update/cr) (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/type_cast_1573_Sample/ra branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/type_cast_1573_Update/ca)
  SGT_i32_u1_1577_inst <=> (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/SGT_i32_u1_1577_Sample/rr branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/SGT_i32_u1_1577_Update/cr) (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/SGT_i32_u1_1577_Sample/ra branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/SGT_i32_u1_1577_Update/ca)
  // 		neg := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_5)
  //  file prog.linked.opt.aa, line 592
  // (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_5)
  SUB_u32_u32_1583_inst <=> (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/SUB_u32_u32_1583_Sample/rr branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/SUB_u32_u32_1583_Update/cr) (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/SUB_u32_u32_1583_Sample/ra branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/SUB_u32_u32_1583_Update/ca)
  // 		iNsTr_6 := ( $mux ispos iNsTr_5  neg ) 
  //  file prog.linked.opt.aa, line 593
  // ( $mux ispos iNsTr_5  neg ) 
  MUX_1589_inst <=> (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/MUX_1589_start/req branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/MUX_1589_complete/req) (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/MUX_1589_start/ack branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/MUX_1589_complete/ack)
  // 		->(iNsTr_3) := iNsTr_1
  //  file prog.linked.opt.aa, line 594
  ptr_deref_1592_base_resize <=> (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/ptr_deref_1592_base_addr_resize/base_resize_req) (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/ptr_deref_1592_base_addr_resize/base_resize_ack)
  ptr_deref_1592_root_address_inst <=> (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/ptr_deref_1592_base_plus_offset/sum_rename_req) (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/ptr_deref_1592_base_plus_offset/sum_rename_ack)
  ptr_deref_1592_addr_0 <=> (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/ptr_deref_1592_word_addrgen/root_register_req) (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/ptr_deref_1592_word_addrgen/root_register_ack)
  ptr_deref_1592_gather_scatter <=> (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/ptr_deref_1592_Sample/ptr_deref_1592_Split/split_req) (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/ptr_deref_1592_Sample/ptr_deref_1592_Split/split_ack)
  ptr_deref_1592_store_0 <=> (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/ptr_deref_1592_Sample/word_access_start/word_0/rr branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/ptr_deref_1592_Update/word_access_complete/word_0/cr) (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/ptr_deref_1592_Sample/word_access_start/word_0/ra branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/ptr_deref_1592_Update/word_access_complete/word_0/ca)
  // 		iNsTr_8 := (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 595
  // (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_1599_inst <=> (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/ADD_u32_u32_1599_Sample/rr branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/ADD_u32_u32_1599_Update/cr) (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/ADD_u32_u32_1599_Sample/ra branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/ADD_u32_u32_1599_Update/ca)
  // 		iNsTr_9 := (iNsTr_8 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
  //  file prog.linked.opt.aa, line 596
  // (iNsTr_8 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
  EQ_u32_u1_1605_inst <=> (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/EQ_u32_u1_1605_Sample/rr branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/EQ_u32_u1_1605_Update/cr) (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/EQ_u32_u1_1605_Sample/ra branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/EQ_u32_u1_1605_Update/ca)
  // 		iNsTr_10 := ( $mux iNsTr_9 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_8 ) 
  //  file prog.linked.opt.aa, line 597
  // ( $mux iNsTr_9 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_8 ) 
  MUX_1612_inst <=> (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/MUX_1612_start/req branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/MUX_1612_complete/req) (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/MUX_1612_start/ack branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/MUX_1612_complete/ack)
  // 		DERIVbuff_ptr := iNsTr_10
  //  file prog.linked.opt.aa, line 598
  // DERIVbuff_ptr
  STORE_DERIVbuff_ptr_1614_gather_scatter <=> (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/STORE_DERIVbuff_ptr_1614_Sample/STORE_DERIVbuff_ptr_1614_Split/split_req) (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/STORE_DERIVbuff_ptr_1614_Sample/STORE_DERIVbuff_ptr_1614_Split/split_ack)
  STORE_DERIVbuff_ptr_1614_store_0 <=> (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/STORE_DERIVbuff_ptr_1614_Sample/word_access_start/word_0/rr branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/STORE_DERIVbuff_ptr_1614_Update/word_access_complete/word_0/cr) (branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/STORE_DERIVbuff_ptr_1614_Sample/word_access_start/word_0/ra branch_block_stmt_1550/assign_stmt_1556_to_assign_stmt_1616/STORE_DERIVbuff_ptr_1614_Update/word_access_complete/word_0/ca)
  // 		DERIVout_pipe := iNsTr_6
  //  file prog.linked.opt.aa, line 599
  // DERIVout_pipe
  WPIPE_DERIVout_pipe_1617_inst <=> (branch_block_stmt_1550/assign_stmt_1619/WPIPE_DERIVout_pipe_1617_Sample/req branch_block_stmt_1550/assign_stmt_1619/WPIPE_DERIVout_pipe_1617_Update/req) (branch_block_stmt_1550/assign_stmt_1619/WPIPE_DERIVout_pipe_1617_Sample/ack branch_block_stmt_1550/assign_stmt_1619/WPIPE_DERIVout_pipe_1617_Update/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 601
}
$module [divideSigned] 
{
  $in dividend:$int<64>
  // can point into  mempool
  divisor:$int<32>
  // can point into  mempool
  $out ret_val__:$int<64>
  // can point into  mempool
  // pipe-declarations for block %divideSigned
  //  file prog.linked.opt.aa, line 605
  // pipe-declarations for block %divideSigned%body
  //  file prog.linked.opt.aa, line 610
  // pipe-declarations for block %divideSigned%body%
  //  file prog.linked.opt.aa, line 626
  // pipe-declarations for block %divideSigned%body%
  //  file prog.linked.opt.aa, line 638
  // pipe-declarations for block %divideSigned%body%
  //  file prog.linked.opt.aa, line 641
  // pipe-declarations for block %divideSigned%body%
  //  file prog.linked.opt.aa, line 652
  // pipe-declarations for block %divideSigned%body%
  //  file prog.linked.opt.aa, line 655
  // pipe-declarations for block %divideSigned%body%
  //  file prog.linked.opt.aa, line 667
  // pipe-declarations for block %divideSigned%body%
  //  file prog.linked.opt.aa, line 672
  // pipe-declarations for block %divideSigned%body%
  //  file prog.linked.opt.aa, line 684
  // pipe-declarations for block %divideSigned%body%
  //  file prog.linked.opt.aa, line 688
  // pipe-declarations for block %divideSigned%body%
  //  file prog.linked.opt.aa, line 695
  // pipe-declarations for block %divideSigned%body%
  //  file prog.linked.opt.aa, line 698
  // pipe-declarations for block %divideSigned%body%
  //  file prog.linked.opt.aa, line 702
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_1628] // Branch Block  file prog.linked.opt.aa, line 610
    {
      $P [branch_block_stmt_1628__entry__]
      branch_block_stmt_1628__entry__ <-| ($entry)
      $P [branch_block_stmt_1628__exit__]
      branch_block_stmt_1628__exit__ |-> ($exit)
      $P [assign_stmt_1636_to_assign_stmt_1690__entry__] 
      $P [assign_stmt_1636_to_assign_stmt_1690__exit__] 
      $P [if_stmt_1691__entry__] 
      $P [if_stmt_1691__exit__] 
      $P [merge_stmt_1697__entry__] 
      $P [merge_stmt_1697__exit__] 
      $P [assign_stmt_1703_to_assign_stmt_1726__entry__] 
      $P [assign_stmt_1703_to_assign_stmt_1726__exit__] 
      $P [if_stmt_1727__entry__] 
      $P [if_stmt_1727__exit__] 
      $P [merge_stmt_1733__entry__] 
      $P [merge_stmt_1733__exit__] 
      $P [bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi]
      $P [merge_stmt_1735__exit__] 
      $P [assign_stmt_1755_to_assign_stmt_1760__entry__] 
      $P [assign_stmt_1755_to_assign_stmt_1760__exit__] 
      $P [if_stmt_1761__entry__] 
      $P [if_stmt_1761__exit__] 
      $P [merge_stmt_1767__entry__] 
      $P [merge_stmt_1767__exit__] 
      $P [bbx_xnphx_xix_xpreheader_bbx_xnphx_xi]
      $P [merge_stmt_1769__exit__] 
      $P [assign_stmt_1789_to_assign_stmt_1800__entry__] 
      $P [assign_stmt_1789_to_assign_stmt_1800__exit__] 
      $P [if_stmt_1801__entry__] 
      $P [if_stmt_1801__exit__] 
      $P [merge_stmt_1807__entry__] 
      $P [merge_stmt_1807__exit__] 
      $P [xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi]
      $P [merge_stmt_1818__exit__] 
      $P [assign_stmt_1837_to_assign_stmt_1847__entry__] 
      $P [assign_stmt_1837_to_assign_stmt_1847__exit__] 
      $P [if_stmt_1848__entry__] 
      $P [if_stmt_1848__exit__] 
      $P [merge_stmt_1854__entry__] 
      $P [merge_stmt_1854__exit__] 
      $P [divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit]
      $P [merge_stmt_1861__exit__] 
      $P [assign_stmt_1877_to_assign_stmt_1889__entry__] 
      $P [assign_stmt_1877_to_assign_stmt_1889__exit__] 
      $P [divideUnsignedx_xexit_UnifiedReturnBlock]
      $P [merge_stmt_1891__exit__] 
      $P [bb_10_UnifiedReturnBlock]
      $P [merge_stmt_1893__exit__] 
      $P [return__]
      $P [merge_stmt_1903__exit__] 
      ::[assign_stmt_1636_to_assign_stmt_1690] 
      {
        // 		iNsTr_0 := (($bitcast ($int<64>) dividend ) < ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ))
        //  file prog.linked.opt.aa, line 612
        // Source expression
        // (($bitcast ($int<64>) dividend ) < ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ))
        $T[SLT_i64_u1_1635_sample_start_] 
        $T[SLT_i64_u1_1635_sample_completed_] 
        $T[SLT_i64_u1_1635_update_start_] 
        $T[SLT_i64_u1_1635_update_completed_] 
        // ($bitcast ($int<64>) dividend )
        $T[type_cast_1631_sample_start_] 
        $T[type_cast_1631_sample_completed_] 
        $T[type_cast_1631_update_start_] 
        $T[type_cast_1631_update_completed_] 
        // dividend
        $T[R_dividend_1630_sample_start_] 
        $T[R_dividend_1630_sample_completed_] 
        $T[R_dividend_1630_update_start_] 
        $T[R_dividend_1630_update_completed_] 
        // reference to interface object
        R_dividend_1630_sample_start_ <-& ($entry)
        R_dividend_1630_sample_completed_ <-& (R_dividend_1630_sample_start_)
        R_dividend_1630_update_start_ <-& (R_dividend_1630_sample_completed_)
        R_dividend_1630_update_completed_ <-& (R_dividend_1630_update_start_)
        type_cast_1631_sample_start_ <-& (R_dividend_1630_update_completed_)
        ;;[type_cast_1631_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1631_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1631_sample_start_ &-> (type_cast_1631_Sample)
        type_cast_1631_sample_completed_ <-& (type_cast_1631_Sample)
        type_cast_1631_sample_completed_ &-> ($null)
        type_cast_1631_update_start_ &-> (type_cast_1631_Update)
        type_cast_1631_update_completed_ <-& (type_cast_1631_Update)
        // flow-through
        type_cast_1631_update_start_ <-& (type_cast_1631_sample_completed_)
        SLT_i64_u1_1635_sample_start_ <-& (type_cast_1631_update_completed_)
        ;;[SLT_i64_u1_1635_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_i64_u1_1635_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_i64_u1_1635_sample_start_ &-> (SLT_i64_u1_1635_Sample)
        SLT_i64_u1_1635_sample_completed_ <-& (SLT_i64_u1_1635_Sample)
        SLT_i64_u1_1635_sample_completed_ &-> ($null)
        SLT_i64_u1_1635_update_start_ &-> (SLT_i64_u1_1635_Update)
        SLT_i64_u1_1635_update_completed_ <-& (SLT_i64_u1_1635_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // 		iNsTr_1 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - dividend)
        //  file prog.linked.opt.aa, line 613
        // Source expression
        // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - dividend)
        $T[SUB_u64_u64_1641_sample_start_] 
        $T[SUB_u64_u64_1641_sample_completed_] 
        $T[SUB_u64_u64_1641_update_start_] 
        $T[SUB_u64_u64_1641_update_completed_] 
        // dividend
        $T[R_dividend_1640_sample_start_] 
        $T[R_dividend_1640_sample_completed_] 
        $T[R_dividend_1640_update_start_] 
        $T[R_dividend_1640_update_completed_] 
        // reference to interface object
        R_dividend_1640_sample_start_ <-& ($entry)
        R_dividend_1640_sample_completed_ <-& (R_dividend_1640_sample_start_)
        R_dividend_1640_update_start_ <-& (R_dividend_1640_sample_completed_)
        R_dividend_1640_update_completed_ <-& (R_dividend_1640_update_start_)
        SUB_u64_u64_1641_sample_start_ <-& (R_dividend_1640_update_completed_)
        ;;[SUB_u64_u64_1641_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u64_u64_1641_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u64_u64_1641_sample_start_ &-> (SUB_u64_u64_1641_Sample)
        SUB_u64_u64_1641_sample_completed_ <-& (SUB_u64_u64_1641_Sample)
        SUB_u64_u64_1641_sample_completed_ &-> ($null)
        SUB_u64_u64_1641_update_start_ &-> (SUB_u64_u64_1641_Update)
        SUB_u64_u64_1641_update_completed_ <-& (SUB_u64_u64_1641_Update)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // 		iNsTr_2 := ( $mux iNsTr_0 iNsTr_1  dividend ) 
        //  file prog.linked.opt.aa, line 614
        // Source expression
        // ( $mux iNsTr_0 iNsTr_1  dividend ) 
        $T[MUX_1647_sample_start_] 
        $T[MUX_1647_sample_completed_] 
        $T[MUX_1647_update_start_] 
        $T[MUX_1647_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_1644_sample_start_] 
        $T[R_iNsTr_0_1644_sample_completed_] 
        $T[R_iNsTr_0_1644_update_start_] 
        $T[R_iNsTr_0_1644_update_completed_] 
        // implicit reference
        R_iNsTr_0_1644_sample_start_ <-& (SLT_i64_u1_1635_update_completed_)
        R_iNsTr_0_1644_sample_completed_ <-& (R_iNsTr_0_1644_sample_start_)
        R_iNsTr_0_1644_update_start_ <-& (R_iNsTr_0_1644_sample_completed_)
        R_iNsTr_0_1644_update_completed_ <-& (R_iNsTr_0_1644_update_start_)
        // iNsTr_1
        $T[R_iNsTr_1_1645_sample_start_] 
        $T[R_iNsTr_1_1645_sample_completed_] 
        $T[R_iNsTr_1_1645_update_start_] 
        $T[R_iNsTr_1_1645_update_completed_] 
        // implicit reference
        R_iNsTr_1_1645_sample_start_ <-& (SUB_u64_u64_1641_update_completed_)
        R_iNsTr_1_1645_sample_completed_ <-& (R_iNsTr_1_1645_sample_start_)
        R_iNsTr_1_1645_update_start_ <-& (R_iNsTr_1_1645_sample_completed_)
        R_iNsTr_1_1645_update_completed_ <-& (R_iNsTr_1_1645_update_start_)
        // dividend
        $T[R_dividend_1646_sample_start_] 
        $T[R_dividend_1646_sample_completed_] 
        $T[R_dividend_1646_update_start_] 
        $T[R_dividend_1646_update_completed_] 
        // reference to interface object
        R_dividend_1646_sample_start_ <-& ($entry)
        R_dividend_1646_sample_completed_ <-& (R_dividend_1646_sample_start_)
        R_dividend_1646_update_start_ <-& (R_dividend_1646_sample_completed_)
        R_dividend_1646_update_completed_ <-& (R_dividend_1646_update_start_)
        MUX_1647_sample_start_ <-& (R_iNsTr_0_1644_update_completed_)
        MUX_1647_sample_start_ <-& (R_iNsTr_1_1645_update_completed_)
        MUX_1647_sample_start_ <-& (R_dividend_1646_update_completed_)
        ;;[MUX_1647_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1647_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1647_sample_start_ &-> (MUX_1647_start)
        MUX_1647_sample_completed_ <-& (MUX_1647_start)
        MUX_1647_update_start_ &-> (MUX_1647_complete)
        MUX_1647_update_completed_ <-& (MUX_1647_complete)
        MUX_1647_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_2
        // iNsTr_2
        // implicit reference
        // 		iNsTr_3 := (($bitcast ($int<64>) iNsTr_2 ) < ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ))
        //  file prog.linked.opt.aa, line 615
        // Source expression
        // (($bitcast ($int<64>) iNsTr_2 ) < ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ))
        $T[SLT_i64_u1_1655_sample_start_] 
        $T[SLT_i64_u1_1655_sample_completed_] 
        $T[SLT_i64_u1_1655_update_start_] 
        $T[SLT_i64_u1_1655_update_completed_] 
        // ($bitcast ($int<64>) iNsTr_2 )
        $T[type_cast_1651_sample_start_] 
        $T[type_cast_1651_sample_completed_] 
        $T[type_cast_1651_update_start_] 
        $T[type_cast_1651_update_completed_] 
        // iNsTr_2
        $T[R_iNsTr_2_1650_sample_start_] 
        $T[R_iNsTr_2_1650_sample_completed_] 
        $T[R_iNsTr_2_1650_update_start_] 
        $T[R_iNsTr_2_1650_update_completed_] 
        // implicit reference
        R_iNsTr_2_1650_sample_start_ <-& (MUX_1647_update_completed_)
        R_iNsTr_2_1650_sample_completed_ <-& (R_iNsTr_2_1650_sample_start_)
        R_iNsTr_2_1650_update_start_ <-& (R_iNsTr_2_1650_sample_completed_)
        R_iNsTr_2_1650_update_completed_ <-& (R_iNsTr_2_1650_update_start_)
        type_cast_1651_sample_start_ <-& (R_iNsTr_2_1650_update_completed_)
        ;;[type_cast_1651_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1651_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1651_sample_start_ &-> (type_cast_1651_Sample)
        type_cast_1651_sample_completed_ <-& (type_cast_1651_Sample)
        type_cast_1651_sample_completed_ &-> ($null)
        type_cast_1651_update_start_ &-> (type_cast_1651_Update)
        type_cast_1651_update_completed_ <-& (type_cast_1651_Update)
        // flow-through
        type_cast_1651_update_start_ <-& (type_cast_1651_sample_completed_)
        SLT_i64_u1_1655_sample_start_ <-& (type_cast_1651_update_completed_)
        ;;[SLT_i64_u1_1655_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_i64_u1_1655_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_i64_u1_1655_sample_start_ &-> (SLT_i64_u1_1655_Sample)
        SLT_i64_u1_1655_sample_completed_ <-& (SLT_i64_u1_1655_Sample)
        SLT_i64_u1_1655_sample_completed_ &-> ($null)
        SLT_i64_u1_1655_update_start_ &-> (SLT_i64_u1_1655_Update)
        SLT_i64_u1_1655_update_completed_ <-& (SLT_i64_u1_1655_Update)
        // Target expression
        // (as target) iNsTr_3
        // iNsTr_3
        // implicit reference
        // 		iNsTr_4 := (($bitcast ($int<32>) divisor ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.linked.opt.aa, line 616
        // Source expression
        // (($bitcast ($int<32>) divisor ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[SLT_i32_u1_1663_sample_start_] 
        $T[SLT_i32_u1_1663_sample_completed_] 
        $T[SLT_i32_u1_1663_update_start_] 
        $T[SLT_i32_u1_1663_update_completed_] 
        // ($bitcast ($int<32>) divisor )
        $T[type_cast_1659_sample_start_] 
        $T[type_cast_1659_sample_completed_] 
        $T[type_cast_1659_update_start_] 
        $T[type_cast_1659_update_completed_] 
        // divisor
        $T[R_divisor_1658_sample_start_] 
        $T[R_divisor_1658_sample_completed_] 
        $T[R_divisor_1658_update_start_] 
        $T[R_divisor_1658_update_completed_] 
        // reference to interface object
        R_divisor_1658_sample_start_ <-& ($entry)
        R_divisor_1658_sample_completed_ <-& (R_divisor_1658_sample_start_)
        R_divisor_1658_update_start_ <-& (R_divisor_1658_sample_completed_)
        R_divisor_1658_update_completed_ <-& (R_divisor_1658_update_start_)
        type_cast_1659_sample_start_ <-& (R_divisor_1658_update_completed_)
        ;;[type_cast_1659_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1659_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1659_sample_start_ &-> (type_cast_1659_Sample)
        type_cast_1659_sample_completed_ <-& (type_cast_1659_Sample)
        type_cast_1659_sample_completed_ &-> ($null)
        type_cast_1659_update_start_ &-> (type_cast_1659_Update)
        type_cast_1659_update_completed_ <-& (type_cast_1659_Update)
        // flow-through
        type_cast_1659_update_start_ <-& (type_cast_1659_sample_completed_)
        SLT_i32_u1_1663_sample_start_ <-& (type_cast_1659_update_completed_)
        ;;[SLT_i32_u1_1663_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_i32_u1_1663_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_i32_u1_1663_sample_start_ &-> (SLT_i32_u1_1663_Sample)
        SLT_i32_u1_1663_sample_completed_ <-& (SLT_i32_u1_1663_Sample)
        SLT_i32_u1_1663_sample_completed_ &-> ($null)
        SLT_i32_u1_1663_update_start_ &-> (SLT_i32_u1_1663_Update)
        SLT_i32_u1_1663_update_completed_ <-& (SLT_i32_u1_1663_Update)
        // Target expression
        // (as target) iNsTr_4
        // iNsTr_4
        // implicit reference
        // 		iNsTr_5 := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - divisor)
        //  file prog.linked.opt.aa, line 617
        // Source expression
        // (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - divisor)
        $T[SUB_u32_u32_1669_sample_start_] 
        $T[SUB_u32_u32_1669_sample_completed_] 
        $T[SUB_u32_u32_1669_update_start_] 
        $T[SUB_u32_u32_1669_update_completed_] 
        // divisor
        $T[R_divisor_1668_sample_start_] 
        $T[R_divisor_1668_sample_completed_] 
        $T[R_divisor_1668_update_start_] 
        $T[R_divisor_1668_update_completed_] 
        // reference to interface object
        R_divisor_1668_sample_start_ <-& ($entry)
        R_divisor_1668_sample_completed_ <-& (R_divisor_1668_sample_start_)
        R_divisor_1668_update_start_ <-& (R_divisor_1668_sample_completed_)
        R_divisor_1668_update_completed_ <-& (R_divisor_1668_update_start_)
        SUB_u32_u32_1669_sample_start_ <-& (R_divisor_1668_update_completed_)
        ;;[SUB_u32_u32_1669_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_1669_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_1669_sample_start_ &-> (SUB_u32_u32_1669_Sample)
        SUB_u32_u32_1669_sample_completed_ <-& (SUB_u32_u32_1669_Sample)
        SUB_u32_u32_1669_sample_completed_ &-> ($null)
        SUB_u32_u32_1669_update_start_ &-> (SUB_u32_u32_1669_Update)
        SUB_u32_u32_1669_update_completed_ <-& (SUB_u32_u32_1669_Update)
        // Target expression
        // (as target) iNsTr_5
        // iNsTr_5
        // implicit reference
        // 		iNsTr_6 := ( $mux iNsTr_4 iNsTr_5  divisor ) 
        //  file prog.linked.opt.aa, line 618
        // Source expression
        // ( $mux iNsTr_4 iNsTr_5  divisor ) 
        $T[MUX_1675_sample_start_] 
        $T[MUX_1675_sample_completed_] 
        $T[MUX_1675_update_start_] 
        $T[MUX_1675_update_completed_] 
        // iNsTr_4
        $T[R_iNsTr_4_1672_sample_start_] 
        $T[R_iNsTr_4_1672_sample_completed_] 
        $T[R_iNsTr_4_1672_update_start_] 
        $T[R_iNsTr_4_1672_update_completed_] 
        // implicit reference
        R_iNsTr_4_1672_sample_start_ <-& (SLT_i32_u1_1663_update_completed_)
        R_iNsTr_4_1672_sample_completed_ <-& (R_iNsTr_4_1672_sample_start_)
        R_iNsTr_4_1672_update_start_ <-& (R_iNsTr_4_1672_sample_completed_)
        R_iNsTr_4_1672_update_completed_ <-& (R_iNsTr_4_1672_update_start_)
        // iNsTr_5
        $T[R_iNsTr_5_1673_sample_start_] 
        $T[R_iNsTr_5_1673_sample_completed_] 
        $T[R_iNsTr_5_1673_update_start_] 
        $T[R_iNsTr_5_1673_update_completed_] 
        // implicit reference
        R_iNsTr_5_1673_sample_start_ <-& (SUB_u32_u32_1669_update_completed_)
        R_iNsTr_5_1673_sample_completed_ <-& (R_iNsTr_5_1673_sample_start_)
        R_iNsTr_5_1673_update_start_ <-& (R_iNsTr_5_1673_sample_completed_)
        R_iNsTr_5_1673_update_completed_ <-& (R_iNsTr_5_1673_update_start_)
        // divisor
        $T[R_divisor_1674_sample_start_] 
        $T[R_divisor_1674_sample_completed_] 
        $T[R_divisor_1674_update_start_] 
        $T[R_divisor_1674_update_completed_] 
        // reference to interface object
        R_divisor_1674_sample_start_ <-& ($entry)
        R_divisor_1674_sample_completed_ <-& (R_divisor_1674_sample_start_)
        R_divisor_1674_update_start_ <-& (R_divisor_1674_sample_completed_)
        R_divisor_1674_update_completed_ <-& (R_divisor_1674_update_start_)
        MUX_1675_sample_start_ <-& (R_iNsTr_4_1672_update_completed_)
        MUX_1675_sample_start_ <-& (R_iNsTr_5_1673_update_completed_)
        MUX_1675_sample_start_ <-& (R_divisor_1674_update_completed_)
        ;;[MUX_1675_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1675_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1675_sample_start_ &-> (MUX_1675_start)
        MUX_1675_sample_completed_ <-& (MUX_1675_start)
        MUX_1675_update_start_ &-> (MUX_1675_complete)
        MUX_1675_update_completed_ <-& (MUX_1675_complete)
        MUX_1675_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_6
        // iNsTr_6
        // implicit reference
        // 		iNsTr_7 := ( $mux iNsTr_3 ($bitcast ($uint<32>) _b11111111111111111111111111111111  )  ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) 
        //  file prog.linked.opt.aa, line 619
        // Source expression
        // ( $mux iNsTr_3 ($bitcast ($uint<32>) _b11111111111111111111111111111111  )  ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) 
        $T[MUX_1683_sample_start_] 
        $T[MUX_1683_sample_completed_] 
        $T[MUX_1683_update_start_] 
        $T[MUX_1683_update_completed_] 
        // iNsTr_3
        $T[R_iNsTr_3_1678_sample_start_] 
        $T[R_iNsTr_3_1678_sample_completed_] 
        $T[R_iNsTr_3_1678_update_start_] 
        $T[R_iNsTr_3_1678_update_completed_] 
        // implicit reference
        R_iNsTr_3_1678_sample_start_ <-& (SLT_i64_u1_1655_update_completed_)
        R_iNsTr_3_1678_sample_completed_ <-& (R_iNsTr_3_1678_sample_start_)
        R_iNsTr_3_1678_update_start_ <-& (R_iNsTr_3_1678_sample_completed_)
        R_iNsTr_3_1678_update_completed_ <-& (R_iNsTr_3_1678_update_start_)
        MUX_1683_sample_start_ <-& (R_iNsTr_3_1678_update_completed_)
        ;;[MUX_1683_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1683_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1683_sample_start_ &-> (MUX_1683_start)
        MUX_1683_sample_completed_ <-& (MUX_1683_start)
        MUX_1683_update_start_ &-> (MUX_1683_complete)
        MUX_1683_update_completed_ <-& (MUX_1683_complete)
        MUX_1683_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_7
        // iNsTr_7
        // implicit reference
        // 		iNsTr_8 := (iNsTr_6 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.linked.opt.aa, line 620
        // Source expression
        // (iNsTr_6 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_1689_sample_start_] 
        $T[EQ_u32_u1_1689_sample_completed_] 
        $T[EQ_u32_u1_1689_update_start_] 
        $T[EQ_u32_u1_1689_update_completed_] 
        // iNsTr_6
        $T[R_iNsTr_6_1686_sample_start_] 
        $T[R_iNsTr_6_1686_sample_completed_] 
        $T[R_iNsTr_6_1686_update_start_] 
        $T[R_iNsTr_6_1686_update_completed_] 
        // implicit reference
        R_iNsTr_6_1686_sample_start_ <-& (MUX_1675_update_completed_)
        R_iNsTr_6_1686_sample_completed_ <-& (R_iNsTr_6_1686_sample_start_)
        R_iNsTr_6_1686_update_start_ <-& (R_iNsTr_6_1686_sample_completed_)
        R_iNsTr_6_1686_update_completed_ <-& (R_iNsTr_6_1686_update_start_)
        EQ_u32_u1_1689_sample_start_ <-& (R_iNsTr_6_1686_update_completed_)
        ;;[EQ_u32_u1_1689_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_1689_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_1689_sample_start_ &-> (EQ_u32_u1_1689_Sample)
        EQ_u32_u1_1689_sample_completed_ <-& (EQ_u32_u1_1689_Sample)
        EQ_u32_u1_1689_sample_completed_ &-> ($null)
        EQ_u32_u1_1689_update_start_ &-> (EQ_u32_u1_1689_Update)
        EQ_u32_u1_1689_update_completed_ <-& (EQ_u32_u1_1689_Update)
        // Target expression
        // (as target) iNsTr_8
        // iNsTr_8
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1636_to_assign_stmt_1690__entry__ |-> (assign_stmt_1636_to_assign_stmt_1690)
      assign_stmt_1636_to_assign_stmt_1690__exit__ <-| (assign_stmt_1636_to_assign_stmt_1690)
      // if-statement  
      //  file prog.linked.opt.aa, line 621
      ;;[if_stmt_1691_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1691__entry__ |-> (if_stmt_1691_dead_link)
      if_stmt_1691__exit__ <-| (if_stmt_1691_dead_link)
      ;;[if_stmt_1691_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1691__entry__ |-> (if_stmt_1691_eval_test)
      $P [R_iNsTr_8_1692_place]
      R_iNsTr_8_1692_place <-| (if_stmt_1691_eval_test)
      ;;[if_stmt_1691_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1691_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_8_1692_place |-> (if_stmt_1691_if_link if_stmt_1691_else_link)
      $P [bb_0_bb_10]
      bb_0_bb_10 <-| (if_stmt_1691_if_link)
      $P [bb_0_xx_xpreheaderx_xi]
      bb_0_xx_xpreheaderx_xi <-| (if_stmt_1691_else_link)
      ::[assign_stmt_1703_to_assign_stmt_1726] 
      {
        // 		iNsTr_11 := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_7)
        //  file prog.linked.opt.aa, line 628
        // Source expression
        // (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_7)
        $T[SUB_u32_u32_1702_sample_start_] 
        $T[SUB_u32_u32_1702_sample_completed_] 
        $T[SUB_u32_u32_1702_update_start_] 
        $T[SUB_u32_u32_1702_update_completed_] 
        // iNsTr_7
        $T[R_iNsTr_7_1701_sample_start_] 
        $T[R_iNsTr_7_1701_sample_completed_] 
        $T[R_iNsTr_7_1701_update_start_] 
        $T[R_iNsTr_7_1701_update_completed_] 
        // implicit reference
        R_iNsTr_7_1701_sample_start_ <-& ($entry)
        R_iNsTr_7_1701_sample_completed_ <-& (R_iNsTr_7_1701_sample_start_)
        R_iNsTr_7_1701_update_start_ <-& (R_iNsTr_7_1701_sample_completed_)
        R_iNsTr_7_1701_update_completed_ <-& (R_iNsTr_7_1701_update_start_)
        SUB_u32_u32_1702_sample_start_ <-& (R_iNsTr_7_1701_update_completed_)
        ;;[SUB_u32_u32_1702_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_1702_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_1702_sample_start_ &-> (SUB_u32_u32_1702_Sample)
        SUB_u32_u32_1702_sample_completed_ <-& (SUB_u32_u32_1702_Sample)
        SUB_u32_u32_1702_sample_completed_ &-> ($null)
        SUB_u32_u32_1702_update_start_ &-> (SUB_u32_u32_1702_Update)
        SUB_u32_u32_1702_update_completed_ <-& (SUB_u32_u32_1702_Update)
        // Target expression
        // (as target) iNsTr_11
        // iNsTr_11
        // implicit reference
        // 		iNsTr_12 := (($bitcast ($int<32>) iNsTr_6 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.linked.opt.aa, line 629
        // Source expression
        // (($bitcast ($int<32>) iNsTr_6 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[SLT_i32_u1_1710_sample_start_] 
        $T[SLT_i32_u1_1710_sample_completed_] 
        $T[SLT_i32_u1_1710_update_start_] 
        $T[SLT_i32_u1_1710_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_6 )
        $T[type_cast_1706_sample_start_] 
        $T[type_cast_1706_sample_completed_] 
        $T[type_cast_1706_update_start_] 
        $T[type_cast_1706_update_completed_] 
        // iNsTr_6
        $T[R_iNsTr_6_1705_sample_start_] 
        $T[R_iNsTr_6_1705_sample_completed_] 
        $T[R_iNsTr_6_1705_update_start_] 
        $T[R_iNsTr_6_1705_update_completed_] 
        // implicit reference
        R_iNsTr_6_1705_sample_start_ <-& ($entry)
        R_iNsTr_6_1705_sample_completed_ <-& (R_iNsTr_6_1705_sample_start_)
        R_iNsTr_6_1705_update_start_ <-& (R_iNsTr_6_1705_sample_completed_)
        R_iNsTr_6_1705_update_completed_ <-& (R_iNsTr_6_1705_update_start_)
        type_cast_1706_sample_start_ <-& (R_iNsTr_6_1705_update_completed_)
        ;;[type_cast_1706_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1706_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1706_sample_start_ &-> (type_cast_1706_Sample)
        type_cast_1706_sample_completed_ <-& (type_cast_1706_Sample)
        type_cast_1706_sample_completed_ &-> ($null)
        type_cast_1706_update_start_ &-> (type_cast_1706_Update)
        type_cast_1706_update_completed_ <-& (type_cast_1706_Update)
        // flow-through
        type_cast_1706_update_start_ <-& (type_cast_1706_sample_completed_)
        SLT_i32_u1_1710_sample_start_ <-& (type_cast_1706_update_completed_)
        ;;[SLT_i32_u1_1710_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_i32_u1_1710_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_i32_u1_1710_sample_start_ &-> (SLT_i32_u1_1710_Sample)
        SLT_i32_u1_1710_sample_completed_ <-& (SLT_i32_u1_1710_Sample)
        SLT_i32_u1_1710_sample_completed_ &-> ($null)
        SLT_i32_u1_1710_update_start_ &-> (SLT_i32_u1_1710_Update)
        SLT_i32_u1_1710_update_completed_ <-& (SLT_i32_u1_1710_Update)
        // Target expression
        // (as target) iNsTr_12
        // iNsTr_12
        // implicit reference
        // 		iNsTr_13 := ( $mux iNsTr_12 iNsTr_11  iNsTr_7 ) 
        //  file prog.linked.opt.aa, line 630
        // Source expression
        // ( $mux iNsTr_12 iNsTr_11  iNsTr_7 ) 
        $T[MUX_1716_sample_start_] 
        $T[MUX_1716_sample_completed_] 
        $T[MUX_1716_update_start_] 
        $T[MUX_1716_update_completed_] 
        // iNsTr_12
        $T[R_iNsTr_12_1713_sample_start_] 
        $T[R_iNsTr_12_1713_sample_completed_] 
        $T[R_iNsTr_12_1713_update_start_] 
        $T[R_iNsTr_12_1713_update_completed_] 
        // implicit reference
        R_iNsTr_12_1713_sample_start_ <-& (SLT_i32_u1_1710_update_completed_)
        R_iNsTr_12_1713_sample_completed_ <-& (R_iNsTr_12_1713_sample_start_)
        R_iNsTr_12_1713_update_start_ <-& (R_iNsTr_12_1713_sample_completed_)
        R_iNsTr_12_1713_update_completed_ <-& (R_iNsTr_12_1713_update_start_)
        // iNsTr_11
        $T[R_iNsTr_11_1714_sample_start_] 
        $T[R_iNsTr_11_1714_sample_completed_] 
        $T[R_iNsTr_11_1714_update_start_] 
        $T[R_iNsTr_11_1714_update_completed_] 
        // implicit reference
        R_iNsTr_11_1714_sample_start_ <-& (SUB_u32_u32_1702_update_completed_)
        R_iNsTr_11_1714_sample_completed_ <-& (R_iNsTr_11_1714_sample_start_)
        R_iNsTr_11_1714_update_start_ <-& (R_iNsTr_11_1714_sample_completed_)
        R_iNsTr_11_1714_update_completed_ <-& (R_iNsTr_11_1714_update_start_)
        // iNsTr_7
        $T[R_iNsTr_7_1715_sample_start_] 
        $T[R_iNsTr_7_1715_sample_completed_] 
        $T[R_iNsTr_7_1715_update_start_] 
        $T[R_iNsTr_7_1715_update_completed_] 
        // implicit reference
        R_iNsTr_7_1715_sample_start_ <-& ($entry)
        R_iNsTr_7_1715_sample_completed_ <-& (R_iNsTr_7_1715_sample_start_)
        R_iNsTr_7_1715_update_start_ <-& (R_iNsTr_7_1715_sample_completed_)
        R_iNsTr_7_1715_update_completed_ <-& (R_iNsTr_7_1715_update_start_)
        MUX_1716_sample_start_ <-& (R_iNsTr_12_1713_update_completed_)
        MUX_1716_sample_start_ <-& (R_iNsTr_11_1714_update_completed_)
        MUX_1716_sample_start_ <-& (R_iNsTr_7_1715_update_completed_)
        ;;[MUX_1716_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1716_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1716_sample_start_ &-> (MUX_1716_start)
        MUX_1716_sample_completed_ <-& (MUX_1716_start)
        MUX_1716_update_start_ &-> (MUX_1716_complete)
        MUX_1716_update_completed_ <-& (MUX_1716_complete)
        MUX_1716_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_13
        // iNsTr_13
        // implicit reference
        // 		iNsTr_14 := ($cast ($uint<64>) iNsTr_6 )
        //  file prog.linked.opt.aa, line 631
        // Source expression
        // ($cast ($uint<64>) iNsTr_6 )
        $T[type_cast_1720_sample_start_] 
        $T[type_cast_1720_sample_completed_] 
        $T[type_cast_1720_update_start_] 
        $T[type_cast_1720_update_completed_] 
        // iNsTr_6
        $T[R_iNsTr_6_1719_sample_start_] 
        $T[R_iNsTr_6_1719_sample_completed_] 
        $T[R_iNsTr_6_1719_update_start_] 
        $T[R_iNsTr_6_1719_update_completed_] 
        // implicit reference
        R_iNsTr_6_1719_sample_start_ <-& ($entry)
        R_iNsTr_6_1719_sample_completed_ <-& (R_iNsTr_6_1719_sample_start_)
        R_iNsTr_6_1719_update_start_ <-& (R_iNsTr_6_1719_sample_completed_)
        R_iNsTr_6_1719_update_completed_ <-& (R_iNsTr_6_1719_update_start_)
        type_cast_1720_sample_start_ <-& (R_iNsTr_6_1719_update_completed_)
        ;;[type_cast_1720_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1720_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1720_sample_start_ &-> (type_cast_1720_Sample)
        type_cast_1720_sample_completed_ <-& (type_cast_1720_Sample)
        type_cast_1720_sample_completed_ &-> ($null)
        type_cast_1720_update_start_ &-> (type_cast_1720_Update)
        type_cast_1720_update_completed_ <-& (type_cast_1720_Update)
        // Target expression
        // (as target) iNsTr_14
        // iNsTr_14
        // implicit reference
        // 		iNsTr_15 := (iNsTr_14 > iNsTr_2)
        //  file prog.linked.opt.aa, line 632
        // Source expression
        // (iNsTr_14 > iNsTr_2)
        $T[UGT_u64_u1_1725_sample_start_] 
        $T[UGT_u64_u1_1725_sample_completed_] 
        $T[UGT_u64_u1_1725_update_start_] 
        $T[UGT_u64_u1_1725_update_completed_] 
        // iNsTr_14
        $T[R_iNsTr_14_1723_sample_start_] 
        $T[R_iNsTr_14_1723_sample_completed_] 
        $T[R_iNsTr_14_1723_update_start_] 
        $T[R_iNsTr_14_1723_update_completed_] 
        // implicit reference
        R_iNsTr_14_1723_sample_start_ <-& (type_cast_1720_update_completed_)
        R_iNsTr_14_1723_sample_completed_ <-& (R_iNsTr_14_1723_sample_start_)
        R_iNsTr_14_1723_update_start_ <-& (R_iNsTr_14_1723_sample_completed_)
        R_iNsTr_14_1723_update_completed_ <-& (R_iNsTr_14_1723_update_start_)
        // iNsTr_2
        $T[R_iNsTr_2_1724_sample_start_] 
        $T[R_iNsTr_2_1724_sample_completed_] 
        $T[R_iNsTr_2_1724_update_start_] 
        $T[R_iNsTr_2_1724_update_completed_] 
        // implicit reference
        R_iNsTr_2_1724_sample_start_ <-& ($entry)
        R_iNsTr_2_1724_sample_completed_ <-& (R_iNsTr_2_1724_sample_start_)
        R_iNsTr_2_1724_update_start_ <-& (R_iNsTr_2_1724_sample_completed_)
        R_iNsTr_2_1724_update_completed_ <-& (R_iNsTr_2_1724_update_start_)
        UGT_u64_u1_1725_sample_start_ <-& (R_iNsTr_14_1723_update_completed_)
        UGT_u64_u1_1725_sample_start_ <-& (R_iNsTr_2_1724_update_completed_)
        ;;[UGT_u64_u1_1725_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u64_u1_1725_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u64_u1_1725_sample_start_ &-> (UGT_u64_u1_1725_Sample)
        UGT_u64_u1_1725_sample_completed_ <-& (UGT_u64_u1_1725_Sample)
        UGT_u64_u1_1725_sample_completed_ &-> ($null)
        UGT_u64_u1_1725_update_start_ &-> (UGT_u64_u1_1725_Update)
        UGT_u64_u1_1725_update_completed_ <-& (UGT_u64_u1_1725_Update)
        // Target expression
        // (as target) iNsTr_15
        // iNsTr_15
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1703_to_assign_stmt_1726__entry__ |-> (assign_stmt_1703_to_assign_stmt_1726)
      assign_stmt_1703_to_assign_stmt_1726__exit__ <-| (assign_stmt_1703_to_assign_stmt_1726)
      // if-statement  
      //  file prog.linked.opt.aa, line 633
      ;;[if_stmt_1727_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1727__entry__ |-> (if_stmt_1727_dead_link)
      if_stmt_1727__exit__ <-| (if_stmt_1727_dead_link)
      ;;[if_stmt_1727_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1727__entry__ |-> (if_stmt_1727_eval_test)
      $P [R_iNsTr_15_1728_place]
      R_iNsTr_15_1728_place <-| (if_stmt_1727_eval_test)
      ;;[if_stmt_1727_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1727_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_15_1728_place |-> (if_stmt_1727_if_link if_stmt_1727_else_link)
      $P [xx_xpreheaderx_xi_divideUnsignedx_xexit]
      xx_xpreheaderx_xi_divideUnsignedx_xexit <-| (if_stmt_1727_if_link)
      $P [xx_xpreheaderx_xi_bbx_xnph6x_xix_xpreheader]
      xx_xpreheaderx_xi_bbx_xnph6x_xix_xpreheader <-| (if_stmt_1727_else_link)
      ::[assign_stmt_1755_to_assign_stmt_1760] 
      {
        // 		iNsTr_23 := (xx_x05x_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 645
        // Source expression
        // (xx_x05x_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[LSHR_u64_u64_1754_sample_start_] 
        $T[LSHR_u64_u64_1754_sample_completed_] 
        $T[LSHR_u64_u64_1754_update_start_] 
        $T[LSHR_u64_u64_1754_update_completed_] 
        // xx_x05x_xi
        $T[R_xx_x05x_xi_1751_sample_start_] 
        $T[R_xx_x05x_xi_1751_sample_completed_] 
        $T[R_xx_x05x_xi_1751_update_start_] 
        $T[R_xx_x05x_xi_1751_update_completed_] 
        // implicit reference
        R_xx_x05x_xi_1751_sample_start_ <-& ($entry)
        R_xx_x05x_xi_1751_sample_completed_ <-& (R_xx_x05x_xi_1751_sample_start_)
        R_xx_x05x_xi_1751_update_start_ <-& (R_xx_x05x_xi_1751_sample_completed_)
        R_xx_x05x_xi_1751_update_completed_ <-& (R_xx_x05x_xi_1751_update_start_)
        LSHR_u64_u64_1754_sample_start_ <-& (R_xx_x05x_xi_1751_update_completed_)
        ;;[LSHR_u64_u64_1754_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u64_u64_1754_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u64_u64_1754_sample_start_ &-> (LSHR_u64_u64_1754_Sample)
        LSHR_u64_u64_1754_sample_completed_ <-& (LSHR_u64_u64_1754_Sample)
        LSHR_u64_u64_1754_sample_completed_ &-> ($null)
        LSHR_u64_u64_1754_update_start_ &-> (LSHR_u64_u64_1754_Update)
        LSHR_u64_u64_1754_update_completed_ <-& (LSHR_u64_u64_1754_Update)
        // Target expression
        // (as target) iNsTr_23
        // iNsTr_23
        // implicit reference
        // 		iNsTr_24 := (iNsTr_14 < iNsTr_23)
        //  file prog.linked.opt.aa, line 646
        // Source expression
        // (iNsTr_14 < iNsTr_23)
        $T[ULT_u64_u1_1759_sample_start_] 
        $T[ULT_u64_u1_1759_sample_completed_] 
        $T[ULT_u64_u1_1759_update_start_] 
        $T[ULT_u64_u1_1759_update_completed_] 
        // iNsTr_14
        $T[R_iNsTr_14_1757_sample_start_] 
        $T[R_iNsTr_14_1757_sample_completed_] 
        $T[R_iNsTr_14_1757_update_start_] 
        $T[R_iNsTr_14_1757_update_completed_] 
        // implicit reference
        R_iNsTr_14_1757_sample_start_ <-& ($entry)
        R_iNsTr_14_1757_sample_completed_ <-& (R_iNsTr_14_1757_sample_start_)
        R_iNsTr_14_1757_update_start_ <-& (R_iNsTr_14_1757_sample_completed_)
        R_iNsTr_14_1757_update_completed_ <-& (R_iNsTr_14_1757_update_start_)
        // iNsTr_23
        $T[R_iNsTr_23_1758_sample_start_] 
        $T[R_iNsTr_23_1758_sample_completed_] 
        $T[R_iNsTr_23_1758_update_start_] 
        $T[R_iNsTr_23_1758_update_completed_] 
        // implicit reference
        R_iNsTr_23_1758_sample_start_ <-& (LSHR_u64_u64_1754_update_completed_)
        R_iNsTr_23_1758_sample_completed_ <-& (R_iNsTr_23_1758_sample_start_)
        R_iNsTr_23_1758_update_start_ <-& (R_iNsTr_23_1758_sample_completed_)
        R_iNsTr_23_1758_update_completed_ <-& (R_iNsTr_23_1758_update_start_)
        ULT_u64_u1_1759_sample_start_ <-& (R_iNsTr_14_1757_update_completed_)
        ULT_u64_u1_1759_sample_start_ <-& (R_iNsTr_23_1758_update_completed_)
        ;;[ULT_u64_u1_1759_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u64_u1_1759_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u64_u1_1759_sample_start_ &-> (ULT_u64_u1_1759_Sample)
        ULT_u64_u1_1759_sample_completed_ <-& (ULT_u64_u1_1759_Sample)
        ULT_u64_u1_1759_sample_completed_ &-> ($null)
        ULT_u64_u1_1759_update_start_ &-> (ULT_u64_u1_1759_Update)
        ULT_u64_u1_1759_update_completed_ <-& (ULT_u64_u1_1759_Update)
        // Target expression
        // (as target) iNsTr_24
        // iNsTr_24
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1755_to_assign_stmt_1760__entry__ |-> (assign_stmt_1755_to_assign_stmt_1760)
      assign_stmt_1755_to_assign_stmt_1760__exit__ <-| (assign_stmt_1755_to_assign_stmt_1760)
      // if-statement  
      //  file prog.linked.opt.aa, line 647
      ;;[if_stmt_1761_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1761__entry__ |-> (if_stmt_1761_dead_link)
      if_stmt_1761__exit__ <-| (if_stmt_1761_dead_link)
      ;;[if_stmt_1761_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1761__entry__ |-> (if_stmt_1761_eval_test)
      $P [R_iNsTr_24_1762_place]
      R_iNsTr_24_1762_place <-| (if_stmt_1761_eval_test)
      ;;[if_stmt_1761_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1761_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_24_1762_place |-> (if_stmt_1761_if_link if_stmt_1761_else_link)
      $P [bbx_xnph6x_xi_bbx_xnphx_xix_xpreheader]
      bbx_xnph6x_xi_bbx_xnphx_xix_xpreheader <-| (if_stmt_1761_if_link)
      $P [bbx_xnph6x_xi_xx_x_crit_edgex_xi]
      bbx_xnph6x_xi_xx_x_crit_edgex_xi <-| (if_stmt_1761_else_link)
      ::[assign_stmt_1789_to_assign_stmt_1800] 
      {
        // 		iNsTr_31 := (shifted_divisorx_x02x_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 659
        // Source expression
        // (shifted_divisorx_x02x_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[SHL_u64_u64_1788_sample_start_] 
        $T[SHL_u64_u64_1788_sample_completed_] 
        $T[SHL_u64_u64_1788_update_start_] 
        $T[SHL_u64_u64_1788_update_completed_] 
        // shifted_divisorx_x02x_xi
        $T[R_shifted_divisorx_x02x_xi_1785_sample_start_] 
        $T[R_shifted_divisorx_x02x_xi_1785_sample_completed_] 
        $T[R_shifted_divisorx_x02x_xi_1785_update_start_] 
        $T[R_shifted_divisorx_x02x_xi_1785_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x02x_xi_1785_sample_start_ <-& ($entry)
        R_shifted_divisorx_x02x_xi_1785_sample_completed_ <-& (R_shifted_divisorx_x02x_xi_1785_sample_start_)
        R_shifted_divisorx_x02x_xi_1785_update_start_ <-& (R_shifted_divisorx_x02x_xi_1785_sample_completed_)
        R_shifted_divisorx_x02x_xi_1785_update_completed_ <-& (R_shifted_divisorx_x02x_xi_1785_update_start_)
        SHL_u64_u64_1788_sample_start_ <-& (R_shifted_divisorx_x02x_xi_1785_update_completed_)
        ;;[SHL_u64_u64_1788_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u64_u64_1788_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u64_u64_1788_sample_start_ &-> (SHL_u64_u64_1788_Sample)
        SHL_u64_u64_1788_sample_completed_ <-& (SHL_u64_u64_1788_Sample)
        SHL_u64_u64_1788_sample_completed_ &-> ($null)
        SHL_u64_u64_1788_update_start_ &-> (SHL_u64_u64_1788_Update)
        SHL_u64_u64_1788_update_completed_ <-& (SHL_u64_u64_1788_Update)
        // Target expression
        // (as target) iNsTr_31
        // iNsTr_31
        // implicit reference
        // 		iNsTr_32 := (curr_quotientx_x01x_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 660
        // Source expression
        // (curr_quotientx_x01x_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[SHL_u64_u64_1794_sample_start_] 
        $T[SHL_u64_u64_1794_sample_completed_] 
        $T[SHL_u64_u64_1794_update_start_] 
        $T[SHL_u64_u64_1794_update_completed_] 
        // curr_quotientx_x01x_xi
        $T[R_curr_quotientx_x01x_xi_1791_sample_start_] 
        $T[R_curr_quotientx_x01x_xi_1791_sample_completed_] 
        $T[R_curr_quotientx_x01x_xi_1791_update_start_] 
        $T[R_curr_quotientx_x01x_xi_1791_update_completed_] 
        // implicit reference
        R_curr_quotientx_x01x_xi_1791_sample_start_ <-& ($entry)
        R_curr_quotientx_x01x_xi_1791_sample_completed_ <-& (R_curr_quotientx_x01x_xi_1791_sample_start_)
        R_curr_quotientx_x01x_xi_1791_update_start_ <-& (R_curr_quotientx_x01x_xi_1791_sample_completed_)
        R_curr_quotientx_x01x_xi_1791_update_completed_ <-& (R_curr_quotientx_x01x_xi_1791_update_start_)
        SHL_u64_u64_1794_sample_start_ <-& (R_curr_quotientx_x01x_xi_1791_update_completed_)
        ;;[SHL_u64_u64_1794_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u64_u64_1794_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u64_u64_1794_sample_start_ &-> (SHL_u64_u64_1794_Sample)
        SHL_u64_u64_1794_sample_completed_ <-& (SHL_u64_u64_1794_Sample)
        SHL_u64_u64_1794_sample_completed_ &-> ($null)
        SHL_u64_u64_1794_update_start_ &-> (SHL_u64_u64_1794_Update)
        SHL_u64_u64_1794_update_completed_ <-& (SHL_u64_u64_1794_Update)
        // Target expression
        // (as target) iNsTr_32
        // iNsTr_32
        // implicit reference
        // 		iNsTr_33 := (iNsTr_31 < iNsTr_23)
        //  file prog.linked.opt.aa, line 661
        // Source expression
        // (iNsTr_31 < iNsTr_23)
        $T[ULT_u64_u1_1799_sample_start_] 
        $T[ULT_u64_u1_1799_sample_completed_] 
        $T[ULT_u64_u1_1799_update_start_] 
        $T[ULT_u64_u1_1799_update_completed_] 
        // iNsTr_31
        $T[R_iNsTr_31_1797_sample_start_] 
        $T[R_iNsTr_31_1797_sample_completed_] 
        $T[R_iNsTr_31_1797_update_start_] 
        $T[R_iNsTr_31_1797_update_completed_] 
        // implicit reference
        R_iNsTr_31_1797_sample_start_ <-& (SHL_u64_u64_1788_update_completed_)
        R_iNsTr_31_1797_sample_completed_ <-& (R_iNsTr_31_1797_sample_start_)
        R_iNsTr_31_1797_update_start_ <-& (R_iNsTr_31_1797_sample_completed_)
        R_iNsTr_31_1797_update_completed_ <-& (R_iNsTr_31_1797_update_start_)
        // iNsTr_23
        $T[R_iNsTr_23_1798_sample_start_] 
        $T[R_iNsTr_23_1798_sample_completed_] 
        $T[R_iNsTr_23_1798_update_start_] 
        $T[R_iNsTr_23_1798_update_completed_] 
        // implicit reference
        R_iNsTr_23_1798_sample_start_ <-& ($entry)
        R_iNsTr_23_1798_sample_completed_ <-& (R_iNsTr_23_1798_sample_start_)
        R_iNsTr_23_1798_update_start_ <-& (R_iNsTr_23_1798_sample_completed_)
        R_iNsTr_23_1798_update_completed_ <-& (R_iNsTr_23_1798_update_start_)
        ULT_u64_u1_1799_sample_start_ <-& (R_iNsTr_31_1797_update_completed_)
        ULT_u64_u1_1799_sample_start_ <-& (R_iNsTr_23_1798_update_completed_)
        ;;[ULT_u64_u1_1799_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u64_u1_1799_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u64_u1_1799_sample_start_ &-> (ULT_u64_u1_1799_Sample)
        ULT_u64_u1_1799_sample_completed_ <-& (ULT_u64_u1_1799_Sample)
        ULT_u64_u1_1799_sample_completed_ &-> ($null)
        ULT_u64_u1_1799_update_start_ &-> (ULT_u64_u1_1799_Update)
        ULT_u64_u1_1799_update_completed_ <-& (ULT_u64_u1_1799_Update)
        // Target expression
        // (as target) iNsTr_33
        // iNsTr_33
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1789_to_assign_stmt_1800__entry__ |-> (assign_stmt_1789_to_assign_stmt_1800)
      assign_stmt_1789_to_assign_stmt_1800__exit__ <-| (assign_stmt_1789_to_assign_stmt_1800)
      // if-statement  
      //  file prog.linked.opt.aa, line 662
      ;;[if_stmt_1801_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1801__entry__ |-> (if_stmt_1801_dead_link)
      if_stmt_1801__exit__ <-| (if_stmt_1801_dead_link)
      ;;[if_stmt_1801_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1801__entry__ |-> (if_stmt_1801_eval_test)
      $P [R_iNsTr_33_1802_place]
      R_iNsTr_33_1802_place <-| (if_stmt_1801_eval_test)
      ;;[if_stmt_1801_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1801_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_33_1802_place |-> (if_stmt_1801_if_link if_stmt_1801_else_link)
      $P [bbx_xnphx_xi_bbx_xnphx_xi]
      bbx_xnphx_xi_bbx_xnphx_xi <-| (if_stmt_1801_if_link)
      $P [bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit]
      bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit <-| (if_stmt_1801_else_link)
      ::[assign_stmt_1837_to_assign_stmt_1847] 
      {
        // 		iNsTr_27 := (curr_quotientx_x0x_xlcssax_xi + quotientx_x04x_xi)
        //  file prog.linked.opt.aa, line 676
        // Source expression
        // (curr_quotientx_x0x_xlcssax_xi + quotientx_x04x_xi)
        $T[ADD_u64_u64_1836_sample_start_] 
        $T[ADD_u64_u64_1836_sample_completed_] 
        $T[ADD_u64_u64_1836_update_start_] 
        $T[ADD_u64_u64_1836_update_completed_] 
        // curr_quotientx_x0x_xlcssax_xi
        $T[R_curr_quotientx_x0x_xlcssax_xi_1834_sample_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xi_1834_sample_completed_] 
        $T[R_curr_quotientx_x0x_xlcssax_xi_1834_update_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xi_1834_update_completed_] 
        // implicit reference
        R_curr_quotientx_x0x_xlcssax_xi_1834_sample_start_ <-& ($entry)
        R_curr_quotientx_x0x_xlcssax_xi_1834_sample_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xi_1834_sample_start_)
        R_curr_quotientx_x0x_xlcssax_xi_1834_update_start_ <-& (R_curr_quotientx_x0x_xlcssax_xi_1834_sample_completed_)
        R_curr_quotientx_x0x_xlcssax_xi_1834_update_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xi_1834_update_start_)
        // quotientx_x04x_xi
        $T[R_quotientx_x04x_xi_1835_sample_start_] 
        $T[R_quotientx_x04x_xi_1835_sample_completed_] 
        $T[R_quotientx_x04x_xi_1835_update_start_] 
        $T[R_quotientx_x04x_xi_1835_update_completed_] 
        // implicit reference
        R_quotientx_x04x_xi_1835_sample_start_ <-& ($entry)
        R_quotientx_x04x_xi_1835_sample_completed_ <-& (R_quotientx_x04x_xi_1835_sample_start_)
        R_quotientx_x04x_xi_1835_update_start_ <-& (R_quotientx_x04x_xi_1835_sample_completed_)
        R_quotientx_x04x_xi_1835_update_completed_ <-& (R_quotientx_x04x_xi_1835_update_start_)
        ADD_u64_u64_1836_sample_start_ <-& (R_curr_quotientx_x0x_xlcssax_xi_1834_update_completed_)
        ADD_u64_u64_1836_sample_start_ <-& (R_quotientx_x04x_xi_1835_update_completed_)
        ;;[ADD_u64_u64_1836_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_1836_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_1836_sample_start_ &-> (ADD_u64_u64_1836_Sample)
        ADD_u64_u64_1836_sample_completed_ <-& (ADD_u64_u64_1836_Sample)
        ADD_u64_u64_1836_sample_completed_ &-> ($null)
        ADD_u64_u64_1836_update_start_ &-> (ADD_u64_u64_1836_Update)
        ADD_u64_u64_1836_update_completed_ <-& (ADD_u64_u64_1836_Update)
        // Target expression
        // (as target) iNsTr_27
        // iNsTr_27
        // implicit reference
        // 		iNsTr_28 := (xx_x05x_xi - shifted_divisorx_x0x_xlcssax_xi)
        //  file prog.linked.opt.aa, line 677
        // Source expression
        // (xx_x05x_xi - shifted_divisorx_x0x_xlcssax_xi)
        $T[SUB_u64_u64_1841_sample_start_] 
        $T[SUB_u64_u64_1841_sample_completed_] 
        $T[SUB_u64_u64_1841_update_start_] 
        $T[SUB_u64_u64_1841_update_completed_] 
        // xx_x05x_xi
        $T[R_xx_x05x_xi_1839_sample_start_] 
        $T[R_xx_x05x_xi_1839_sample_completed_] 
        $T[R_xx_x05x_xi_1839_update_start_] 
        $T[R_xx_x05x_xi_1839_update_completed_] 
        // implicit reference
        R_xx_x05x_xi_1839_sample_start_ <-& ($entry)
        R_xx_x05x_xi_1839_sample_completed_ <-& (R_xx_x05x_xi_1839_sample_start_)
        R_xx_x05x_xi_1839_update_start_ <-& (R_xx_x05x_xi_1839_sample_completed_)
        R_xx_x05x_xi_1839_update_completed_ <-& (R_xx_x05x_xi_1839_update_start_)
        // shifted_divisorx_x0x_xlcssax_xi
        $T[R_shifted_divisorx_x0x_xlcssax_xi_1840_sample_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xi_1840_sample_completed_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xi_1840_update_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xi_1840_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x0x_xlcssax_xi_1840_sample_start_ <-& ($entry)
        R_shifted_divisorx_x0x_xlcssax_xi_1840_sample_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xi_1840_sample_start_)
        R_shifted_divisorx_x0x_xlcssax_xi_1840_update_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xi_1840_sample_completed_)
        R_shifted_divisorx_x0x_xlcssax_xi_1840_update_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xi_1840_update_start_)
        SUB_u64_u64_1841_sample_start_ <-& (R_xx_x05x_xi_1839_update_completed_)
        SUB_u64_u64_1841_sample_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xi_1840_update_completed_)
        ;;[SUB_u64_u64_1841_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u64_u64_1841_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u64_u64_1841_sample_start_ &-> (SUB_u64_u64_1841_Sample)
        SUB_u64_u64_1841_sample_completed_ <-& (SUB_u64_u64_1841_Sample)
        SUB_u64_u64_1841_sample_completed_ &-> ($null)
        SUB_u64_u64_1841_update_start_ &-> (SUB_u64_u64_1841_Update)
        SUB_u64_u64_1841_update_completed_ <-& (SUB_u64_u64_1841_Update)
        // Target expression
        // (as target) iNsTr_28
        // iNsTr_28
        // implicit reference
        // 		iNsTr_29 := (iNsTr_28 < iNsTr_14)
        //  file prog.linked.opt.aa, line 678
        // Source expression
        // (iNsTr_28 < iNsTr_14)
        $T[ULT_u64_u1_1846_sample_start_] 
        $T[ULT_u64_u1_1846_sample_completed_] 
        $T[ULT_u64_u1_1846_update_start_] 
        $T[ULT_u64_u1_1846_update_completed_] 
        // iNsTr_28
        $T[R_iNsTr_28_1844_sample_start_] 
        $T[R_iNsTr_28_1844_sample_completed_] 
        $T[R_iNsTr_28_1844_update_start_] 
        $T[R_iNsTr_28_1844_update_completed_] 
        // implicit reference
        R_iNsTr_28_1844_sample_start_ <-& (SUB_u64_u64_1841_update_completed_)
        R_iNsTr_28_1844_sample_completed_ <-& (R_iNsTr_28_1844_sample_start_)
        R_iNsTr_28_1844_update_start_ <-& (R_iNsTr_28_1844_sample_completed_)
        R_iNsTr_28_1844_update_completed_ <-& (R_iNsTr_28_1844_update_start_)
        // iNsTr_14
        $T[R_iNsTr_14_1845_sample_start_] 
        $T[R_iNsTr_14_1845_sample_completed_] 
        $T[R_iNsTr_14_1845_update_start_] 
        $T[R_iNsTr_14_1845_update_completed_] 
        // implicit reference
        R_iNsTr_14_1845_sample_start_ <-& ($entry)
        R_iNsTr_14_1845_sample_completed_ <-& (R_iNsTr_14_1845_sample_start_)
        R_iNsTr_14_1845_update_start_ <-& (R_iNsTr_14_1845_sample_completed_)
        R_iNsTr_14_1845_update_completed_ <-& (R_iNsTr_14_1845_update_start_)
        ULT_u64_u1_1846_sample_start_ <-& (R_iNsTr_28_1844_update_completed_)
        ULT_u64_u1_1846_sample_start_ <-& (R_iNsTr_14_1845_update_completed_)
        ;;[ULT_u64_u1_1846_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u64_u1_1846_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u64_u1_1846_sample_start_ &-> (ULT_u64_u1_1846_Sample)
        ULT_u64_u1_1846_sample_completed_ <-& (ULT_u64_u1_1846_Sample)
        ULT_u64_u1_1846_sample_completed_ &-> ($null)
        ULT_u64_u1_1846_update_start_ &-> (ULT_u64_u1_1846_Update)
        ULT_u64_u1_1846_update_completed_ <-& (ULT_u64_u1_1846_Update)
        // Target expression
        // (as target) iNsTr_29
        // iNsTr_29
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1837_to_assign_stmt_1847__entry__ |-> (assign_stmt_1837_to_assign_stmt_1847)
      assign_stmt_1837_to_assign_stmt_1847__exit__ <-| (assign_stmt_1837_to_assign_stmt_1847)
      // if-statement  
      //  file prog.linked.opt.aa, line 679
      ;;[if_stmt_1848_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1848__entry__ |-> (if_stmt_1848_dead_link)
      if_stmt_1848__exit__ <-| (if_stmt_1848_dead_link)
      ;;[if_stmt_1848_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1848__entry__ |-> (if_stmt_1848_eval_test)
      $P [R_iNsTr_29_1849_place]
      R_iNsTr_29_1849_place <-| (if_stmt_1848_eval_test)
      ;;[if_stmt_1848_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1848_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_29_1849_place |-> (if_stmt_1848_if_link if_stmt_1848_else_link)
      $P [xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit]
      xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit <-| (if_stmt_1848_if_link)
      $P [xx_x_crit_edgex_xi_bbx_xnph6x_xi]
      xx_x_crit_edgex_xi_bbx_xnph6x_xi <-| (if_stmt_1848_else_link)
      ::[assign_stmt_1877_to_assign_stmt_1889] 
      {
        // 		iNsTr_18 := (($bitcast ($int<32>) iNsTr_13 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.linked.opt.aa, line 691
        // Source expression
        // (($bitcast ($int<32>) iNsTr_13 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[SLT_i32_u1_1876_sample_start_] 
        $T[SLT_i32_u1_1876_sample_completed_] 
        $T[SLT_i32_u1_1876_update_start_] 
        $T[SLT_i32_u1_1876_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_13 )
        $T[type_cast_1872_sample_start_] 
        $T[type_cast_1872_sample_completed_] 
        $T[type_cast_1872_update_start_] 
        $T[type_cast_1872_update_completed_] 
        // iNsTr_13
        $T[R_iNsTr_13_1871_sample_start_] 
        $T[R_iNsTr_13_1871_sample_completed_] 
        $T[R_iNsTr_13_1871_update_start_] 
        $T[R_iNsTr_13_1871_update_completed_] 
        // implicit reference
        R_iNsTr_13_1871_sample_start_ <-& ($entry)
        R_iNsTr_13_1871_sample_completed_ <-& (R_iNsTr_13_1871_sample_start_)
        R_iNsTr_13_1871_update_start_ <-& (R_iNsTr_13_1871_sample_completed_)
        R_iNsTr_13_1871_update_completed_ <-& (R_iNsTr_13_1871_update_start_)
        type_cast_1872_sample_start_ <-& (R_iNsTr_13_1871_update_completed_)
        ;;[type_cast_1872_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1872_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1872_sample_start_ &-> (type_cast_1872_Sample)
        type_cast_1872_sample_completed_ <-& (type_cast_1872_Sample)
        type_cast_1872_sample_completed_ &-> ($null)
        type_cast_1872_update_start_ &-> (type_cast_1872_Update)
        type_cast_1872_update_completed_ <-& (type_cast_1872_Update)
        // flow-through
        type_cast_1872_update_start_ <-& (type_cast_1872_sample_completed_)
        SLT_i32_u1_1876_sample_start_ <-& (type_cast_1872_update_completed_)
        ;;[SLT_i32_u1_1876_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_i32_u1_1876_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_i32_u1_1876_sample_start_ &-> (SLT_i32_u1_1876_Sample)
        SLT_i32_u1_1876_sample_completed_ <-& (SLT_i32_u1_1876_Sample)
        SLT_i32_u1_1876_sample_completed_ &-> ($null)
        SLT_i32_u1_1876_update_start_ &-> (SLT_i32_u1_1876_Update)
        SLT_i32_u1_1876_update_completed_ <-& (SLT_i32_u1_1876_Update)
        // Target expression
        // (as target) iNsTr_18
        // iNsTr_18
        // implicit reference
        // 		iNsTr_19 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - quotientx_x1x_xi)
        //  file prog.linked.opt.aa, line 692
        // Source expression
        // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - quotientx_x1x_xi)
        $T[SUB_u64_u64_1882_sample_start_] 
        $T[SUB_u64_u64_1882_sample_completed_] 
        $T[SUB_u64_u64_1882_update_start_] 
        $T[SUB_u64_u64_1882_update_completed_] 
        // quotientx_x1x_xi
        $T[R_quotientx_x1x_xi_1881_sample_start_] 
        $T[R_quotientx_x1x_xi_1881_sample_completed_] 
        $T[R_quotientx_x1x_xi_1881_update_start_] 
        $T[R_quotientx_x1x_xi_1881_update_completed_] 
        // implicit reference
        R_quotientx_x1x_xi_1881_sample_start_ <-& ($entry)
        R_quotientx_x1x_xi_1881_sample_completed_ <-& (R_quotientx_x1x_xi_1881_sample_start_)
        R_quotientx_x1x_xi_1881_update_start_ <-& (R_quotientx_x1x_xi_1881_sample_completed_)
        R_quotientx_x1x_xi_1881_update_completed_ <-& (R_quotientx_x1x_xi_1881_update_start_)
        SUB_u64_u64_1882_sample_start_ <-& (R_quotientx_x1x_xi_1881_update_completed_)
        ;;[SUB_u64_u64_1882_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u64_u64_1882_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u64_u64_1882_sample_start_ &-> (SUB_u64_u64_1882_Sample)
        SUB_u64_u64_1882_sample_completed_ <-& (SUB_u64_u64_1882_Sample)
        SUB_u64_u64_1882_sample_completed_ &-> ($null)
        SUB_u64_u64_1882_update_start_ &-> (SUB_u64_u64_1882_Update)
        SUB_u64_u64_1882_update_completed_ <-& (SUB_u64_u64_1882_Update)
        // Target expression
        // (as target) iNsTr_19
        // iNsTr_19
        // implicit reference
        // 		iNsTr_20 := ( $mux iNsTr_18 iNsTr_19  quotientx_x1x_xi ) 
        //  file prog.linked.opt.aa, line 693
        // Source expression
        // ( $mux iNsTr_18 iNsTr_19  quotientx_x1x_xi ) 
        $T[MUX_1888_sample_start_] 
        $T[MUX_1888_sample_completed_] 
        $T[MUX_1888_update_start_] 
        $T[MUX_1888_update_completed_] 
        // iNsTr_18
        $T[R_iNsTr_18_1885_sample_start_] 
        $T[R_iNsTr_18_1885_sample_completed_] 
        $T[R_iNsTr_18_1885_update_start_] 
        $T[R_iNsTr_18_1885_update_completed_] 
        // implicit reference
        R_iNsTr_18_1885_sample_start_ <-& (SLT_i32_u1_1876_update_completed_)
        R_iNsTr_18_1885_sample_completed_ <-& (R_iNsTr_18_1885_sample_start_)
        R_iNsTr_18_1885_update_start_ <-& (R_iNsTr_18_1885_sample_completed_)
        R_iNsTr_18_1885_update_completed_ <-& (R_iNsTr_18_1885_update_start_)
        // iNsTr_19
        $T[R_iNsTr_19_1886_sample_start_] 
        $T[R_iNsTr_19_1886_sample_completed_] 
        $T[R_iNsTr_19_1886_update_start_] 
        $T[R_iNsTr_19_1886_update_completed_] 
        // implicit reference
        R_iNsTr_19_1886_sample_start_ <-& (SUB_u64_u64_1882_update_completed_)
        R_iNsTr_19_1886_sample_completed_ <-& (R_iNsTr_19_1886_sample_start_)
        R_iNsTr_19_1886_update_start_ <-& (R_iNsTr_19_1886_sample_completed_)
        R_iNsTr_19_1886_update_completed_ <-& (R_iNsTr_19_1886_update_start_)
        // quotientx_x1x_xi
        $T[R_quotientx_x1x_xi_1887_sample_start_] 
        $T[R_quotientx_x1x_xi_1887_sample_completed_] 
        $T[R_quotientx_x1x_xi_1887_update_start_] 
        $T[R_quotientx_x1x_xi_1887_update_completed_] 
        // implicit reference
        R_quotientx_x1x_xi_1887_sample_start_ <-& ($entry)
        R_quotientx_x1x_xi_1887_sample_completed_ <-& (R_quotientx_x1x_xi_1887_sample_start_)
        R_quotientx_x1x_xi_1887_update_start_ <-& (R_quotientx_x1x_xi_1887_sample_completed_)
        R_quotientx_x1x_xi_1887_update_completed_ <-& (R_quotientx_x1x_xi_1887_update_start_)
        MUX_1888_sample_start_ <-& (R_iNsTr_18_1885_update_completed_)
        MUX_1888_sample_start_ <-& (R_iNsTr_19_1886_update_completed_)
        MUX_1888_sample_start_ <-& (R_quotientx_x1x_xi_1887_update_completed_)
        ;;[MUX_1888_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1888_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1888_sample_start_ &-> (MUX_1888_start)
        MUX_1888_sample_completed_ <-& (MUX_1888_start)
        MUX_1888_update_start_ &-> (MUX_1888_complete)
        MUX_1888_update_completed_ <-& (MUX_1888_complete)
        MUX_1888_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_20
        // iNsTr_20
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1877_to_assign_stmt_1889__entry__ |-> (assign_stmt_1877_to_assign_stmt_1889)
      assign_stmt_1877_to_assign_stmt_1889__exit__ <-| (assign_stmt_1877_to_assign_stmt_1889)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 626
      ;;[merge_stmt_1697_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1697__entry__ |-> (merge_stmt_1697_dead_link)
      merge_stmt_1697__exit__ <-| (merge_stmt_1697_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 626  --------------------------
      ||[bb_0_xx_xpreheaderx_xi_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_xx_xpreheaderx_xi |-> (bb_0_xx_xpreheaderx_xi_PhiReq)
      $P [merge_stmt_1697_PhiReqMerge] 
      merge_stmt_1697_PhiReqMerge <-| ( bb_0_xx_xpreheaderx_xi_PhiReq )
      ||[merge_stmt_1697_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1697_PhiReqMerge |-> (merge_stmt_1697_PhiAck)
      merge_stmt_1697__exit__  <-| (merge_stmt_1697_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 626  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 638
      ;;[merge_stmt_1733_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1733__entry__ |-> (merge_stmt_1733_dead_link)
      merge_stmt_1733__exit__ <-| (merge_stmt_1733_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 638  --------------------------
      ||[xx_xpreheaderx_xi_bbx_xnph6x_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      xx_xpreheaderx_xi_bbx_xnph6x_xix_xpreheader |-> (xx_xpreheaderx_xi_bbx_xnph6x_xix_xpreheader_PhiReq)
      $P [merge_stmt_1733_PhiReqMerge] 
      merge_stmt_1733_PhiReqMerge <-| ( xx_xpreheaderx_xi_bbx_xnph6x_xix_xpreheader_PhiReq )
      ||[merge_stmt_1733_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1733_PhiReqMerge |-> (merge_stmt_1733_PhiAck)
      merge_stmt_1733__exit__  <-| (merge_stmt_1733_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 638  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 641
      //---------------------   merge statement  file prog.linked.opt.aa, line 641  --------------------------
      ||[bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi_PhiReq] 
      {
        ;;[phi_stmt_1736] 
        {
          ||[phi_stmt_1736_sources] 
          {
            // sources for 			$phi xx_x05x_xi := 			  ($cast ($uint<64>) iNsTr_28 ) $on xx_x_crit_edgex_xi_bbx_xnph6x_xi			  ($cast ($uint<64>) iNsTr_2 ) $on bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_28 )
            ;;[type_cast_1739] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<64>) iNsTr_2 )
            ;;[type_cast_1741] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1736_req] 
        }
        ;;[phi_stmt_1742] 
        {
          ||[phi_stmt_1742_sources] 
          {
            // sources for 			$phi quotientx_x04x_xi := 			  ($cast ($uint<64>) iNsTr_27 ) $on xx_x_crit_edgex_xi_bbx_xnph6x_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_27 )
            ;;[type_cast_1745] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1742_req] 
        }
      }
      bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi |-> (bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi_PhiReq)
      ||[xx_x_crit_edgex_xi_bbx_xnph6x_xi_PhiReq] 
      {
        ;;[phi_stmt_1736] 
        {
          ||[phi_stmt_1736_sources] 
          {
            // sources for 			$phi xx_x05x_xi := 			  ($cast ($uint<64>) iNsTr_28 ) $on xx_x_crit_edgex_xi_bbx_xnph6x_xi			  ($cast ($uint<64>) iNsTr_2 ) $on bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_28 )
            ;;[type_cast_1739] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<64>) iNsTr_2 )
            ;;[type_cast_1741] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1736_req] 
        }
        ;;[phi_stmt_1742] 
        {
          ||[phi_stmt_1742_sources] 
          {
            // sources for 			$phi quotientx_x04x_xi := 			  ($cast ($uint<64>) iNsTr_27 ) $on xx_x_crit_edgex_xi_bbx_xnph6x_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_27 )
            ;;[type_cast_1745] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1742_req] 
        }
      }
      xx_x_crit_edgex_xi_bbx_xnph6x_xi |-> (xx_x_crit_edgex_xi_bbx_xnph6x_xi_PhiReq)
      $P [merge_stmt_1735_PhiReqMerge] 
      merge_stmt_1735_PhiReqMerge <-| ( bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi_PhiReq  xx_x_crit_edgex_xi_bbx_xnph6x_xi_PhiReq )
      ||[merge_stmt_1735_PhiAck] 
      {
        $T [phi_stmt_1736_ack] 
        $T [phi_stmt_1742_ack] 
      }
      merge_stmt_1735_PhiReqMerge |-> (merge_stmt_1735_PhiAck)
      merge_stmt_1735__exit__  <-| (merge_stmt_1735_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 641  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 652
      ;;[merge_stmt_1767_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1767__entry__ |-> (merge_stmt_1767_dead_link)
      merge_stmt_1767__exit__ <-| (merge_stmt_1767_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 652  --------------------------
      ||[bbx_xnph6x_xi_bbx_xnphx_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph6x_xi_bbx_xnphx_xix_xpreheader |-> (bbx_xnph6x_xi_bbx_xnphx_xix_xpreheader_PhiReq)
      $P [merge_stmt_1767_PhiReqMerge] 
      merge_stmt_1767_PhiReqMerge <-| ( bbx_xnph6x_xi_bbx_xnphx_xix_xpreheader_PhiReq )
      ||[merge_stmt_1767_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1767_PhiReqMerge |-> (merge_stmt_1767_PhiAck)
      merge_stmt_1767__exit__  <-| (merge_stmt_1767_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 652  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 655
      //---------------------   merge statement  file prog.linked.opt.aa, line 655  --------------------------
      ||[bbx_xnphx_xi_bbx_xnphx_xi_PhiReq] 
      {
        ;;[phi_stmt_1776] 
        {
          ||[phi_stmt_1776_sources] 
          {
            // sources for 			$phi curr_quotientx_x01x_xi := 			  ($cast ($uint<64>) iNsTr_32 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_32 )
            ;;[type_cast_1779] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1776_req] 
        }
        ;;[phi_stmt_1770] 
        {
          ||[phi_stmt_1770_sources] 
          {
            // sources for 			$phi shifted_divisorx_x02x_xi := 			  ($cast ($uint<64>) iNsTr_31 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<64>) iNsTr_14 ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_31 )
            ;;[type_cast_1773] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<64>) iNsTr_14 )
            ;;[type_cast_1775] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1770_req] 
        }
      }
      bbx_xnphx_xi_bbx_xnphx_xi |-> (bbx_xnphx_xi_bbx_xnphx_xi_PhiReq)
      ||[bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq] 
      {
        ;;[phi_stmt_1776] 
        {
          ||[phi_stmt_1776_sources] 
          {
            // sources for 			$phi curr_quotientx_x01x_xi := 			  ($cast ($uint<64>) iNsTr_32 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_32 )
            ;;[type_cast_1779] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1776_req] 
        }
        ;;[phi_stmt_1770] 
        {
          ||[phi_stmt_1770_sources] 
          {
            // sources for 			$phi shifted_divisorx_x02x_xi := 			  ($cast ($uint<64>) iNsTr_31 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<64>) iNsTr_14 ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_31 )
            ;;[type_cast_1773] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<64>) iNsTr_14 )
            ;;[type_cast_1775] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1770_req] 
        }
      }
      bbx_xnphx_xix_xpreheader_bbx_xnphx_xi |-> (bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq)
      $P [merge_stmt_1769_PhiReqMerge] 
      merge_stmt_1769_PhiReqMerge <-| ( bbx_xnphx_xi_bbx_xnphx_xi_PhiReq  bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq )
      ||[merge_stmt_1769_PhiAck] 
      {
        $T [phi_stmt_1770_ack] 
        $T [phi_stmt_1776_ack] 
      }
      merge_stmt_1769_PhiReqMerge |-> (merge_stmt_1769_PhiAck)
      merge_stmt_1769__exit__  <-| (merge_stmt_1769_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 655  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 667
      ;;[merge_stmt_1807_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1807__entry__ |-> (merge_stmt_1807_dead_link)
      merge_stmt_1807__exit__ <-| (merge_stmt_1807_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 667  --------------------------
      ||[bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_1812] 
        {
          ||[phi_stmt_1812_sources] 
          {
            // sources for 			$phi xx_xlcssa := 			  ($cast ($uint<64>) iNsTr_31 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_31 )
            ;;[type_cast_1815] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1812_req] 
        }
        ;;[phi_stmt_1808] 
        {
          ||[phi_stmt_1808_sources] 
          {
            // sources for 			$phi xx_xlcssa1 := 			  ($cast ($uint<64>) iNsTr_32 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_32 )
            ;;[type_cast_1811] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1808_req] 
        }
      }
      bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit |-> (bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq)
      $P [merge_stmt_1807_PhiReqMerge] 
      merge_stmt_1807_PhiReqMerge <-| ( bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq )
      ||[merge_stmt_1807_PhiAck] 
      {
        $T [phi_stmt_1808_ack] 
        $T [phi_stmt_1812_ack] 
      }
      merge_stmt_1807_PhiReqMerge |-> (merge_stmt_1807_PhiAck)
      merge_stmt_1807__exit__  <-| (merge_stmt_1807_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 667  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 672
      //---------------------   merge statement  file prog.linked.opt.aa, line 672  --------------------------
      ||[bbx_xnph6x_xi_xx_x_crit_edgex_xi_PhiReq] 
      {
        ;;[phi_stmt_1825] 
        {
          ||[phi_stmt_1825_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<64>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<64>
            // ($cast ($uint<64>) xx_xlcssa1 )
            ;;[type_cast_1831] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1825_req] 
        }
        ;;[phi_stmt_1819] 
        {
          ||[phi_stmt_1819_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xi := 			  ($cast ($uint<64>) iNsTr_14 ) $on bbx_xnph6x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_14 )
            ;;[type_cast_1822] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<64>) xx_xlcssa )
            ;;[type_cast_1824] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1819_req] 
        }
      }
      bbx_xnph6x_xi_xx_x_crit_edgex_xi |-> (bbx_xnph6x_xi_xx_x_crit_edgex_xi_PhiReq)
      ||[xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq] 
      {
        ;;[phi_stmt_1825] 
        {
          ||[phi_stmt_1825_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<64>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<64>
            // ($cast ($uint<64>) xx_xlcssa1 )
            ;;[type_cast_1831] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1825_req] 
        }
        ;;[phi_stmt_1819] 
        {
          ||[phi_stmt_1819_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xi := 			  ($cast ($uint<64>) iNsTr_14 ) $on bbx_xnph6x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_14 )
            ;;[type_cast_1822] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<64>) xx_xlcssa )
            ;;[type_cast_1824] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1819_req] 
        }
      }
      xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi |-> (xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq)
      $P [merge_stmt_1818_PhiReqMerge] 
      merge_stmt_1818_PhiReqMerge <-| ( bbx_xnph6x_xi_xx_x_crit_edgex_xi_PhiReq  xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq )
      ||[merge_stmt_1818_PhiAck] 
      {
        $T [phi_stmt_1819_ack] 
        $T [phi_stmt_1825_ack] 
      }
      merge_stmt_1818_PhiReqMerge |-> (merge_stmt_1818_PhiAck)
      merge_stmt_1818__exit__  <-| (merge_stmt_1818_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 672  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 684
      ;;[merge_stmt_1854_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1854__entry__ |-> (merge_stmt_1854_dead_link)
      merge_stmt_1854__exit__ <-| (merge_stmt_1854_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 684  --------------------------
      ||[xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_1855] 
        {
          ||[phi_stmt_1855_sources] 
          {
            // sources for 			$phi xx_xlcssa2 := 			  ($cast ($uint<64>) iNsTr_27 ) $on xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_27 )
            ;;[type_cast_1858] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1855_req] 
        }
      }
      xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit |-> (xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit_PhiReq)
      $P [merge_stmt_1854_PhiReqMerge] 
      merge_stmt_1854_PhiReqMerge <-| ( xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit_PhiReq )
      ||[merge_stmt_1854_PhiAck] 
      {
        $T [phi_stmt_1855_ack] 
      }
      merge_stmt_1854_PhiReqMerge |-> (merge_stmt_1854_PhiAck)
      merge_stmt_1854__exit__  <-| (merge_stmt_1854_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 684  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 688
      //---------------------   merge statement  file prog.linked.opt.aa, line 688  --------------------------
      ||[divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit_PhiReq] 
      {
        ;;[phi_stmt_1862] 
        {
          ||[phi_stmt_1862_sources] 
          {
            // sources for 			$phi quotientx_x1x_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on xx_xpreheaderx_xi_divideUnsignedx_xexit			  ($cast ($uint<64>) xx_xlcssa2 ) $on divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit // type of target is $uint<64>
            // ($cast ($uint<64>) xx_xlcssa2 )
            ;;[type_cast_1868] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1862_req] 
        }
      }
      divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit |-> (divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit_PhiReq)
      ||[xx_xpreheaderx_xi_divideUnsignedx_xexit_PhiReq] 
      {
        ;;[phi_stmt_1862] 
        {
          ||[phi_stmt_1862_sources] 
          {
            // sources for 			$phi quotientx_x1x_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on xx_xpreheaderx_xi_divideUnsignedx_xexit			  ($cast ($uint<64>) xx_xlcssa2 ) $on divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit // type of target is $uint<64>
            // ($cast ($uint<64>) xx_xlcssa2 )
            ;;[type_cast_1868] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1862_req] 
        }
      }
      xx_xpreheaderx_xi_divideUnsignedx_xexit |-> (xx_xpreheaderx_xi_divideUnsignedx_xexit_PhiReq)
      $P [merge_stmt_1861_PhiReqMerge] 
      merge_stmt_1861_PhiReqMerge <-| ( divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit_PhiReq  xx_xpreheaderx_xi_divideUnsignedx_xexit_PhiReq )
      ||[merge_stmt_1861_PhiAck] 
      {
        $T [phi_stmt_1862_ack] 
      }
      merge_stmt_1861_PhiReqMerge |-> (merge_stmt_1861_PhiAck)
      merge_stmt_1861__exit__  <-| (merge_stmt_1861_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 688  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 695
      //---------------------   merge statement  file prog.linked.opt.aa, line 695  --------------------------
      ||[bb_0_bb_10_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_10 |-> (bb_0_bb_10_PhiReq)
      $P [merge_stmt_1891_PhiReqMerge] 
      merge_stmt_1891_PhiReqMerge <-| ( bb_0_bb_10_PhiReq )
      ||[merge_stmt_1891_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1891_PhiReqMerge |-> (merge_stmt_1891_PhiAck)
      merge_stmt_1891__exit__  <-| (merge_stmt_1891_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 695  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 698
      //---------------------   merge statement  file prog.linked.opt.aa, line 698  --------------------------
      ||[bb_10_UnifiedReturnBlock_PhiReq] 
      {
        ;;[phi_stmt_1894] 
        {
          ||[phi_stmt_1894_sources] 
          {
            // sources for 			$phi ret_val__ := 			  ($cast ($uint<64>) iNsTr_20 ) $on divideUnsignedx_xexit_UnifiedReturnBlock			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_10_UnifiedReturnBlock // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_20 )
            ;;[type_cast_1897] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1894_req] 
        }
      }
      bb_10_UnifiedReturnBlock |-> (bb_10_UnifiedReturnBlock_PhiReq)
      ||[divideUnsignedx_xexit_UnifiedReturnBlock_PhiReq] 
      {
        ;;[phi_stmt_1894] 
        {
          ||[phi_stmt_1894_sources] 
          {
            // sources for 			$phi ret_val__ := 			  ($cast ($uint<64>) iNsTr_20 ) $on divideUnsignedx_xexit_UnifiedReturnBlock			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_10_UnifiedReturnBlock // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_20 )
            ;;[type_cast_1897] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1894_req] 
        }
      }
      divideUnsignedx_xexit_UnifiedReturnBlock |-> (divideUnsignedx_xexit_UnifiedReturnBlock_PhiReq)
      $P [merge_stmt_1893_PhiReqMerge] 
      merge_stmt_1893_PhiReqMerge <-| ( bb_10_UnifiedReturnBlock_PhiReq  divideUnsignedx_xexit_UnifiedReturnBlock_PhiReq )
      ||[merge_stmt_1893_PhiAck] 
      {
        $T [phi_stmt_1894_ack] 
      }
      merge_stmt_1893_PhiReqMerge |-> (merge_stmt_1893_PhiAck)
      merge_stmt_1893__exit__  <-| (merge_stmt_1893_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 698  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 702
      //---------------------   merge statement  file prog.linked.opt.aa, line 702  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_1903_PhiReqMerge] 
      merge_stmt_1903_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_1903_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1903_PhiReqMerge |-> (merge_stmt_1903_PhiAck)
      merge_stmt_1903__exit__  <-| (merge_stmt_1903_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 702  --------------------------
      assign_stmt_1636_to_assign_stmt_1690__entry__ <-| (branch_block_stmt_1628__entry__)
      if_stmt_1691__entry__ <-| (assign_stmt_1636_to_assign_stmt_1690__exit__)
      merge_stmt_1697__entry__ <-| (if_stmt_1691__exit__)
      assign_stmt_1703_to_assign_stmt_1726__entry__ <-| (merge_stmt_1697__exit__)
      if_stmt_1727__entry__ <-| (assign_stmt_1703_to_assign_stmt_1726__exit__)
      merge_stmt_1733__entry__ <-| (if_stmt_1727__exit__)
      bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi <-| (merge_stmt_1733__exit__)
      assign_stmt_1755_to_assign_stmt_1760__entry__ <-| (merge_stmt_1735__exit__)
      if_stmt_1761__entry__ <-| (assign_stmt_1755_to_assign_stmt_1760__exit__)
      merge_stmt_1767__entry__ <-| (if_stmt_1761__exit__)
      bbx_xnphx_xix_xpreheader_bbx_xnphx_xi <-| (merge_stmt_1767__exit__)
      assign_stmt_1789_to_assign_stmt_1800__entry__ <-| (merge_stmt_1769__exit__)
      if_stmt_1801__entry__ <-| (assign_stmt_1789_to_assign_stmt_1800__exit__)
      merge_stmt_1807__entry__ <-| (if_stmt_1801__exit__)
      xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi <-| (merge_stmt_1807__exit__)
      assign_stmt_1837_to_assign_stmt_1847__entry__ <-| (merge_stmt_1818__exit__)
      if_stmt_1848__entry__ <-| (assign_stmt_1837_to_assign_stmt_1847__exit__)
      merge_stmt_1854__entry__ <-| (if_stmt_1848__exit__)
      divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit <-| (merge_stmt_1854__exit__)
      assign_stmt_1877_to_assign_stmt_1889__entry__ <-| (merge_stmt_1861__exit__)
      divideUnsignedx_xexit_UnifiedReturnBlock <-| (assign_stmt_1877_to_assign_stmt_1889__exit__)
      bb_10_UnifiedReturnBlock <-| (merge_stmt_1891__exit__)
      return__ <-| (merge_stmt_1893__exit__)
      merge_stmt_1903__exit__ |-> (branch_block_stmt_1628__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %divideSigned%body%
    //  file prog.linked.opt.aa, line 626
    // constant-object-declarations for block %divideSigned%body%
    //  file prog.linked.opt.aa, line 638
    // constant-object-declarations for block %divideSigned%body%
    //  file prog.linked.opt.aa, line 641
    // constant-object-declarations for block %divideSigned%body%
    //  file prog.linked.opt.aa, line 652
    // constant-object-declarations for block %divideSigned%body%
    //  file prog.linked.opt.aa, line 655
    // constant-object-declarations for block %divideSigned%body%
    //  file prog.linked.opt.aa, line 667
    // constant-object-declarations for block %divideSigned%body%
    //  file prog.linked.opt.aa, line 672
    // constant-object-declarations for block %divideSigned%body%
    //  file prog.linked.opt.aa, line 684
    // constant-object-declarations for block %divideSigned%body%
    //  file prog.linked.opt.aa, line 688
    // constant-object-declarations for block %divideSigned%body%
    //  file prog.linked.opt.aa, line 695
    // constant-object-declarations for block %divideSigned%body%
    //  file prog.linked.opt.aa, line 698
    // constant-object-declarations for block %divideSigned%body%
    //  file prog.linked.opt.aa, line 702
    // constant-object-declarations for block %divideSigned%body
    //  file prog.linked.opt.aa, line 610
    // constant-object-declarations for block %divideSigned
    //  file prog.linked.opt.aa, line 605
    // constant-declarations for block %divideSigned%body
    //  file prog.linked.opt.aa, line 610
    // ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_1634_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_1639_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ( $mux iNsTr_0 iNsTr_1  dividend ) 
    // ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_1654_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_1662_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_1667_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ( $mux iNsTr_4 iNsTr_5  divisor ) 
    // ( $mux iNsTr_3 ($bitcast ($uint<32>) _b11111111111111111111111111111111  )  ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) 
    // ($bitcast ($uint<32>) _b11111111111111111111111111111111  )
    $constant $W[type_cast_1680_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1682_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_1688_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 621
    // constant-declarations for block %divideSigned%body%
    //  file prog.linked.opt.aa, line 626
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_1700_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_1709_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ( $mux iNsTr_12 iNsTr_11  iNsTr_7 ) 
    // if-statement  
    //  file prog.linked.opt.aa, line 633
    // constant-declarations for block %divideSigned%body%
    //  file prog.linked.opt.aa, line 638
    // constant-declarations for block %divideSigned%body%
    //  file prog.linked.opt.aa, line 641
    // constant-declarations for phi:  			$phi xx_x05x_xi := 			  ($cast ($uint<64>) iNsTr_28 ) $on xx_x_crit_edgex_xi_bbx_xnph6x_xi			  ($cast ($uint<64>) iNsTr_2 ) $on bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 642
    // constant-declarations for phi:  			$phi quotientx_x04x_xi := 			  ($cast ($uint<64>) iNsTr_27 ) $on xx_x_crit_edgex_xi_bbx_xnph6x_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 643
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_1748_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1753_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 647
    // constant-declarations for block %divideSigned%body%
    //  file prog.linked.opt.aa, line 652
    // constant-declarations for block %divideSigned%body%
    //  file prog.linked.opt.aa, line 655
    // constant-declarations for phi:  			$phi shifted_divisorx_x02x_xi := 			  ($cast ($uint<64>) iNsTr_31 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<64>) iNsTr_14 ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 656
    // constant-declarations for phi:  			$phi curr_quotientx_x01x_xi := 			  ($cast ($uint<64>) iNsTr_32 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 657
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )
    $constant $W[type_cast_1782_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1787_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1793_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 662
    // constant-declarations for block %divideSigned%body%
    //  file prog.linked.opt.aa, line 667
    // constant-declarations for phi:  			$phi xx_xlcssa1 := 			  ($cast ($uint<64>) iNsTr_32 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 668
    // constant-declarations for phi:  			$phi xx_xlcssa := 			  ($cast ($uint<64>) iNsTr_31 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 669
    // constant-declarations for block %divideSigned%body%
    //  file prog.linked.opt.aa, line 672
    // constant-declarations for phi:  			$phi shifted_divisorx_x0x_xlcssax_xi := 			  ($cast ($uint<64>) iNsTr_14 ) $on bbx_xnph6x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 673
    // constant-declarations for phi:  			$phi curr_quotientx_x0x_xlcssax_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<64>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 674
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )
    $constant $W[type_cast_1829_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 679
    // constant-declarations for block %divideSigned%body%
    //  file prog.linked.opt.aa, line 684
    // constant-declarations for phi:  			$phi xx_xlcssa2 := 			  ($cast ($uint<64>) iNsTr_27 ) $on xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 685
    // constant-declarations for block %divideSigned%body%
    //  file prog.linked.opt.aa, line 688
    // constant-declarations for phi:  			$phi quotientx_x1x_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on xx_xpreheaderx_xi_divideUnsignedx_xexit			  ($cast ($uint<64>) xx_xlcssa2 ) $on divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 689
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_1866_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_1875_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_1880_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ( $mux iNsTr_18 iNsTr_19  quotientx_x1x_xi ) 
    // constant-declarations for block %divideSigned%body%
    //  file prog.linked.opt.aa, line 695
    // constant-declarations for block %divideSigned%body%
    //  file prog.linked.opt.aa, line 698
    // constant-declarations for phi:  			$phi ret_val__ := 			  ($cast ($uint<64>) iNsTr_20 ) $on divideUnsignedx_xexit_UnifiedReturnBlock			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_10_UnifiedReturnBlock // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 699
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_1900_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // constant-declarations for block %divideSigned%body%
    //  file prog.linked.opt.aa, line 702
    // block %divideSigned%body
    //  file prog.linked.opt.aa, line 610
    // 		iNsTr_0 := (($bitcast ($int<64>) dividend ) < ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 612
    // ($bitcast ($int<64>) dividend )
    $intermediate $W[type_cast_1631_wire] : $int<64>
    // iNsTr_0
    $W[iNsTr_0_1636] : $int<1>
    // 		iNsTr_1 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - dividend)
    //  file prog.linked.opt.aa, line 613
    // iNsTr_1
    $W[iNsTr_1_1642] : $int<64>
    // 		iNsTr_2 := ( $mux iNsTr_0 iNsTr_1  dividend ) 
    //  file prog.linked.opt.aa, line 614
    // iNsTr_2
    $W[iNsTr_2_1648] : $int<64>
    // 		iNsTr_3 := (($bitcast ($int<64>) iNsTr_2 ) < ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 615
    // ($bitcast ($int<64>) iNsTr_2 )
    $intermediate $W[type_cast_1651_wire] : $int<64>
    // iNsTr_3
    $W[iNsTr_3_1656] : $int<1>
    // 		iNsTr_4 := (($bitcast ($int<32>) divisor ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 616
    // ($bitcast ($int<32>) divisor )
    $intermediate $W[type_cast_1659_wire] : $int<32>
    // iNsTr_4
    $W[iNsTr_4_1664] : $int<1>
    // 		iNsTr_5 := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - divisor)
    //  file prog.linked.opt.aa, line 617
    // iNsTr_5
    $W[iNsTr_5_1670] : $int<32>
    // 		iNsTr_6 := ( $mux iNsTr_4 iNsTr_5  divisor ) 
    //  file prog.linked.opt.aa, line 618
    // iNsTr_6
    $W[iNsTr_6_1676] : $int<32>
    // 		iNsTr_7 := ( $mux iNsTr_3 ($bitcast ($uint<32>) _b11111111111111111111111111111111  )  ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 619
    // iNsTr_7
    $W[iNsTr_7_1684] : $int<32>
    // 		iNsTr_8 := (iNsTr_6 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.linked.opt.aa, line 620
    // iNsTr_8
    $W[iNsTr_8_1690] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 621
    // 		iNsTr_11 := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_7)
    //  file prog.linked.opt.aa, line 628
    // iNsTr_11
    $W[iNsTr_11_1703] : $int<32>
    // 		iNsTr_12 := (($bitcast ($int<32>) iNsTr_6 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 629
    // ($bitcast ($int<32>) iNsTr_6 )
    $intermediate $W[type_cast_1706_wire] : $int<32>
    // iNsTr_12
    $W[iNsTr_12_1711] : $int<1>
    // 		iNsTr_13 := ( $mux iNsTr_12 iNsTr_11  iNsTr_7 ) 
    //  file prog.linked.opt.aa, line 630
    // iNsTr_13
    $W[iNsTr_13_1717] : $int<32>
    // 		iNsTr_14 := ($cast ($uint<64>) iNsTr_6 )
    //  file prog.linked.opt.aa, line 631
    // iNsTr_14
    $W[iNsTr_14_1721] : $int<64>
    // 		iNsTr_15 := (iNsTr_14 > iNsTr_2)
    //  file prog.linked.opt.aa, line 632
    // iNsTr_15
    $W[iNsTr_15_1726] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 633
    // merge-statement  
    //  file prog.linked.opt.aa, line 641
    // 			$phi xx_x05x_xi := 			  ($cast ($uint<64>) iNsTr_28 ) $on xx_x_crit_edgex_xi_bbx_xnph6x_xi			  ($cast ($uint<64>) iNsTr_2 ) $on bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 642
    // ($cast ($uint<64>) iNsTr_28 )
    $intermediate $W[type_cast_1739_wire] : $int<64>
    // ($cast ($uint<64>) iNsTr_2 )
    $intermediate $W[type_cast_1741_wire] : $int<64>
    // xx_x05x_xi
    $W[xx_x05x_xi_1736] : $int<64>
    // 			$phi quotientx_x04x_xi := 			  ($cast ($uint<64>) iNsTr_27 ) $on xx_x_crit_edgex_xi_bbx_xnph6x_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 643
    // ($cast ($uint<64>) iNsTr_27 )
    $intermediate $W[type_cast_1745_wire] : $int<64>
    // quotientx_x04x_xi
    $W[quotientx_x04x_xi_1742] : $int<64>
    // 		iNsTr_23 := (xx_x05x_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 645
    // iNsTr_23
    $W[iNsTr_23_1755] : $int<64>
    // 		iNsTr_24 := (iNsTr_14 < iNsTr_23)
    //  file prog.linked.opt.aa, line 646
    // iNsTr_24
    $W[iNsTr_24_1760] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 647
    // merge-statement  
    //  file prog.linked.opt.aa, line 655
    // 			$phi shifted_divisorx_x02x_xi := 			  ($cast ($uint<64>) iNsTr_31 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<64>) iNsTr_14 ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 656
    // ($cast ($uint<64>) iNsTr_31 )
    $intermediate $W[type_cast_1773_wire] : $int<64>
    // ($cast ($uint<64>) iNsTr_14 )
    $intermediate $W[type_cast_1775_wire] : $int<64>
    // shifted_divisorx_x02x_xi
    $W[shifted_divisorx_x02x_xi_1770] : $int<64>
    // 			$phi curr_quotientx_x01x_xi := 			  ($cast ($uint<64>) iNsTr_32 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 657
    // ($cast ($uint<64>) iNsTr_32 )
    $intermediate $W[type_cast_1779_wire] : $int<64>
    // curr_quotientx_x01x_xi
    $W[curr_quotientx_x01x_xi_1776] : $int<64>
    // 		iNsTr_31 := (shifted_divisorx_x02x_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 659
    // iNsTr_31
    $W[iNsTr_31_1789] : $int<64>
    // 		iNsTr_32 := (curr_quotientx_x01x_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 660
    // iNsTr_32
    $W[iNsTr_32_1795] : $int<64>
    // 		iNsTr_33 := (iNsTr_31 < iNsTr_23)
    //  file prog.linked.opt.aa, line 661
    // iNsTr_33
    $W[iNsTr_33_1800] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 662
    // merge-statement  
    //  file prog.linked.opt.aa, line 667
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<64>) iNsTr_32 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 668
    // ($cast ($uint<64>) iNsTr_32 )
    $intermediate $W[type_cast_1811_wire] : $int<64>
    // xx_xlcssa1
    $W[xx_xlcssa1_1808] : $int<64>
    // 			$phi xx_xlcssa := 			  ($cast ($uint<64>) iNsTr_31 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 669
    // ($cast ($uint<64>) iNsTr_31 )
    $intermediate $W[type_cast_1815_wire] : $int<64>
    // xx_xlcssa
    $W[xx_xlcssa_1812] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 672
    // 			$phi shifted_divisorx_x0x_xlcssax_xi := 			  ($cast ($uint<64>) iNsTr_14 ) $on bbx_xnph6x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 673
    // ($cast ($uint<64>) iNsTr_14 )
    $intermediate $W[type_cast_1822_wire] : $int<64>
    // ($cast ($uint<64>) xx_xlcssa )
    $intermediate $W[type_cast_1824_wire] : $int<64>
    // shifted_divisorx_x0x_xlcssax_xi
    $W[shifted_divisorx_x0x_xlcssax_xi_1819] : $int<64>
    // 			$phi curr_quotientx_x0x_xlcssax_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<64>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 674
    // ($cast ($uint<64>) xx_xlcssa1 )
    $intermediate $W[type_cast_1831_wire] : $int<64>
    // curr_quotientx_x0x_xlcssax_xi
    $W[curr_quotientx_x0x_xlcssax_xi_1825] : $int<64>
    // 		iNsTr_27 := (curr_quotientx_x0x_xlcssax_xi + quotientx_x04x_xi)
    //  file prog.linked.opt.aa, line 676
    // iNsTr_27
    $W[iNsTr_27_1837] : $int<64>
    // 		iNsTr_28 := (xx_x05x_xi - shifted_divisorx_x0x_xlcssax_xi)
    //  file prog.linked.opt.aa, line 677
    // iNsTr_28
    $W[iNsTr_28_1842] : $int<64>
    // 		iNsTr_29 := (iNsTr_28 < iNsTr_14)
    //  file prog.linked.opt.aa, line 678
    // iNsTr_29
    $W[iNsTr_29_1847] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 679
    // merge-statement  
    //  file prog.linked.opt.aa, line 684
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<64>) iNsTr_27 ) $on xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 685
    // ($cast ($uint<64>) iNsTr_27 )
    $intermediate $W[type_cast_1858_wire] : $int<64>
    // xx_xlcssa2
    $W[xx_xlcssa2_1855] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 688
    // 			$phi quotientx_x1x_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on xx_xpreheaderx_xi_divideUnsignedx_xexit			  ($cast ($uint<64>) xx_xlcssa2 ) $on divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 689
    // ($cast ($uint<64>) xx_xlcssa2 )
    $intermediate $W[type_cast_1868_wire] : $int<64>
    // quotientx_x1x_xi
    $W[quotientx_x1x_xi_1862] : $int<64>
    // 		iNsTr_18 := (($bitcast ($int<32>) iNsTr_13 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 691
    // ($bitcast ($int<32>) iNsTr_13 )
    $intermediate $W[type_cast_1872_wire] : $int<32>
    // iNsTr_18
    $W[iNsTr_18_1877] : $int<1>
    // 		iNsTr_19 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - quotientx_x1x_xi)
    //  file prog.linked.opt.aa, line 692
    // iNsTr_19
    $W[iNsTr_19_1883] : $int<64>
    // 		iNsTr_20 := ( $mux iNsTr_18 iNsTr_19  quotientx_x1x_xi ) 
    //  file prog.linked.opt.aa, line 693
    // iNsTr_20
    $W[iNsTr_20_1889] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 698
    // 			$phi ret_val__ := 			  ($cast ($uint<64>) iNsTr_20 ) $on divideUnsignedx_xexit_UnifiedReturnBlock			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_10_UnifiedReturnBlock // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 699
    // ($cast ($uint<64>) iNsTr_20 )
    $intermediate $W[type_cast_1897_wire] : $int<64>
    // ret_val__
    // datapath-instances for block %divideSigned%body
    //  file prog.linked.opt.aa, line 610
    // 		iNsTr_0 := (($bitcast ($int<64>) dividend ) < ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 612
    // ($bitcast ($int<64>) dividend )
    $S:=$U [type_cast_1631_inst] (dividend) (type_cast_1631_wire)   $flowthrough
    $delay type_cast_1631_inst 0
    // (($bitcast ($int<64>) dividend ) < ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ))
    $S<$S[SLT_i64_u1_1635_inst] (type_cast_1631_wire type_cast_1634_wire_constant) (iNsTr_0_1636) 
    $delay SLT_i64_u1_1635_inst 1
    // 		iNsTr_1 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - dividend)
    //  file prog.linked.opt.aa, line 613
    // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - dividend)
    -[SUB_u64_u64_1641_inst] (type_cast_1639_wire_constant dividend) (iNsTr_1_1642) 
    $delay SUB_u64_u64_1641_inst 1
    // 		iNsTr_2 := ( $mux iNsTr_0 iNsTr_1  dividend ) 
    //  file prog.linked.opt.aa, line 614
    // ( $mux iNsTr_0 iNsTr_1  dividend ) 
    ? [MUX_1647_inst] (iNsTr_0_1636 iNsTr_1_1642 dividend) (iNsTr_2_1648) 
    // 		iNsTr_3 := (($bitcast ($int<64>) iNsTr_2 ) < ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 615
    // ($bitcast ($int<64>) iNsTr_2 )
    $S:=$U [type_cast_1651_inst] (iNsTr_2_1648) (type_cast_1651_wire)   $flowthrough
    $delay type_cast_1651_inst 0
    // (($bitcast ($int<64>) iNsTr_2 ) < ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ))
    $S<$S[SLT_i64_u1_1655_inst] (type_cast_1651_wire type_cast_1654_wire_constant) (iNsTr_3_1656) 
    $delay SLT_i64_u1_1655_inst 1
    // 		iNsTr_4 := (($bitcast ($int<32>) divisor ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 616
    // ($bitcast ($int<32>) divisor )
    $S:=$U [type_cast_1659_inst] (divisor) (type_cast_1659_wire)   $flowthrough
    $delay type_cast_1659_inst 0
    // (($bitcast ($int<32>) divisor ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    $S<$S[SLT_i32_u1_1663_inst] (type_cast_1659_wire type_cast_1662_wire_constant) (iNsTr_4_1664) 
    $delay SLT_i32_u1_1663_inst 1
    // 		iNsTr_5 := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - divisor)
    //  file prog.linked.opt.aa, line 617
    // (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - divisor)
    -[SUB_u32_u32_1669_inst] (type_cast_1667_wire_constant divisor) (iNsTr_5_1670) 
    $delay SUB_u32_u32_1669_inst 1
    // 		iNsTr_6 := ( $mux iNsTr_4 iNsTr_5  divisor ) 
    //  file prog.linked.opt.aa, line 618
    // ( $mux iNsTr_4 iNsTr_5  divisor ) 
    ? [MUX_1675_inst] (iNsTr_4_1664 iNsTr_5_1670 divisor) (iNsTr_6_1676) 
    // 		iNsTr_7 := ( $mux iNsTr_3 ($bitcast ($uint<32>) _b11111111111111111111111111111111  )  ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 619
    // ( $mux iNsTr_3 ($bitcast ($uint<32>) _b11111111111111111111111111111111  )  ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) 
    ? [MUX_1683_inst] (iNsTr_3_1656 type_cast_1680_wire_constant type_cast_1682_wire_constant) (iNsTr_7_1684) 
    // 		iNsTr_8 := (iNsTr_6 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.linked.opt.aa, line 620
    // (iNsTr_6 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_1689_inst] (iNsTr_6_1676 type_cast_1688_wire_constant) (iNsTr_8_1690) 
    $delay EQ_u32_u1_1689_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 621
    ==0? [if_stmt_1691_branch] (iNsTr_8_1690)
    // 		iNsTr_11 := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_7)
    //  file prog.linked.opt.aa, line 628
    // (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_7)
    -[SUB_u32_u32_1702_inst] (type_cast_1700_wire_constant iNsTr_7_1684) (iNsTr_11_1703) 
    $delay SUB_u32_u32_1702_inst 1
    // 		iNsTr_12 := (($bitcast ($int<32>) iNsTr_6 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 629
    // ($bitcast ($int<32>) iNsTr_6 )
    $S:=$U [type_cast_1706_inst] (iNsTr_6_1676) (type_cast_1706_wire)   $flowthrough
    $delay type_cast_1706_inst 0
    // (($bitcast ($int<32>) iNsTr_6 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    $S<$S[SLT_i32_u1_1710_inst] (type_cast_1706_wire type_cast_1709_wire_constant) (iNsTr_12_1711) 
    $delay SLT_i32_u1_1710_inst 1
    // 		iNsTr_13 := ( $mux iNsTr_12 iNsTr_11  iNsTr_7 ) 
    //  file prog.linked.opt.aa, line 630
    // ( $mux iNsTr_12 iNsTr_11  iNsTr_7 ) 
    ? [MUX_1716_inst] (iNsTr_12_1711 iNsTr_11_1703 iNsTr_7_1684) (iNsTr_13_1717) 
    // 		iNsTr_14 := ($cast ($uint<64>) iNsTr_6 )
    //  file prog.linked.opt.aa, line 631
    // ($cast ($uint<64>) iNsTr_6 )
    # := [type_cast_1720_inst] (iNsTr_6_1676) (iNsTr_14_1721) 
    $delay type_cast_1720_inst 1
    // 		iNsTr_15 := (iNsTr_14 > iNsTr_2)
    //  file prog.linked.opt.aa, line 632
    // (iNsTr_14 > iNsTr_2)
    >[UGT_u64_u1_1725_inst] (iNsTr_14_1721 iNsTr_2_1648) (iNsTr_15_1726) 
    $delay UGT_u64_u1_1725_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 633
    ==0? [if_stmt_1727_branch] (iNsTr_15_1726)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 641
    // 			$phi xx_x05x_xi := 			  ($cast ($uint<64>) iNsTr_28 ) $on xx_x_crit_edgex_xi_bbx_xnph6x_xi			  ($cast ($uint<64>) iNsTr_2 ) $on bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 642
    // ($cast ($uint<64>) iNsTr_28 )
    # := [type_cast_1739_inst] (iNsTr_28_1842) (type_cast_1739_wire) 
    $delay type_cast_1739_inst 1
    // ($cast ($uint<64>) iNsTr_2 )
    # := [type_cast_1741_inst] (iNsTr_2_1648) (type_cast_1741_wire) 
    $delay type_cast_1741_inst 1
    $phi [phi_stmt_1736] (type_cast_1739_wire type_cast_1741_wire) ( xx_x05x_xi_1736 )
    // 			$phi quotientx_x04x_xi := 			  ($cast ($uint<64>) iNsTr_27 ) $on xx_x_crit_edgex_xi_bbx_xnph6x_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 643
    // ($cast ($uint<64>) iNsTr_27 )
    # := [type_cast_1745_inst] (iNsTr_27_1837) (type_cast_1745_wire) 
    $delay type_cast_1745_inst 1
    $phi [phi_stmt_1742] (type_cast_1745_wire type_cast_1748_wire_constant) ( quotientx_x04x_xi_1742 )
    // 		iNsTr_23 := (xx_x05x_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 645
    // (xx_x05x_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    >>[LSHR_u64_u64_1754_inst] (xx_x05x_xi_1736 type_cast_1753_wire_constant) (iNsTr_23_1755) 
    $delay LSHR_u64_u64_1754_inst 1
    // 		iNsTr_24 := (iNsTr_14 < iNsTr_23)
    //  file prog.linked.opt.aa, line 646
    // (iNsTr_14 < iNsTr_23)
    <[ULT_u64_u1_1759_inst] (iNsTr_14_1721 iNsTr_23_1755) (iNsTr_24_1760) 
    $delay ULT_u64_u1_1759_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 647
    ==0? [if_stmt_1761_branch] (iNsTr_24_1760)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 655
    // 			$phi shifted_divisorx_x02x_xi := 			  ($cast ($uint<64>) iNsTr_31 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<64>) iNsTr_14 ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 656
    // ($cast ($uint<64>) iNsTr_31 )
    # := [type_cast_1773_inst] (iNsTr_31_1789) (type_cast_1773_wire) 
    $delay type_cast_1773_inst 1
    // ($cast ($uint<64>) iNsTr_14 )
    # := [type_cast_1775_inst] (iNsTr_14_1721) (type_cast_1775_wire) 
    $delay type_cast_1775_inst 1
    $phi [phi_stmt_1770] (type_cast_1773_wire type_cast_1775_wire) ( shifted_divisorx_x02x_xi_1770 )
    // 			$phi curr_quotientx_x01x_xi := 			  ($cast ($uint<64>) iNsTr_32 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 657
    // ($cast ($uint<64>) iNsTr_32 )
    # := [type_cast_1779_inst] (iNsTr_32_1795) (type_cast_1779_wire) 
    $delay type_cast_1779_inst 1
    $phi [phi_stmt_1776] (type_cast_1779_wire type_cast_1782_wire_constant) ( curr_quotientx_x01x_xi_1776 )
    // 		iNsTr_31 := (shifted_divisorx_x02x_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 659
    // (shifted_divisorx_x02x_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    <<[SHL_u64_u64_1788_inst] (shifted_divisorx_x02x_xi_1770 type_cast_1787_wire_constant) (iNsTr_31_1789) 
    $delay SHL_u64_u64_1788_inst 1
    // 		iNsTr_32 := (curr_quotientx_x01x_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 660
    // (curr_quotientx_x01x_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    <<[SHL_u64_u64_1794_inst] (curr_quotientx_x01x_xi_1776 type_cast_1793_wire_constant) (iNsTr_32_1795) 
    $delay SHL_u64_u64_1794_inst 1
    // 		iNsTr_33 := (iNsTr_31 < iNsTr_23)
    //  file prog.linked.opt.aa, line 661
    // (iNsTr_31 < iNsTr_23)
    <[ULT_u64_u1_1799_inst] (iNsTr_31_1789 iNsTr_23_1755) (iNsTr_33_1800) 
    $delay ULT_u64_u1_1799_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 662
    ==0? [if_stmt_1801_branch] (iNsTr_33_1800)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 667
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<64>) iNsTr_32 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 668
    // ($cast ($uint<64>) iNsTr_32 )
    # := [type_cast_1811_inst] (iNsTr_32_1795) (type_cast_1811_wire) 
    $delay type_cast_1811_inst 1
    $phi [phi_stmt_1808] (type_cast_1811_wire) ( xx_xlcssa1_1808 )
    // 			$phi xx_xlcssa := 			  ($cast ($uint<64>) iNsTr_31 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 669
    // ($cast ($uint<64>) iNsTr_31 )
    # := [type_cast_1815_inst] (iNsTr_31_1789) (type_cast_1815_wire) 
    $delay type_cast_1815_inst 1
    $phi [phi_stmt_1812] (type_cast_1815_wire) ( xx_xlcssa_1812 )
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 672
    // 			$phi shifted_divisorx_x0x_xlcssax_xi := 			  ($cast ($uint<64>) iNsTr_14 ) $on bbx_xnph6x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 673
    // ($cast ($uint<64>) iNsTr_14 )
    # := [type_cast_1822_inst] (iNsTr_14_1721) (type_cast_1822_wire) 
    $delay type_cast_1822_inst 1
    // ($cast ($uint<64>) xx_xlcssa )
    # := [type_cast_1824_inst] (xx_xlcssa_1812) (type_cast_1824_wire) 
    $delay type_cast_1824_inst 1
    $phi [phi_stmt_1819] (type_cast_1822_wire type_cast_1824_wire) ( shifted_divisorx_x0x_xlcssax_xi_1819 )
    // 			$phi curr_quotientx_x0x_xlcssax_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<64>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 674
    // ($cast ($uint<64>) xx_xlcssa1 )
    # := [type_cast_1831_inst] (xx_xlcssa1_1808) (type_cast_1831_wire) 
    $delay type_cast_1831_inst 1
    $phi [phi_stmt_1825] (type_cast_1829_wire_constant type_cast_1831_wire) ( curr_quotientx_x0x_xlcssax_xi_1825 )
    // 		iNsTr_27 := (curr_quotientx_x0x_xlcssax_xi + quotientx_x04x_xi)
    //  file prog.linked.opt.aa, line 676
    // (curr_quotientx_x0x_xlcssax_xi + quotientx_x04x_xi)
    +[ADD_u64_u64_1836_inst] (curr_quotientx_x0x_xlcssax_xi_1825 quotientx_x04x_xi_1742) (iNsTr_27_1837) 
    $delay ADD_u64_u64_1836_inst 1
    // 		iNsTr_28 := (xx_x05x_xi - shifted_divisorx_x0x_xlcssax_xi)
    //  file prog.linked.opt.aa, line 677
    // (xx_x05x_xi - shifted_divisorx_x0x_xlcssax_xi)
    -[SUB_u64_u64_1841_inst] (xx_x05x_xi_1736 shifted_divisorx_x0x_xlcssax_xi_1819) (iNsTr_28_1842) 
    $delay SUB_u64_u64_1841_inst 1
    // 		iNsTr_29 := (iNsTr_28 < iNsTr_14)
    //  file prog.linked.opt.aa, line 678
    // (iNsTr_28 < iNsTr_14)
    <[ULT_u64_u1_1846_inst] (iNsTr_28_1842 iNsTr_14_1721) (iNsTr_29_1847) 
    $delay ULT_u64_u1_1846_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 679
    ==0? [if_stmt_1848_branch] (iNsTr_29_1847)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 684
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<64>) iNsTr_27 ) $on xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 685
    // ($cast ($uint<64>) iNsTr_27 )
    # := [type_cast_1858_inst] (iNsTr_27_1837) (type_cast_1858_wire) 
    $delay type_cast_1858_inst 1
    $phi [phi_stmt_1855] (type_cast_1858_wire) ( xx_xlcssa2_1855 )
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 688
    // 			$phi quotientx_x1x_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on xx_xpreheaderx_xi_divideUnsignedx_xexit			  ($cast ($uint<64>) xx_xlcssa2 ) $on divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 689
    // ($cast ($uint<64>) xx_xlcssa2 )
    # := [type_cast_1868_inst] (xx_xlcssa2_1855) (type_cast_1868_wire) 
    $delay type_cast_1868_inst 1
    $phi [phi_stmt_1862] (type_cast_1866_wire_constant type_cast_1868_wire) ( quotientx_x1x_xi_1862 )
    // 		iNsTr_18 := (($bitcast ($int<32>) iNsTr_13 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 691
    // ($bitcast ($int<32>) iNsTr_13 )
    $S:=$U [type_cast_1872_inst] (iNsTr_13_1717) (type_cast_1872_wire)   $flowthrough
    $delay type_cast_1872_inst 0
    // (($bitcast ($int<32>) iNsTr_13 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    $S<$S[SLT_i32_u1_1876_inst] (type_cast_1872_wire type_cast_1875_wire_constant) (iNsTr_18_1877) 
    $delay SLT_i32_u1_1876_inst 1
    // 		iNsTr_19 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - quotientx_x1x_xi)
    //  file prog.linked.opt.aa, line 692
    // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - quotientx_x1x_xi)
    -[SUB_u64_u64_1882_inst] (type_cast_1880_wire_constant quotientx_x1x_xi_1862) (iNsTr_19_1883) 
    $delay SUB_u64_u64_1882_inst 1
    // 		iNsTr_20 := ( $mux iNsTr_18 iNsTr_19  quotientx_x1x_xi ) 
    //  file prog.linked.opt.aa, line 693
    // ( $mux iNsTr_18 iNsTr_19  quotientx_x1x_xi ) 
    ? [MUX_1888_inst] (iNsTr_18_1877 iNsTr_19_1883 quotientx_x1x_xi_1862) (iNsTr_20_1889) 
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 698
    // 			$phi ret_val__ := 			  ($cast ($uint<64>) iNsTr_20 ) $on divideUnsignedx_xexit_UnifiedReturnBlock			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_10_UnifiedReturnBlock // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 699
    // ($cast ($uint<64>) iNsTr_20 )
    # := [type_cast_1897_inst] (iNsTr_20_1889) (type_cast_1897_wire) 
    $delay type_cast_1897_inst 1
    $phi [phi_stmt_1894] (type_cast_1897_wire type_cast_1900_wire_constant) ( ret_val__ )
  }
  // end data-path
  // 		iNsTr_0 := (($bitcast ($int<64>) dividend ) < ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ))
  //  file prog.linked.opt.aa, line 612
  // (($bitcast ($int<64>) dividend ) < ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ))
  // ($bitcast ($int<64>) dividend )
  type_cast_1631_inst <=> (branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/type_cast_1631_Sample/rr branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/type_cast_1631_Update/cr) (branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/type_cast_1631_Sample/ra branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/type_cast_1631_Update/ca)
  SLT_i64_u1_1635_inst <=> (branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/SLT_i64_u1_1635_Sample/rr branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/SLT_i64_u1_1635_Update/cr) (branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/SLT_i64_u1_1635_Sample/ra branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/SLT_i64_u1_1635_Update/ca)
  // 		iNsTr_1 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - dividend)
  //  file prog.linked.opt.aa, line 613
  // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - dividend)
  SUB_u64_u64_1641_inst <=> (branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/SUB_u64_u64_1641_Sample/rr branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/SUB_u64_u64_1641_Update/cr) (branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/SUB_u64_u64_1641_Sample/ra branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/SUB_u64_u64_1641_Update/ca)
  // 		iNsTr_2 := ( $mux iNsTr_0 iNsTr_1  dividend ) 
  //  file prog.linked.opt.aa, line 614
  // ( $mux iNsTr_0 iNsTr_1  dividend ) 
  MUX_1647_inst <=> (branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/MUX_1647_start/req branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/MUX_1647_complete/req) (branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/MUX_1647_start/ack branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/MUX_1647_complete/ack)
  // 		iNsTr_3 := (($bitcast ($int<64>) iNsTr_2 ) < ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ))
  //  file prog.linked.opt.aa, line 615
  // (($bitcast ($int<64>) iNsTr_2 ) < ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ))
  // ($bitcast ($int<64>) iNsTr_2 )
  type_cast_1651_inst <=> (branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/type_cast_1651_Sample/rr branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/type_cast_1651_Update/cr) (branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/type_cast_1651_Sample/ra branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/type_cast_1651_Update/ca)
  SLT_i64_u1_1655_inst <=> (branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/SLT_i64_u1_1655_Sample/rr branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/SLT_i64_u1_1655_Update/cr) (branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/SLT_i64_u1_1655_Sample/ra branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/SLT_i64_u1_1655_Update/ca)
  // 		iNsTr_4 := (($bitcast ($int<32>) divisor ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.linked.opt.aa, line 616
  // (($bitcast ($int<32>) divisor ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) divisor )
  type_cast_1659_inst <=> (branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/type_cast_1659_Sample/rr branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/type_cast_1659_Update/cr) (branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/type_cast_1659_Sample/ra branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/type_cast_1659_Update/ca)
  SLT_i32_u1_1663_inst <=> (branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/SLT_i32_u1_1663_Sample/rr branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/SLT_i32_u1_1663_Update/cr) (branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/SLT_i32_u1_1663_Sample/ra branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/SLT_i32_u1_1663_Update/ca)
  // 		iNsTr_5 := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - divisor)
  //  file prog.linked.opt.aa, line 617
  // (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - divisor)
  SUB_u32_u32_1669_inst <=> (branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/SUB_u32_u32_1669_Sample/rr branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/SUB_u32_u32_1669_Update/cr) (branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/SUB_u32_u32_1669_Sample/ra branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/SUB_u32_u32_1669_Update/ca)
  // 		iNsTr_6 := ( $mux iNsTr_4 iNsTr_5  divisor ) 
  //  file prog.linked.opt.aa, line 618
  // ( $mux iNsTr_4 iNsTr_5  divisor ) 
  MUX_1675_inst <=> (branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/MUX_1675_start/req branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/MUX_1675_complete/req) (branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/MUX_1675_start/ack branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/MUX_1675_complete/ack)
  // 		iNsTr_7 := ( $mux iNsTr_3 ($bitcast ($uint<32>) _b11111111111111111111111111111111  )  ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) 
  //  file prog.linked.opt.aa, line 619
  // ( $mux iNsTr_3 ($bitcast ($uint<32>) _b11111111111111111111111111111111  )  ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) 
  MUX_1683_inst <=> (branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/MUX_1683_start/req branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/MUX_1683_complete/req) (branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/MUX_1683_start/ack branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/MUX_1683_complete/ack)
  // 		iNsTr_8 := (iNsTr_6 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.linked.opt.aa, line 620
  // (iNsTr_6 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_1689_inst <=> (branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/EQ_u32_u1_1689_Sample/rr branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/EQ_u32_u1_1689_Update/cr) (branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/EQ_u32_u1_1689_Sample/ra branch_block_stmt_1628/assign_stmt_1636_to_assign_stmt_1690/EQ_u32_u1_1689_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 621
  if_stmt_1691_branch <=> (branch_block_stmt_1628/if_stmt_1691_eval_test/branch_req) (branch_block_stmt_1628/if_stmt_1691_else_link/else_choice_transition branch_block_stmt_1628/if_stmt_1691_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 626
  // 		iNsTr_11 := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_7)
  //  file prog.linked.opt.aa, line 628
  // (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_7)
  SUB_u32_u32_1702_inst <=> (branch_block_stmt_1628/assign_stmt_1703_to_assign_stmt_1726/SUB_u32_u32_1702_Sample/rr branch_block_stmt_1628/assign_stmt_1703_to_assign_stmt_1726/SUB_u32_u32_1702_Update/cr) (branch_block_stmt_1628/assign_stmt_1703_to_assign_stmt_1726/SUB_u32_u32_1702_Sample/ra branch_block_stmt_1628/assign_stmt_1703_to_assign_stmt_1726/SUB_u32_u32_1702_Update/ca)
  // 		iNsTr_12 := (($bitcast ($int<32>) iNsTr_6 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.linked.opt.aa, line 629
  // (($bitcast ($int<32>) iNsTr_6 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) iNsTr_6 )
  type_cast_1706_inst <=> (branch_block_stmt_1628/assign_stmt_1703_to_assign_stmt_1726/type_cast_1706_Sample/rr branch_block_stmt_1628/assign_stmt_1703_to_assign_stmt_1726/type_cast_1706_Update/cr) (branch_block_stmt_1628/assign_stmt_1703_to_assign_stmt_1726/type_cast_1706_Sample/ra branch_block_stmt_1628/assign_stmt_1703_to_assign_stmt_1726/type_cast_1706_Update/ca)
  SLT_i32_u1_1710_inst <=> (branch_block_stmt_1628/assign_stmt_1703_to_assign_stmt_1726/SLT_i32_u1_1710_Sample/rr branch_block_stmt_1628/assign_stmt_1703_to_assign_stmt_1726/SLT_i32_u1_1710_Update/cr) (branch_block_stmt_1628/assign_stmt_1703_to_assign_stmt_1726/SLT_i32_u1_1710_Sample/ra branch_block_stmt_1628/assign_stmt_1703_to_assign_stmt_1726/SLT_i32_u1_1710_Update/ca)
  // 		iNsTr_13 := ( $mux iNsTr_12 iNsTr_11  iNsTr_7 ) 
  //  file prog.linked.opt.aa, line 630
  // ( $mux iNsTr_12 iNsTr_11  iNsTr_7 ) 
  MUX_1716_inst <=> (branch_block_stmt_1628/assign_stmt_1703_to_assign_stmt_1726/MUX_1716_start/req branch_block_stmt_1628/assign_stmt_1703_to_assign_stmt_1726/MUX_1716_complete/req) (branch_block_stmt_1628/assign_stmt_1703_to_assign_stmt_1726/MUX_1716_start/ack branch_block_stmt_1628/assign_stmt_1703_to_assign_stmt_1726/MUX_1716_complete/ack)
  // 		iNsTr_14 := ($cast ($uint<64>) iNsTr_6 )
  //  file prog.linked.opt.aa, line 631
  // ($cast ($uint<64>) iNsTr_6 )
  type_cast_1720_inst <=> (branch_block_stmt_1628/assign_stmt_1703_to_assign_stmt_1726/type_cast_1720_Sample/rr branch_block_stmt_1628/assign_stmt_1703_to_assign_stmt_1726/type_cast_1720_Update/cr) (branch_block_stmt_1628/assign_stmt_1703_to_assign_stmt_1726/type_cast_1720_Sample/ra branch_block_stmt_1628/assign_stmt_1703_to_assign_stmt_1726/type_cast_1720_Update/ca)
  // 		iNsTr_15 := (iNsTr_14 > iNsTr_2)
  //  file prog.linked.opt.aa, line 632
  // (iNsTr_14 > iNsTr_2)
  UGT_u64_u1_1725_inst <=> (branch_block_stmt_1628/assign_stmt_1703_to_assign_stmt_1726/UGT_u64_u1_1725_Sample/rr branch_block_stmt_1628/assign_stmt_1703_to_assign_stmt_1726/UGT_u64_u1_1725_Update/cr) (branch_block_stmt_1628/assign_stmt_1703_to_assign_stmt_1726/UGT_u64_u1_1725_Sample/ra branch_block_stmt_1628/assign_stmt_1703_to_assign_stmt_1726/UGT_u64_u1_1725_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 633
  if_stmt_1727_branch <=> (branch_block_stmt_1628/if_stmt_1727_eval_test/branch_req) (branch_block_stmt_1628/if_stmt_1727_else_link/else_choice_transition branch_block_stmt_1628/if_stmt_1727_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 638
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 641
  // ($cast ($uint<64>) iNsTr_28 )
  type_cast_1739_inst <=> (branch_block_stmt_1628/xx_x_crit_edgex_xi_bbx_xnph6x_xi_PhiReq/phi_stmt_1736/phi_stmt_1736_sources/type_cast_1739/SplitProtocol/Sample/rr branch_block_stmt_1628/xx_x_crit_edgex_xi_bbx_xnph6x_xi_PhiReq/phi_stmt_1736/phi_stmt_1736_sources/type_cast_1739/SplitProtocol/Update/cr) (branch_block_stmt_1628/xx_x_crit_edgex_xi_bbx_xnph6x_xi_PhiReq/phi_stmt_1736/phi_stmt_1736_sources/type_cast_1739/SplitProtocol/Sample/ra branch_block_stmt_1628/xx_x_crit_edgex_xi_bbx_xnph6x_xi_PhiReq/phi_stmt_1736/phi_stmt_1736_sources/type_cast_1739/SplitProtocol/Update/ca)
  // ($cast ($uint<64>) iNsTr_2 )
  type_cast_1741_inst <=> (branch_block_stmt_1628/bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi_PhiReq/phi_stmt_1736/phi_stmt_1736_sources/type_cast_1741/SplitProtocol/Sample/rr branch_block_stmt_1628/bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi_PhiReq/phi_stmt_1736/phi_stmt_1736_sources/type_cast_1741/SplitProtocol/Update/cr) (branch_block_stmt_1628/bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi_PhiReq/phi_stmt_1736/phi_stmt_1736_sources/type_cast_1741/SplitProtocol/Sample/ra branch_block_stmt_1628/bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi_PhiReq/phi_stmt_1736/phi_stmt_1736_sources/type_cast_1741/SplitProtocol/Update/ca)
  phi_stmt_1736 <=> (branch_block_stmt_1628/xx_x_crit_edgex_xi_bbx_xnph6x_xi_PhiReq/phi_stmt_1736/phi_stmt_1736_req branch_block_stmt_1628/bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi_PhiReq/phi_stmt_1736/phi_stmt_1736_req) (branch_block_stmt_1628/merge_stmt_1735_PhiAck/phi_stmt_1736_ack)
  // ($cast ($uint<64>) iNsTr_27 )
  type_cast_1745_inst <=> (branch_block_stmt_1628/xx_x_crit_edgex_xi_bbx_xnph6x_xi_PhiReq/phi_stmt_1742/phi_stmt_1742_sources/type_cast_1745/SplitProtocol/Sample/rr branch_block_stmt_1628/xx_x_crit_edgex_xi_bbx_xnph6x_xi_PhiReq/phi_stmt_1742/phi_stmt_1742_sources/type_cast_1745/SplitProtocol/Update/cr) (branch_block_stmt_1628/xx_x_crit_edgex_xi_bbx_xnph6x_xi_PhiReq/phi_stmt_1742/phi_stmt_1742_sources/type_cast_1745/SplitProtocol/Sample/ra branch_block_stmt_1628/xx_x_crit_edgex_xi_bbx_xnph6x_xi_PhiReq/phi_stmt_1742/phi_stmt_1742_sources/type_cast_1745/SplitProtocol/Update/ca)
  phi_stmt_1742 <=> (branch_block_stmt_1628/xx_x_crit_edgex_xi_bbx_xnph6x_xi_PhiReq/phi_stmt_1742/phi_stmt_1742_req branch_block_stmt_1628/bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi_PhiReq/phi_stmt_1742/phi_stmt_1742_req) (branch_block_stmt_1628/merge_stmt_1735_PhiAck/phi_stmt_1742_ack)
  // 		iNsTr_23 := (xx_x05x_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 645
  // (xx_x05x_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  LSHR_u64_u64_1754_inst <=> (branch_block_stmt_1628/assign_stmt_1755_to_assign_stmt_1760/LSHR_u64_u64_1754_Sample/rr branch_block_stmt_1628/assign_stmt_1755_to_assign_stmt_1760/LSHR_u64_u64_1754_Update/cr) (branch_block_stmt_1628/assign_stmt_1755_to_assign_stmt_1760/LSHR_u64_u64_1754_Sample/ra branch_block_stmt_1628/assign_stmt_1755_to_assign_stmt_1760/LSHR_u64_u64_1754_Update/ca)
  // 		iNsTr_24 := (iNsTr_14 < iNsTr_23)
  //  file prog.linked.opt.aa, line 646
  // (iNsTr_14 < iNsTr_23)
  ULT_u64_u1_1759_inst <=> (branch_block_stmt_1628/assign_stmt_1755_to_assign_stmt_1760/ULT_u64_u1_1759_Sample/rr branch_block_stmt_1628/assign_stmt_1755_to_assign_stmt_1760/ULT_u64_u1_1759_Update/cr) (branch_block_stmt_1628/assign_stmt_1755_to_assign_stmt_1760/ULT_u64_u1_1759_Sample/ra branch_block_stmt_1628/assign_stmt_1755_to_assign_stmt_1760/ULT_u64_u1_1759_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 647
  if_stmt_1761_branch <=> (branch_block_stmt_1628/if_stmt_1761_eval_test/branch_req) (branch_block_stmt_1628/if_stmt_1761_else_link/else_choice_transition branch_block_stmt_1628/if_stmt_1761_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 652
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 655
  // ($cast ($uint<64>) iNsTr_31 )
  type_cast_1773_inst <=> (branch_block_stmt_1628/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_1770/phi_stmt_1770_sources/type_cast_1773/SplitProtocol/Sample/rr branch_block_stmt_1628/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_1770/phi_stmt_1770_sources/type_cast_1773/SplitProtocol/Update/cr) (branch_block_stmt_1628/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_1770/phi_stmt_1770_sources/type_cast_1773/SplitProtocol/Sample/ra branch_block_stmt_1628/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_1770/phi_stmt_1770_sources/type_cast_1773/SplitProtocol/Update/ca)
  // ($cast ($uint<64>) iNsTr_14 )
  type_cast_1775_inst <=> (branch_block_stmt_1628/bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq/phi_stmt_1770/phi_stmt_1770_sources/type_cast_1775/SplitProtocol/Sample/rr branch_block_stmt_1628/bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq/phi_stmt_1770/phi_stmt_1770_sources/type_cast_1775/SplitProtocol/Update/cr) (branch_block_stmt_1628/bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq/phi_stmt_1770/phi_stmt_1770_sources/type_cast_1775/SplitProtocol/Sample/ra branch_block_stmt_1628/bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq/phi_stmt_1770/phi_stmt_1770_sources/type_cast_1775/SplitProtocol/Update/ca)
  phi_stmt_1770 <=> (branch_block_stmt_1628/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_1770/phi_stmt_1770_req branch_block_stmt_1628/bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq/phi_stmt_1770/phi_stmt_1770_req) (branch_block_stmt_1628/merge_stmt_1769_PhiAck/phi_stmt_1770_ack)
  // ($cast ($uint<64>) iNsTr_32 )
  type_cast_1779_inst <=> (branch_block_stmt_1628/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_1776/phi_stmt_1776_sources/type_cast_1779/SplitProtocol/Sample/rr branch_block_stmt_1628/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_1776/phi_stmt_1776_sources/type_cast_1779/SplitProtocol/Update/cr) (branch_block_stmt_1628/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_1776/phi_stmt_1776_sources/type_cast_1779/SplitProtocol/Sample/ra branch_block_stmt_1628/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_1776/phi_stmt_1776_sources/type_cast_1779/SplitProtocol/Update/ca)
  phi_stmt_1776 <=> (branch_block_stmt_1628/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_1776/phi_stmt_1776_req branch_block_stmt_1628/bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq/phi_stmt_1776/phi_stmt_1776_req) (branch_block_stmt_1628/merge_stmt_1769_PhiAck/phi_stmt_1776_ack)
  // 		iNsTr_31 := (shifted_divisorx_x02x_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 659
  // (shifted_divisorx_x02x_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  SHL_u64_u64_1788_inst <=> (branch_block_stmt_1628/assign_stmt_1789_to_assign_stmt_1800/SHL_u64_u64_1788_Sample/rr branch_block_stmt_1628/assign_stmt_1789_to_assign_stmt_1800/SHL_u64_u64_1788_Update/cr) (branch_block_stmt_1628/assign_stmt_1789_to_assign_stmt_1800/SHL_u64_u64_1788_Sample/ra branch_block_stmt_1628/assign_stmt_1789_to_assign_stmt_1800/SHL_u64_u64_1788_Update/ca)
  // 		iNsTr_32 := (curr_quotientx_x01x_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 660
  // (curr_quotientx_x01x_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  SHL_u64_u64_1794_inst <=> (branch_block_stmt_1628/assign_stmt_1789_to_assign_stmt_1800/SHL_u64_u64_1794_Sample/rr branch_block_stmt_1628/assign_stmt_1789_to_assign_stmt_1800/SHL_u64_u64_1794_Update/cr) (branch_block_stmt_1628/assign_stmt_1789_to_assign_stmt_1800/SHL_u64_u64_1794_Sample/ra branch_block_stmt_1628/assign_stmt_1789_to_assign_stmt_1800/SHL_u64_u64_1794_Update/ca)
  // 		iNsTr_33 := (iNsTr_31 < iNsTr_23)
  //  file prog.linked.opt.aa, line 661
  // (iNsTr_31 < iNsTr_23)
  ULT_u64_u1_1799_inst <=> (branch_block_stmt_1628/assign_stmt_1789_to_assign_stmt_1800/ULT_u64_u1_1799_Sample/rr branch_block_stmt_1628/assign_stmt_1789_to_assign_stmt_1800/ULT_u64_u1_1799_Update/cr) (branch_block_stmt_1628/assign_stmt_1789_to_assign_stmt_1800/ULT_u64_u1_1799_Sample/ra branch_block_stmt_1628/assign_stmt_1789_to_assign_stmt_1800/ULT_u64_u1_1799_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 662
  if_stmt_1801_branch <=> (branch_block_stmt_1628/if_stmt_1801_eval_test/branch_req) (branch_block_stmt_1628/if_stmt_1801_else_link/else_choice_transition branch_block_stmt_1628/if_stmt_1801_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 667
  // ($cast ($uint<64>) iNsTr_32 )
  type_cast_1811_inst <=> (branch_block_stmt_1628/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_1808/phi_stmt_1808_sources/type_cast_1811/SplitProtocol/Sample/rr branch_block_stmt_1628/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_1808/phi_stmt_1808_sources/type_cast_1811/SplitProtocol/Update/cr) (branch_block_stmt_1628/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_1808/phi_stmt_1808_sources/type_cast_1811/SplitProtocol/Sample/ra branch_block_stmt_1628/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_1808/phi_stmt_1808_sources/type_cast_1811/SplitProtocol/Update/ca)
  phi_stmt_1808 <=> (branch_block_stmt_1628/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_1808/phi_stmt_1808_req) (branch_block_stmt_1628/merge_stmt_1807_PhiAck/phi_stmt_1808_ack)
  // ($cast ($uint<64>) iNsTr_31 )
  type_cast_1815_inst <=> (branch_block_stmt_1628/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_1812/phi_stmt_1812_sources/type_cast_1815/SplitProtocol/Sample/rr branch_block_stmt_1628/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_1812/phi_stmt_1812_sources/type_cast_1815/SplitProtocol/Update/cr) (branch_block_stmt_1628/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_1812/phi_stmt_1812_sources/type_cast_1815/SplitProtocol/Sample/ra branch_block_stmt_1628/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_1812/phi_stmt_1812_sources/type_cast_1815/SplitProtocol/Update/ca)
  phi_stmt_1812 <=> (branch_block_stmt_1628/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_1812/phi_stmt_1812_req) (branch_block_stmt_1628/merge_stmt_1807_PhiAck/phi_stmt_1812_ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 672
  // ($cast ($uint<64>) iNsTr_14 )
  type_cast_1822_inst <=> (branch_block_stmt_1628/bbx_xnph6x_xi_xx_x_crit_edgex_xi_PhiReq/phi_stmt_1819/phi_stmt_1819_sources/type_cast_1822/SplitProtocol/Sample/rr branch_block_stmt_1628/bbx_xnph6x_xi_xx_x_crit_edgex_xi_PhiReq/phi_stmt_1819/phi_stmt_1819_sources/type_cast_1822/SplitProtocol/Update/cr) (branch_block_stmt_1628/bbx_xnph6x_xi_xx_x_crit_edgex_xi_PhiReq/phi_stmt_1819/phi_stmt_1819_sources/type_cast_1822/SplitProtocol/Sample/ra branch_block_stmt_1628/bbx_xnph6x_xi_xx_x_crit_edgex_xi_PhiReq/phi_stmt_1819/phi_stmt_1819_sources/type_cast_1822/SplitProtocol/Update/ca)
  // ($cast ($uint<64>) xx_xlcssa )
  type_cast_1824_inst <=> (branch_block_stmt_1628/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_1819/phi_stmt_1819_sources/type_cast_1824/SplitProtocol/Sample/rr branch_block_stmt_1628/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_1819/phi_stmt_1819_sources/type_cast_1824/SplitProtocol/Update/cr) (branch_block_stmt_1628/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_1819/phi_stmt_1819_sources/type_cast_1824/SplitProtocol/Sample/ra branch_block_stmt_1628/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_1819/phi_stmt_1819_sources/type_cast_1824/SplitProtocol/Update/ca)
  phi_stmt_1819 <=> (branch_block_stmt_1628/bbx_xnph6x_xi_xx_x_crit_edgex_xi_PhiReq/phi_stmt_1819/phi_stmt_1819_req branch_block_stmt_1628/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_1819/phi_stmt_1819_req) (branch_block_stmt_1628/merge_stmt_1818_PhiAck/phi_stmt_1819_ack)
  // ($cast ($uint<64>) xx_xlcssa1 )
  type_cast_1831_inst <=> (branch_block_stmt_1628/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_1825/phi_stmt_1825_sources/type_cast_1831/SplitProtocol/Sample/rr branch_block_stmt_1628/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_1825/phi_stmt_1825_sources/type_cast_1831/SplitProtocol/Update/cr) (branch_block_stmt_1628/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_1825/phi_stmt_1825_sources/type_cast_1831/SplitProtocol/Sample/ra branch_block_stmt_1628/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_1825/phi_stmt_1825_sources/type_cast_1831/SplitProtocol/Update/ca)
  phi_stmt_1825 <=> (branch_block_stmt_1628/bbx_xnph6x_xi_xx_x_crit_edgex_xi_PhiReq/phi_stmt_1825/phi_stmt_1825_req branch_block_stmt_1628/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_1825/phi_stmt_1825_req) (branch_block_stmt_1628/merge_stmt_1818_PhiAck/phi_stmt_1825_ack)
  // 		iNsTr_27 := (curr_quotientx_x0x_xlcssax_xi + quotientx_x04x_xi)
  //  file prog.linked.opt.aa, line 676
  // (curr_quotientx_x0x_xlcssax_xi + quotientx_x04x_xi)
  ADD_u64_u64_1836_inst <=> (branch_block_stmt_1628/assign_stmt_1837_to_assign_stmt_1847/ADD_u64_u64_1836_Sample/rr branch_block_stmt_1628/assign_stmt_1837_to_assign_stmt_1847/ADD_u64_u64_1836_Update/cr) (branch_block_stmt_1628/assign_stmt_1837_to_assign_stmt_1847/ADD_u64_u64_1836_Sample/ra branch_block_stmt_1628/assign_stmt_1837_to_assign_stmt_1847/ADD_u64_u64_1836_Update/ca)
  // 		iNsTr_28 := (xx_x05x_xi - shifted_divisorx_x0x_xlcssax_xi)
  //  file prog.linked.opt.aa, line 677
  // (xx_x05x_xi - shifted_divisorx_x0x_xlcssax_xi)
  SUB_u64_u64_1841_inst <=> (branch_block_stmt_1628/assign_stmt_1837_to_assign_stmt_1847/SUB_u64_u64_1841_Sample/rr branch_block_stmt_1628/assign_stmt_1837_to_assign_stmt_1847/SUB_u64_u64_1841_Update/cr) (branch_block_stmt_1628/assign_stmt_1837_to_assign_stmt_1847/SUB_u64_u64_1841_Sample/ra branch_block_stmt_1628/assign_stmt_1837_to_assign_stmt_1847/SUB_u64_u64_1841_Update/ca)
  // 		iNsTr_29 := (iNsTr_28 < iNsTr_14)
  //  file prog.linked.opt.aa, line 678
  // (iNsTr_28 < iNsTr_14)
  ULT_u64_u1_1846_inst <=> (branch_block_stmt_1628/assign_stmt_1837_to_assign_stmt_1847/ULT_u64_u1_1846_Sample/rr branch_block_stmt_1628/assign_stmt_1837_to_assign_stmt_1847/ULT_u64_u1_1846_Update/cr) (branch_block_stmt_1628/assign_stmt_1837_to_assign_stmt_1847/ULT_u64_u1_1846_Sample/ra branch_block_stmt_1628/assign_stmt_1837_to_assign_stmt_1847/ULT_u64_u1_1846_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 679
  if_stmt_1848_branch <=> (branch_block_stmt_1628/if_stmt_1848_eval_test/branch_req) (branch_block_stmt_1628/if_stmt_1848_else_link/else_choice_transition branch_block_stmt_1628/if_stmt_1848_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 684
  // ($cast ($uint<64>) iNsTr_27 )
  type_cast_1858_inst <=> (branch_block_stmt_1628/xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit_PhiReq/phi_stmt_1855/phi_stmt_1855_sources/type_cast_1858/SplitProtocol/Sample/rr branch_block_stmt_1628/xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit_PhiReq/phi_stmt_1855/phi_stmt_1855_sources/type_cast_1858/SplitProtocol/Update/cr) (branch_block_stmt_1628/xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit_PhiReq/phi_stmt_1855/phi_stmt_1855_sources/type_cast_1858/SplitProtocol/Sample/ra branch_block_stmt_1628/xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit_PhiReq/phi_stmt_1855/phi_stmt_1855_sources/type_cast_1858/SplitProtocol/Update/ca)
  phi_stmt_1855 <=> (branch_block_stmt_1628/xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit_PhiReq/phi_stmt_1855/phi_stmt_1855_req) (branch_block_stmt_1628/merge_stmt_1854_PhiAck/phi_stmt_1855_ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 688
  // ($cast ($uint<64>) xx_xlcssa2 )
  type_cast_1868_inst <=> (branch_block_stmt_1628/divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit_PhiReq/phi_stmt_1862/phi_stmt_1862_sources/type_cast_1868/SplitProtocol/Sample/rr branch_block_stmt_1628/divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit_PhiReq/phi_stmt_1862/phi_stmt_1862_sources/type_cast_1868/SplitProtocol/Update/cr) (branch_block_stmt_1628/divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit_PhiReq/phi_stmt_1862/phi_stmt_1862_sources/type_cast_1868/SplitProtocol/Sample/ra branch_block_stmt_1628/divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit_PhiReq/phi_stmt_1862/phi_stmt_1862_sources/type_cast_1868/SplitProtocol/Update/ca)
  phi_stmt_1862 <=> (branch_block_stmt_1628/xx_xpreheaderx_xi_divideUnsignedx_xexit_PhiReq/phi_stmt_1862/phi_stmt_1862_req branch_block_stmt_1628/divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit_PhiReq/phi_stmt_1862/phi_stmt_1862_req) (branch_block_stmt_1628/merge_stmt_1861_PhiAck/phi_stmt_1862_ack)
  // 		iNsTr_18 := (($bitcast ($int<32>) iNsTr_13 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.linked.opt.aa, line 691
  // (($bitcast ($int<32>) iNsTr_13 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) iNsTr_13 )
  type_cast_1872_inst <=> (branch_block_stmt_1628/assign_stmt_1877_to_assign_stmt_1889/type_cast_1872_Sample/rr branch_block_stmt_1628/assign_stmt_1877_to_assign_stmt_1889/type_cast_1872_Update/cr) (branch_block_stmt_1628/assign_stmt_1877_to_assign_stmt_1889/type_cast_1872_Sample/ra branch_block_stmt_1628/assign_stmt_1877_to_assign_stmt_1889/type_cast_1872_Update/ca)
  SLT_i32_u1_1876_inst <=> (branch_block_stmt_1628/assign_stmt_1877_to_assign_stmt_1889/SLT_i32_u1_1876_Sample/rr branch_block_stmt_1628/assign_stmt_1877_to_assign_stmt_1889/SLT_i32_u1_1876_Update/cr) (branch_block_stmt_1628/assign_stmt_1877_to_assign_stmt_1889/SLT_i32_u1_1876_Sample/ra branch_block_stmt_1628/assign_stmt_1877_to_assign_stmt_1889/SLT_i32_u1_1876_Update/ca)
  // 		iNsTr_19 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - quotientx_x1x_xi)
  //  file prog.linked.opt.aa, line 692
  // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) - quotientx_x1x_xi)
  SUB_u64_u64_1882_inst <=> (branch_block_stmt_1628/assign_stmt_1877_to_assign_stmt_1889/SUB_u64_u64_1882_Sample/rr branch_block_stmt_1628/assign_stmt_1877_to_assign_stmt_1889/SUB_u64_u64_1882_Update/cr) (branch_block_stmt_1628/assign_stmt_1877_to_assign_stmt_1889/SUB_u64_u64_1882_Sample/ra branch_block_stmt_1628/assign_stmt_1877_to_assign_stmt_1889/SUB_u64_u64_1882_Update/ca)
  // 		iNsTr_20 := ( $mux iNsTr_18 iNsTr_19  quotientx_x1x_xi ) 
  //  file prog.linked.opt.aa, line 693
  // ( $mux iNsTr_18 iNsTr_19  quotientx_x1x_xi ) 
  MUX_1888_inst <=> (branch_block_stmt_1628/assign_stmt_1877_to_assign_stmt_1889/MUX_1888_start/req branch_block_stmt_1628/assign_stmt_1877_to_assign_stmt_1889/MUX_1888_complete/req) (branch_block_stmt_1628/assign_stmt_1877_to_assign_stmt_1889/MUX_1888_start/ack branch_block_stmt_1628/assign_stmt_1877_to_assign_stmt_1889/MUX_1888_complete/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 695
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 698
  // ($cast ($uint<64>) iNsTr_20 )
  type_cast_1897_inst <=> (branch_block_stmt_1628/divideUnsignedx_xexit_UnifiedReturnBlock_PhiReq/phi_stmt_1894/phi_stmt_1894_sources/type_cast_1897/SplitProtocol/Sample/rr branch_block_stmt_1628/divideUnsignedx_xexit_UnifiedReturnBlock_PhiReq/phi_stmt_1894/phi_stmt_1894_sources/type_cast_1897/SplitProtocol/Update/cr) (branch_block_stmt_1628/divideUnsignedx_xexit_UnifiedReturnBlock_PhiReq/phi_stmt_1894/phi_stmt_1894_sources/type_cast_1897/SplitProtocol/Sample/ra branch_block_stmt_1628/divideUnsignedx_xexit_UnifiedReturnBlock_PhiReq/phi_stmt_1894/phi_stmt_1894_sources/type_cast_1897/SplitProtocol/Update/ca)
  phi_stmt_1894 <=> (branch_block_stmt_1628/divideUnsignedx_xexit_UnifiedReturnBlock_PhiReq/phi_stmt_1894/phi_stmt_1894_req branch_block_stmt_1628/bb_10_UnifiedReturnBlock_PhiReq/phi_stmt_1894/phi_stmt_1894_req) (branch_block_stmt_1628/merge_stmt_1893_PhiAck/phi_stmt_1894_ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 702
}
$module [divideUnsigned] 
{
  $in dividend:$int<64>
  // can point into  mempool
  divisor:$int<32>
  // can point into  mempool
  $out ret_val__:$int<64>
  // can point into  mempool
  // pipe-declarations for block %divideUnsigned
  //  file prog.linked.opt.aa, line 706
  // pipe-declarations for block %divideUnsigned%body
  //  file prog.linked.opt.aa, line 711
  // pipe-declarations for block %divideUnsigned%body%
  //  file prog.linked.opt.aa, line 719
  // pipe-declarations for block %divideUnsigned%body%
  //  file prog.linked.opt.aa, line 728
  // pipe-declarations for block %divideUnsigned%body%
  //  file prog.linked.opt.aa, line 731
  // pipe-declarations for block %divideUnsigned%body%
  //  file prog.linked.opt.aa, line 742
  // pipe-declarations for block %divideUnsigned%body%
  //  file prog.linked.opt.aa, line 745
  // pipe-declarations for block %divideUnsigned%body%
  //  file prog.linked.opt.aa, line 757
  // pipe-declarations for block %divideUnsigned%body%
  //  file prog.linked.opt.aa, line 762
  // pipe-declarations for block %divideUnsigned%body%
  //  file prog.linked.opt.aa, line 774
  // pipe-declarations for block %divideUnsigned%body%
  //  file prog.linked.opt.aa, line 778
  // pipe-declarations for block %divideUnsigned%body%
  //  file prog.linked.opt.aa, line 782
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_1910] // Branch Block  file prog.linked.opt.aa, line 711
    {
      $P [branch_block_stmt_1910__entry__]
      branch_block_stmt_1910__entry__ <-| ($entry)
      $P [branch_block_stmt_1910__exit__]
      branch_block_stmt_1910__exit__ |-> ($exit)
      $P [assign_stmt_1916__entry__] 
      $P [assign_stmt_1916__exit__] 
      $P [if_stmt_1917__entry__] 
      $P [if_stmt_1917__exit__] 
      $P [merge_stmt_1923__entry__] 
      $P [merge_stmt_1923__exit__] 
      $P [assign_stmt_1927_to_assign_stmt_1932__entry__] 
      $P [assign_stmt_1927_to_assign_stmt_1932__exit__] 
      $P [if_stmt_1933__entry__] 
      $P [if_stmt_1933__exit__] 
      $P [merge_stmt_1939__entry__] 
      $P [merge_stmt_1939__exit__] 
      $P [bbx_xnph6x_xpreheader_bbx_xnph6]
      $P [merge_stmt_1941__exit__] 
      $P [assign_stmt_1961_to_assign_stmt_1966__entry__] 
      $P [assign_stmt_1961_to_assign_stmt_1966__exit__] 
      $P [if_stmt_1967__entry__] 
      $P [if_stmt_1967__exit__] 
      $P [merge_stmt_1973__entry__] 
      $P [merge_stmt_1973__exit__] 
      $P [bbx_xnphx_xpreheader_bbx_xnph]
      $P [merge_stmt_1975__exit__] 
      $P [assign_stmt_1995_to_assign_stmt_2006__entry__] 
      $P [assign_stmt_1995_to_assign_stmt_2006__exit__] 
      $P [if_stmt_2007__entry__] 
      $P [if_stmt_2007__exit__] 
      $P [merge_stmt_2013__entry__] 
      $P [merge_stmt_2013__exit__] 
      $P [xx_x_crit_edgex_xloopexit_xx_x_crit_edge]
      $P [merge_stmt_2024__exit__] 
      $P [assign_stmt_2043_to_assign_stmt_2053__entry__] 
      $P [assign_stmt_2043_to_assign_stmt_2053__exit__] 
      $P [if_stmt_2054__entry__] 
      $P [if_stmt_2054__exit__] 
      $P [merge_stmt_2060__entry__] 
      $P [merge_stmt_2060__exit__] 
      $P [xx_xloopexitx_xloopexit_xx_xloopexit]
      $P [merge_stmt_2067__exit__] 
      $P [return__]
      $P [merge_stmt_2080__exit__] 
      ::[assign_stmt_1916] 
      {
        // 		iNsTr_0 := (divisor == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.linked.opt.aa, line 713
        // Source expression
        // (divisor == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_1915_sample_start_] 
        $T[EQ_u32_u1_1915_sample_completed_] 
        $T[EQ_u32_u1_1915_update_start_] 
        $T[EQ_u32_u1_1915_update_completed_] 
        // divisor
        $T[R_divisor_1912_sample_start_] 
        $T[R_divisor_1912_sample_completed_] 
        $T[R_divisor_1912_update_start_] 
        $T[R_divisor_1912_update_completed_] 
        // reference to interface object
        R_divisor_1912_sample_start_ <-& ($entry)
        R_divisor_1912_sample_completed_ <-& (R_divisor_1912_sample_start_)
        R_divisor_1912_update_start_ <-& (R_divisor_1912_sample_completed_)
        R_divisor_1912_update_completed_ <-& (R_divisor_1912_update_start_)
        EQ_u32_u1_1915_sample_start_ <-& (R_divisor_1912_update_completed_)
        ;;[EQ_u32_u1_1915_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_1915_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_1915_sample_start_ &-> (EQ_u32_u1_1915_Sample)
        EQ_u32_u1_1915_sample_completed_ <-& (EQ_u32_u1_1915_Sample)
        EQ_u32_u1_1915_sample_completed_ &-> ($null)
        EQ_u32_u1_1915_update_start_ &-> (EQ_u32_u1_1915_Update)
        EQ_u32_u1_1915_update_completed_ <-& (EQ_u32_u1_1915_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1916__entry__ |-> (assign_stmt_1916)
      assign_stmt_1916__exit__ <-| (assign_stmt_1916)
      // if-statement  
      //  file prog.linked.opt.aa, line 714
      ;;[if_stmt_1917_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1917__entry__ |-> (if_stmt_1917_dead_link)
      if_stmt_1917__exit__ <-| (if_stmt_1917_dead_link)
      ;;[if_stmt_1917_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1917__entry__ |-> (if_stmt_1917_eval_test)
      $P [R_iNsTr_0_1918_place]
      R_iNsTr_0_1918_place <-| (if_stmt_1917_eval_test)
      ;;[if_stmt_1917_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1917_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_0_1918_place |-> (if_stmt_1917_if_link if_stmt_1917_else_link)
      $P [bb_0_xx_xloopexit]
      bb_0_xx_xloopexit <-| (if_stmt_1917_if_link)
      $P [bb_0_xx_xpreheader]
      bb_0_xx_xpreheader <-| (if_stmt_1917_else_link)
      ::[assign_stmt_1927_to_assign_stmt_1932] 
      {
        // 		iNsTr_3 := ($cast ($uint<64>) divisor )
        //  file prog.linked.opt.aa, line 721
        // Source expression
        // ($cast ($uint<64>) divisor )
        $T[type_cast_1926_sample_start_] 
        $T[type_cast_1926_sample_completed_] 
        $T[type_cast_1926_update_start_] 
        $T[type_cast_1926_update_completed_] 
        // divisor
        $T[R_divisor_1925_sample_start_] 
        $T[R_divisor_1925_sample_completed_] 
        $T[R_divisor_1925_update_start_] 
        $T[R_divisor_1925_update_completed_] 
        // reference to interface object
        R_divisor_1925_sample_start_ <-& ($entry)
        R_divisor_1925_sample_completed_ <-& (R_divisor_1925_sample_start_)
        R_divisor_1925_update_start_ <-& (R_divisor_1925_sample_completed_)
        R_divisor_1925_update_completed_ <-& (R_divisor_1925_update_start_)
        type_cast_1926_sample_start_ <-& (R_divisor_1925_update_completed_)
        ;;[type_cast_1926_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1926_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1926_sample_start_ &-> (type_cast_1926_Sample)
        type_cast_1926_sample_completed_ <-& (type_cast_1926_Sample)
        type_cast_1926_sample_completed_ &-> ($null)
        type_cast_1926_update_start_ &-> (type_cast_1926_Update)
        type_cast_1926_update_completed_ <-& (type_cast_1926_Update)
        // Target expression
        // (as target) iNsTr_3
        // iNsTr_3
        // implicit reference
        // 		iNsTr_4 := (iNsTr_3 > dividend)
        //  file prog.linked.opt.aa, line 722
        // Source expression
        // (iNsTr_3 > dividend)
        $T[UGT_u64_u1_1931_sample_start_] 
        $T[UGT_u64_u1_1931_sample_completed_] 
        $T[UGT_u64_u1_1931_update_start_] 
        $T[UGT_u64_u1_1931_update_completed_] 
        // iNsTr_3
        $T[R_iNsTr_3_1929_sample_start_] 
        $T[R_iNsTr_3_1929_sample_completed_] 
        $T[R_iNsTr_3_1929_update_start_] 
        $T[R_iNsTr_3_1929_update_completed_] 
        // implicit reference
        R_iNsTr_3_1929_sample_start_ <-& (type_cast_1926_update_completed_)
        R_iNsTr_3_1929_sample_completed_ <-& (R_iNsTr_3_1929_sample_start_)
        R_iNsTr_3_1929_update_start_ <-& (R_iNsTr_3_1929_sample_completed_)
        R_iNsTr_3_1929_update_completed_ <-& (R_iNsTr_3_1929_update_start_)
        // dividend
        $T[R_dividend_1930_sample_start_] 
        $T[R_dividend_1930_sample_completed_] 
        $T[R_dividend_1930_update_start_] 
        $T[R_dividend_1930_update_completed_] 
        // reference to interface object
        R_dividend_1930_sample_start_ <-& ($entry)
        R_dividend_1930_sample_completed_ <-& (R_dividend_1930_sample_start_)
        R_dividend_1930_update_start_ <-& (R_dividend_1930_sample_completed_)
        R_dividend_1930_update_completed_ <-& (R_dividend_1930_update_start_)
        UGT_u64_u1_1931_sample_start_ <-& (R_iNsTr_3_1929_update_completed_)
        UGT_u64_u1_1931_sample_start_ <-& (R_dividend_1930_update_completed_)
        ;;[UGT_u64_u1_1931_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u64_u1_1931_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u64_u1_1931_sample_start_ &-> (UGT_u64_u1_1931_Sample)
        UGT_u64_u1_1931_sample_completed_ <-& (UGT_u64_u1_1931_Sample)
        UGT_u64_u1_1931_sample_completed_ &-> ($null)
        UGT_u64_u1_1931_update_start_ &-> (UGT_u64_u1_1931_Update)
        UGT_u64_u1_1931_update_completed_ <-& (UGT_u64_u1_1931_Update)
        // Target expression
        // (as target) iNsTr_4
        // iNsTr_4
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1927_to_assign_stmt_1932__entry__ |-> (assign_stmt_1927_to_assign_stmt_1932)
      assign_stmt_1927_to_assign_stmt_1932__exit__ <-| (assign_stmt_1927_to_assign_stmt_1932)
      // if-statement  
      //  file prog.linked.opt.aa, line 723
      ;;[if_stmt_1933_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1933__entry__ |-> (if_stmt_1933_dead_link)
      if_stmt_1933__exit__ <-| (if_stmt_1933_dead_link)
      ;;[if_stmt_1933_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1933__entry__ |-> (if_stmt_1933_eval_test)
      $P [R_iNsTr_4_1934_place]
      R_iNsTr_4_1934_place <-| (if_stmt_1933_eval_test)
      ;;[if_stmt_1933_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1933_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_4_1934_place |-> (if_stmt_1933_if_link if_stmt_1933_else_link)
      $P [xx_xpreheader_xx_xloopexit]
      xx_xpreheader_xx_xloopexit <-| (if_stmt_1933_if_link)
      $P [xx_xpreheader_bbx_xnph6x_xpreheader]
      xx_xpreheader_bbx_xnph6x_xpreheader <-| (if_stmt_1933_else_link)
      ::[assign_stmt_1961_to_assign_stmt_1966] 
      {
        // 		iNsTr_7 := (xx_x05 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 735
        // Source expression
        // (xx_x05 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[LSHR_u64_u64_1960_sample_start_] 
        $T[LSHR_u64_u64_1960_sample_completed_] 
        $T[LSHR_u64_u64_1960_update_start_] 
        $T[LSHR_u64_u64_1960_update_completed_] 
        // xx_x05
        $T[R_xx_x05_1957_sample_start_] 
        $T[R_xx_x05_1957_sample_completed_] 
        $T[R_xx_x05_1957_update_start_] 
        $T[R_xx_x05_1957_update_completed_] 
        // implicit reference
        R_xx_x05_1957_sample_start_ <-& ($entry)
        R_xx_x05_1957_sample_completed_ <-& (R_xx_x05_1957_sample_start_)
        R_xx_x05_1957_update_start_ <-& (R_xx_x05_1957_sample_completed_)
        R_xx_x05_1957_update_completed_ <-& (R_xx_x05_1957_update_start_)
        LSHR_u64_u64_1960_sample_start_ <-& (R_xx_x05_1957_update_completed_)
        ;;[LSHR_u64_u64_1960_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u64_u64_1960_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u64_u64_1960_sample_start_ &-> (LSHR_u64_u64_1960_Sample)
        LSHR_u64_u64_1960_sample_completed_ <-& (LSHR_u64_u64_1960_Sample)
        LSHR_u64_u64_1960_sample_completed_ &-> ($null)
        LSHR_u64_u64_1960_update_start_ &-> (LSHR_u64_u64_1960_Update)
        LSHR_u64_u64_1960_update_completed_ <-& (LSHR_u64_u64_1960_Update)
        // Target expression
        // (as target) iNsTr_7
        // iNsTr_7
        // implicit reference
        // 		iNsTr_8 := (iNsTr_3 < iNsTr_7)
        //  file prog.linked.opt.aa, line 736
        // Source expression
        // (iNsTr_3 < iNsTr_7)
        $T[ULT_u64_u1_1965_sample_start_] 
        $T[ULT_u64_u1_1965_sample_completed_] 
        $T[ULT_u64_u1_1965_update_start_] 
        $T[ULT_u64_u1_1965_update_completed_] 
        // iNsTr_3
        $T[R_iNsTr_3_1963_sample_start_] 
        $T[R_iNsTr_3_1963_sample_completed_] 
        $T[R_iNsTr_3_1963_update_start_] 
        $T[R_iNsTr_3_1963_update_completed_] 
        // implicit reference
        R_iNsTr_3_1963_sample_start_ <-& ($entry)
        R_iNsTr_3_1963_sample_completed_ <-& (R_iNsTr_3_1963_sample_start_)
        R_iNsTr_3_1963_update_start_ <-& (R_iNsTr_3_1963_sample_completed_)
        R_iNsTr_3_1963_update_completed_ <-& (R_iNsTr_3_1963_update_start_)
        // iNsTr_7
        $T[R_iNsTr_7_1964_sample_start_] 
        $T[R_iNsTr_7_1964_sample_completed_] 
        $T[R_iNsTr_7_1964_update_start_] 
        $T[R_iNsTr_7_1964_update_completed_] 
        // implicit reference
        R_iNsTr_7_1964_sample_start_ <-& (LSHR_u64_u64_1960_update_completed_)
        R_iNsTr_7_1964_sample_completed_ <-& (R_iNsTr_7_1964_sample_start_)
        R_iNsTr_7_1964_update_start_ <-& (R_iNsTr_7_1964_sample_completed_)
        R_iNsTr_7_1964_update_completed_ <-& (R_iNsTr_7_1964_update_start_)
        ULT_u64_u1_1965_sample_start_ <-& (R_iNsTr_3_1963_update_completed_)
        ULT_u64_u1_1965_sample_start_ <-& (R_iNsTr_7_1964_update_completed_)
        ;;[ULT_u64_u1_1965_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u64_u1_1965_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u64_u1_1965_sample_start_ &-> (ULT_u64_u1_1965_Sample)
        ULT_u64_u1_1965_sample_completed_ <-& (ULT_u64_u1_1965_Sample)
        ULT_u64_u1_1965_sample_completed_ &-> ($null)
        ULT_u64_u1_1965_update_start_ &-> (ULT_u64_u1_1965_Update)
        ULT_u64_u1_1965_update_completed_ <-& (ULT_u64_u1_1965_Update)
        // Target expression
        // (as target) iNsTr_8
        // iNsTr_8
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1961_to_assign_stmt_1966__entry__ |-> (assign_stmt_1961_to_assign_stmt_1966)
      assign_stmt_1961_to_assign_stmt_1966__exit__ <-| (assign_stmt_1961_to_assign_stmt_1966)
      // if-statement  
      //  file prog.linked.opt.aa, line 737
      ;;[if_stmt_1967_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1967__entry__ |-> (if_stmt_1967_dead_link)
      if_stmt_1967__exit__ <-| (if_stmt_1967_dead_link)
      ;;[if_stmt_1967_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1967__entry__ |-> (if_stmt_1967_eval_test)
      $P [R_iNsTr_8_1968_place]
      R_iNsTr_8_1968_place <-| (if_stmt_1967_eval_test)
      ;;[if_stmt_1967_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1967_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_8_1968_place |-> (if_stmt_1967_if_link if_stmt_1967_else_link)
      $P [bbx_xnph6_bbx_xnphx_xpreheader]
      bbx_xnph6_bbx_xnphx_xpreheader <-| (if_stmt_1967_if_link)
      $P [bbx_xnph6_xx_x_crit_edge]
      bbx_xnph6_xx_x_crit_edge <-| (if_stmt_1967_else_link)
      ::[assign_stmt_1995_to_assign_stmt_2006] 
      {
        // 		iNsTr_15 := (shifted_divisorx_x02 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 749
        // Source expression
        // (shifted_divisorx_x02 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[SHL_u64_u64_1994_sample_start_] 
        $T[SHL_u64_u64_1994_sample_completed_] 
        $T[SHL_u64_u64_1994_update_start_] 
        $T[SHL_u64_u64_1994_update_completed_] 
        // shifted_divisorx_x02
        $T[R_shifted_divisorx_x02_1991_sample_start_] 
        $T[R_shifted_divisorx_x02_1991_sample_completed_] 
        $T[R_shifted_divisorx_x02_1991_update_start_] 
        $T[R_shifted_divisorx_x02_1991_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x02_1991_sample_start_ <-& ($entry)
        R_shifted_divisorx_x02_1991_sample_completed_ <-& (R_shifted_divisorx_x02_1991_sample_start_)
        R_shifted_divisorx_x02_1991_update_start_ <-& (R_shifted_divisorx_x02_1991_sample_completed_)
        R_shifted_divisorx_x02_1991_update_completed_ <-& (R_shifted_divisorx_x02_1991_update_start_)
        SHL_u64_u64_1994_sample_start_ <-& (R_shifted_divisorx_x02_1991_update_completed_)
        ;;[SHL_u64_u64_1994_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u64_u64_1994_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u64_u64_1994_sample_start_ &-> (SHL_u64_u64_1994_Sample)
        SHL_u64_u64_1994_sample_completed_ <-& (SHL_u64_u64_1994_Sample)
        SHL_u64_u64_1994_sample_completed_ &-> ($null)
        SHL_u64_u64_1994_update_start_ &-> (SHL_u64_u64_1994_Update)
        SHL_u64_u64_1994_update_completed_ <-& (SHL_u64_u64_1994_Update)
        // Target expression
        // (as target) iNsTr_15
        // iNsTr_15
        // implicit reference
        // 		iNsTr_16 := (curr_quotientx_x01 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 750
        // Source expression
        // (curr_quotientx_x01 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[SHL_u64_u64_2000_sample_start_] 
        $T[SHL_u64_u64_2000_sample_completed_] 
        $T[SHL_u64_u64_2000_update_start_] 
        $T[SHL_u64_u64_2000_update_completed_] 
        // curr_quotientx_x01
        $T[R_curr_quotientx_x01_1997_sample_start_] 
        $T[R_curr_quotientx_x01_1997_sample_completed_] 
        $T[R_curr_quotientx_x01_1997_update_start_] 
        $T[R_curr_quotientx_x01_1997_update_completed_] 
        // implicit reference
        R_curr_quotientx_x01_1997_sample_start_ <-& ($entry)
        R_curr_quotientx_x01_1997_sample_completed_ <-& (R_curr_quotientx_x01_1997_sample_start_)
        R_curr_quotientx_x01_1997_update_start_ <-& (R_curr_quotientx_x01_1997_sample_completed_)
        R_curr_quotientx_x01_1997_update_completed_ <-& (R_curr_quotientx_x01_1997_update_start_)
        SHL_u64_u64_2000_sample_start_ <-& (R_curr_quotientx_x01_1997_update_completed_)
        ;;[SHL_u64_u64_2000_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u64_u64_2000_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u64_u64_2000_sample_start_ &-> (SHL_u64_u64_2000_Sample)
        SHL_u64_u64_2000_sample_completed_ <-& (SHL_u64_u64_2000_Sample)
        SHL_u64_u64_2000_sample_completed_ &-> ($null)
        SHL_u64_u64_2000_update_start_ &-> (SHL_u64_u64_2000_Update)
        SHL_u64_u64_2000_update_completed_ <-& (SHL_u64_u64_2000_Update)
        // Target expression
        // (as target) iNsTr_16
        // iNsTr_16
        // implicit reference
        // 		iNsTr_17 := (iNsTr_15 < iNsTr_7)
        //  file prog.linked.opt.aa, line 751
        // Source expression
        // (iNsTr_15 < iNsTr_7)
        $T[ULT_u64_u1_2005_sample_start_] 
        $T[ULT_u64_u1_2005_sample_completed_] 
        $T[ULT_u64_u1_2005_update_start_] 
        $T[ULT_u64_u1_2005_update_completed_] 
        // iNsTr_15
        $T[R_iNsTr_15_2003_sample_start_] 
        $T[R_iNsTr_15_2003_sample_completed_] 
        $T[R_iNsTr_15_2003_update_start_] 
        $T[R_iNsTr_15_2003_update_completed_] 
        // implicit reference
        R_iNsTr_15_2003_sample_start_ <-& (SHL_u64_u64_1994_update_completed_)
        R_iNsTr_15_2003_sample_completed_ <-& (R_iNsTr_15_2003_sample_start_)
        R_iNsTr_15_2003_update_start_ <-& (R_iNsTr_15_2003_sample_completed_)
        R_iNsTr_15_2003_update_completed_ <-& (R_iNsTr_15_2003_update_start_)
        // iNsTr_7
        $T[R_iNsTr_7_2004_sample_start_] 
        $T[R_iNsTr_7_2004_sample_completed_] 
        $T[R_iNsTr_7_2004_update_start_] 
        $T[R_iNsTr_7_2004_update_completed_] 
        // implicit reference
        R_iNsTr_7_2004_sample_start_ <-& ($entry)
        R_iNsTr_7_2004_sample_completed_ <-& (R_iNsTr_7_2004_sample_start_)
        R_iNsTr_7_2004_update_start_ <-& (R_iNsTr_7_2004_sample_completed_)
        R_iNsTr_7_2004_update_completed_ <-& (R_iNsTr_7_2004_update_start_)
        ULT_u64_u1_2005_sample_start_ <-& (R_iNsTr_15_2003_update_completed_)
        ULT_u64_u1_2005_sample_start_ <-& (R_iNsTr_7_2004_update_completed_)
        ;;[ULT_u64_u1_2005_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u64_u1_2005_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u64_u1_2005_sample_start_ &-> (ULT_u64_u1_2005_Sample)
        ULT_u64_u1_2005_sample_completed_ <-& (ULT_u64_u1_2005_Sample)
        ULT_u64_u1_2005_sample_completed_ &-> ($null)
        ULT_u64_u1_2005_update_start_ &-> (ULT_u64_u1_2005_Update)
        ULT_u64_u1_2005_update_completed_ <-& (ULT_u64_u1_2005_Update)
        // Target expression
        // (as target) iNsTr_17
        // iNsTr_17
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1995_to_assign_stmt_2006__entry__ |-> (assign_stmt_1995_to_assign_stmt_2006)
      assign_stmt_1995_to_assign_stmt_2006__exit__ <-| (assign_stmt_1995_to_assign_stmt_2006)
      // if-statement  
      //  file prog.linked.opt.aa, line 752
      ;;[if_stmt_2007_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2007__entry__ |-> (if_stmt_2007_dead_link)
      if_stmt_2007__exit__ <-| (if_stmt_2007_dead_link)
      ;;[if_stmt_2007_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2007__entry__ |-> (if_stmt_2007_eval_test)
      $P [R_iNsTr_17_2008_place]
      R_iNsTr_17_2008_place <-| (if_stmt_2007_eval_test)
      ;;[if_stmt_2007_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2007_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_17_2008_place |-> (if_stmt_2007_if_link if_stmt_2007_else_link)
      $P [bbx_xnph_bbx_xnph]
      bbx_xnph_bbx_xnph <-| (if_stmt_2007_if_link)
      $P [bbx_xnph_xx_x_crit_edgex_xloopexit]
      bbx_xnph_xx_x_crit_edgex_xloopexit <-| (if_stmt_2007_else_link)
      ::[assign_stmt_2043_to_assign_stmt_2053] 
      {
        // 		iNsTr_11 := (curr_quotientx_x0x_xlcssa + quotientx_x04)
        //  file prog.linked.opt.aa, line 766
        // Source expression
        // (curr_quotientx_x0x_xlcssa + quotientx_x04)
        $T[ADD_u64_u64_2042_sample_start_] 
        $T[ADD_u64_u64_2042_sample_completed_] 
        $T[ADD_u64_u64_2042_update_start_] 
        $T[ADD_u64_u64_2042_update_completed_] 
        // curr_quotientx_x0x_xlcssa
        $T[R_curr_quotientx_x0x_xlcssa_2040_sample_start_] 
        $T[R_curr_quotientx_x0x_xlcssa_2040_sample_completed_] 
        $T[R_curr_quotientx_x0x_xlcssa_2040_update_start_] 
        $T[R_curr_quotientx_x0x_xlcssa_2040_update_completed_] 
        // implicit reference
        R_curr_quotientx_x0x_xlcssa_2040_sample_start_ <-& ($entry)
        R_curr_quotientx_x0x_xlcssa_2040_sample_completed_ <-& (R_curr_quotientx_x0x_xlcssa_2040_sample_start_)
        R_curr_quotientx_x0x_xlcssa_2040_update_start_ <-& (R_curr_quotientx_x0x_xlcssa_2040_sample_completed_)
        R_curr_quotientx_x0x_xlcssa_2040_update_completed_ <-& (R_curr_quotientx_x0x_xlcssa_2040_update_start_)
        // quotientx_x04
        $T[R_quotientx_x04_2041_sample_start_] 
        $T[R_quotientx_x04_2041_sample_completed_] 
        $T[R_quotientx_x04_2041_update_start_] 
        $T[R_quotientx_x04_2041_update_completed_] 
        // implicit reference
        R_quotientx_x04_2041_sample_start_ <-& ($entry)
        R_quotientx_x04_2041_sample_completed_ <-& (R_quotientx_x04_2041_sample_start_)
        R_quotientx_x04_2041_update_start_ <-& (R_quotientx_x04_2041_sample_completed_)
        R_quotientx_x04_2041_update_completed_ <-& (R_quotientx_x04_2041_update_start_)
        ADD_u64_u64_2042_sample_start_ <-& (R_curr_quotientx_x0x_xlcssa_2040_update_completed_)
        ADD_u64_u64_2042_sample_start_ <-& (R_quotientx_x04_2041_update_completed_)
        ;;[ADD_u64_u64_2042_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_2042_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_2042_sample_start_ &-> (ADD_u64_u64_2042_Sample)
        ADD_u64_u64_2042_sample_completed_ <-& (ADD_u64_u64_2042_Sample)
        ADD_u64_u64_2042_sample_completed_ &-> ($null)
        ADD_u64_u64_2042_update_start_ &-> (ADD_u64_u64_2042_Update)
        ADD_u64_u64_2042_update_completed_ <-& (ADD_u64_u64_2042_Update)
        // Target expression
        // (as target) iNsTr_11
        // iNsTr_11
        // implicit reference
        // 		iNsTr_12 := (xx_x05 - shifted_divisorx_x0x_xlcssa)
        //  file prog.linked.opt.aa, line 767
        // Source expression
        // (xx_x05 - shifted_divisorx_x0x_xlcssa)
        $T[SUB_u64_u64_2047_sample_start_] 
        $T[SUB_u64_u64_2047_sample_completed_] 
        $T[SUB_u64_u64_2047_update_start_] 
        $T[SUB_u64_u64_2047_update_completed_] 
        // xx_x05
        $T[R_xx_x05_2045_sample_start_] 
        $T[R_xx_x05_2045_sample_completed_] 
        $T[R_xx_x05_2045_update_start_] 
        $T[R_xx_x05_2045_update_completed_] 
        // implicit reference
        R_xx_x05_2045_sample_start_ <-& ($entry)
        R_xx_x05_2045_sample_completed_ <-& (R_xx_x05_2045_sample_start_)
        R_xx_x05_2045_update_start_ <-& (R_xx_x05_2045_sample_completed_)
        R_xx_x05_2045_update_completed_ <-& (R_xx_x05_2045_update_start_)
        // shifted_divisorx_x0x_xlcssa
        $T[R_shifted_divisorx_x0x_xlcssa_2046_sample_start_] 
        $T[R_shifted_divisorx_x0x_xlcssa_2046_sample_completed_] 
        $T[R_shifted_divisorx_x0x_xlcssa_2046_update_start_] 
        $T[R_shifted_divisorx_x0x_xlcssa_2046_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x0x_xlcssa_2046_sample_start_ <-& ($entry)
        R_shifted_divisorx_x0x_xlcssa_2046_sample_completed_ <-& (R_shifted_divisorx_x0x_xlcssa_2046_sample_start_)
        R_shifted_divisorx_x0x_xlcssa_2046_update_start_ <-& (R_shifted_divisorx_x0x_xlcssa_2046_sample_completed_)
        R_shifted_divisorx_x0x_xlcssa_2046_update_completed_ <-& (R_shifted_divisorx_x0x_xlcssa_2046_update_start_)
        SUB_u64_u64_2047_sample_start_ <-& (R_xx_x05_2045_update_completed_)
        SUB_u64_u64_2047_sample_start_ <-& (R_shifted_divisorx_x0x_xlcssa_2046_update_completed_)
        ;;[SUB_u64_u64_2047_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u64_u64_2047_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u64_u64_2047_sample_start_ &-> (SUB_u64_u64_2047_Sample)
        SUB_u64_u64_2047_sample_completed_ <-& (SUB_u64_u64_2047_Sample)
        SUB_u64_u64_2047_sample_completed_ &-> ($null)
        SUB_u64_u64_2047_update_start_ &-> (SUB_u64_u64_2047_Update)
        SUB_u64_u64_2047_update_completed_ <-& (SUB_u64_u64_2047_Update)
        // Target expression
        // (as target) iNsTr_12
        // iNsTr_12
        // implicit reference
        // 		iNsTr_13 := (iNsTr_12 < iNsTr_3)
        //  file prog.linked.opt.aa, line 768
        // Source expression
        // (iNsTr_12 < iNsTr_3)
        $T[ULT_u64_u1_2052_sample_start_] 
        $T[ULT_u64_u1_2052_sample_completed_] 
        $T[ULT_u64_u1_2052_update_start_] 
        $T[ULT_u64_u1_2052_update_completed_] 
        // iNsTr_12
        $T[R_iNsTr_12_2050_sample_start_] 
        $T[R_iNsTr_12_2050_sample_completed_] 
        $T[R_iNsTr_12_2050_update_start_] 
        $T[R_iNsTr_12_2050_update_completed_] 
        // implicit reference
        R_iNsTr_12_2050_sample_start_ <-& (SUB_u64_u64_2047_update_completed_)
        R_iNsTr_12_2050_sample_completed_ <-& (R_iNsTr_12_2050_sample_start_)
        R_iNsTr_12_2050_update_start_ <-& (R_iNsTr_12_2050_sample_completed_)
        R_iNsTr_12_2050_update_completed_ <-& (R_iNsTr_12_2050_update_start_)
        // iNsTr_3
        $T[R_iNsTr_3_2051_sample_start_] 
        $T[R_iNsTr_3_2051_sample_completed_] 
        $T[R_iNsTr_3_2051_update_start_] 
        $T[R_iNsTr_3_2051_update_completed_] 
        // implicit reference
        R_iNsTr_3_2051_sample_start_ <-& ($entry)
        R_iNsTr_3_2051_sample_completed_ <-& (R_iNsTr_3_2051_sample_start_)
        R_iNsTr_3_2051_update_start_ <-& (R_iNsTr_3_2051_sample_completed_)
        R_iNsTr_3_2051_update_completed_ <-& (R_iNsTr_3_2051_update_start_)
        ULT_u64_u1_2052_sample_start_ <-& (R_iNsTr_12_2050_update_completed_)
        ULT_u64_u1_2052_sample_start_ <-& (R_iNsTr_3_2051_update_completed_)
        ;;[ULT_u64_u1_2052_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u64_u1_2052_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u64_u1_2052_sample_start_ &-> (ULT_u64_u1_2052_Sample)
        ULT_u64_u1_2052_sample_completed_ <-& (ULT_u64_u1_2052_Sample)
        ULT_u64_u1_2052_sample_completed_ &-> ($null)
        ULT_u64_u1_2052_update_start_ &-> (ULT_u64_u1_2052_Update)
        ULT_u64_u1_2052_update_completed_ <-& (ULT_u64_u1_2052_Update)
        // Target expression
        // (as target) iNsTr_13
        // iNsTr_13
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2043_to_assign_stmt_2053__entry__ |-> (assign_stmt_2043_to_assign_stmt_2053)
      assign_stmt_2043_to_assign_stmt_2053__exit__ <-| (assign_stmt_2043_to_assign_stmt_2053)
      // if-statement  
      //  file prog.linked.opt.aa, line 769
      ;;[if_stmt_2054_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2054__entry__ |-> (if_stmt_2054_dead_link)
      if_stmt_2054__exit__ <-| (if_stmt_2054_dead_link)
      ;;[if_stmt_2054_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2054__entry__ |-> (if_stmt_2054_eval_test)
      $P [R_iNsTr_13_2055_place]
      R_iNsTr_13_2055_place <-| (if_stmt_2054_eval_test)
      ;;[if_stmt_2054_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2054_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_13_2055_place |-> (if_stmt_2054_if_link if_stmt_2054_else_link)
      $P [xx_x_crit_edge_xx_xloopexitx_xloopexit]
      xx_x_crit_edge_xx_xloopexitx_xloopexit <-| (if_stmt_2054_if_link)
      $P [xx_x_crit_edge_bbx_xnph6]
      xx_x_crit_edge_bbx_xnph6 <-| (if_stmt_2054_else_link)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 719
      ;;[merge_stmt_1923_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1923__entry__ |-> (merge_stmt_1923_dead_link)
      merge_stmt_1923__exit__ <-| (merge_stmt_1923_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 719  --------------------------
      ||[bb_0_xx_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_xx_xpreheader |-> (bb_0_xx_xpreheader_PhiReq)
      $P [merge_stmt_1923_PhiReqMerge] 
      merge_stmt_1923_PhiReqMerge <-| ( bb_0_xx_xpreheader_PhiReq )
      ||[merge_stmt_1923_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1923_PhiReqMerge |-> (merge_stmt_1923_PhiAck)
      merge_stmt_1923__exit__  <-| (merge_stmt_1923_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 719  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 728
      ;;[merge_stmt_1939_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1939__entry__ |-> (merge_stmt_1939_dead_link)
      merge_stmt_1939__exit__ <-| (merge_stmt_1939_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 728  --------------------------
      ||[xx_xpreheader_bbx_xnph6x_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      xx_xpreheader_bbx_xnph6x_xpreheader |-> (xx_xpreheader_bbx_xnph6x_xpreheader_PhiReq)
      $P [merge_stmt_1939_PhiReqMerge] 
      merge_stmt_1939_PhiReqMerge <-| ( xx_xpreheader_bbx_xnph6x_xpreheader_PhiReq )
      ||[merge_stmt_1939_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1939_PhiReqMerge |-> (merge_stmt_1939_PhiAck)
      merge_stmt_1939__exit__  <-| (merge_stmt_1939_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 728  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 731
      //---------------------   merge statement  file prog.linked.opt.aa, line 731  --------------------------
      ||[bbx_xnph6x_xpreheader_bbx_xnph6_PhiReq] 
      {
        ;;[phi_stmt_1948] 
        {
          ||[phi_stmt_1948_sources] 
          {
            // sources for 			$phi quotientx_x04 := 			  ($cast ($uint<64>) iNsTr_11 ) $on xx_x_crit_edge_bbx_xnph6			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xpreheader_bbx_xnph6 // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_11 )
            ;;[type_cast_1951] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1948_req] 
        }
        ;;[phi_stmt_1942] 
        {
          ||[phi_stmt_1942_sources] 
          {
            // sources for 			$phi xx_x05 := 			  ($cast ($uint<64>) iNsTr_12 ) $on xx_x_crit_edge_bbx_xnph6			  ($cast ($uint<64>) dividend ) $on bbx_xnph6x_xpreheader_bbx_xnph6 // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_12 )
            ;;[type_cast_1945] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<64>) dividend )
            ;;[type_cast_1947] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1942_req] 
        }
      }
      bbx_xnph6x_xpreheader_bbx_xnph6 |-> (bbx_xnph6x_xpreheader_bbx_xnph6_PhiReq)
      ||[xx_x_crit_edge_bbx_xnph6_PhiReq] 
      {
        ;;[phi_stmt_1948] 
        {
          ||[phi_stmt_1948_sources] 
          {
            // sources for 			$phi quotientx_x04 := 			  ($cast ($uint<64>) iNsTr_11 ) $on xx_x_crit_edge_bbx_xnph6			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xpreheader_bbx_xnph6 // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_11 )
            ;;[type_cast_1951] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1948_req] 
        }
        ;;[phi_stmt_1942] 
        {
          ||[phi_stmt_1942_sources] 
          {
            // sources for 			$phi xx_x05 := 			  ($cast ($uint<64>) iNsTr_12 ) $on xx_x_crit_edge_bbx_xnph6			  ($cast ($uint<64>) dividend ) $on bbx_xnph6x_xpreheader_bbx_xnph6 // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_12 )
            ;;[type_cast_1945] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<64>) dividend )
            ;;[type_cast_1947] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1942_req] 
        }
      }
      xx_x_crit_edge_bbx_xnph6 |-> (xx_x_crit_edge_bbx_xnph6_PhiReq)
      $P [merge_stmt_1941_PhiReqMerge] 
      merge_stmt_1941_PhiReqMerge <-| ( bbx_xnph6x_xpreheader_bbx_xnph6_PhiReq  xx_x_crit_edge_bbx_xnph6_PhiReq )
      ||[merge_stmt_1941_PhiAck] 
      {
        $T [phi_stmt_1942_ack] 
        $T [phi_stmt_1948_ack] 
      }
      merge_stmt_1941_PhiReqMerge |-> (merge_stmt_1941_PhiAck)
      merge_stmt_1941__exit__  <-| (merge_stmt_1941_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 731  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 742
      ;;[merge_stmt_1973_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1973__entry__ |-> (merge_stmt_1973_dead_link)
      merge_stmt_1973__exit__ <-| (merge_stmt_1973_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 742  --------------------------
      ||[bbx_xnph6_bbx_xnphx_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph6_bbx_xnphx_xpreheader |-> (bbx_xnph6_bbx_xnphx_xpreheader_PhiReq)
      $P [merge_stmt_1973_PhiReqMerge] 
      merge_stmt_1973_PhiReqMerge <-| ( bbx_xnph6_bbx_xnphx_xpreheader_PhiReq )
      ||[merge_stmt_1973_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1973_PhiReqMerge |-> (merge_stmt_1973_PhiAck)
      merge_stmt_1973__exit__  <-| (merge_stmt_1973_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 742  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 745
      //---------------------   merge statement  file prog.linked.opt.aa, line 745  --------------------------
      ||[bbx_xnph_bbx_xnph_PhiReq] 
      {
        ;;[phi_stmt_1982] 
        {
          ||[phi_stmt_1982_sources] 
          {
            // sources for 			$phi curr_quotientx_x01 := 			  ($cast ($uint<64>) iNsTr_16 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_16 )
            ;;[type_cast_1985] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1982_req] 
        }
        ;;[phi_stmt_1976] 
        {
          ||[phi_stmt_1976_sources] 
          {
            // sources for 			$phi shifted_divisorx_x02 := 			  ($cast ($uint<64>) iNsTr_15 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<64>) iNsTr_3 ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_15 )
            ;;[type_cast_1979] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<64>) iNsTr_3 )
            ;;[type_cast_1981] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1976_req] 
        }
      }
      bbx_xnph_bbx_xnph |-> (bbx_xnph_bbx_xnph_PhiReq)
      ||[bbx_xnphx_xpreheader_bbx_xnph_PhiReq] 
      {
        ;;[phi_stmt_1982] 
        {
          ||[phi_stmt_1982_sources] 
          {
            // sources for 			$phi curr_quotientx_x01 := 			  ($cast ($uint<64>) iNsTr_16 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_16 )
            ;;[type_cast_1985] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1982_req] 
        }
        ;;[phi_stmt_1976] 
        {
          ||[phi_stmt_1976_sources] 
          {
            // sources for 			$phi shifted_divisorx_x02 := 			  ($cast ($uint<64>) iNsTr_15 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<64>) iNsTr_3 ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_15 )
            ;;[type_cast_1979] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<64>) iNsTr_3 )
            ;;[type_cast_1981] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1976_req] 
        }
      }
      bbx_xnphx_xpreheader_bbx_xnph |-> (bbx_xnphx_xpreheader_bbx_xnph_PhiReq)
      $P [merge_stmt_1975_PhiReqMerge] 
      merge_stmt_1975_PhiReqMerge <-| ( bbx_xnph_bbx_xnph_PhiReq  bbx_xnphx_xpreheader_bbx_xnph_PhiReq )
      ||[merge_stmt_1975_PhiAck] 
      {
        $T [phi_stmt_1976_ack] 
        $T [phi_stmt_1982_ack] 
      }
      merge_stmt_1975_PhiReqMerge |-> (merge_stmt_1975_PhiAck)
      merge_stmt_1975__exit__  <-| (merge_stmt_1975_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 745  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 757
      ;;[merge_stmt_2013_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2013__entry__ |-> (merge_stmt_2013_dead_link)
      merge_stmt_2013__exit__ <-| (merge_stmt_2013_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 757  --------------------------
      ||[bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_2018] 
        {
          ||[phi_stmt_2018_sources] 
          {
            // sources for 			$phi xx_xlcssa := 			  ($cast ($uint<64>) iNsTr_15 ) $on bbx_xnph_xx_x_crit_edgex_xloopexit // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_15 )
            ;;[type_cast_2021] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2018_req] 
        }
        ;;[phi_stmt_2014] 
        {
          ||[phi_stmt_2014_sources] 
          {
            // sources for 			$phi xx_xlcssa1 := 			  ($cast ($uint<64>) iNsTr_16 ) $on bbx_xnph_xx_x_crit_edgex_xloopexit // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_16 )
            ;;[type_cast_2017] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2014_req] 
        }
      }
      bbx_xnph_xx_x_crit_edgex_xloopexit |-> (bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq)
      $P [merge_stmt_2013_PhiReqMerge] 
      merge_stmt_2013_PhiReqMerge <-| ( bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq )
      ||[merge_stmt_2013_PhiAck] 
      {
        $T [phi_stmt_2014_ack] 
        $T [phi_stmt_2018_ack] 
      }
      merge_stmt_2013_PhiReqMerge |-> (merge_stmt_2013_PhiAck)
      merge_stmt_2013__exit__  <-| (merge_stmt_2013_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 757  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 762
      //---------------------   merge statement  file prog.linked.opt.aa, line 762  --------------------------
      ||[bbx_xnph6_xx_x_crit_edge_PhiReq] 
      {
        ;;[phi_stmt_2031] 
        {
          ||[phi_stmt_2031_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssa := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6_xx_x_crit_edge			  ($cast ($uint<64>) xx_xlcssa1 ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<64>
            // ($cast ($uint<64>) xx_xlcssa1 )
            ;;[type_cast_2037] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2031_req] 
        }
        ;;[phi_stmt_2025] 
        {
          ||[phi_stmt_2025_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssa := 			  ($cast ($uint<64>) iNsTr_3 ) $on bbx_xnph6_xx_x_crit_edge			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_3 )
            ;;[type_cast_2028] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<64>) xx_xlcssa )
            ;;[type_cast_2030] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2025_req] 
        }
      }
      bbx_xnph6_xx_x_crit_edge |-> (bbx_xnph6_xx_x_crit_edge_PhiReq)
      ||[xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq] 
      {
        ;;[phi_stmt_2031] 
        {
          ||[phi_stmt_2031_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssa := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6_xx_x_crit_edge			  ($cast ($uint<64>) xx_xlcssa1 ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<64>
            // ($cast ($uint<64>) xx_xlcssa1 )
            ;;[type_cast_2037] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2031_req] 
        }
        ;;[phi_stmt_2025] 
        {
          ||[phi_stmt_2025_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssa := 			  ($cast ($uint<64>) iNsTr_3 ) $on bbx_xnph6_xx_x_crit_edge			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_3 )
            ;;[type_cast_2028] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<64>) xx_xlcssa )
            ;;[type_cast_2030] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2025_req] 
        }
      }
      xx_x_crit_edgex_xloopexit_xx_x_crit_edge |-> (xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq)
      $P [merge_stmt_2024_PhiReqMerge] 
      merge_stmt_2024_PhiReqMerge <-| ( bbx_xnph6_xx_x_crit_edge_PhiReq  xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq )
      ||[merge_stmt_2024_PhiAck] 
      {
        $T [phi_stmt_2025_ack] 
        $T [phi_stmt_2031_ack] 
      }
      merge_stmt_2024_PhiReqMerge |-> (merge_stmt_2024_PhiAck)
      merge_stmt_2024__exit__  <-| (merge_stmt_2024_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 762  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 774
      ;;[merge_stmt_2060_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2060__entry__ |-> (merge_stmt_2060_dead_link)
      merge_stmt_2060__exit__ <-| (merge_stmt_2060_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 774  --------------------------
      ||[xx_x_crit_edge_xx_xloopexitx_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_2061] 
        {
          ||[phi_stmt_2061_sources] 
          {
            // sources for 			$phi xx_xlcssa2 := 			  ($cast ($uint<64>) iNsTr_11 ) $on xx_x_crit_edge_xx_xloopexitx_xloopexit // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_11 )
            ;;[type_cast_2064] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2061_req] 
        }
      }
      xx_x_crit_edge_xx_xloopexitx_xloopexit |-> (xx_x_crit_edge_xx_xloopexitx_xloopexit_PhiReq)
      $P [merge_stmt_2060_PhiReqMerge] 
      merge_stmt_2060_PhiReqMerge <-| ( xx_x_crit_edge_xx_xloopexitx_xloopexit_PhiReq )
      ||[merge_stmt_2060_PhiAck] 
      {
        $T [phi_stmt_2061_ack] 
      }
      merge_stmt_2060_PhiReqMerge |-> (merge_stmt_2060_PhiAck)
      merge_stmt_2060__exit__  <-| (merge_stmt_2060_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 774  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 778
      //---------------------   merge statement  file prog.linked.opt.aa, line 778  --------------------------
      ||[bb_0_xx_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_2068] 
        {
          ||[phi_stmt_2068_sources] 
          {
            // sources for 			$phi ret_val__ := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_xx_xloopexit			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on xx_xpreheader_xx_xloopexit			  ($cast ($uint<64>) xx_xlcssa2 ) $on xx_xloopexitx_xloopexit_xx_xloopexit // type of target is $uint<64>
            // ($cast ($uint<64>) xx_xlcssa2 )
            ;;[type_cast_2077] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2068_req] 
        }
      }
      bb_0_xx_xloopexit |-> (bb_0_xx_xloopexit_PhiReq)
      ||[xx_xloopexitx_xloopexit_xx_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_2068] 
        {
          ||[phi_stmt_2068_sources] 
          {
            // sources for 			$phi ret_val__ := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_xx_xloopexit			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on xx_xpreheader_xx_xloopexit			  ($cast ($uint<64>) xx_xlcssa2 ) $on xx_xloopexitx_xloopexit_xx_xloopexit // type of target is $uint<64>
            // ($cast ($uint<64>) xx_xlcssa2 )
            ;;[type_cast_2077] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2068_req] 
        }
      }
      xx_xloopexitx_xloopexit_xx_xloopexit |-> (xx_xloopexitx_xloopexit_xx_xloopexit_PhiReq)
      ||[xx_xpreheader_xx_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_2068] 
        {
          ||[phi_stmt_2068_sources] 
          {
            // sources for 			$phi ret_val__ := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_xx_xloopexit			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on xx_xpreheader_xx_xloopexit			  ($cast ($uint<64>) xx_xlcssa2 ) $on xx_xloopexitx_xloopexit_xx_xloopexit // type of target is $uint<64>
            // ($cast ($uint<64>) xx_xlcssa2 )
            ;;[type_cast_2077] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2068_req] 
        }
      }
      xx_xpreheader_xx_xloopexit |-> (xx_xpreheader_xx_xloopexit_PhiReq)
      $P [merge_stmt_2067_PhiReqMerge] 
      merge_stmt_2067_PhiReqMerge <-| ( bb_0_xx_xloopexit_PhiReq  xx_xloopexitx_xloopexit_xx_xloopexit_PhiReq  xx_xpreheader_xx_xloopexit_PhiReq )
      ||[merge_stmt_2067_PhiAck] 
      {
        $T [phi_stmt_2068_ack] 
      }
      merge_stmt_2067_PhiReqMerge |-> (merge_stmt_2067_PhiAck)
      merge_stmt_2067__exit__  <-| (merge_stmt_2067_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 778  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 782
      //---------------------   merge statement  file prog.linked.opt.aa, line 782  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_2080_PhiReqMerge] 
      merge_stmt_2080_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_2080_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2080_PhiReqMerge |-> (merge_stmt_2080_PhiAck)
      merge_stmt_2080__exit__  <-| (merge_stmt_2080_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 782  --------------------------
      assign_stmt_1916__entry__ <-| (branch_block_stmt_1910__entry__)
      if_stmt_1917__entry__ <-| (assign_stmt_1916__exit__)
      merge_stmt_1923__entry__ <-| (if_stmt_1917__exit__)
      assign_stmt_1927_to_assign_stmt_1932__entry__ <-| (merge_stmt_1923__exit__)
      if_stmt_1933__entry__ <-| (assign_stmt_1927_to_assign_stmt_1932__exit__)
      merge_stmt_1939__entry__ <-| (if_stmt_1933__exit__)
      bbx_xnph6x_xpreheader_bbx_xnph6 <-| (merge_stmt_1939__exit__)
      assign_stmt_1961_to_assign_stmt_1966__entry__ <-| (merge_stmt_1941__exit__)
      if_stmt_1967__entry__ <-| (assign_stmt_1961_to_assign_stmt_1966__exit__)
      merge_stmt_1973__entry__ <-| (if_stmt_1967__exit__)
      bbx_xnphx_xpreheader_bbx_xnph <-| (merge_stmt_1973__exit__)
      assign_stmt_1995_to_assign_stmt_2006__entry__ <-| (merge_stmt_1975__exit__)
      if_stmt_2007__entry__ <-| (assign_stmt_1995_to_assign_stmt_2006__exit__)
      merge_stmt_2013__entry__ <-| (if_stmt_2007__exit__)
      xx_x_crit_edgex_xloopexit_xx_x_crit_edge <-| (merge_stmt_2013__exit__)
      assign_stmt_2043_to_assign_stmt_2053__entry__ <-| (merge_stmt_2024__exit__)
      if_stmt_2054__entry__ <-| (assign_stmt_2043_to_assign_stmt_2053__exit__)
      merge_stmt_2060__entry__ <-| (if_stmt_2054__exit__)
      xx_xloopexitx_xloopexit_xx_xloopexit <-| (merge_stmt_2060__exit__)
      return__ <-| (merge_stmt_2067__exit__)
      merge_stmt_2080__exit__ |-> (branch_block_stmt_1910__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %divideUnsigned%body%
    //  file prog.linked.opt.aa, line 719
    // constant-object-declarations for block %divideUnsigned%body%
    //  file prog.linked.opt.aa, line 728
    // constant-object-declarations for block %divideUnsigned%body%
    //  file prog.linked.opt.aa, line 731
    // constant-object-declarations for block %divideUnsigned%body%
    //  file prog.linked.opt.aa, line 742
    // constant-object-declarations for block %divideUnsigned%body%
    //  file prog.linked.opt.aa, line 745
    // constant-object-declarations for block %divideUnsigned%body%
    //  file prog.linked.opt.aa, line 757
    // constant-object-declarations for block %divideUnsigned%body%
    //  file prog.linked.opt.aa, line 762
    // constant-object-declarations for block %divideUnsigned%body%
    //  file prog.linked.opt.aa, line 774
    // constant-object-declarations for block %divideUnsigned%body%
    //  file prog.linked.opt.aa, line 778
    // constant-object-declarations for block %divideUnsigned%body%
    //  file prog.linked.opt.aa, line 782
    // constant-object-declarations for block %divideUnsigned%body
    //  file prog.linked.opt.aa, line 711
    // constant-object-declarations for block %divideUnsigned
    //  file prog.linked.opt.aa, line 706
    // constant-declarations for block %divideUnsigned%body
    //  file prog.linked.opt.aa, line 711
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_1914_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 714
    // constant-declarations for block %divideUnsigned%body%
    //  file prog.linked.opt.aa, line 719
    // if-statement  
    //  file prog.linked.opt.aa, line 723
    // constant-declarations for block %divideUnsigned%body%
    //  file prog.linked.opt.aa, line 728
    // constant-declarations for block %divideUnsigned%body%
    //  file prog.linked.opt.aa, line 731
    // constant-declarations for phi:  			$phi xx_x05 := 			  ($cast ($uint<64>) iNsTr_12 ) $on xx_x_crit_edge_bbx_xnph6			  ($cast ($uint<64>) dividend ) $on bbx_xnph6x_xpreheader_bbx_xnph6 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 732
    // constant-declarations for phi:  			$phi quotientx_x04 := 			  ($cast ($uint<64>) iNsTr_11 ) $on xx_x_crit_edge_bbx_xnph6			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xpreheader_bbx_xnph6 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 733
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_1954_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1959_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 737
    // constant-declarations for block %divideUnsigned%body%
    //  file prog.linked.opt.aa, line 742
    // constant-declarations for block %divideUnsigned%body%
    //  file prog.linked.opt.aa, line 745
    // constant-declarations for phi:  			$phi shifted_divisorx_x02 := 			  ($cast ($uint<64>) iNsTr_15 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<64>) iNsTr_3 ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 746
    // constant-declarations for phi:  			$phi curr_quotientx_x01 := 			  ($cast ($uint<64>) iNsTr_16 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 747
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )
    $constant $W[type_cast_1988_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1993_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1999_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 752
    // constant-declarations for block %divideUnsigned%body%
    //  file prog.linked.opt.aa, line 757
    // constant-declarations for phi:  			$phi xx_xlcssa1 := 			  ($cast ($uint<64>) iNsTr_16 ) $on bbx_xnph_xx_x_crit_edgex_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 758
    // constant-declarations for phi:  			$phi xx_xlcssa := 			  ($cast ($uint<64>) iNsTr_15 ) $on bbx_xnph_xx_x_crit_edgex_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 759
    // constant-declarations for block %divideUnsigned%body%
    //  file prog.linked.opt.aa, line 762
    // constant-declarations for phi:  			$phi shifted_divisorx_x0x_xlcssa := 			  ($cast ($uint<64>) iNsTr_3 ) $on bbx_xnph6_xx_x_crit_edge			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 763
    // constant-declarations for phi:  			$phi curr_quotientx_x0x_xlcssa := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6_xx_x_crit_edge			  ($cast ($uint<64>) xx_xlcssa1 ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 764
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )
    $constant $W[type_cast_2035_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 769
    // constant-declarations for block %divideUnsigned%body%
    //  file prog.linked.opt.aa, line 774
    // constant-declarations for phi:  			$phi xx_xlcssa2 := 			  ($cast ($uint<64>) iNsTr_11 ) $on xx_x_crit_edge_xx_xloopexitx_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 775
    // constant-declarations for block %divideUnsigned%body%
    //  file prog.linked.opt.aa, line 778
    // constant-declarations for phi:  			$phi ret_val__ := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_xx_xloopexit			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on xx_xpreheader_xx_xloopexit			  ($cast ($uint<64>) xx_xlcssa2 ) $on xx_xloopexitx_xloopexit_xx_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 779
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_2072_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_2075_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // constant-declarations for block %divideUnsigned%body%
    //  file prog.linked.opt.aa, line 782
    // block %divideUnsigned%body
    //  file prog.linked.opt.aa, line 711
    // 		iNsTr_0 := (divisor == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.linked.opt.aa, line 713
    // iNsTr_0
    $W[iNsTr_0_1916] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 714
    // 		iNsTr_3 := ($cast ($uint<64>) divisor )
    //  file prog.linked.opt.aa, line 721
    // iNsTr_3
    $W[iNsTr_3_1927] : $int<64>
    // 		iNsTr_4 := (iNsTr_3 > dividend)
    //  file prog.linked.opt.aa, line 722
    // iNsTr_4
    $W[iNsTr_4_1932] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 723
    // merge-statement  
    //  file prog.linked.opt.aa, line 731
    // 			$phi xx_x05 := 			  ($cast ($uint<64>) iNsTr_12 ) $on xx_x_crit_edge_bbx_xnph6			  ($cast ($uint<64>) dividend ) $on bbx_xnph6x_xpreheader_bbx_xnph6 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 732
    // ($cast ($uint<64>) iNsTr_12 )
    $intermediate $W[type_cast_1945_wire] : $int<64>
    // ($cast ($uint<64>) dividend )
    $intermediate $W[type_cast_1947_wire] : $int<64>
    // xx_x05
    $W[xx_x05_1942] : $int<64>
    // 			$phi quotientx_x04 := 			  ($cast ($uint<64>) iNsTr_11 ) $on xx_x_crit_edge_bbx_xnph6			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xpreheader_bbx_xnph6 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 733
    // ($cast ($uint<64>) iNsTr_11 )
    $intermediate $W[type_cast_1951_wire] : $int<64>
    // quotientx_x04
    $W[quotientx_x04_1948] : $int<64>
    // 		iNsTr_7 := (xx_x05 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 735
    // iNsTr_7
    $W[iNsTr_7_1961] : $int<64>
    // 		iNsTr_8 := (iNsTr_3 < iNsTr_7)
    //  file prog.linked.opt.aa, line 736
    // iNsTr_8
    $W[iNsTr_8_1966] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 737
    // merge-statement  
    //  file prog.linked.opt.aa, line 745
    // 			$phi shifted_divisorx_x02 := 			  ($cast ($uint<64>) iNsTr_15 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<64>) iNsTr_3 ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 746
    // ($cast ($uint<64>) iNsTr_15 )
    $intermediate $W[type_cast_1979_wire] : $int<64>
    // ($cast ($uint<64>) iNsTr_3 )
    $intermediate $W[type_cast_1981_wire] : $int<64>
    // shifted_divisorx_x02
    $W[shifted_divisorx_x02_1976] : $int<64>
    // 			$phi curr_quotientx_x01 := 			  ($cast ($uint<64>) iNsTr_16 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 747
    // ($cast ($uint<64>) iNsTr_16 )
    $intermediate $W[type_cast_1985_wire] : $int<64>
    // curr_quotientx_x01
    $W[curr_quotientx_x01_1982] : $int<64>
    // 		iNsTr_15 := (shifted_divisorx_x02 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 749
    // iNsTr_15
    $W[iNsTr_15_1995] : $int<64>
    // 		iNsTr_16 := (curr_quotientx_x01 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 750
    // iNsTr_16
    $W[iNsTr_16_2001] : $int<64>
    // 		iNsTr_17 := (iNsTr_15 < iNsTr_7)
    //  file prog.linked.opt.aa, line 751
    // iNsTr_17
    $W[iNsTr_17_2006] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 752
    // merge-statement  
    //  file prog.linked.opt.aa, line 757
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<64>) iNsTr_16 ) $on bbx_xnph_xx_x_crit_edgex_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 758
    // ($cast ($uint<64>) iNsTr_16 )
    $intermediate $W[type_cast_2017_wire] : $int<64>
    // xx_xlcssa1
    $W[xx_xlcssa1_2014] : $int<64>
    // 			$phi xx_xlcssa := 			  ($cast ($uint<64>) iNsTr_15 ) $on bbx_xnph_xx_x_crit_edgex_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 759
    // ($cast ($uint<64>) iNsTr_15 )
    $intermediate $W[type_cast_2021_wire] : $int<64>
    // xx_xlcssa
    $W[xx_xlcssa_2018] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 762
    // 			$phi shifted_divisorx_x0x_xlcssa := 			  ($cast ($uint<64>) iNsTr_3 ) $on bbx_xnph6_xx_x_crit_edge			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 763
    // ($cast ($uint<64>) iNsTr_3 )
    $intermediate $W[type_cast_2028_wire] : $int<64>
    // ($cast ($uint<64>) xx_xlcssa )
    $intermediate $W[type_cast_2030_wire] : $int<64>
    // shifted_divisorx_x0x_xlcssa
    $W[shifted_divisorx_x0x_xlcssa_2025] : $int<64>
    // 			$phi curr_quotientx_x0x_xlcssa := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6_xx_x_crit_edge			  ($cast ($uint<64>) xx_xlcssa1 ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 764
    // ($cast ($uint<64>) xx_xlcssa1 )
    $intermediate $W[type_cast_2037_wire] : $int<64>
    // curr_quotientx_x0x_xlcssa
    $W[curr_quotientx_x0x_xlcssa_2031] : $int<64>
    // 		iNsTr_11 := (curr_quotientx_x0x_xlcssa + quotientx_x04)
    //  file prog.linked.opt.aa, line 766
    // iNsTr_11
    $W[iNsTr_11_2043] : $int<64>
    // 		iNsTr_12 := (xx_x05 - shifted_divisorx_x0x_xlcssa)
    //  file prog.linked.opt.aa, line 767
    // iNsTr_12
    $W[iNsTr_12_2048] : $int<64>
    // 		iNsTr_13 := (iNsTr_12 < iNsTr_3)
    //  file prog.linked.opt.aa, line 768
    // iNsTr_13
    $W[iNsTr_13_2053] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 769
    // merge-statement  
    //  file prog.linked.opt.aa, line 774
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<64>) iNsTr_11 ) $on xx_x_crit_edge_xx_xloopexitx_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 775
    // ($cast ($uint<64>) iNsTr_11 )
    $intermediate $W[type_cast_2064_wire] : $int<64>
    // xx_xlcssa2
    $W[xx_xlcssa2_2061] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 778
    // 			$phi ret_val__ := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_xx_xloopexit			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on xx_xpreheader_xx_xloopexit			  ($cast ($uint<64>) xx_xlcssa2 ) $on xx_xloopexitx_xloopexit_xx_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 779
    // ($cast ($uint<64>) xx_xlcssa2 )
    $intermediate $W[type_cast_2077_wire] : $int<64>
    // ret_val__
    // datapath-instances for block %divideUnsigned%body
    //  file prog.linked.opt.aa, line 711
    // 		iNsTr_0 := (divisor == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.linked.opt.aa, line 713
    // (divisor == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_1915_inst] (divisor type_cast_1914_wire_constant) (iNsTr_0_1916) 
    $delay EQ_u32_u1_1915_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 714
    ==0? [if_stmt_1917_branch] (iNsTr_0_1916)
    // 		iNsTr_3 := ($cast ($uint<64>) divisor )
    //  file prog.linked.opt.aa, line 721
    // ($cast ($uint<64>) divisor )
    # := [type_cast_1926_inst] (divisor) (iNsTr_3_1927) 
    $delay type_cast_1926_inst 1
    // 		iNsTr_4 := (iNsTr_3 > dividend)
    //  file prog.linked.opt.aa, line 722
    // (iNsTr_3 > dividend)
    >[UGT_u64_u1_1931_inst] (iNsTr_3_1927 dividend) (iNsTr_4_1932) 
    $delay UGT_u64_u1_1931_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 723
    ==0? [if_stmt_1933_branch] (iNsTr_4_1932)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 731
    // 			$phi xx_x05 := 			  ($cast ($uint<64>) iNsTr_12 ) $on xx_x_crit_edge_bbx_xnph6			  ($cast ($uint<64>) dividend ) $on bbx_xnph6x_xpreheader_bbx_xnph6 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 732
    // ($cast ($uint<64>) iNsTr_12 )
    # := [type_cast_1945_inst] (iNsTr_12_2048) (type_cast_1945_wire) 
    $delay type_cast_1945_inst 1
    // ($cast ($uint<64>) dividend )
    # := [type_cast_1947_inst] (dividend) (type_cast_1947_wire) 
    $delay type_cast_1947_inst 1
    $phi [phi_stmt_1942] (type_cast_1945_wire type_cast_1947_wire) ( xx_x05_1942 )
    // 			$phi quotientx_x04 := 			  ($cast ($uint<64>) iNsTr_11 ) $on xx_x_crit_edge_bbx_xnph6			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xpreheader_bbx_xnph6 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 733
    // ($cast ($uint<64>) iNsTr_11 )
    # := [type_cast_1951_inst] (iNsTr_11_2043) (type_cast_1951_wire) 
    $delay type_cast_1951_inst 1
    $phi [phi_stmt_1948] (type_cast_1951_wire type_cast_1954_wire_constant) ( quotientx_x04_1948 )
    // 		iNsTr_7 := (xx_x05 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 735
    // (xx_x05 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    >>[LSHR_u64_u64_1960_inst] (xx_x05_1942 type_cast_1959_wire_constant) (iNsTr_7_1961) 
    $delay LSHR_u64_u64_1960_inst 1
    // 		iNsTr_8 := (iNsTr_3 < iNsTr_7)
    //  file prog.linked.opt.aa, line 736
    // (iNsTr_3 < iNsTr_7)
    <[ULT_u64_u1_1965_inst] (iNsTr_3_1927 iNsTr_7_1961) (iNsTr_8_1966) 
    $delay ULT_u64_u1_1965_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 737
    ==0? [if_stmt_1967_branch] (iNsTr_8_1966)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 745
    // 			$phi shifted_divisorx_x02 := 			  ($cast ($uint<64>) iNsTr_15 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<64>) iNsTr_3 ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 746
    // ($cast ($uint<64>) iNsTr_15 )
    # := [type_cast_1979_inst] (iNsTr_15_1995) (type_cast_1979_wire) 
    $delay type_cast_1979_inst 1
    // ($cast ($uint<64>) iNsTr_3 )
    # := [type_cast_1981_inst] (iNsTr_3_1927) (type_cast_1981_wire) 
    $delay type_cast_1981_inst 1
    $phi [phi_stmt_1976] (type_cast_1979_wire type_cast_1981_wire) ( shifted_divisorx_x02_1976 )
    // 			$phi curr_quotientx_x01 := 			  ($cast ($uint<64>) iNsTr_16 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 747
    // ($cast ($uint<64>) iNsTr_16 )
    # := [type_cast_1985_inst] (iNsTr_16_2001) (type_cast_1985_wire) 
    $delay type_cast_1985_inst 1
    $phi [phi_stmt_1982] (type_cast_1985_wire type_cast_1988_wire_constant) ( curr_quotientx_x01_1982 )
    // 		iNsTr_15 := (shifted_divisorx_x02 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 749
    // (shifted_divisorx_x02 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    <<[SHL_u64_u64_1994_inst] (shifted_divisorx_x02_1976 type_cast_1993_wire_constant) (iNsTr_15_1995) 
    $delay SHL_u64_u64_1994_inst 1
    // 		iNsTr_16 := (curr_quotientx_x01 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 750
    // (curr_quotientx_x01 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    <<[SHL_u64_u64_2000_inst] (curr_quotientx_x01_1982 type_cast_1999_wire_constant) (iNsTr_16_2001) 
    $delay SHL_u64_u64_2000_inst 1
    // 		iNsTr_17 := (iNsTr_15 < iNsTr_7)
    //  file prog.linked.opt.aa, line 751
    // (iNsTr_15 < iNsTr_7)
    <[ULT_u64_u1_2005_inst] (iNsTr_15_1995 iNsTr_7_1961) (iNsTr_17_2006) 
    $delay ULT_u64_u1_2005_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 752
    ==0? [if_stmt_2007_branch] (iNsTr_17_2006)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 757
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<64>) iNsTr_16 ) $on bbx_xnph_xx_x_crit_edgex_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 758
    // ($cast ($uint<64>) iNsTr_16 )
    # := [type_cast_2017_inst] (iNsTr_16_2001) (type_cast_2017_wire) 
    $delay type_cast_2017_inst 1
    $phi [phi_stmt_2014] (type_cast_2017_wire) ( xx_xlcssa1_2014 )
    // 			$phi xx_xlcssa := 			  ($cast ($uint<64>) iNsTr_15 ) $on bbx_xnph_xx_x_crit_edgex_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 759
    // ($cast ($uint<64>) iNsTr_15 )
    # := [type_cast_2021_inst] (iNsTr_15_1995) (type_cast_2021_wire) 
    $delay type_cast_2021_inst 1
    $phi [phi_stmt_2018] (type_cast_2021_wire) ( xx_xlcssa_2018 )
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 762
    // 			$phi shifted_divisorx_x0x_xlcssa := 			  ($cast ($uint<64>) iNsTr_3 ) $on bbx_xnph6_xx_x_crit_edge			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 763
    // ($cast ($uint<64>) iNsTr_3 )
    # := [type_cast_2028_inst] (iNsTr_3_1927) (type_cast_2028_wire) 
    $delay type_cast_2028_inst 1
    // ($cast ($uint<64>) xx_xlcssa )
    # := [type_cast_2030_inst] (xx_xlcssa_2018) (type_cast_2030_wire) 
    $delay type_cast_2030_inst 1
    $phi [phi_stmt_2025] (type_cast_2028_wire type_cast_2030_wire) ( shifted_divisorx_x0x_xlcssa_2025 )
    // 			$phi curr_quotientx_x0x_xlcssa := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6_xx_x_crit_edge			  ($cast ($uint<64>) xx_xlcssa1 ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 764
    // ($cast ($uint<64>) xx_xlcssa1 )
    # := [type_cast_2037_inst] (xx_xlcssa1_2014) (type_cast_2037_wire) 
    $delay type_cast_2037_inst 1
    $phi [phi_stmt_2031] (type_cast_2035_wire_constant type_cast_2037_wire) ( curr_quotientx_x0x_xlcssa_2031 )
    // 		iNsTr_11 := (curr_quotientx_x0x_xlcssa + quotientx_x04)
    //  file prog.linked.opt.aa, line 766
    // (curr_quotientx_x0x_xlcssa + quotientx_x04)
    +[ADD_u64_u64_2042_inst] (curr_quotientx_x0x_xlcssa_2031 quotientx_x04_1948) (iNsTr_11_2043) 
    $delay ADD_u64_u64_2042_inst 1
    // 		iNsTr_12 := (xx_x05 - shifted_divisorx_x0x_xlcssa)
    //  file prog.linked.opt.aa, line 767
    // (xx_x05 - shifted_divisorx_x0x_xlcssa)
    -[SUB_u64_u64_2047_inst] (xx_x05_1942 shifted_divisorx_x0x_xlcssa_2025) (iNsTr_12_2048) 
    $delay SUB_u64_u64_2047_inst 1
    // 		iNsTr_13 := (iNsTr_12 < iNsTr_3)
    //  file prog.linked.opt.aa, line 768
    // (iNsTr_12 < iNsTr_3)
    <[ULT_u64_u1_2052_inst] (iNsTr_12_2048 iNsTr_3_1927) (iNsTr_13_2053) 
    $delay ULT_u64_u1_2052_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 769
    ==0? [if_stmt_2054_branch] (iNsTr_13_2053)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 774
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<64>) iNsTr_11 ) $on xx_x_crit_edge_xx_xloopexitx_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 775
    // ($cast ($uint<64>) iNsTr_11 )
    # := [type_cast_2064_inst] (iNsTr_11_2043) (type_cast_2064_wire) 
    $delay type_cast_2064_inst 1
    $phi [phi_stmt_2061] (type_cast_2064_wire) ( xx_xlcssa2_2061 )
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 778
    // 			$phi ret_val__ := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_xx_xloopexit			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on xx_xpreheader_xx_xloopexit			  ($cast ($uint<64>) xx_xlcssa2 ) $on xx_xloopexitx_xloopexit_xx_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 779
    // ($cast ($uint<64>) xx_xlcssa2 )
    # := [type_cast_2077_inst] (xx_xlcssa2_2061) (type_cast_2077_wire) 
    $delay type_cast_2077_inst 1
    $phi [phi_stmt_2068] (type_cast_2072_wire_constant type_cast_2075_wire_constant type_cast_2077_wire) ( ret_val__ )
  }
  // end data-path
  // 		iNsTr_0 := (divisor == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.linked.opt.aa, line 713
  // (divisor == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_1915_inst <=> (branch_block_stmt_1910/assign_stmt_1916/EQ_u32_u1_1915_Sample/rr branch_block_stmt_1910/assign_stmt_1916/EQ_u32_u1_1915_Update/cr) (branch_block_stmt_1910/assign_stmt_1916/EQ_u32_u1_1915_Sample/ra branch_block_stmt_1910/assign_stmt_1916/EQ_u32_u1_1915_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 714
  if_stmt_1917_branch <=> (branch_block_stmt_1910/if_stmt_1917_eval_test/branch_req) (branch_block_stmt_1910/if_stmt_1917_else_link/else_choice_transition branch_block_stmt_1910/if_stmt_1917_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 719
  // 		iNsTr_3 := ($cast ($uint<64>) divisor )
  //  file prog.linked.opt.aa, line 721
  // ($cast ($uint<64>) divisor )
  type_cast_1926_inst <=> (branch_block_stmt_1910/assign_stmt_1927_to_assign_stmt_1932/type_cast_1926_Sample/rr branch_block_stmt_1910/assign_stmt_1927_to_assign_stmt_1932/type_cast_1926_Update/cr) (branch_block_stmt_1910/assign_stmt_1927_to_assign_stmt_1932/type_cast_1926_Sample/ra branch_block_stmt_1910/assign_stmt_1927_to_assign_stmt_1932/type_cast_1926_Update/ca)
  // 		iNsTr_4 := (iNsTr_3 > dividend)
  //  file prog.linked.opt.aa, line 722
  // (iNsTr_3 > dividend)
  UGT_u64_u1_1931_inst <=> (branch_block_stmt_1910/assign_stmt_1927_to_assign_stmt_1932/UGT_u64_u1_1931_Sample/rr branch_block_stmt_1910/assign_stmt_1927_to_assign_stmt_1932/UGT_u64_u1_1931_Update/cr) (branch_block_stmt_1910/assign_stmt_1927_to_assign_stmt_1932/UGT_u64_u1_1931_Sample/ra branch_block_stmt_1910/assign_stmt_1927_to_assign_stmt_1932/UGT_u64_u1_1931_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 723
  if_stmt_1933_branch <=> (branch_block_stmt_1910/if_stmt_1933_eval_test/branch_req) (branch_block_stmt_1910/if_stmt_1933_else_link/else_choice_transition branch_block_stmt_1910/if_stmt_1933_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 728
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 731
  // ($cast ($uint<64>) iNsTr_12 )
  type_cast_1945_inst <=> (branch_block_stmt_1910/xx_x_crit_edge_bbx_xnph6_PhiReq/phi_stmt_1942/phi_stmt_1942_sources/type_cast_1945/SplitProtocol/Sample/rr branch_block_stmt_1910/xx_x_crit_edge_bbx_xnph6_PhiReq/phi_stmt_1942/phi_stmt_1942_sources/type_cast_1945/SplitProtocol/Update/cr) (branch_block_stmt_1910/xx_x_crit_edge_bbx_xnph6_PhiReq/phi_stmt_1942/phi_stmt_1942_sources/type_cast_1945/SplitProtocol/Sample/ra branch_block_stmt_1910/xx_x_crit_edge_bbx_xnph6_PhiReq/phi_stmt_1942/phi_stmt_1942_sources/type_cast_1945/SplitProtocol/Update/ca)
  // ($cast ($uint<64>) dividend )
  type_cast_1947_inst <=> (branch_block_stmt_1910/bbx_xnph6x_xpreheader_bbx_xnph6_PhiReq/phi_stmt_1942/phi_stmt_1942_sources/type_cast_1947/SplitProtocol/Sample/rr branch_block_stmt_1910/bbx_xnph6x_xpreheader_bbx_xnph6_PhiReq/phi_stmt_1942/phi_stmt_1942_sources/type_cast_1947/SplitProtocol/Update/cr) (branch_block_stmt_1910/bbx_xnph6x_xpreheader_bbx_xnph6_PhiReq/phi_stmt_1942/phi_stmt_1942_sources/type_cast_1947/SplitProtocol/Sample/ra branch_block_stmt_1910/bbx_xnph6x_xpreheader_bbx_xnph6_PhiReq/phi_stmt_1942/phi_stmt_1942_sources/type_cast_1947/SplitProtocol/Update/ca)
  phi_stmt_1942 <=> (branch_block_stmt_1910/xx_x_crit_edge_bbx_xnph6_PhiReq/phi_stmt_1942/phi_stmt_1942_req branch_block_stmt_1910/bbx_xnph6x_xpreheader_bbx_xnph6_PhiReq/phi_stmt_1942/phi_stmt_1942_req) (branch_block_stmt_1910/merge_stmt_1941_PhiAck/phi_stmt_1942_ack)
  // ($cast ($uint<64>) iNsTr_11 )
  type_cast_1951_inst <=> (branch_block_stmt_1910/xx_x_crit_edge_bbx_xnph6_PhiReq/phi_stmt_1948/phi_stmt_1948_sources/type_cast_1951/SplitProtocol/Sample/rr branch_block_stmt_1910/xx_x_crit_edge_bbx_xnph6_PhiReq/phi_stmt_1948/phi_stmt_1948_sources/type_cast_1951/SplitProtocol/Update/cr) (branch_block_stmt_1910/xx_x_crit_edge_bbx_xnph6_PhiReq/phi_stmt_1948/phi_stmt_1948_sources/type_cast_1951/SplitProtocol/Sample/ra branch_block_stmt_1910/xx_x_crit_edge_bbx_xnph6_PhiReq/phi_stmt_1948/phi_stmt_1948_sources/type_cast_1951/SplitProtocol/Update/ca)
  phi_stmt_1948 <=> (branch_block_stmt_1910/xx_x_crit_edge_bbx_xnph6_PhiReq/phi_stmt_1948/phi_stmt_1948_req branch_block_stmt_1910/bbx_xnph6x_xpreheader_bbx_xnph6_PhiReq/phi_stmt_1948/phi_stmt_1948_req) (branch_block_stmt_1910/merge_stmt_1941_PhiAck/phi_stmt_1948_ack)
  // 		iNsTr_7 := (xx_x05 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 735
  // (xx_x05 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  LSHR_u64_u64_1960_inst <=> (branch_block_stmt_1910/assign_stmt_1961_to_assign_stmt_1966/LSHR_u64_u64_1960_Sample/rr branch_block_stmt_1910/assign_stmt_1961_to_assign_stmt_1966/LSHR_u64_u64_1960_Update/cr) (branch_block_stmt_1910/assign_stmt_1961_to_assign_stmt_1966/LSHR_u64_u64_1960_Sample/ra branch_block_stmt_1910/assign_stmt_1961_to_assign_stmt_1966/LSHR_u64_u64_1960_Update/ca)
  // 		iNsTr_8 := (iNsTr_3 < iNsTr_7)
  //  file prog.linked.opt.aa, line 736
  // (iNsTr_3 < iNsTr_7)
  ULT_u64_u1_1965_inst <=> (branch_block_stmt_1910/assign_stmt_1961_to_assign_stmt_1966/ULT_u64_u1_1965_Sample/rr branch_block_stmt_1910/assign_stmt_1961_to_assign_stmt_1966/ULT_u64_u1_1965_Update/cr) (branch_block_stmt_1910/assign_stmt_1961_to_assign_stmt_1966/ULT_u64_u1_1965_Sample/ra branch_block_stmt_1910/assign_stmt_1961_to_assign_stmt_1966/ULT_u64_u1_1965_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 737
  if_stmt_1967_branch <=> (branch_block_stmt_1910/if_stmt_1967_eval_test/branch_req) (branch_block_stmt_1910/if_stmt_1967_else_link/else_choice_transition branch_block_stmt_1910/if_stmt_1967_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 742
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 745
  // ($cast ($uint<64>) iNsTr_15 )
  type_cast_1979_inst <=> (branch_block_stmt_1910/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_1976/phi_stmt_1976_sources/type_cast_1979/SplitProtocol/Sample/rr branch_block_stmt_1910/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_1976/phi_stmt_1976_sources/type_cast_1979/SplitProtocol/Update/cr) (branch_block_stmt_1910/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_1976/phi_stmt_1976_sources/type_cast_1979/SplitProtocol/Sample/ra branch_block_stmt_1910/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_1976/phi_stmt_1976_sources/type_cast_1979/SplitProtocol/Update/ca)
  // ($cast ($uint<64>) iNsTr_3 )
  type_cast_1981_inst <=> (branch_block_stmt_1910/bbx_xnphx_xpreheader_bbx_xnph_PhiReq/phi_stmt_1976/phi_stmt_1976_sources/type_cast_1981/SplitProtocol/Sample/rr branch_block_stmt_1910/bbx_xnphx_xpreheader_bbx_xnph_PhiReq/phi_stmt_1976/phi_stmt_1976_sources/type_cast_1981/SplitProtocol/Update/cr) (branch_block_stmt_1910/bbx_xnphx_xpreheader_bbx_xnph_PhiReq/phi_stmt_1976/phi_stmt_1976_sources/type_cast_1981/SplitProtocol/Sample/ra branch_block_stmt_1910/bbx_xnphx_xpreheader_bbx_xnph_PhiReq/phi_stmt_1976/phi_stmt_1976_sources/type_cast_1981/SplitProtocol/Update/ca)
  phi_stmt_1976 <=> (branch_block_stmt_1910/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_1976/phi_stmt_1976_req branch_block_stmt_1910/bbx_xnphx_xpreheader_bbx_xnph_PhiReq/phi_stmt_1976/phi_stmt_1976_req) (branch_block_stmt_1910/merge_stmt_1975_PhiAck/phi_stmt_1976_ack)
  // ($cast ($uint<64>) iNsTr_16 )
  type_cast_1985_inst <=> (branch_block_stmt_1910/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_1982/phi_stmt_1982_sources/type_cast_1985/SplitProtocol/Sample/rr branch_block_stmt_1910/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_1982/phi_stmt_1982_sources/type_cast_1985/SplitProtocol/Update/cr) (branch_block_stmt_1910/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_1982/phi_stmt_1982_sources/type_cast_1985/SplitProtocol/Sample/ra branch_block_stmt_1910/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_1982/phi_stmt_1982_sources/type_cast_1985/SplitProtocol/Update/ca)
  phi_stmt_1982 <=> (branch_block_stmt_1910/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_1982/phi_stmt_1982_req branch_block_stmt_1910/bbx_xnphx_xpreheader_bbx_xnph_PhiReq/phi_stmt_1982/phi_stmt_1982_req) (branch_block_stmt_1910/merge_stmt_1975_PhiAck/phi_stmt_1982_ack)
  // 		iNsTr_15 := (shifted_divisorx_x02 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 749
  // (shifted_divisorx_x02 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  SHL_u64_u64_1994_inst <=> (branch_block_stmt_1910/assign_stmt_1995_to_assign_stmt_2006/SHL_u64_u64_1994_Sample/rr branch_block_stmt_1910/assign_stmt_1995_to_assign_stmt_2006/SHL_u64_u64_1994_Update/cr) (branch_block_stmt_1910/assign_stmt_1995_to_assign_stmt_2006/SHL_u64_u64_1994_Sample/ra branch_block_stmt_1910/assign_stmt_1995_to_assign_stmt_2006/SHL_u64_u64_1994_Update/ca)
  // 		iNsTr_16 := (curr_quotientx_x01 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 750
  // (curr_quotientx_x01 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  SHL_u64_u64_2000_inst <=> (branch_block_stmt_1910/assign_stmt_1995_to_assign_stmt_2006/SHL_u64_u64_2000_Sample/rr branch_block_stmt_1910/assign_stmt_1995_to_assign_stmt_2006/SHL_u64_u64_2000_Update/cr) (branch_block_stmt_1910/assign_stmt_1995_to_assign_stmt_2006/SHL_u64_u64_2000_Sample/ra branch_block_stmt_1910/assign_stmt_1995_to_assign_stmt_2006/SHL_u64_u64_2000_Update/ca)
  // 		iNsTr_17 := (iNsTr_15 < iNsTr_7)
  //  file prog.linked.opt.aa, line 751
  // (iNsTr_15 < iNsTr_7)
  ULT_u64_u1_2005_inst <=> (branch_block_stmt_1910/assign_stmt_1995_to_assign_stmt_2006/ULT_u64_u1_2005_Sample/rr branch_block_stmt_1910/assign_stmt_1995_to_assign_stmt_2006/ULT_u64_u1_2005_Update/cr) (branch_block_stmt_1910/assign_stmt_1995_to_assign_stmt_2006/ULT_u64_u1_2005_Sample/ra branch_block_stmt_1910/assign_stmt_1995_to_assign_stmt_2006/ULT_u64_u1_2005_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 752
  if_stmt_2007_branch <=> (branch_block_stmt_1910/if_stmt_2007_eval_test/branch_req) (branch_block_stmt_1910/if_stmt_2007_else_link/else_choice_transition branch_block_stmt_1910/if_stmt_2007_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 757
  // ($cast ($uint<64>) iNsTr_16 )
  type_cast_2017_inst <=> (branch_block_stmt_1910/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_2014/phi_stmt_2014_sources/type_cast_2017/SplitProtocol/Sample/rr branch_block_stmt_1910/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_2014/phi_stmt_2014_sources/type_cast_2017/SplitProtocol/Update/cr) (branch_block_stmt_1910/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_2014/phi_stmt_2014_sources/type_cast_2017/SplitProtocol/Sample/ra branch_block_stmt_1910/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_2014/phi_stmt_2014_sources/type_cast_2017/SplitProtocol/Update/ca)
  phi_stmt_2014 <=> (branch_block_stmt_1910/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_2014/phi_stmt_2014_req) (branch_block_stmt_1910/merge_stmt_2013_PhiAck/phi_stmt_2014_ack)
  // ($cast ($uint<64>) iNsTr_15 )
  type_cast_2021_inst <=> (branch_block_stmt_1910/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_2018/phi_stmt_2018_sources/type_cast_2021/SplitProtocol/Sample/rr branch_block_stmt_1910/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_2018/phi_stmt_2018_sources/type_cast_2021/SplitProtocol/Update/cr) (branch_block_stmt_1910/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_2018/phi_stmt_2018_sources/type_cast_2021/SplitProtocol/Sample/ra branch_block_stmt_1910/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_2018/phi_stmt_2018_sources/type_cast_2021/SplitProtocol/Update/ca)
  phi_stmt_2018 <=> (branch_block_stmt_1910/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_2018/phi_stmt_2018_req) (branch_block_stmt_1910/merge_stmt_2013_PhiAck/phi_stmt_2018_ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 762
  // ($cast ($uint<64>) iNsTr_3 )
  type_cast_2028_inst <=> (branch_block_stmt_1910/bbx_xnph6_xx_x_crit_edge_PhiReq/phi_stmt_2025/phi_stmt_2025_sources/type_cast_2028/SplitProtocol/Sample/rr branch_block_stmt_1910/bbx_xnph6_xx_x_crit_edge_PhiReq/phi_stmt_2025/phi_stmt_2025_sources/type_cast_2028/SplitProtocol/Update/cr) (branch_block_stmt_1910/bbx_xnph6_xx_x_crit_edge_PhiReq/phi_stmt_2025/phi_stmt_2025_sources/type_cast_2028/SplitProtocol/Sample/ra branch_block_stmt_1910/bbx_xnph6_xx_x_crit_edge_PhiReq/phi_stmt_2025/phi_stmt_2025_sources/type_cast_2028/SplitProtocol/Update/ca)
  // ($cast ($uint<64>) xx_xlcssa )
  type_cast_2030_inst <=> (branch_block_stmt_1910/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_2025/phi_stmt_2025_sources/type_cast_2030/SplitProtocol/Sample/rr branch_block_stmt_1910/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_2025/phi_stmt_2025_sources/type_cast_2030/SplitProtocol/Update/cr) (branch_block_stmt_1910/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_2025/phi_stmt_2025_sources/type_cast_2030/SplitProtocol/Sample/ra branch_block_stmt_1910/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_2025/phi_stmt_2025_sources/type_cast_2030/SplitProtocol/Update/ca)
  phi_stmt_2025 <=> (branch_block_stmt_1910/bbx_xnph6_xx_x_crit_edge_PhiReq/phi_stmt_2025/phi_stmt_2025_req branch_block_stmt_1910/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_2025/phi_stmt_2025_req) (branch_block_stmt_1910/merge_stmt_2024_PhiAck/phi_stmt_2025_ack)
  // ($cast ($uint<64>) xx_xlcssa1 )
  type_cast_2037_inst <=> (branch_block_stmt_1910/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_2031/phi_stmt_2031_sources/type_cast_2037/SplitProtocol/Sample/rr branch_block_stmt_1910/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_2031/phi_stmt_2031_sources/type_cast_2037/SplitProtocol/Update/cr) (branch_block_stmt_1910/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_2031/phi_stmt_2031_sources/type_cast_2037/SplitProtocol/Sample/ra branch_block_stmt_1910/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_2031/phi_stmt_2031_sources/type_cast_2037/SplitProtocol/Update/ca)
  phi_stmt_2031 <=> (branch_block_stmt_1910/bbx_xnph6_xx_x_crit_edge_PhiReq/phi_stmt_2031/phi_stmt_2031_req branch_block_stmt_1910/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_2031/phi_stmt_2031_req) (branch_block_stmt_1910/merge_stmt_2024_PhiAck/phi_stmt_2031_ack)
  // 		iNsTr_11 := (curr_quotientx_x0x_xlcssa + quotientx_x04)
  //  file prog.linked.opt.aa, line 766
  // (curr_quotientx_x0x_xlcssa + quotientx_x04)
  ADD_u64_u64_2042_inst <=> (branch_block_stmt_1910/assign_stmt_2043_to_assign_stmt_2053/ADD_u64_u64_2042_Sample/rr branch_block_stmt_1910/assign_stmt_2043_to_assign_stmt_2053/ADD_u64_u64_2042_Update/cr) (branch_block_stmt_1910/assign_stmt_2043_to_assign_stmt_2053/ADD_u64_u64_2042_Sample/ra branch_block_stmt_1910/assign_stmt_2043_to_assign_stmt_2053/ADD_u64_u64_2042_Update/ca)
  // 		iNsTr_12 := (xx_x05 - shifted_divisorx_x0x_xlcssa)
  //  file prog.linked.opt.aa, line 767
  // (xx_x05 - shifted_divisorx_x0x_xlcssa)
  SUB_u64_u64_2047_inst <=> (branch_block_stmt_1910/assign_stmt_2043_to_assign_stmt_2053/SUB_u64_u64_2047_Sample/rr branch_block_stmt_1910/assign_stmt_2043_to_assign_stmt_2053/SUB_u64_u64_2047_Update/cr) (branch_block_stmt_1910/assign_stmt_2043_to_assign_stmt_2053/SUB_u64_u64_2047_Sample/ra branch_block_stmt_1910/assign_stmt_2043_to_assign_stmt_2053/SUB_u64_u64_2047_Update/ca)
  // 		iNsTr_13 := (iNsTr_12 < iNsTr_3)
  //  file prog.linked.opt.aa, line 768
  // (iNsTr_12 < iNsTr_3)
  ULT_u64_u1_2052_inst <=> (branch_block_stmt_1910/assign_stmt_2043_to_assign_stmt_2053/ULT_u64_u1_2052_Sample/rr branch_block_stmt_1910/assign_stmt_2043_to_assign_stmt_2053/ULT_u64_u1_2052_Update/cr) (branch_block_stmt_1910/assign_stmt_2043_to_assign_stmt_2053/ULT_u64_u1_2052_Sample/ra branch_block_stmt_1910/assign_stmt_2043_to_assign_stmt_2053/ULT_u64_u1_2052_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 769
  if_stmt_2054_branch <=> (branch_block_stmt_1910/if_stmt_2054_eval_test/branch_req) (branch_block_stmt_1910/if_stmt_2054_else_link/else_choice_transition branch_block_stmt_1910/if_stmt_2054_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 774
  // ($cast ($uint<64>) iNsTr_11 )
  type_cast_2064_inst <=> (branch_block_stmt_1910/xx_x_crit_edge_xx_xloopexitx_xloopexit_PhiReq/phi_stmt_2061/phi_stmt_2061_sources/type_cast_2064/SplitProtocol/Sample/rr branch_block_stmt_1910/xx_x_crit_edge_xx_xloopexitx_xloopexit_PhiReq/phi_stmt_2061/phi_stmt_2061_sources/type_cast_2064/SplitProtocol/Update/cr) (branch_block_stmt_1910/xx_x_crit_edge_xx_xloopexitx_xloopexit_PhiReq/phi_stmt_2061/phi_stmt_2061_sources/type_cast_2064/SplitProtocol/Sample/ra branch_block_stmt_1910/xx_x_crit_edge_xx_xloopexitx_xloopexit_PhiReq/phi_stmt_2061/phi_stmt_2061_sources/type_cast_2064/SplitProtocol/Update/ca)
  phi_stmt_2061 <=> (branch_block_stmt_1910/xx_x_crit_edge_xx_xloopexitx_xloopexit_PhiReq/phi_stmt_2061/phi_stmt_2061_req) (branch_block_stmt_1910/merge_stmt_2060_PhiAck/phi_stmt_2061_ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 778
  // ($cast ($uint<64>) xx_xlcssa2 )
  type_cast_2077_inst <=> (branch_block_stmt_1910/xx_xloopexitx_xloopexit_xx_xloopexit_PhiReq/phi_stmt_2068/phi_stmt_2068_sources/type_cast_2077/SplitProtocol/Sample/rr branch_block_stmt_1910/xx_xloopexitx_xloopexit_xx_xloopexit_PhiReq/phi_stmt_2068/phi_stmt_2068_sources/type_cast_2077/SplitProtocol/Update/cr) (branch_block_stmt_1910/xx_xloopexitx_xloopexit_xx_xloopexit_PhiReq/phi_stmt_2068/phi_stmt_2068_sources/type_cast_2077/SplitProtocol/Sample/ra branch_block_stmt_1910/xx_xloopexitx_xloopexit_xx_xloopexit_PhiReq/phi_stmt_2068/phi_stmt_2068_sources/type_cast_2077/SplitProtocol/Update/ca)
  phi_stmt_2068 <=> (branch_block_stmt_1910/bb_0_xx_xloopexit_PhiReq/phi_stmt_2068/phi_stmt_2068_req branch_block_stmt_1910/xx_xpreheader_xx_xloopexit_PhiReq/phi_stmt_2068/phi_stmt_2068_req branch_block_stmt_1910/xx_xloopexitx_xloopexit_xx_xloopexit_PhiReq/phi_stmt_2068/phi_stmt_2068_req) (branch_block_stmt_1910/merge_stmt_2067_PhiAck/phi_stmt_2068_ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 782
}
$module [filterx_xoptx_xo_storage_initializer_] 
{
  // pipe-declarations for block %filterx_xoptx_xo_storage_initializer_
  //  file prog.linked.opt.aa, line 786
  $CP 
  {
    // begin control-path 
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %filterx_xoptx_xo_storage_initializer_
    //  file prog.linked.opt.aa, line 786
  }
  // end data-path
}
$module [ptrFuncx_xoptx_xo_storage_initializer_] 
{
  // pipe-declarations for block %ptrFuncx_xoptx_xo_storage_initializer_
  //  file prog.linked.opt.aa, line 794
  $CP 
  {
    // begin control-path 
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %ptrFuncx_xoptx_xo_storage_initializer_
    //  file prog.linked.opt.aa, line 794
  }
  // end data-path
}
$module [threshold_initializer_in_qrsDetx_xoptx_xo] 
{
  // pipe-declarations for block %threshold_initializer_in_qrsDetx_xoptx_xo
  //  file prog.linked.opt.aa, line 802
  $CP 
  {
    // begin control-path 
    // 	threshold := _f3.125000e-01
    //  file prog.linked.opt.aa, line 807
    ;;[assign_stmt_2092] //  file prog.linked.opt.aa, line 807
    {
      ;;[STORE_threshold_2090] 
      {
        // store 
        ;;[STORE_threshold_2090_write] 
        {
          $T [split_req] $T [split_ack]
          ||[word_access] 
          {
            ;;[word_access_0_sample] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_access_0_update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
      }
    }
    // end assignment statement assign_stmt_2092
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %threshold_initializer_in_qrsDetx_xoptx_xo
    //  file prog.linked.opt.aa, line 802
    // _f3.125000e-01
    $constant $W[expr_2091_wire_constant] : $float<11,52> := _b0011111111010100000000000000000000000000000000000000000000000000// 3.125000e-01
    // threshold
    $constant $W[STORE_threshold_2090_word_address_0] : $pointer<memory_space_24> := _b0
    // 	threshold := _f3.125000e-01
    //  file prog.linked.opt.aa, line 807
    // threshold
    $constant $W[STORE_threshold_2090_word_address_0] : $pointer<memory_space_24> := _b0
    $W[STORE_threshold_2090_data_0] : $int<64>
    // 	threshold := _f3.125000e-01
    //  file prog.linked.opt.aa, line 807
    // threshold
    $store [STORE_threshold_2090_store_0] $to memory_space_24 (STORE_threshold_2090_word_address_0 STORE_threshold_2090_data_0) 
    $delay STORE_threshold_2090_store_0 1
    &/ [STORE_threshold_2090_gather_scatter] (expr_2091_wire_constant) (STORE_threshold_2090_data_0) 
  }
  // end data-path
  // 	threshold := _f3.125000e-01
  //  file prog.linked.opt.aa, line 807
  // threshold
  STORE_threshold_2090_gather_scatter <=> (assign_stmt_2092/STORE_threshold_2090/STORE_threshold_2090_write/split_req) (assign_stmt_2092/STORE_threshold_2090/STORE_threshold_2090_write/split_ack)
  STORE_threshold_2090_store_0 <=> (assign_stmt_2092/STORE_threshold_2090/STORE_threshold_2090_write/word_access/word_access_0_sample/rr assign_stmt_2092/STORE_threshold_2090/STORE_threshold_2090_write/word_access/word_access_0_update/cr) (assign_stmt_2092/STORE_threshold_2090/STORE_threshold_2090_write/word_access/word_access_0_sample/ra assign_stmt_2092/STORE_threshold_2090/STORE_threshold_2090_write/word_access/word_access_0_update/ca)
}
$module [qrsDetx_xoptx_xo_storage_initializer_] 
{
  // pipe-declarations for block %qrsDetx_xoptx_xo_storage_initializer_
  //  file prog.linked.opt.aa, line 810
  // pipe-declarations for block %qrsDetx_xoptx_xo_storage_initializer_%pb
  //  file prog.linked.opt.aa, line 815
  $CP 
  {
    // begin control-path 
    ||[parallel_block_stmt_2095] 
    {
      ::[call_stmt_2096] 
      {
        // 		$call threshold_initializer_in_qrsDetx_xoptx_xo () () 
        //  file prog.linked.opt.aa, line 817
        $T[call_stmt_2096_sample_start_] 
        $T[call_stmt_2096_sample_completed_] 
        $T[call_stmt_2096_update_start_] 
        $T[call_stmt_2096_update_completed_] 
        ;;[call_stmt_2096_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_2096_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_2096_sample_start_ &-> (call_stmt_2096_Sample)
        call_stmt_2096_sample_completed_ <-& (call_stmt_2096_Sample)
        call_stmt_2096_sample_completed_ &-> ($null)
        call_stmt_2096_update_start_ &-> (call_stmt_2096_Update)
        call_stmt_2096_update_completed_ <-& (call_stmt_2096_Update)
        // barrier: 		$call threshold_initializer_in_qrsDetx_xoptx_xo () () 
        // load-store dependencies..
      }
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %qrsDetx_xoptx_xo_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 815
    // constant-object-declarations for block %qrsDetx_xoptx_xo_storage_initializer_
    //  file prog.linked.opt.aa, line 810
    // constant-declarations for block %qrsDetx_xoptx_xo_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 815
    // 		$call threshold_initializer_in_qrsDetx_xoptx_xo () () 
    //  file prog.linked.opt.aa, line 817
    // block %qrsDetx_xoptx_xo_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 815
    // 		$call threshold_initializer_in_qrsDetx_xoptx_xo () () 
    //  file prog.linked.opt.aa, line 817
    // datapath-instances for block %qrsDetx_xoptx_xo_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 815
    // 		$call threshold_initializer_in_qrsDetx_xoptx_xo () () 
    //  file prog.linked.opt.aa, line 817
    $call [call_stmt_2096_call] $module threshold_initializer_in_qrsDetx_xoptx_xo() () 
    $delay call_stmt_2096_call 2
  }
  // end data-path
  // 		$call threshold_initializer_in_qrsDetx_xoptx_xo () () 
  //  file prog.linked.opt.aa, line 817
  call_stmt_2096_call <=> (parallel_block_stmt_2095/call_stmt_2096/call_stmt_2096_Sample/crr parallel_block_stmt_2095/call_stmt_2096/call_stmt_2096_Update/ccr) (parallel_block_stmt_2095/call_stmt_2096/call_stmt_2096_Sample/cra parallel_block_stmt_2095/call_stmt_2096/call_stmt_2096_Update/cca)
}
$module [global_storage_initializer_] 
{
  // pipe-declarations for block %global_storage_initializer_
  //  file prog.linked.opt.aa, line 821
  // pipe-declarations for block %global_storage_initializer_%pb
  //  file prog.linked.opt.aa, line 826
  $CP 
  {
    // begin control-path 
    ||[parallel_block_stmt_2100] 
    {
      ::[call_stmt_2101] 
      {
        // 		$call filterx_xoptx_xo_storage_initializer_ () () 
        //  file prog.linked.opt.aa, line 828
        $T[call_stmt_2101_sample_start_] 
        $T[call_stmt_2101_sample_completed_] 
        $T[call_stmt_2101_update_start_] 
        $T[call_stmt_2101_update_completed_] 
        ;;[call_stmt_2101_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_2101_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_2101_sample_start_ &-> (call_stmt_2101_Sample)
        call_stmt_2101_sample_completed_ <-& (call_stmt_2101_Sample)
        call_stmt_2101_sample_completed_ &-> ($null)
        call_stmt_2101_update_start_ &-> (call_stmt_2101_Update)
        call_stmt_2101_update_completed_ <-& (call_stmt_2101_Update)
        // load-store dependencies..
      }
      ::[call_stmt_2102] 
      {
        // 		$call ptrFuncx_xoptx_xo_storage_initializer_ () () 
        //  file prog.linked.opt.aa, line 829
        $T[call_stmt_2102_sample_start_] 
        $T[call_stmt_2102_sample_completed_] 
        $T[call_stmt_2102_update_start_] 
        $T[call_stmt_2102_update_completed_] 
        ;;[call_stmt_2102_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_2102_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_2102_sample_start_ &-> (call_stmt_2102_Sample)
        call_stmt_2102_sample_completed_ <-& (call_stmt_2102_Sample)
        call_stmt_2102_sample_completed_ &-> ($null)
        call_stmt_2102_update_start_ &-> (call_stmt_2102_Update)
        call_stmt_2102_update_completed_ <-& (call_stmt_2102_Update)
        // load-store dependencies..
      }
      ::[call_stmt_2103] 
      {
        // 		$call qrsDetx_xoptx_xo_storage_initializer_ () () 
        //  file prog.linked.opt.aa, line 830
        $T[call_stmt_2103_sample_start_] 
        $T[call_stmt_2103_sample_completed_] 
        $T[call_stmt_2103_update_start_] 
        $T[call_stmt_2103_update_completed_] 
        ;;[call_stmt_2103_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_2103_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_2103_sample_start_ &-> (call_stmt_2103_Sample)
        call_stmt_2103_sample_completed_ <-& (call_stmt_2103_Sample)
        call_stmt_2103_sample_completed_ &-> ($null)
        call_stmt_2103_update_start_ &-> (call_stmt_2103_Update)
        call_stmt_2103_update_completed_ <-& (call_stmt_2103_Update)
        // load-store dependencies..
      }
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %global_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 826
    // constant-object-declarations for block %global_storage_initializer_
    //  file prog.linked.opt.aa, line 821
    // constant-declarations for block %global_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 826
    // 		$call filterx_xoptx_xo_storage_initializer_ () () 
    //  file prog.linked.opt.aa, line 828
    // 		$call ptrFuncx_xoptx_xo_storage_initializer_ () () 
    //  file prog.linked.opt.aa, line 829
    // 		$call qrsDetx_xoptx_xo_storage_initializer_ () () 
    //  file prog.linked.opt.aa, line 830
    // block %global_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 826
    // 		$call filterx_xoptx_xo_storage_initializer_ () () 
    //  file prog.linked.opt.aa, line 828
    // 		$call ptrFuncx_xoptx_xo_storage_initializer_ () () 
    //  file prog.linked.opt.aa, line 829
    // 		$call qrsDetx_xoptx_xo_storage_initializer_ () () 
    //  file prog.linked.opt.aa, line 830
    // datapath-instances for block %global_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 826
    // 		$call filterx_xoptx_xo_storage_initializer_ () () 
    //  file prog.linked.opt.aa, line 828
    $call [call_stmt_2101_call] $module filterx_xoptx_xo_storage_initializer_() () 
    $delay call_stmt_2101_call 2
    // 		$call ptrFuncx_xoptx_xo_storage_initializer_ () () 
    //  file prog.linked.opt.aa, line 829
    $call [call_stmt_2102_call] $module ptrFuncx_xoptx_xo_storage_initializer_() () 
    $delay call_stmt_2102_call 2
    // 		$call qrsDetx_xoptx_xo_storage_initializer_ () () 
    //  file prog.linked.opt.aa, line 830
    $call [call_stmt_2103_call] $module qrsDetx_xoptx_xo_storage_initializer_() () 
    $delay call_stmt_2103_call 2
  }
  // end data-path
  // 		$call filterx_xoptx_xo_storage_initializer_ () () 
  //  file prog.linked.opt.aa, line 828
  call_stmt_2101_call <=> (parallel_block_stmt_2100/call_stmt_2101/call_stmt_2101_Sample/crr parallel_block_stmt_2100/call_stmt_2101/call_stmt_2101_Update/ccr) (parallel_block_stmt_2100/call_stmt_2101/call_stmt_2101_Sample/cra parallel_block_stmt_2100/call_stmt_2101/call_stmt_2101_Update/cca)
  // 		$call ptrFuncx_xoptx_xo_storage_initializer_ () () 
  //  file prog.linked.opt.aa, line 829
  call_stmt_2102_call <=> (parallel_block_stmt_2100/call_stmt_2102/call_stmt_2102_Sample/crr parallel_block_stmt_2100/call_stmt_2102/call_stmt_2102_Update/ccr) (parallel_block_stmt_2100/call_stmt_2102/call_stmt_2102_Sample/cra parallel_block_stmt_2100/call_stmt_2102/call_stmt_2102_Update/cca)
  // 		$call qrsDetx_xoptx_xo_storage_initializer_ () () 
  //  file prog.linked.opt.aa, line 830
  call_stmt_2103_call <=> (parallel_block_stmt_2100/call_stmt_2103/call_stmt_2103_Sample/crr parallel_block_stmt_2100/call_stmt_2103/call_stmt_2103_Update/ccr) (parallel_block_stmt_2100/call_stmt_2103/call_stmt_2103_Sample/cra parallel_block_stmt_2100/call_stmt_2103/call_stmt_2103_Update/cca)
}
$module [initDet] 
{
  // pipe-declarations for block %initDet
  //  file prog.linked.opt.aa, line 833
  // pipe-declarations for block %initDet%body
  //  file prog.linked.opt.aa, line 838
  // pipe-declarations for block %initDet%body%
  //  file prog.linked.opt.aa, line 841
  // pipe-declarations for block %initDet%body%
  //  file prog.linked.opt.aa, line 856
  // pipe-declarations for block %initDet%body%
  //  file prog.linked.opt.aa, line 859
  // pipe-declarations for block %initDet%body%
  //  file prog.linked.opt.aa, line 872
  // pipe-declarations for block %initDet%body%
  //  file prog.linked.opt.aa, line 884
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_2107] // Branch Block  file prog.linked.opt.aa, line 838
    {
      $P [branch_block_stmt_2107__entry__]
      branch_block_stmt_2107__entry__ <-| ($entry)
      $P [branch_block_stmt_2107__exit__]
      branch_block_stmt_2107__exit__ |-> ($exit)
      $P [bbx_xnph3_bb_1]
      $P [merge_stmt_2109__exit__] 
      $P [do_while_stmt_2116__entry__] 
      $P [do_while_stmt_2116__exit__] 
      $P [bb_1_bbx_xnphx_xpreheader]
      $P [merge_stmt_2160__exit__] 
      $P [bbx_xnphx_xpreheader_bbx_xnph]
      $P [merge_stmt_2162__exit__] 
      $P [do_while_stmt_2169__entry__] 
      $P [do_while_stmt_2169__exit__] 
      $P [bbx_xnph_xx_x_crit_edge]
      $P [merge_stmt_2203__exit__] 
      $P [assign_stmt_2207_to_assign_stmt_2239__entry__] 
      $P [assign_stmt_2207_to_assign_stmt_2239__exit__] 
      $P [return__]
      $P [merge_stmt_2241__exit__] 
      // do-while-statement  
      //  file prog.linked.opt.aa, line 844
      <o> [do_while_stmt_2116]  $depth 7 $buffering 2 
      {
        $P[do_while_stmt_2116__entry__] 
        $P[do_while_stmt_2116__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_2116_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          // (pipelined) PHI statement phi_stmt_2118
          // 			$phi indexx_x02 := 			  ($cast ($uint<32>) iNsTr_4 ) $on $loopback			  indexx_x02_at_entry $on $entry // type of target is $uint<32>
          $T[phi_stmt_2118_loopback_trigger] 
          $T[phi_stmt_2118_loopback_sample_req_from_phi_seq] 
          $T[phi_stmt_2118_loopback_sample_req] 
          phi_stmt_2118_loopback_trigger <-& (back_edge_to_loop_body)
          phi_stmt_2118_loopback_sample_req <-& (phi_stmt_2118_loopback_sample_req_from_phi_seq)
          $T[phi_stmt_2118_entry_trigger] 
          $T[phi_stmt_2118_entry_sample_req_from_phi_seq] 
          $T[phi_stmt_2118_entry_sample_req] 
          phi_stmt_2118_entry_trigger <-& (first_time_through_loop_body)
          phi_stmt_2118_entry_sample_req <-& (phi_stmt_2118_entry_sample_req_from_phi_seq)
          $T[phi_stmt_2118_sample_start_] 
          $T[phi_stmt_2118_sample_completed_] 
          $T[phi_stmt_2118_update_start_] 
          $T[phi_stmt_2118_update_completed_] 
          phi_stmt_2118_update_start_ o<-& (phi_stmt_2118_update_completed_ 0)
          phi_stmt_2118_sample_start_ o<-& (phi_stmt_2118_sample_completed_ 1)
          $T[phi_stmt_2118_merged_reqs] 
          $transitionmerge [phi_stmt_2118_req_merge] (phi_stmt_2118_entry_sample_req phi_stmt_2118_loopback_sample_req) (phi_stmt_2118_merged_reqs)
          phi_stmt_2118_merged_reqs &-> ($null)
          // ($cast ($uint<32>) iNsTr_4 )
          $T[type_cast_2121_sample_start_] 
          $T[type_cast_2121_sample_completed_] 
          $T[type_cast_2121_update_start_] 
          $T[type_cast_2121_update_completed_] 
          // iNsTr_4
          $T[R_iNsTr_4_2120_sample_start_] 
          $T[R_iNsTr_4_2120_sample_completed_] 
          $T[R_iNsTr_4_2120_update_start_] 
          $T[R_iNsTr_4_2120_update_completed_] 
          // implicit reference
          R_iNsTr_4_2120_sample_start_ <-& ($entry)
          R_iNsTr_4_2120_sample_completed_ <-& (R_iNsTr_4_2120_sample_start_)
          R_iNsTr_4_2120_update_start_ <-& (R_iNsTr_4_2120_sample_completed_)
          R_iNsTr_4_2120_update_completed_ <-& (R_iNsTr_4_2120_update_start_)
          type_cast_2121_sample_start_ <-& (R_iNsTr_4_2120_update_completed_)
          ;;[type_cast_2121_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2121_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2121_sample_start_ &-> (type_cast_2121_Sample)
          type_cast_2121_sample_completed_ <-& (type_cast_2121_Sample)
          type_cast_2121_sample_completed_ &-> ($null)
          type_cast_2121_update_start_ &-> (type_cast_2121_Update)
          type_cast_2121_update_completed_ <-& (type_cast_2121_Update)
          // RAW reenables for iNsTr_4
          R_iNsTr_4_2120_update_start_ o<-& (type_cast_2121_sample_completed_ 1)
          // self-release: 
          type_cast_2121_sample_start_ o<-& (type_cast_2121_sample_completed_ 1)
          type_cast_2121_update_start_ o<-& (type_cast_2121_update_completed_ 0)
          phi_stmt_2118_sample_start_ <-& (type_cast_2121_update_completed_)
          // RAW reenables for ($cast ($uint<32>) iNsTr_4 )
          type_cast_2121_update_start_ o<-& (phi_stmt_2118_sample_completed_ 0)
          // indexx_x02_at_entry
          $T[R_indexx_x02_at_entry_2122_sample_start_] 
          $T[R_indexx_x02_at_entry_2122_sample_completed_] 
          $T[R_indexx_x02_at_entry_2122_update_start_] 
          $T[R_indexx_x02_at_entry_2122_update_completed_] 
          // implicit reference
          R_indexx_x02_at_entry_2122_sample_start_ <-& ($entry)
          R_indexx_x02_at_entry_2122_sample_completed_ <-& (R_indexx_x02_at_entry_2122_sample_start_)
          R_indexx_x02_at_entry_2122_update_start_ <-& (R_indexx_x02_at_entry_2122_sample_completed_)
          R_indexx_x02_at_entry_2122_update_completed_ <-& (R_indexx_x02_at_entry_2122_update_start_)
          phi_stmt_2118_sample_start_ <-& (R_indexx_x02_at_entry_2122_update_completed_)
          // RAW reenables for indexx_x02_at_entry
          R_indexx_x02_at_entry_2122_update_start_ o<-& (phi_stmt_2118_sample_completed_ 1)
          $T[phi_stmt_2118_phi_sequencer_done] 
          phi_stmt_2118_phi_sequencer_done &-> ($null)
          $phisequencer [ phi_stmt_2118_phi_seq] ( phi_stmt_2118_loopback_trigger phi_stmt_2118_entry_trigger  : phi_stmt_2118_sample_start_ : phi_stmt_2118_sample_completed_ ) ( phi_stmt_2118_loopback_sample_req_from_phi_seq phi_stmt_2118_entry_sample_req_from_phi_seq  : phi_stmt_2118_phi_sequencer_done ) 
          condition_evaluated <-& (phi_stmt_2118_sample_completed_)
          // 			scevgep6 := @(RRbuff[indexx_x02])
          //  file prog.linked.opt.aa, line 848
          // Source expression
          // @(RRbuff[indexx_x02])
          $T[addr_of_2127_sample_start_] 
          $T[addr_of_2127_sample_completed_] 
          $T[addr_of_2127_update_start_] 
          $T[addr_of_2127_update_completed_] 
          $T[array_obj_ref_2126_root_address_calculated] 
          $T[array_obj_ref_2126_offset_calculated] 
          $T[array_obj_ref_2126_index_resized_0] 
          $T[array_obj_ref_2126_index_scaled_0] 
          // indexx_x02
          $T[R_indexx_x02_2125_sample_start_] 
          $T[R_indexx_x02_2125_sample_completed_] 
          $T[R_indexx_x02_2125_update_start_] 
          $T[R_indexx_x02_2125_update_completed_] 
          // implicit reference
          R_indexx_x02_2125_sample_start_ <-& (phi_stmt_2118_update_completed_)
          R_indexx_x02_2125_sample_completed_ <-& (R_indexx_x02_2125_sample_start_)
          R_indexx_x02_2125_update_start_ <-& (R_indexx_x02_2125_sample_completed_)
          R_indexx_x02_2125_update_completed_ <-& (R_indexx_x02_2125_update_start_)
          ;;[array_obj_ref_2126_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          R_indexx_x02_2125_update_completed_ &-> (array_obj_ref_2126_index_resize_0)
          array_obj_ref_2126_index_resized_0 <-& (array_obj_ref_2126_index_resize_0)
          ;;[array_obj_ref_2126_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_2126_index_resized_0 &-> (array_obj_ref_2126_index_scale_0)
          array_obj_ref_2126_index_scaled_0 <-& (array_obj_ref_2126_index_scale_0)
          ;;[array_obj_ref_2126_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_2126_index_scaled_0 &-> (array_obj_ref_2126_final_index_sum_regn)
          array_obj_ref_2126_offset_calculated <-& (array_obj_ref_2126_final_index_sum_regn)
          $T[array_obj_ref_2126_base_plus_offset_sample_start] 
          $T[array_obj_ref_2126_base_plus_offset_sample_complete] 
          $T[array_obj_ref_2126_base_plus_offset_update_start] 
          $T[array_obj_ref_2126_base_plus_offset_update_complete] 
          ;;[array_obj_ref_2126_base_plus_offset_sample] 
          {
            $T [rr] $T [ra]
          }
          ;;[array_obj_ref_2126_base_plus_offset_update] 
          {
            $T [cr] $T [ca]
          }
          array_obj_ref_2126_base_plus_offset_sample_start &-> (array_obj_ref_2126_base_plus_offset_sample)
          array_obj_ref_2126_base_plus_offset_update_start &-> (array_obj_ref_2126_base_plus_offset_update)
          array_obj_ref_2126_base_plus_offset_sample_complete <-& (array_obj_ref_2126_base_plus_offset_sample)
          array_obj_ref_2126_base_plus_offset_update_complete <-& (array_obj_ref_2126_base_plus_offset_update)
          array_obj_ref_2126_offset_calculated &-> (array_obj_ref_2126_base_plus_offset_sample_start)
          array_obj_ref_2126_root_address_calculated <-& (array_obj_ref_2126_base_plus_offset_update_complete)
          array_obj_ref_2126_base_plus_offset_sample_complete o<-& (array_obj_ref_2126_base_plus_offset_sample_start 1)
          array_obj_ref_2126_base_plus_offset_update_complete o<-& (array_obj_ref_2126_base_plus_offset_update_start 0)
          phi_stmt_2118_update_start_ o<-& (array_obj_ref_2126_base_plus_offset_sample_complete 0)
          ;;[addr_of_2127_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_2127_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_2127_sample_start_ <-& (array_obj_ref_2126_root_address_calculated)
          addr_of_2127_sample_start_ &-> (addr_of_2127_request)
          addr_of_2127_sample_completed_ <-& (addr_of_2127_request)
          addr_of_2127_update_start_ &-> (addr_of_2127_complete)
          addr_of_2127_update_completed_ <-& (addr_of_2127_complete)
          // reenables .
          array_obj_ref_2126_base_plus_offset_update_start o<-& (addr_of_2127_sample_completed_ 0)
          // self-release 
          addr_of_2127_sample_start_ o<-& (addr_of_2127_sample_completed_ 1)
          addr_of_2127_update_start_ o<-& (addr_of_2127_update_completed_ 0)
          // Target expression
          // (as target) scevgep6
          // scevgep6
          // implicit reference
          // 			scevgep5 := @(NOISEbuff[indexx_x02])
          //  file prog.linked.opt.aa, line 849
          // Source expression
          // @(NOISEbuff[indexx_x02])
          $T[addr_of_2132_sample_start_] 
          $T[addr_of_2132_sample_completed_] 
          $T[addr_of_2132_update_start_] 
          $T[addr_of_2132_update_completed_] 
          $T[array_obj_ref_2131_root_address_calculated] 
          $T[array_obj_ref_2131_offset_calculated] 
          $T[array_obj_ref_2131_index_resized_0] 
          $T[array_obj_ref_2131_index_scaled_0] 
          // indexx_x02
          $T[R_indexx_x02_2130_sample_start_] 
          $T[R_indexx_x02_2130_sample_completed_] 
          $T[R_indexx_x02_2130_update_start_] 
          $T[R_indexx_x02_2130_update_completed_] 
          // implicit reference
          R_indexx_x02_2130_sample_start_ <-& (phi_stmt_2118_update_completed_)
          R_indexx_x02_2130_sample_completed_ <-& (R_indexx_x02_2130_sample_start_)
          R_indexx_x02_2130_update_start_ <-& (R_indexx_x02_2130_sample_completed_)
          R_indexx_x02_2130_update_completed_ <-& (R_indexx_x02_2130_update_start_)
          ;;[array_obj_ref_2131_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          R_indexx_x02_2130_update_completed_ &-> (array_obj_ref_2131_index_resize_0)
          array_obj_ref_2131_index_resized_0 <-& (array_obj_ref_2131_index_resize_0)
          ;;[array_obj_ref_2131_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_2131_index_resized_0 &-> (array_obj_ref_2131_index_scale_0)
          array_obj_ref_2131_index_scaled_0 <-& (array_obj_ref_2131_index_scale_0)
          ;;[array_obj_ref_2131_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_2131_index_scaled_0 &-> (array_obj_ref_2131_final_index_sum_regn)
          array_obj_ref_2131_offset_calculated <-& (array_obj_ref_2131_final_index_sum_regn)
          ;;[array_obj_ref_2131_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_2131_offset_calculated &-> (array_obj_ref_2131_base_plus_offset)
          array_obj_ref_2131_root_address_calculated <-& (array_obj_ref_2131_base_plus_offset)
          ;;[addr_of_2132_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_2132_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_2132_sample_start_ <-& (array_obj_ref_2131_root_address_calculated)
          addr_of_2132_sample_start_ &-> (addr_of_2132_request)
          addr_of_2132_sample_completed_ <-& (addr_of_2132_request)
          addr_of_2132_update_start_ &-> (addr_of_2132_complete)
          addr_of_2132_update_completed_ <-& (addr_of_2132_complete)
          // reenables .
          phi_stmt_2118_update_start_ o<-& (addr_of_2132_sample_completed_ 0)
          // self-release 
          addr_of_2132_sample_start_ o<-& (addr_of_2132_sample_completed_ 1)
          addr_of_2132_update_start_ o<-& (addr_of_2132_update_completed_ 0)
          // Target expression
          // (as target) scevgep5
          // scevgep5
          // implicit reference
          // 			->(scevgep5) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
          //  file prog.linked.opt.aa, line 850
          // Target expression
          // ->(scevgep5)
          $T[ptr_deref_2135_sample_start_] 
          $T[ptr_deref_2135_sample_completed_] 
          $T[ptr_deref_2135_update_start_] 
          $T[ptr_deref_2135_update_completed_] 
          $T[ptr_deref_2135_base_address_calculated] 
          // scevgep5
          $T[R_scevgep5_2134_sample_start_] 
          $T[R_scevgep5_2134_sample_completed_] 
          $T[R_scevgep5_2134_update_start_] 
          $T[R_scevgep5_2134_update_completed_] 
          // implicit reference
          R_scevgep5_2134_sample_start_ <-& (addr_of_2132_update_completed_)
          R_scevgep5_2134_sample_completed_ <-& (R_scevgep5_2134_sample_start_)
          R_scevgep5_2134_update_start_ <-& (R_scevgep5_2134_sample_completed_)
          R_scevgep5_2134_update_completed_ <-& (R_scevgep5_2134_update_start_)
          $T[ptr_deref_2135_word_address_calculated] 
          $T[ptr_deref_2135_root_address_calculated] 
          $T[ptr_deref_2135_base_address_resized] 
          ;;[ptr_deref_2135_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_2135_base_address_calculated &-> (ptr_deref_2135_base_addr_resize)
          ptr_deref_2135_base_address_resized <-& (ptr_deref_2135_base_addr_resize)
          ;;[ptr_deref_2135_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_2135_base_address_resized &-> (ptr_deref_2135_base_plus_offset)
          ptr_deref_2135_root_address_calculated <-& (ptr_deref_2135_base_plus_offset)
          ;;[ptr_deref_2135_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_2135_root_address_calculated &-> (ptr_deref_2135_word_addrgen)
          ptr_deref_2135_word_address_calculated <-& (ptr_deref_2135_word_addrgen)
          ;;[ptr_deref_2135_Sample] 
          {
            ;;[ptr_deref_2135_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_2135_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          ptr_deref_2135_sample_start_ <-& (ptr_deref_2135_word_address_calculated)
          // reenable-joins
          addr_of_2132_update_start_ o<-& (ptr_deref_2135_sample_completed_ 0)
          ptr_deref_2135_sample_start_ &-> (ptr_deref_2135_Sample)
          ptr_deref_2135_sample_completed_ <-& (ptr_deref_2135_Sample)
          ptr_deref_2135_sample_completed_ &-> ($null)
          ptr_deref_2135_update_start_ &-> (ptr_deref_2135_Update)
          ptr_deref_2135_update_completed_ <-& (ptr_deref_2135_Update)
          ptr_deref_2135_base_address_calculated <-& (R_scevgep5_2134_update_completed_)
          ptr_deref_2135_sample_start_ <-& (ptr_deref_2135_base_address_calculated)
          // RAW reenables for scevgep5
          addr_of_2132_update_start_ o<-& (ptr_deref_2135_sample_completed_ 0)
          // self-release: 
          ptr_deref_2135_sample_start_ o<-& (ptr_deref_2135_sample_completed_ 1)
          ptr_deref_2135_update_start_ o<-& (ptr_deref_2135_update_completed_ 0)
          // 			->(scevgep6) := ($bitcast ($uint<32>) _b00000000000000000000000011001000  )
          //  file prog.linked.opt.aa, line 851
          // Target expression
          // ->(scevgep6)
          $T[ptr_deref_2140_sample_start_] 
          $T[ptr_deref_2140_sample_completed_] 
          $T[ptr_deref_2140_update_start_] 
          $T[ptr_deref_2140_update_completed_] 
          $T[ptr_deref_2140_base_address_calculated] 
          // scevgep6
          $T[R_scevgep6_2139_sample_start_] 
          $T[R_scevgep6_2139_sample_completed_] 
          $T[R_scevgep6_2139_update_start_] 
          $T[R_scevgep6_2139_update_completed_] 
          // implicit reference
          R_scevgep6_2139_sample_start_ <-& (addr_of_2127_update_completed_)
          R_scevgep6_2139_sample_completed_ <-& (R_scevgep6_2139_sample_start_)
          R_scevgep6_2139_update_start_ <-& (R_scevgep6_2139_sample_completed_)
          R_scevgep6_2139_update_completed_ <-& (R_scevgep6_2139_update_start_)
          $T[ptr_deref_2140_word_address_calculated] 
          $T[ptr_deref_2140_root_address_calculated] 
          $T[ptr_deref_2140_base_address_resized] 
          ;;[ptr_deref_2140_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_2140_base_address_calculated &-> (ptr_deref_2140_base_addr_resize)
          ptr_deref_2140_base_address_resized <-& (ptr_deref_2140_base_addr_resize)
          ;;[ptr_deref_2140_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_2140_base_address_resized &-> (ptr_deref_2140_base_plus_offset)
          ptr_deref_2140_root_address_calculated <-& (ptr_deref_2140_base_plus_offset)
          ;;[ptr_deref_2140_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_2140_root_address_calculated &-> (ptr_deref_2140_word_addrgen)
          ptr_deref_2140_word_address_calculated <-& (ptr_deref_2140_word_addrgen)
          ;;[ptr_deref_2140_Sample] 
          {
            ;;[ptr_deref_2140_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_2140_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          ptr_deref_2140_sample_start_ <-& (ptr_deref_2140_word_address_calculated)
          // reenable-joins
          addr_of_2127_update_start_ o<-& (ptr_deref_2140_sample_completed_ 0)
          ptr_deref_2140_sample_start_ &-> (ptr_deref_2140_Sample)
          ptr_deref_2140_sample_completed_ <-& (ptr_deref_2140_Sample)
          ptr_deref_2140_sample_completed_ &-> ($null)
          ptr_deref_2140_update_start_ &-> (ptr_deref_2140_Update)
          ptr_deref_2140_update_completed_ <-& (ptr_deref_2140_Update)
          ptr_deref_2140_base_address_calculated <-& (R_scevgep6_2139_update_completed_)
          ptr_deref_2140_sample_start_ <-& (ptr_deref_2140_base_address_calculated)
          // RAW reenables for scevgep6
          addr_of_2127_update_start_ o<-& (ptr_deref_2140_sample_completed_ 0)
          // self-release: 
          ptr_deref_2140_sample_start_ o<-& (ptr_deref_2140_sample_completed_ 1)
          ptr_deref_2140_update_start_ o<-& (ptr_deref_2140_update_completed_ 0)
          // 			iNsTr_4 := (indexx_x02 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          //  file prog.linked.opt.aa, line 852
          // Source expression
          // (indexx_x02 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          $T[ADD_u32_u32_2148_sample_start_] 
          $T[ADD_u32_u32_2148_sample_completed_] 
          $T[ADD_u32_u32_2148_update_start_] 
          $T[ADD_u32_u32_2148_update_completed_] 
          // indexx_x02
          $T[R_indexx_x02_2145_sample_start_] 
          $T[R_indexx_x02_2145_sample_completed_] 
          $T[R_indexx_x02_2145_update_start_] 
          $T[R_indexx_x02_2145_update_completed_] 
          // implicit reference
          R_indexx_x02_2145_sample_start_ <-& (phi_stmt_2118_update_completed_)
          R_indexx_x02_2145_sample_completed_ <-& (R_indexx_x02_2145_sample_start_)
          R_indexx_x02_2145_update_start_ <-& (R_indexx_x02_2145_sample_completed_)
          R_indexx_x02_2145_update_completed_ <-& (R_indexx_x02_2145_update_start_)
          ADD_u32_u32_2148_sample_start_ <-& (R_indexx_x02_2145_update_completed_)
          ;;[ADD_u32_u32_2148_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u32_u32_2148_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u32_u32_2148_sample_start_ &-> (ADD_u32_u32_2148_Sample)
          ADD_u32_u32_2148_sample_completed_ <-& (ADD_u32_u32_2148_Sample)
          ADD_u32_u32_2148_sample_completed_ &-> ($null)
          ADD_u32_u32_2148_update_start_ &-> (ADD_u32_u32_2148_Update)
          ADD_u32_u32_2148_update_completed_ <-& (ADD_u32_u32_2148_Update)
          // RAW reenables for indexx_x02
          phi_stmt_2118_update_start_ o<-& (ADD_u32_u32_2148_sample_completed_ 0)
          // self-release: 
          ADD_u32_u32_2148_sample_start_ o<-& (ADD_u32_u32_2148_sample_completed_ 1)
          ADD_u32_u32_2148_update_start_ o<-& (ADD_u32_u32_2148_update_completed_ 0)
          // Target expression
          // (as target) iNsTr_4
          // iNsTr_4
          // implicit reference
          // WAR dependency: Read: iNsTr_4 before Write: 			iNsTr_4 := (indexx_x02 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          ADD_u32_u32_2148_sample_start_ <-& (phi_stmt_2118_sample_completed_)
          // WAR dependency: release  Read: iNsTr_4 with Write: 			iNsTr_4 := (indexx_x02 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          R_iNsTr_4_2120_sample_start_ o<-& (ADD_u32_u32_2148_update_completed_ 1)
          // 			exitcond := (iNsTr_4 == ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
          //  file prog.linked.opt.aa, line 853
          // Source expression
          // (iNsTr_4 == ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
          $T[EQ_u32_u1_2154_sample_start_] 
          $T[EQ_u32_u1_2154_sample_completed_] 
          $T[EQ_u32_u1_2154_update_start_] 
          $T[EQ_u32_u1_2154_update_completed_] 
          // iNsTr_4
          $T[R_iNsTr_4_2151_sample_start_] 
          $T[R_iNsTr_4_2151_sample_completed_] 
          $T[R_iNsTr_4_2151_update_start_] 
          $T[R_iNsTr_4_2151_update_completed_] 
          // implicit reference
          R_iNsTr_4_2151_sample_start_ <-& (ADD_u32_u32_2148_update_completed_)
          R_iNsTr_4_2151_sample_completed_ <-& (R_iNsTr_4_2151_sample_start_)
          R_iNsTr_4_2151_update_start_ <-& (R_iNsTr_4_2151_sample_completed_)
          R_iNsTr_4_2151_update_completed_ <-& (R_iNsTr_4_2151_update_start_)
          EQ_u32_u1_2154_sample_start_ <-& (R_iNsTr_4_2151_update_completed_)
          ;;[EQ_u32_u1_2154_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[EQ_u32_u1_2154_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          EQ_u32_u1_2154_sample_start_ &-> (EQ_u32_u1_2154_Sample)
          EQ_u32_u1_2154_sample_completed_ <-& (EQ_u32_u1_2154_Sample)
          EQ_u32_u1_2154_sample_completed_ &-> ($null)
          EQ_u32_u1_2154_update_start_ &-> (EQ_u32_u1_2154_Update)
          EQ_u32_u1_2154_update_completed_ <-& (EQ_u32_u1_2154_Update)
          // RAW reenables for iNsTr_4
          ADD_u32_u32_2148_update_start_ o<-& (EQ_u32_u1_2154_sample_completed_ 0)
          // self-release: 
          EQ_u32_u1_2154_sample_start_ o<-& (EQ_u32_u1_2154_sample_completed_ 1)
          EQ_u32_u1_2154_update_start_ o<-& (EQ_u32_u1_2154_update_completed_ 0)
          // Target expression
          // (as target) exitcond
          // exitcond
          // implicit reference
          // ( ~ exitcond )
          $T[NOT_u1_u1_2158_sample_start_] 
          $T[NOT_u1_u1_2158_sample_completed_] 
          $T[NOT_u1_u1_2158_update_start_] 
          $T[NOT_u1_u1_2158_update_completed_] 
          // exitcond
          $T[R_exitcond_2157_sample_start_] 
          $T[R_exitcond_2157_sample_completed_] 
          $T[R_exitcond_2157_update_start_] 
          $T[R_exitcond_2157_update_completed_] 
          // implicit reference
          R_exitcond_2157_sample_start_ <-& (EQ_u32_u1_2154_update_completed_)
          R_exitcond_2157_sample_completed_ <-& (R_exitcond_2157_sample_start_)
          R_exitcond_2157_update_start_ <-& (R_exitcond_2157_sample_completed_)
          R_exitcond_2157_update_completed_ <-& (R_exitcond_2157_update_start_)
          NOT_u1_u1_2158_sample_start_ <-& (R_exitcond_2157_update_completed_)
          ;;[NOT_u1_u1_2158_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[NOT_u1_u1_2158_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          NOT_u1_u1_2158_sample_start_ &-> (NOT_u1_u1_2158_Sample)
          NOT_u1_u1_2158_sample_completed_ <-& (NOT_u1_u1_2158_Sample)
          NOT_u1_u1_2158_sample_completed_ &-> ($null)
          NOT_u1_u1_2158_update_start_ &-> (NOT_u1_u1_2158_Update)
          NOT_u1_u1_2158_update_completed_ <-& (NOT_u1_u1_2158_Update)
          // flow-through
          NOT_u1_u1_2158_update_start_ <-& (NOT_u1_u1_2158_sample_completed_)
          NOT_u1_u1_2158_update_completed_ &-> (condition_evaluated)
          condition_evaluated &-> ($null)
          // load-store dependencies..
          $T [ptr_deref_2135_ptr_deref_2140_delay] $delay
          // ->(scevgep5)(store) -> ->(scevgep6)(store)
          ptr_deref_2140_sample_start_ <-& (ptr_deref_2135_ptr_deref_2140_delay)
          ptr_deref_2135_ptr_deref_2140_delay <-& (ptr_deref_2135_sample_completed_)
          // reenable across ring for memory space memory_space_13
          $T[ring_reenable_memory_space_13] 
          ring_reenable_memory_space_13 <-& (ptr_deref_2140_sample_completed_)
          ptr_deref_2135_sample_start_ o<-& (ring_reenable_memory_space_13 1)
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_2116__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_2116_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_2116__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_2116_loop_body : condition_evaluated
        $bind do_while_stmt_2116__entry__  => do_while_stmt_2116_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_2116_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_2116__exit__)
      }
      do_while_stmt_2116__entry__ |-> (do_while_stmt_2116)
      do_while_stmt_2116__exit__ <-| (do_while_stmt_2116)
      // do-while-statement  
      //  file prog.linked.opt.aa, line 862
      <o> [do_while_stmt_2169]  $depth 7 $buffering 2 
      {
        $P[do_while_stmt_2169__entry__] 
        $P[do_while_stmt_2169__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_2169_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          // (pipelined) PHI statement phi_stmt_2171
          // 			$phi indexx_x11 := 			  ($cast ($uint<32>) iNsTr_9 ) $on $loopback			  indexx_x11_at_entry $on $entry // type of target is $uint<32>
          $T[phi_stmt_2171_loopback_trigger] 
          $T[phi_stmt_2171_loopback_sample_req_from_phi_seq] 
          $T[phi_stmt_2171_loopback_sample_req] 
          phi_stmt_2171_loopback_trigger <-& (back_edge_to_loop_body)
          phi_stmt_2171_loopback_sample_req <-& (phi_stmt_2171_loopback_sample_req_from_phi_seq)
          $T[phi_stmt_2171_entry_trigger] 
          $T[phi_stmt_2171_entry_sample_req_from_phi_seq] 
          $T[phi_stmt_2171_entry_sample_req] 
          phi_stmt_2171_entry_trigger <-& (first_time_through_loop_body)
          phi_stmt_2171_entry_sample_req <-& (phi_stmt_2171_entry_sample_req_from_phi_seq)
          $T[phi_stmt_2171_sample_start_] 
          $T[phi_stmt_2171_sample_completed_] 
          $T[phi_stmt_2171_update_start_] 
          $T[phi_stmt_2171_update_completed_] 
          phi_stmt_2171_update_start_ o<-& (phi_stmt_2171_update_completed_ 0)
          phi_stmt_2171_sample_start_ o<-& (phi_stmt_2171_sample_completed_ 1)
          $T[phi_stmt_2171_merged_reqs] 
          $transitionmerge [phi_stmt_2171_req_merge] (phi_stmt_2171_entry_sample_req phi_stmt_2171_loopback_sample_req) (phi_stmt_2171_merged_reqs)
          phi_stmt_2171_merged_reqs &-> ($null)
          // ($cast ($uint<32>) iNsTr_9 )
          $T[type_cast_2174_sample_start_] 
          $T[type_cast_2174_sample_completed_] 
          $T[type_cast_2174_update_start_] 
          $T[type_cast_2174_update_completed_] 
          // iNsTr_9
          $T[R_iNsTr_9_2173_sample_start_] 
          $T[R_iNsTr_9_2173_sample_completed_] 
          $T[R_iNsTr_9_2173_update_start_] 
          $T[R_iNsTr_9_2173_update_completed_] 
          // implicit reference
          R_iNsTr_9_2173_sample_start_ <-& ($entry)
          R_iNsTr_9_2173_sample_completed_ <-& (R_iNsTr_9_2173_sample_start_)
          R_iNsTr_9_2173_update_start_ <-& (R_iNsTr_9_2173_sample_completed_)
          R_iNsTr_9_2173_update_completed_ <-& (R_iNsTr_9_2173_update_start_)
          type_cast_2174_sample_start_ <-& (R_iNsTr_9_2173_update_completed_)
          ;;[type_cast_2174_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2174_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2174_sample_start_ &-> (type_cast_2174_Sample)
          type_cast_2174_sample_completed_ <-& (type_cast_2174_Sample)
          type_cast_2174_sample_completed_ &-> ($null)
          type_cast_2174_update_start_ &-> (type_cast_2174_Update)
          type_cast_2174_update_completed_ <-& (type_cast_2174_Update)
          // RAW reenables for iNsTr_9
          R_iNsTr_9_2173_update_start_ o<-& (type_cast_2174_sample_completed_ 1)
          // self-release: 
          type_cast_2174_sample_start_ o<-& (type_cast_2174_sample_completed_ 1)
          type_cast_2174_update_start_ o<-& (type_cast_2174_update_completed_ 0)
          phi_stmt_2171_sample_start_ <-& (type_cast_2174_update_completed_)
          // RAW reenables for ($cast ($uint<32>) iNsTr_9 )
          type_cast_2174_update_start_ o<-& (phi_stmt_2171_sample_completed_ 0)
          // indexx_x11_at_entry
          $T[R_indexx_x11_at_entry_2175_sample_start_] 
          $T[R_indexx_x11_at_entry_2175_sample_completed_] 
          $T[R_indexx_x11_at_entry_2175_update_start_] 
          $T[R_indexx_x11_at_entry_2175_update_completed_] 
          // implicit reference
          R_indexx_x11_at_entry_2175_sample_start_ <-& ($entry)
          R_indexx_x11_at_entry_2175_sample_completed_ <-& (R_indexx_x11_at_entry_2175_sample_start_)
          R_indexx_x11_at_entry_2175_update_start_ <-& (R_indexx_x11_at_entry_2175_sample_completed_)
          R_indexx_x11_at_entry_2175_update_completed_ <-& (R_indexx_x11_at_entry_2175_update_start_)
          phi_stmt_2171_sample_start_ <-& (R_indexx_x11_at_entry_2175_update_completed_)
          // RAW reenables for indexx_x11_at_entry
          R_indexx_x11_at_entry_2175_update_start_ o<-& (phi_stmt_2171_sample_completed_ 1)
          $T[phi_stmt_2171_phi_sequencer_done] 
          phi_stmt_2171_phi_sequencer_done &-> ($null)
          $phisequencer [ phi_stmt_2171_phi_seq] ( phi_stmt_2171_loopback_trigger phi_stmt_2171_entry_trigger  : phi_stmt_2171_sample_start_ : phi_stmt_2171_sample_completed_ ) ( phi_stmt_2171_loopback_sample_req_from_phi_seq phi_stmt_2171_entry_sample_req_from_phi_seq  : phi_stmt_2171_phi_sequencer_done ) 
          condition_evaluated <-& (phi_stmt_2171_sample_completed_)
          // 			scevgep := @(DDCALCbuff[indexx_x11])
          //  file prog.linked.opt.aa, line 866
          // Source expression
          // @(DDCALCbuff[indexx_x11])
          $T[addr_of_2180_sample_start_] 
          $T[addr_of_2180_sample_completed_] 
          $T[addr_of_2180_update_start_] 
          $T[addr_of_2180_update_completed_] 
          $T[array_obj_ref_2179_root_address_calculated] 
          $T[array_obj_ref_2179_offset_calculated] 
          $T[array_obj_ref_2179_index_resized_0] 
          $T[array_obj_ref_2179_index_scaled_0] 
          // indexx_x11
          $T[R_indexx_x11_2178_sample_start_] 
          $T[R_indexx_x11_2178_sample_completed_] 
          $T[R_indexx_x11_2178_update_start_] 
          $T[R_indexx_x11_2178_update_completed_] 
          // implicit reference
          R_indexx_x11_2178_sample_start_ <-& (phi_stmt_2171_update_completed_)
          R_indexx_x11_2178_sample_completed_ <-& (R_indexx_x11_2178_sample_start_)
          R_indexx_x11_2178_update_start_ <-& (R_indexx_x11_2178_sample_completed_)
          R_indexx_x11_2178_update_completed_ <-& (R_indexx_x11_2178_update_start_)
          ;;[array_obj_ref_2179_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          R_indexx_x11_2178_update_completed_ &-> (array_obj_ref_2179_index_resize_0)
          array_obj_ref_2179_index_resized_0 <-& (array_obj_ref_2179_index_resize_0)
          ;;[array_obj_ref_2179_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_2179_index_resized_0 &-> (array_obj_ref_2179_index_scale_0)
          array_obj_ref_2179_index_scaled_0 <-& (array_obj_ref_2179_index_scale_0)
          ;;[array_obj_ref_2179_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_2179_index_scaled_0 &-> (array_obj_ref_2179_final_index_sum_regn)
          array_obj_ref_2179_offset_calculated <-& (array_obj_ref_2179_final_index_sum_regn)
          ;;[array_obj_ref_2179_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_2179_offset_calculated &-> (array_obj_ref_2179_base_plus_offset)
          array_obj_ref_2179_root_address_calculated <-& (array_obj_ref_2179_base_plus_offset)
          ;;[addr_of_2180_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_2180_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_2180_sample_start_ <-& (array_obj_ref_2179_root_address_calculated)
          addr_of_2180_sample_start_ &-> (addr_of_2180_request)
          addr_of_2180_sample_completed_ <-& (addr_of_2180_request)
          addr_of_2180_update_start_ &-> (addr_of_2180_complete)
          addr_of_2180_update_completed_ <-& (addr_of_2180_complete)
          // reenables .
          phi_stmt_2171_update_start_ o<-& (addr_of_2180_sample_completed_ 0)
          // self-release 
          addr_of_2180_sample_start_ o<-& (addr_of_2180_sample_completed_ 1)
          addr_of_2180_update_start_ o<-& (addr_of_2180_update_completed_ 0)
          // Target expression
          // (as target) scevgep
          // scevgep
          // implicit reference
          // 			->(scevgep) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
          //  file prog.linked.opt.aa, line 867
          // Target expression
          // ->(scevgep)
          $T[ptr_deref_2183_sample_start_] 
          $T[ptr_deref_2183_sample_completed_] 
          $T[ptr_deref_2183_update_start_] 
          $T[ptr_deref_2183_update_completed_] 
          $T[ptr_deref_2183_base_address_calculated] 
          // scevgep
          $T[R_scevgep_2182_sample_start_] 
          $T[R_scevgep_2182_sample_completed_] 
          $T[R_scevgep_2182_update_start_] 
          $T[R_scevgep_2182_update_completed_] 
          // implicit reference
          R_scevgep_2182_sample_start_ <-& (addr_of_2180_update_completed_)
          R_scevgep_2182_sample_completed_ <-& (R_scevgep_2182_sample_start_)
          R_scevgep_2182_update_start_ <-& (R_scevgep_2182_sample_completed_)
          R_scevgep_2182_update_completed_ <-& (R_scevgep_2182_update_start_)
          $T[ptr_deref_2183_word_address_calculated] 
          $T[ptr_deref_2183_root_address_calculated] 
          $T[ptr_deref_2183_base_address_resized] 
          ;;[ptr_deref_2183_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_2183_base_address_calculated &-> (ptr_deref_2183_base_addr_resize)
          ptr_deref_2183_base_address_resized <-& (ptr_deref_2183_base_addr_resize)
          ;;[ptr_deref_2183_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_2183_base_address_resized &-> (ptr_deref_2183_base_plus_offset)
          ptr_deref_2183_root_address_calculated <-& (ptr_deref_2183_base_plus_offset)
          ;;[ptr_deref_2183_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_2183_root_address_calculated &-> (ptr_deref_2183_word_addrgen)
          ptr_deref_2183_word_address_calculated <-& (ptr_deref_2183_word_addrgen)
          ;;[ptr_deref_2183_Sample] 
          {
            ;;[ptr_deref_2183_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_2183_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          ptr_deref_2183_sample_start_ <-& (ptr_deref_2183_word_address_calculated)
          // reenable-joins
          addr_of_2180_update_start_ o<-& (ptr_deref_2183_sample_completed_ 0)
          ptr_deref_2183_sample_start_ &-> (ptr_deref_2183_Sample)
          ptr_deref_2183_sample_completed_ <-& (ptr_deref_2183_Sample)
          ptr_deref_2183_sample_completed_ &-> ($null)
          ptr_deref_2183_update_start_ &-> (ptr_deref_2183_Update)
          ptr_deref_2183_update_completed_ <-& (ptr_deref_2183_Update)
          ptr_deref_2183_base_address_calculated <-& (R_scevgep_2182_update_completed_)
          ptr_deref_2183_sample_start_ <-& (ptr_deref_2183_base_address_calculated)
          // RAW reenables for scevgep
          addr_of_2180_update_start_ o<-& (ptr_deref_2183_sample_completed_ 0)
          // self-release: 
          ptr_deref_2183_sample_start_ o<-& (ptr_deref_2183_sample_completed_ 1)
          ptr_deref_2183_update_start_ o<-& (ptr_deref_2183_update_completed_ 0)
          // 			iNsTr_9 := (indexx_x11 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          //  file prog.linked.opt.aa, line 868
          // Source expression
          // (indexx_x11 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          $T[ADD_u32_u32_2191_sample_start_] 
          $T[ADD_u32_u32_2191_sample_completed_] 
          $T[ADD_u32_u32_2191_update_start_] 
          $T[ADD_u32_u32_2191_update_completed_] 
          // indexx_x11
          $T[R_indexx_x11_2188_sample_start_] 
          $T[R_indexx_x11_2188_sample_completed_] 
          $T[R_indexx_x11_2188_update_start_] 
          $T[R_indexx_x11_2188_update_completed_] 
          // implicit reference
          R_indexx_x11_2188_sample_start_ <-& (phi_stmt_2171_update_completed_)
          R_indexx_x11_2188_sample_completed_ <-& (R_indexx_x11_2188_sample_start_)
          R_indexx_x11_2188_update_start_ <-& (R_indexx_x11_2188_sample_completed_)
          R_indexx_x11_2188_update_completed_ <-& (R_indexx_x11_2188_update_start_)
          ADD_u32_u32_2191_sample_start_ <-& (R_indexx_x11_2188_update_completed_)
          ;;[ADD_u32_u32_2191_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u32_u32_2191_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u32_u32_2191_sample_start_ &-> (ADD_u32_u32_2191_Sample)
          ADD_u32_u32_2191_sample_completed_ <-& (ADD_u32_u32_2191_Sample)
          ADD_u32_u32_2191_sample_completed_ &-> ($null)
          ADD_u32_u32_2191_update_start_ &-> (ADD_u32_u32_2191_Update)
          ADD_u32_u32_2191_update_completed_ <-& (ADD_u32_u32_2191_Update)
          // RAW reenables for indexx_x11
          phi_stmt_2171_update_start_ o<-& (ADD_u32_u32_2191_sample_completed_ 0)
          // self-release: 
          ADD_u32_u32_2191_sample_start_ o<-& (ADD_u32_u32_2191_sample_completed_ 1)
          ADD_u32_u32_2191_update_start_ o<-& (ADD_u32_u32_2191_update_completed_ 0)
          // Target expression
          // (as target) iNsTr_9
          // iNsTr_9
          // implicit reference
          // WAR dependency: Read: iNsTr_9 before Write: 			iNsTr_9 := (indexx_x11 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          ADD_u32_u32_2191_sample_start_ <-& (phi_stmt_2171_sample_completed_)
          // WAR dependency: release  Read: iNsTr_9 with Write: 			iNsTr_9 := (indexx_x11 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          R_iNsTr_9_2173_sample_start_ o<-& (ADD_u32_u32_2191_update_completed_ 1)
          // 			exitcond1 := (iNsTr_9 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
          //  file prog.linked.opt.aa, line 869
          // Source expression
          // (iNsTr_9 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
          $T[EQ_u32_u1_2197_sample_start_] 
          $T[EQ_u32_u1_2197_sample_completed_] 
          $T[EQ_u32_u1_2197_update_start_] 
          $T[EQ_u32_u1_2197_update_completed_] 
          // iNsTr_9
          $T[R_iNsTr_9_2194_sample_start_] 
          $T[R_iNsTr_9_2194_sample_completed_] 
          $T[R_iNsTr_9_2194_update_start_] 
          $T[R_iNsTr_9_2194_update_completed_] 
          // implicit reference
          R_iNsTr_9_2194_sample_start_ <-& (ADD_u32_u32_2191_update_completed_)
          R_iNsTr_9_2194_sample_completed_ <-& (R_iNsTr_9_2194_sample_start_)
          R_iNsTr_9_2194_update_start_ <-& (R_iNsTr_9_2194_sample_completed_)
          R_iNsTr_9_2194_update_completed_ <-& (R_iNsTr_9_2194_update_start_)
          EQ_u32_u1_2197_sample_start_ <-& (R_iNsTr_9_2194_update_completed_)
          ;;[EQ_u32_u1_2197_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[EQ_u32_u1_2197_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          EQ_u32_u1_2197_sample_start_ &-> (EQ_u32_u1_2197_Sample)
          EQ_u32_u1_2197_sample_completed_ <-& (EQ_u32_u1_2197_Sample)
          EQ_u32_u1_2197_sample_completed_ &-> ($null)
          EQ_u32_u1_2197_update_start_ &-> (EQ_u32_u1_2197_Update)
          EQ_u32_u1_2197_update_completed_ <-& (EQ_u32_u1_2197_Update)
          // RAW reenables for iNsTr_9
          ADD_u32_u32_2191_update_start_ o<-& (EQ_u32_u1_2197_sample_completed_ 0)
          // self-release: 
          EQ_u32_u1_2197_sample_start_ o<-& (EQ_u32_u1_2197_sample_completed_ 1)
          EQ_u32_u1_2197_update_start_ o<-& (EQ_u32_u1_2197_update_completed_ 0)
          // Target expression
          // (as target) exitcond1
          // exitcond1
          // implicit reference
          // ( ~ exitcond1 )
          $T[NOT_u1_u1_2201_sample_start_] 
          $T[NOT_u1_u1_2201_sample_completed_] 
          $T[NOT_u1_u1_2201_update_start_] 
          $T[NOT_u1_u1_2201_update_completed_] 
          // exitcond1
          $T[R_exitcond1_2200_sample_start_] 
          $T[R_exitcond1_2200_sample_completed_] 
          $T[R_exitcond1_2200_update_start_] 
          $T[R_exitcond1_2200_update_completed_] 
          // implicit reference
          R_exitcond1_2200_sample_start_ <-& (EQ_u32_u1_2197_update_completed_)
          R_exitcond1_2200_sample_completed_ <-& (R_exitcond1_2200_sample_start_)
          R_exitcond1_2200_update_start_ <-& (R_exitcond1_2200_sample_completed_)
          R_exitcond1_2200_update_completed_ <-& (R_exitcond1_2200_update_start_)
          NOT_u1_u1_2201_sample_start_ <-& (R_exitcond1_2200_update_completed_)
          ;;[NOT_u1_u1_2201_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[NOT_u1_u1_2201_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          NOT_u1_u1_2201_sample_start_ &-> (NOT_u1_u1_2201_Sample)
          NOT_u1_u1_2201_sample_completed_ <-& (NOT_u1_u1_2201_Sample)
          NOT_u1_u1_2201_sample_completed_ &-> ($null)
          NOT_u1_u1_2201_update_start_ &-> (NOT_u1_u1_2201_Update)
          NOT_u1_u1_2201_update_completed_ <-& (NOT_u1_u1_2201_Update)
          // flow-through
          NOT_u1_u1_2201_update_start_ <-& (NOT_u1_u1_2201_sample_completed_)
          NOT_u1_u1_2201_update_completed_ &-> (condition_evaluated)
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // reenable across ring for memory space memory_space_0
          // leading and trailing sets are the same... no ring dependency
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_2169__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_2169_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_2169__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_2169_loop_body : condition_evaluated
        $bind do_while_stmt_2169__entry__  => do_while_stmt_2169_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_2169_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_2169__exit__)
      }
      do_while_stmt_2169__entry__ |-> (do_while_stmt_2169)
      do_while_stmt_2169__exit__ <-| (do_while_stmt_2169)
      ::[assign_stmt_2207_to_assign_stmt_2239] 
      {
        // 		maxDer := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 874
        // Target expression
        // (as target) maxDer
        $T[STORE_maxDer_2204_sample_start_] 
        $T[STORE_maxDer_2204_sample_completed_] 
        $T[STORE_maxDer_2204_update_start_] 
        $T[STORE_maxDer_2204_update_completed_] 
        // maxDer
        $T[STORE_maxDer_2204_word_address_calculated] 
        $T[STORE_maxDer_2204_root_address_calculated] 
        STORE_maxDer_2204_word_address_calculated <-& (STORE_maxDer_2204_root_address_calculated)
        ;;[STORE_maxDer_2204_Sample] 
        {
          ;;[STORE_maxDer_2204_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_maxDer_2204_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_maxDer_2204_sample_start_ <-& (STORE_maxDer_2204_word_address_calculated)
        STORE_maxDer_2204_sample_start_ &-> (STORE_maxDer_2204_Sample)
        STORE_maxDer_2204_sample_completed_ <-& (STORE_maxDer_2204_Sample)
        STORE_maxDer_2204_sample_completed_ &-> ($null)
        STORE_maxDer_2204_update_start_ &-> (STORE_maxDer_2204_Update)
        STORE_maxDer_2204_update_completed_ <-& (STORE_maxDer_2204_Update)
        // 		DDCALCbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 875
        // Target expression
        // (as target) DDCALCbuff_ptr
        $T[STORE_DDCALCbuff_ptr_2208_sample_start_] 
        $T[STORE_DDCALCbuff_ptr_2208_sample_completed_] 
        $T[STORE_DDCALCbuff_ptr_2208_update_start_] 
        $T[STORE_DDCALCbuff_ptr_2208_update_completed_] 
        // DDCALCbuff_ptr
        $T[STORE_DDCALCbuff_ptr_2208_word_address_calculated] 
        $T[STORE_DDCALCbuff_ptr_2208_root_address_calculated] 
        STORE_DDCALCbuff_ptr_2208_word_address_calculated <-& (STORE_DDCALCbuff_ptr_2208_root_address_calculated)
        ;;[STORE_DDCALCbuff_ptr_2208_Sample] 
        {
          ;;[STORE_DDCALCbuff_ptr_2208_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_DDCALCbuff_ptr_2208_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_DDCALCbuff_ptr_2208_sample_start_ <-& (STORE_DDCALCbuff_ptr_2208_word_address_calculated)
        STORE_DDCALCbuff_ptr_2208_sample_start_ &-> (STORE_DDCALCbuff_ptr_2208_Sample)
        STORE_DDCALCbuff_ptr_2208_sample_completed_ <-& (STORE_DDCALCbuff_ptr_2208_Sample)
        STORE_DDCALCbuff_ptr_2208_sample_completed_ &-> ($null)
        STORE_DDCALCbuff_ptr_2208_update_start_ &-> (STORE_DDCALCbuff_ptr_2208_Update)
        STORE_DDCALCbuff_ptr_2208_update_completed_ <-& (STORE_DDCALCbuff_ptr_2208_Update)
        // 		DDbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 876
        // Target expression
        // (as target) DDbuff_ptr
        $T[STORE_DDbuff_ptr_2212_sample_start_] 
        $T[STORE_DDbuff_ptr_2212_sample_completed_] 
        $T[STORE_DDbuff_ptr_2212_update_start_] 
        $T[STORE_DDbuff_ptr_2212_update_completed_] 
        // DDbuff_ptr
        $T[STORE_DDbuff_ptr_2212_word_address_calculated] 
        $T[STORE_DDbuff_ptr_2212_root_address_calculated] 
        STORE_DDbuff_ptr_2212_word_address_calculated <-& (STORE_DDbuff_ptr_2212_root_address_calculated)
        ;;[STORE_DDbuff_ptr_2212_Sample] 
        {
          ;;[STORE_DDbuff_ptr_2212_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_DDbuff_ptr_2212_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_DDbuff_ptr_2212_sample_start_ <-& (STORE_DDbuff_ptr_2212_word_address_calculated)
        STORE_DDbuff_ptr_2212_sample_start_ &-> (STORE_DDbuff_ptr_2212_Sample)
        STORE_DDbuff_ptr_2212_sample_completed_ <-& (STORE_DDbuff_ptr_2212_Sample)
        STORE_DDbuff_ptr_2212_sample_completed_ &-> ($null)
        STORE_DDbuff_ptr_2212_update_start_ &-> (STORE_DDbuff_ptr_2212_Update)
        STORE_DDbuff_ptr_2212_update_completed_ <-& (STORE_DDbuff_ptr_2212_Update)
        // 		NOISEbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
        //  file prog.linked.opt.aa, line 877
        // Target expression
        // (as target) NOISEbuff_ptr
        $T[STORE_NOISEbuff_ptr_2216_sample_start_] 
        $T[STORE_NOISEbuff_ptr_2216_sample_completed_] 
        $T[STORE_NOISEbuff_ptr_2216_update_start_] 
        $T[STORE_NOISEbuff_ptr_2216_update_completed_] 
        // NOISEbuff_ptr
        $T[STORE_NOISEbuff_ptr_2216_word_address_calculated] 
        $T[STORE_NOISEbuff_ptr_2216_root_address_calculated] 
        STORE_NOISEbuff_ptr_2216_word_address_calculated <-& (STORE_NOISEbuff_ptr_2216_root_address_calculated)
        ;;[STORE_NOISEbuff_ptr_2216_Sample] 
        {
          ;;[STORE_NOISEbuff_ptr_2216_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_NOISEbuff_ptr_2216_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_NOISEbuff_ptr_2216_sample_start_ <-& (STORE_NOISEbuff_ptr_2216_word_address_calculated)
        STORE_NOISEbuff_ptr_2216_sample_start_ &-> (STORE_NOISEbuff_ptr_2216_Sample)
        STORE_NOISEbuff_ptr_2216_sample_completed_ <-& (STORE_NOISEbuff_ptr_2216_Sample)
        STORE_NOISEbuff_ptr_2216_sample_completed_ &-> ($null)
        STORE_NOISEbuff_ptr_2216_update_start_ &-> (STORE_NOISEbuff_ptr_2216_Update)
        STORE_NOISEbuff_ptr_2216_update_completed_ <-& (STORE_NOISEbuff_ptr_2216_Update)
        // 		RRbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
        //  file prog.linked.opt.aa, line 878
        // Target expression
        // (as target) RRbuff_ptr
        $T[STORE_RRbuff_ptr_2220_sample_start_] 
        $T[STORE_RRbuff_ptr_2220_sample_completed_] 
        $T[STORE_RRbuff_ptr_2220_update_start_] 
        $T[STORE_RRbuff_ptr_2220_update_completed_] 
        // RRbuff_ptr
        $T[STORE_RRbuff_ptr_2220_word_address_calculated] 
        $T[STORE_RRbuff_ptr_2220_root_address_calculated] 
        STORE_RRbuff_ptr_2220_word_address_calculated <-& (STORE_RRbuff_ptr_2220_root_address_calculated)
        ;;[STORE_RRbuff_ptr_2220_Sample] 
        {
          ;;[STORE_RRbuff_ptr_2220_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_RRbuff_ptr_2220_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_RRbuff_ptr_2220_sample_start_ <-& (STORE_RRbuff_ptr_2220_word_address_calculated)
        STORE_RRbuff_ptr_2220_sample_start_ &-> (STORE_RRbuff_ptr_2220_Sample)
        STORE_RRbuff_ptr_2220_sample_completed_ <-& (STORE_RRbuff_ptr_2220_Sample)
        STORE_RRbuff_ptr_2220_sample_completed_ &-> ($null)
        STORE_RRbuff_ptr_2220_update_start_ &-> (STORE_RRbuff_ptr_2220_Update)
        STORE_RRbuff_ptr_2220_update_completed_ <-& (STORE_RRbuff_ptr_2220_Update)
        // 		QRSbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
        //  file prog.linked.opt.aa, line 879
        // Target expression
        // (as target) QRSbuff_ptr
        $T[STORE_QRSbuff_ptr_2224_sample_start_] 
        $T[STORE_QRSbuff_ptr_2224_sample_completed_] 
        $T[STORE_QRSbuff_ptr_2224_update_start_] 
        $T[STORE_QRSbuff_ptr_2224_update_completed_] 
        // QRSbuff_ptr
        $T[STORE_QRSbuff_ptr_2224_word_address_calculated] 
        $T[STORE_QRSbuff_ptr_2224_root_address_calculated] 
        STORE_QRSbuff_ptr_2224_word_address_calculated <-& (STORE_QRSbuff_ptr_2224_root_address_calculated)
        ;;[STORE_QRSbuff_ptr_2224_Sample] 
        {
          ;;[STORE_QRSbuff_ptr_2224_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_QRSbuff_ptr_2224_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_QRSbuff_ptr_2224_sample_start_ <-& (STORE_QRSbuff_ptr_2224_word_address_calculated)
        STORE_QRSbuff_ptr_2224_sample_start_ &-> (STORE_QRSbuff_ptr_2224_Sample)
        STORE_QRSbuff_ptr_2224_sample_completed_ <-& (STORE_QRSbuff_ptr_2224_Sample)
        STORE_QRSbuff_ptr_2224_sample_completed_ &-> ($null)
        STORE_QRSbuff_ptr_2224_update_start_ &-> (STORE_QRSbuff_ptr_2224_Update)
        STORE_QRSbuff_ptr_2224_update_completed_ <-& (STORE_QRSbuff_ptr_2224_Update)
        // 		timeSinceMaxPeak := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 880
        // Target expression
        // (as target) timeSinceMaxPeak
        $T[STORE_timeSinceMaxPeak_2228_sample_start_] 
        $T[STORE_timeSinceMaxPeak_2228_sample_completed_] 
        $T[STORE_timeSinceMaxPeak_2228_update_start_] 
        $T[STORE_timeSinceMaxPeak_2228_update_completed_] 
        // timeSinceMaxPeak
        $T[STORE_timeSinceMaxPeak_2228_word_address_calculated] 
        $T[STORE_timeSinceMaxPeak_2228_root_address_calculated] 
        STORE_timeSinceMaxPeak_2228_word_address_calculated <-& (STORE_timeSinceMaxPeak_2228_root_address_calculated)
        ;;[STORE_timeSinceMaxPeak_2228_Sample] 
        {
          ;;[STORE_timeSinceMaxPeak_2228_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_timeSinceMaxPeak_2228_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_timeSinceMaxPeak_2228_sample_start_ <-& (STORE_timeSinceMaxPeak_2228_word_address_calculated)
        STORE_timeSinceMaxPeak_2228_sample_start_ &-> (STORE_timeSinceMaxPeak_2228_Sample)
        STORE_timeSinceMaxPeak_2228_sample_completed_ <-& (STORE_timeSinceMaxPeak_2228_Sample)
        STORE_timeSinceMaxPeak_2228_sample_completed_ &-> ($null)
        STORE_timeSinceMaxPeak_2228_update_start_ &-> (STORE_timeSinceMaxPeak_2228_Update)
        STORE_timeSinceMaxPeak_2228_update_completed_ <-& (STORE_timeSinceMaxPeak_2228_Update)
        // 		maxPeak := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 881
        // Target expression
        // (as target) maxPeak
        $T[STORE_maxPeak_2232_sample_start_] 
        $T[STORE_maxPeak_2232_sample_completed_] 
        $T[STORE_maxPeak_2232_update_start_] 
        $T[STORE_maxPeak_2232_update_completed_] 
        // maxPeak
        $T[STORE_maxPeak_2232_word_address_calculated] 
        $T[STORE_maxPeak_2232_root_address_calculated] 
        STORE_maxPeak_2232_word_address_calculated <-& (STORE_maxPeak_2232_root_address_calculated)
        ;;[STORE_maxPeak_2232_Sample] 
        {
          ;;[STORE_maxPeak_2232_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_maxPeak_2232_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_maxPeak_2232_sample_start_ <-& (STORE_maxPeak_2232_word_address_calculated)
        STORE_maxPeak_2232_sample_start_ &-> (STORE_maxPeak_2232_Sample)
        STORE_maxPeak_2232_sample_completed_ <-& (STORE_maxPeak_2232_Sample)
        STORE_maxPeak_2232_sample_completed_ &-> ($null)
        STORE_maxPeak_2232_update_start_ &-> (STORE_maxPeak_2232_Update)
        STORE_maxPeak_2232_update_completed_ <-& (STORE_maxPeak_2232_Update)
        // 		lastDatum := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 882
        // Target expression
        // (as target) lastDatum
        $T[STORE_lastDatum_2236_sample_start_] 
        $T[STORE_lastDatum_2236_sample_completed_] 
        $T[STORE_lastDatum_2236_update_start_] 
        $T[STORE_lastDatum_2236_update_completed_] 
        // lastDatum
        $T[STORE_lastDatum_2236_word_address_calculated] 
        $T[STORE_lastDatum_2236_root_address_calculated] 
        STORE_lastDatum_2236_word_address_calculated <-& (STORE_lastDatum_2236_root_address_calculated)
        ;;[STORE_lastDatum_2236_Sample] 
        {
          ;;[STORE_lastDatum_2236_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_lastDatum_2236_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_lastDatum_2236_sample_start_ <-& (STORE_lastDatum_2236_word_address_calculated)
        STORE_lastDatum_2236_sample_start_ &-> (STORE_lastDatum_2236_Sample)
        STORE_lastDatum_2236_sample_completed_ <-& (STORE_lastDatum_2236_Sample)
        STORE_lastDatum_2236_sample_completed_ &-> ($null)
        STORE_lastDatum_2236_update_start_ &-> (STORE_lastDatum_2236_Update)
        STORE_lastDatum_2236_update_completed_ <-& (STORE_lastDatum_2236_Update)
        // load-store dependencies..
      }
      assign_stmt_2207_to_assign_stmt_2239__entry__ |-> (assign_stmt_2207_to_assign_stmt_2239)
      assign_stmt_2207_to_assign_stmt_2239__exit__ <-| (assign_stmt_2207_to_assign_stmt_2239)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 841
      //---------------------   merge statement  file prog.linked.opt.aa, line 841  --------------------------
      ||[bbx_xnph3_bb_1_PhiReq] 
      {
        ;;[phi_stmt_2110] 
        {
          ||[phi_stmt_2110_sources] 
          {
            // sources for 			$phi indexx_x02_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph3_bb_1 // type of target is $uint<32>
          }
          $T [phi_stmt_2110_req] 
        }
      }
      bbx_xnph3_bb_1 |-> (bbx_xnph3_bb_1_PhiReq)
      $P [merge_stmt_2109_PhiReqMerge] 
      merge_stmt_2109_PhiReqMerge <-| ( bbx_xnph3_bb_1_PhiReq )
      ||[merge_stmt_2109_PhiAck] 
      {
        $T [phi_stmt_2110_ack] 
      }
      merge_stmt_2109_PhiReqMerge |-> (merge_stmt_2109_PhiAck)
      merge_stmt_2109__exit__  <-| (merge_stmt_2109_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 841  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 856
      //---------------------   merge statement  file prog.linked.opt.aa, line 856  --------------------------
      ||[bb_1_bbx_xnphx_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_1_bbx_xnphx_xpreheader |-> (bb_1_bbx_xnphx_xpreheader_PhiReq)
      $P [merge_stmt_2160_PhiReqMerge] 
      merge_stmt_2160_PhiReqMerge <-| ( bb_1_bbx_xnphx_xpreheader_PhiReq )
      ||[merge_stmt_2160_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2160_PhiReqMerge |-> (merge_stmt_2160_PhiAck)
      merge_stmt_2160__exit__  <-| (merge_stmt_2160_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 856  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 859
      //---------------------   merge statement  file prog.linked.opt.aa, line 859  --------------------------
      ||[bbx_xnphx_xpreheader_bbx_xnph_PhiReq] 
      {
        ;;[phi_stmt_2163] 
        {
          ||[phi_stmt_2163_sources] 
          {
            // sources for 			$phi indexx_x11_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<32>
          }
          $T [phi_stmt_2163_req] 
        }
      }
      bbx_xnphx_xpreheader_bbx_xnph |-> (bbx_xnphx_xpreheader_bbx_xnph_PhiReq)
      $P [merge_stmt_2162_PhiReqMerge] 
      merge_stmt_2162_PhiReqMerge <-| ( bbx_xnphx_xpreheader_bbx_xnph_PhiReq )
      ||[merge_stmt_2162_PhiAck] 
      {
        $T [phi_stmt_2163_ack] 
      }
      merge_stmt_2162_PhiReqMerge |-> (merge_stmt_2162_PhiAck)
      merge_stmt_2162__exit__  <-| (merge_stmt_2162_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 859  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 872
      //---------------------   merge statement  file prog.linked.opt.aa, line 872  --------------------------
      ||[bbx_xnph_xx_x_crit_edge_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph_xx_x_crit_edge |-> (bbx_xnph_xx_x_crit_edge_PhiReq)
      $P [merge_stmt_2203_PhiReqMerge] 
      merge_stmt_2203_PhiReqMerge <-| ( bbx_xnph_xx_x_crit_edge_PhiReq )
      ||[merge_stmt_2203_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2203_PhiReqMerge |-> (merge_stmt_2203_PhiAck)
      merge_stmt_2203__exit__  <-| (merge_stmt_2203_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 872  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 884
      //---------------------   merge statement  file prog.linked.opt.aa, line 884  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_2241_PhiReqMerge] 
      merge_stmt_2241_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_2241_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2241_PhiReqMerge |-> (merge_stmt_2241_PhiAck)
      merge_stmt_2241__exit__  <-| (merge_stmt_2241_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 884  --------------------------
      bbx_xnph3_bb_1 <-| (branch_block_stmt_2107__entry__)
      do_while_stmt_2116__entry__ <-| (merge_stmt_2109__exit__)
      bb_1_bbx_xnphx_xpreheader <-| (do_while_stmt_2116__exit__)
      bbx_xnphx_xpreheader_bbx_xnph <-| (merge_stmt_2160__exit__)
      do_while_stmt_2169__entry__ <-| (merge_stmt_2162__exit__)
      bbx_xnph_xx_x_crit_edge <-| (do_while_stmt_2169__exit__)
      assign_stmt_2207_to_assign_stmt_2239__entry__ <-| (merge_stmt_2203__exit__)
      return__ <-| (assign_stmt_2207_to_assign_stmt_2239__exit__)
      merge_stmt_2241__exit__ |-> (branch_block_stmt_2107__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %initDet%body%
    //  file prog.linked.opt.aa, line 841
    // constant-object-declarations for block %initDet%body%
    //  file prog.linked.opt.aa, line 845
    // constant-object-declarations for block %initDet%body%
    //  file prog.linked.opt.aa, line 856
    // constant-object-declarations for block %initDet%body%
    //  file prog.linked.opt.aa, line 859
    // constant-object-declarations for block %initDet%body%
    //  file prog.linked.opt.aa, line 863
    // constant-object-declarations for block %initDet%body%
    //  file prog.linked.opt.aa, line 872
    // constant-object-declarations for block %initDet%body%
    //  file prog.linked.opt.aa, line 884
    // constant-object-declarations for block %initDet%body
    //  file prog.linked.opt.aa, line 838
    // constant-object-declarations for block %initDet
    //  file prog.linked.opt.aa, line 833
    // constant-declarations for block %initDet%body
    //  file prog.linked.opt.aa, line 838
    // constant-declarations for block %initDet%body%
    //  file prog.linked.opt.aa, line 841
    // constant-declarations for phi:  			$phi indexx_x02_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph3_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 842
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_2114_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // do-while statement  
    //  file prog.linked.opt.aa, line 844
    // constant-declarations for block %initDet%body%
    //  file prog.linked.opt.aa, line 845
    // constant-declarations for phi:  			$phi indexx_x02 := 			  ($cast ($uint<32>) iNsTr_4 ) $on $loopback			  indexx_x02_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 846
    // @(RRbuff[indexx_x02])
    $constant $W[array_obj_ref_2126_resized_base_address] : $int<5> := _b10000// 16
    $constant $W[array_obj_ref_2126_offset_scale_factor_0] : $int<5> := _b00001// 1
    // @(NOISEbuff[indexx_x02])
    $constant $W[array_obj_ref_2131_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_2131_offset_scale_factor_0] : $int<5> := _b00001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2137_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ->(scevgep5)
    $constant $W[ptr_deref_2135_word_offset_0] : $int<5> := _b00000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000011001000  )
    $constant $W[type_cast_2142_wire_constant] : $int<32> := _b00000000000000000000000011001000// 200
    // ->(scevgep6)
    $constant $W[ptr_deref_2140_word_offset_0] : $int<5> := _b00000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_2147_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000001000  )
    $constant $W[type_cast_2153_wire_constant] : $int<32> := _b00000000000000000000000000001000// 8
    // constant-declarations for block %initDet%body%
    //  file prog.linked.opt.aa, line 856
    // constant-declarations for block %initDet%body%
    //  file prog.linked.opt.aa, line 859
    // constant-declarations for phi:  			$phi indexx_x11_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 860
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_2167_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // do-while statement  
    //  file prog.linked.opt.aa, line 862
    // constant-declarations for block %initDet%body%
    //  file prog.linked.opt.aa, line 863
    // constant-declarations for phi:  			$phi indexx_x11 := 			  ($cast ($uint<32>) iNsTr_9 ) $on $loopback			  indexx_x11_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 864
    // @(DDCALCbuff[indexx_x11])
    $constant $W[array_obj_ref_2179_resized_base_address] : $int<2> := _b00// 0
    $constant $W[array_obj_ref_2179_offset_scale_factor_0] : $int<2> := _b01// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2185_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ->(scevgep)
    $constant $W[ptr_deref_2183_word_offset_0] : $int<2> := _b00// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_2190_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000010  )
    $constant $W[type_cast_2196_wire_constant] : $int<32> := _b00000000000000000000000000000010// 2
    // constant-declarations for block %initDet%body%
    //  file prog.linked.opt.aa, line 872
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2206_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // maxDer
    $constant $W[STORE_maxDer_2204_word_address_0] : $pointer<memory_space_21> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2210_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // DDCALCbuff_ptr
    $constant $W[STORE_DDCALCbuff_ptr_2208_word_address_0] : $pointer<memory_space_1> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2214_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // DDbuff_ptr
    $constant $W[STORE_DDbuff_ptr_2212_word_address_0] : $pointer<memory_space_3> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_2218_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // NOISEbuff_ptr
    $constant $W[STORE_NOISEbuff_ptr_2216_word_address_0] : $pointer<memory_space_14> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_2222_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // RRbuff_ptr
    $constant $W[STORE_RRbuff_ptr_2220_word_address_0] : $pointer<memory_space_16> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_2226_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // QRSbuff_ptr
    $constant $W[STORE_QRSbuff_ptr_2224_word_address_0] : $pointer<memory_space_15> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2230_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // timeSinceMaxPeak
    $constant $W[STORE_timeSinceMaxPeak_2228_word_address_0] : $pointer<memory_space_25> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2234_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // maxPeak
    $constant $W[STORE_maxPeak_2232_word_address_0] : $pointer<memory_space_22> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2238_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // lastDatum
    $constant $W[STORE_lastDatum_2236_word_address_0] : $pointer<memory_space_20> := _b0
    // constant-declarations for block %initDet%body%
    //  file prog.linked.opt.aa, line 884
    // block %initDet%body
    //  file prog.linked.opt.aa, line 838
    // merge-statement  
    //  file prog.linked.opt.aa, line 841
    // 			$phi indexx_x02_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph3_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 842
    // indexx_x02_at_entry
    $W[indexx_x02_at_entry_2110] : $int<32>
    // do-while statement  
    //  file prog.linked.opt.aa, line 844
    // ( ~ exitcond )
    $intermediate $W[NOT_u1_u1_2158_wire] : $int<1>
    // merge-statement  
    //  file prog.linked.opt.aa, line 845
    // 			$phi indexx_x02 := 			  ($cast ($uint<32>) iNsTr_4 ) $on $loopback			  indexx_x02_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 846
    // ($cast ($uint<32>) iNsTr_4 )
    $intermediate $W[type_cast_2121_wire] : $int<32>
    // indexx_x02
    $W[indexx_x02_2118] : $int<32>
    // 			scevgep6 := @(RRbuff[indexx_x02])
    //  file prog.linked.opt.aa, line 848
    // @(RRbuff[indexx_x02])
    $intermediate $W[R_indexx_x02_2125_resized] : $int<5>
    $intermediate $W[R_indexx_x02_2125_scaled] : $int<5>
    $intermediate $W[array_obj_ref_2126_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_2126_root_address] : $int<5>
    // scevgep6
    $W[scevgep6_2128] : $int<32>
    // 			scevgep5 := @(NOISEbuff[indexx_x02])
    //  file prog.linked.opt.aa, line 849
    // @(NOISEbuff[indexx_x02])
    $intermediate $W[R_indexx_x02_2130_resized] : $int<5>
    $intermediate $W[R_indexx_x02_2130_scaled] : $int<5>
    $intermediate $W[array_obj_ref_2131_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_2131_root_address] : $int<5>
    // scevgep5
    $W[scevgep5_2133] : $int<32>
    // 			->(scevgep5) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 850
    // ->(scevgep5)
    $intermediate $W[ptr_deref_2135_wire] : $int<32>
    $intermediate $W[ptr_deref_2135_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_2135_root_address] : $int<5>
    $W[ptr_deref_2135_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_2135_data_0] : $int<32>
    // 			->(scevgep6) := ($bitcast ($uint<32>) _b00000000000000000000000011001000  )
    //  file prog.linked.opt.aa, line 851
    // ->(scevgep6)
    $intermediate $W[ptr_deref_2140_wire] : $int<32>
    $intermediate $W[ptr_deref_2140_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_2140_root_address] : $int<5>
    $W[ptr_deref_2140_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_2140_data_0] : $int<32>
    // 			iNsTr_4 := (indexx_x02 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 852
    // iNsTr_4
    $W[iNsTr_4_2149] : $int<32>
    // 			exitcond := (iNsTr_4 == ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
    //  file prog.linked.opt.aa, line 853
    // exitcond
    $W[exitcond_2155] : $int<1>
    // merge-statement  
    //  file prog.linked.opt.aa, line 859
    // 			$phi indexx_x11_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 860
    // indexx_x11_at_entry
    $W[indexx_x11_at_entry_2163] : $int<32>
    // do-while statement  
    //  file prog.linked.opt.aa, line 862
    // ( ~ exitcond1 )
    $intermediate $W[NOT_u1_u1_2201_wire] : $int<1>
    // merge-statement  
    //  file prog.linked.opt.aa, line 863
    // 			$phi indexx_x11 := 			  ($cast ($uint<32>) iNsTr_9 ) $on $loopback			  indexx_x11_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 864
    // ($cast ($uint<32>) iNsTr_9 )
    $intermediate $W[type_cast_2174_wire] : $int<32>
    // indexx_x11
    $W[indexx_x11_2171] : $int<32>
    // 			scevgep := @(DDCALCbuff[indexx_x11])
    //  file prog.linked.opt.aa, line 866
    // @(DDCALCbuff[indexx_x11])
    $intermediate $W[R_indexx_x11_2178_resized] : $int<2>
    $intermediate $W[R_indexx_x11_2178_scaled] : $int<2>
    $intermediate $W[array_obj_ref_2179_final_offset] : $int<2>
    $intermediate $W[array_obj_ref_2179_root_address] : $int<2>
    // scevgep
    $W[scevgep_2181] : $int<32>
    // 			->(scevgep) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 867
    // ->(scevgep)
    $intermediate $W[ptr_deref_2183_wire] : $int<32>
    $intermediate $W[ptr_deref_2183_resized_base_address] : $int<2>
    $intermediate $W[ptr_deref_2183_root_address] : $int<2>
    $W[ptr_deref_2183_word_address_0] : $pointer<memory_space_0>
    $W[ptr_deref_2183_data_0] : $int<32>
    // 			iNsTr_9 := (indexx_x11 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 868
    // iNsTr_9
    $W[iNsTr_9_2192] : $int<32>
    // 			exitcond1 := (iNsTr_9 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
    //  file prog.linked.opt.aa, line 869
    // exitcond1
    $W[exitcond1_2198] : $int<1>
    // 		maxDer := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 874
    // maxDer
    $constant $W[STORE_maxDer_2204_word_address_0] : $pointer<memory_space_21> := _b0
    $W[STORE_maxDer_2204_data_0] : $int<32>
    // 		DDCALCbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 875
    // DDCALCbuff_ptr
    $constant $W[STORE_DDCALCbuff_ptr_2208_word_address_0] : $pointer<memory_space_1> := _b0
    $W[STORE_DDCALCbuff_ptr_2208_data_0] : $int<32>
    // 		DDbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 876
    // DDbuff_ptr
    $constant $W[STORE_DDbuff_ptr_2212_word_address_0] : $pointer<memory_space_3> := _b0
    $W[STORE_DDbuff_ptr_2212_data_0] : $int<32>
    // 		NOISEbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    //  file prog.linked.opt.aa, line 877
    // NOISEbuff_ptr
    $constant $W[STORE_NOISEbuff_ptr_2216_word_address_0] : $pointer<memory_space_14> := _b0
    $W[STORE_NOISEbuff_ptr_2216_data_0] : $int<32>
    // 		RRbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    //  file prog.linked.opt.aa, line 878
    // RRbuff_ptr
    $constant $W[STORE_RRbuff_ptr_2220_word_address_0] : $pointer<memory_space_16> := _b0
    $W[STORE_RRbuff_ptr_2220_data_0] : $int<32>
    // 		QRSbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    //  file prog.linked.opt.aa, line 879
    // QRSbuff_ptr
    $constant $W[STORE_QRSbuff_ptr_2224_word_address_0] : $pointer<memory_space_15> := _b0
    $W[STORE_QRSbuff_ptr_2224_data_0] : $int<32>
    // 		timeSinceMaxPeak := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 880
    // timeSinceMaxPeak
    $constant $W[STORE_timeSinceMaxPeak_2228_word_address_0] : $pointer<memory_space_25> := _b0
    $W[STORE_timeSinceMaxPeak_2228_data_0] : $int<32>
    // 		maxPeak := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 881
    // maxPeak
    $constant $W[STORE_maxPeak_2232_word_address_0] : $pointer<memory_space_22> := _b0
    $W[STORE_maxPeak_2232_data_0] : $int<32>
    // 		lastDatum := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 882
    // lastDatum
    $constant $W[STORE_lastDatum_2236_word_address_0] : $pointer<memory_space_20> := _b0
    $W[STORE_lastDatum_2236_data_0] : $int<32>
    // datapath-instances for block %initDet%body
    //  file prog.linked.opt.aa, line 838
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 841
    // 			$phi indexx_x02_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph3_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 842
    $phi [phi_stmt_2110] (type_cast_2114_wire_constant) ( indexx_x02_at_entry_2110 )
    // datapath-instances for do-while  
    //  file prog.linked.opt.aa, line 844
    // ( ~ exitcond )
    ~ [NOT_u1_u1_2158_inst] (exitcond_2155) (NOT_u1_u1_2158_wire)   $flowthrough
    $delay NOT_u1_u1_2158_inst 0
    ==0? [do_while_stmt_2116_branch] (NOT_u1_u1_2158_wire)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 845
    // 			$phi indexx_x02 := 			  ($cast ($uint<32>) iNsTr_4 ) $on $loopback			  indexx_x02_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 846
    // ($cast ($uint<32>) iNsTr_4 )
    # := [type_cast_2121_inst] (iNsTr_4_2149) (type_cast_2121_wire) 
    $delay type_cast_2121_inst 1
    # $phi [phi_stmt_2118] (type_cast_2121_wire indexx_x02_at_entry_2110) ( indexx_x02_2118 )
    // 			scevgep6 := @(RRbuff[indexx_x02])
    //  file prog.linked.opt.aa, line 848
    &/ [array_obj_ref_2126_index_0_resize] (indexx_x02_2118) (R_indexx_x02_2125_resized) 
    &/ [array_obj_ref_2126_index_0_rename] (R_indexx_x02_2125_resized) (R_indexx_x02_2125_scaled) 
    &/ [array_obj_ref_2126_index_offset] (R_indexx_x02_2125_scaled) (array_obj_ref_2126_final_offset) 
    +[array_obj_ref_2126_root_address_inst] (array_obj_ref_2126_final_offset array_obj_ref_2126_resized_base_address) (array_obj_ref_2126_root_address) 
    $delay array_obj_ref_2126_root_address_inst 2
    # := [addr_of_2127_final_reg] (array_obj_ref_2126_root_address) (scevgep6_2128) 
    // 			scevgep5 := @(NOISEbuff[indexx_x02])
    //  file prog.linked.opt.aa, line 849
    &/ [array_obj_ref_2131_index_0_resize] (indexx_x02_2118) (R_indexx_x02_2130_resized) 
    &/ [array_obj_ref_2131_index_0_rename] (R_indexx_x02_2130_resized) (R_indexx_x02_2130_scaled) 
    &/ [array_obj_ref_2131_index_offset] (R_indexx_x02_2130_scaled) (array_obj_ref_2131_final_offset) 
    &/ [array_obj_ref_2131_root_address_inst] (array_obj_ref_2131_final_offset) (array_obj_ref_2131_root_address) 
    # := [addr_of_2132_final_reg] (array_obj_ref_2131_root_address) (scevgep5_2133) 
    // 			->(scevgep5) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 850
    // ->(scevgep5)
    &/ [ptr_deref_2135_base_resize] (scevgep5_2133) (ptr_deref_2135_resized_base_address) 
    &/ [ptr_deref_2135_root_address_inst] (ptr_deref_2135_resized_base_address) (ptr_deref_2135_root_address) 
    &/ [ptr_deref_2135_addr_0] (ptr_deref_2135_root_address) (ptr_deref_2135_word_address_0) 
    $store [ptr_deref_2135_store_0] $to memory_space_13 (ptr_deref_2135_word_address_0 ptr_deref_2135_data_0) 
    $delay ptr_deref_2135_store_0 2
    &/ [ptr_deref_2135_gather_scatter] (type_cast_2137_wire_constant) (ptr_deref_2135_data_0) 
    // 			->(scevgep6) := ($bitcast ($uint<32>) _b00000000000000000000000011001000  )
    //  file prog.linked.opt.aa, line 851
    // ->(scevgep6)
    &/ [ptr_deref_2140_base_resize] (scevgep6_2128) (ptr_deref_2140_resized_base_address) 
    &/ [ptr_deref_2140_root_address_inst] (ptr_deref_2140_resized_base_address) (ptr_deref_2140_root_address) 
    &/ [ptr_deref_2140_addr_0] (ptr_deref_2140_root_address) (ptr_deref_2140_word_address_0) 
    $store [ptr_deref_2140_store_0] $to memory_space_13 (ptr_deref_2140_word_address_0 ptr_deref_2140_data_0) 
    $delay ptr_deref_2140_store_0 2
    &/ [ptr_deref_2140_gather_scatter] (type_cast_2142_wire_constant) (ptr_deref_2140_data_0) 
    // 			iNsTr_4 := (indexx_x02 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 852
    // (indexx_x02 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_2148_inst] (indexx_x02_2118 type_cast_2147_wire_constant) (iNsTr_4_2149) 
    $delay ADD_u32_u32_2148_inst 1
    // 			exitcond := (iNsTr_4 == ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
    //  file prog.linked.opt.aa, line 853
    // (iNsTr_4 == ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
    ==[EQ_u32_u1_2154_inst] (iNsTr_4_2149 type_cast_2153_wire_constant) (exitcond_2155) 
    $delay EQ_u32_u1_2154_inst 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 859
    // 			$phi indexx_x11_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 860
    $phi [phi_stmt_2163] (type_cast_2167_wire_constant) ( indexx_x11_at_entry_2163 )
    // datapath-instances for do-while  
    //  file prog.linked.opt.aa, line 862
    // ( ~ exitcond1 )
    ~ [NOT_u1_u1_2201_inst] (exitcond1_2198) (NOT_u1_u1_2201_wire)   $flowthrough
    $delay NOT_u1_u1_2201_inst 0
    ==0? [do_while_stmt_2169_branch] (NOT_u1_u1_2201_wire)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 863
    // 			$phi indexx_x11 := 			  ($cast ($uint<32>) iNsTr_9 ) $on $loopback			  indexx_x11_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 864
    // ($cast ($uint<32>) iNsTr_9 )
    # := [type_cast_2174_inst] (iNsTr_9_2192) (type_cast_2174_wire) 
    $delay type_cast_2174_inst 1
    # $phi [phi_stmt_2171] (type_cast_2174_wire indexx_x11_at_entry_2163) ( indexx_x11_2171 )
    // 			scevgep := @(DDCALCbuff[indexx_x11])
    //  file prog.linked.opt.aa, line 866
    &/ [array_obj_ref_2179_index_0_resize] (indexx_x11_2171) (R_indexx_x11_2178_resized) 
    &/ [array_obj_ref_2179_index_0_rename] (R_indexx_x11_2178_resized) (R_indexx_x11_2178_scaled) 
    &/ [array_obj_ref_2179_index_offset] (R_indexx_x11_2178_scaled) (array_obj_ref_2179_final_offset) 
    &/ [array_obj_ref_2179_root_address_inst] (array_obj_ref_2179_final_offset) (array_obj_ref_2179_root_address) 
    # := [addr_of_2180_final_reg] (array_obj_ref_2179_root_address) (scevgep_2181) 
    // 			->(scevgep) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 867
    // ->(scevgep)
    &/ [ptr_deref_2183_base_resize] (scevgep_2181) (ptr_deref_2183_resized_base_address) 
    &/ [ptr_deref_2183_root_address_inst] (ptr_deref_2183_resized_base_address) (ptr_deref_2183_root_address) 
    &/ [ptr_deref_2183_addr_0] (ptr_deref_2183_root_address) (ptr_deref_2183_word_address_0) 
    $store [ptr_deref_2183_store_0] $to memory_space_0 (ptr_deref_2183_word_address_0 ptr_deref_2183_data_0) 
    $delay ptr_deref_2183_store_0 2
    &/ [ptr_deref_2183_gather_scatter] (type_cast_2185_wire_constant) (ptr_deref_2183_data_0) 
    // 			iNsTr_9 := (indexx_x11 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 868
    // (indexx_x11 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_2191_inst] (indexx_x11_2171 type_cast_2190_wire_constant) (iNsTr_9_2192) 
    $delay ADD_u32_u32_2191_inst 1
    // 			exitcond1 := (iNsTr_9 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
    //  file prog.linked.opt.aa, line 869
    // (iNsTr_9 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
    ==[EQ_u32_u1_2197_inst] (iNsTr_9_2192 type_cast_2196_wire_constant) (exitcond1_2198) 
    $delay EQ_u32_u1_2197_inst 1
    // 		maxDer := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 874
    // maxDer
    $store [STORE_maxDer_2204_store_0] $to memory_space_21 (STORE_maxDer_2204_word_address_0 STORE_maxDer_2204_data_0) 
    $delay STORE_maxDer_2204_store_0 1
    &/ [STORE_maxDer_2204_gather_scatter] (type_cast_2206_wire_constant) (STORE_maxDer_2204_data_0) 
    // 		DDCALCbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 875
    // DDCALCbuff_ptr
    $store [STORE_DDCALCbuff_ptr_2208_store_0] $to memory_space_1 (STORE_DDCALCbuff_ptr_2208_word_address_0 STORE_DDCALCbuff_ptr_2208_data_0) 
    $delay STORE_DDCALCbuff_ptr_2208_store_0 1
    &/ [STORE_DDCALCbuff_ptr_2208_gather_scatter] (type_cast_2210_wire_constant) (STORE_DDCALCbuff_ptr_2208_data_0) 
    // 		DDbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 876
    // DDbuff_ptr
    $store [STORE_DDbuff_ptr_2212_store_0] $to memory_space_3 (STORE_DDbuff_ptr_2212_word_address_0 STORE_DDbuff_ptr_2212_data_0) 
    $delay STORE_DDbuff_ptr_2212_store_0 1
    &/ [STORE_DDbuff_ptr_2212_gather_scatter] (type_cast_2214_wire_constant) (STORE_DDbuff_ptr_2212_data_0) 
    // 		NOISEbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    //  file prog.linked.opt.aa, line 877
    // NOISEbuff_ptr
    $store [STORE_NOISEbuff_ptr_2216_store_0] $to memory_space_14 (STORE_NOISEbuff_ptr_2216_word_address_0 STORE_NOISEbuff_ptr_2216_data_0) 
    $delay STORE_NOISEbuff_ptr_2216_store_0 1
    &/ [STORE_NOISEbuff_ptr_2216_gather_scatter] (type_cast_2218_wire_constant) (STORE_NOISEbuff_ptr_2216_data_0) 
    // 		RRbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    //  file prog.linked.opt.aa, line 878
    // RRbuff_ptr
    $store [STORE_RRbuff_ptr_2220_store_0] $to memory_space_16 (STORE_RRbuff_ptr_2220_word_address_0 STORE_RRbuff_ptr_2220_data_0) 
    $delay STORE_RRbuff_ptr_2220_store_0 1
    &/ [STORE_RRbuff_ptr_2220_gather_scatter] (type_cast_2222_wire_constant) (STORE_RRbuff_ptr_2220_data_0) 
    // 		QRSbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    //  file prog.linked.opt.aa, line 879
    // QRSbuff_ptr
    $store [STORE_QRSbuff_ptr_2224_store_0] $to memory_space_15 (STORE_QRSbuff_ptr_2224_word_address_0 STORE_QRSbuff_ptr_2224_data_0) 
    $delay STORE_QRSbuff_ptr_2224_store_0 1
    &/ [STORE_QRSbuff_ptr_2224_gather_scatter] (type_cast_2226_wire_constant) (STORE_QRSbuff_ptr_2224_data_0) 
    // 		timeSinceMaxPeak := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 880
    // timeSinceMaxPeak
    $store [STORE_timeSinceMaxPeak_2228_store_0] $to memory_space_25 (STORE_timeSinceMaxPeak_2228_word_address_0 STORE_timeSinceMaxPeak_2228_data_0) 
    $delay STORE_timeSinceMaxPeak_2228_store_0 1
    &/ [STORE_timeSinceMaxPeak_2228_gather_scatter] (type_cast_2230_wire_constant) (STORE_timeSinceMaxPeak_2228_data_0) 
    // 		maxPeak := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 881
    // maxPeak
    $store [STORE_maxPeak_2232_store_0] $to memory_space_22 (STORE_maxPeak_2232_word_address_0 STORE_maxPeak_2232_data_0) 
    $delay STORE_maxPeak_2232_store_0 1
    &/ [STORE_maxPeak_2232_gather_scatter] (type_cast_2234_wire_constant) (STORE_maxPeak_2232_data_0) 
    // 		lastDatum := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 882
    // lastDatum
    $store [STORE_lastDatum_2236_store_0] $to memory_space_20 (STORE_lastDatum_2236_word_address_0 STORE_lastDatum_2236_data_0) 
    $delay STORE_lastDatum_2236_store_0 1
    &/ [STORE_lastDatum_2236_gather_scatter] (type_cast_2238_wire_constant) (STORE_lastDatum_2236_data_0) 
  }
  // end data-path
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 841
  phi_stmt_2110 <=> (branch_block_stmt_2107/bbx_xnph3_bb_1_PhiReq/phi_stmt_2110/phi_stmt_2110_req) (branch_block_stmt_2107/merge_stmt_2109_PhiAck/phi_stmt_2110_ack)
  // CP-DP links for do-while  do_while_stmt_2116
  //  file prog.linked.opt.aa, line 844
  phi_stmt_2118 <=> (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/phi_stmt_2118_loopback_sample_req branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/phi_stmt_2118_entry_sample_req branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/phi_stmt_2118_update_start_) (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/phi_stmt_2118_sample_completed_ branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/phi_stmt_2118_update_completed_)
  // ($cast ($uint<32>) iNsTr_4 )
  type_cast_2121_inst <=> (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/type_cast_2121_Sample/rr branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/type_cast_2121_Update/cr) (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/type_cast_2121_Sample/ra branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/type_cast_2121_Update/ca)
  // 			scevgep6 := @(RRbuff[indexx_x02])
  //  file prog.linked.opt.aa, line 848
  array_obj_ref_2126_index_0_resize <=> (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/array_obj_ref_2126_index_resize_0/index_resize_req) (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/array_obj_ref_2126_index_resize_0/index_resize_ack)
  array_obj_ref_2126_index_0_rename <=> (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/array_obj_ref_2126_index_scale_0/scale_rename_req) (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/array_obj_ref_2126_index_scale_0/scale_rename_ack)
  array_obj_ref_2126_index_offset <=> (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/array_obj_ref_2126_final_index_sum_regn/req) (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/array_obj_ref_2126_final_index_sum_regn/ack)
  array_obj_ref_2126_root_address_inst <=> (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/array_obj_ref_2126_base_plus_offset_sample/rr branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/array_obj_ref_2126_base_plus_offset_update/cr) (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/array_obj_ref_2126_base_plus_offset_sample/ra branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/array_obj_ref_2126_base_plus_offset_update/ca)
  addr_of_2127_final_reg <=> (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/addr_of_2127_request/req branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/addr_of_2127_complete/req) (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/addr_of_2127_request/ack branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/addr_of_2127_complete/ack)
  // 			scevgep5 := @(NOISEbuff[indexx_x02])
  //  file prog.linked.opt.aa, line 849
  array_obj_ref_2131_index_0_resize <=> (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/array_obj_ref_2131_index_resize_0/index_resize_req) (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/array_obj_ref_2131_index_resize_0/index_resize_ack)
  array_obj_ref_2131_index_0_rename <=> (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/array_obj_ref_2131_index_scale_0/scale_rename_req) (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/array_obj_ref_2131_index_scale_0/scale_rename_ack)
  array_obj_ref_2131_index_offset <=> (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/array_obj_ref_2131_final_index_sum_regn/req) (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/array_obj_ref_2131_final_index_sum_regn/ack)
  array_obj_ref_2131_root_address_inst <=> (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/array_obj_ref_2131_base_plus_offset/sum_rename_req) (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/array_obj_ref_2131_base_plus_offset/sum_rename_ack)
  addr_of_2132_final_reg <=> (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/addr_of_2132_request/req branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/addr_of_2132_complete/req) (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/addr_of_2132_request/ack branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/addr_of_2132_complete/ack)
  // 			->(scevgep5) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 850
  ptr_deref_2135_base_resize <=> (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/ptr_deref_2135_base_addr_resize/base_resize_req) (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/ptr_deref_2135_base_addr_resize/base_resize_ack)
  ptr_deref_2135_root_address_inst <=> (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/ptr_deref_2135_base_plus_offset/sum_rename_req) (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/ptr_deref_2135_base_plus_offset/sum_rename_ack)
  ptr_deref_2135_addr_0 <=> (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/ptr_deref_2135_word_addrgen/root_register_req) (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/ptr_deref_2135_word_addrgen/root_register_ack)
  ptr_deref_2135_gather_scatter <=> (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/ptr_deref_2135_Sample/ptr_deref_2135_Split/split_req) (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/ptr_deref_2135_Sample/ptr_deref_2135_Split/split_ack)
  ptr_deref_2135_store_0 <=> (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/ptr_deref_2135_Sample/word_access_start/word_0/rr branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/ptr_deref_2135_Update/word_access_complete/word_0/cr) (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/ptr_deref_2135_Sample/word_access_start/word_0/ra branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/ptr_deref_2135_Update/word_access_complete/word_0/ca)
  // 			->(scevgep6) := ($bitcast ($uint<32>) _b00000000000000000000000011001000  )
  //  file prog.linked.opt.aa, line 851
  ptr_deref_2140_base_resize <=> (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/ptr_deref_2140_base_addr_resize/base_resize_req) (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/ptr_deref_2140_base_addr_resize/base_resize_ack)
  ptr_deref_2140_root_address_inst <=> (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/ptr_deref_2140_base_plus_offset/sum_rename_req) (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/ptr_deref_2140_base_plus_offset/sum_rename_ack)
  ptr_deref_2140_addr_0 <=> (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/ptr_deref_2140_word_addrgen/root_register_req) (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/ptr_deref_2140_word_addrgen/root_register_ack)
  ptr_deref_2140_gather_scatter <=> (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/ptr_deref_2140_Sample/ptr_deref_2140_Split/split_req) (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/ptr_deref_2140_Sample/ptr_deref_2140_Split/split_ack)
  ptr_deref_2140_store_0 <=> (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/ptr_deref_2140_Sample/word_access_start/word_0/rr branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/ptr_deref_2140_Update/word_access_complete/word_0/cr) (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/ptr_deref_2140_Sample/word_access_start/word_0/ra branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/ptr_deref_2140_Update/word_access_complete/word_0/ca)
  // 			iNsTr_4 := (indexx_x02 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 852
  // (indexx_x02 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_2148_inst <=> (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/ADD_u32_u32_2148_Sample/rr branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/ADD_u32_u32_2148_Update/cr) (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/ADD_u32_u32_2148_Sample/ra branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/ADD_u32_u32_2148_Update/ca)
  // 			exitcond := (iNsTr_4 == ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
  //  file prog.linked.opt.aa, line 853
  // (iNsTr_4 == ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
  EQ_u32_u1_2154_inst <=> (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/EQ_u32_u1_2154_Sample/rr branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/EQ_u32_u1_2154_Update/cr) (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/EQ_u32_u1_2154_Sample/ra branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/EQ_u32_u1_2154_Update/ca)
  // ( ~ exitcond )
  NOT_u1_u1_2158_inst <=> (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/NOT_u1_u1_2158_Sample/rr branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/NOT_u1_u1_2158_Update/cr) (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/NOT_u1_u1_2158_Sample/ra branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/NOT_u1_u1_2158_Update/ca)
  do_while_stmt_2116_branch <=> (branch_block_stmt_2107/do_while_stmt_2116/do_while_stmt_2116_loop_body/condition_evaluated) (branch_block_stmt_2107/do_while_stmt_2116/loop_exit/ack branch_block_stmt_2107/do_while_stmt_2116/loop_taken/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 856
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 859
  phi_stmt_2163 <=> (branch_block_stmt_2107/bbx_xnphx_xpreheader_bbx_xnph_PhiReq/phi_stmt_2163/phi_stmt_2163_req) (branch_block_stmt_2107/merge_stmt_2162_PhiAck/phi_stmt_2163_ack)
  // CP-DP links for do-while  do_while_stmt_2169
  //  file prog.linked.opt.aa, line 862
  phi_stmt_2171 <=> (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/phi_stmt_2171_loopback_sample_req branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/phi_stmt_2171_entry_sample_req branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/phi_stmt_2171_update_start_) (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/phi_stmt_2171_sample_completed_ branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/phi_stmt_2171_update_completed_)
  // ($cast ($uint<32>) iNsTr_9 )
  type_cast_2174_inst <=> (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/type_cast_2174_Sample/rr branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/type_cast_2174_Update/cr) (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/type_cast_2174_Sample/ra branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/type_cast_2174_Update/ca)
  // 			scevgep := @(DDCALCbuff[indexx_x11])
  //  file prog.linked.opt.aa, line 866
  array_obj_ref_2179_index_0_resize <=> (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/array_obj_ref_2179_index_resize_0/index_resize_req) (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/array_obj_ref_2179_index_resize_0/index_resize_ack)
  array_obj_ref_2179_index_0_rename <=> (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/array_obj_ref_2179_index_scale_0/scale_rename_req) (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/array_obj_ref_2179_index_scale_0/scale_rename_ack)
  array_obj_ref_2179_index_offset <=> (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/array_obj_ref_2179_final_index_sum_regn/req) (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/array_obj_ref_2179_final_index_sum_regn/ack)
  array_obj_ref_2179_root_address_inst <=> (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/array_obj_ref_2179_base_plus_offset/sum_rename_req) (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/array_obj_ref_2179_base_plus_offset/sum_rename_ack)
  addr_of_2180_final_reg <=> (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/addr_of_2180_request/req branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/addr_of_2180_complete/req) (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/addr_of_2180_request/ack branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/addr_of_2180_complete/ack)
  // 			->(scevgep) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 867
  ptr_deref_2183_base_resize <=> (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/ptr_deref_2183_base_addr_resize/base_resize_req) (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/ptr_deref_2183_base_addr_resize/base_resize_ack)
  ptr_deref_2183_root_address_inst <=> (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/ptr_deref_2183_base_plus_offset/sum_rename_req) (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/ptr_deref_2183_base_plus_offset/sum_rename_ack)
  ptr_deref_2183_addr_0 <=> (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/ptr_deref_2183_word_addrgen/root_register_req) (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/ptr_deref_2183_word_addrgen/root_register_ack)
  ptr_deref_2183_gather_scatter <=> (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/ptr_deref_2183_Sample/ptr_deref_2183_Split/split_req) (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/ptr_deref_2183_Sample/ptr_deref_2183_Split/split_ack)
  ptr_deref_2183_store_0 <=> (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/ptr_deref_2183_Sample/word_access_start/word_0/rr branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/ptr_deref_2183_Update/word_access_complete/word_0/cr) (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/ptr_deref_2183_Sample/word_access_start/word_0/ra branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/ptr_deref_2183_Update/word_access_complete/word_0/ca)
  // 			iNsTr_9 := (indexx_x11 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 868
  // (indexx_x11 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_2191_inst <=> (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/ADD_u32_u32_2191_Sample/rr branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/ADD_u32_u32_2191_Update/cr) (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/ADD_u32_u32_2191_Sample/ra branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/ADD_u32_u32_2191_Update/ca)
  // 			exitcond1 := (iNsTr_9 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
  //  file prog.linked.opt.aa, line 869
  // (iNsTr_9 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
  EQ_u32_u1_2197_inst <=> (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/EQ_u32_u1_2197_Sample/rr branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/EQ_u32_u1_2197_Update/cr) (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/EQ_u32_u1_2197_Sample/ra branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/EQ_u32_u1_2197_Update/ca)
  // ( ~ exitcond1 )
  NOT_u1_u1_2201_inst <=> (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/NOT_u1_u1_2201_Sample/rr branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/NOT_u1_u1_2201_Update/cr) (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/NOT_u1_u1_2201_Sample/ra branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/NOT_u1_u1_2201_Update/ca)
  do_while_stmt_2169_branch <=> (branch_block_stmt_2107/do_while_stmt_2169/do_while_stmt_2169_loop_body/condition_evaluated) (branch_block_stmt_2107/do_while_stmt_2169/loop_exit/ack branch_block_stmt_2107/do_while_stmt_2169/loop_taken/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 872
  // 		maxDer := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 874
  // maxDer
  STORE_maxDer_2204_gather_scatter <=> (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_maxDer_2204_Sample/STORE_maxDer_2204_Split/split_req) (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_maxDer_2204_Sample/STORE_maxDer_2204_Split/split_ack)
  STORE_maxDer_2204_store_0 <=> (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_maxDer_2204_Sample/word_access_start/word_0/rr branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_maxDer_2204_Update/word_access_complete/word_0/cr) (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_maxDer_2204_Sample/word_access_start/word_0/ra branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_maxDer_2204_Update/word_access_complete/word_0/ca)
  // 		DDCALCbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 875
  // DDCALCbuff_ptr
  STORE_DDCALCbuff_ptr_2208_gather_scatter <=> (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_DDCALCbuff_ptr_2208_Sample/STORE_DDCALCbuff_ptr_2208_Split/split_req) (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_DDCALCbuff_ptr_2208_Sample/STORE_DDCALCbuff_ptr_2208_Split/split_ack)
  STORE_DDCALCbuff_ptr_2208_store_0 <=> (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_DDCALCbuff_ptr_2208_Sample/word_access_start/word_0/rr branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_DDCALCbuff_ptr_2208_Update/word_access_complete/word_0/cr) (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_DDCALCbuff_ptr_2208_Sample/word_access_start/word_0/ra branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_DDCALCbuff_ptr_2208_Update/word_access_complete/word_0/ca)
  // 		DDbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 876
  // DDbuff_ptr
  STORE_DDbuff_ptr_2212_gather_scatter <=> (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_DDbuff_ptr_2212_Sample/STORE_DDbuff_ptr_2212_Split/split_req) (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_DDbuff_ptr_2212_Sample/STORE_DDbuff_ptr_2212_Split/split_ack)
  STORE_DDbuff_ptr_2212_store_0 <=> (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_DDbuff_ptr_2212_Sample/word_access_start/word_0/rr branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_DDbuff_ptr_2212_Update/word_access_complete/word_0/cr) (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_DDbuff_ptr_2212_Sample/word_access_start/word_0/ra branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_DDbuff_ptr_2212_Update/word_access_complete/word_0/ca)
  // 		NOISEbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
  //  file prog.linked.opt.aa, line 877
  // NOISEbuff_ptr
  STORE_NOISEbuff_ptr_2216_gather_scatter <=> (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_NOISEbuff_ptr_2216_Sample/STORE_NOISEbuff_ptr_2216_Split/split_req) (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_NOISEbuff_ptr_2216_Sample/STORE_NOISEbuff_ptr_2216_Split/split_ack)
  STORE_NOISEbuff_ptr_2216_store_0 <=> (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_NOISEbuff_ptr_2216_Sample/word_access_start/word_0/rr branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_NOISEbuff_ptr_2216_Update/word_access_complete/word_0/cr) (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_NOISEbuff_ptr_2216_Sample/word_access_start/word_0/ra branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_NOISEbuff_ptr_2216_Update/word_access_complete/word_0/ca)
  // 		RRbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
  //  file prog.linked.opt.aa, line 878
  // RRbuff_ptr
  STORE_RRbuff_ptr_2220_gather_scatter <=> (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_RRbuff_ptr_2220_Sample/STORE_RRbuff_ptr_2220_Split/split_req) (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_RRbuff_ptr_2220_Sample/STORE_RRbuff_ptr_2220_Split/split_ack)
  STORE_RRbuff_ptr_2220_store_0 <=> (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_RRbuff_ptr_2220_Sample/word_access_start/word_0/rr branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_RRbuff_ptr_2220_Update/word_access_complete/word_0/cr) (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_RRbuff_ptr_2220_Sample/word_access_start/word_0/ra branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_RRbuff_ptr_2220_Update/word_access_complete/word_0/ca)
  // 		QRSbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
  //  file prog.linked.opt.aa, line 879
  // QRSbuff_ptr
  STORE_QRSbuff_ptr_2224_gather_scatter <=> (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_QRSbuff_ptr_2224_Sample/STORE_QRSbuff_ptr_2224_Split/split_req) (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_QRSbuff_ptr_2224_Sample/STORE_QRSbuff_ptr_2224_Split/split_ack)
  STORE_QRSbuff_ptr_2224_store_0 <=> (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_QRSbuff_ptr_2224_Sample/word_access_start/word_0/rr branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_QRSbuff_ptr_2224_Update/word_access_complete/word_0/cr) (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_QRSbuff_ptr_2224_Sample/word_access_start/word_0/ra branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_QRSbuff_ptr_2224_Update/word_access_complete/word_0/ca)
  // 		timeSinceMaxPeak := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 880
  // timeSinceMaxPeak
  STORE_timeSinceMaxPeak_2228_gather_scatter <=> (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_timeSinceMaxPeak_2228_Sample/STORE_timeSinceMaxPeak_2228_Split/split_req) (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_timeSinceMaxPeak_2228_Sample/STORE_timeSinceMaxPeak_2228_Split/split_ack)
  STORE_timeSinceMaxPeak_2228_store_0 <=> (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_timeSinceMaxPeak_2228_Sample/word_access_start/word_0/rr branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_timeSinceMaxPeak_2228_Update/word_access_complete/word_0/cr) (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_timeSinceMaxPeak_2228_Sample/word_access_start/word_0/ra branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_timeSinceMaxPeak_2228_Update/word_access_complete/word_0/ca)
  // 		maxPeak := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 881
  // maxPeak
  STORE_maxPeak_2232_gather_scatter <=> (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_maxPeak_2232_Sample/STORE_maxPeak_2232_Split/split_req) (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_maxPeak_2232_Sample/STORE_maxPeak_2232_Split/split_ack)
  STORE_maxPeak_2232_store_0 <=> (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_maxPeak_2232_Sample/word_access_start/word_0/rr branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_maxPeak_2232_Update/word_access_complete/word_0/cr) (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_maxPeak_2232_Sample/word_access_start/word_0/ra branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_maxPeak_2232_Update/word_access_complete/word_0/ca)
  // 		lastDatum := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 882
  // lastDatum
  STORE_lastDatum_2236_gather_scatter <=> (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_lastDatum_2236_Sample/STORE_lastDatum_2236_Split/split_req) (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_lastDatum_2236_Sample/STORE_lastDatum_2236_Split/split_ack)
  STORE_lastDatum_2236_store_0 <=> (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_lastDatum_2236_Sample/word_access_start/word_0/rr branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_lastDatum_2236_Update/word_access_complete/word_0/cr) (branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_lastDatum_2236_Sample/word_access_start/word_0/ra branch_block_stmt_2107/assign_stmt_2207_to_assign_stmt_2239/STORE_lastDatum_2236_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 884
}
$module [initFilt] 
{
  // pipe-declarations for block %initFilt
  //  file prog.linked.opt.aa, line 888
  // pipe-declarations for block %initFilt%body
  //  file prog.linked.opt.aa, line 893
  // pipe-declarations for block %initFilt%body%
  //  file prog.linked.opt.aa, line 896
  // pipe-declarations for block %initFilt%body%
  //  file prog.linked.opt.aa, line 909
  // pipe-declarations for block %initFilt%body%
  //  file prog.linked.opt.aa, line 912
  // pipe-declarations for block %initFilt%body%
  //  file prog.linked.opt.aa, line 925
  // pipe-declarations for block %initFilt%body%
  //  file prog.linked.opt.aa, line 928
  // pipe-declarations for block %initFilt%body%
  //  file prog.linked.opt.aa, line 941
  // pipe-declarations for block %initFilt%body%
  //  file prog.linked.opt.aa, line 952
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_2245] // Branch Block  file prog.linked.opt.aa, line 893
    {
      $P [branch_block_stmt_2245__entry__]
      branch_block_stmt_2245__entry__ <-| ($entry)
      $P [branch_block_stmt_2245__exit__]
      branch_block_stmt_2245__exit__ |-> ($exit)
      $P [bbx_xnph6_bb_1]
      $P [merge_stmt_2247__exit__] 
      $P [do_while_stmt_2254__entry__] 
      $P [do_while_stmt_2254__exit__] 
      $P [bb_1_bbx_xnph4x_xpreheader]
      $P [merge_stmt_2288__exit__] 
      $P [bbx_xnph4x_xpreheader_bbx_xnph4]
      $P [merge_stmt_2290__exit__] 
      $P [do_while_stmt_2297__entry__] 
      $P [do_while_stmt_2297__exit__] 
      $P [bbx_xnph4_bbx_xnphx_xpreheader]
      $P [merge_stmt_2331__exit__] 
      $P [bbx_xnphx_xpreheader_bbx_xnph]
      $P [merge_stmt_2333__exit__] 
      $P [do_while_stmt_2340__entry__] 
      $P [do_while_stmt_2340__exit__] 
      $P [bbx_xnph_xx_x_crit_edge]
      $P [merge_stmt_2374__exit__] 
      $P [assign_stmt_2378_to_assign_stmt_2406__entry__] 
      $P [assign_stmt_2378_to_assign_stmt_2406__exit__] 
      $P [return__]
      $P [merge_stmt_2408__exit__] 
      // do-while-statement  
      //  file prog.linked.opt.aa, line 899
      <o> [do_while_stmt_2254]  $depth 7 $buffering 2 
      {
        $P[do_while_stmt_2254__entry__] 
        $P[do_while_stmt_2254__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_2254_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          // (pipelined) PHI statement phi_stmt_2256
          // 			$phi indexx_x05 := 			  ($cast ($uint<32>) iNsTr_3 ) $on $loopback			  indexx_x05_at_entry $on $entry // type of target is $uint<32>
          $T[phi_stmt_2256_loopback_trigger] 
          $T[phi_stmt_2256_loopback_sample_req_from_phi_seq] 
          $T[phi_stmt_2256_loopback_sample_req] 
          phi_stmt_2256_loopback_trigger <-& (back_edge_to_loop_body)
          phi_stmt_2256_loopback_sample_req <-& (phi_stmt_2256_loopback_sample_req_from_phi_seq)
          $T[phi_stmt_2256_entry_trigger] 
          $T[phi_stmt_2256_entry_sample_req_from_phi_seq] 
          $T[phi_stmt_2256_entry_sample_req] 
          phi_stmt_2256_entry_trigger <-& (first_time_through_loop_body)
          phi_stmt_2256_entry_sample_req <-& (phi_stmt_2256_entry_sample_req_from_phi_seq)
          $T[phi_stmt_2256_sample_start_] 
          $T[phi_stmt_2256_sample_completed_] 
          $T[phi_stmt_2256_update_start_] 
          $T[phi_stmt_2256_update_completed_] 
          phi_stmt_2256_update_start_ o<-& (phi_stmt_2256_update_completed_ 0)
          phi_stmt_2256_sample_start_ o<-& (phi_stmt_2256_sample_completed_ 1)
          $T[phi_stmt_2256_merged_reqs] 
          $transitionmerge [phi_stmt_2256_req_merge] (phi_stmt_2256_entry_sample_req phi_stmt_2256_loopback_sample_req) (phi_stmt_2256_merged_reqs)
          phi_stmt_2256_merged_reqs &-> ($null)
          // ($cast ($uint<32>) iNsTr_3 )
          $T[type_cast_2259_sample_start_] 
          $T[type_cast_2259_sample_completed_] 
          $T[type_cast_2259_update_start_] 
          $T[type_cast_2259_update_completed_] 
          // iNsTr_3
          $T[R_iNsTr_3_2258_sample_start_] 
          $T[R_iNsTr_3_2258_sample_completed_] 
          $T[R_iNsTr_3_2258_update_start_] 
          $T[R_iNsTr_3_2258_update_completed_] 
          // implicit reference
          R_iNsTr_3_2258_sample_start_ <-& ($entry)
          R_iNsTr_3_2258_sample_completed_ <-& (R_iNsTr_3_2258_sample_start_)
          R_iNsTr_3_2258_update_start_ <-& (R_iNsTr_3_2258_sample_completed_)
          R_iNsTr_3_2258_update_completed_ <-& (R_iNsTr_3_2258_update_start_)
          type_cast_2259_sample_start_ <-& (R_iNsTr_3_2258_update_completed_)
          ;;[type_cast_2259_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2259_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2259_sample_start_ &-> (type_cast_2259_Sample)
          type_cast_2259_sample_completed_ <-& (type_cast_2259_Sample)
          type_cast_2259_sample_completed_ &-> ($null)
          type_cast_2259_update_start_ &-> (type_cast_2259_Update)
          type_cast_2259_update_completed_ <-& (type_cast_2259_Update)
          // RAW reenables for iNsTr_3
          R_iNsTr_3_2258_update_start_ o<-& (type_cast_2259_sample_completed_ 1)
          // self-release: 
          type_cast_2259_sample_start_ o<-& (type_cast_2259_sample_completed_ 1)
          type_cast_2259_update_start_ o<-& (type_cast_2259_update_completed_ 0)
          phi_stmt_2256_sample_start_ <-& (type_cast_2259_update_completed_)
          // RAW reenables for ($cast ($uint<32>) iNsTr_3 )
          type_cast_2259_update_start_ o<-& (phi_stmt_2256_sample_completed_ 0)
          // indexx_x05_at_entry
          $T[R_indexx_x05_at_entry_2260_sample_start_] 
          $T[R_indexx_x05_at_entry_2260_sample_completed_] 
          $T[R_indexx_x05_at_entry_2260_update_start_] 
          $T[R_indexx_x05_at_entry_2260_update_completed_] 
          // implicit reference
          R_indexx_x05_at_entry_2260_sample_start_ <-& ($entry)
          R_indexx_x05_at_entry_2260_sample_completed_ <-& (R_indexx_x05_at_entry_2260_sample_start_)
          R_indexx_x05_at_entry_2260_update_start_ <-& (R_indexx_x05_at_entry_2260_sample_completed_)
          R_indexx_x05_at_entry_2260_update_completed_ <-& (R_indexx_x05_at_entry_2260_update_start_)
          phi_stmt_2256_sample_start_ <-& (R_indexx_x05_at_entry_2260_update_completed_)
          // RAW reenables for indexx_x05_at_entry
          R_indexx_x05_at_entry_2260_update_start_ o<-& (phi_stmt_2256_sample_completed_ 1)
          $T[phi_stmt_2256_phi_sequencer_done] 
          phi_stmt_2256_phi_sequencer_done &-> ($null)
          $phisequencer [ phi_stmt_2256_phi_seq] ( phi_stmt_2256_loopback_trigger phi_stmt_2256_entry_trigger  : phi_stmt_2256_sample_start_ : phi_stmt_2256_sample_completed_ ) ( phi_stmt_2256_loopback_sample_req_from_phi_seq phi_stmt_2256_entry_sample_req_from_phi_seq  : phi_stmt_2256_phi_sequencer_done ) 
          condition_evaluated <-& (phi_stmt_2256_sample_completed_)
          // 			scevgep10 := @(LPbuff[indexx_x05])
          //  file prog.linked.opt.aa, line 903
          // Source expression
          // @(LPbuff[indexx_x05])
          $T[addr_of_2265_sample_start_] 
          $T[addr_of_2265_sample_completed_] 
          $T[addr_of_2265_update_start_] 
          $T[addr_of_2265_update_completed_] 
          $T[array_obj_ref_2264_root_address_calculated] 
          $T[array_obj_ref_2264_offset_calculated] 
          $T[array_obj_ref_2264_index_resized_0] 
          $T[array_obj_ref_2264_index_scaled_0] 
          // indexx_x05
          $T[R_indexx_x05_2263_sample_start_] 
          $T[R_indexx_x05_2263_sample_completed_] 
          $T[R_indexx_x05_2263_update_start_] 
          $T[R_indexx_x05_2263_update_completed_] 
          // implicit reference
          R_indexx_x05_2263_sample_start_ <-& (phi_stmt_2256_update_completed_)
          R_indexx_x05_2263_sample_completed_ <-& (R_indexx_x05_2263_sample_start_)
          R_indexx_x05_2263_update_start_ <-& (R_indexx_x05_2263_sample_completed_)
          R_indexx_x05_2263_update_completed_ <-& (R_indexx_x05_2263_update_start_)
          ;;[array_obj_ref_2264_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          R_indexx_x05_2263_update_completed_ &-> (array_obj_ref_2264_index_resize_0)
          array_obj_ref_2264_index_resized_0 <-& (array_obj_ref_2264_index_resize_0)
          ;;[array_obj_ref_2264_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_2264_index_resized_0 &-> (array_obj_ref_2264_index_scale_0)
          array_obj_ref_2264_index_scaled_0 <-& (array_obj_ref_2264_index_scale_0)
          ;;[array_obj_ref_2264_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_2264_index_scaled_0 &-> (array_obj_ref_2264_final_index_sum_regn)
          array_obj_ref_2264_offset_calculated <-& (array_obj_ref_2264_final_index_sum_regn)
          ;;[array_obj_ref_2264_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_2264_offset_calculated &-> (array_obj_ref_2264_base_plus_offset)
          array_obj_ref_2264_root_address_calculated <-& (array_obj_ref_2264_base_plus_offset)
          ;;[addr_of_2265_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_2265_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_2265_sample_start_ <-& (array_obj_ref_2264_root_address_calculated)
          addr_of_2265_sample_start_ &-> (addr_of_2265_request)
          addr_of_2265_sample_completed_ <-& (addr_of_2265_request)
          addr_of_2265_update_start_ &-> (addr_of_2265_complete)
          addr_of_2265_update_completed_ <-& (addr_of_2265_complete)
          // reenables .
          phi_stmt_2256_update_start_ o<-& (addr_of_2265_sample_completed_ 0)
          // self-release 
          addr_of_2265_sample_start_ o<-& (addr_of_2265_sample_completed_ 1)
          addr_of_2265_update_start_ o<-& (addr_of_2265_update_completed_ 0)
          // Target expression
          // (as target) scevgep10
          // scevgep10
          // implicit reference
          // 			->(scevgep10) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
          //  file prog.linked.opt.aa, line 904
          // Target expression
          // ->(scevgep10)
          $T[ptr_deref_2268_sample_start_] 
          $T[ptr_deref_2268_sample_completed_] 
          $T[ptr_deref_2268_update_start_] 
          $T[ptr_deref_2268_update_completed_] 
          $T[ptr_deref_2268_base_address_calculated] 
          // scevgep10
          $T[R_scevgep10_2267_sample_start_] 
          $T[R_scevgep10_2267_sample_completed_] 
          $T[R_scevgep10_2267_update_start_] 
          $T[R_scevgep10_2267_update_completed_] 
          // implicit reference
          R_scevgep10_2267_sample_start_ <-& (addr_of_2265_update_completed_)
          R_scevgep10_2267_sample_completed_ <-& (R_scevgep10_2267_sample_start_)
          R_scevgep10_2267_update_start_ <-& (R_scevgep10_2267_sample_completed_)
          R_scevgep10_2267_update_completed_ <-& (R_scevgep10_2267_update_start_)
          $T[ptr_deref_2268_word_address_calculated] 
          $T[ptr_deref_2268_root_address_calculated] 
          $T[ptr_deref_2268_base_address_resized] 
          ;;[ptr_deref_2268_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_2268_base_address_calculated &-> (ptr_deref_2268_base_addr_resize)
          ptr_deref_2268_base_address_resized <-& (ptr_deref_2268_base_addr_resize)
          ;;[ptr_deref_2268_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_2268_base_address_resized &-> (ptr_deref_2268_base_plus_offset)
          ptr_deref_2268_root_address_calculated <-& (ptr_deref_2268_base_plus_offset)
          ;;[ptr_deref_2268_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_2268_root_address_calculated &-> (ptr_deref_2268_word_addrgen)
          ptr_deref_2268_word_address_calculated <-& (ptr_deref_2268_word_addrgen)
          ;;[ptr_deref_2268_Sample] 
          {
            ;;[ptr_deref_2268_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_2268_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          ptr_deref_2268_sample_start_ <-& (ptr_deref_2268_word_address_calculated)
          // reenable-joins
          addr_of_2265_update_start_ o<-& (ptr_deref_2268_sample_completed_ 0)
          ptr_deref_2268_sample_start_ &-> (ptr_deref_2268_Sample)
          ptr_deref_2268_sample_completed_ <-& (ptr_deref_2268_Sample)
          ptr_deref_2268_sample_completed_ &-> ($null)
          ptr_deref_2268_update_start_ &-> (ptr_deref_2268_Update)
          ptr_deref_2268_update_completed_ <-& (ptr_deref_2268_Update)
          ptr_deref_2268_base_address_calculated <-& (R_scevgep10_2267_update_completed_)
          ptr_deref_2268_sample_start_ <-& (ptr_deref_2268_base_address_calculated)
          // RAW reenables for scevgep10
          addr_of_2265_update_start_ o<-& (ptr_deref_2268_sample_completed_ 0)
          // self-release: 
          ptr_deref_2268_sample_start_ o<-& (ptr_deref_2268_sample_completed_ 1)
          ptr_deref_2268_update_start_ o<-& (ptr_deref_2268_update_completed_ 0)
          // 			iNsTr_3 := (indexx_x05 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          //  file prog.linked.opt.aa, line 905
          // Source expression
          // (indexx_x05 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          $T[ADD_u32_u32_2276_sample_start_] 
          $T[ADD_u32_u32_2276_sample_completed_] 
          $T[ADD_u32_u32_2276_update_start_] 
          $T[ADD_u32_u32_2276_update_completed_] 
          // indexx_x05
          $T[R_indexx_x05_2273_sample_start_] 
          $T[R_indexx_x05_2273_sample_completed_] 
          $T[R_indexx_x05_2273_update_start_] 
          $T[R_indexx_x05_2273_update_completed_] 
          // implicit reference
          R_indexx_x05_2273_sample_start_ <-& (phi_stmt_2256_update_completed_)
          R_indexx_x05_2273_sample_completed_ <-& (R_indexx_x05_2273_sample_start_)
          R_indexx_x05_2273_update_start_ <-& (R_indexx_x05_2273_sample_completed_)
          R_indexx_x05_2273_update_completed_ <-& (R_indexx_x05_2273_update_start_)
          ADD_u32_u32_2276_sample_start_ <-& (R_indexx_x05_2273_update_completed_)
          ;;[ADD_u32_u32_2276_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u32_u32_2276_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u32_u32_2276_sample_start_ &-> (ADD_u32_u32_2276_Sample)
          ADD_u32_u32_2276_sample_completed_ <-& (ADD_u32_u32_2276_Sample)
          ADD_u32_u32_2276_sample_completed_ &-> ($null)
          ADD_u32_u32_2276_update_start_ &-> (ADD_u32_u32_2276_Update)
          ADD_u32_u32_2276_update_completed_ <-& (ADD_u32_u32_2276_Update)
          // RAW reenables for indexx_x05
          phi_stmt_2256_update_start_ o<-& (ADD_u32_u32_2276_sample_completed_ 0)
          // self-release: 
          ADD_u32_u32_2276_sample_start_ o<-& (ADD_u32_u32_2276_sample_completed_ 1)
          ADD_u32_u32_2276_update_start_ o<-& (ADD_u32_u32_2276_update_completed_ 0)
          // Target expression
          // (as target) iNsTr_3
          // iNsTr_3
          // implicit reference
          // WAR dependency: Read: iNsTr_3 before Write: 			iNsTr_3 := (indexx_x05 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          ADD_u32_u32_2276_sample_start_ <-& (phi_stmt_2256_sample_completed_)
          // WAR dependency: release  Read: iNsTr_3 with Write: 			iNsTr_3 := (indexx_x05 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          R_iNsTr_3_2258_sample_start_ o<-& (ADD_u32_u32_2276_update_completed_ 1)
          // 			exitcond4 := (iNsTr_3 == ($bitcast ($uint<32>) _b00000000000000000000000000001010  ))
          //  file prog.linked.opt.aa, line 906
          // Source expression
          // (iNsTr_3 == ($bitcast ($uint<32>) _b00000000000000000000000000001010  ))
          $T[EQ_u32_u1_2282_sample_start_] 
          $T[EQ_u32_u1_2282_sample_completed_] 
          $T[EQ_u32_u1_2282_update_start_] 
          $T[EQ_u32_u1_2282_update_completed_] 
          // iNsTr_3
          $T[R_iNsTr_3_2279_sample_start_] 
          $T[R_iNsTr_3_2279_sample_completed_] 
          $T[R_iNsTr_3_2279_update_start_] 
          $T[R_iNsTr_3_2279_update_completed_] 
          // implicit reference
          R_iNsTr_3_2279_sample_start_ <-& (ADD_u32_u32_2276_update_completed_)
          R_iNsTr_3_2279_sample_completed_ <-& (R_iNsTr_3_2279_sample_start_)
          R_iNsTr_3_2279_update_start_ <-& (R_iNsTr_3_2279_sample_completed_)
          R_iNsTr_3_2279_update_completed_ <-& (R_iNsTr_3_2279_update_start_)
          EQ_u32_u1_2282_sample_start_ <-& (R_iNsTr_3_2279_update_completed_)
          ;;[EQ_u32_u1_2282_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[EQ_u32_u1_2282_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          EQ_u32_u1_2282_sample_start_ &-> (EQ_u32_u1_2282_Sample)
          EQ_u32_u1_2282_sample_completed_ <-& (EQ_u32_u1_2282_Sample)
          EQ_u32_u1_2282_sample_completed_ &-> ($null)
          EQ_u32_u1_2282_update_start_ &-> (EQ_u32_u1_2282_Update)
          EQ_u32_u1_2282_update_completed_ <-& (EQ_u32_u1_2282_Update)
          // RAW reenables for iNsTr_3
          ADD_u32_u32_2276_update_start_ o<-& (EQ_u32_u1_2282_sample_completed_ 0)
          // self-release: 
          EQ_u32_u1_2282_sample_start_ o<-& (EQ_u32_u1_2282_sample_completed_ 1)
          EQ_u32_u1_2282_update_start_ o<-& (EQ_u32_u1_2282_update_completed_ 0)
          // Target expression
          // (as target) exitcond4
          // exitcond4
          // implicit reference
          // ( ~ exitcond4 )
          $T[NOT_u1_u1_2286_sample_start_] 
          $T[NOT_u1_u1_2286_sample_completed_] 
          $T[NOT_u1_u1_2286_update_start_] 
          $T[NOT_u1_u1_2286_update_completed_] 
          // exitcond4
          $T[R_exitcond4_2285_sample_start_] 
          $T[R_exitcond4_2285_sample_completed_] 
          $T[R_exitcond4_2285_update_start_] 
          $T[R_exitcond4_2285_update_completed_] 
          // implicit reference
          R_exitcond4_2285_sample_start_ <-& (EQ_u32_u1_2282_update_completed_)
          R_exitcond4_2285_sample_completed_ <-& (R_exitcond4_2285_sample_start_)
          R_exitcond4_2285_update_start_ <-& (R_exitcond4_2285_sample_completed_)
          R_exitcond4_2285_update_completed_ <-& (R_exitcond4_2285_update_start_)
          NOT_u1_u1_2286_sample_start_ <-& (R_exitcond4_2285_update_completed_)
          ;;[NOT_u1_u1_2286_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[NOT_u1_u1_2286_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          NOT_u1_u1_2286_sample_start_ &-> (NOT_u1_u1_2286_Sample)
          NOT_u1_u1_2286_sample_completed_ <-& (NOT_u1_u1_2286_Sample)
          NOT_u1_u1_2286_sample_completed_ &-> ($null)
          NOT_u1_u1_2286_update_start_ &-> (NOT_u1_u1_2286_Update)
          NOT_u1_u1_2286_update_completed_ <-& (NOT_u1_u1_2286_Update)
          // flow-through
          NOT_u1_u1_2286_update_start_ <-& (NOT_u1_u1_2286_sample_completed_)
          NOT_u1_u1_2286_update_completed_ &-> (condition_evaluated)
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // reenable across ring for memory space memory_space_9
          // leading and trailing sets are the same... no ring dependency
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_2254__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_2254_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_2254__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_2254_loop_body : condition_evaluated
        $bind do_while_stmt_2254__entry__  => do_while_stmt_2254_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_2254_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_2254__exit__)
      }
      do_while_stmt_2254__entry__ |-> (do_while_stmt_2254)
      do_while_stmt_2254__exit__ <-| (do_while_stmt_2254)
      // do-while-statement  
      //  file prog.linked.opt.aa, line 915
      <o> [do_while_stmt_2297]  $depth 7 $buffering 2 
      {
        $P[do_while_stmt_2297__entry__] 
        $P[do_while_stmt_2297__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_2297_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          // (pipelined) PHI statement phi_stmt_2299
          // 			$phi indexx_x13 := 			  ($cast ($uint<32>) iNsTr_8 ) $on $loopback			  indexx_x13_at_entry $on $entry // type of target is $uint<32>
          $T[phi_stmt_2299_loopback_trigger] 
          $T[phi_stmt_2299_loopback_sample_req_from_phi_seq] 
          $T[phi_stmt_2299_loopback_sample_req] 
          phi_stmt_2299_loopback_trigger <-& (back_edge_to_loop_body)
          phi_stmt_2299_loopback_sample_req <-& (phi_stmt_2299_loopback_sample_req_from_phi_seq)
          $T[phi_stmt_2299_entry_trigger] 
          $T[phi_stmt_2299_entry_sample_req_from_phi_seq] 
          $T[phi_stmt_2299_entry_sample_req] 
          phi_stmt_2299_entry_trigger <-& (first_time_through_loop_body)
          phi_stmt_2299_entry_sample_req <-& (phi_stmt_2299_entry_sample_req_from_phi_seq)
          $T[phi_stmt_2299_sample_start_] 
          $T[phi_stmt_2299_sample_completed_] 
          $T[phi_stmt_2299_update_start_] 
          $T[phi_stmt_2299_update_completed_] 
          phi_stmt_2299_update_start_ o<-& (phi_stmt_2299_update_completed_ 0)
          phi_stmt_2299_sample_start_ o<-& (phi_stmt_2299_sample_completed_ 1)
          $T[phi_stmt_2299_merged_reqs] 
          $transitionmerge [phi_stmt_2299_req_merge] (phi_stmt_2299_entry_sample_req phi_stmt_2299_loopback_sample_req) (phi_stmt_2299_merged_reqs)
          phi_stmt_2299_merged_reqs &-> ($null)
          // ($cast ($uint<32>) iNsTr_8 )
          $T[type_cast_2302_sample_start_] 
          $T[type_cast_2302_sample_completed_] 
          $T[type_cast_2302_update_start_] 
          $T[type_cast_2302_update_completed_] 
          // iNsTr_8
          $T[R_iNsTr_8_2301_sample_start_] 
          $T[R_iNsTr_8_2301_sample_completed_] 
          $T[R_iNsTr_8_2301_update_start_] 
          $T[R_iNsTr_8_2301_update_completed_] 
          // implicit reference
          R_iNsTr_8_2301_sample_start_ <-& ($entry)
          R_iNsTr_8_2301_sample_completed_ <-& (R_iNsTr_8_2301_sample_start_)
          R_iNsTr_8_2301_update_start_ <-& (R_iNsTr_8_2301_sample_completed_)
          R_iNsTr_8_2301_update_completed_ <-& (R_iNsTr_8_2301_update_start_)
          type_cast_2302_sample_start_ <-& (R_iNsTr_8_2301_update_completed_)
          ;;[type_cast_2302_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2302_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2302_sample_start_ &-> (type_cast_2302_Sample)
          type_cast_2302_sample_completed_ <-& (type_cast_2302_Sample)
          type_cast_2302_sample_completed_ &-> ($null)
          type_cast_2302_update_start_ &-> (type_cast_2302_Update)
          type_cast_2302_update_completed_ <-& (type_cast_2302_Update)
          // RAW reenables for iNsTr_8
          R_iNsTr_8_2301_update_start_ o<-& (type_cast_2302_sample_completed_ 1)
          // self-release: 
          type_cast_2302_sample_start_ o<-& (type_cast_2302_sample_completed_ 1)
          type_cast_2302_update_start_ o<-& (type_cast_2302_update_completed_ 0)
          phi_stmt_2299_sample_start_ <-& (type_cast_2302_update_completed_)
          // RAW reenables for ($cast ($uint<32>) iNsTr_8 )
          type_cast_2302_update_start_ o<-& (phi_stmt_2299_sample_completed_ 0)
          // indexx_x13_at_entry
          $T[R_indexx_x13_at_entry_2303_sample_start_] 
          $T[R_indexx_x13_at_entry_2303_sample_completed_] 
          $T[R_indexx_x13_at_entry_2303_update_start_] 
          $T[R_indexx_x13_at_entry_2303_update_completed_] 
          // implicit reference
          R_indexx_x13_at_entry_2303_sample_start_ <-& ($entry)
          R_indexx_x13_at_entry_2303_sample_completed_ <-& (R_indexx_x13_at_entry_2303_sample_start_)
          R_indexx_x13_at_entry_2303_update_start_ <-& (R_indexx_x13_at_entry_2303_sample_completed_)
          R_indexx_x13_at_entry_2303_update_completed_ <-& (R_indexx_x13_at_entry_2303_update_start_)
          phi_stmt_2299_sample_start_ <-& (R_indexx_x13_at_entry_2303_update_completed_)
          // RAW reenables for indexx_x13_at_entry
          R_indexx_x13_at_entry_2303_update_start_ o<-& (phi_stmt_2299_sample_completed_ 1)
          $T[phi_stmt_2299_phi_sequencer_done] 
          phi_stmt_2299_phi_sequencer_done &-> ($null)
          $phisequencer [ phi_stmt_2299_phi_seq] ( phi_stmt_2299_loopback_trigger phi_stmt_2299_entry_trigger  : phi_stmt_2299_sample_start_ : phi_stmt_2299_sample_completed_ ) ( phi_stmt_2299_loopback_sample_req_from_phi_seq phi_stmt_2299_entry_sample_req_from_phi_seq  : phi_stmt_2299_phi_sequencer_done ) 
          condition_evaluated <-& (phi_stmt_2299_sample_completed_)
          // 			scevgep8 := @(HPbuff[indexx_x13])
          //  file prog.linked.opt.aa, line 919
          // Source expression
          // @(HPbuff[indexx_x13])
          $T[addr_of_2308_sample_start_] 
          $T[addr_of_2308_sample_completed_] 
          $T[addr_of_2308_update_start_] 
          $T[addr_of_2308_update_completed_] 
          $T[array_obj_ref_2307_root_address_calculated] 
          $T[array_obj_ref_2307_offset_calculated] 
          $T[array_obj_ref_2307_index_resized_0] 
          $T[array_obj_ref_2307_index_scaled_0] 
          // indexx_x13
          $T[R_indexx_x13_2306_sample_start_] 
          $T[R_indexx_x13_2306_sample_completed_] 
          $T[R_indexx_x13_2306_update_start_] 
          $T[R_indexx_x13_2306_update_completed_] 
          // implicit reference
          R_indexx_x13_2306_sample_start_ <-& (phi_stmt_2299_update_completed_)
          R_indexx_x13_2306_sample_completed_ <-& (R_indexx_x13_2306_sample_start_)
          R_indexx_x13_2306_update_start_ <-& (R_indexx_x13_2306_sample_completed_)
          R_indexx_x13_2306_update_completed_ <-& (R_indexx_x13_2306_update_start_)
          ;;[array_obj_ref_2307_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          R_indexx_x13_2306_update_completed_ &-> (array_obj_ref_2307_index_resize_0)
          array_obj_ref_2307_index_resized_0 <-& (array_obj_ref_2307_index_resize_0)
          ;;[array_obj_ref_2307_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_2307_index_resized_0 &-> (array_obj_ref_2307_index_scale_0)
          array_obj_ref_2307_index_scaled_0 <-& (array_obj_ref_2307_index_scale_0)
          ;;[array_obj_ref_2307_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_2307_index_scaled_0 &-> (array_obj_ref_2307_final_index_sum_regn)
          array_obj_ref_2307_offset_calculated <-& (array_obj_ref_2307_final_index_sum_regn)
          ;;[array_obj_ref_2307_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_2307_offset_calculated &-> (array_obj_ref_2307_base_plus_offset)
          array_obj_ref_2307_root_address_calculated <-& (array_obj_ref_2307_base_plus_offset)
          ;;[addr_of_2308_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_2308_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_2308_sample_start_ <-& (array_obj_ref_2307_root_address_calculated)
          addr_of_2308_sample_start_ &-> (addr_of_2308_request)
          addr_of_2308_sample_completed_ <-& (addr_of_2308_request)
          addr_of_2308_update_start_ &-> (addr_of_2308_complete)
          addr_of_2308_update_completed_ <-& (addr_of_2308_complete)
          // reenables .
          phi_stmt_2299_update_start_ o<-& (addr_of_2308_sample_completed_ 0)
          // self-release 
          addr_of_2308_sample_start_ o<-& (addr_of_2308_sample_completed_ 1)
          addr_of_2308_update_start_ o<-& (addr_of_2308_update_completed_ 0)
          // Target expression
          // (as target) scevgep8
          // scevgep8
          // implicit reference
          // 			->(scevgep8) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
          //  file prog.linked.opt.aa, line 920
          // Target expression
          // ->(scevgep8)
          $T[ptr_deref_2311_sample_start_] 
          $T[ptr_deref_2311_sample_completed_] 
          $T[ptr_deref_2311_update_start_] 
          $T[ptr_deref_2311_update_completed_] 
          $T[ptr_deref_2311_base_address_calculated] 
          // scevgep8
          $T[R_scevgep8_2310_sample_start_] 
          $T[R_scevgep8_2310_sample_completed_] 
          $T[R_scevgep8_2310_update_start_] 
          $T[R_scevgep8_2310_update_completed_] 
          // implicit reference
          R_scevgep8_2310_sample_start_ <-& (addr_of_2308_update_completed_)
          R_scevgep8_2310_sample_completed_ <-& (R_scevgep8_2310_sample_start_)
          R_scevgep8_2310_update_start_ <-& (R_scevgep8_2310_sample_completed_)
          R_scevgep8_2310_update_completed_ <-& (R_scevgep8_2310_update_start_)
          $T[ptr_deref_2311_word_address_calculated] 
          $T[ptr_deref_2311_root_address_calculated] 
          $T[ptr_deref_2311_base_address_resized] 
          ;;[ptr_deref_2311_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_2311_base_address_calculated &-> (ptr_deref_2311_base_addr_resize)
          ptr_deref_2311_base_address_resized <-& (ptr_deref_2311_base_addr_resize)
          ;;[ptr_deref_2311_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_2311_base_address_resized &-> (ptr_deref_2311_base_plus_offset)
          ptr_deref_2311_root_address_calculated <-& (ptr_deref_2311_base_plus_offset)
          ;;[ptr_deref_2311_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_2311_root_address_calculated &-> (ptr_deref_2311_word_addrgen)
          ptr_deref_2311_word_address_calculated <-& (ptr_deref_2311_word_addrgen)
          ;;[ptr_deref_2311_Sample] 
          {
            ;;[ptr_deref_2311_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_2311_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          ptr_deref_2311_sample_start_ <-& (ptr_deref_2311_word_address_calculated)
          // reenable-joins
          addr_of_2308_update_start_ o<-& (ptr_deref_2311_sample_completed_ 0)
          ptr_deref_2311_sample_start_ &-> (ptr_deref_2311_Sample)
          ptr_deref_2311_sample_completed_ <-& (ptr_deref_2311_Sample)
          ptr_deref_2311_sample_completed_ &-> ($null)
          ptr_deref_2311_update_start_ &-> (ptr_deref_2311_Update)
          ptr_deref_2311_update_completed_ <-& (ptr_deref_2311_Update)
          ptr_deref_2311_base_address_calculated <-& (R_scevgep8_2310_update_completed_)
          ptr_deref_2311_sample_start_ <-& (ptr_deref_2311_base_address_calculated)
          // RAW reenables for scevgep8
          addr_of_2308_update_start_ o<-& (ptr_deref_2311_sample_completed_ 0)
          // self-release: 
          ptr_deref_2311_sample_start_ o<-& (ptr_deref_2311_sample_completed_ 1)
          ptr_deref_2311_update_start_ o<-& (ptr_deref_2311_update_completed_ 0)
          // 			iNsTr_8 := (indexx_x13 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          //  file prog.linked.opt.aa, line 921
          // Source expression
          // (indexx_x13 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          $T[ADD_u32_u32_2319_sample_start_] 
          $T[ADD_u32_u32_2319_sample_completed_] 
          $T[ADD_u32_u32_2319_update_start_] 
          $T[ADD_u32_u32_2319_update_completed_] 
          // indexx_x13
          $T[R_indexx_x13_2316_sample_start_] 
          $T[R_indexx_x13_2316_sample_completed_] 
          $T[R_indexx_x13_2316_update_start_] 
          $T[R_indexx_x13_2316_update_completed_] 
          // implicit reference
          R_indexx_x13_2316_sample_start_ <-& (phi_stmt_2299_update_completed_)
          R_indexx_x13_2316_sample_completed_ <-& (R_indexx_x13_2316_sample_start_)
          R_indexx_x13_2316_update_start_ <-& (R_indexx_x13_2316_sample_completed_)
          R_indexx_x13_2316_update_completed_ <-& (R_indexx_x13_2316_update_start_)
          ADD_u32_u32_2319_sample_start_ <-& (R_indexx_x13_2316_update_completed_)
          ;;[ADD_u32_u32_2319_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u32_u32_2319_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u32_u32_2319_sample_start_ &-> (ADD_u32_u32_2319_Sample)
          ADD_u32_u32_2319_sample_completed_ <-& (ADD_u32_u32_2319_Sample)
          ADD_u32_u32_2319_sample_completed_ &-> ($null)
          ADD_u32_u32_2319_update_start_ &-> (ADD_u32_u32_2319_Update)
          ADD_u32_u32_2319_update_completed_ <-& (ADD_u32_u32_2319_Update)
          // RAW reenables for indexx_x13
          phi_stmt_2299_update_start_ o<-& (ADD_u32_u32_2319_sample_completed_ 0)
          // self-release: 
          ADD_u32_u32_2319_sample_start_ o<-& (ADD_u32_u32_2319_sample_completed_ 1)
          ADD_u32_u32_2319_update_start_ o<-& (ADD_u32_u32_2319_update_completed_ 0)
          // Target expression
          // (as target) iNsTr_8
          // iNsTr_8
          // implicit reference
          // WAR dependency: Read: iNsTr_8 before Write: 			iNsTr_8 := (indexx_x13 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          ADD_u32_u32_2319_sample_start_ <-& (phi_stmt_2299_sample_completed_)
          // WAR dependency: release  Read: iNsTr_8 with Write: 			iNsTr_8 := (indexx_x13 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          R_iNsTr_8_2301_sample_start_ o<-& (ADD_u32_u32_2319_update_completed_ 1)
          // 			exitcond := (iNsTr_8 == ($bitcast ($uint<32>) _b00000000000000000000000000011001  ))
          //  file prog.linked.opt.aa, line 922
          // Source expression
          // (iNsTr_8 == ($bitcast ($uint<32>) _b00000000000000000000000000011001  ))
          $T[EQ_u32_u1_2325_sample_start_] 
          $T[EQ_u32_u1_2325_sample_completed_] 
          $T[EQ_u32_u1_2325_update_start_] 
          $T[EQ_u32_u1_2325_update_completed_] 
          // iNsTr_8
          $T[R_iNsTr_8_2322_sample_start_] 
          $T[R_iNsTr_8_2322_sample_completed_] 
          $T[R_iNsTr_8_2322_update_start_] 
          $T[R_iNsTr_8_2322_update_completed_] 
          // implicit reference
          R_iNsTr_8_2322_sample_start_ <-& (ADD_u32_u32_2319_update_completed_)
          R_iNsTr_8_2322_sample_completed_ <-& (R_iNsTr_8_2322_sample_start_)
          R_iNsTr_8_2322_update_start_ <-& (R_iNsTr_8_2322_sample_completed_)
          R_iNsTr_8_2322_update_completed_ <-& (R_iNsTr_8_2322_update_start_)
          EQ_u32_u1_2325_sample_start_ <-& (R_iNsTr_8_2322_update_completed_)
          ;;[EQ_u32_u1_2325_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[EQ_u32_u1_2325_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          EQ_u32_u1_2325_sample_start_ &-> (EQ_u32_u1_2325_Sample)
          EQ_u32_u1_2325_sample_completed_ <-& (EQ_u32_u1_2325_Sample)
          EQ_u32_u1_2325_sample_completed_ &-> ($null)
          EQ_u32_u1_2325_update_start_ &-> (EQ_u32_u1_2325_Update)
          EQ_u32_u1_2325_update_completed_ <-& (EQ_u32_u1_2325_Update)
          // RAW reenables for iNsTr_8
          ADD_u32_u32_2319_update_start_ o<-& (EQ_u32_u1_2325_sample_completed_ 0)
          // self-release: 
          EQ_u32_u1_2325_sample_start_ o<-& (EQ_u32_u1_2325_sample_completed_ 1)
          EQ_u32_u1_2325_update_start_ o<-& (EQ_u32_u1_2325_update_completed_ 0)
          // Target expression
          // (as target) exitcond
          // exitcond
          // implicit reference
          // ( ~ exitcond )
          $T[NOT_u1_u1_2329_sample_start_] 
          $T[NOT_u1_u1_2329_sample_completed_] 
          $T[NOT_u1_u1_2329_update_start_] 
          $T[NOT_u1_u1_2329_update_completed_] 
          // exitcond
          $T[R_exitcond_2328_sample_start_] 
          $T[R_exitcond_2328_sample_completed_] 
          $T[R_exitcond_2328_update_start_] 
          $T[R_exitcond_2328_update_completed_] 
          // implicit reference
          R_exitcond_2328_sample_start_ <-& (EQ_u32_u1_2325_update_completed_)
          R_exitcond_2328_sample_completed_ <-& (R_exitcond_2328_sample_start_)
          R_exitcond_2328_update_start_ <-& (R_exitcond_2328_sample_completed_)
          R_exitcond_2328_update_completed_ <-& (R_exitcond_2328_update_start_)
          NOT_u1_u1_2329_sample_start_ <-& (R_exitcond_2328_update_completed_)
          ;;[NOT_u1_u1_2329_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[NOT_u1_u1_2329_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          NOT_u1_u1_2329_sample_start_ &-> (NOT_u1_u1_2329_Sample)
          NOT_u1_u1_2329_sample_completed_ <-& (NOT_u1_u1_2329_Sample)
          NOT_u1_u1_2329_sample_completed_ &-> ($null)
          NOT_u1_u1_2329_update_start_ &-> (NOT_u1_u1_2329_Update)
          NOT_u1_u1_2329_update_completed_ <-& (NOT_u1_u1_2329_Update)
          // flow-through
          NOT_u1_u1_2329_update_start_ <-& (NOT_u1_u1_2329_sample_completed_)
          NOT_u1_u1_2329_update_completed_ &-> (condition_evaluated)
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // reenable across ring for memory space memory_space_6
          // leading and trailing sets are the same... no ring dependency
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_2297__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_2297_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_2297__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_2297_loop_body : condition_evaluated
        $bind do_while_stmt_2297__entry__  => do_while_stmt_2297_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_2297_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_2297__exit__)
      }
      do_while_stmt_2297__entry__ |-> (do_while_stmt_2297)
      do_while_stmt_2297__exit__ <-| (do_while_stmt_2297)
      // do-while-statement  
      //  file prog.linked.opt.aa, line 931
      <o> [do_while_stmt_2340]  $depth 7 $buffering 2 
      {
        $P[do_while_stmt_2340__entry__] 
        $P[do_while_stmt_2340__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_2340_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          // (pipelined) PHI statement phi_stmt_2342
          // 			$phi indexx_x21 := 			  ($cast ($uint<32>) iNsTr_13 ) $on $loopback			  indexx_x21_at_entry $on $entry // type of target is $uint<32>
          $T[phi_stmt_2342_loopback_trigger] 
          $T[phi_stmt_2342_loopback_sample_req_from_phi_seq] 
          $T[phi_stmt_2342_loopback_sample_req] 
          phi_stmt_2342_loopback_trigger <-& (back_edge_to_loop_body)
          phi_stmt_2342_loopback_sample_req <-& (phi_stmt_2342_loopback_sample_req_from_phi_seq)
          $T[phi_stmt_2342_entry_trigger] 
          $T[phi_stmt_2342_entry_sample_req_from_phi_seq] 
          $T[phi_stmt_2342_entry_sample_req] 
          phi_stmt_2342_entry_trigger <-& (first_time_through_loop_body)
          phi_stmt_2342_entry_sample_req <-& (phi_stmt_2342_entry_sample_req_from_phi_seq)
          $T[phi_stmt_2342_sample_start_] 
          $T[phi_stmt_2342_sample_completed_] 
          $T[phi_stmt_2342_update_start_] 
          $T[phi_stmt_2342_update_completed_] 
          phi_stmt_2342_update_start_ o<-& (phi_stmt_2342_update_completed_ 0)
          phi_stmt_2342_sample_start_ o<-& (phi_stmt_2342_sample_completed_ 1)
          $T[phi_stmt_2342_merged_reqs] 
          $transitionmerge [phi_stmt_2342_req_merge] (phi_stmt_2342_entry_sample_req phi_stmt_2342_loopback_sample_req) (phi_stmt_2342_merged_reqs)
          phi_stmt_2342_merged_reqs &-> ($null)
          // ($cast ($uint<32>) iNsTr_13 )
          $T[type_cast_2345_sample_start_] 
          $T[type_cast_2345_sample_completed_] 
          $T[type_cast_2345_update_start_] 
          $T[type_cast_2345_update_completed_] 
          // iNsTr_13
          $T[R_iNsTr_13_2344_sample_start_] 
          $T[R_iNsTr_13_2344_sample_completed_] 
          $T[R_iNsTr_13_2344_update_start_] 
          $T[R_iNsTr_13_2344_update_completed_] 
          // implicit reference
          R_iNsTr_13_2344_sample_start_ <-& ($entry)
          R_iNsTr_13_2344_sample_completed_ <-& (R_iNsTr_13_2344_sample_start_)
          R_iNsTr_13_2344_update_start_ <-& (R_iNsTr_13_2344_sample_completed_)
          R_iNsTr_13_2344_update_completed_ <-& (R_iNsTr_13_2344_update_start_)
          type_cast_2345_sample_start_ <-& (R_iNsTr_13_2344_update_completed_)
          ;;[type_cast_2345_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2345_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2345_sample_start_ &-> (type_cast_2345_Sample)
          type_cast_2345_sample_completed_ <-& (type_cast_2345_Sample)
          type_cast_2345_sample_completed_ &-> ($null)
          type_cast_2345_update_start_ &-> (type_cast_2345_Update)
          type_cast_2345_update_completed_ <-& (type_cast_2345_Update)
          // RAW reenables for iNsTr_13
          R_iNsTr_13_2344_update_start_ o<-& (type_cast_2345_sample_completed_ 1)
          // self-release: 
          type_cast_2345_sample_start_ o<-& (type_cast_2345_sample_completed_ 1)
          type_cast_2345_update_start_ o<-& (type_cast_2345_update_completed_ 0)
          phi_stmt_2342_sample_start_ <-& (type_cast_2345_update_completed_)
          // RAW reenables for ($cast ($uint<32>) iNsTr_13 )
          type_cast_2345_update_start_ o<-& (phi_stmt_2342_sample_completed_ 0)
          // indexx_x21_at_entry
          $T[R_indexx_x21_at_entry_2346_sample_start_] 
          $T[R_indexx_x21_at_entry_2346_sample_completed_] 
          $T[R_indexx_x21_at_entry_2346_update_start_] 
          $T[R_indexx_x21_at_entry_2346_update_completed_] 
          // implicit reference
          R_indexx_x21_at_entry_2346_sample_start_ <-& ($entry)
          R_indexx_x21_at_entry_2346_sample_completed_ <-& (R_indexx_x21_at_entry_2346_sample_start_)
          R_indexx_x21_at_entry_2346_update_start_ <-& (R_indexx_x21_at_entry_2346_sample_completed_)
          R_indexx_x21_at_entry_2346_update_completed_ <-& (R_indexx_x21_at_entry_2346_update_start_)
          phi_stmt_2342_sample_start_ <-& (R_indexx_x21_at_entry_2346_update_completed_)
          // RAW reenables for indexx_x21_at_entry
          R_indexx_x21_at_entry_2346_update_start_ o<-& (phi_stmt_2342_sample_completed_ 1)
          $T[phi_stmt_2342_phi_sequencer_done] 
          phi_stmt_2342_phi_sequencer_done &-> ($null)
          $phisequencer [ phi_stmt_2342_phi_seq] ( phi_stmt_2342_loopback_trigger phi_stmt_2342_entry_trigger  : phi_stmt_2342_sample_start_ : phi_stmt_2342_sample_completed_ ) ( phi_stmt_2342_loopback_sample_req_from_phi_seq phi_stmt_2342_entry_sample_req_from_phi_seq  : phi_stmt_2342_phi_sequencer_done ) 
          condition_evaluated <-& (phi_stmt_2342_sample_completed_)
          // 			scevgep := @(DERIVbuff[indexx_x21])
          //  file prog.linked.opt.aa, line 935
          // Source expression
          // @(DERIVbuff[indexx_x21])
          $T[addr_of_2351_sample_start_] 
          $T[addr_of_2351_sample_completed_] 
          $T[addr_of_2351_update_start_] 
          $T[addr_of_2351_update_completed_] 
          $T[array_obj_ref_2350_root_address_calculated] 
          $T[array_obj_ref_2350_offset_calculated] 
          $T[array_obj_ref_2350_index_resized_0] 
          $T[array_obj_ref_2350_index_scaled_0] 
          // indexx_x21
          $T[R_indexx_x21_2349_sample_start_] 
          $T[R_indexx_x21_2349_sample_completed_] 
          $T[R_indexx_x21_2349_update_start_] 
          $T[R_indexx_x21_2349_update_completed_] 
          // implicit reference
          R_indexx_x21_2349_sample_start_ <-& (phi_stmt_2342_update_completed_)
          R_indexx_x21_2349_sample_completed_ <-& (R_indexx_x21_2349_sample_start_)
          R_indexx_x21_2349_update_start_ <-& (R_indexx_x21_2349_sample_completed_)
          R_indexx_x21_2349_update_completed_ <-& (R_indexx_x21_2349_update_start_)
          ;;[array_obj_ref_2350_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          R_indexx_x21_2349_update_completed_ &-> (array_obj_ref_2350_index_resize_0)
          array_obj_ref_2350_index_resized_0 <-& (array_obj_ref_2350_index_resize_0)
          ;;[array_obj_ref_2350_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_2350_index_resized_0 &-> (array_obj_ref_2350_index_scale_0)
          array_obj_ref_2350_index_scaled_0 <-& (array_obj_ref_2350_index_scale_0)
          ;;[array_obj_ref_2350_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_2350_index_scaled_0 &-> (array_obj_ref_2350_final_index_sum_regn)
          array_obj_ref_2350_offset_calculated <-& (array_obj_ref_2350_final_index_sum_regn)
          ;;[array_obj_ref_2350_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_2350_offset_calculated &-> (array_obj_ref_2350_base_plus_offset)
          array_obj_ref_2350_root_address_calculated <-& (array_obj_ref_2350_base_plus_offset)
          ;;[addr_of_2351_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_2351_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_2351_sample_start_ <-& (array_obj_ref_2350_root_address_calculated)
          addr_of_2351_sample_start_ &-> (addr_of_2351_request)
          addr_of_2351_sample_completed_ <-& (addr_of_2351_request)
          addr_of_2351_update_start_ &-> (addr_of_2351_complete)
          addr_of_2351_update_completed_ <-& (addr_of_2351_complete)
          // reenables .
          phi_stmt_2342_update_start_ o<-& (addr_of_2351_sample_completed_ 0)
          // self-release 
          addr_of_2351_sample_start_ o<-& (addr_of_2351_sample_completed_ 1)
          addr_of_2351_update_start_ o<-& (addr_of_2351_update_completed_ 0)
          // Target expression
          // (as target) scevgep
          // scevgep
          // implicit reference
          // 			->(scevgep) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
          //  file prog.linked.opt.aa, line 936
          // Target expression
          // ->(scevgep)
          $T[ptr_deref_2354_sample_start_] 
          $T[ptr_deref_2354_sample_completed_] 
          $T[ptr_deref_2354_update_start_] 
          $T[ptr_deref_2354_update_completed_] 
          $T[ptr_deref_2354_base_address_calculated] 
          // scevgep
          $T[R_scevgep_2353_sample_start_] 
          $T[R_scevgep_2353_sample_completed_] 
          $T[R_scevgep_2353_update_start_] 
          $T[R_scevgep_2353_update_completed_] 
          // implicit reference
          R_scevgep_2353_sample_start_ <-& (addr_of_2351_update_completed_)
          R_scevgep_2353_sample_completed_ <-& (R_scevgep_2353_sample_start_)
          R_scevgep_2353_update_start_ <-& (R_scevgep_2353_sample_completed_)
          R_scevgep_2353_update_completed_ <-& (R_scevgep_2353_update_start_)
          $T[ptr_deref_2354_word_address_calculated] 
          $T[ptr_deref_2354_root_address_calculated] 
          $T[ptr_deref_2354_base_address_resized] 
          ;;[ptr_deref_2354_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_2354_base_address_calculated &-> (ptr_deref_2354_base_addr_resize)
          ptr_deref_2354_base_address_resized <-& (ptr_deref_2354_base_addr_resize)
          ;;[ptr_deref_2354_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_2354_base_address_resized &-> (ptr_deref_2354_base_plus_offset)
          ptr_deref_2354_root_address_calculated <-& (ptr_deref_2354_base_plus_offset)
          ;;[ptr_deref_2354_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_2354_root_address_calculated &-> (ptr_deref_2354_word_addrgen)
          ptr_deref_2354_word_address_calculated <-& (ptr_deref_2354_word_addrgen)
          ;;[ptr_deref_2354_Sample] 
          {
            ;;[ptr_deref_2354_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_2354_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          ptr_deref_2354_sample_start_ <-& (ptr_deref_2354_word_address_calculated)
          // reenable-joins
          addr_of_2351_update_start_ o<-& (ptr_deref_2354_sample_completed_ 0)
          ptr_deref_2354_sample_start_ &-> (ptr_deref_2354_Sample)
          ptr_deref_2354_sample_completed_ <-& (ptr_deref_2354_Sample)
          ptr_deref_2354_sample_completed_ &-> ($null)
          ptr_deref_2354_update_start_ &-> (ptr_deref_2354_Update)
          ptr_deref_2354_update_completed_ <-& (ptr_deref_2354_Update)
          ptr_deref_2354_base_address_calculated <-& (R_scevgep_2353_update_completed_)
          ptr_deref_2354_sample_start_ <-& (ptr_deref_2354_base_address_calculated)
          // RAW reenables for scevgep
          addr_of_2351_update_start_ o<-& (ptr_deref_2354_sample_completed_ 0)
          // self-release: 
          ptr_deref_2354_sample_start_ o<-& (ptr_deref_2354_sample_completed_ 1)
          ptr_deref_2354_update_start_ o<-& (ptr_deref_2354_update_completed_ 0)
          // 			iNsTr_13 := (indexx_x21 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          //  file prog.linked.opt.aa, line 937
          // Source expression
          // (indexx_x21 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          $T[ADD_u32_u32_2362_sample_start_] 
          $T[ADD_u32_u32_2362_sample_completed_] 
          $T[ADD_u32_u32_2362_update_start_] 
          $T[ADD_u32_u32_2362_update_completed_] 
          // indexx_x21
          $T[R_indexx_x21_2359_sample_start_] 
          $T[R_indexx_x21_2359_sample_completed_] 
          $T[R_indexx_x21_2359_update_start_] 
          $T[R_indexx_x21_2359_update_completed_] 
          // implicit reference
          R_indexx_x21_2359_sample_start_ <-& (phi_stmt_2342_update_completed_)
          R_indexx_x21_2359_sample_completed_ <-& (R_indexx_x21_2359_sample_start_)
          R_indexx_x21_2359_update_start_ <-& (R_indexx_x21_2359_sample_completed_)
          R_indexx_x21_2359_update_completed_ <-& (R_indexx_x21_2359_update_start_)
          ADD_u32_u32_2362_sample_start_ <-& (R_indexx_x21_2359_update_completed_)
          ;;[ADD_u32_u32_2362_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u32_u32_2362_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u32_u32_2362_sample_start_ &-> (ADD_u32_u32_2362_Sample)
          ADD_u32_u32_2362_sample_completed_ <-& (ADD_u32_u32_2362_Sample)
          ADD_u32_u32_2362_sample_completed_ &-> ($null)
          ADD_u32_u32_2362_update_start_ &-> (ADD_u32_u32_2362_Update)
          ADD_u32_u32_2362_update_completed_ <-& (ADD_u32_u32_2362_Update)
          // RAW reenables for indexx_x21
          phi_stmt_2342_update_start_ o<-& (ADD_u32_u32_2362_sample_completed_ 0)
          // self-release: 
          ADD_u32_u32_2362_sample_start_ o<-& (ADD_u32_u32_2362_sample_completed_ 1)
          ADD_u32_u32_2362_update_start_ o<-& (ADD_u32_u32_2362_update_completed_ 0)
          // Target expression
          // (as target) iNsTr_13
          // iNsTr_13
          // implicit reference
          // WAR dependency: Read: iNsTr_13 before Write: 			iNsTr_13 := (indexx_x21 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          ADD_u32_u32_2362_sample_start_ <-& (phi_stmt_2342_sample_completed_)
          // WAR dependency: release  Read: iNsTr_13 with Write: 			iNsTr_13 := (indexx_x21 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          R_iNsTr_13_2344_sample_start_ o<-& (ADD_u32_u32_2362_update_completed_ 1)
          // 			exitcond1 := (iNsTr_13 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
          //  file prog.linked.opt.aa, line 938
          // Source expression
          // (iNsTr_13 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
          $T[EQ_u32_u1_2368_sample_start_] 
          $T[EQ_u32_u1_2368_sample_completed_] 
          $T[EQ_u32_u1_2368_update_start_] 
          $T[EQ_u32_u1_2368_update_completed_] 
          // iNsTr_13
          $T[R_iNsTr_13_2365_sample_start_] 
          $T[R_iNsTr_13_2365_sample_completed_] 
          $T[R_iNsTr_13_2365_update_start_] 
          $T[R_iNsTr_13_2365_update_completed_] 
          // implicit reference
          R_iNsTr_13_2365_sample_start_ <-& (ADD_u32_u32_2362_update_completed_)
          R_iNsTr_13_2365_sample_completed_ <-& (R_iNsTr_13_2365_sample_start_)
          R_iNsTr_13_2365_update_start_ <-& (R_iNsTr_13_2365_sample_completed_)
          R_iNsTr_13_2365_update_completed_ <-& (R_iNsTr_13_2365_update_start_)
          EQ_u32_u1_2368_sample_start_ <-& (R_iNsTr_13_2365_update_completed_)
          ;;[EQ_u32_u1_2368_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[EQ_u32_u1_2368_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          EQ_u32_u1_2368_sample_start_ &-> (EQ_u32_u1_2368_Sample)
          EQ_u32_u1_2368_sample_completed_ <-& (EQ_u32_u1_2368_Sample)
          EQ_u32_u1_2368_sample_completed_ &-> ($null)
          EQ_u32_u1_2368_update_start_ &-> (EQ_u32_u1_2368_Update)
          EQ_u32_u1_2368_update_completed_ <-& (EQ_u32_u1_2368_Update)
          // RAW reenables for iNsTr_13
          ADD_u32_u32_2362_update_start_ o<-& (EQ_u32_u1_2368_sample_completed_ 0)
          // self-release: 
          EQ_u32_u1_2368_sample_start_ o<-& (EQ_u32_u1_2368_sample_completed_ 1)
          EQ_u32_u1_2368_update_start_ o<-& (EQ_u32_u1_2368_update_completed_ 0)
          // Target expression
          // (as target) exitcond1
          // exitcond1
          // implicit reference
          // ( ~ exitcond1 )
          $T[NOT_u1_u1_2372_sample_start_] 
          $T[NOT_u1_u1_2372_sample_completed_] 
          $T[NOT_u1_u1_2372_update_start_] 
          $T[NOT_u1_u1_2372_update_completed_] 
          // exitcond1
          $T[R_exitcond1_2371_sample_start_] 
          $T[R_exitcond1_2371_sample_completed_] 
          $T[R_exitcond1_2371_update_start_] 
          $T[R_exitcond1_2371_update_completed_] 
          // implicit reference
          R_exitcond1_2371_sample_start_ <-& (EQ_u32_u1_2368_update_completed_)
          R_exitcond1_2371_sample_completed_ <-& (R_exitcond1_2371_sample_start_)
          R_exitcond1_2371_update_start_ <-& (R_exitcond1_2371_sample_completed_)
          R_exitcond1_2371_update_completed_ <-& (R_exitcond1_2371_update_start_)
          NOT_u1_u1_2372_sample_start_ <-& (R_exitcond1_2371_update_completed_)
          ;;[NOT_u1_u1_2372_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[NOT_u1_u1_2372_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          NOT_u1_u1_2372_sample_start_ &-> (NOT_u1_u1_2372_Sample)
          NOT_u1_u1_2372_sample_completed_ <-& (NOT_u1_u1_2372_Sample)
          NOT_u1_u1_2372_sample_completed_ &-> ($null)
          NOT_u1_u1_2372_update_start_ &-> (NOT_u1_u1_2372_Update)
          NOT_u1_u1_2372_update_completed_ <-& (NOT_u1_u1_2372_Update)
          // flow-through
          NOT_u1_u1_2372_update_start_ <-& (NOT_u1_u1_2372_sample_completed_)
          NOT_u1_u1_2372_update_completed_ &-> (condition_evaluated)
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // reenable across ring for memory space memory_space_4
          // leading and trailing sets are the same... no ring dependency
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_2340__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_2340_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_2340__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_2340_loop_body : condition_evaluated
        $bind do_while_stmt_2340__entry__  => do_while_stmt_2340_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_2340_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_2340__exit__)
      }
      do_while_stmt_2340__entry__ |-> (do_while_stmt_2340)
      do_while_stmt_2340__exit__ <-| (do_while_stmt_2340)
      ::[assign_stmt_2378_to_assign_stmt_2406] 
      {
        // 		LPy1 := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 943
        // Target expression
        // (as target) LPy1
        $T[STORE_LPy1_2375_sample_start_] 
        $T[STORE_LPy1_2375_sample_completed_] 
        $T[STORE_LPy1_2375_update_start_] 
        $T[STORE_LPy1_2375_update_completed_] 
        // LPy1
        $T[STORE_LPy1_2375_word_address_calculated] 
        $T[STORE_LPy1_2375_root_address_calculated] 
        STORE_LPy1_2375_word_address_calculated <-& (STORE_LPy1_2375_root_address_calculated)
        ;;[STORE_LPy1_2375_Sample] 
        {
          ;;[STORE_LPy1_2375_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_LPy1_2375_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_LPy1_2375_sample_start_ <-& (STORE_LPy1_2375_word_address_calculated)
        STORE_LPy1_2375_sample_start_ &-> (STORE_LPy1_2375_Sample)
        STORE_LPy1_2375_sample_completed_ <-& (STORE_LPy1_2375_Sample)
        STORE_LPy1_2375_sample_completed_ &-> ($null)
        STORE_LPy1_2375_update_start_ &-> (STORE_LPy1_2375_Update)
        STORE_LPy1_2375_update_completed_ <-& (STORE_LPy1_2375_Update)
        // 		LPy2 := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 944
        // Target expression
        // (as target) LPy2
        $T[STORE_LPy2_2379_sample_start_] 
        $T[STORE_LPy2_2379_sample_completed_] 
        $T[STORE_LPy2_2379_update_start_] 
        $T[STORE_LPy2_2379_update_completed_] 
        // LPy2
        $T[STORE_LPy2_2379_word_address_calculated] 
        $T[STORE_LPy2_2379_root_address_calculated] 
        STORE_LPy2_2379_word_address_calculated <-& (STORE_LPy2_2379_root_address_calculated)
        ;;[STORE_LPy2_2379_Sample] 
        {
          ;;[STORE_LPy2_2379_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_LPy2_2379_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_LPy2_2379_sample_start_ <-& (STORE_LPy2_2379_word_address_calculated)
        STORE_LPy2_2379_sample_start_ &-> (STORE_LPy2_2379_Sample)
        STORE_LPy2_2379_sample_completed_ <-& (STORE_LPy2_2379_Sample)
        STORE_LPy2_2379_sample_completed_ &-> ($null)
        STORE_LPy2_2379_update_start_ &-> (STORE_LPy2_2379_Update)
        STORE_LPy2_2379_update_completed_ <-& (STORE_LPy2_2379_Update)
        // 		HPy1 := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 945
        // Target expression
        // (as target) HPy1
        $T[STORE_HPy1_2383_sample_start_] 
        $T[STORE_HPy1_2383_sample_completed_] 
        $T[STORE_HPy1_2383_update_start_] 
        $T[STORE_HPy1_2383_update_completed_] 
        // HPy1
        $T[STORE_HPy1_2383_word_address_calculated] 
        $T[STORE_HPy1_2383_root_address_calculated] 
        STORE_HPy1_2383_word_address_calculated <-& (STORE_HPy1_2383_root_address_calculated)
        ;;[STORE_HPy1_2383_Sample] 
        {
          ;;[STORE_HPy1_2383_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_HPy1_2383_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_HPy1_2383_sample_start_ <-& (STORE_HPy1_2383_word_address_calculated)
        STORE_HPy1_2383_sample_start_ &-> (STORE_HPy1_2383_Sample)
        STORE_HPy1_2383_sample_completed_ <-& (STORE_HPy1_2383_Sample)
        STORE_HPy1_2383_sample_completed_ &-> ($null)
        STORE_HPy1_2383_update_start_ &-> (STORE_HPy1_2383_Update)
        STORE_HPy1_2383_update_completed_ <-& (STORE_HPy1_2383_Update)
        // 		WINsum := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 946
        // Target expression
        // (as target) WINsum
        $T[STORE_WINsum_2387_sample_start_] 
        $T[STORE_WINsum_2387_sample_completed_] 
        $T[STORE_WINsum_2387_update_start_] 
        $T[STORE_WINsum_2387_update_completed_] 
        // WINsum
        $T[STORE_WINsum_2387_word_address_calculated] 
        $T[STORE_WINsum_2387_root_address_calculated] 
        STORE_WINsum_2387_word_address_calculated <-& (STORE_WINsum_2387_root_address_calculated)
        ;;[STORE_WINsum_2387_Sample] 
        {
          ;;[STORE_WINsum_2387_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_WINsum_2387_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_WINsum_2387_sample_start_ <-& (STORE_WINsum_2387_word_address_calculated)
        STORE_WINsum_2387_sample_start_ &-> (STORE_WINsum_2387_Sample)
        STORE_WINsum_2387_sample_completed_ <-& (STORE_WINsum_2387_Sample)
        STORE_WINsum_2387_sample_completed_ &-> ($null)
        STORE_WINsum_2387_update_start_ &-> (STORE_WINsum_2387_Update)
        STORE_WINsum_2387_update_completed_ <-& (STORE_WINsum_2387_Update)
        // 		LPbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 947
        // Target expression
        // (as target) LPbuff_ptr
        $T[STORE_LPbuff_ptr_2391_sample_start_] 
        $T[STORE_LPbuff_ptr_2391_sample_completed_] 
        $T[STORE_LPbuff_ptr_2391_update_start_] 
        $T[STORE_LPbuff_ptr_2391_update_completed_] 
        // LPbuff_ptr
        $T[STORE_LPbuff_ptr_2391_word_address_calculated] 
        $T[STORE_LPbuff_ptr_2391_root_address_calculated] 
        STORE_LPbuff_ptr_2391_word_address_calculated <-& (STORE_LPbuff_ptr_2391_root_address_calculated)
        ;;[STORE_LPbuff_ptr_2391_Sample] 
        {
          ;;[STORE_LPbuff_ptr_2391_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_LPbuff_ptr_2391_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_LPbuff_ptr_2391_sample_start_ <-& (STORE_LPbuff_ptr_2391_word_address_calculated)
        STORE_LPbuff_ptr_2391_sample_start_ &-> (STORE_LPbuff_ptr_2391_Sample)
        STORE_LPbuff_ptr_2391_sample_completed_ <-& (STORE_LPbuff_ptr_2391_Sample)
        STORE_LPbuff_ptr_2391_sample_completed_ &-> ($null)
        STORE_LPbuff_ptr_2391_update_start_ &-> (STORE_LPbuff_ptr_2391_Update)
        STORE_LPbuff_ptr_2391_update_completed_ <-& (STORE_LPbuff_ptr_2391_Update)
        // 		HPbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 948
        // Target expression
        // (as target) HPbuff_ptr
        $T[STORE_HPbuff_ptr_2395_sample_start_] 
        $T[STORE_HPbuff_ptr_2395_sample_completed_] 
        $T[STORE_HPbuff_ptr_2395_update_start_] 
        $T[STORE_HPbuff_ptr_2395_update_completed_] 
        // HPbuff_ptr
        $T[STORE_HPbuff_ptr_2395_word_address_calculated] 
        $T[STORE_HPbuff_ptr_2395_root_address_calculated] 
        STORE_HPbuff_ptr_2395_word_address_calculated <-& (STORE_HPbuff_ptr_2395_root_address_calculated)
        ;;[STORE_HPbuff_ptr_2395_Sample] 
        {
          ;;[STORE_HPbuff_ptr_2395_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_HPbuff_ptr_2395_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_HPbuff_ptr_2395_sample_start_ <-& (STORE_HPbuff_ptr_2395_word_address_calculated)
        STORE_HPbuff_ptr_2395_sample_start_ &-> (STORE_HPbuff_ptr_2395_Sample)
        STORE_HPbuff_ptr_2395_sample_completed_ <-& (STORE_HPbuff_ptr_2395_Sample)
        STORE_HPbuff_ptr_2395_sample_completed_ &-> ($null)
        STORE_HPbuff_ptr_2395_update_start_ &-> (STORE_HPbuff_ptr_2395_Update)
        STORE_HPbuff_ptr_2395_update_completed_ <-& (STORE_HPbuff_ptr_2395_Update)
        // 		DERIVbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 949
        // Target expression
        // (as target) DERIVbuff_ptr
        $T[STORE_DERIVbuff_ptr_2399_sample_start_] 
        $T[STORE_DERIVbuff_ptr_2399_sample_completed_] 
        $T[STORE_DERIVbuff_ptr_2399_update_start_] 
        $T[STORE_DERIVbuff_ptr_2399_update_completed_] 
        // DERIVbuff_ptr
        $T[STORE_DERIVbuff_ptr_2399_word_address_calculated] 
        $T[STORE_DERIVbuff_ptr_2399_root_address_calculated] 
        STORE_DERIVbuff_ptr_2399_word_address_calculated <-& (STORE_DERIVbuff_ptr_2399_root_address_calculated)
        ;;[STORE_DERIVbuff_ptr_2399_Sample] 
        {
          ;;[STORE_DERIVbuff_ptr_2399_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_DERIVbuff_ptr_2399_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_DERIVbuff_ptr_2399_sample_start_ <-& (STORE_DERIVbuff_ptr_2399_word_address_calculated)
        STORE_DERIVbuff_ptr_2399_sample_start_ &-> (STORE_DERIVbuff_ptr_2399_Sample)
        STORE_DERIVbuff_ptr_2399_sample_completed_ <-& (STORE_DERIVbuff_ptr_2399_Sample)
        STORE_DERIVbuff_ptr_2399_sample_completed_ &-> ($null)
        STORE_DERIVbuff_ptr_2399_update_start_ &-> (STORE_DERIVbuff_ptr_2399_Update)
        STORE_DERIVbuff_ptr_2399_update_completed_ <-& (STORE_DERIVbuff_ptr_2399_Update)
        // 		WINbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 950
        // Target expression
        // (as target) WINbuff_ptr
        $T[STORE_WINbuff_ptr_2403_sample_start_] 
        $T[STORE_WINbuff_ptr_2403_sample_completed_] 
        $T[STORE_WINbuff_ptr_2403_update_start_] 
        $T[STORE_WINbuff_ptr_2403_update_completed_] 
        // WINbuff_ptr
        $T[STORE_WINbuff_ptr_2403_word_address_calculated] 
        $T[STORE_WINbuff_ptr_2403_root_address_calculated] 
        STORE_WINbuff_ptr_2403_word_address_calculated <-& (STORE_WINbuff_ptr_2403_root_address_calculated)
        ;;[STORE_WINbuff_ptr_2403_Sample] 
        {
          ;;[STORE_WINbuff_ptr_2403_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_WINbuff_ptr_2403_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_WINbuff_ptr_2403_sample_start_ <-& (STORE_WINbuff_ptr_2403_word_address_calculated)
        STORE_WINbuff_ptr_2403_sample_start_ &-> (STORE_WINbuff_ptr_2403_Sample)
        STORE_WINbuff_ptr_2403_sample_completed_ <-& (STORE_WINbuff_ptr_2403_Sample)
        STORE_WINbuff_ptr_2403_sample_completed_ &-> ($null)
        STORE_WINbuff_ptr_2403_update_start_ &-> (STORE_WINbuff_ptr_2403_Update)
        STORE_WINbuff_ptr_2403_update_completed_ <-& (STORE_WINbuff_ptr_2403_Update)
        // load-store dependencies..
      }
      assign_stmt_2378_to_assign_stmt_2406__entry__ |-> (assign_stmt_2378_to_assign_stmt_2406)
      assign_stmt_2378_to_assign_stmt_2406__exit__ <-| (assign_stmt_2378_to_assign_stmt_2406)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 896
      //---------------------   merge statement  file prog.linked.opt.aa, line 896  --------------------------
      ||[bbx_xnph6_bb_1_PhiReq] 
      {
        ;;[phi_stmt_2248] 
        {
          ||[phi_stmt_2248_sources] 
          {
            // sources for 			$phi indexx_x05_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph6_bb_1 // type of target is $uint<32>
          }
          $T [phi_stmt_2248_req] 
        }
      }
      bbx_xnph6_bb_1 |-> (bbx_xnph6_bb_1_PhiReq)
      $P [merge_stmt_2247_PhiReqMerge] 
      merge_stmt_2247_PhiReqMerge <-| ( bbx_xnph6_bb_1_PhiReq )
      ||[merge_stmt_2247_PhiAck] 
      {
        $T [phi_stmt_2248_ack] 
      }
      merge_stmt_2247_PhiReqMerge |-> (merge_stmt_2247_PhiAck)
      merge_stmt_2247__exit__  <-| (merge_stmt_2247_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 896  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 909
      //---------------------   merge statement  file prog.linked.opt.aa, line 909  --------------------------
      ||[bb_1_bbx_xnph4x_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_1_bbx_xnph4x_xpreheader |-> (bb_1_bbx_xnph4x_xpreheader_PhiReq)
      $P [merge_stmt_2288_PhiReqMerge] 
      merge_stmt_2288_PhiReqMerge <-| ( bb_1_bbx_xnph4x_xpreheader_PhiReq )
      ||[merge_stmt_2288_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2288_PhiReqMerge |-> (merge_stmt_2288_PhiAck)
      merge_stmt_2288__exit__  <-| (merge_stmt_2288_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 909  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 912
      //---------------------   merge statement  file prog.linked.opt.aa, line 912  --------------------------
      ||[bbx_xnph4x_xpreheader_bbx_xnph4_PhiReq] 
      {
        ;;[phi_stmt_2291] 
        {
          ||[phi_stmt_2291_sources] 
          {
            // sources for 			$phi indexx_x13_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph4x_xpreheader_bbx_xnph4 // type of target is $uint<32>
          }
          $T [phi_stmt_2291_req] 
        }
      }
      bbx_xnph4x_xpreheader_bbx_xnph4 |-> (bbx_xnph4x_xpreheader_bbx_xnph4_PhiReq)
      $P [merge_stmt_2290_PhiReqMerge] 
      merge_stmt_2290_PhiReqMerge <-| ( bbx_xnph4x_xpreheader_bbx_xnph4_PhiReq )
      ||[merge_stmt_2290_PhiAck] 
      {
        $T [phi_stmt_2291_ack] 
      }
      merge_stmt_2290_PhiReqMerge |-> (merge_stmt_2290_PhiAck)
      merge_stmt_2290__exit__  <-| (merge_stmt_2290_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 912  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 925
      //---------------------   merge statement  file prog.linked.opt.aa, line 925  --------------------------
      ||[bbx_xnph4_bbx_xnphx_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph4_bbx_xnphx_xpreheader |-> (bbx_xnph4_bbx_xnphx_xpreheader_PhiReq)
      $P [merge_stmt_2331_PhiReqMerge] 
      merge_stmt_2331_PhiReqMerge <-| ( bbx_xnph4_bbx_xnphx_xpreheader_PhiReq )
      ||[merge_stmt_2331_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2331_PhiReqMerge |-> (merge_stmt_2331_PhiAck)
      merge_stmt_2331__exit__  <-| (merge_stmt_2331_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 925  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 928
      //---------------------   merge statement  file prog.linked.opt.aa, line 928  --------------------------
      ||[bbx_xnphx_xpreheader_bbx_xnph_PhiReq] 
      {
        ;;[phi_stmt_2334] 
        {
          ||[phi_stmt_2334_sources] 
          {
            // sources for 			$phi indexx_x21_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<32>
          }
          $T [phi_stmt_2334_req] 
        }
      }
      bbx_xnphx_xpreheader_bbx_xnph |-> (bbx_xnphx_xpreheader_bbx_xnph_PhiReq)
      $P [merge_stmt_2333_PhiReqMerge] 
      merge_stmt_2333_PhiReqMerge <-| ( bbx_xnphx_xpreheader_bbx_xnph_PhiReq )
      ||[merge_stmt_2333_PhiAck] 
      {
        $T [phi_stmt_2334_ack] 
      }
      merge_stmt_2333_PhiReqMerge |-> (merge_stmt_2333_PhiAck)
      merge_stmt_2333__exit__  <-| (merge_stmt_2333_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 928  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 941
      //---------------------   merge statement  file prog.linked.opt.aa, line 941  --------------------------
      ||[bbx_xnph_xx_x_crit_edge_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph_xx_x_crit_edge |-> (bbx_xnph_xx_x_crit_edge_PhiReq)
      $P [merge_stmt_2374_PhiReqMerge] 
      merge_stmt_2374_PhiReqMerge <-| ( bbx_xnph_xx_x_crit_edge_PhiReq )
      ||[merge_stmt_2374_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2374_PhiReqMerge |-> (merge_stmt_2374_PhiAck)
      merge_stmt_2374__exit__  <-| (merge_stmt_2374_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 941  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 952
      //---------------------   merge statement  file prog.linked.opt.aa, line 952  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_2408_PhiReqMerge] 
      merge_stmt_2408_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_2408_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2408_PhiReqMerge |-> (merge_stmt_2408_PhiAck)
      merge_stmt_2408__exit__  <-| (merge_stmt_2408_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 952  --------------------------
      bbx_xnph6_bb_1 <-| (branch_block_stmt_2245__entry__)
      do_while_stmt_2254__entry__ <-| (merge_stmt_2247__exit__)
      bb_1_bbx_xnph4x_xpreheader <-| (do_while_stmt_2254__exit__)
      bbx_xnph4x_xpreheader_bbx_xnph4 <-| (merge_stmt_2288__exit__)
      do_while_stmt_2297__entry__ <-| (merge_stmt_2290__exit__)
      bbx_xnph4_bbx_xnphx_xpreheader <-| (do_while_stmt_2297__exit__)
      bbx_xnphx_xpreheader_bbx_xnph <-| (merge_stmt_2331__exit__)
      do_while_stmt_2340__entry__ <-| (merge_stmt_2333__exit__)
      bbx_xnph_xx_x_crit_edge <-| (do_while_stmt_2340__exit__)
      assign_stmt_2378_to_assign_stmt_2406__entry__ <-| (merge_stmt_2374__exit__)
      return__ <-| (assign_stmt_2378_to_assign_stmt_2406__exit__)
      merge_stmt_2408__exit__ |-> (branch_block_stmt_2245__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %initFilt%body%
    //  file prog.linked.opt.aa, line 896
    // constant-object-declarations for block %initFilt%body%
    //  file prog.linked.opt.aa, line 900
    // constant-object-declarations for block %initFilt%body%
    //  file prog.linked.opt.aa, line 909
    // constant-object-declarations for block %initFilt%body%
    //  file prog.linked.opt.aa, line 912
    // constant-object-declarations for block %initFilt%body%
    //  file prog.linked.opt.aa, line 916
    // constant-object-declarations for block %initFilt%body%
    //  file prog.linked.opt.aa, line 925
    // constant-object-declarations for block %initFilt%body%
    //  file prog.linked.opt.aa, line 928
    // constant-object-declarations for block %initFilt%body%
    //  file prog.linked.opt.aa, line 932
    // constant-object-declarations for block %initFilt%body%
    //  file prog.linked.opt.aa, line 941
    // constant-object-declarations for block %initFilt%body%
    //  file prog.linked.opt.aa, line 952
    // constant-object-declarations for block %initFilt%body
    //  file prog.linked.opt.aa, line 893
    // constant-object-declarations for block %initFilt
    //  file prog.linked.opt.aa, line 888
    // constant-declarations for block %initFilt%body
    //  file prog.linked.opt.aa, line 893
    // constant-declarations for block %initFilt%body%
    //  file prog.linked.opt.aa, line 896
    // constant-declarations for phi:  			$phi indexx_x05_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph6_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 897
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_2252_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // do-while statement  
    //  file prog.linked.opt.aa, line 899
    // constant-declarations for block %initFilt%body%
    //  file prog.linked.opt.aa, line 900
    // constant-declarations for phi:  			$phi indexx_x05 := 			  ($cast ($uint<32>) iNsTr_3 ) $on $loopback			  indexx_x05_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 901
    // @(LPbuff[indexx_x05])
    $constant $W[array_obj_ref_2264_resized_base_address] : $int<4> := _b0000// 0
    $constant $W[array_obj_ref_2264_offset_scale_factor_0] : $int<4> := _b0001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2270_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ->(scevgep10)
    $constant $W[ptr_deref_2268_word_offset_0] : $int<4> := _b0000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_2275_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000001010  )
    $constant $W[type_cast_2281_wire_constant] : $int<32> := _b00000000000000000000000000001010// 10
    // constant-declarations for block %initFilt%body%
    //  file prog.linked.opt.aa, line 909
    // constant-declarations for block %initFilt%body%
    //  file prog.linked.opt.aa, line 912
    // constant-declarations for phi:  			$phi indexx_x13_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph4x_xpreheader_bbx_xnph4 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 913
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_2295_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // do-while statement  
    //  file prog.linked.opt.aa, line 915
    // constant-declarations for block %initFilt%body%
    //  file prog.linked.opt.aa, line 916
    // constant-declarations for phi:  			$phi indexx_x13 := 			  ($cast ($uint<32>) iNsTr_8 ) $on $loopback			  indexx_x13_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 917
    // @(HPbuff[indexx_x13])
    $constant $W[array_obj_ref_2307_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_2307_offset_scale_factor_0] : $int<5> := _b00001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2313_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ->(scevgep8)
    $constant $W[ptr_deref_2311_word_offset_0] : $int<5> := _b00000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_2318_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000011001  )
    $constant $W[type_cast_2324_wire_constant] : $int<32> := _b00000000000000000000000000011001// 25
    // constant-declarations for block %initFilt%body%
    //  file prog.linked.opt.aa, line 925
    // constant-declarations for block %initFilt%body%
    //  file prog.linked.opt.aa, line 928
    // constant-declarations for phi:  			$phi indexx_x21_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 929
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_2338_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // do-while statement  
    //  file prog.linked.opt.aa, line 931
    // constant-declarations for block %initFilt%body%
    //  file prog.linked.opt.aa, line 932
    // constant-declarations for phi:  			$phi indexx_x21 := 			  ($cast ($uint<32>) iNsTr_13 ) $on $loopback			  indexx_x21_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 933
    // @(DERIVbuff[indexx_x21])
    $constant $W[array_obj_ref_2350_resized_base_address] : $int<2> := _b00// 0
    $constant $W[array_obj_ref_2350_offset_scale_factor_0] : $int<2> := _b01// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2356_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ->(scevgep)
    $constant $W[ptr_deref_2354_word_offset_0] : $int<2> := _b00// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_2361_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000010  )
    $constant $W[type_cast_2367_wire_constant] : $int<32> := _b00000000000000000000000000000010// 2
    // constant-declarations for block %initFilt%body%
    //  file prog.linked.opt.aa, line 941
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2377_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // LPy1
    $constant $W[STORE_LPy1_2375_word_address_0] : $pointer<memory_space_11> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2381_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // LPy2
    $constant $W[STORE_LPy2_2379_word_address_0] : $pointer<memory_space_12> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2385_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // HPy1
    $constant $W[STORE_HPy1_2383_word_address_0] : $pointer<memory_space_8> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2389_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // WINsum
    $constant $W[STORE_WINsum_2387_word_address_0] : $pointer<memory_space_19> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2393_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // LPbuff_ptr
    $constant $W[STORE_LPbuff_ptr_2391_word_address_0] : $pointer<memory_space_10> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2397_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // HPbuff_ptr
    $constant $W[STORE_HPbuff_ptr_2395_word_address_0] : $pointer<memory_space_7> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2401_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // DERIVbuff_ptr
    $constant $W[STORE_DERIVbuff_ptr_2399_word_address_0] : $pointer<memory_space_5> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2405_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // WINbuff_ptr
    $constant $W[STORE_WINbuff_ptr_2403_word_address_0] : $pointer<memory_space_18> := _b0
    // constant-declarations for block %initFilt%body%
    //  file prog.linked.opt.aa, line 952
    // block %initFilt%body
    //  file prog.linked.opt.aa, line 893
    // merge-statement  
    //  file prog.linked.opt.aa, line 896
    // 			$phi indexx_x05_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph6_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 897
    // indexx_x05_at_entry
    $W[indexx_x05_at_entry_2248] : $int<32>
    // do-while statement  
    //  file prog.linked.opt.aa, line 899
    // ( ~ exitcond4 )
    $intermediate $W[NOT_u1_u1_2286_wire] : $int<1>
    // merge-statement  
    //  file prog.linked.opt.aa, line 900
    // 			$phi indexx_x05 := 			  ($cast ($uint<32>) iNsTr_3 ) $on $loopback			  indexx_x05_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 901
    // ($cast ($uint<32>) iNsTr_3 )
    $intermediate $W[type_cast_2259_wire] : $int<32>
    // indexx_x05
    $W[indexx_x05_2256] : $int<32>
    // 			scevgep10 := @(LPbuff[indexx_x05])
    //  file prog.linked.opt.aa, line 903
    // @(LPbuff[indexx_x05])
    $intermediate $W[R_indexx_x05_2263_resized] : $int<4>
    $intermediate $W[R_indexx_x05_2263_scaled] : $int<4>
    $intermediate $W[array_obj_ref_2264_final_offset] : $int<4>
    $intermediate $W[array_obj_ref_2264_root_address] : $int<4>
    // scevgep10
    $W[scevgep10_2266] : $int<32>
    // 			->(scevgep10) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 904
    // ->(scevgep10)
    $intermediate $W[ptr_deref_2268_wire] : $int<32>
    $intermediate $W[ptr_deref_2268_resized_base_address] : $int<4>
    $intermediate $W[ptr_deref_2268_root_address] : $int<4>
    $W[ptr_deref_2268_word_address_0] : $pointer<memory_space_9>
    $W[ptr_deref_2268_data_0] : $int<32>
    // 			iNsTr_3 := (indexx_x05 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 905
    // iNsTr_3
    $W[iNsTr_3_2277] : $int<32>
    // 			exitcond4 := (iNsTr_3 == ($bitcast ($uint<32>) _b00000000000000000000000000001010  ))
    //  file prog.linked.opt.aa, line 906
    // exitcond4
    $W[exitcond4_2283] : $int<1>
    // merge-statement  
    //  file prog.linked.opt.aa, line 912
    // 			$phi indexx_x13_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph4x_xpreheader_bbx_xnph4 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 913
    // indexx_x13_at_entry
    $W[indexx_x13_at_entry_2291] : $int<32>
    // do-while statement  
    //  file prog.linked.opt.aa, line 915
    // ( ~ exitcond )
    $intermediate $W[NOT_u1_u1_2329_wire] : $int<1>
    // merge-statement  
    //  file prog.linked.opt.aa, line 916
    // 			$phi indexx_x13 := 			  ($cast ($uint<32>) iNsTr_8 ) $on $loopback			  indexx_x13_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 917
    // ($cast ($uint<32>) iNsTr_8 )
    $intermediate $W[type_cast_2302_wire] : $int<32>
    // indexx_x13
    $W[indexx_x13_2299] : $int<32>
    // 			scevgep8 := @(HPbuff[indexx_x13])
    //  file prog.linked.opt.aa, line 919
    // @(HPbuff[indexx_x13])
    $intermediate $W[R_indexx_x13_2306_resized] : $int<5>
    $intermediate $W[R_indexx_x13_2306_scaled] : $int<5>
    $intermediate $W[array_obj_ref_2307_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_2307_root_address] : $int<5>
    // scevgep8
    $W[scevgep8_2309] : $int<32>
    // 			->(scevgep8) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 920
    // ->(scevgep8)
    $intermediate $W[ptr_deref_2311_wire] : $int<32>
    $intermediate $W[ptr_deref_2311_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_2311_root_address] : $int<5>
    $W[ptr_deref_2311_word_address_0] : $pointer<memory_space_6>
    $W[ptr_deref_2311_data_0] : $int<32>
    // 			iNsTr_8 := (indexx_x13 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 921
    // iNsTr_8
    $W[iNsTr_8_2320] : $int<32>
    // 			exitcond := (iNsTr_8 == ($bitcast ($uint<32>) _b00000000000000000000000000011001  ))
    //  file prog.linked.opt.aa, line 922
    // exitcond
    $W[exitcond_2326] : $int<1>
    // merge-statement  
    //  file prog.linked.opt.aa, line 928
    // 			$phi indexx_x21_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 929
    // indexx_x21_at_entry
    $W[indexx_x21_at_entry_2334] : $int<32>
    // do-while statement  
    //  file prog.linked.opt.aa, line 931
    // ( ~ exitcond1 )
    $intermediate $W[NOT_u1_u1_2372_wire] : $int<1>
    // merge-statement  
    //  file prog.linked.opt.aa, line 932
    // 			$phi indexx_x21 := 			  ($cast ($uint<32>) iNsTr_13 ) $on $loopback			  indexx_x21_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 933
    // ($cast ($uint<32>) iNsTr_13 )
    $intermediate $W[type_cast_2345_wire] : $int<32>
    // indexx_x21
    $W[indexx_x21_2342] : $int<32>
    // 			scevgep := @(DERIVbuff[indexx_x21])
    //  file prog.linked.opt.aa, line 935
    // @(DERIVbuff[indexx_x21])
    $intermediate $W[R_indexx_x21_2349_resized] : $int<2>
    $intermediate $W[R_indexx_x21_2349_scaled] : $int<2>
    $intermediate $W[array_obj_ref_2350_final_offset] : $int<2>
    $intermediate $W[array_obj_ref_2350_root_address] : $int<2>
    // scevgep
    $W[scevgep_2352] : $int<32>
    // 			->(scevgep) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 936
    // ->(scevgep)
    $intermediate $W[ptr_deref_2354_wire] : $int<32>
    $intermediate $W[ptr_deref_2354_resized_base_address] : $int<2>
    $intermediate $W[ptr_deref_2354_root_address] : $int<2>
    $W[ptr_deref_2354_word_address_0] : $pointer<memory_space_4>
    $W[ptr_deref_2354_data_0] : $int<32>
    // 			iNsTr_13 := (indexx_x21 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 937
    // iNsTr_13
    $W[iNsTr_13_2363] : $int<32>
    // 			exitcond1 := (iNsTr_13 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
    //  file prog.linked.opt.aa, line 938
    // exitcond1
    $W[exitcond1_2369] : $int<1>
    // 		LPy1 := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 943
    // LPy1
    $constant $W[STORE_LPy1_2375_word_address_0] : $pointer<memory_space_11> := _b0
    $W[STORE_LPy1_2375_data_0] : $int<32>
    // 		LPy2 := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 944
    // LPy2
    $constant $W[STORE_LPy2_2379_word_address_0] : $pointer<memory_space_12> := _b0
    $W[STORE_LPy2_2379_data_0] : $int<32>
    // 		HPy1 := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 945
    // HPy1
    $constant $W[STORE_HPy1_2383_word_address_0] : $pointer<memory_space_8> := _b0
    $W[STORE_HPy1_2383_data_0] : $int<32>
    // 		WINsum := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 946
    // WINsum
    $constant $W[STORE_WINsum_2387_word_address_0] : $pointer<memory_space_19> := _b0
    $W[STORE_WINsum_2387_data_0] : $int<32>
    // 		LPbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 947
    // LPbuff_ptr
    $constant $W[STORE_LPbuff_ptr_2391_word_address_0] : $pointer<memory_space_10> := _b0
    $W[STORE_LPbuff_ptr_2391_data_0] : $int<32>
    // 		HPbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 948
    // HPbuff_ptr
    $constant $W[STORE_HPbuff_ptr_2395_word_address_0] : $pointer<memory_space_7> := _b0
    $W[STORE_HPbuff_ptr_2395_data_0] : $int<32>
    // 		DERIVbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 949
    // DERIVbuff_ptr
    $constant $W[STORE_DERIVbuff_ptr_2399_word_address_0] : $pointer<memory_space_5> := _b0
    $W[STORE_DERIVbuff_ptr_2399_data_0] : $int<32>
    // 		WINbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 950
    // WINbuff_ptr
    $constant $W[STORE_WINbuff_ptr_2403_word_address_0] : $pointer<memory_space_18> := _b0
    $W[STORE_WINbuff_ptr_2403_data_0] : $int<32>
    // datapath-instances for block %initFilt%body
    //  file prog.linked.opt.aa, line 893
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 896
    // 			$phi indexx_x05_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph6_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 897
    $phi [phi_stmt_2248] (type_cast_2252_wire_constant) ( indexx_x05_at_entry_2248 )
    // datapath-instances for do-while  
    //  file prog.linked.opt.aa, line 899
    // ( ~ exitcond4 )
    ~ [NOT_u1_u1_2286_inst] (exitcond4_2283) (NOT_u1_u1_2286_wire)   $flowthrough
    $delay NOT_u1_u1_2286_inst 0
    ==0? [do_while_stmt_2254_branch] (NOT_u1_u1_2286_wire)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 900
    // 			$phi indexx_x05 := 			  ($cast ($uint<32>) iNsTr_3 ) $on $loopback			  indexx_x05_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 901
    // ($cast ($uint<32>) iNsTr_3 )
    # := [type_cast_2259_inst] (iNsTr_3_2277) (type_cast_2259_wire) 
    $delay type_cast_2259_inst 1
    # $phi [phi_stmt_2256] (type_cast_2259_wire indexx_x05_at_entry_2248) ( indexx_x05_2256 )
    // 			scevgep10 := @(LPbuff[indexx_x05])
    //  file prog.linked.opt.aa, line 903
    &/ [array_obj_ref_2264_index_0_resize] (indexx_x05_2256) (R_indexx_x05_2263_resized) 
    &/ [array_obj_ref_2264_index_0_rename] (R_indexx_x05_2263_resized) (R_indexx_x05_2263_scaled) 
    &/ [array_obj_ref_2264_index_offset] (R_indexx_x05_2263_scaled) (array_obj_ref_2264_final_offset) 
    &/ [array_obj_ref_2264_root_address_inst] (array_obj_ref_2264_final_offset) (array_obj_ref_2264_root_address) 
    # := [addr_of_2265_final_reg] (array_obj_ref_2264_root_address) (scevgep10_2266) 
    // 			->(scevgep10) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 904
    // ->(scevgep10)
    &/ [ptr_deref_2268_base_resize] (scevgep10_2266) (ptr_deref_2268_resized_base_address) 
    &/ [ptr_deref_2268_root_address_inst] (ptr_deref_2268_resized_base_address) (ptr_deref_2268_root_address) 
    &/ [ptr_deref_2268_addr_0] (ptr_deref_2268_root_address) (ptr_deref_2268_word_address_0) 
    $store [ptr_deref_2268_store_0] $to memory_space_9 (ptr_deref_2268_word_address_0 ptr_deref_2268_data_0) 
    $delay ptr_deref_2268_store_0 2
    &/ [ptr_deref_2268_gather_scatter] (type_cast_2270_wire_constant) (ptr_deref_2268_data_0) 
    // 			iNsTr_3 := (indexx_x05 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 905
    // (indexx_x05 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_2276_inst] (indexx_x05_2256 type_cast_2275_wire_constant) (iNsTr_3_2277) 
    $delay ADD_u32_u32_2276_inst 1
    // 			exitcond4 := (iNsTr_3 == ($bitcast ($uint<32>) _b00000000000000000000000000001010  ))
    //  file prog.linked.opt.aa, line 906
    // (iNsTr_3 == ($bitcast ($uint<32>) _b00000000000000000000000000001010  ))
    ==[EQ_u32_u1_2282_inst] (iNsTr_3_2277 type_cast_2281_wire_constant) (exitcond4_2283) 
    $delay EQ_u32_u1_2282_inst 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 912
    // 			$phi indexx_x13_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph4x_xpreheader_bbx_xnph4 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 913
    $phi [phi_stmt_2291] (type_cast_2295_wire_constant) ( indexx_x13_at_entry_2291 )
    // datapath-instances for do-while  
    //  file prog.linked.opt.aa, line 915
    // ( ~ exitcond )
    ~ [NOT_u1_u1_2329_inst] (exitcond_2326) (NOT_u1_u1_2329_wire)   $flowthrough
    $delay NOT_u1_u1_2329_inst 0
    ==0? [do_while_stmt_2297_branch] (NOT_u1_u1_2329_wire)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 916
    // 			$phi indexx_x13 := 			  ($cast ($uint<32>) iNsTr_8 ) $on $loopback			  indexx_x13_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 917
    // ($cast ($uint<32>) iNsTr_8 )
    # := [type_cast_2302_inst] (iNsTr_8_2320) (type_cast_2302_wire) 
    $delay type_cast_2302_inst 1
    # $phi [phi_stmt_2299] (type_cast_2302_wire indexx_x13_at_entry_2291) ( indexx_x13_2299 )
    // 			scevgep8 := @(HPbuff[indexx_x13])
    //  file prog.linked.opt.aa, line 919
    &/ [array_obj_ref_2307_index_0_resize] (indexx_x13_2299) (R_indexx_x13_2306_resized) 
    &/ [array_obj_ref_2307_index_0_rename] (R_indexx_x13_2306_resized) (R_indexx_x13_2306_scaled) 
    &/ [array_obj_ref_2307_index_offset] (R_indexx_x13_2306_scaled) (array_obj_ref_2307_final_offset) 
    &/ [array_obj_ref_2307_root_address_inst] (array_obj_ref_2307_final_offset) (array_obj_ref_2307_root_address) 
    # := [addr_of_2308_final_reg] (array_obj_ref_2307_root_address) (scevgep8_2309) 
    // 			->(scevgep8) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 920
    // ->(scevgep8)
    &/ [ptr_deref_2311_base_resize] (scevgep8_2309) (ptr_deref_2311_resized_base_address) 
    &/ [ptr_deref_2311_root_address_inst] (ptr_deref_2311_resized_base_address) (ptr_deref_2311_root_address) 
    &/ [ptr_deref_2311_addr_0] (ptr_deref_2311_root_address) (ptr_deref_2311_word_address_0) 
    $store [ptr_deref_2311_store_0] $to memory_space_6 (ptr_deref_2311_word_address_0 ptr_deref_2311_data_0) 
    $delay ptr_deref_2311_store_0 2
    &/ [ptr_deref_2311_gather_scatter] (type_cast_2313_wire_constant) (ptr_deref_2311_data_0) 
    // 			iNsTr_8 := (indexx_x13 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 921
    // (indexx_x13 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_2319_inst] (indexx_x13_2299 type_cast_2318_wire_constant) (iNsTr_8_2320) 
    $delay ADD_u32_u32_2319_inst 1
    // 			exitcond := (iNsTr_8 == ($bitcast ($uint<32>) _b00000000000000000000000000011001  ))
    //  file prog.linked.opt.aa, line 922
    // (iNsTr_8 == ($bitcast ($uint<32>) _b00000000000000000000000000011001  ))
    ==[EQ_u32_u1_2325_inst] (iNsTr_8_2320 type_cast_2324_wire_constant) (exitcond_2326) 
    $delay EQ_u32_u1_2325_inst 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 928
    // 			$phi indexx_x21_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 929
    $phi [phi_stmt_2334] (type_cast_2338_wire_constant) ( indexx_x21_at_entry_2334 )
    // datapath-instances for do-while  
    //  file prog.linked.opt.aa, line 931
    // ( ~ exitcond1 )
    ~ [NOT_u1_u1_2372_inst] (exitcond1_2369) (NOT_u1_u1_2372_wire)   $flowthrough
    $delay NOT_u1_u1_2372_inst 0
    ==0? [do_while_stmt_2340_branch] (NOT_u1_u1_2372_wire)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 932
    // 			$phi indexx_x21 := 			  ($cast ($uint<32>) iNsTr_13 ) $on $loopback			  indexx_x21_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 933
    // ($cast ($uint<32>) iNsTr_13 )
    # := [type_cast_2345_inst] (iNsTr_13_2363) (type_cast_2345_wire) 
    $delay type_cast_2345_inst 1
    # $phi [phi_stmt_2342] (type_cast_2345_wire indexx_x21_at_entry_2334) ( indexx_x21_2342 )
    // 			scevgep := @(DERIVbuff[indexx_x21])
    //  file prog.linked.opt.aa, line 935
    &/ [array_obj_ref_2350_index_0_resize] (indexx_x21_2342) (R_indexx_x21_2349_resized) 
    &/ [array_obj_ref_2350_index_0_rename] (R_indexx_x21_2349_resized) (R_indexx_x21_2349_scaled) 
    &/ [array_obj_ref_2350_index_offset] (R_indexx_x21_2349_scaled) (array_obj_ref_2350_final_offset) 
    &/ [array_obj_ref_2350_root_address_inst] (array_obj_ref_2350_final_offset) (array_obj_ref_2350_root_address) 
    # := [addr_of_2351_final_reg] (array_obj_ref_2350_root_address) (scevgep_2352) 
    // 			->(scevgep) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 936
    // ->(scevgep)
    &/ [ptr_deref_2354_base_resize] (scevgep_2352) (ptr_deref_2354_resized_base_address) 
    &/ [ptr_deref_2354_root_address_inst] (ptr_deref_2354_resized_base_address) (ptr_deref_2354_root_address) 
    &/ [ptr_deref_2354_addr_0] (ptr_deref_2354_root_address) (ptr_deref_2354_word_address_0) 
    $store [ptr_deref_2354_store_0] $to memory_space_4 (ptr_deref_2354_word_address_0 ptr_deref_2354_data_0) 
    $delay ptr_deref_2354_store_0 2
    &/ [ptr_deref_2354_gather_scatter] (type_cast_2356_wire_constant) (ptr_deref_2354_data_0) 
    // 			iNsTr_13 := (indexx_x21 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 937
    // (indexx_x21 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_2362_inst] (indexx_x21_2342 type_cast_2361_wire_constant) (iNsTr_13_2363) 
    $delay ADD_u32_u32_2362_inst 1
    // 			exitcond1 := (iNsTr_13 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
    //  file prog.linked.opt.aa, line 938
    // (iNsTr_13 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
    ==[EQ_u32_u1_2368_inst] (iNsTr_13_2363 type_cast_2367_wire_constant) (exitcond1_2369) 
    $delay EQ_u32_u1_2368_inst 1
    // 		LPy1 := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 943
    // LPy1
    $store [STORE_LPy1_2375_store_0] $to memory_space_11 (STORE_LPy1_2375_word_address_0 STORE_LPy1_2375_data_0) 
    $delay STORE_LPy1_2375_store_0 1
    &/ [STORE_LPy1_2375_gather_scatter] (type_cast_2377_wire_constant) (STORE_LPy1_2375_data_0) 
    // 		LPy2 := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 944
    // LPy2
    $store [STORE_LPy2_2379_store_0] $to memory_space_12 (STORE_LPy2_2379_word_address_0 STORE_LPy2_2379_data_0) 
    $delay STORE_LPy2_2379_store_0 1
    &/ [STORE_LPy2_2379_gather_scatter] (type_cast_2381_wire_constant) (STORE_LPy2_2379_data_0) 
    // 		HPy1 := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 945
    // HPy1
    $store [STORE_HPy1_2383_store_0] $to memory_space_8 (STORE_HPy1_2383_word_address_0 STORE_HPy1_2383_data_0) 
    $delay STORE_HPy1_2383_store_0 1
    &/ [STORE_HPy1_2383_gather_scatter] (type_cast_2385_wire_constant) (STORE_HPy1_2383_data_0) 
    // 		WINsum := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 946
    // WINsum
    $store [STORE_WINsum_2387_store_0] $to memory_space_19 (STORE_WINsum_2387_word_address_0 STORE_WINsum_2387_data_0) 
    $delay STORE_WINsum_2387_store_0 1
    &/ [STORE_WINsum_2387_gather_scatter] (type_cast_2389_wire_constant) (STORE_WINsum_2387_data_0) 
    // 		LPbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 947
    // LPbuff_ptr
    $store [STORE_LPbuff_ptr_2391_store_0] $to memory_space_10 (STORE_LPbuff_ptr_2391_word_address_0 STORE_LPbuff_ptr_2391_data_0) 
    $delay STORE_LPbuff_ptr_2391_store_0 1
    &/ [STORE_LPbuff_ptr_2391_gather_scatter] (type_cast_2393_wire_constant) (STORE_LPbuff_ptr_2391_data_0) 
    // 		HPbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 948
    // HPbuff_ptr
    $store [STORE_HPbuff_ptr_2395_store_0] $to memory_space_7 (STORE_HPbuff_ptr_2395_word_address_0 STORE_HPbuff_ptr_2395_data_0) 
    $delay STORE_HPbuff_ptr_2395_store_0 1
    &/ [STORE_HPbuff_ptr_2395_gather_scatter] (type_cast_2397_wire_constant) (STORE_HPbuff_ptr_2395_data_0) 
    // 		DERIVbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 949
    // DERIVbuff_ptr
    $store [STORE_DERIVbuff_ptr_2399_store_0] $to memory_space_5 (STORE_DERIVbuff_ptr_2399_word_address_0 STORE_DERIVbuff_ptr_2399_data_0) 
    $delay STORE_DERIVbuff_ptr_2399_store_0 1
    &/ [STORE_DERIVbuff_ptr_2399_gather_scatter] (type_cast_2401_wire_constant) (STORE_DERIVbuff_ptr_2399_data_0) 
    // 		WINbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 950
    // WINbuff_ptr
    $store [STORE_WINbuff_ptr_2403_store_0] $to memory_space_18 (STORE_WINbuff_ptr_2403_word_address_0 STORE_WINbuff_ptr_2403_data_0) 
    $delay STORE_WINbuff_ptr_2403_store_0 1
    &/ [STORE_WINbuff_ptr_2403_gather_scatter] (type_cast_2405_wire_constant) (STORE_WINbuff_ptr_2403_data_0) 
  }
  // end data-path
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 896
  phi_stmt_2248 <=> (branch_block_stmt_2245/bbx_xnph6_bb_1_PhiReq/phi_stmt_2248/phi_stmt_2248_req) (branch_block_stmt_2245/merge_stmt_2247_PhiAck/phi_stmt_2248_ack)
  // CP-DP links for do-while  do_while_stmt_2254
  //  file prog.linked.opt.aa, line 899
  phi_stmt_2256 <=> (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/phi_stmt_2256_loopback_sample_req branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/phi_stmt_2256_entry_sample_req branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/phi_stmt_2256_update_start_) (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/phi_stmt_2256_sample_completed_ branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/phi_stmt_2256_update_completed_)
  // ($cast ($uint<32>) iNsTr_3 )
  type_cast_2259_inst <=> (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/type_cast_2259_Sample/rr branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/type_cast_2259_Update/cr) (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/type_cast_2259_Sample/ra branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/type_cast_2259_Update/ca)
  // 			scevgep10 := @(LPbuff[indexx_x05])
  //  file prog.linked.opt.aa, line 903
  array_obj_ref_2264_index_0_resize <=> (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/array_obj_ref_2264_index_resize_0/index_resize_req) (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/array_obj_ref_2264_index_resize_0/index_resize_ack)
  array_obj_ref_2264_index_0_rename <=> (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/array_obj_ref_2264_index_scale_0/scale_rename_req) (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/array_obj_ref_2264_index_scale_0/scale_rename_ack)
  array_obj_ref_2264_index_offset <=> (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/array_obj_ref_2264_final_index_sum_regn/req) (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/array_obj_ref_2264_final_index_sum_regn/ack)
  array_obj_ref_2264_root_address_inst <=> (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/array_obj_ref_2264_base_plus_offset/sum_rename_req) (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/array_obj_ref_2264_base_plus_offset/sum_rename_ack)
  addr_of_2265_final_reg <=> (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/addr_of_2265_request/req branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/addr_of_2265_complete/req) (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/addr_of_2265_request/ack branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/addr_of_2265_complete/ack)
  // 			->(scevgep10) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 904
  ptr_deref_2268_base_resize <=> (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/ptr_deref_2268_base_addr_resize/base_resize_req) (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/ptr_deref_2268_base_addr_resize/base_resize_ack)
  ptr_deref_2268_root_address_inst <=> (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/ptr_deref_2268_base_plus_offset/sum_rename_req) (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/ptr_deref_2268_base_plus_offset/sum_rename_ack)
  ptr_deref_2268_addr_0 <=> (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/ptr_deref_2268_word_addrgen/root_register_req) (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/ptr_deref_2268_word_addrgen/root_register_ack)
  ptr_deref_2268_gather_scatter <=> (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/ptr_deref_2268_Sample/ptr_deref_2268_Split/split_req) (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/ptr_deref_2268_Sample/ptr_deref_2268_Split/split_ack)
  ptr_deref_2268_store_0 <=> (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/ptr_deref_2268_Sample/word_access_start/word_0/rr branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/ptr_deref_2268_Update/word_access_complete/word_0/cr) (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/ptr_deref_2268_Sample/word_access_start/word_0/ra branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/ptr_deref_2268_Update/word_access_complete/word_0/ca)
  // 			iNsTr_3 := (indexx_x05 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 905
  // (indexx_x05 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_2276_inst <=> (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/ADD_u32_u32_2276_Sample/rr branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/ADD_u32_u32_2276_Update/cr) (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/ADD_u32_u32_2276_Sample/ra branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/ADD_u32_u32_2276_Update/ca)
  // 			exitcond4 := (iNsTr_3 == ($bitcast ($uint<32>) _b00000000000000000000000000001010  ))
  //  file prog.linked.opt.aa, line 906
  // (iNsTr_3 == ($bitcast ($uint<32>) _b00000000000000000000000000001010  ))
  EQ_u32_u1_2282_inst <=> (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/EQ_u32_u1_2282_Sample/rr branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/EQ_u32_u1_2282_Update/cr) (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/EQ_u32_u1_2282_Sample/ra branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/EQ_u32_u1_2282_Update/ca)
  // ( ~ exitcond4 )
  NOT_u1_u1_2286_inst <=> (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/NOT_u1_u1_2286_Sample/rr branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/NOT_u1_u1_2286_Update/cr) (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/NOT_u1_u1_2286_Sample/ra branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/NOT_u1_u1_2286_Update/ca)
  do_while_stmt_2254_branch <=> (branch_block_stmt_2245/do_while_stmt_2254/do_while_stmt_2254_loop_body/condition_evaluated) (branch_block_stmt_2245/do_while_stmt_2254/loop_exit/ack branch_block_stmt_2245/do_while_stmt_2254/loop_taken/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 909
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 912
  phi_stmt_2291 <=> (branch_block_stmt_2245/bbx_xnph4x_xpreheader_bbx_xnph4_PhiReq/phi_stmt_2291/phi_stmt_2291_req) (branch_block_stmt_2245/merge_stmt_2290_PhiAck/phi_stmt_2291_ack)
  // CP-DP links for do-while  do_while_stmt_2297
  //  file prog.linked.opt.aa, line 915
  phi_stmt_2299 <=> (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/phi_stmt_2299_loopback_sample_req branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/phi_stmt_2299_entry_sample_req branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/phi_stmt_2299_update_start_) (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/phi_stmt_2299_sample_completed_ branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/phi_stmt_2299_update_completed_)
  // ($cast ($uint<32>) iNsTr_8 )
  type_cast_2302_inst <=> (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/type_cast_2302_Sample/rr branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/type_cast_2302_Update/cr) (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/type_cast_2302_Sample/ra branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/type_cast_2302_Update/ca)
  // 			scevgep8 := @(HPbuff[indexx_x13])
  //  file prog.linked.opt.aa, line 919
  array_obj_ref_2307_index_0_resize <=> (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/array_obj_ref_2307_index_resize_0/index_resize_req) (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/array_obj_ref_2307_index_resize_0/index_resize_ack)
  array_obj_ref_2307_index_0_rename <=> (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/array_obj_ref_2307_index_scale_0/scale_rename_req) (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/array_obj_ref_2307_index_scale_0/scale_rename_ack)
  array_obj_ref_2307_index_offset <=> (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/array_obj_ref_2307_final_index_sum_regn/req) (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/array_obj_ref_2307_final_index_sum_regn/ack)
  array_obj_ref_2307_root_address_inst <=> (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/array_obj_ref_2307_base_plus_offset/sum_rename_req) (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/array_obj_ref_2307_base_plus_offset/sum_rename_ack)
  addr_of_2308_final_reg <=> (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/addr_of_2308_request/req branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/addr_of_2308_complete/req) (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/addr_of_2308_request/ack branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/addr_of_2308_complete/ack)
  // 			->(scevgep8) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 920
  ptr_deref_2311_base_resize <=> (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/ptr_deref_2311_base_addr_resize/base_resize_req) (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/ptr_deref_2311_base_addr_resize/base_resize_ack)
  ptr_deref_2311_root_address_inst <=> (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/ptr_deref_2311_base_plus_offset/sum_rename_req) (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/ptr_deref_2311_base_plus_offset/sum_rename_ack)
  ptr_deref_2311_addr_0 <=> (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/ptr_deref_2311_word_addrgen/root_register_req) (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/ptr_deref_2311_word_addrgen/root_register_ack)
  ptr_deref_2311_gather_scatter <=> (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/ptr_deref_2311_Sample/ptr_deref_2311_Split/split_req) (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/ptr_deref_2311_Sample/ptr_deref_2311_Split/split_ack)
  ptr_deref_2311_store_0 <=> (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/ptr_deref_2311_Sample/word_access_start/word_0/rr branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/ptr_deref_2311_Update/word_access_complete/word_0/cr) (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/ptr_deref_2311_Sample/word_access_start/word_0/ra branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/ptr_deref_2311_Update/word_access_complete/word_0/ca)
  // 			iNsTr_8 := (indexx_x13 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 921
  // (indexx_x13 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_2319_inst <=> (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/ADD_u32_u32_2319_Sample/rr branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/ADD_u32_u32_2319_Update/cr) (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/ADD_u32_u32_2319_Sample/ra branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/ADD_u32_u32_2319_Update/ca)
  // 			exitcond := (iNsTr_8 == ($bitcast ($uint<32>) _b00000000000000000000000000011001  ))
  //  file prog.linked.opt.aa, line 922
  // (iNsTr_8 == ($bitcast ($uint<32>) _b00000000000000000000000000011001  ))
  EQ_u32_u1_2325_inst <=> (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/EQ_u32_u1_2325_Sample/rr branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/EQ_u32_u1_2325_Update/cr) (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/EQ_u32_u1_2325_Sample/ra branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/EQ_u32_u1_2325_Update/ca)
  // ( ~ exitcond )
  NOT_u1_u1_2329_inst <=> (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/NOT_u1_u1_2329_Sample/rr branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/NOT_u1_u1_2329_Update/cr) (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/NOT_u1_u1_2329_Sample/ra branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/NOT_u1_u1_2329_Update/ca)
  do_while_stmt_2297_branch <=> (branch_block_stmt_2245/do_while_stmt_2297/do_while_stmt_2297_loop_body/condition_evaluated) (branch_block_stmt_2245/do_while_stmt_2297/loop_exit/ack branch_block_stmt_2245/do_while_stmt_2297/loop_taken/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 925
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 928
  phi_stmt_2334 <=> (branch_block_stmt_2245/bbx_xnphx_xpreheader_bbx_xnph_PhiReq/phi_stmt_2334/phi_stmt_2334_req) (branch_block_stmt_2245/merge_stmt_2333_PhiAck/phi_stmt_2334_ack)
  // CP-DP links for do-while  do_while_stmt_2340
  //  file prog.linked.opt.aa, line 931
  phi_stmt_2342 <=> (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/phi_stmt_2342_loopback_sample_req branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/phi_stmt_2342_entry_sample_req branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/phi_stmt_2342_update_start_) (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/phi_stmt_2342_sample_completed_ branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/phi_stmt_2342_update_completed_)
  // ($cast ($uint<32>) iNsTr_13 )
  type_cast_2345_inst <=> (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/type_cast_2345_Sample/rr branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/type_cast_2345_Update/cr) (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/type_cast_2345_Sample/ra branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/type_cast_2345_Update/ca)
  // 			scevgep := @(DERIVbuff[indexx_x21])
  //  file prog.linked.opt.aa, line 935
  array_obj_ref_2350_index_0_resize <=> (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/array_obj_ref_2350_index_resize_0/index_resize_req) (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/array_obj_ref_2350_index_resize_0/index_resize_ack)
  array_obj_ref_2350_index_0_rename <=> (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/array_obj_ref_2350_index_scale_0/scale_rename_req) (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/array_obj_ref_2350_index_scale_0/scale_rename_ack)
  array_obj_ref_2350_index_offset <=> (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/array_obj_ref_2350_final_index_sum_regn/req) (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/array_obj_ref_2350_final_index_sum_regn/ack)
  array_obj_ref_2350_root_address_inst <=> (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/array_obj_ref_2350_base_plus_offset/sum_rename_req) (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/array_obj_ref_2350_base_plus_offset/sum_rename_ack)
  addr_of_2351_final_reg <=> (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/addr_of_2351_request/req branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/addr_of_2351_complete/req) (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/addr_of_2351_request/ack branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/addr_of_2351_complete/ack)
  // 			->(scevgep) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 936
  ptr_deref_2354_base_resize <=> (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/ptr_deref_2354_base_addr_resize/base_resize_req) (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/ptr_deref_2354_base_addr_resize/base_resize_ack)
  ptr_deref_2354_root_address_inst <=> (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/ptr_deref_2354_base_plus_offset/sum_rename_req) (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/ptr_deref_2354_base_plus_offset/sum_rename_ack)
  ptr_deref_2354_addr_0 <=> (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/ptr_deref_2354_word_addrgen/root_register_req) (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/ptr_deref_2354_word_addrgen/root_register_ack)
  ptr_deref_2354_gather_scatter <=> (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/ptr_deref_2354_Sample/ptr_deref_2354_Split/split_req) (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/ptr_deref_2354_Sample/ptr_deref_2354_Split/split_ack)
  ptr_deref_2354_store_0 <=> (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/ptr_deref_2354_Sample/word_access_start/word_0/rr branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/ptr_deref_2354_Update/word_access_complete/word_0/cr) (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/ptr_deref_2354_Sample/word_access_start/word_0/ra branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/ptr_deref_2354_Update/word_access_complete/word_0/ca)
  // 			iNsTr_13 := (indexx_x21 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 937
  // (indexx_x21 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_2362_inst <=> (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/ADD_u32_u32_2362_Sample/rr branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/ADD_u32_u32_2362_Update/cr) (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/ADD_u32_u32_2362_Sample/ra branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/ADD_u32_u32_2362_Update/ca)
  // 			exitcond1 := (iNsTr_13 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
  //  file prog.linked.opt.aa, line 938
  // (iNsTr_13 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
  EQ_u32_u1_2368_inst <=> (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/EQ_u32_u1_2368_Sample/rr branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/EQ_u32_u1_2368_Update/cr) (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/EQ_u32_u1_2368_Sample/ra branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/EQ_u32_u1_2368_Update/ca)
  // ( ~ exitcond1 )
  NOT_u1_u1_2372_inst <=> (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/NOT_u1_u1_2372_Sample/rr branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/NOT_u1_u1_2372_Update/cr) (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/NOT_u1_u1_2372_Sample/ra branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/NOT_u1_u1_2372_Update/ca)
  do_while_stmt_2340_branch <=> (branch_block_stmt_2245/do_while_stmt_2340/do_while_stmt_2340_loop_body/condition_evaluated) (branch_block_stmt_2245/do_while_stmt_2340/loop_exit/ack branch_block_stmt_2245/do_while_stmt_2340/loop_taken/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 941
  // 		LPy1 := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 943
  // LPy1
  STORE_LPy1_2375_gather_scatter <=> (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_LPy1_2375_Sample/STORE_LPy1_2375_Split/split_req) (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_LPy1_2375_Sample/STORE_LPy1_2375_Split/split_ack)
  STORE_LPy1_2375_store_0 <=> (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_LPy1_2375_Sample/word_access_start/word_0/rr branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_LPy1_2375_Update/word_access_complete/word_0/cr) (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_LPy1_2375_Sample/word_access_start/word_0/ra branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_LPy1_2375_Update/word_access_complete/word_0/ca)
  // 		LPy2 := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 944
  // LPy2
  STORE_LPy2_2379_gather_scatter <=> (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_LPy2_2379_Sample/STORE_LPy2_2379_Split/split_req) (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_LPy2_2379_Sample/STORE_LPy2_2379_Split/split_ack)
  STORE_LPy2_2379_store_0 <=> (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_LPy2_2379_Sample/word_access_start/word_0/rr branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_LPy2_2379_Update/word_access_complete/word_0/cr) (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_LPy2_2379_Sample/word_access_start/word_0/ra branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_LPy2_2379_Update/word_access_complete/word_0/ca)
  // 		HPy1 := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 945
  // HPy1
  STORE_HPy1_2383_gather_scatter <=> (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_HPy1_2383_Sample/STORE_HPy1_2383_Split/split_req) (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_HPy1_2383_Sample/STORE_HPy1_2383_Split/split_ack)
  STORE_HPy1_2383_store_0 <=> (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_HPy1_2383_Sample/word_access_start/word_0/rr branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_HPy1_2383_Update/word_access_complete/word_0/cr) (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_HPy1_2383_Sample/word_access_start/word_0/ra branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_HPy1_2383_Update/word_access_complete/word_0/ca)
  // 		WINsum := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 946
  // WINsum
  STORE_WINsum_2387_gather_scatter <=> (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_WINsum_2387_Sample/STORE_WINsum_2387_Split/split_req) (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_WINsum_2387_Sample/STORE_WINsum_2387_Split/split_ack)
  STORE_WINsum_2387_store_0 <=> (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_WINsum_2387_Sample/word_access_start/word_0/rr branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_WINsum_2387_Update/word_access_complete/word_0/cr) (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_WINsum_2387_Sample/word_access_start/word_0/ra branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_WINsum_2387_Update/word_access_complete/word_0/ca)
  // 		LPbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 947
  // LPbuff_ptr
  STORE_LPbuff_ptr_2391_gather_scatter <=> (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_LPbuff_ptr_2391_Sample/STORE_LPbuff_ptr_2391_Split/split_req) (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_LPbuff_ptr_2391_Sample/STORE_LPbuff_ptr_2391_Split/split_ack)
  STORE_LPbuff_ptr_2391_store_0 <=> (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_LPbuff_ptr_2391_Sample/word_access_start/word_0/rr branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_LPbuff_ptr_2391_Update/word_access_complete/word_0/cr) (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_LPbuff_ptr_2391_Sample/word_access_start/word_0/ra branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_LPbuff_ptr_2391_Update/word_access_complete/word_0/ca)
  // 		HPbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 948
  // HPbuff_ptr
  STORE_HPbuff_ptr_2395_gather_scatter <=> (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_HPbuff_ptr_2395_Sample/STORE_HPbuff_ptr_2395_Split/split_req) (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_HPbuff_ptr_2395_Sample/STORE_HPbuff_ptr_2395_Split/split_ack)
  STORE_HPbuff_ptr_2395_store_0 <=> (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_HPbuff_ptr_2395_Sample/word_access_start/word_0/rr branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_HPbuff_ptr_2395_Update/word_access_complete/word_0/cr) (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_HPbuff_ptr_2395_Sample/word_access_start/word_0/ra branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_HPbuff_ptr_2395_Update/word_access_complete/word_0/ca)
  // 		DERIVbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 949
  // DERIVbuff_ptr
  STORE_DERIVbuff_ptr_2399_gather_scatter <=> (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_DERIVbuff_ptr_2399_Sample/STORE_DERIVbuff_ptr_2399_Split/split_req) (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_DERIVbuff_ptr_2399_Sample/STORE_DERIVbuff_ptr_2399_Split/split_ack)
  STORE_DERIVbuff_ptr_2399_store_0 <=> (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_DERIVbuff_ptr_2399_Sample/word_access_start/word_0/rr branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_DERIVbuff_ptr_2399_Update/word_access_complete/word_0/cr) (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_DERIVbuff_ptr_2399_Sample/word_access_start/word_0/ra branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_DERIVbuff_ptr_2399_Update/word_access_complete/word_0/ca)
  // 		WINbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 950
  // WINbuff_ptr
  STORE_WINbuff_ptr_2403_gather_scatter <=> (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_WINbuff_ptr_2403_Sample/STORE_WINbuff_ptr_2403_Split/split_req) (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_WINbuff_ptr_2403_Sample/STORE_WINbuff_ptr_2403_Split/split_ack)
  STORE_WINbuff_ptr_2403_store_0 <=> (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_WINbuff_ptr_2403_Sample/word_access_start/word_0/rr branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_WINbuff_ptr_2403_Update/word_access_complete/word_0/cr) (branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_WINbuff_ptr_2403_Sample/word_access_start/word_0/ra branch_block_stmt_2245/assign_stmt_2378_to_assign_stmt_2406/STORE_WINbuff_ptr_2403_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 952
}
$module [meanCalc] 
{
  $in buffer:$int<32> 
  // can point into  QRSbuff RRbuff NOISEbuff
  $out ret_val__:$int<32>
  // can point into 
  // pipe-declarations for block %meanCalc
  //  file prog.linked.opt.aa, line 956
  // pipe-declarations for block %meanCalc%body
  //  file prog.linked.opt.aa, line 961
  // pipe-declarations for block %meanCalc%body%
  //  file prog.linked.opt.aa, line 987
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_2415] // Branch Block  file prog.linked.opt.aa, line 961
    {
      $P [branch_block_stmt_2415__entry__]
      branch_block_stmt_2415__entry__ <-| ($entry)
      $P [branch_block_stmt_2415__exit__]
      branch_block_stmt_2415__exit__ |-> ($exit)
      $P [assign_stmt_2420_to_assign_stmt_2526__entry__] 
      $P [assign_stmt_2420_to_assign_stmt_2526__exit__] 
      $P [return__]
      $P [merge_stmt_2528__exit__] 
      ::[assign_stmt_2420_to_assign_stmt_2526] 
      {
        // 		scevgepx_x1 := buffer[($bitcast ($uint<32>) _b00000000000000000000000000000001  )]
        //  file prog.linked.opt.aa, line 963
        // Source expression
        // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000001  )]
        $T[array_obj_ref_2419_base_address_calculated] 
        $T[array_obj_ref_2419_sample_start_] 
        $T[array_obj_ref_2419_sample_completed_] 
        $T[array_obj_ref_2419_update_start_] 
        $T[array_obj_ref_2419_update_completed_] 
        $T[array_obj_ref_2419_root_address_calculated] 
        $T[array_obj_ref_2419_base_address_resized] 
        ;;[array_obj_ref_2419_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        array_obj_ref_2419_base_address_calculated &-> (array_obj_ref_2419_base_addr_resize)
        array_obj_ref_2419_base_address_resized <-& (array_obj_ref_2419_base_addr_resize)
        $T[array_obj_ref_2419_base_plus_offset_sample_start] 
        $T[array_obj_ref_2419_base_plus_offset_sample_complete] 
        $T[array_obj_ref_2419_base_plus_offset_update_start] 
        $T[array_obj_ref_2419_base_plus_offset_update_complete] 
        ;;[array_obj_ref_2419_base_plus_offset_sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[array_obj_ref_2419_base_plus_offset_update] 
        {
          $T [cr] $T [ca]
        }
        array_obj_ref_2419_base_plus_offset_sample_start &-> (array_obj_ref_2419_base_plus_offset_sample)
        array_obj_ref_2419_base_plus_offset_update_start &-> (array_obj_ref_2419_base_plus_offset_update)
        array_obj_ref_2419_base_plus_offset_sample_complete <-& (array_obj_ref_2419_base_plus_offset_sample)
        array_obj_ref_2419_base_plus_offset_update_complete <-& (array_obj_ref_2419_base_plus_offset_update)
        array_obj_ref_2419_base_address_resized &-> (array_obj_ref_2419_base_plus_offset_sample_start)
        array_obj_ref_2419_root_address_calculated <-& (array_obj_ref_2419_base_plus_offset_update_complete)
        ;;[array_obj_ref_2419_request] 
        {
          $T [req] $T [ack]
        }
        ;;[array_obj_ref_2419_complete] 
        {
          $T [req] $T [ack]
        }
        array_obj_ref_2419_sample_start_ <-& (array_obj_ref_2419_root_address_calculated)
        array_obj_ref_2419_sample_start_ &-> (array_obj_ref_2419_request)
        array_obj_ref_2419_sample_completed_ <-& (array_obj_ref_2419_request)
        array_obj_ref_2419_update_start_ &-> (array_obj_ref_2419_complete)
        array_obj_ref_2419_update_completed_ <-& (array_obj_ref_2419_complete)
        // Target expression
        // (as target) scevgepx_x1
        // scevgepx_x1
        // implicit reference
        // 		iNsTr_0 := ->(scevgepx_x1)
        //  file prog.linked.opt.aa, line 964
        // Source expression
        // ->(scevgepx_x1)
        $T[ptr_deref_2423_sample_start_] 
        $T[ptr_deref_2423_sample_completed_] 
        $T[ptr_deref_2423_update_start_] 
        $T[ptr_deref_2423_update_completed_] 
        $T[ptr_deref_2423_base_address_calculated] 
        // scevgepx_x1
        $T[R_scevgepx_x1_2422_sample_start_] 
        $T[R_scevgepx_x1_2422_sample_completed_] 
        $T[R_scevgepx_x1_2422_update_start_] 
        $T[R_scevgepx_x1_2422_update_completed_] 
        // implicit reference
        R_scevgepx_x1_2422_sample_start_ <-& (array_obj_ref_2419_update_completed_)
        R_scevgepx_x1_2422_sample_completed_ <-& (R_scevgepx_x1_2422_sample_start_)
        R_scevgepx_x1_2422_update_start_ <-& (R_scevgepx_x1_2422_sample_completed_)
        R_scevgepx_x1_2422_update_completed_ <-& (R_scevgepx_x1_2422_update_start_)
        $T[ptr_deref_2423_word_address_calculated] 
        $T[ptr_deref_2423_root_address_calculated] 
        $T[ptr_deref_2423_base_address_resized] 
        ;;[ptr_deref_2423_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_2423_base_address_calculated &-> (ptr_deref_2423_base_addr_resize)
        ptr_deref_2423_base_address_resized <-& (ptr_deref_2423_base_addr_resize)
        ;;[ptr_deref_2423_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_2423_base_address_resized &-> (ptr_deref_2423_base_plus_offset)
        ptr_deref_2423_root_address_calculated <-& (ptr_deref_2423_base_plus_offset)
        ;;[ptr_deref_2423_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_2423_root_address_calculated &-> (ptr_deref_2423_word_addrgen)
        ptr_deref_2423_word_address_calculated <-& (ptr_deref_2423_word_addrgen)
        ;;[ptr_deref_2423_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_2423_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_2423_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_2423_sample_start_ <-& (ptr_deref_2423_word_address_calculated)
        ptr_deref_2423_sample_start_ &-> (ptr_deref_2423_Sample)
        ptr_deref_2423_sample_completed_ <-& (ptr_deref_2423_Sample)
        ptr_deref_2423_sample_completed_ &-> ($null)
        ptr_deref_2423_update_start_ &-> (ptr_deref_2423_Update)
        ptr_deref_2423_update_completed_ <-& (ptr_deref_2423_Update)
        ptr_deref_2423_base_address_calculated <-& (R_scevgepx_x1_2422_update_completed_)
        ptr_deref_2423_sample_start_ <-& (ptr_deref_2423_base_address_calculated)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // 		iNsTr_1 := ->(buffer)
        //  file prog.linked.opt.aa, line 965
        // Source expression
        // ->(buffer)
        $T[ptr_deref_2427_sample_start_] 
        $T[ptr_deref_2427_sample_completed_] 
        $T[ptr_deref_2427_update_start_] 
        $T[ptr_deref_2427_update_completed_] 
        $T[ptr_deref_2427_base_address_calculated] 
        // buffer
        $T[R_buffer_2426_sample_start_] 
        $T[R_buffer_2426_sample_completed_] 
        $T[R_buffer_2426_update_start_] 
        $T[R_buffer_2426_update_completed_] 
        // reference to interface object
        R_buffer_2426_sample_start_ <-& ($entry)
        R_buffer_2426_sample_completed_ <-& (R_buffer_2426_sample_start_)
        R_buffer_2426_update_start_ <-& (R_buffer_2426_sample_completed_)
        R_buffer_2426_update_completed_ <-& (R_buffer_2426_update_start_)
        $T[ptr_deref_2427_word_address_calculated] 
        $T[ptr_deref_2427_root_address_calculated] 
        $T[ptr_deref_2427_base_address_resized] 
        ;;[ptr_deref_2427_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_2427_base_address_calculated &-> (ptr_deref_2427_base_addr_resize)
        ptr_deref_2427_base_address_resized <-& (ptr_deref_2427_base_addr_resize)
        ;;[ptr_deref_2427_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_2427_base_address_resized &-> (ptr_deref_2427_base_plus_offset)
        ptr_deref_2427_root_address_calculated <-& (ptr_deref_2427_base_plus_offset)
        ;;[ptr_deref_2427_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_2427_root_address_calculated &-> (ptr_deref_2427_word_addrgen)
        ptr_deref_2427_word_address_calculated <-& (ptr_deref_2427_word_addrgen)
        ;;[ptr_deref_2427_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_2427_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_2427_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_2427_sample_start_ <-& (ptr_deref_2427_word_address_calculated)
        ptr_deref_2427_sample_start_ &-> (ptr_deref_2427_Sample)
        ptr_deref_2427_sample_completed_ <-& (ptr_deref_2427_Sample)
        ptr_deref_2427_sample_completed_ &-> ($null)
        ptr_deref_2427_update_start_ &-> (ptr_deref_2427_Update)
        ptr_deref_2427_update_completed_ <-& (ptr_deref_2427_Update)
        ptr_deref_2427_base_address_calculated <-& (R_buffer_2426_update_completed_)
        ptr_deref_2427_sample_start_ <-& (ptr_deref_2427_base_address_calculated)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // 		scevgepx_x2 := buffer[($bitcast ($uint<32>) _b00000000000000000000000000000010  )]
        //  file prog.linked.opt.aa, line 966
        // Source expression
        // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000010  )]
        $T[array_obj_ref_2432_base_address_calculated] 
        $T[array_obj_ref_2432_sample_start_] 
        $T[array_obj_ref_2432_sample_completed_] 
        $T[array_obj_ref_2432_update_start_] 
        $T[array_obj_ref_2432_update_completed_] 
        $T[array_obj_ref_2432_root_address_calculated] 
        $T[array_obj_ref_2432_base_address_resized] 
        ;;[array_obj_ref_2432_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        array_obj_ref_2432_base_address_calculated &-> (array_obj_ref_2432_base_addr_resize)
        array_obj_ref_2432_base_address_resized <-& (array_obj_ref_2432_base_addr_resize)
        $T[array_obj_ref_2432_base_plus_offset_sample_start] 
        $T[array_obj_ref_2432_base_plus_offset_sample_complete] 
        $T[array_obj_ref_2432_base_plus_offset_update_start] 
        $T[array_obj_ref_2432_base_plus_offset_update_complete] 
        ;;[array_obj_ref_2432_base_plus_offset_sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[array_obj_ref_2432_base_plus_offset_update] 
        {
          $T [cr] $T [ca]
        }
        array_obj_ref_2432_base_plus_offset_sample_start &-> (array_obj_ref_2432_base_plus_offset_sample)
        array_obj_ref_2432_base_plus_offset_update_start &-> (array_obj_ref_2432_base_plus_offset_update)
        array_obj_ref_2432_base_plus_offset_sample_complete <-& (array_obj_ref_2432_base_plus_offset_sample)
        array_obj_ref_2432_base_plus_offset_update_complete <-& (array_obj_ref_2432_base_plus_offset_update)
        array_obj_ref_2432_base_address_resized &-> (array_obj_ref_2432_base_plus_offset_sample_start)
        array_obj_ref_2432_root_address_calculated <-& (array_obj_ref_2432_base_plus_offset_update_complete)
        ;;[array_obj_ref_2432_request] 
        {
          $T [req] $T [ack]
        }
        ;;[array_obj_ref_2432_complete] 
        {
          $T [req] $T [ack]
        }
        array_obj_ref_2432_sample_start_ <-& (array_obj_ref_2432_root_address_calculated)
        array_obj_ref_2432_sample_start_ &-> (array_obj_ref_2432_request)
        array_obj_ref_2432_sample_completed_ <-& (array_obj_ref_2432_request)
        array_obj_ref_2432_update_start_ &-> (array_obj_ref_2432_complete)
        array_obj_ref_2432_update_completed_ <-& (array_obj_ref_2432_complete)
        // Target expression
        // (as target) scevgepx_x2
        // scevgepx_x2
        // implicit reference
        // 		scevgepx_x3 := buffer[($bitcast ($uint<32>) _b00000000000000000000000000000011  )]
        //  file prog.linked.opt.aa, line 967
        // Source expression
        // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000011  )]
        $T[array_obj_ref_2437_base_address_calculated] 
        $T[array_obj_ref_2437_sample_start_] 
        $T[array_obj_ref_2437_sample_completed_] 
        $T[array_obj_ref_2437_update_start_] 
        $T[array_obj_ref_2437_update_completed_] 
        $T[array_obj_ref_2437_root_address_calculated] 
        $T[array_obj_ref_2437_base_address_resized] 
        ;;[array_obj_ref_2437_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        array_obj_ref_2437_base_address_calculated &-> (array_obj_ref_2437_base_addr_resize)
        array_obj_ref_2437_base_address_resized <-& (array_obj_ref_2437_base_addr_resize)
        $T[array_obj_ref_2437_base_plus_offset_sample_start] 
        $T[array_obj_ref_2437_base_plus_offset_sample_complete] 
        $T[array_obj_ref_2437_base_plus_offset_update_start] 
        $T[array_obj_ref_2437_base_plus_offset_update_complete] 
        ;;[array_obj_ref_2437_base_plus_offset_sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[array_obj_ref_2437_base_plus_offset_update] 
        {
          $T [cr] $T [ca]
        }
        array_obj_ref_2437_base_plus_offset_sample_start &-> (array_obj_ref_2437_base_plus_offset_sample)
        array_obj_ref_2437_base_plus_offset_update_start &-> (array_obj_ref_2437_base_plus_offset_update)
        array_obj_ref_2437_base_plus_offset_sample_complete <-& (array_obj_ref_2437_base_plus_offset_sample)
        array_obj_ref_2437_base_plus_offset_update_complete <-& (array_obj_ref_2437_base_plus_offset_update)
        array_obj_ref_2437_base_address_resized &-> (array_obj_ref_2437_base_plus_offset_sample_start)
        array_obj_ref_2437_root_address_calculated <-& (array_obj_ref_2437_base_plus_offset_update_complete)
        ;;[array_obj_ref_2437_request] 
        {
          $T [req] $T [ack]
        }
        ;;[array_obj_ref_2437_complete] 
        {
          $T [req] $T [ack]
        }
        array_obj_ref_2437_sample_start_ <-& (array_obj_ref_2437_root_address_calculated)
        array_obj_ref_2437_sample_start_ &-> (array_obj_ref_2437_request)
        array_obj_ref_2437_sample_completed_ <-& (array_obj_ref_2437_request)
        array_obj_ref_2437_update_start_ &-> (array_obj_ref_2437_complete)
        array_obj_ref_2437_update_completed_ <-& (array_obj_ref_2437_complete)
        // Target expression
        // (as target) scevgepx_x3
        // scevgepx_x3
        // implicit reference
        // 		iNsTr_2 := (iNsTr_0 + iNsTr_1)
        //  file prog.linked.opt.aa, line 968
        // Source expression
        // (iNsTr_0 + iNsTr_1)
        $T[ADD_u32_u32_2442_sample_start_] 
        $T[ADD_u32_u32_2442_sample_completed_] 
        $T[ADD_u32_u32_2442_update_start_] 
        $T[ADD_u32_u32_2442_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_2440_sample_start_] 
        $T[R_iNsTr_0_2440_sample_completed_] 
        $T[R_iNsTr_0_2440_update_start_] 
        $T[R_iNsTr_0_2440_update_completed_] 
        // implicit reference
        R_iNsTr_0_2440_sample_start_ <-& (ptr_deref_2423_update_completed_)
        R_iNsTr_0_2440_sample_completed_ <-& (R_iNsTr_0_2440_sample_start_)
        R_iNsTr_0_2440_update_start_ <-& (R_iNsTr_0_2440_sample_completed_)
        R_iNsTr_0_2440_update_completed_ <-& (R_iNsTr_0_2440_update_start_)
        // iNsTr_1
        $T[R_iNsTr_1_2441_sample_start_] 
        $T[R_iNsTr_1_2441_sample_completed_] 
        $T[R_iNsTr_1_2441_update_start_] 
        $T[R_iNsTr_1_2441_update_completed_] 
        // implicit reference
        R_iNsTr_1_2441_sample_start_ <-& (ptr_deref_2427_update_completed_)
        R_iNsTr_1_2441_sample_completed_ <-& (R_iNsTr_1_2441_sample_start_)
        R_iNsTr_1_2441_update_start_ <-& (R_iNsTr_1_2441_sample_completed_)
        R_iNsTr_1_2441_update_completed_ <-& (R_iNsTr_1_2441_update_start_)
        ADD_u32_u32_2442_sample_start_ <-& (R_iNsTr_0_2440_update_completed_)
        ADD_u32_u32_2442_sample_start_ <-& (R_iNsTr_1_2441_update_completed_)
        ;;[ADD_u32_u32_2442_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_2442_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_2442_sample_start_ &-> (ADD_u32_u32_2442_Sample)
        ADD_u32_u32_2442_sample_completed_ <-& (ADD_u32_u32_2442_Sample)
        ADD_u32_u32_2442_sample_completed_ &-> ($null)
        ADD_u32_u32_2442_update_start_ &-> (ADD_u32_u32_2442_Update)
        ADD_u32_u32_2442_update_completed_ <-& (ADD_u32_u32_2442_Update)
        // Target expression
        // (as target) iNsTr_2
        // iNsTr_2
        // implicit reference
        // 		iNsTr_3 := ->(scevgepx_x2)
        //  file prog.linked.opt.aa, line 969
        // Source expression
        // ->(scevgepx_x2)
        $T[ptr_deref_2446_sample_start_] 
        $T[ptr_deref_2446_sample_completed_] 
        $T[ptr_deref_2446_update_start_] 
        $T[ptr_deref_2446_update_completed_] 
        $T[ptr_deref_2446_base_address_calculated] 
        // scevgepx_x2
        $T[R_scevgepx_x2_2445_sample_start_] 
        $T[R_scevgepx_x2_2445_sample_completed_] 
        $T[R_scevgepx_x2_2445_update_start_] 
        $T[R_scevgepx_x2_2445_update_completed_] 
        // implicit reference
        R_scevgepx_x2_2445_sample_start_ <-& (array_obj_ref_2432_update_completed_)
        R_scevgepx_x2_2445_sample_completed_ <-& (R_scevgepx_x2_2445_sample_start_)
        R_scevgepx_x2_2445_update_start_ <-& (R_scevgepx_x2_2445_sample_completed_)
        R_scevgepx_x2_2445_update_completed_ <-& (R_scevgepx_x2_2445_update_start_)
        $T[ptr_deref_2446_word_address_calculated] 
        $T[ptr_deref_2446_root_address_calculated] 
        $T[ptr_deref_2446_base_address_resized] 
        ;;[ptr_deref_2446_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_2446_base_address_calculated &-> (ptr_deref_2446_base_addr_resize)
        ptr_deref_2446_base_address_resized <-& (ptr_deref_2446_base_addr_resize)
        ;;[ptr_deref_2446_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_2446_base_address_resized &-> (ptr_deref_2446_base_plus_offset)
        ptr_deref_2446_root_address_calculated <-& (ptr_deref_2446_base_plus_offset)
        ;;[ptr_deref_2446_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_2446_root_address_calculated &-> (ptr_deref_2446_word_addrgen)
        ptr_deref_2446_word_address_calculated <-& (ptr_deref_2446_word_addrgen)
        ;;[ptr_deref_2446_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_2446_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_2446_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_2446_sample_start_ <-& (ptr_deref_2446_word_address_calculated)
        ptr_deref_2446_sample_start_ &-> (ptr_deref_2446_Sample)
        ptr_deref_2446_sample_completed_ <-& (ptr_deref_2446_Sample)
        ptr_deref_2446_sample_completed_ &-> ($null)
        ptr_deref_2446_update_start_ &-> (ptr_deref_2446_Update)
        ptr_deref_2446_update_completed_ <-& (ptr_deref_2446_Update)
        ptr_deref_2446_base_address_calculated <-& (R_scevgepx_x2_2445_update_completed_)
        ptr_deref_2446_sample_start_ <-& (ptr_deref_2446_base_address_calculated)
        // Target expression
        // (as target) iNsTr_3
        // iNsTr_3
        // implicit reference
        // 		iNsTr_4 := ->(scevgepx_x3)
        //  file prog.linked.opt.aa, line 970
        // Source expression
        // ->(scevgepx_x3)
        $T[ptr_deref_2450_sample_start_] 
        $T[ptr_deref_2450_sample_completed_] 
        $T[ptr_deref_2450_update_start_] 
        $T[ptr_deref_2450_update_completed_] 
        $T[ptr_deref_2450_base_address_calculated] 
        // scevgepx_x3
        $T[R_scevgepx_x3_2449_sample_start_] 
        $T[R_scevgepx_x3_2449_sample_completed_] 
        $T[R_scevgepx_x3_2449_update_start_] 
        $T[R_scevgepx_x3_2449_update_completed_] 
        // implicit reference
        R_scevgepx_x3_2449_sample_start_ <-& (array_obj_ref_2437_update_completed_)
        R_scevgepx_x3_2449_sample_completed_ <-& (R_scevgepx_x3_2449_sample_start_)
        R_scevgepx_x3_2449_update_start_ <-& (R_scevgepx_x3_2449_sample_completed_)
        R_scevgepx_x3_2449_update_completed_ <-& (R_scevgepx_x3_2449_update_start_)
        $T[ptr_deref_2450_word_address_calculated] 
        $T[ptr_deref_2450_root_address_calculated] 
        $T[ptr_deref_2450_base_address_resized] 
        ;;[ptr_deref_2450_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_2450_base_address_calculated &-> (ptr_deref_2450_base_addr_resize)
        ptr_deref_2450_base_address_resized <-& (ptr_deref_2450_base_addr_resize)
        ;;[ptr_deref_2450_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_2450_base_address_resized &-> (ptr_deref_2450_base_plus_offset)
        ptr_deref_2450_root_address_calculated <-& (ptr_deref_2450_base_plus_offset)
        ;;[ptr_deref_2450_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_2450_root_address_calculated &-> (ptr_deref_2450_word_addrgen)
        ptr_deref_2450_word_address_calculated <-& (ptr_deref_2450_word_addrgen)
        ;;[ptr_deref_2450_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_2450_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_2450_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_2450_sample_start_ <-& (ptr_deref_2450_word_address_calculated)
        ptr_deref_2450_sample_start_ &-> (ptr_deref_2450_Sample)
        ptr_deref_2450_sample_completed_ <-& (ptr_deref_2450_Sample)
        ptr_deref_2450_sample_completed_ &-> ($null)
        ptr_deref_2450_update_start_ &-> (ptr_deref_2450_Update)
        ptr_deref_2450_update_completed_ <-& (ptr_deref_2450_Update)
        ptr_deref_2450_base_address_calculated <-& (R_scevgepx_x3_2449_update_completed_)
        ptr_deref_2450_sample_start_ <-& (ptr_deref_2450_base_address_calculated)
        // Target expression
        // (as target) iNsTr_4
        // iNsTr_4
        // implicit reference
        // 		iNsTr_5 := (iNsTr_3 + iNsTr_2)
        //  file prog.linked.opt.aa, line 971
        // Source expression
        // (iNsTr_3 + iNsTr_2)
        $T[ADD_u32_u32_2455_sample_start_] 
        $T[ADD_u32_u32_2455_sample_completed_] 
        $T[ADD_u32_u32_2455_update_start_] 
        $T[ADD_u32_u32_2455_update_completed_] 
        // iNsTr_3
        $T[R_iNsTr_3_2453_sample_start_] 
        $T[R_iNsTr_3_2453_sample_completed_] 
        $T[R_iNsTr_3_2453_update_start_] 
        $T[R_iNsTr_3_2453_update_completed_] 
        // implicit reference
        R_iNsTr_3_2453_sample_start_ <-& (ptr_deref_2446_update_completed_)
        R_iNsTr_3_2453_sample_completed_ <-& (R_iNsTr_3_2453_sample_start_)
        R_iNsTr_3_2453_update_start_ <-& (R_iNsTr_3_2453_sample_completed_)
        R_iNsTr_3_2453_update_completed_ <-& (R_iNsTr_3_2453_update_start_)
        // iNsTr_2
        $T[R_iNsTr_2_2454_sample_start_] 
        $T[R_iNsTr_2_2454_sample_completed_] 
        $T[R_iNsTr_2_2454_update_start_] 
        $T[R_iNsTr_2_2454_update_completed_] 
        // implicit reference
        R_iNsTr_2_2454_sample_start_ <-& (ADD_u32_u32_2442_update_completed_)
        R_iNsTr_2_2454_sample_completed_ <-& (R_iNsTr_2_2454_sample_start_)
        R_iNsTr_2_2454_update_start_ <-& (R_iNsTr_2_2454_sample_completed_)
        R_iNsTr_2_2454_update_completed_ <-& (R_iNsTr_2_2454_update_start_)
        ADD_u32_u32_2455_sample_start_ <-& (R_iNsTr_3_2453_update_completed_)
        ADD_u32_u32_2455_sample_start_ <-& (R_iNsTr_2_2454_update_completed_)
        ;;[ADD_u32_u32_2455_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_2455_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_2455_sample_start_ &-> (ADD_u32_u32_2455_Sample)
        ADD_u32_u32_2455_sample_completed_ <-& (ADD_u32_u32_2455_Sample)
        ADD_u32_u32_2455_sample_completed_ &-> ($null)
        ADD_u32_u32_2455_update_start_ &-> (ADD_u32_u32_2455_Update)
        ADD_u32_u32_2455_update_completed_ <-& (ADD_u32_u32_2455_Update)
        // Target expression
        // (as target) iNsTr_5
        // iNsTr_5
        // implicit reference
        // 		scevgepx_x4 := buffer[($bitcast ($uint<32>) _b00000000000000000000000000000100  )]
        //  file prog.linked.opt.aa, line 972
        // Source expression
        // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000100  )]
        $T[array_obj_ref_2460_base_address_calculated] 
        $T[array_obj_ref_2460_sample_start_] 
        $T[array_obj_ref_2460_sample_completed_] 
        $T[array_obj_ref_2460_update_start_] 
        $T[array_obj_ref_2460_update_completed_] 
        $T[array_obj_ref_2460_root_address_calculated] 
        $T[array_obj_ref_2460_base_address_resized] 
        ;;[array_obj_ref_2460_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        array_obj_ref_2460_base_address_calculated &-> (array_obj_ref_2460_base_addr_resize)
        array_obj_ref_2460_base_address_resized <-& (array_obj_ref_2460_base_addr_resize)
        $T[array_obj_ref_2460_base_plus_offset_sample_start] 
        $T[array_obj_ref_2460_base_plus_offset_sample_complete] 
        $T[array_obj_ref_2460_base_plus_offset_update_start] 
        $T[array_obj_ref_2460_base_plus_offset_update_complete] 
        ;;[array_obj_ref_2460_base_plus_offset_sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[array_obj_ref_2460_base_plus_offset_update] 
        {
          $T [cr] $T [ca]
        }
        array_obj_ref_2460_base_plus_offset_sample_start &-> (array_obj_ref_2460_base_plus_offset_sample)
        array_obj_ref_2460_base_plus_offset_update_start &-> (array_obj_ref_2460_base_plus_offset_update)
        array_obj_ref_2460_base_plus_offset_sample_complete <-& (array_obj_ref_2460_base_plus_offset_sample)
        array_obj_ref_2460_base_plus_offset_update_complete <-& (array_obj_ref_2460_base_plus_offset_update)
        array_obj_ref_2460_base_address_resized &-> (array_obj_ref_2460_base_plus_offset_sample_start)
        array_obj_ref_2460_root_address_calculated <-& (array_obj_ref_2460_base_plus_offset_update_complete)
        ;;[array_obj_ref_2460_request] 
        {
          $T [req] $T [ack]
        }
        ;;[array_obj_ref_2460_complete] 
        {
          $T [req] $T [ack]
        }
        array_obj_ref_2460_sample_start_ <-& (array_obj_ref_2460_root_address_calculated)
        array_obj_ref_2460_sample_start_ &-> (array_obj_ref_2460_request)
        array_obj_ref_2460_sample_completed_ <-& (array_obj_ref_2460_request)
        array_obj_ref_2460_update_start_ &-> (array_obj_ref_2460_complete)
        array_obj_ref_2460_update_completed_ <-& (array_obj_ref_2460_complete)
        // Target expression
        // (as target) scevgepx_x4
        // scevgepx_x4
        // implicit reference
        // 		scevgepx_x5 := buffer[($bitcast ($uint<32>) _b00000000000000000000000000000101  )]
        //  file prog.linked.opt.aa, line 973
        // Source expression
        // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000101  )]
        $T[array_obj_ref_2465_base_address_calculated] 
        $T[array_obj_ref_2465_sample_start_] 
        $T[array_obj_ref_2465_sample_completed_] 
        $T[array_obj_ref_2465_update_start_] 
        $T[array_obj_ref_2465_update_completed_] 
        $T[array_obj_ref_2465_root_address_calculated] 
        $T[array_obj_ref_2465_base_address_resized] 
        ;;[array_obj_ref_2465_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        array_obj_ref_2465_base_address_calculated &-> (array_obj_ref_2465_base_addr_resize)
        array_obj_ref_2465_base_address_resized <-& (array_obj_ref_2465_base_addr_resize)
        $T[array_obj_ref_2465_base_plus_offset_sample_start] 
        $T[array_obj_ref_2465_base_plus_offset_sample_complete] 
        $T[array_obj_ref_2465_base_plus_offset_update_start] 
        $T[array_obj_ref_2465_base_plus_offset_update_complete] 
        ;;[array_obj_ref_2465_base_plus_offset_sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[array_obj_ref_2465_base_plus_offset_update] 
        {
          $T [cr] $T [ca]
        }
        array_obj_ref_2465_base_plus_offset_sample_start &-> (array_obj_ref_2465_base_plus_offset_sample)
        array_obj_ref_2465_base_plus_offset_update_start &-> (array_obj_ref_2465_base_plus_offset_update)
        array_obj_ref_2465_base_plus_offset_sample_complete <-& (array_obj_ref_2465_base_plus_offset_sample)
        array_obj_ref_2465_base_plus_offset_update_complete <-& (array_obj_ref_2465_base_plus_offset_update)
        array_obj_ref_2465_base_address_resized &-> (array_obj_ref_2465_base_plus_offset_sample_start)
        array_obj_ref_2465_root_address_calculated <-& (array_obj_ref_2465_base_plus_offset_update_complete)
        ;;[array_obj_ref_2465_request] 
        {
          $T [req] $T [ack]
        }
        ;;[array_obj_ref_2465_complete] 
        {
          $T [req] $T [ack]
        }
        array_obj_ref_2465_sample_start_ <-& (array_obj_ref_2465_root_address_calculated)
        array_obj_ref_2465_sample_start_ &-> (array_obj_ref_2465_request)
        array_obj_ref_2465_sample_completed_ <-& (array_obj_ref_2465_request)
        array_obj_ref_2465_update_start_ &-> (array_obj_ref_2465_complete)
        array_obj_ref_2465_update_completed_ <-& (array_obj_ref_2465_complete)
        // Target expression
        // (as target) scevgepx_x5
        // scevgepx_x5
        // implicit reference
        // 		iNsTr_6 := (iNsTr_4 + iNsTr_5)
        //  file prog.linked.opt.aa, line 974
        // Source expression
        // (iNsTr_4 + iNsTr_5)
        $T[ADD_u32_u32_2470_sample_start_] 
        $T[ADD_u32_u32_2470_sample_completed_] 
        $T[ADD_u32_u32_2470_update_start_] 
        $T[ADD_u32_u32_2470_update_completed_] 
        // iNsTr_4
        $T[R_iNsTr_4_2468_sample_start_] 
        $T[R_iNsTr_4_2468_sample_completed_] 
        $T[R_iNsTr_4_2468_update_start_] 
        $T[R_iNsTr_4_2468_update_completed_] 
        // implicit reference
        R_iNsTr_4_2468_sample_start_ <-& (ptr_deref_2450_update_completed_)
        R_iNsTr_4_2468_sample_completed_ <-& (R_iNsTr_4_2468_sample_start_)
        R_iNsTr_4_2468_update_start_ <-& (R_iNsTr_4_2468_sample_completed_)
        R_iNsTr_4_2468_update_completed_ <-& (R_iNsTr_4_2468_update_start_)
        // iNsTr_5
        $T[R_iNsTr_5_2469_sample_start_] 
        $T[R_iNsTr_5_2469_sample_completed_] 
        $T[R_iNsTr_5_2469_update_start_] 
        $T[R_iNsTr_5_2469_update_completed_] 
        // implicit reference
        R_iNsTr_5_2469_sample_start_ <-& (ADD_u32_u32_2455_update_completed_)
        R_iNsTr_5_2469_sample_completed_ <-& (R_iNsTr_5_2469_sample_start_)
        R_iNsTr_5_2469_update_start_ <-& (R_iNsTr_5_2469_sample_completed_)
        R_iNsTr_5_2469_update_completed_ <-& (R_iNsTr_5_2469_update_start_)
        ADD_u32_u32_2470_sample_start_ <-& (R_iNsTr_4_2468_update_completed_)
        ADD_u32_u32_2470_sample_start_ <-& (R_iNsTr_5_2469_update_completed_)
        ;;[ADD_u32_u32_2470_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_2470_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_2470_sample_start_ &-> (ADD_u32_u32_2470_Sample)
        ADD_u32_u32_2470_sample_completed_ <-& (ADD_u32_u32_2470_Sample)
        ADD_u32_u32_2470_sample_completed_ &-> ($null)
        ADD_u32_u32_2470_update_start_ &-> (ADD_u32_u32_2470_Update)
        ADD_u32_u32_2470_update_completed_ <-& (ADD_u32_u32_2470_Update)
        // Target expression
        // (as target) iNsTr_6
        // iNsTr_6
        // implicit reference
        // 		iNsTr_7 := ->(scevgepx_x4)
        //  file prog.linked.opt.aa, line 975
        // Source expression
        // ->(scevgepx_x4)
        $T[ptr_deref_2474_sample_start_] 
        $T[ptr_deref_2474_sample_completed_] 
        $T[ptr_deref_2474_update_start_] 
        $T[ptr_deref_2474_update_completed_] 
        $T[ptr_deref_2474_base_address_calculated] 
        // scevgepx_x4
        $T[R_scevgepx_x4_2473_sample_start_] 
        $T[R_scevgepx_x4_2473_sample_completed_] 
        $T[R_scevgepx_x4_2473_update_start_] 
        $T[R_scevgepx_x4_2473_update_completed_] 
        // implicit reference
        R_scevgepx_x4_2473_sample_start_ <-& (array_obj_ref_2460_update_completed_)
        R_scevgepx_x4_2473_sample_completed_ <-& (R_scevgepx_x4_2473_sample_start_)
        R_scevgepx_x4_2473_update_start_ <-& (R_scevgepx_x4_2473_sample_completed_)
        R_scevgepx_x4_2473_update_completed_ <-& (R_scevgepx_x4_2473_update_start_)
        $T[ptr_deref_2474_word_address_calculated] 
        $T[ptr_deref_2474_root_address_calculated] 
        $T[ptr_deref_2474_base_address_resized] 
        ;;[ptr_deref_2474_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_2474_base_address_calculated &-> (ptr_deref_2474_base_addr_resize)
        ptr_deref_2474_base_address_resized <-& (ptr_deref_2474_base_addr_resize)
        ;;[ptr_deref_2474_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_2474_base_address_resized &-> (ptr_deref_2474_base_plus_offset)
        ptr_deref_2474_root_address_calculated <-& (ptr_deref_2474_base_plus_offset)
        ;;[ptr_deref_2474_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_2474_root_address_calculated &-> (ptr_deref_2474_word_addrgen)
        ptr_deref_2474_word_address_calculated <-& (ptr_deref_2474_word_addrgen)
        ;;[ptr_deref_2474_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_2474_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_2474_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_2474_sample_start_ <-& (ptr_deref_2474_word_address_calculated)
        ptr_deref_2474_sample_start_ &-> (ptr_deref_2474_Sample)
        ptr_deref_2474_sample_completed_ <-& (ptr_deref_2474_Sample)
        ptr_deref_2474_sample_completed_ &-> ($null)
        ptr_deref_2474_update_start_ &-> (ptr_deref_2474_Update)
        ptr_deref_2474_update_completed_ <-& (ptr_deref_2474_Update)
        ptr_deref_2474_base_address_calculated <-& (R_scevgepx_x4_2473_update_completed_)
        ptr_deref_2474_sample_start_ <-& (ptr_deref_2474_base_address_calculated)
        // Target expression
        // (as target) iNsTr_7
        // iNsTr_7
        // implicit reference
        // 		iNsTr_8 := ->(scevgepx_x5)
        //  file prog.linked.opt.aa, line 976
        // Source expression
        // ->(scevgepx_x5)
        $T[ptr_deref_2478_sample_start_] 
        $T[ptr_deref_2478_sample_completed_] 
        $T[ptr_deref_2478_update_start_] 
        $T[ptr_deref_2478_update_completed_] 
        $T[ptr_deref_2478_base_address_calculated] 
        // scevgepx_x5
        $T[R_scevgepx_x5_2477_sample_start_] 
        $T[R_scevgepx_x5_2477_sample_completed_] 
        $T[R_scevgepx_x5_2477_update_start_] 
        $T[R_scevgepx_x5_2477_update_completed_] 
        // implicit reference
        R_scevgepx_x5_2477_sample_start_ <-& (array_obj_ref_2465_update_completed_)
        R_scevgepx_x5_2477_sample_completed_ <-& (R_scevgepx_x5_2477_sample_start_)
        R_scevgepx_x5_2477_update_start_ <-& (R_scevgepx_x5_2477_sample_completed_)
        R_scevgepx_x5_2477_update_completed_ <-& (R_scevgepx_x5_2477_update_start_)
        $T[ptr_deref_2478_word_address_calculated] 
        $T[ptr_deref_2478_root_address_calculated] 
        $T[ptr_deref_2478_base_address_resized] 
        ;;[ptr_deref_2478_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_2478_base_address_calculated &-> (ptr_deref_2478_base_addr_resize)
        ptr_deref_2478_base_address_resized <-& (ptr_deref_2478_base_addr_resize)
        ;;[ptr_deref_2478_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_2478_base_address_resized &-> (ptr_deref_2478_base_plus_offset)
        ptr_deref_2478_root_address_calculated <-& (ptr_deref_2478_base_plus_offset)
        ;;[ptr_deref_2478_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_2478_root_address_calculated &-> (ptr_deref_2478_word_addrgen)
        ptr_deref_2478_word_address_calculated <-& (ptr_deref_2478_word_addrgen)
        ;;[ptr_deref_2478_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_2478_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_2478_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_2478_sample_start_ <-& (ptr_deref_2478_word_address_calculated)
        ptr_deref_2478_sample_start_ &-> (ptr_deref_2478_Sample)
        ptr_deref_2478_sample_completed_ <-& (ptr_deref_2478_Sample)
        ptr_deref_2478_sample_completed_ &-> ($null)
        ptr_deref_2478_update_start_ &-> (ptr_deref_2478_Update)
        ptr_deref_2478_update_completed_ <-& (ptr_deref_2478_Update)
        ptr_deref_2478_base_address_calculated <-& (R_scevgepx_x5_2477_update_completed_)
        ptr_deref_2478_sample_start_ <-& (ptr_deref_2478_base_address_calculated)
        // Target expression
        // (as target) iNsTr_8
        // iNsTr_8
        // implicit reference
        // 		iNsTr_9 := (iNsTr_7 + iNsTr_6)
        //  file prog.linked.opt.aa, line 977
        // Source expression
        // (iNsTr_7 + iNsTr_6)
        $T[ADD_u32_u32_2483_sample_start_] 
        $T[ADD_u32_u32_2483_sample_completed_] 
        $T[ADD_u32_u32_2483_update_start_] 
        $T[ADD_u32_u32_2483_update_completed_] 
        // iNsTr_7
        $T[R_iNsTr_7_2481_sample_start_] 
        $T[R_iNsTr_7_2481_sample_completed_] 
        $T[R_iNsTr_7_2481_update_start_] 
        $T[R_iNsTr_7_2481_update_completed_] 
        // implicit reference
        R_iNsTr_7_2481_sample_start_ <-& (ptr_deref_2474_update_completed_)
        R_iNsTr_7_2481_sample_completed_ <-& (R_iNsTr_7_2481_sample_start_)
        R_iNsTr_7_2481_update_start_ <-& (R_iNsTr_7_2481_sample_completed_)
        R_iNsTr_7_2481_update_completed_ <-& (R_iNsTr_7_2481_update_start_)
        // iNsTr_6
        $T[R_iNsTr_6_2482_sample_start_] 
        $T[R_iNsTr_6_2482_sample_completed_] 
        $T[R_iNsTr_6_2482_update_start_] 
        $T[R_iNsTr_6_2482_update_completed_] 
        // implicit reference
        R_iNsTr_6_2482_sample_start_ <-& (ADD_u32_u32_2470_update_completed_)
        R_iNsTr_6_2482_sample_completed_ <-& (R_iNsTr_6_2482_sample_start_)
        R_iNsTr_6_2482_update_start_ <-& (R_iNsTr_6_2482_sample_completed_)
        R_iNsTr_6_2482_update_completed_ <-& (R_iNsTr_6_2482_update_start_)
        ADD_u32_u32_2483_sample_start_ <-& (R_iNsTr_7_2481_update_completed_)
        ADD_u32_u32_2483_sample_start_ <-& (R_iNsTr_6_2482_update_completed_)
        ;;[ADD_u32_u32_2483_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_2483_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_2483_sample_start_ &-> (ADD_u32_u32_2483_Sample)
        ADD_u32_u32_2483_sample_completed_ <-& (ADD_u32_u32_2483_Sample)
        ADD_u32_u32_2483_sample_completed_ &-> ($null)
        ADD_u32_u32_2483_update_start_ &-> (ADD_u32_u32_2483_Update)
        ADD_u32_u32_2483_update_completed_ <-& (ADD_u32_u32_2483_Update)
        // Target expression
        // (as target) iNsTr_9
        // iNsTr_9
        // implicit reference
        // 		scevgepx_x6 := buffer[($bitcast ($uint<32>) _b00000000000000000000000000000110  )]
        //  file prog.linked.opt.aa, line 978
        // Source expression
        // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000110  )]
        $T[array_obj_ref_2488_base_address_calculated] 
        $T[array_obj_ref_2488_sample_start_] 
        $T[array_obj_ref_2488_sample_completed_] 
        $T[array_obj_ref_2488_update_start_] 
        $T[array_obj_ref_2488_update_completed_] 
        $T[array_obj_ref_2488_root_address_calculated] 
        $T[array_obj_ref_2488_base_address_resized] 
        ;;[array_obj_ref_2488_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        array_obj_ref_2488_base_address_calculated &-> (array_obj_ref_2488_base_addr_resize)
        array_obj_ref_2488_base_address_resized <-& (array_obj_ref_2488_base_addr_resize)
        $T[array_obj_ref_2488_base_plus_offset_sample_start] 
        $T[array_obj_ref_2488_base_plus_offset_sample_complete] 
        $T[array_obj_ref_2488_base_plus_offset_update_start] 
        $T[array_obj_ref_2488_base_plus_offset_update_complete] 
        ;;[array_obj_ref_2488_base_plus_offset_sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[array_obj_ref_2488_base_plus_offset_update] 
        {
          $T [cr] $T [ca]
        }
        array_obj_ref_2488_base_plus_offset_sample_start &-> (array_obj_ref_2488_base_plus_offset_sample)
        array_obj_ref_2488_base_plus_offset_update_start &-> (array_obj_ref_2488_base_plus_offset_update)
        array_obj_ref_2488_base_plus_offset_sample_complete <-& (array_obj_ref_2488_base_plus_offset_sample)
        array_obj_ref_2488_base_plus_offset_update_complete <-& (array_obj_ref_2488_base_plus_offset_update)
        array_obj_ref_2488_base_address_resized &-> (array_obj_ref_2488_base_plus_offset_sample_start)
        array_obj_ref_2488_root_address_calculated <-& (array_obj_ref_2488_base_plus_offset_update_complete)
        ;;[array_obj_ref_2488_request] 
        {
          $T [req] $T [ack]
        }
        ;;[array_obj_ref_2488_complete] 
        {
          $T [req] $T [ack]
        }
        array_obj_ref_2488_sample_start_ <-& (array_obj_ref_2488_root_address_calculated)
        array_obj_ref_2488_sample_start_ &-> (array_obj_ref_2488_request)
        array_obj_ref_2488_sample_completed_ <-& (array_obj_ref_2488_request)
        array_obj_ref_2488_update_start_ &-> (array_obj_ref_2488_complete)
        array_obj_ref_2488_update_completed_ <-& (array_obj_ref_2488_complete)
        // Target expression
        // (as target) scevgepx_x6
        // scevgepx_x6
        // implicit reference
        // 		scevgepx_x7 := buffer[($bitcast ($uint<32>) _b00000000000000000000000000000111  )]
        //  file prog.linked.opt.aa, line 979
        // Source expression
        // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000111  )]
        $T[array_obj_ref_2493_base_address_calculated] 
        $T[array_obj_ref_2493_sample_start_] 
        $T[array_obj_ref_2493_sample_completed_] 
        $T[array_obj_ref_2493_update_start_] 
        $T[array_obj_ref_2493_update_completed_] 
        $T[array_obj_ref_2493_root_address_calculated] 
        $T[array_obj_ref_2493_base_address_resized] 
        ;;[array_obj_ref_2493_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        array_obj_ref_2493_base_address_calculated &-> (array_obj_ref_2493_base_addr_resize)
        array_obj_ref_2493_base_address_resized <-& (array_obj_ref_2493_base_addr_resize)
        $T[array_obj_ref_2493_base_plus_offset_sample_start] 
        $T[array_obj_ref_2493_base_plus_offset_sample_complete] 
        $T[array_obj_ref_2493_base_plus_offset_update_start] 
        $T[array_obj_ref_2493_base_plus_offset_update_complete] 
        ;;[array_obj_ref_2493_base_plus_offset_sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[array_obj_ref_2493_base_plus_offset_update] 
        {
          $T [cr] $T [ca]
        }
        array_obj_ref_2493_base_plus_offset_sample_start &-> (array_obj_ref_2493_base_plus_offset_sample)
        array_obj_ref_2493_base_plus_offset_update_start &-> (array_obj_ref_2493_base_plus_offset_update)
        array_obj_ref_2493_base_plus_offset_sample_complete <-& (array_obj_ref_2493_base_plus_offset_sample)
        array_obj_ref_2493_base_plus_offset_update_complete <-& (array_obj_ref_2493_base_plus_offset_update)
        array_obj_ref_2493_base_address_resized &-> (array_obj_ref_2493_base_plus_offset_sample_start)
        array_obj_ref_2493_root_address_calculated <-& (array_obj_ref_2493_base_plus_offset_update_complete)
        ;;[array_obj_ref_2493_request] 
        {
          $T [req] $T [ack]
        }
        ;;[array_obj_ref_2493_complete] 
        {
          $T [req] $T [ack]
        }
        array_obj_ref_2493_sample_start_ <-& (array_obj_ref_2493_root_address_calculated)
        array_obj_ref_2493_sample_start_ &-> (array_obj_ref_2493_request)
        array_obj_ref_2493_sample_completed_ <-& (array_obj_ref_2493_request)
        array_obj_ref_2493_update_start_ &-> (array_obj_ref_2493_complete)
        array_obj_ref_2493_update_completed_ <-& (array_obj_ref_2493_complete)
        // Target expression
        // (as target) scevgepx_x7
        // scevgepx_x7
        // implicit reference
        // 		iNsTr_10 := (iNsTr_8 + iNsTr_9)
        //  file prog.linked.opt.aa, line 980
        // Source expression
        // (iNsTr_8 + iNsTr_9)
        $T[ADD_u32_u32_2498_sample_start_] 
        $T[ADD_u32_u32_2498_sample_completed_] 
        $T[ADD_u32_u32_2498_update_start_] 
        $T[ADD_u32_u32_2498_update_completed_] 
        // iNsTr_8
        $T[R_iNsTr_8_2496_sample_start_] 
        $T[R_iNsTr_8_2496_sample_completed_] 
        $T[R_iNsTr_8_2496_update_start_] 
        $T[R_iNsTr_8_2496_update_completed_] 
        // implicit reference
        R_iNsTr_8_2496_sample_start_ <-& (ptr_deref_2478_update_completed_)
        R_iNsTr_8_2496_sample_completed_ <-& (R_iNsTr_8_2496_sample_start_)
        R_iNsTr_8_2496_update_start_ <-& (R_iNsTr_8_2496_sample_completed_)
        R_iNsTr_8_2496_update_completed_ <-& (R_iNsTr_8_2496_update_start_)
        // iNsTr_9
        $T[R_iNsTr_9_2497_sample_start_] 
        $T[R_iNsTr_9_2497_sample_completed_] 
        $T[R_iNsTr_9_2497_update_start_] 
        $T[R_iNsTr_9_2497_update_completed_] 
        // implicit reference
        R_iNsTr_9_2497_sample_start_ <-& (ADD_u32_u32_2483_update_completed_)
        R_iNsTr_9_2497_sample_completed_ <-& (R_iNsTr_9_2497_sample_start_)
        R_iNsTr_9_2497_update_start_ <-& (R_iNsTr_9_2497_sample_completed_)
        R_iNsTr_9_2497_update_completed_ <-& (R_iNsTr_9_2497_update_start_)
        ADD_u32_u32_2498_sample_start_ <-& (R_iNsTr_8_2496_update_completed_)
        ADD_u32_u32_2498_sample_start_ <-& (R_iNsTr_9_2497_update_completed_)
        ;;[ADD_u32_u32_2498_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_2498_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_2498_sample_start_ &-> (ADD_u32_u32_2498_Sample)
        ADD_u32_u32_2498_sample_completed_ <-& (ADD_u32_u32_2498_Sample)
        ADD_u32_u32_2498_sample_completed_ &-> ($null)
        ADD_u32_u32_2498_update_start_ &-> (ADD_u32_u32_2498_Update)
        ADD_u32_u32_2498_update_completed_ <-& (ADD_u32_u32_2498_Update)
        // Target expression
        // (as target) iNsTr_10
        // iNsTr_10
        // implicit reference
        // 		iNsTr_11 := ->(scevgepx_x6)
        //  file prog.linked.opt.aa, line 981
        // Source expression
        // ->(scevgepx_x6)
        $T[ptr_deref_2502_sample_start_] 
        $T[ptr_deref_2502_sample_completed_] 
        $T[ptr_deref_2502_update_start_] 
        $T[ptr_deref_2502_update_completed_] 
        $T[ptr_deref_2502_base_address_calculated] 
        // scevgepx_x6
        $T[R_scevgepx_x6_2501_sample_start_] 
        $T[R_scevgepx_x6_2501_sample_completed_] 
        $T[R_scevgepx_x6_2501_update_start_] 
        $T[R_scevgepx_x6_2501_update_completed_] 
        // implicit reference
        R_scevgepx_x6_2501_sample_start_ <-& (array_obj_ref_2488_update_completed_)
        R_scevgepx_x6_2501_sample_completed_ <-& (R_scevgepx_x6_2501_sample_start_)
        R_scevgepx_x6_2501_update_start_ <-& (R_scevgepx_x6_2501_sample_completed_)
        R_scevgepx_x6_2501_update_completed_ <-& (R_scevgepx_x6_2501_update_start_)
        $T[ptr_deref_2502_word_address_calculated] 
        $T[ptr_deref_2502_root_address_calculated] 
        $T[ptr_deref_2502_base_address_resized] 
        ;;[ptr_deref_2502_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_2502_base_address_calculated &-> (ptr_deref_2502_base_addr_resize)
        ptr_deref_2502_base_address_resized <-& (ptr_deref_2502_base_addr_resize)
        ;;[ptr_deref_2502_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_2502_base_address_resized &-> (ptr_deref_2502_base_plus_offset)
        ptr_deref_2502_root_address_calculated <-& (ptr_deref_2502_base_plus_offset)
        ;;[ptr_deref_2502_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_2502_root_address_calculated &-> (ptr_deref_2502_word_addrgen)
        ptr_deref_2502_word_address_calculated <-& (ptr_deref_2502_word_addrgen)
        ;;[ptr_deref_2502_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_2502_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_2502_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_2502_sample_start_ <-& (ptr_deref_2502_word_address_calculated)
        ptr_deref_2502_sample_start_ &-> (ptr_deref_2502_Sample)
        ptr_deref_2502_sample_completed_ <-& (ptr_deref_2502_Sample)
        ptr_deref_2502_sample_completed_ &-> ($null)
        ptr_deref_2502_update_start_ &-> (ptr_deref_2502_Update)
        ptr_deref_2502_update_completed_ <-& (ptr_deref_2502_Update)
        ptr_deref_2502_base_address_calculated <-& (R_scevgepx_x6_2501_update_completed_)
        ptr_deref_2502_sample_start_ <-& (ptr_deref_2502_base_address_calculated)
        // Target expression
        // (as target) iNsTr_11
        // iNsTr_11
        // implicit reference
        // 		iNsTr_12 := ->(scevgepx_x7)
        //  file prog.linked.opt.aa, line 982
        // Source expression
        // ->(scevgepx_x7)
        $T[ptr_deref_2506_sample_start_] 
        $T[ptr_deref_2506_sample_completed_] 
        $T[ptr_deref_2506_update_start_] 
        $T[ptr_deref_2506_update_completed_] 
        $T[ptr_deref_2506_base_address_calculated] 
        // scevgepx_x7
        $T[R_scevgepx_x7_2505_sample_start_] 
        $T[R_scevgepx_x7_2505_sample_completed_] 
        $T[R_scevgepx_x7_2505_update_start_] 
        $T[R_scevgepx_x7_2505_update_completed_] 
        // implicit reference
        R_scevgepx_x7_2505_sample_start_ <-& (array_obj_ref_2493_update_completed_)
        R_scevgepx_x7_2505_sample_completed_ <-& (R_scevgepx_x7_2505_sample_start_)
        R_scevgepx_x7_2505_update_start_ <-& (R_scevgepx_x7_2505_sample_completed_)
        R_scevgepx_x7_2505_update_completed_ <-& (R_scevgepx_x7_2505_update_start_)
        $T[ptr_deref_2506_word_address_calculated] 
        $T[ptr_deref_2506_root_address_calculated] 
        $T[ptr_deref_2506_base_address_resized] 
        ;;[ptr_deref_2506_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_2506_base_address_calculated &-> (ptr_deref_2506_base_addr_resize)
        ptr_deref_2506_base_address_resized <-& (ptr_deref_2506_base_addr_resize)
        ;;[ptr_deref_2506_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_2506_base_address_resized &-> (ptr_deref_2506_base_plus_offset)
        ptr_deref_2506_root_address_calculated <-& (ptr_deref_2506_base_plus_offset)
        ;;[ptr_deref_2506_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_2506_root_address_calculated &-> (ptr_deref_2506_word_addrgen)
        ptr_deref_2506_word_address_calculated <-& (ptr_deref_2506_word_addrgen)
        ;;[ptr_deref_2506_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_2506_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_2506_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_2506_sample_start_ <-& (ptr_deref_2506_word_address_calculated)
        ptr_deref_2506_sample_start_ &-> (ptr_deref_2506_Sample)
        ptr_deref_2506_sample_completed_ <-& (ptr_deref_2506_Sample)
        ptr_deref_2506_sample_completed_ &-> ($null)
        ptr_deref_2506_update_start_ &-> (ptr_deref_2506_Update)
        ptr_deref_2506_update_completed_ <-& (ptr_deref_2506_Update)
        ptr_deref_2506_base_address_calculated <-& (R_scevgepx_x7_2505_update_completed_)
        ptr_deref_2506_sample_start_ <-& (ptr_deref_2506_base_address_calculated)
        // Target expression
        // (as target) iNsTr_12
        // iNsTr_12
        // implicit reference
        // 		iNsTr_13 := (iNsTr_11 + iNsTr_10)
        //  file prog.linked.opt.aa, line 983
        // Source expression
        // (iNsTr_11 + iNsTr_10)
        $T[ADD_u32_u32_2511_sample_start_] 
        $T[ADD_u32_u32_2511_sample_completed_] 
        $T[ADD_u32_u32_2511_update_start_] 
        $T[ADD_u32_u32_2511_update_completed_] 
        // iNsTr_11
        $T[R_iNsTr_11_2509_sample_start_] 
        $T[R_iNsTr_11_2509_sample_completed_] 
        $T[R_iNsTr_11_2509_update_start_] 
        $T[R_iNsTr_11_2509_update_completed_] 
        // implicit reference
        R_iNsTr_11_2509_sample_start_ <-& (ptr_deref_2502_update_completed_)
        R_iNsTr_11_2509_sample_completed_ <-& (R_iNsTr_11_2509_sample_start_)
        R_iNsTr_11_2509_update_start_ <-& (R_iNsTr_11_2509_sample_completed_)
        R_iNsTr_11_2509_update_completed_ <-& (R_iNsTr_11_2509_update_start_)
        // iNsTr_10
        $T[R_iNsTr_10_2510_sample_start_] 
        $T[R_iNsTr_10_2510_sample_completed_] 
        $T[R_iNsTr_10_2510_update_start_] 
        $T[R_iNsTr_10_2510_update_completed_] 
        // implicit reference
        R_iNsTr_10_2510_sample_start_ <-& (ADD_u32_u32_2498_update_completed_)
        R_iNsTr_10_2510_sample_completed_ <-& (R_iNsTr_10_2510_sample_start_)
        R_iNsTr_10_2510_update_start_ <-& (R_iNsTr_10_2510_sample_completed_)
        R_iNsTr_10_2510_update_completed_ <-& (R_iNsTr_10_2510_update_start_)
        ADD_u32_u32_2511_sample_start_ <-& (R_iNsTr_11_2509_update_completed_)
        ADD_u32_u32_2511_sample_start_ <-& (R_iNsTr_10_2510_update_completed_)
        ;;[ADD_u32_u32_2511_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_2511_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_2511_sample_start_ &-> (ADD_u32_u32_2511_Sample)
        ADD_u32_u32_2511_sample_completed_ <-& (ADD_u32_u32_2511_Sample)
        ADD_u32_u32_2511_sample_completed_ &-> ($null)
        ADD_u32_u32_2511_update_start_ &-> (ADD_u32_u32_2511_Update)
        ADD_u32_u32_2511_update_completed_ <-& (ADD_u32_u32_2511_Update)
        // Target expression
        // (as target) iNsTr_13
        // iNsTr_13
        // implicit reference
        // 		iNsTr_14 := (iNsTr_12 + iNsTr_13)
        //  file prog.linked.opt.aa, line 984
        // Source expression
        // (iNsTr_12 + iNsTr_13)
        $T[ADD_u32_u32_2516_sample_start_] 
        $T[ADD_u32_u32_2516_sample_completed_] 
        $T[ADD_u32_u32_2516_update_start_] 
        $T[ADD_u32_u32_2516_update_completed_] 
        // iNsTr_12
        $T[R_iNsTr_12_2514_sample_start_] 
        $T[R_iNsTr_12_2514_sample_completed_] 
        $T[R_iNsTr_12_2514_update_start_] 
        $T[R_iNsTr_12_2514_update_completed_] 
        // implicit reference
        R_iNsTr_12_2514_sample_start_ <-& (ptr_deref_2506_update_completed_)
        R_iNsTr_12_2514_sample_completed_ <-& (R_iNsTr_12_2514_sample_start_)
        R_iNsTr_12_2514_update_start_ <-& (R_iNsTr_12_2514_sample_completed_)
        R_iNsTr_12_2514_update_completed_ <-& (R_iNsTr_12_2514_update_start_)
        // iNsTr_13
        $T[R_iNsTr_13_2515_sample_start_] 
        $T[R_iNsTr_13_2515_sample_completed_] 
        $T[R_iNsTr_13_2515_update_start_] 
        $T[R_iNsTr_13_2515_update_completed_] 
        // implicit reference
        R_iNsTr_13_2515_sample_start_ <-& (ADD_u32_u32_2511_update_completed_)
        R_iNsTr_13_2515_sample_completed_ <-& (R_iNsTr_13_2515_sample_start_)
        R_iNsTr_13_2515_update_start_ <-& (R_iNsTr_13_2515_sample_completed_)
        R_iNsTr_13_2515_update_completed_ <-& (R_iNsTr_13_2515_update_start_)
        ADD_u32_u32_2516_sample_start_ <-& (R_iNsTr_12_2514_update_completed_)
        ADD_u32_u32_2516_sample_start_ <-& (R_iNsTr_13_2515_update_completed_)
        ;;[ADD_u32_u32_2516_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_2516_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_2516_sample_start_ &-> (ADD_u32_u32_2516_Sample)
        ADD_u32_u32_2516_sample_completed_ <-& (ADD_u32_u32_2516_Sample)
        ADD_u32_u32_2516_sample_completed_ &-> ($null)
        ADD_u32_u32_2516_update_start_ &-> (ADD_u32_u32_2516_Update)
        ADD_u32_u32_2516_update_completed_ <-& (ADD_u32_u32_2516_Update)
        // Target expression
        // (as target) iNsTr_14
        // iNsTr_14
        // implicit reference
        // 		ret_val__ := ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_14 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
        //  file prog.linked.opt.aa, line 985
        // Source expression
        // ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_14 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
        $T[type_cast_2525_sample_start_] 
        $T[type_cast_2525_sample_completed_] 
        $T[type_cast_2525_update_start_] 
        $T[type_cast_2525_update_completed_] 
        // (($bitcast ($int<32>) iNsTr_14 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) ))
        $T[ASHR_i32_i32_2524_sample_start_] 
        $T[ASHR_i32_i32_2524_sample_completed_] 
        $T[ASHR_i32_i32_2524_update_start_] 
        $T[ASHR_i32_i32_2524_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_14 )
        $T[type_cast_2520_sample_start_] 
        $T[type_cast_2520_sample_completed_] 
        $T[type_cast_2520_update_start_] 
        $T[type_cast_2520_update_completed_] 
        // iNsTr_14
        $T[R_iNsTr_14_2519_sample_start_] 
        $T[R_iNsTr_14_2519_sample_completed_] 
        $T[R_iNsTr_14_2519_update_start_] 
        $T[R_iNsTr_14_2519_update_completed_] 
        // implicit reference
        R_iNsTr_14_2519_sample_start_ <-& (ADD_u32_u32_2516_update_completed_)
        R_iNsTr_14_2519_sample_completed_ <-& (R_iNsTr_14_2519_sample_start_)
        R_iNsTr_14_2519_update_start_ <-& (R_iNsTr_14_2519_sample_completed_)
        R_iNsTr_14_2519_update_completed_ <-& (R_iNsTr_14_2519_update_start_)
        type_cast_2520_sample_start_ <-& (R_iNsTr_14_2519_update_completed_)
        ;;[type_cast_2520_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2520_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2520_sample_start_ &-> (type_cast_2520_Sample)
        type_cast_2520_sample_completed_ <-& (type_cast_2520_Sample)
        type_cast_2520_sample_completed_ &-> ($null)
        type_cast_2520_update_start_ &-> (type_cast_2520_Update)
        type_cast_2520_update_completed_ <-& (type_cast_2520_Update)
        // flow-through
        type_cast_2520_update_start_ <-& (type_cast_2520_sample_completed_)
        ASHR_i32_i32_2524_sample_start_ <-& (type_cast_2520_update_completed_)
        ;;[ASHR_i32_i32_2524_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ASHR_i32_i32_2524_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ASHR_i32_i32_2524_sample_start_ &-> (ASHR_i32_i32_2524_Sample)
        ASHR_i32_i32_2524_sample_completed_ <-& (ASHR_i32_i32_2524_Sample)
        ASHR_i32_i32_2524_sample_completed_ &-> ($null)
        ASHR_i32_i32_2524_update_start_ &-> (ASHR_i32_i32_2524_Update)
        ASHR_i32_i32_2524_update_completed_ <-& (ASHR_i32_i32_2524_Update)
        // flow-through
        ASHR_i32_i32_2524_update_start_ <-& (ASHR_i32_i32_2524_sample_completed_)
        type_cast_2525_sample_start_ <-& (ASHR_i32_i32_2524_update_completed_)
        ;;[type_cast_2525_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2525_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2525_sample_start_ &-> (type_cast_2525_Sample)
        type_cast_2525_sample_completed_ <-& (type_cast_2525_Sample)
        type_cast_2525_sample_completed_ &-> ($null)
        type_cast_2525_update_start_ &-> (type_cast_2525_Update)
        type_cast_2525_update_completed_ <-& (type_cast_2525_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_2420_to_assign_stmt_2526__entry__ |-> (assign_stmt_2420_to_assign_stmt_2526)
      assign_stmt_2420_to_assign_stmt_2526__exit__ <-| (assign_stmt_2420_to_assign_stmt_2526)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 987
      //---------------------   merge statement  file prog.linked.opt.aa, line 987  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_2528_PhiReqMerge] 
      merge_stmt_2528_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_2528_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2528_PhiReqMerge |-> (merge_stmt_2528_PhiAck)
      merge_stmt_2528__exit__  <-| (merge_stmt_2528_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 987  --------------------------
      assign_stmt_2420_to_assign_stmt_2526__entry__ <-| (branch_block_stmt_2415__entry__)
      return__ <-| (assign_stmt_2420_to_assign_stmt_2526__exit__)
      merge_stmt_2528__exit__ |-> (branch_block_stmt_2415__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %meanCalc%body%
    //  file prog.linked.opt.aa, line 987
    // constant-object-declarations for block %meanCalc%body
    //  file prog.linked.opt.aa, line 961
    // constant-object-declarations for block %meanCalc
    //  file prog.linked.opt.aa, line 956
    // constant-declarations for block %meanCalc%body
    //  file prog.linked.opt.aa, line 961
    // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000001  )]
    $constant $W[array_obj_ref_2419_final_offset] : $int<5> := _b00001// 1
    // ->(scevgepx_x1)
    $constant $W[ptr_deref_2423_word_offset_0] : $int<5> := _b00000// 0
    // ->(buffer)
    $constant $W[ptr_deref_2427_word_offset_0] : $int<5> := _b00000// 0
    // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000010  )]
    $constant $W[array_obj_ref_2432_final_offset] : $int<5> := _b00010// 2
    // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000011  )]
    $constant $W[array_obj_ref_2437_final_offset] : $int<5> := _b00011// 3
    // ->(scevgepx_x2)
    $constant $W[ptr_deref_2446_word_offset_0] : $int<5> := _b00000// 0
    // ->(scevgepx_x3)
    $constant $W[ptr_deref_2450_word_offset_0] : $int<5> := _b00000// 0
    // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000100  )]
    $constant $W[array_obj_ref_2460_final_offset] : $int<5> := _b00100// 4
    // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000101  )]
    $constant $W[array_obj_ref_2465_final_offset] : $int<5> := _b00101// 5
    // ->(scevgepx_x4)
    $constant $W[ptr_deref_2474_word_offset_0] : $int<5> := _b00000// 0
    // ->(scevgepx_x5)
    $constant $W[ptr_deref_2478_word_offset_0] : $int<5> := _b00000// 0
    // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000110  )]
    $constant $W[array_obj_ref_2488_final_offset] : $int<5> := _b00110// 6
    // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000111  )]
    $constant $W[array_obj_ref_2493_final_offset] : $int<5> := _b00111// 7
    // ->(scevgepx_x6)
    $constant $W[ptr_deref_2502_word_offset_0] : $int<5> := _b00000// 0
    // ->(scevgepx_x7)
    $constant $W[ptr_deref_2506_word_offset_0] : $int<5> := _b00000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )
    $constant $W[type_cast_2523_wire_constant] : $int<32> := _b00000000000000000000000000000011// 3
    // constant-declarations for block %meanCalc%body%
    //  file prog.linked.opt.aa, line 987
    // block %meanCalc%body
    //  file prog.linked.opt.aa, line 961
    // 		scevgepx_x1 := buffer[($bitcast ($uint<32>) _b00000000000000000000000000000001  )]
    //  file prog.linked.opt.aa, line 963
    // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000001  )]
    $intermediate $W[array_obj_ref_2419_resized_base_address] : $int<5>
    $intermediate $W[array_obj_ref_2419_root_address] : $int<5>
    // scevgepx_x1
    $W[scevgepx_x1_2420] : $int<32>
    // 		iNsTr_0 := ->(scevgepx_x1)
    //  file prog.linked.opt.aa, line 964
    // ->(scevgepx_x1)
    $intermediate $W[ptr_deref_2423_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_2423_root_address] : $int<5>
    $W[ptr_deref_2423_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_2423_data_0] : $int<32>
    // iNsTr_0
    $W[iNsTr_0_2424] : $int<32>
    // 		iNsTr_1 := ->(buffer)
    //  file prog.linked.opt.aa, line 965
    // ->(buffer)
    $intermediate $W[ptr_deref_2427_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_2427_root_address] : $int<5>
    $W[ptr_deref_2427_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_2427_data_0] : $int<32>
    // iNsTr_1
    $W[iNsTr_1_2428] : $int<32>
    // 		scevgepx_x2 := buffer[($bitcast ($uint<32>) _b00000000000000000000000000000010  )]
    //  file prog.linked.opt.aa, line 966
    // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000010  )]
    $intermediate $W[array_obj_ref_2432_resized_base_address] : $int<5>
    $intermediate $W[array_obj_ref_2432_root_address] : $int<5>
    // scevgepx_x2
    $W[scevgepx_x2_2433] : $int<32>
    // 		scevgepx_x3 := buffer[($bitcast ($uint<32>) _b00000000000000000000000000000011  )]
    //  file prog.linked.opt.aa, line 967
    // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000011  )]
    $intermediate $W[array_obj_ref_2437_resized_base_address] : $int<5>
    $intermediate $W[array_obj_ref_2437_root_address] : $int<5>
    // scevgepx_x3
    $W[scevgepx_x3_2438] : $int<32>
    // 		iNsTr_2 := (iNsTr_0 + iNsTr_1)
    //  file prog.linked.opt.aa, line 968
    // iNsTr_2
    $W[iNsTr_2_2443] : $int<32>
    // 		iNsTr_3 := ->(scevgepx_x2)
    //  file prog.linked.opt.aa, line 969
    // ->(scevgepx_x2)
    $intermediate $W[ptr_deref_2446_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_2446_root_address] : $int<5>
    $W[ptr_deref_2446_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_2446_data_0] : $int<32>
    // iNsTr_3
    $W[iNsTr_3_2447] : $int<32>
    // 		iNsTr_4 := ->(scevgepx_x3)
    //  file prog.linked.opt.aa, line 970
    // ->(scevgepx_x3)
    $intermediate $W[ptr_deref_2450_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_2450_root_address] : $int<5>
    $W[ptr_deref_2450_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_2450_data_0] : $int<32>
    // iNsTr_4
    $W[iNsTr_4_2451] : $int<32>
    // 		iNsTr_5 := (iNsTr_3 + iNsTr_2)
    //  file prog.linked.opt.aa, line 971
    // iNsTr_5
    $W[iNsTr_5_2456] : $int<32>
    // 		scevgepx_x4 := buffer[($bitcast ($uint<32>) _b00000000000000000000000000000100  )]
    //  file prog.linked.opt.aa, line 972
    // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000100  )]
    $intermediate $W[array_obj_ref_2460_resized_base_address] : $int<5>
    $intermediate $W[array_obj_ref_2460_root_address] : $int<5>
    // scevgepx_x4
    $W[scevgepx_x4_2461] : $int<32>
    // 		scevgepx_x5 := buffer[($bitcast ($uint<32>) _b00000000000000000000000000000101  )]
    //  file prog.linked.opt.aa, line 973
    // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000101  )]
    $intermediate $W[array_obj_ref_2465_resized_base_address] : $int<5>
    $intermediate $W[array_obj_ref_2465_root_address] : $int<5>
    // scevgepx_x5
    $W[scevgepx_x5_2466] : $int<32>
    // 		iNsTr_6 := (iNsTr_4 + iNsTr_5)
    //  file prog.linked.opt.aa, line 974
    // iNsTr_6
    $W[iNsTr_6_2471] : $int<32>
    // 		iNsTr_7 := ->(scevgepx_x4)
    //  file prog.linked.opt.aa, line 975
    // ->(scevgepx_x4)
    $intermediate $W[ptr_deref_2474_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_2474_root_address] : $int<5>
    $W[ptr_deref_2474_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_2474_data_0] : $int<32>
    // iNsTr_7
    $W[iNsTr_7_2475] : $int<32>
    // 		iNsTr_8 := ->(scevgepx_x5)
    //  file prog.linked.opt.aa, line 976
    // ->(scevgepx_x5)
    $intermediate $W[ptr_deref_2478_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_2478_root_address] : $int<5>
    $W[ptr_deref_2478_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_2478_data_0] : $int<32>
    // iNsTr_8
    $W[iNsTr_8_2479] : $int<32>
    // 		iNsTr_9 := (iNsTr_7 + iNsTr_6)
    //  file prog.linked.opt.aa, line 977
    // iNsTr_9
    $W[iNsTr_9_2484] : $int<32>
    // 		scevgepx_x6 := buffer[($bitcast ($uint<32>) _b00000000000000000000000000000110  )]
    //  file prog.linked.opt.aa, line 978
    // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000110  )]
    $intermediate $W[array_obj_ref_2488_resized_base_address] : $int<5>
    $intermediate $W[array_obj_ref_2488_root_address] : $int<5>
    // scevgepx_x6
    $W[scevgepx_x6_2489] : $int<32>
    // 		scevgepx_x7 := buffer[($bitcast ($uint<32>) _b00000000000000000000000000000111  )]
    //  file prog.linked.opt.aa, line 979
    // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000111  )]
    $intermediate $W[array_obj_ref_2493_resized_base_address] : $int<5>
    $intermediate $W[array_obj_ref_2493_root_address] : $int<5>
    // scevgepx_x7
    $W[scevgepx_x7_2494] : $int<32>
    // 		iNsTr_10 := (iNsTr_8 + iNsTr_9)
    //  file prog.linked.opt.aa, line 980
    // iNsTr_10
    $W[iNsTr_10_2499] : $int<32>
    // 		iNsTr_11 := ->(scevgepx_x6)
    //  file prog.linked.opt.aa, line 981
    // ->(scevgepx_x6)
    $intermediate $W[ptr_deref_2502_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_2502_root_address] : $int<5>
    $W[ptr_deref_2502_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_2502_data_0] : $int<32>
    // iNsTr_11
    $W[iNsTr_11_2503] : $int<32>
    // 		iNsTr_12 := ->(scevgepx_x7)
    //  file prog.linked.opt.aa, line 982
    // ->(scevgepx_x7)
    $intermediate $W[ptr_deref_2506_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_2506_root_address] : $int<5>
    $W[ptr_deref_2506_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_2506_data_0] : $int<32>
    // iNsTr_12
    $W[iNsTr_12_2507] : $int<32>
    // 		iNsTr_13 := (iNsTr_11 + iNsTr_10)
    //  file prog.linked.opt.aa, line 983
    // iNsTr_13
    $W[iNsTr_13_2512] : $int<32>
    // 		iNsTr_14 := (iNsTr_12 + iNsTr_13)
    //  file prog.linked.opt.aa, line 984
    // iNsTr_14
    $W[iNsTr_14_2517] : $int<32>
    // 		ret_val__ := ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_14 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
    //  file prog.linked.opt.aa, line 985
    // ($bitcast ($int<32>) iNsTr_14 )
    $intermediate $W[type_cast_2520_wire] : $int<32>
    // (($bitcast ($int<32>) iNsTr_14 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) ))
    $intermediate $W[ASHR_i32_i32_2524_wire] : $int<32>
    // ret_val__
    // datapath-instances for block %meanCalc%body
    //  file prog.linked.opt.aa, line 961
    // 		scevgepx_x1 := buffer[($bitcast ($uint<32>) _b00000000000000000000000000000001  )]
    //  file prog.linked.opt.aa, line 963
    // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000001  )]
    &/ [array_obj_ref_2419_base_resize] (buffer) (array_obj_ref_2419_resized_base_address) 
    +[array_obj_ref_2419_root_address_inst] (array_obj_ref_2419_final_offset array_obj_ref_2419_resized_base_address) (array_obj_ref_2419_root_address) 
    $delay array_obj_ref_2419_root_address_inst 2
    # := [array_obj_ref_2419_final_reg] (array_obj_ref_2419_root_address) (scevgepx_x1_2420) 
    // 		iNsTr_0 := ->(scevgepx_x1)
    //  file prog.linked.opt.aa, line 964
    // ->(scevgepx_x1)
    &/ [ptr_deref_2423_base_resize] (scevgepx_x1_2420) (ptr_deref_2423_resized_base_address) 
    &/ [ptr_deref_2423_root_address_inst] (ptr_deref_2423_resized_base_address) (ptr_deref_2423_root_address) 
    &/ [ptr_deref_2423_addr_0] (ptr_deref_2423_root_address) (ptr_deref_2423_word_address_0) 
    $load [ptr_deref_2423_load_0] $from memory_space_13 (ptr_deref_2423_word_address_0) (ptr_deref_2423_data_0) 
    $delay ptr_deref_2423_load_0 2
    &/ [ptr_deref_2423_gather_scatter] (ptr_deref_2423_data_0) (iNsTr_0_2424) 
    // 		iNsTr_1 := ->(buffer)
    //  file prog.linked.opt.aa, line 965
    // ->(buffer)
    &/ [ptr_deref_2427_base_resize] (buffer) (ptr_deref_2427_resized_base_address) 
    &/ [ptr_deref_2427_root_address_inst] (ptr_deref_2427_resized_base_address) (ptr_deref_2427_root_address) 
    &/ [ptr_deref_2427_addr_0] (ptr_deref_2427_root_address) (ptr_deref_2427_word_address_0) 
    $load [ptr_deref_2427_load_0] $from memory_space_13 (ptr_deref_2427_word_address_0) (ptr_deref_2427_data_0) 
    $delay ptr_deref_2427_load_0 2
    &/ [ptr_deref_2427_gather_scatter] (ptr_deref_2427_data_0) (iNsTr_1_2428) 
    // 		scevgepx_x2 := buffer[($bitcast ($uint<32>) _b00000000000000000000000000000010  )]
    //  file prog.linked.opt.aa, line 966
    // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000010  )]
    &/ [array_obj_ref_2432_base_resize] (buffer) (array_obj_ref_2432_resized_base_address) 
    +[array_obj_ref_2432_root_address_inst] (array_obj_ref_2432_final_offset array_obj_ref_2432_resized_base_address) (array_obj_ref_2432_root_address) 
    $delay array_obj_ref_2432_root_address_inst 2
    # := [array_obj_ref_2432_final_reg] (array_obj_ref_2432_root_address) (scevgepx_x2_2433) 
    // 		scevgepx_x3 := buffer[($bitcast ($uint<32>) _b00000000000000000000000000000011  )]
    //  file prog.linked.opt.aa, line 967
    // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000011  )]
    &/ [array_obj_ref_2437_base_resize] (buffer) (array_obj_ref_2437_resized_base_address) 
    +[array_obj_ref_2437_root_address_inst] (array_obj_ref_2437_final_offset array_obj_ref_2437_resized_base_address) (array_obj_ref_2437_root_address) 
    $delay array_obj_ref_2437_root_address_inst 2
    # := [array_obj_ref_2437_final_reg] (array_obj_ref_2437_root_address) (scevgepx_x3_2438) 
    // 		iNsTr_2 := (iNsTr_0 + iNsTr_1)
    //  file prog.linked.opt.aa, line 968
    // (iNsTr_0 + iNsTr_1)
    +[ADD_u32_u32_2442_inst] (iNsTr_0_2424 iNsTr_1_2428) (iNsTr_2_2443) 
    $delay ADD_u32_u32_2442_inst 1
    // 		iNsTr_3 := ->(scevgepx_x2)
    //  file prog.linked.opt.aa, line 969
    // ->(scevgepx_x2)
    &/ [ptr_deref_2446_base_resize] (scevgepx_x2_2433) (ptr_deref_2446_resized_base_address) 
    &/ [ptr_deref_2446_root_address_inst] (ptr_deref_2446_resized_base_address) (ptr_deref_2446_root_address) 
    &/ [ptr_deref_2446_addr_0] (ptr_deref_2446_root_address) (ptr_deref_2446_word_address_0) 
    $load [ptr_deref_2446_load_0] $from memory_space_13 (ptr_deref_2446_word_address_0) (ptr_deref_2446_data_0) 
    $delay ptr_deref_2446_load_0 2
    &/ [ptr_deref_2446_gather_scatter] (ptr_deref_2446_data_0) (iNsTr_3_2447) 
    // 		iNsTr_4 := ->(scevgepx_x3)
    //  file prog.linked.opt.aa, line 970
    // ->(scevgepx_x3)
    &/ [ptr_deref_2450_base_resize] (scevgepx_x3_2438) (ptr_deref_2450_resized_base_address) 
    &/ [ptr_deref_2450_root_address_inst] (ptr_deref_2450_resized_base_address) (ptr_deref_2450_root_address) 
    &/ [ptr_deref_2450_addr_0] (ptr_deref_2450_root_address) (ptr_deref_2450_word_address_0) 
    $load [ptr_deref_2450_load_0] $from memory_space_13 (ptr_deref_2450_word_address_0) (ptr_deref_2450_data_0) 
    $delay ptr_deref_2450_load_0 2
    &/ [ptr_deref_2450_gather_scatter] (ptr_deref_2450_data_0) (iNsTr_4_2451) 
    // 		iNsTr_5 := (iNsTr_3 + iNsTr_2)
    //  file prog.linked.opt.aa, line 971
    // (iNsTr_3 + iNsTr_2)
    +[ADD_u32_u32_2455_inst] (iNsTr_3_2447 iNsTr_2_2443) (iNsTr_5_2456) 
    $delay ADD_u32_u32_2455_inst 1
    // 		scevgepx_x4 := buffer[($bitcast ($uint<32>) _b00000000000000000000000000000100  )]
    //  file prog.linked.opt.aa, line 972
    // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000100  )]
    &/ [array_obj_ref_2460_base_resize] (buffer) (array_obj_ref_2460_resized_base_address) 
    +[array_obj_ref_2460_root_address_inst] (array_obj_ref_2460_final_offset array_obj_ref_2460_resized_base_address) (array_obj_ref_2460_root_address) 
    $delay array_obj_ref_2460_root_address_inst 2
    # := [array_obj_ref_2460_final_reg] (array_obj_ref_2460_root_address) (scevgepx_x4_2461) 
    // 		scevgepx_x5 := buffer[($bitcast ($uint<32>) _b00000000000000000000000000000101  )]
    //  file prog.linked.opt.aa, line 973
    // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000101  )]
    &/ [array_obj_ref_2465_base_resize] (buffer) (array_obj_ref_2465_resized_base_address) 
    +[array_obj_ref_2465_root_address_inst] (array_obj_ref_2465_final_offset array_obj_ref_2465_resized_base_address) (array_obj_ref_2465_root_address) 
    $delay array_obj_ref_2465_root_address_inst 2
    # := [array_obj_ref_2465_final_reg] (array_obj_ref_2465_root_address) (scevgepx_x5_2466) 
    // 		iNsTr_6 := (iNsTr_4 + iNsTr_5)
    //  file prog.linked.opt.aa, line 974
    // (iNsTr_4 + iNsTr_5)
    +[ADD_u32_u32_2470_inst] (iNsTr_4_2451 iNsTr_5_2456) (iNsTr_6_2471) 
    $delay ADD_u32_u32_2470_inst 1
    // 		iNsTr_7 := ->(scevgepx_x4)
    //  file prog.linked.opt.aa, line 975
    // ->(scevgepx_x4)
    &/ [ptr_deref_2474_base_resize] (scevgepx_x4_2461) (ptr_deref_2474_resized_base_address) 
    &/ [ptr_deref_2474_root_address_inst] (ptr_deref_2474_resized_base_address) (ptr_deref_2474_root_address) 
    &/ [ptr_deref_2474_addr_0] (ptr_deref_2474_root_address) (ptr_deref_2474_word_address_0) 
    $load [ptr_deref_2474_load_0] $from memory_space_13 (ptr_deref_2474_word_address_0) (ptr_deref_2474_data_0) 
    $delay ptr_deref_2474_load_0 2
    &/ [ptr_deref_2474_gather_scatter] (ptr_deref_2474_data_0) (iNsTr_7_2475) 
    // 		iNsTr_8 := ->(scevgepx_x5)
    //  file prog.linked.opt.aa, line 976
    // ->(scevgepx_x5)
    &/ [ptr_deref_2478_base_resize] (scevgepx_x5_2466) (ptr_deref_2478_resized_base_address) 
    &/ [ptr_deref_2478_root_address_inst] (ptr_deref_2478_resized_base_address) (ptr_deref_2478_root_address) 
    &/ [ptr_deref_2478_addr_0] (ptr_deref_2478_root_address) (ptr_deref_2478_word_address_0) 
    $load [ptr_deref_2478_load_0] $from memory_space_13 (ptr_deref_2478_word_address_0) (ptr_deref_2478_data_0) 
    $delay ptr_deref_2478_load_0 2
    &/ [ptr_deref_2478_gather_scatter] (ptr_deref_2478_data_0) (iNsTr_8_2479) 
    // 		iNsTr_9 := (iNsTr_7 + iNsTr_6)
    //  file prog.linked.opt.aa, line 977
    // (iNsTr_7 + iNsTr_6)
    +[ADD_u32_u32_2483_inst] (iNsTr_7_2475 iNsTr_6_2471) (iNsTr_9_2484) 
    $delay ADD_u32_u32_2483_inst 1
    // 		scevgepx_x6 := buffer[($bitcast ($uint<32>) _b00000000000000000000000000000110  )]
    //  file prog.linked.opt.aa, line 978
    // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000110  )]
    &/ [array_obj_ref_2488_base_resize] (buffer) (array_obj_ref_2488_resized_base_address) 
    +[array_obj_ref_2488_root_address_inst] (array_obj_ref_2488_final_offset array_obj_ref_2488_resized_base_address) (array_obj_ref_2488_root_address) 
    $delay array_obj_ref_2488_root_address_inst 2
    # := [array_obj_ref_2488_final_reg] (array_obj_ref_2488_root_address) (scevgepx_x6_2489) 
    // 		scevgepx_x7 := buffer[($bitcast ($uint<32>) _b00000000000000000000000000000111  )]
    //  file prog.linked.opt.aa, line 979
    // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000111  )]
    &/ [array_obj_ref_2493_base_resize] (buffer) (array_obj_ref_2493_resized_base_address) 
    +[array_obj_ref_2493_root_address_inst] (array_obj_ref_2493_final_offset array_obj_ref_2493_resized_base_address) (array_obj_ref_2493_root_address) 
    $delay array_obj_ref_2493_root_address_inst 2
    # := [array_obj_ref_2493_final_reg] (array_obj_ref_2493_root_address) (scevgepx_x7_2494) 
    // 		iNsTr_10 := (iNsTr_8 + iNsTr_9)
    //  file prog.linked.opt.aa, line 980
    // (iNsTr_8 + iNsTr_9)
    +[ADD_u32_u32_2498_inst] (iNsTr_8_2479 iNsTr_9_2484) (iNsTr_10_2499) 
    $delay ADD_u32_u32_2498_inst 1
    // 		iNsTr_11 := ->(scevgepx_x6)
    //  file prog.linked.opt.aa, line 981
    // ->(scevgepx_x6)
    &/ [ptr_deref_2502_base_resize] (scevgepx_x6_2489) (ptr_deref_2502_resized_base_address) 
    &/ [ptr_deref_2502_root_address_inst] (ptr_deref_2502_resized_base_address) (ptr_deref_2502_root_address) 
    &/ [ptr_deref_2502_addr_0] (ptr_deref_2502_root_address) (ptr_deref_2502_word_address_0) 
    $load [ptr_deref_2502_load_0] $from memory_space_13 (ptr_deref_2502_word_address_0) (ptr_deref_2502_data_0) 
    $delay ptr_deref_2502_load_0 2
    &/ [ptr_deref_2502_gather_scatter] (ptr_deref_2502_data_0) (iNsTr_11_2503) 
    // 		iNsTr_12 := ->(scevgepx_x7)
    //  file prog.linked.opt.aa, line 982
    // ->(scevgepx_x7)
    &/ [ptr_deref_2506_base_resize] (scevgepx_x7_2494) (ptr_deref_2506_resized_base_address) 
    &/ [ptr_deref_2506_root_address_inst] (ptr_deref_2506_resized_base_address) (ptr_deref_2506_root_address) 
    &/ [ptr_deref_2506_addr_0] (ptr_deref_2506_root_address) (ptr_deref_2506_word_address_0) 
    $load [ptr_deref_2506_load_0] $from memory_space_13 (ptr_deref_2506_word_address_0) (ptr_deref_2506_data_0) 
    $delay ptr_deref_2506_load_0 2
    &/ [ptr_deref_2506_gather_scatter] (ptr_deref_2506_data_0) (iNsTr_12_2507) 
    // 		iNsTr_13 := (iNsTr_11 + iNsTr_10)
    //  file prog.linked.opt.aa, line 983
    // (iNsTr_11 + iNsTr_10)
    +[ADD_u32_u32_2511_inst] (iNsTr_11_2503 iNsTr_10_2499) (iNsTr_13_2512) 
    $delay ADD_u32_u32_2511_inst 1
    // 		iNsTr_14 := (iNsTr_12 + iNsTr_13)
    //  file prog.linked.opt.aa, line 984
    // (iNsTr_12 + iNsTr_13)
    +[ADD_u32_u32_2516_inst] (iNsTr_12_2507 iNsTr_13_2512) (iNsTr_14_2517) 
    $delay ADD_u32_u32_2516_inst 1
    // 		ret_val__ := ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_14 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
    //  file prog.linked.opt.aa, line 985
    // ($bitcast ($int<32>) iNsTr_14 )
    $S:=$U [type_cast_2520_inst] (iNsTr_14_2517) (type_cast_2520_wire)   $flowthrough
    $delay type_cast_2520_inst 0
    // (($bitcast ($int<32>) iNsTr_14 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) ))
    $S>>[ASHR_i32_i32_2524_inst] (type_cast_2520_wire type_cast_2523_wire_constant) (ASHR_i32_i32_2524_wire)  $flowthrough
    $delay ASHR_i32_i32_2524_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_14 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
    # := [type_cast_2525_inst] (ASHR_i32_i32_2524_wire) (ret_val__) 
    $delay type_cast_2525_inst 1
  }
  // end data-path
  // 		scevgepx_x1 := buffer[($bitcast ($uint<32>) _b00000000000000000000000000000001  )]
  //  file prog.linked.opt.aa, line 963
  // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000001  )]
  array_obj_ref_2419_base_resize <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2419_base_addr_resize/base_resize_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2419_base_addr_resize/base_resize_ack)
  array_obj_ref_2419_root_address_inst <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2419_base_plus_offset_sample/rr branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2419_base_plus_offset_update/cr) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2419_base_plus_offset_sample/ra branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2419_base_plus_offset_update/ca)
  array_obj_ref_2419_final_reg <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2419_request/req branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2419_complete/req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2419_request/ack branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2419_complete/ack)
  // 		iNsTr_0 := ->(scevgepx_x1)
  //  file prog.linked.opt.aa, line 964
  ptr_deref_2423_base_resize <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2423_base_addr_resize/base_resize_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2423_base_addr_resize/base_resize_ack)
  ptr_deref_2423_root_address_inst <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2423_base_plus_offset/sum_rename_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2423_base_plus_offset/sum_rename_ack)
  ptr_deref_2423_addr_0 <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2423_word_addrgen/root_register_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2423_word_addrgen/root_register_ack)
  ptr_deref_2423_gather_scatter <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2423_Update/ptr_deref_2423_Merge/merge_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2423_Update/ptr_deref_2423_Merge/merge_ack)
  ptr_deref_2423_load_0 <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2423_Sample/word_access_start/word_0/rr branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2423_Update/word_access_complete/word_0/cr) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2423_Sample/word_access_start/word_0/ra branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2423_Update/word_access_complete/word_0/ca)
  // 		iNsTr_1 := ->(buffer)
  //  file prog.linked.opt.aa, line 965
  ptr_deref_2427_base_resize <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2427_base_addr_resize/base_resize_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2427_base_addr_resize/base_resize_ack)
  ptr_deref_2427_root_address_inst <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2427_base_plus_offset/sum_rename_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2427_base_plus_offset/sum_rename_ack)
  ptr_deref_2427_addr_0 <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2427_word_addrgen/root_register_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2427_word_addrgen/root_register_ack)
  ptr_deref_2427_gather_scatter <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2427_Update/ptr_deref_2427_Merge/merge_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2427_Update/ptr_deref_2427_Merge/merge_ack)
  ptr_deref_2427_load_0 <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2427_Sample/word_access_start/word_0/rr branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2427_Update/word_access_complete/word_0/cr) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2427_Sample/word_access_start/word_0/ra branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2427_Update/word_access_complete/word_0/ca)
  // 		scevgepx_x2 := buffer[($bitcast ($uint<32>) _b00000000000000000000000000000010  )]
  //  file prog.linked.opt.aa, line 966
  // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000010  )]
  array_obj_ref_2432_base_resize <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2432_base_addr_resize/base_resize_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2432_base_addr_resize/base_resize_ack)
  array_obj_ref_2432_root_address_inst <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2432_base_plus_offset_sample/rr branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2432_base_plus_offset_update/cr) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2432_base_plus_offset_sample/ra branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2432_base_plus_offset_update/ca)
  array_obj_ref_2432_final_reg <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2432_request/req branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2432_complete/req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2432_request/ack branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2432_complete/ack)
  // 		scevgepx_x3 := buffer[($bitcast ($uint<32>) _b00000000000000000000000000000011  )]
  //  file prog.linked.opt.aa, line 967
  // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000011  )]
  array_obj_ref_2437_base_resize <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2437_base_addr_resize/base_resize_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2437_base_addr_resize/base_resize_ack)
  array_obj_ref_2437_root_address_inst <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2437_base_plus_offset_sample/rr branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2437_base_plus_offset_update/cr) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2437_base_plus_offset_sample/ra branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2437_base_plus_offset_update/ca)
  array_obj_ref_2437_final_reg <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2437_request/req branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2437_complete/req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2437_request/ack branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2437_complete/ack)
  // 		iNsTr_2 := (iNsTr_0 + iNsTr_1)
  //  file prog.linked.opt.aa, line 968
  // (iNsTr_0 + iNsTr_1)
  ADD_u32_u32_2442_inst <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ADD_u32_u32_2442_Sample/rr branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ADD_u32_u32_2442_Update/cr) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ADD_u32_u32_2442_Sample/ra branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ADD_u32_u32_2442_Update/ca)
  // 		iNsTr_3 := ->(scevgepx_x2)
  //  file prog.linked.opt.aa, line 969
  ptr_deref_2446_base_resize <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2446_base_addr_resize/base_resize_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2446_base_addr_resize/base_resize_ack)
  ptr_deref_2446_root_address_inst <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2446_base_plus_offset/sum_rename_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2446_base_plus_offset/sum_rename_ack)
  ptr_deref_2446_addr_0 <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2446_word_addrgen/root_register_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2446_word_addrgen/root_register_ack)
  ptr_deref_2446_gather_scatter <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2446_Update/ptr_deref_2446_Merge/merge_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2446_Update/ptr_deref_2446_Merge/merge_ack)
  ptr_deref_2446_load_0 <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2446_Sample/word_access_start/word_0/rr branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2446_Update/word_access_complete/word_0/cr) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2446_Sample/word_access_start/word_0/ra branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2446_Update/word_access_complete/word_0/ca)
  // 		iNsTr_4 := ->(scevgepx_x3)
  //  file prog.linked.opt.aa, line 970
  ptr_deref_2450_base_resize <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2450_base_addr_resize/base_resize_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2450_base_addr_resize/base_resize_ack)
  ptr_deref_2450_root_address_inst <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2450_base_plus_offset/sum_rename_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2450_base_plus_offset/sum_rename_ack)
  ptr_deref_2450_addr_0 <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2450_word_addrgen/root_register_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2450_word_addrgen/root_register_ack)
  ptr_deref_2450_gather_scatter <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2450_Update/ptr_deref_2450_Merge/merge_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2450_Update/ptr_deref_2450_Merge/merge_ack)
  ptr_deref_2450_load_0 <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2450_Sample/word_access_start/word_0/rr branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2450_Update/word_access_complete/word_0/cr) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2450_Sample/word_access_start/word_0/ra branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2450_Update/word_access_complete/word_0/ca)
  // 		iNsTr_5 := (iNsTr_3 + iNsTr_2)
  //  file prog.linked.opt.aa, line 971
  // (iNsTr_3 + iNsTr_2)
  ADD_u32_u32_2455_inst <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ADD_u32_u32_2455_Sample/rr branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ADD_u32_u32_2455_Update/cr) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ADD_u32_u32_2455_Sample/ra branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ADD_u32_u32_2455_Update/ca)
  // 		scevgepx_x4 := buffer[($bitcast ($uint<32>) _b00000000000000000000000000000100  )]
  //  file prog.linked.opt.aa, line 972
  // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000100  )]
  array_obj_ref_2460_base_resize <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2460_base_addr_resize/base_resize_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2460_base_addr_resize/base_resize_ack)
  array_obj_ref_2460_root_address_inst <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2460_base_plus_offset_sample/rr branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2460_base_plus_offset_update/cr) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2460_base_plus_offset_sample/ra branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2460_base_plus_offset_update/ca)
  array_obj_ref_2460_final_reg <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2460_request/req branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2460_complete/req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2460_request/ack branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2460_complete/ack)
  // 		scevgepx_x5 := buffer[($bitcast ($uint<32>) _b00000000000000000000000000000101  )]
  //  file prog.linked.opt.aa, line 973
  // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000101  )]
  array_obj_ref_2465_base_resize <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2465_base_addr_resize/base_resize_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2465_base_addr_resize/base_resize_ack)
  array_obj_ref_2465_root_address_inst <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2465_base_plus_offset_sample/rr branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2465_base_plus_offset_update/cr) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2465_base_plus_offset_sample/ra branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2465_base_plus_offset_update/ca)
  array_obj_ref_2465_final_reg <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2465_request/req branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2465_complete/req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2465_request/ack branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2465_complete/ack)
  // 		iNsTr_6 := (iNsTr_4 + iNsTr_5)
  //  file prog.linked.opt.aa, line 974
  // (iNsTr_4 + iNsTr_5)
  ADD_u32_u32_2470_inst <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ADD_u32_u32_2470_Sample/rr branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ADD_u32_u32_2470_Update/cr) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ADD_u32_u32_2470_Sample/ra branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ADD_u32_u32_2470_Update/ca)
  // 		iNsTr_7 := ->(scevgepx_x4)
  //  file prog.linked.opt.aa, line 975
  ptr_deref_2474_base_resize <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2474_base_addr_resize/base_resize_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2474_base_addr_resize/base_resize_ack)
  ptr_deref_2474_root_address_inst <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2474_base_plus_offset/sum_rename_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2474_base_plus_offset/sum_rename_ack)
  ptr_deref_2474_addr_0 <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2474_word_addrgen/root_register_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2474_word_addrgen/root_register_ack)
  ptr_deref_2474_gather_scatter <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2474_Update/ptr_deref_2474_Merge/merge_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2474_Update/ptr_deref_2474_Merge/merge_ack)
  ptr_deref_2474_load_0 <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2474_Sample/word_access_start/word_0/rr branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2474_Update/word_access_complete/word_0/cr) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2474_Sample/word_access_start/word_0/ra branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2474_Update/word_access_complete/word_0/ca)
  // 		iNsTr_8 := ->(scevgepx_x5)
  //  file prog.linked.opt.aa, line 976
  ptr_deref_2478_base_resize <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2478_base_addr_resize/base_resize_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2478_base_addr_resize/base_resize_ack)
  ptr_deref_2478_root_address_inst <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2478_base_plus_offset/sum_rename_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2478_base_plus_offset/sum_rename_ack)
  ptr_deref_2478_addr_0 <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2478_word_addrgen/root_register_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2478_word_addrgen/root_register_ack)
  ptr_deref_2478_gather_scatter <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2478_Update/ptr_deref_2478_Merge/merge_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2478_Update/ptr_deref_2478_Merge/merge_ack)
  ptr_deref_2478_load_0 <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2478_Sample/word_access_start/word_0/rr branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2478_Update/word_access_complete/word_0/cr) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2478_Sample/word_access_start/word_0/ra branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2478_Update/word_access_complete/word_0/ca)
  // 		iNsTr_9 := (iNsTr_7 + iNsTr_6)
  //  file prog.linked.opt.aa, line 977
  // (iNsTr_7 + iNsTr_6)
  ADD_u32_u32_2483_inst <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ADD_u32_u32_2483_Sample/rr branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ADD_u32_u32_2483_Update/cr) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ADD_u32_u32_2483_Sample/ra branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ADD_u32_u32_2483_Update/ca)
  // 		scevgepx_x6 := buffer[($bitcast ($uint<32>) _b00000000000000000000000000000110  )]
  //  file prog.linked.opt.aa, line 978
  // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000110  )]
  array_obj_ref_2488_base_resize <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2488_base_addr_resize/base_resize_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2488_base_addr_resize/base_resize_ack)
  array_obj_ref_2488_root_address_inst <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2488_base_plus_offset_sample/rr branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2488_base_plus_offset_update/cr) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2488_base_plus_offset_sample/ra branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2488_base_plus_offset_update/ca)
  array_obj_ref_2488_final_reg <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2488_request/req branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2488_complete/req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2488_request/ack branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2488_complete/ack)
  // 		scevgepx_x7 := buffer[($bitcast ($uint<32>) _b00000000000000000000000000000111  )]
  //  file prog.linked.opt.aa, line 979
  // buffer[($bitcast ($uint<32>) _b00000000000000000000000000000111  )]
  array_obj_ref_2493_base_resize <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2493_base_addr_resize/base_resize_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2493_base_addr_resize/base_resize_ack)
  array_obj_ref_2493_root_address_inst <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2493_base_plus_offset_sample/rr branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2493_base_plus_offset_update/cr) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2493_base_plus_offset_sample/ra branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2493_base_plus_offset_update/ca)
  array_obj_ref_2493_final_reg <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2493_request/req branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2493_complete/req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2493_request/ack branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/array_obj_ref_2493_complete/ack)
  // 		iNsTr_10 := (iNsTr_8 + iNsTr_9)
  //  file prog.linked.opt.aa, line 980
  // (iNsTr_8 + iNsTr_9)
  ADD_u32_u32_2498_inst <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ADD_u32_u32_2498_Sample/rr branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ADD_u32_u32_2498_Update/cr) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ADD_u32_u32_2498_Sample/ra branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ADD_u32_u32_2498_Update/ca)
  // 		iNsTr_11 := ->(scevgepx_x6)
  //  file prog.linked.opt.aa, line 981
  ptr_deref_2502_base_resize <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2502_base_addr_resize/base_resize_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2502_base_addr_resize/base_resize_ack)
  ptr_deref_2502_root_address_inst <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2502_base_plus_offset/sum_rename_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2502_base_plus_offset/sum_rename_ack)
  ptr_deref_2502_addr_0 <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2502_word_addrgen/root_register_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2502_word_addrgen/root_register_ack)
  ptr_deref_2502_gather_scatter <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2502_Update/ptr_deref_2502_Merge/merge_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2502_Update/ptr_deref_2502_Merge/merge_ack)
  ptr_deref_2502_load_0 <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2502_Sample/word_access_start/word_0/rr branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2502_Update/word_access_complete/word_0/cr) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2502_Sample/word_access_start/word_0/ra branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2502_Update/word_access_complete/word_0/ca)
  // 		iNsTr_12 := ->(scevgepx_x7)
  //  file prog.linked.opt.aa, line 982
  ptr_deref_2506_base_resize <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2506_base_addr_resize/base_resize_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2506_base_addr_resize/base_resize_ack)
  ptr_deref_2506_root_address_inst <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2506_base_plus_offset/sum_rename_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2506_base_plus_offset/sum_rename_ack)
  ptr_deref_2506_addr_0 <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2506_word_addrgen/root_register_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2506_word_addrgen/root_register_ack)
  ptr_deref_2506_gather_scatter <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2506_Update/ptr_deref_2506_Merge/merge_req) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2506_Update/ptr_deref_2506_Merge/merge_ack)
  ptr_deref_2506_load_0 <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2506_Sample/word_access_start/word_0/rr branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2506_Update/word_access_complete/word_0/cr) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2506_Sample/word_access_start/word_0/ra branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ptr_deref_2506_Update/word_access_complete/word_0/ca)
  // 		iNsTr_13 := (iNsTr_11 + iNsTr_10)
  //  file prog.linked.opt.aa, line 983
  // (iNsTr_11 + iNsTr_10)
  ADD_u32_u32_2511_inst <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ADD_u32_u32_2511_Sample/rr branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ADD_u32_u32_2511_Update/cr) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ADD_u32_u32_2511_Sample/ra branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ADD_u32_u32_2511_Update/ca)
  // 		iNsTr_14 := (iNsTr_12 + iNsTr_13)
  //  file prog.linked.opt.aa, line 984
  // (iNsTr_12 + iNsTr_13)
  ADD_u32_u32_2516_inst <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ADD_u32_u32_2516_Sample/rr branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ADD_u32_u32_2516_Update/cr) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ADD_u32_u32_2516_Sample/ra branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ADD_u32_u32_2516_Update/ca)
  // 		ret_val__ := ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_14 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
  //  file prog.linked.opt.aa, line 985
  // (($bitcast ($int<32>) iNsTr_14 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) ))
  // ($bitcast ($int<32>) iNsTr_14 )
  type_cast_2520_inst <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/type_cast_2520_Sample/rr branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/type_cast_2520_Update/cr) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/type_cast_2520_Sample/ra branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/type_cast_2520_Update/ca)
  ASHR_i32_i32_2524_inst <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ASHR_i32_i32_2524_Sample/rr branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ASHR_i32_i32_2524_Update/cr) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ASHR_i32_i32_2524_Sample/ra branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/ASHR_i32_i32_2524_Update/ca)
  // ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_14 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
  type_cast_2525_inst <=> (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/type_cast_2525_Sample/rr branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/type_cast_2525_Update/cr) (branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/type_cast_2525_Sample/ra branch_block_stmt_2415/assign_stmt_2420_to_assign_stmt_2526/type_cast_2525_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 987
}
$module [mem_load__] 
{
  $in address:$int<32>
  // can point into  mempool
  $out data:$int<8>
  // can point into  mempool
  // pipe-declarations for block %mem_load__
  //  file prog.linked.opt.aa, line 991
  $CP 
  {
    // begin control-path 
    ::[assign_stmt_2541] 
    {
      // 	data := mempool[((address * 1 ) + 0 )]
      //  file prog.linked.opt.aa, line 996
      // Source expression
      // mempool[((address * 1 ) + 0 )]
      $T[array_obj_ref_2540_base_address_calculated] 
      $T[array_obj_ref_2540_sample_start_] 
      $T[array_obj_ref_2540_sample_completed_] 
      $T[array_obj_ref_2540_update_start_] 
      $T[array_obj_ref_2540_update_completed_] 
      $T[array_obj_ref_2540_word_address_calculated] 
      $T[array_obj_ref_2540_root_address_calculated] 
      $T[array_obj_ref_2540_offset_calculated] 
      $T[array_obj_ref_2540_index_resized_0] 
      $T[array_obj_ref_2540_index_scaled_0] 
      // ((address * 1 ) + 0 )
      $T[ADD_u32_u32_2539_sample_start_] 
      $T[ADD_u32_u32_2539_sample_completed_] 
      $T[ADD_u32_u32_2539_update_start_] 
      $T[ADD_u32_u32_2539_update_completed_] 
      // (address * 1 )
      $T[MUL_u32_u32_2537_sample_start_] 
      $T[MUL_u32_u32_2537_sample_completed_] 
      $T[MUL_u32_u32_2537_update_start_] 
      $T[MUL_u32_u32_2537_update_completed_] 
      // address
      $T[R_address_2535_sample_start_] 
      $T[R_address_2535_sample_completed_] 
      $T[R_address_2535_update_start_] 
      $T[R_address_2535_update_completed_] 
      // reference to interface object
      R_address_2535_sample_start_ <-& ($entry)
      R_address_2535_sample_completed_ <-& (R_address_2535_sample_start_)
      R_address_2535_update_start_ <-& (R_address_2535_sample_completed_)
      R_address_2535_update_completed_ <-& (R_address_2535_update_start_)
      MUL_u32_u32_2537_sample_start_ <-& (R_address_2535_update_completed_)
      ;;[MUL_u32_u32_2537_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[MUL_u32_u32_2537_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      MUL_u32_u32_2537_sample_start_ &-> (MUL_u32_u32_2537_Sample)
      MUL_u32_u32_2537_sample_completed_ <-& (MUL_u32_u32_2537_Sample)
      MUL_u32_u32_2537_sample_completed_ &-> ($null)
      MUL_u32_u32_2537_update_start_ &-> (MUL_u32_u32_2537_Update)
      MUL_u32_u32_2537_update_completed_ <-& (MUL_u32_u32_2537_Update)
      ADD_u32_u32_2539_sample_start_ <-& (MUL_u32_u32_2537_update_completed_)
      ;;[ADD_u32_u32_2539_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[ADD_u32_u32_2539_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      ADD_u32_u32_2539_sample_start_ &-> (ADD_u32_u32_2539_Sample)
      ADD_u32_u32_2539_sample_completed_ <-& (ADD_u32_u32_2539_Sample)
      ADD_u32_u32_2539_sample_completed_ &-> ($null)
      ADD_u32_u32_2539_update_start_ &-> (ADD_u32_u32_2539_Update)
      ADD_u32_u32_2539_update_completed_ <-& (ADD_u32_u32_2539_Update)
      ;;[array_obj_ref_2540_index_resize_0] 
      {
        $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
      }
      ADD_u32_u32_2539_update_completed_ &-> (array_obj_ref_2540_index_resize_0)
      array_obj_ref_2540_index_resized_0 <-& (array_obj_ref_2540_index_resize_0)
      ;;[array_obj_ref_2540_index_scale_0] 
      {
        $T [scale_rename_req] $T [scale_rename_ack] // rename 
      }
      array_obj_ref_2540_index_resized_0 &-> (array_obj_ref_2540_index_scale_0)
      array_obj_ref_2540_index_scaled_0 <-& (array_obj_ref_2540_index_scale_0)
      ;;[array_obj_ref_2540_final_index_sum_regn] 
      {
        $T [req] $T [ack] // rename
      }
      array_obj_ref_2540_index_scaled_0 &-> (array_obj_ref_2540_final_index_sum_regn)
      array_obj_ref_2540_offset_calculated <-& (array_obj_ref_2540_final_index_sum_regn)
      ;;[array_obj_ref_2540_base_plus_offset] 
      {
        $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
      }
      array_obj_ref_2540_offset_calculated &-> (array_obj_ref_2540_base_plus_offset)
      array_obj_ref_2540_root_address_calculated <-& (array_obj_ref_2540_base_plus_offset)
      ;;[array_obj_ref_2540_word_addrgen] 
      {
        $T [root_register_req] $T [root_register_ack]
      }
      array_obj_ref_2540_root_address_calculated &-> (array_obj_ref_2540_word_addrgen)
      array_obj_ref_2540_word_address_calculated <-& (array_obj_ref_2540_word_addrgen)
      ;;[array_obj_ref_2540_Sample] 
      {
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_2540_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
        ;;[array_obj_ref_2540_Merge] 
        {
          $T [merge_req] $T [merge_ack]
        }
      }
      array_obj_ref_2540_sample_start_ <-& (array_obj_ref_2540_word_address_calculated)
      array_obj_ref_2540_sample_start_ &-> (array_obj_ref_2540_Sample)
      array_obj_ref_2540_sample_completed_ <-& (array_obj_ref_2540_Sample)
      array_obj_ref_2540_sample_completed_ &-> ($null)
      array_obj_ref_2540_update_start_ &-> (array_obj_ref_2540_Update)
      array_obj_ref_2540_update_completed_ <-& (array_obj_ref_2540_Update)
      // Target expression
      // (as target) data
      // data
      // write to interface object
      // load-store dependencies..
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %mem_load__
    //  file prog.linked.opt.aa, line 991
    // mempool[((address * 1 ) + 0 )]
    // 1 
    $constant $W[expr_2536_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // 0 
    $constant $W[expr_2538_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    $constant $W[array_obj_ref_2540_resized_base_address] : $int<1> := _b0// 0
    $constant $W[array_obj_ref_2540_offset_scale_factor_0] : $int<1> := _b1// 1
    $constant $W[array_obj_ref_2540_word_offset_0] : $int<1> := _b0// 0
    // 	data := mempool[((address * 1 ) + 0 )]
    //  file prog.linked.opt.aa, line 996
    // mempool[((address * 1 ) + 0 )]
    // (address * 1 )
    $intermediate $W[MUL_u32_u32_2537_wire] : $int<32>
    // ((address * 1 ) + 0 )
    $intermediate $W[ADD_u32_u32_2539_wire] : $int<32>
    $intermediate $W[ADD_u32_u32_2539_resized] : $int<1>
    $intermediate $W[ADD_u32_u32_2539_scaled] : $int<1>
    $intermediate $W[array_obj_ref_2540_final_offset] : $int<1>
    $intermediate $W[array_obj_ref_2540_root_address] : $int<1>
    $W[array_obj_ref_2540_word_address_0] : $pointer<memory_space_23>
    $W[array_obj_ref_2540_data_0] : $int<8>
    // data
    // 	data := mempool[((address * 1 ) + 0 )]
    //  file prog.linked.opt.aa, line 996
    // mempool[((address * 1 ) + 0 )]
    // (address * 1 )
    *[MUL_u32_u32_2537_inst] (address expr_2536_wire_constant) (MUL_u32_u32_2537_wire) 
    $delay MUL_u32_u32_2537_inst 1
    // ((address * 1 ) + 0 )
    +[ADD_u32_u32_2539_inst] (MUL_u32_u32_2537_wire expr_2538_wire_constant) (ADD_u32_u32_2539_wire) 
    $delay ADD_u32_u32_2539_inst 1
    &/ [array_obj_ref_2540_index_0_resize] (ADD_u32_u32_2539_wire) (ADD_u32_u32_2539_resized) 
    &/ [array_obj_ref_2540_index_0_rename] (ADD_u32_u32_2539_resized) (ADD_u32_u32_2539_scaled) 
    &/ [array_obj_ref_2540_index_offset] (ADD_u32_u32_2539_scaled) (array_obj_ref_2540_final_offset) 
    &/ [array_obj_ref_2540_root_address_inst] (array_obj_ref_2540_final_offset) (array_obj_ref_2540_root_address) 
    &/ [array_obj_ref_2540_addr_0] (array_obj_ref_2540_root_address) (array_obj_ref_2540_word_address_0) 
    $load [array_obj_ref_2540_load_0] $from memory_space_23 (array_obj_ref_2540_word_address_0) (array_obj_ref_2540_data_0) 
    $delay array_obj_ref_2540_load_0 2
    &/ [array_obj_ref_2540_gather_scatter] (array_obj_ref_2540_data_0) (data) 
  }
  // end data-path
  // 	data := mempool[((address * 1 ) + 0 )]
  //  file prog.linked.opt.aa, line 996
  // mempool[((address * 1 ) + 0 )]
  // ((address * 1 ) + 0 )
  // (address * 1 )
  MUL_u32_u32_2537_inst <=> (assign_stmt_2541/MUL_u32_u32_2537_Sample/rr assign_stmt_2541/MUL_u32_u32_2537_Update/cr) (assign_stmt_2541/MUL_u32_u32_2537_Sample/ra assign_stmt_2541/MUL_u32_u32_2537_Update/ca)
  ADD_u32_u32_2539_inst <=> (assign_stmt_2541/ADD_u32_u32_2539_Sample/rr assign_stmt_2541/ADD_u32_u32_2539_Update/cr) (assign_stmt_2541/ADD_u32_u32_2539_Sample/ra assign_stmt_2541/ADD_u32_u32_2539_Update/ca)
  array_obj_ref_2540_index_0_resize <=> (assign_stmt_2541/array_obj_ref_2540_index_resize_0/index_resize_req) (assign_stmt_2541/array_obj_ref_2540_index_resize_0/index_resize_ack)
  array_obj_ref_2540_index_0_rename <=> (assign_stmt_2541/array_obj_ref_2540_index_scale_0/scale_rename_req) (assign_stmt_2541/array_obj_ref_2540_index_scale_0/scale_rename_ack)
  array_obj_ref_2540_index_offset <=> (assign_stmt_2541/array_obj_ref_2540_final_index_sum_regn/req) (assign_stmt_2541/array_obj_ref_2540_final_index_sum_regn/ack)
  array_obj_ref_2540_root_address_inst <=> (assign_stmt_2541/array_obj_ref_2540_base_plus_offset/sum_rename_req) (assign_stmt_2541/array_obj_ref_2540_base_plus_offset/sum_rename_ack)
  array_obj_ref_2540_addr_0 <=> (assign_stmt_2541/array_obj_ref_2540_word_addrgen/root_register_req) (assign_stmt_2541/array_obj_ref_2540_word_addrgen/root_register_ack)
  array_obj_ref_2540_gather_scatter <=> (assign_stmt_2541/array_obj_ref_2540_Update/array_obj_ref_2540_Merge/merge_req) (assign_stmt_2541/array_obj_ref_2540_Update/array_obj_ref_2540_Merge/merge_ack)
  array_obj_ref_2540_load_0 <=> (assign_stmt_2541/array_obj_ref_2540_Sample/word_access_start/word_0/rr assign_stmt_2541/array_obj_ref_2540_Update/word_access_complete/word_0/cr) (assign_stmt_2541/array_obj_ref_2540_Sample/word_access_start/word_0/ra assign_stmt_2541/array_obj_ref_2540_Update/word_access_complete/word_0/ca)
}
$module [mem_store__] 
{
  $in address:$int<32>
  // can point into  mempool
  data:$int<8>
  // can point into  mempool
  // pipe-declarations for block %mem_store__
  //  file prog.linked.opt.aa, line 998
  $CP 
  {
    // begin control-path 
    ::[assign_stmt_2553] 
    {
      // 	mempool[((address * 1 ) + 0 )] := data
      //  file prog.linked.opt.aa, line 1003
      // Source expression
      // data
      $T[R_data_2552_sample_start_] 
      $T[R_data_2552_sample_completed_] 
      $T[R_data_2552_update_start_] 
      $T[R_data_2552_update_completed_] 
      // reference to interface object
      R_data_2552_sample_start_ <-& ($entry)
      R_data_2552_sample_completed_ <-& (R_data_2552_sample_start_)
      R_data_2552_update_start_ <-& (R_data_2552_sample_completed_)
      R_data_2552_update_completed_ <-& (R_data_2552_update_start_)
      // Target expression
      // mempool[((address * 1 ) + 0 )]
      $T[array_obj_ref_2551_sample_start_] 
      $T[array_obj_ref_2551_sample_completed_] 
      $T[array_obj_ref_2551_update_start_] 
      $T[array_obj_ref_2551_update_completed_] 
      $T[array_obj_ref_2551_word_address_calculated] 
      $T[array_obj_ref_2551_root_address_calculated] 
      $T[array_obj_ref_2551_offset_calculated] 
      $T[array_obj_ref_2551_index_resized_0] 
      $T[array_obj_ref_2551_index_scaled_0] 
      // ((address * 1 ) + 0 )
      $T[ADD_u32_u32_2550_sample_start_] 
      $T[ADD_u32_u32_2550_sample_completed_] 
      $T[ADD_u32_u32_2550_update_start_] 
      $T[ADD_u32_u32_2550_update_completed_] 
      // (address * 1 )
      $T[MUL_u32_u32_2548_sample_start_] 
      $T[MUL_u32_u32_2548_sample_completed_] 
      $T[MUL_u32_u32_2548_update_start_] 
      $T[MUL_u32_u32_2548_update_completed_] 
      // address
      $T[R_address_2546_sample_start_] 
      $T[R_address_2546_sample_completed_] 
      $T[R_address_2546_update_start_] 
      $T[R_address_2546_update_completed_] 
      // reference to interface object
      R_address_2546_sample_start_ <-& ($entry)
      R_address_2546_sample_completed_ <-& (R_address_2546_sample_start_)
      R_address_2546_update_start_ <-& (R_address_2546_sample_completed_)
      R_address_2546_update_completed_ <-& (R_address_2546_update_start_)
      MUL_u32_u32_2548_sample_start_ <-& (R_address_2546_update_completed_)
      ;;[MUL_u32_u32_2548_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[MUL_u32_u32_2548_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      MUL_u32_u32_2548_sample_start_ &-> (MUL_u32_u32_2548_Sample)
      MUL_u32_u32_2548_sample_completed_ <-& (MUL_u32_u32_2548_Sample)
      MUL_u32_u32_2548_sample_completed_ &-> ($null)
      MUL_u32_u32_2548_update_start_ &-> (MUL_u32_u32_2548_Update)
      MUL_u32_u32_2548_update_completed_ <-& (MUL_u32_u32_2548_Update)
      ADD_u32_u32_2550_sample_start_ <-& (MUL_u32_u32_2548_update_completed_)
      ;;[ADD_u32_u32_2550_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[ADD_u32_u32_2550_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      ADD_u32_u32_2550_sample_start_ &-> (ADD_u32_u32_2550_Sample)
      ADD_u32_u32_2550_sample_completed_ <-& (ADD_u32_u32_2550_Sample)
      ADD_u32_u32_2550_sample_completed_ &-> ($null)
      ADD_u32_u32_2550_update_start_ &-> (ADD_u32_u32_2550_Update)
      ADD_u32_u32_2550_update_completed_ <-& (ADD_u32_u32_2550_Update)
      ;;[array_obj_ref_2551_index_resize_0] 
      {
        $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
      }
      ADD_u32_u32_2550_update_completed_ &-> (array_obj_ref_2551_index_resize_0)
      array_obj_ref_2551_index_resized_0 <-& (array_obj_ref_2551_index_resize_0)
      ;;[array_obj_ref_2551_index_scale_0] 
      {
        $T [scale_rename_req] $T [scale_rename_ack] // rename 
      }
      array_obj_ref_2551_index_resized_0 &-> (array_obj_ref_2551_index_scale_0)
      array_obj_ref_2551_index_scaled_0 <-& (array_obj_ref_2551_index_scale_0)
      ;;[array_obj_ref_2551_final_index_sum_regn] 
      {
        $T [req] $T [ack] // rename
      }
      array_obj_ref_2551_index_scaled_0 &-> (array_obj_ref_2551_final_index_sum_regn)
      array_obj_ref_2551_offset_calculated <-& (array_obj_ref_2551_final_index_sum_regn)
      ;;[array_obj_ref_2551_base_plus_offset] 
      {
        $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
      }
      array_obj_ref_2551_offset_calculated &-> (array_obj_ref_2551_base_plus_offset)
      array_obj_ref_2551_root_address_calculated <-& (array_obj_ref_2551_base_plus_offset)
      ;;[array_obj_ref_2551_word_addrgen] 
      {
        $T [root_register_req] $T [root_register_ack]
      }
      array_obj_ref_2551_root_address_calculated &-> (array_obj_ref_2551_word_addrgen)
      array_obj_ref_2551_word_address_calculated <-& (array_obj_ref_2551_word_addrgen)
      ;;[array_obj_ref_2551_Sample] 
      {
        ;;[array_obj_ref_2551_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_2551_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_2551_sample_start_ <-& (array_obj_ref_2551_word_address_calculated)
      array_obj_ref_2551_sample_start_ &-> (array_obj_ref_2551_Sample)
      array_obj_ref_2551_sample_completed_ <-& (array_obj_ref_2551_Sample)
      array_obj_ref_2551_sample_completed_ &-> ($null)
      array_obj_ref_2551_update_start_ &-> (array_obj_ref_2551_Update)
      array_obj_ref_2551_update_completed_ <-& (array_obj_ref_2551_Update)
      array_obj_ref_2551_sample_start_ <-& (R_data_2552_update_completed_)
      // load-store dependencies..
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %mem_store__
    //  file prog.linked.opt.aa, line 998
    // mempool[((address * 1 ) + 0 )]
    // 1 
    $constant $W[expr_2547_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // 0 
    $constant $W[expr_2549_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    $constant $W[array_obj_ref_2551_resized_base_address] : $int<1> := _b0// 0
    $constant $W[array_obj_ref_2551_offset_scale_factor_0] : $int<1> := _b1// 1
    $constant $W[array_obj_ref_2551_word_offset_0] : $int<1> := _b0// 0
    // 	mempool[((address * 1 ) + 0 )] := data
    //  file prog.linked.opt.aa, line 1003
    // mempool[((address * 1 ) + 0 )]
    // (address * 1 )
    $intermediate $W[MUL_u32_u32_2548_wire] : $int<32>
    // ((address * 1 ) + 0 )
    $intermediate $W[ADD_u32_u32_2550_wire] : $int<32>
    $intermediate $W[ADD_u32_u32_2550_resized] : $int<1>
    $intermediate $W[ADD_u32_u32_2550_scaled] : $int<1>
    $intermediate $W[array_obj_ref_2551_final_offset] : $int<1>
    $intermediate $W[array_obj_ref_2551_root_address] : $int<1>
    $W[array_obj_ref_2551_word_address_0] : $pointer<memory_space_23>
    $W[array_obj_ref_2551_data_0] : $int<8>
    // 	mempool[((address * 1 ) + 0 )] := data
    //  file prog.linked.opt.aa, line 1003
    // mempool[((address * 1 ) + 0 )]
    // (address * 1 )
    *[MUL_u32_u32_2548_inst] (address expr_2547_wire_constant) (MUL_u32_u32_2548_wire) 
    $delay MUL_u32_u32_2548_inst 1
    // ((address * 1 ) + 0 )
    +[ADD_u32_u32_2550_inst] (MUL_u32_u32_2548_wire expr_2549_wire_constant) (ADD_u32_u32_2550_wire) 
    $delay ADD_u32_u32_2550_inst 1
    &/ [array_obj_ref_2551_index_0_resize] (ADD_u32_u32_2550_wire) (ADD_u32_u32_2550_resized) 
    &/ [array_obj_ref_2551_index_0_rename] (ADD_u32_u32_2550_resized) (ADD_u32_u32_2550_scaled) 
    &/ [array_obj_ref_2551_index_offset] (ADD_u32_u32_2550_scaled) (array_obj_ref_2551_final_offset) 
    &/ [array_obj_ref_2551_root_address_inst] (array_obj_ref_2551_final_offset) (array_obj_ref_2551_root_address) 
    &/ [array_obj_ref_2551_addr_0] (array_obj_ref_2551_root_address) (array_obj_ref_2551_word_address_0) 
    $store [array_obj_ref_2551_store_0] $to memory_space_23 (array_obj_ref_2551_word_address_0 array_obj_ref_2551_data_0) 
    $delay array_obj_ref_2551_store_0 2
    &/ [array_obj_ref_2551_gather_scatter] (data) (array_obj_ref_2551_data_0) 
  }
  // end data-path
  // 	mempool[((address * 1 ) + 0 )] := data
  //  file prog.linked.opt.aa, line 1003
  // ((address * 1 ) + 0 )
  // (address * 1 )
  MUL_u32_u32_2548_inst <=> (assign_stmt_2553/MUL_u32_u32_2548_Sample/rr assign_stmt_2553/MUL_u32_u32_2548_Update/cr) (assign_stmt_2553/MUL_u32_u32_2548_Sample/ra assign_stmt_2553/MUL_u32_u32_2548_Update/ca)
  ADD_u32_u32_2550_inst <=> (assign_stmt_2553/ADD_u32_u32_2550_Sample/rr assign_stmt_2553/ADD_u32_u32_2550_Update/cr) (assign_stmt_2553/ADD_u32_u32_2550_Sample/ra assign_stmt_2553/ADD_u32_u32_2550_Update/ca)
  array_obj_ref_2551_index_0_resize <=> (assign_stmt_2553/array_obj_ref_2551_index_resize_0/index_resize_req) (assign_stmt_2553/array_obj_ref_2551_index_resize_0/index_resize_ack)
  array_obj_ref_2551_index_0_rename <=> (assign_stmt_2553/array_obj_ref_2551_index_scale_0/scale_rename_req) (assign_stmt_2553/array_obj_ref_2551_index_scale_0/scale_rename_ack)
  array_obj_ref_2551_index_offset <=> (assign_stmt_2553/array_obj_ref_2551_final_index_sum_regn/req) (assign_stmt_2553/array_obj_ref_2551_final_index_sum_regn/ack)
  array_obj_ref_2551_root_address_inst <=> (assign_stmt_2553/array_obj_ref_2551_base_plus_offset/sum_rename_req) (assign_stmt_2553/array_obj_ref_2551_base_plus_offset/sum_rename_ack)
  array_obj_ref_2551_addr_0 <=> (assign_stmt_2553/array_obj_ref_2551_word_addrgen/root_register_req) (assign_stmt_2553/array_obj_ref_2551_word_addrgen/root_register_ack)
  array_obj_ref_2551_gather_scatter <=> (assign_stmt_2553/array_obj_ref_2551_Sample/array_obj_ref_2551_Split/split_req) (assign_stmt_2553/array_obj_ref_2551_Sample/array_obj_ref_2551_Split/split_ack)
  array_obj_ref_2551_store_0 <=> (assign_stmt_2553/array_obj_ref_2551_Sample/word_access_start/word_0/rr assign_stmt_2553/array_obj_ref_2551_Update/word_access_complete/word_0/cr) (assign_stmt_2553/array_obj_ref_2551_Sample/word_access_start/word_0/ra assign_stmt_2553/array_obj_ref_2551_Update/word_access_complete/word_0/ca)
}
$module [mvWin] 
{
  // pipe-declarations for block %mvWin
  //  file prog.linked.opt.aa, line 1005
  // pipe-declarations for block %mvWin%body
  //  file prog.linked.opt.aa, line 1010
  // pipe-declarations for block %mvWin%body%
  //  file prog.linked.opt.aa, line 1026
  // pipe-declarations for block %mvWin%body%
  //  file prog.linked.opt.aa, line 1034
  // pipe-declarations for block %mvWin%body%
  //  file prog.linked.opt.aa, line 1038
  // pipe-declarations for block %mvWin%body%
  //  file prog.linked.opt.aa, line 1049
  // pipe-declarations for block %mvWin%body%
  //  file prog.linked.opt.aa, line 1052
  // pipe-declarations for block %mvWin%body%
  //  file prog.linked.opt.aa, line 1064
  // pipe-declarations for block %mvWin%body%
  //  file prog.linked.opt.aa, line 1069
  // pipe-declarations for block %mvWin%body%
  //  file prog.linked.opt.aa, line 1081
  // pipe-declarations for block %mvWin%body%
  //  file prog.linked.opt.aa, line 1086
  // pipe-declarations for block %mvWin%body%
  //  file prog.linked.opt.aa, line 1096
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_2556] // Branch Block  file prog.linked.opt.aa, line 1010
    {
      $P [branch_block_stmt_2556__entry__]
      branch_block_stmt_2556__entry__ <-| ($entry)
      $P [branch_block_stmt_2556__exit__]
      branch_block_stmt_2556__exit__ |-> ($exit)
      $P [assign_stmt_2559__entry__] 
      $P [assign_stmt_2559__exit__] 
      $P [assign_stmt_2562_to_assign_stmt_2595__entry__] 
      $P [assign_stmt_2562_to_assign_stmt_2595__exit__] 
      $P [if_stmt_2596__entry__] 
      $P [if_stmt_2596__exit__] 
      $P [merge_stmt_2602__entry__] 
      $P [merge_stmt_2602__exit__] 
      $P [assign_stmt_2608__entry__] 
      $P [assign_stmt_2608__exit__] 
      $P [if_stmt_2609__entry__] 
      $P [if_stmt_2609__exit__] 
      $P [merge_stmt_2615__entry__] 
      $P [merge_stmt_2615__exit__] 
      $P [assign_stmt_2620__entry__] 
      $P [assign_stmt_2620__exit__] 
      $P [bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi]
      $P [merge_stmt_2622__exit__] 
      $P [assign_stmt_2642_to_assign_stmt_2648__entry__] 
      $P [assign_stmt_2642_to_assign_stmt_2648__exit__] 
      $P [if_stmt_2649__entry__] 
      $P [if_stmt_2649__exit__] 
      $P [merge_stmt_2655__entry__] 
      $P [merge_stmt_2655__exit__] 
      $P [bbx_xnphx_xix_xpreheader_bbx_xnphx_xi]
      $P [merge_stmt_2657__exit__] 
      $P [assign_stmt_2678_to_assign_stmt_2689__entry__] 
      $P [assign_stmt_2678_to_assign_stmt_2689__exit__] 
      $P [if_stmt_2690__entry__] 
      $P [if_stmt_2690__exit__] 
      $P [merge_stmt_2696__entry__] 
      $P [merge_stmt_2696__exit__] 
      $P [xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi]
      $P [merge_stmt_2707__exit__] 
      $P [assign_stmt_2727_to_assign_stmt_2738__entry__] 
      $P [assign_stmt_2727_to_assign_stmt_2738__exit__] 
      $P [if_stmt_2739__entry__] 
      $P [if_stmt_2739__exit__] 
      $P [merge_stmt_2745__entry__] 
      $P [merge_stmt_2745__exit__] 
      $P [assign_stmt_2754__entry__] 
      $P [assign_stmt_2754__exit__] 
      $P [divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit]
      $P [merge_stmt_2756__exit__] 
      $P [assign_stmt_2771_to_assign_stmt_2793__entry__] 
      $P [assign_stmt_2771_to_assign_stmt_2793__exit__] 
      $P [assign_stmt_2796__entry__] 
      $P [assign_stmt_2796__exit__] 
      $P [return__]
      $P [merge_stmt_2798__exit__] 
      ::[assign_stmt_2559] 
      {
        // 		iNsTr_1 := DERIVout_pipe
        //  file prog.linked.opt.aa, line 1012
        // Source expression
        // DERIVout_pipe
        $T[RPIPE_DERIVout_pipe_2558_sample_start_] 
        $T[RPIPE_DERIVout_pipe_2558_sample_completed_] 
        $T[RPIPE_DERIVout_pipe_2558_update_start_] 
        $T[RPIPE_DERIVout_pipe_2558_update_completed_] 
        ;;[RPIPE_DERIVout_pipe_2558_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DERIVout_pipe_2558_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DERIVout_pipe_2558_sample_start_ &-> (RPIPE_DERIVout_pipe_2558_Sample)
        RPIPE_DERIVout_pipe_2558_sample_completed_ <-& (RPIPE_DERIVout_pipe_2558_Sample)
        RPIPE_DERIVout_pipe_2558_sample_completed_ &-> ($null)
        RPIPE_DERIVout_pipe_2558_update_start_ &-> (RPIPE_DERIVout_pipe_2558_Update)
        RPIPE_DERIVout_pipe_2558_update_completed_ <-& (RPIPE_DERIVout_pipe_2558_Update)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // barrier: 		iNsTr_1 := DERIVout_pipe
        // load-store dependencies..
        // pipe read/write dependencies for pipe DERIVout_pipe
      }
      assign_stmt_2559__entry__ |-> (assign_stmt_2559)
      assign_stmt_2559__exit__ <-| (assign_stmt_2559)
      ::[assign_stmt_2562_to_assign_stmt_2595] 
      {
        // 		iNsTr_2 := WINbuff_ptr
        //  file prog.linked.opt.aa, line 1013
        // Source expression
        // WINbuff_ptr
        $T[LOAD_WINbuff_ptr_2561_sample_start_] 
        $T[LOAD_WINbuff_ptr_2561_sample_completed_] 
        $T[LOAD_WINbuff_ptr_2561_update_start_] 
        $T[LOAD_WINbuff_ptr_2561_update_completed_] 
        $T[LOAD_WINbuff_ptr_2561_sample_start_] 
        $T[LOAD_WINbuff_ptr_2561_sample_completed_] 
        $T[LOAD_WINbuff_ptr_2561_update_start_] 
        $T[LOAD_WINbuff_ptr_2561_update_completed_] 
        $T[LOAD_WINbuff_ptr_2561_word_address_calculated] 
        $T[LOAD_WINbuff_ptr_2561_root_address_calculated] 
        LOAD_WINbuff_ptr_2561_word_address_calculated <-& (LOAD_WINbuff_ptr_2561_root_address_calculated)
        ;;[LOAD_WINbuff_ptr_2561_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_WINbuff_ptr_2561_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_WINbuff_ptr_2561_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_WINbuff_ptr_2561_sample_start_ <-& (LOAD_WINbuff_ptr_2561_word_address_calculated)
        LOAD_WINbuff_ptr_2561_sample_start_ &-> (LOAD_WINbuff_ptr_2561_Sample)
        LOAD_WINbuff_ptr_2561_sample_completed_ <-& (LOAD_WINbuff_ptr_2561_Sample)
        LOAD_WINbuff_ptr_2561_sample_completed_ &-> ($null)
        LOAD_WINbuff_ptr_2561_update_start_ &-> (LOAD_WINbuff_ptr_2561_Update)
        LOAD_WINbuff_ptr_2561_update_completed_ <-& (LOAD_WINbuff_ptr_2561_Update)
        // Target expression
        // (as target) iNsTr_2
        // iNsTr_2
        // implicit reference
        // 		iNsTr_3 := WINsum
        //  file prog.linked.opt.aa, line 1014
        // Source expression
        // WINsum
        $T[LOAD_WINsum_2564_sample_start_] 
        $T[LOAD_WINsum_2564_sample_completed_] 
        $T[LOAD_WINsum_2564_update_start_] 
        $T[LOAD_WINsum_2564_update_completed_] 
        $T[LOAD_WINsum_2564_sample_start_] 
        $T[LOAD_WINsum_2564_sample_completed_] 
        $T[LOAD_WINsum_2564_update_start_] 
        $T[LOAD_WINsum_2564_update_completed_] 
        $T[LOAD_WINsum_2564_word_address_calculated] 
        $T[LOAD_WINsum_2564_root_address_calculated] 
        LOAD_WINsum_2564_word_address_calculated <-& (LOAD_WINsum_2564_root_address_calculated)
        ;;[LOAD_WINsum_2564_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_WINsum_2564_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_WINsum_2564_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_WINsum_2564_sample_start_ <-& (LOAD_WINsum_2564_word_address_calculated)
        LOAD_WINsum_2564_sample_start_ &-> (LOAD_WINsum_2564_Sample)
        LOAD_WINsum_2564_sample_completed_ <-& (LOAD_WINsum_2564_Sample)
        LOAD_WINsum_2564_sample_completed_ &-> ($null)
        LOAD_WINsum_2564_update_start_ &-> (LOAD_WINsum_2564_Update)
        LOAD_WINsum_2564_update_completed_ <-& (LOAD_WINsum_2564_Update)
        // Target expression
        // (as target) iNsTr_3
        // iNsTr_3
        // implicit reference
        // 		iNsTr_4 := @(WINbuff[iNsTr_2])
        //  file prog.linked.opt.aa, line 1015
        // Source expression
        // @(WINbuff[iNsTr_2])
        $T[addr_of_2569_sample_start_] 
        $T[addr_of_2569_sample_completed_] 
        $T[addr_of_2569_update_start_] 
        $T[addr_of_2569_update_completed_] 
        $T[array_obj_ref_2568_root_address_calculated] 
        $T[array_obj_ref_2568_offset_calculated] 
        $T[array_obj_ref_2568_index_resized_0] 
        $T[array_obj_ref_2568_index_scaled_0] 
        // iNsTr_2
        $T[R_iNsTr_2_2567_sample_start_] 
        $T[R_iNsTr_2_2567_sample_completed_] 
        $T[R_iNsTr_2_2567_update_start_] 
        $T[R_iNsTr_2_2567_update_completed_] 
        // implicit reference
        R_iNsTr_2_2567_sample_start_ <-& (LOAD_WINbuff_ptr_2561_update_completed_)
        R_iNsTr_2_2567_sample_completed_ <-& (R_iNsTr_2_2567_sample_start_)
        R_iNsTr_2_2567_update_start_ <-& (R_iNsTr_2_2567_sample_completed_)
        R_iNsTr_2_2567_update_completed_ <-& (R_iNsTr_2_2567_update_start_)
        ;;[array_obj_ref_2568_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        R_iNsTr_2_2567_update_completed_ &-> (array_obj_ref_2568_index_resize_0)
        array_obj_ref_2568_index_resized_0 <-& (array_obj_ref_2568_index_resize_0)
        ;;[array_obj_ref_2568_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_2568_index_resized_0 &-> (array_obj_ref_2568_index_scale_0)
        array_obj_ref_2568_index_scaled_0 <-& (array_obj_ref_2568_index_scale_0)
        ;;[array_obj_ref_2568_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_2568_index_scaled_0 &-> (array_obj_ref_2568_final_index_sum_regn)
        array_obj_ref_2568_offset_calculated <-& (array_obj_ref_2568_final_index_sum_regn)
        ;;[array_obj_ref_2568_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_2568_offset_calculated &-> (array_obj_ref_2568_base_plus_offset)
        array_obj_ref_2568_root_address_calculated <-& (array_obj_ref_2568_base_plus_offset)
        ;;[addr_of_2569_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_2569_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_2569_sample_start_ <-& (array_obj_ref_2568_root_address_calculated)
        addr_of_2569_sample_start_ &-> (addr_of_2569_request)
        addr_of_2569_sample_completed_ <-& (addr_of_2569_request)
        addr_of_2569_update_start_ &-> (addr_of_2569_complete)
        addr_of_2569_update_completed_ <-& (addr_of_2569_complete)
        // Target expression
        // (as target) iNsTr_4
        // iNsTr_4
        // implicit reference
        // 		iNsTr_5 := ->(iNsTr_4)
        //  file prog.linked.opt.aa, line 1016
        // Source expression
        // ->(iNsTr_4)
        $T[ptr_deref_2573_sample_start_] 
        $T[ptr_deref_2573_sample_completed_] 
        $T[ptr_deref_2573_update_start_] 
        $T[ptr_deref_2573_update_completed_] 
        $T[ptr_deref_2573_base_address_calculated] 
        // iNsTr_4
        $T[R_iNsTr_4_2572_sample_start_] 
        $T[R_iNsTr_4_2572_sample_completed_] 
        $T[R_iNsTr_4_2572_update_start_] 
        $T[R_iNsTr_4_2572_update_completed_] 
        // implicit reference
        R_iNsTr_4_2572_sample_start_ <-& (addr_of_2569_update_completed_)
        R_iNsTr_4_2572_sample_completed_ <-& (R_iNsTr_4_2572_sample_start_)
        R_iNsTr_4_2572_update_start_ <-& (R_iNsTr_4_2572_sample_completed_)
        R_iNsTr_4_2572_update_completed_ <-& (R_iNsTr_4_2572_update_start_)
        $T[ptr_deref_2573_word_address_calculated] 
        $T[ptr_deref_2573_root_address_calculated] 
        $T[ptr_deref_2573_base_address_resized] 
        ;;[ptr_deref_2573_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_2573_base_address_calculated &-> (ptr_deref_2573_base_addr_resize)
        ptr_deref_2573_base_address_resized <-& (ptr_deref_2573_base_addr_resize)
        ;;[ptr_deref_2573_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_2573_base_address_resized &-> (ptr_deref_2573_base_plus_offset)
        ptr_deref_2573_root_address_calculated <-& (ptr_deref_2573_base_plus_offset)
        ;;[ptr_deref_2573_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_2573_root_address_calculated &-> (ptr_deref_2573_word_addrgen)
        ptr_deref_2573_word_address_calculated <-& (ptr_deref_2573_word_addrgen)
        ;;[ptr_deref_2573_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_2573_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_2573_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_2573_sample_start_ <-& (ptr_deref_2573_word_address_calculated)
        ptr_deref_2573_sample_start_ &-> (ptr_deref_2573_Sample)
        ptr_deref_2573_sample_completed_ <-& (ptr_deref_2573_Sample)
        ptr_deref_2573_sample_completed_ &-> ($null)
        ptr_deref_2573_update_start_ &-> (ptr_deref_2573_Update)
        ptr_deref_2573_update_completed_ <-& (ptr_deref_2573_Update)
        ptr_deref_2573_base_address_calculated <-& (R_iNsTr_4_2572_update_completed_)
        ptr_deref_2573_sample_start_ <-& (ptr_deref_2573_base_address_calculated)
        // Target expression
        // (as target) iNsTr_5
        // iNsTr_5
        // implicit reference
        // 		iNsTr_6 := (iNsTr_3 + iNsTr_1)
        //  file prog.linked.opt.aa, line 1017
        // Source expression
        // (iNsTr_3 + iNsTr_1)
        $T[ADD_u32_u32_2578_sample_start_] 
        $T[ADD_u32_u32_2578_sample_completed_] 
        $T[ADD_u32_u32_2578_update_start_] 
        $T[ADD_u32_u32_2578_update_completed_] 
        // iNsTr_3
        $T[R_iNsTr_3_2576_sample_start_] 
        $T[R_iNsTr_3_2576_sample_completed_] 
        $T[R_iNsTr_3_2576_update_start_] 
        $T[R_iNsTr_3_2576_update_completed_] 
        // implicit reference
        R_iNsTr_3_2576_sample_start_ <-& (LOAD_WINsum_2564_update_completed_)
        R_iNsTr_3_2576_sample_completed_ <-& (R_iNsTr_3_2576_sample_start_)
        R_iNsTr_3_2576_update_start_ <-& (R_iNsTr_3_2576_sample_completed_)
        R_iNsTr_3_2576_update_completed_ <-& (R_iNsTr_3_2576_update_start_)
        // iNsTr_1
        $T[R_iNsTr_1_2577_sample_start_] 
        $T[R_iNsTr_1_2577_sample_completed_] 
        $T[R_iNsTr_1_2577_update_start_] 
        $T[R_iNsTr_1_2577_update_completed_] 
        // implicit reference
        R_iNsTr_1_2577_sample_start_ <-& ($entry)
        R_iNsTr_1_2577_sample_completed_ <-& (R_iNsTr_1_2577_sample_start_)
        R_iNsTr_1_2577_update_start_ <-& (R_iNsTr_1_2577_sample_completed_)
        R_iNsTr_1_2577_update_completed_ <-& (R_iNsTr_1_2577_update_start_)
        ADD_u32_u32_2578_sample_start_ <-& (R_iNsTr_3_2576_update_completed_)
        ADD_u32_u32_2578_sample_start_ <-& (R_iNsTr_1_2577_update_completed_)
        ;;[ADD_u32_u32_2578_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_2578_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_2578_sample_start_ &-> (ADD_u32_u32_2578_Sample)
        ADD_u32_u32_2578_sample_completed_ <-& (ADD_u32_u32_2578_Sample)
        ADD_u32_u32_2578_sample_completed_ &-> ($null)
        ADD_u32_u32_2578_update_start_ &-> (ADD_u32_u32_2578_Update)
        ADD_u32_u32_2578_update_completed_ <-& (ADD_u32_u32_2578_Update)
        // Target expression
        // (as target) iNsTr_6
        // iNsTr_6
        // implicit reference
        // 		iNsTr_7 := (iNsTr_6 - iNsTr_5)
        //  file prog.linked.opt.aa, line 1018
        // Source expression
        // (iNsTr_6 - iNsTr_5)
        $T[SUB_u32_u32_2583_sample_start_] 
        $T[SUB_u32_u32_2583_sample_completed_] 
        $T[SUB_u32_u32_2583_update_start_] 
        $T[SUB_u32_u32_2583_update_completed_] 
        // iNsTr_6
        $T[R_iNsTr_6_2581_sample_start_] 
        $T[R_iNsTr_6_2581_sample_completed_] 
        $T[R_iNsTr_6_2581_update_start_] 
        $T[R_iNsTr_6_2581_update_completed_] 
        // implicit reference
        R_iNsTr_6_2581_sample_start_ <-& (ADD_u32_u32_2578_update_completed_)
        R_iNsTr_6_2581_sample_completed_ <-& (R_iNsTr_6_2581_sample_start_)
        R_iNsTr_6_2581_update_start_ <-& (R_iNsTr_6_2581_sample_completed_)
        R_iNsTr_6_2581_update_completed_ <-& (R_iNsTr_6_2581_update_start_)
        // iNsTr_5
        $T[R_iNsTr_5_2582_sample_start_] 
        $T[R_iNsTr_5_2582_sample_completed_] 
        $T[R_iNsTr_5_2582_update_start_] 
        $T[R_iNsTr_5_2582_update_completed_] 
        // implicit reference
        R_iNsTr_5_2582_sample_start_ <-& (ptr_deref_2573_update_completed_)
        R_iNsTr_5_2582_sample_completed_ <-& (R_iNsTr_5_2582_sample_start_)
        R_iNsTr_5_2582_update_start_ <-& (R_iNsTr_5_2582_sample_completed_)
        R_iNsTr_5_2582_update_completed_ <-& (R_iNsTr_5_2582_update_start_)
        SUB_u32_u32_2583_sample_start_ <-& (R_iNsTr_6_2581_update_completed_)
        SUB_u32_u32_2583_sample_start_ <-& (R_iNsTr_5_2582_update_completed_)
        ;;[SUB_u32_u32_2583_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_2583_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_2583_sample_start_ &-> (SUB_u32_u32_2583_Sample)
        SUB_u32_u32_2583_sample_completed_ <-& (SUB_u32_u32_2583_Sample)
        SUB_u32_u32_2583_sample_completed_ &-> ($null)
        SUB_u32_u32_2583_update_start_ &-> (SUB_u32_u32_2583_Update)
        SUB_u32_u32_2583_update_completed_ <-& (SUB_u32_u32_2583_Update)
        // Target expression
        // (as target) iNsTr_7
        // iNsTr_7
        // implicit reference
        // 		WINsum := iNsTr_7
        //  file prog.linked.opt.aa, line 1019
        // Source expression
        // iNsTr_7
        $T[R_iNsTr_7_2586_sample_start_] 
        $T[R_iNsTr_7_2586_sample_completed_] 
        $T[R_iNsTr_7_2586_update_start_] 
        $T[R_iNsTr_7_2586_update_completed_] 
        // implicit reference
        R_iNsTr_7_2586_sample_start_ <-& (SUB_u32_u32_2583_update_completed_)
        R_iNsTr_7_2586_sample_completed_ <-& (R_iNsTr_7_2586_sample_start_)
        R_iNsTr_7_2586_update_start_ <-& (R_iNsTr_7_2586_sample_completed_)
        R_iNsTr_7_2586_update_completed_ <-& (R_iNsTr_7_2586_update_start_)
        // Target expression
        // (as target) WINsum
        $T[STORE_WINsum_2585_sample_start_] 
        $T[STORE_WINsum_2585_sample_completed_] 
        $T[STORE_WINsum_2585_update_start_] 
        $T[STORE_WINsum_2585_update_completed_] 
        // WINsum
        $T[STORE_WINsum_2585_word_address_calculated] 
        $T[STORE_WINsum_2585_root_address_calculated] 
        STORE_WINsum_2585_word_address_calculated <-& (STORE_WINsum_2585_root_address_calculated)
        ;;[STORE_WINsum_2585_Sample] 
        {
          ;;[STORE_WINsum_2585_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_WINsum_2585_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_WINsum_2585_sample_start_ <-& (STORE_WINsum_2585_word_address_calculated)
        STORE_WINsum_2585_sample_start_ &-> (STORE_WINsum_2585_Sample)
        STORE_WINsum_2585_sample_completed_ <-& (STORE_WINsum_2585_Sample)
        STORE_WINsum_2585_sample_completed_ &-> ($null)
        STORE_WINsum_2585_update_start_ &-> (STORE_WINsum_2585_Update)
        STORE_WINsum_2585_update_completed_ <-& (STORE_WINsum_2585_Update)
        STORE_WINsum_2585_sample_start_ <-& (R_iNsTr_7_2586_update_completed_)
        // 		iNsTr_9 := (($bitcast ($int<32>) iNsTr_7 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000001111101000000000000  ) ))
        //  file prog.linked.opt.aa, line 1020
        // Source expression
        // (($bitcast ($int<32>) iNsTr_7 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000001111101000000000000  ) ))
        $T[SGT_i32_u1_2594_sample_start_] 
        $T[SGT_i32_u1_2594_sample_completed_] 
        $T[SGT_i32_u1_2594_update_start_] 
        $T[SGT_i32_u1_2594_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_7 )
        $T[type_cast_2590_sample_start_] 
        $T[type_cast_2590_sample_completed_] 
        $T[type_cast_2590_update_start_] 
        $T[type_cast_2590_update_completed_] 
        // iNsTr_7
        $T[R_iNsTr_7_2589_sample_start_] 
        $T[R_iNsTr_7_2589_sample_completed_] 
        $T[R_iNsTr_7_2589_update_start_] 
        $T[R_iNsTr_7_2589_update_completed_] 
        // implicit reference
        R_iNsTr_7_2589_sample_start_ <-& (SUB_u32_u32_2583_update_completed_)
        R_iNsTr_7_2589_sample_completed_ <-& (R_iNsTr_7_2589_sample_start_)
        R_iNsTr_7_2589_update_start_ <-& (R_iNsTr_7_2589_sample_completed_)
        R_iNsTr_7_2589_update_completed_ <-& (R_iNsTr_7_2589_update_start_)
        type_cast_2590_sample_start_ <-& (R_iNsTr_7_2589_update_completed_)
        ;;[type_cast_2590_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2590_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2590_sample_start_ &-> (type_cast_2590_Sample)
        type_cast_2590_sample_completed_ <-& (type_cast_2590_Sample)
        type_cast_2590_sample_completed_ &-> ($null)
        type_cast_2590_update_start_ &-> (type_cast_2590_Update)
        type_cast_2590_update_completed_ <-& (type_cast_2590_Update)
        // flow-through
        type_cast_2590_update_start_ <-& (type_cast_2590_sample_completed_)
        SGT_i32_u1_2594_sample_start_ <-& (type_cast_2590_update_completed_)
        ;;[SGT_i32_u1_2594_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_2594_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_2594_sample_start_ &-> (SGT_i32_u1_2594_Sample)
        SGT_i32_u1_2594_sample_completed_ <-& (SGT_i32_u1_2594_Sample)
        SGT_i32_u1_2594_sample_completed_ &-> ($null)
        SGT_i32_u1_2594_update_start_ &-> (SGT_i32_u1_2594_Update)
        SGT_i32_u1_2594_update_completed_ <-& (SGT_i32_u1_2594_Update)
        // Target expression
        // (as target) iNsTr_9
        // iNsTr_9
        // implicit reference
        // load-store dependencies..
        $T [LOAD_WINsum_2564_STORE_WINsum_2585_delay] $delay
        // WINsum(load) -> WINsum(store)
        STORE_WINsum_2585_sample_start_ <-& (LOAD_WINsum_2564_STORE_WINsum_2585_delay)
        LOAD_WINsum_2564_STORE_WINsum_2585_delay <-& (LOAD_WINsum_2564_sample_completed_)
      }
      assign_stmt_2562_to_assign_stmt_2595__entry__ |-> (assign_stmt_2562_to_assign_stmt_2595)
      assign_stmt_2562_to_assign_stmt_2595__exit__ <-| (assign_stmt_2562_to_assign_stmt_2595)
      // if-statement  
      //  file prog.linked.opt.aa, line 1021
      ;;[if_stmt_2596_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2596__entry__ |-> (if_stmt_2596_dead_link)
      if_stmt_2596__exit__ <-| (if_stmt_2596_dead_link)
      ;;[if_stmt_2596_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2596__entry__ |-> (if_stmt_2596_eval_test)
      $P [R_iNsTr_9_2597_place]
      R_iNsTr_9_2597_place <-| (if_stmt_2596_eval_test)
      ;;[if_stmt_2596_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2596_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_9_2597_place |-> (if_stmt_2596_if_link if_stmt_2596_else_link)
      $P [bb_0_divideUnsignedx_xexit]
      bb_0_divideUnsignedx_xexit <-| (if_stmt_2596_if_link)
      $P [bb_0_bb_1]
      bb_0_bb_1 <-| (if_stmt_2596_else_link)
      ::[assign_stmt_2608] 
      {
        // 		iNsTr_19 := (iNsTr_7 < ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
        //  file prog.linked.opt.aa, line 1028
        // Source expression
        // (iNsTr_7 < ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
        $T[ULT_u32_u1_2607_sample_start_] 
        $T[ULT_u32_u1_2607_sample_completed_] 
        $T[ULT_u32_u1_2607_update_start_] 
        $T[ULT_u32_u1_2607_update_completed_] 
        // iNsTr_7
        $T[R_iNsTr_7_2604_sample_start_] 
        $T[R_iNsTr_7_2604_sample_completed_] 
        $T[R_iNsTr_7_2604_update_start_] 
        $T[R_iNsTr_7_2604_update_completed_] 
        // implicit reference
        R_iNsTr_7_2604_sample_start_ <-& ($entry)
        R_iNsTr_7_2604_sample_completed_ <-& (R_iNsTr_7_2604_sample_start_)
        R_iNsTr_7_2604_update_start_ <-& (R_iNsTr_7_2604_sample_completed_)
        R_iNsTr_7_2604_update_completed_ <-& (R_iNsTr_7_2604_update_start_)
        ULT_u32_u1_2607_sample_start_ <-& (R_iNsTr_7_2604_update_completed_)
        ;;[ULT_u32_u1_2607_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_2607_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_2607_sample_start_ &-> (ULT_u32_u1_2607_Sample)
        ULT_u32_u1_2607_sample_completed_ <-& (ULT_u32_u1_2607_Sample)
        ULT_u32_u1_2607_sample_completed_ &-> ($null)
        ULT_u32_u1_2607_update_start_ &-> (ULT_u32_u1_2607_Update)
        ULT_u32_u1_2607_update_completed_ <-& (ULT_u32_u1_2607_Update)
        // Target expression
        // (as target) iNsTr_19
        // iNsTr_19
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2608__entry__ |-> (assign_stmt_2608)
      assign_stmt_2608__exit__ <-| (assign_stmt_2608)
      // if-statement  
      //  file prog.linked.opt.aa, line 1029
      ;;[if_stmt_2609_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2609__entry__ |-> (if_stmt_2609_dead_link)
      if_stmt_2609__exit__ <-| (if_stmt_2609_dead_link)
      ;;[if_stmt_2609_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2609__entry__ |-> (if_stmt_2609_eval_test)
      $P [R_iNsTr_19_2610_place]
      R_iNsTr_19_2610_place <-| (if_stmt_2609_eval_test)
      ;;[if_stmt_2609_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2609_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_19_2610_place |-> (if_stmt_2609_if_link if_stmt_2609_else_link)
      $P [bb_1_divideUnsignedx_xexit]
      bb_1_divideUnsignedx_xexit <-| (if_stmt_2609_if_link)
      $P [bb_1_bbx_xnph6x_xix_xpreheader]
      bb_1_bbx_xnph6x_xix_xpreheader <-| (if_stmt_2609_else_link)
      ::[assign_stmt_2620] 
      {
        // 		iNsTr_21 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_7 ) )
        //  file prog.linked.opt.aa, line 1036
        // Source expression
        // ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_7 ) )
        $T[type_cast_2619_sample_start_] 
        $T[type_cast_2619_sample_completed_] 
        $T[type_cast_2619_update_start_] 
        $T[type_cast_2619_update_completed_] 
        // ($cast ($int<64>) iNsTr_7 )
        $T[type_cast_2618_sample_start_] 
        $T[type_cast_2618_sample_completed_] 
        $T[type_cast_2618_update_start_] 
        $T[type_cast_2618_update_completed_] 
        // iNsTr_7
        $T[R_iNsTr_7_2617_sample_start_] 
        $T[R_iNsTr_7_2617_sample_completed_] 
        $T[R_iNsTr_7_2617_update_start_] 
        $T[R_iNsTr_7_2617_update_completed_] 
        // implicit reference
        R_iNsTr_7_2617_sample_start_ <-& ($entry)
        R_iNsTr_7_2617_sample_completed_ <-& (R_iNsTr_7_2617_sample_start_)
        R_iNsTr_7_2617_update_start_ <-& (R_iNsTr_7_2617_sample_completed_)
        R_iNsTr_7_2617_update_completed_ <-& (R_iNsTr_7_2617_update_start_)
        type_cast_2618_sample_start_ <-& (R_iNsTr_7_2617_update_completed_)
        ;;[type_cast_2618_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2618_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2618_sample_start_ &-> (type_cast_2618_Sample)
        type_cast_2618_sample_completed_ <-& (type_cast_2618_Sample)
        type_cast_2618_sample_completed_ &-> ($null)
        type_cast_2618_update_start_ &-> (type_cast_2618_Update)
        type_cast_2618_update_completed_ <-& (type_cast_2618_Update)
        type_cast_2619_sample_start_ <-& (type_cast_2618_update_completed_)
        ;;[type_cast_2619_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2619_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2619_sample_start_ &-> (type_cast_2619_Sample)
        type_cast_2619_sample_completed_ <-& (type_cast_2619_Sample)
        type_cast_2619_sample_completed_ &-> ($null)
        type_cast_2619_update_start_ &-> (type_cast_2619_Update)
        type_cast_2619_update_completed_ <-& (type_cast_2619_Update)
        // Target expression
        // (as target) iNsTr_21
        // iNsTr_21
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2620__entry__ |-> (assign_stmt_2620)
      assign_stmt_2620__exit__ <-| (assign_stmt_2620)
      ::[assign_stmt_2642_to_assign_stmt_2648] 
      {
        // 		iNsTr_23 := (xx_x05x_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 1042
        // Source expression
        // (xx_x05x_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[LSHR_u64_u64_2641_sample_start_] 
        $T[LSHR_u64_u64_2641_sample_completed_] 
        $T[LSHR_u64_u64_2641_update_start_] 
        $T[LSHR_u64_u64_2641_update_completed_] 
        // xx_x05x_xi
        $T[R_xx_x05x_xi_2638_sample_start_] 
        $T[R_xx_x05x_xi_2638_sample_completed_] 
        $T[R_xx_x05x_xi_2638_update_start_] 
        $T[R_xx_x05x_xi_2638_update_completed_] 
        // implicit reference
        R_xx_x05x_xi_2638_sample_start_ <-& ($entry)
        R_xx_x05x_xi_2638_sample_completed_ <-& (R_xx_x05x_xi_2638_sample_start_)
        R_xx_x05x_xi_2638_update_start_ <-& (R_xx_x05x_xi_2638_sample_completed_)
        R_xx_x05x_xi_2638_update_completed_ <-& (R_xx_x05x_xi_2638_update_start_)
        LSHR_u64_u64_2641_sample_start_ <-& (R_xx_x05x_xi_2638_update_completed_)
        ;;[LSHR_u64_u64_2641_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u64_u64_2641_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u64_u64_2641_sample_start_ &-> (LSHR_u64_u64_2641_Sample)
        LSHR_u64_u64_2641_sample_completed_ <-& (LSHR_u64_u64_2641_Sample)
        LSHR_u64_u64_2641_sample_completed_ &-> ($null)
        LSHR_u64_u64_2641_update_start_ &-> (LSHR_u64_u64_2641_Update)
        LSHR_u64_u64_2641_update_completed_ <-& (LSHR_u64_u64_2641_Update)
        // Target expression
        // (as target) iNsTr_23
        // iNsTr_23
        // implicit reference
        // 		iNsTr_24 := (iNsTr_23 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
        //  file prog.linked.opt.aa, line 1043
        // Source expression
        // (iNsTr_23 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
        $T[UGT_u64_u1_2647_sample_start_] 
        $T[UGT_u64_u1_2647_sample_completed_] 
        $T[UGT_u64_u1_2647_update_start_] 
        $T[UGT_u64_u1_2647_update_completed_] 
        // iNsTr_23
        $T[R_iNsTr_23_2644_sample_start_] 
        $T[R_iNsTr_23_2644_sample_completed_] 
        $T[R_iNsTr_23_2644_update_start_] 
        $T[R_iNsTr_23_2644_update_completed_] 
        // implicit reference
        R_iNsTr_23_2644_sample_start_ <-& (LSHR_u64_u64_2641_update_completed_)
        R_iNsTr_23_2644_sample_completed_ <-& (R_iNsTr_23_2644_sample_start_)
        R_iNsTr_23_2644_update_start_ <-& (R_iNsTr_23_2644_sample_completed_)
        R_iNsTr_23_2644_update_completed_ <-& (R_iNsTr_23_2644_update_start_)
        UGT_u64_u1_2647_sample_start_ <-& (R_iNsTr_23_2644_update_completed_)
        ;;[UGT_u64_u1_2647_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u64_u1_2647_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u64_u1_2647_sample_start_ &-> (UGT_u64_u1_2647_Sample)
        UGT_u64_u1_2647_sample_completed_ <-& (UGT_u64_u1_2647_Sample)
        UGT_u64_u1_2647_sample_completed_ &-> ($null)
        UGT_u64_u1_2647_update_start_ &-> (UGT_u64_u1_2647_Update)
        UGT_u64_u1_2647_update_completed_ <-& (UGT_u64_u1_2647_Update)
        // Target expression
        // (as target) iNsTr_24
        // iNsTr_24
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2642_to_assign_stmt_2648__entry__ |-> (assign_stmt_2642_to_assign_stmt_2648)
      assign_stmt_2642_to_assign_stmt_2648__exit__ <-| (assign_stmt_2642_to_assign_stmt_2648)
      // if-statement  
      //  file prog.linked.opt.aa, line 1044
      ;;[if_stmt_2649_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2649__entry__ |-> (if_stmt_2649_dead_link)
      if_stmt_2649__exit__ <-| (if_stmt_2649_dead_link)
      ;;[if_stmt_2649_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2649__entry__ |-> (if_stmt_2649_eval_test)
      $P [R_iNsTr_24_2650_place]
      R_iNsTr_24_2650_place <-| (if_stmt_2649_eval_test)
      ;;[if_stmt_2649_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2649_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_24_2650_place |-> (if_stmt_2649_if_link if_stmt_2649_else_link)
      $P [bbx_xnph6x_xi_bbx_xnphx_xix_xpreheader]
      bbx_xnph6x_xi_bbx_xnphx_xix_xpreheader <-| (if_stmt_2649_if_link)
      $P [bbx_xnph6x_xi_xx_x_crit_edgex_xi]
      bbx_xnph6x_xi_xx_x_crit_edgex_xi <-| (if_stmt_2649_else_link)
      ::[assign_stmt_2678_to_assign_stmt_2689] 
      {
        // 		iNsTr_31 := (shifted_divisorx_x02x_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 1056
        // Source expression
        // (shifted_divisorx_x02x_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[SHL_u64_u64_2677_sample_start_] 
        $T[SHL_u64_u64_2677_sample_completed_] 
        $T[SHL_u64_u64_2677_update_start_] 
        $T[SHL_u64_u64_2677_update_completed_] 
        // shifted_divisorx_x02x_xi
        $T[R_shifted_divisorx_x02x_xi_2674_sample_start_] 
        $T[R_shifted_divisorx_x02x_xi_2674_sample_completed_] 
        $T[R_shifted_divisorx_x02x_xi_2674_update_start_] 
        $T[R_shifted_divisorx_x02x_xi_2674_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x02x_xi_2674_sample_start_ <-& ($entry)
        R_shifted_divisorx_x02x_xi_2674_sample_completed_ <-& (R_shifted_divisorx_x02x_xi_2674_sample_start_)
        R_shifted_divisorx_x02x_xi_2674_update_start_ <-& (R_shifted_divisorx_x02x_xi_2674_sample_completed_)
        R_shifted_divisorx_x02x_xi_2674_update_completed_ <-& (R_shifted_divisorx_x02x_xi_2674_update_start_)
        SHL_u64_u64_2677_sample_start_ <-& (R_shifted_divisorx_x02x_xi_2674_update_completed_)
        ;;[SHL_u64_u64_2677_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u64_u64_2677_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u64_u64_2677_sample_start_ &-> (SHL_u64_u64_2677_Sample)
        SHL_u64_u64_2677_sample_completed_ <-& (SHL_u64_u64_2677_Sample)
        SHL_u64_u64_2677_sample_completed_ &-> ($null)
        SHL_u64_u64_2677_update_start_ &-> (SHL_u64_u64_2677_Update)
        SHL_u64_u64_2677_update_completed_ <-& (SHL_u64_u64_2677_Update)
        // Target expression
        // (as target) iNsTr_31
        // iNsTr_31
        // implicit reference
        // 		iNsTr_32 := (curr_quotientx_x01x_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 1057
        // Source expression
        // (curr_quotientx_x01x_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[SHL_u64_u64_2683_sample_start_] 
        $T[SHL_u64_u64_2683_sample_completed_] 
        $T[SHL_u64_u64_2683_update_start_] 
        $T[SHL_u64_u64_2683_update_completed_] 
        // curr_quotientx_x01x_xi
        $T[R_curr_quotientx_x01x_xi_2680_sample_start_] 
        $T[R_curr_quotientx_x01x_xi_2680_sample_completed_] 
        $T[R_curr_quotientx_x01x_xi_2680_update_start_] 
        $T[R_curr_quotientx_x01x_xi_2680_update_completed_] 
        // implicit reference
        R_curr_quotientx_x01x_xi_2680_sample_start_ <-& ($entry)
        R_curr_quotientx_x01x_xi_2680_sample_completed_ <-& (R_curr_quotientx_x01x_xi_2680_sample_start_)
        R_curr_quotientx_x01x_xi_2680_update_start_ <-& (R_curr_quotientx_x01x_xi_2680_sample_completed_)
        R_curr_quotientx_x01x_xi_2680_update_completed_ <-& (R_curr_quotientx_x01x_xi_2680_update_start_)
        SHL_u64_u64_2683_sample_start_ <-& (R_curr_quotientx_x01x_xi_2680_update_completed_)
        ;;[SHL_u64_u64_2683_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u64_u64_2683_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u64_u64_2683_sample_start_ &-> (SHL_u64_u64_2683_Sample)
        SHL_u64_u64_2683_sample_completed_ <-& (SHL_u64_u64_2683_Sample)
        SHL_u64_u64_2683_sample_completed_ &-> ($null)
        SHL_u64_u64_2683_update_start_ &-> (SHL_u64_u64_2683_Update)
        SHL_u64_u64_2683_update_completed_ <-& (SHL_u64_u64_2683_Update)
        // Target expression
        // (as target) iNsTr_32
        // iNsTr_32
        // implicit reference
        // 		iNsTr_33 := (iNsTr_31 < iNsTr_23)
        //  file prog.linked.opt.aa, line 1058
        // Source expression
        // (iNsTr_31 < iNsTr_23)
        $T[ULT_u64_u1_2688_sample_start_] 
        $T[ULT_u64_u1_2688_sample_completed_] 
        $T[ULT_u64_u1_2688_update_start_] 
        $T[ULT_u64_u1_2688_update_completed_] 
        // iNsTr_31
        $T[R_iNsTr_31_2686_sample_start_] 
        $T[R_iNsTr_31_2686_sample_completed_] 
        $T[R_iNsTr_31_2686_update_start_] 
        $T[R_iNsTr_31_2686_update_completed_] 
        // implicit reference
        R_iNsTr_31_2686_sample_start_ <-& (SHL_u64_u64_2677_update_completed_)
        R_iNsTr_31_2686_sample_completed_ <-& (R_iNsTr_31_2686_sample_start_)
        R_iNsTr_31_2686_update_start_ <-& (R_iNsTr_31_2686_sample_completed_)
        R_iNsTr_31_2686_update_completed_ <-& (R_iNsTr_31_2686_update_start_)
        // iNsTr_23
        $T[R_iNsTr_23_2687_sample_start_] 
        $T[R_iNsTr_23_2687_sample_completed_] 
        $T[R_iNsTr_23_2687_update_start_] 
        $T[R_iNsTr_23_2687_update_completed_] 
        // implicit reference
        R_iNsTr_23_2687_sample_start_ <-& ($entry)
        R_iNsTr_23_2687_sample_completed_ <-& (R_iNsTr_23_2687_sample_start_)
        R_iNsTr_23_2687_update_start_ <-& (R_iNsTr_23_2687_sample_completed_)
        R_iNsTr_23_2687_update_completed_ <-& (R_iNsTr_23_2687_update_start_)
        ULT_u64_u1_2688_sample_start_ <-& (R_iNsTr_31_2686_update_completed_)
        ULT_u64_u1_2688_sample_start_ <-& (R_iNsTr_23_2687_update_completed_)
        ;;[ULT_u64_u1_2688_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u64_u1_2688_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u64_u1_2688_sample_start_ &-> (ULT_u64_u1_2688_Sample)
        ULT_u64_u1_2688_sample_completed_ <-& (ULT_u64_u1_2688_Sample)
        ULT_u64_u1_2688_sample_completed_ &-> ($null)
        ULT_u64_u1_2688_update_start_ &-> (ULT_u64_u1_2688_Update)
        ULT_u64_u1_2688_update_completed_ <-& (ULT_u64_u1_2688_Update)
        // Target expression
        // (as target) iNsTr_33
        // iNsTr_33
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2678_to_assign_stmt_2689__entry__ |-> (assign_stmt_2678_to_assign_stmt_2689)
      assign_stmt_2678_to_assign_stmt_2689__exit__ <-| (assign_stmt_2678_to_assign_stmt_2689)
      // if-statement  
      //  file prog.linked.opt.aa, line 1059
      ;;[if_stmt_2690_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2690__entry__ |-> (if_stmt_2690_dead_link)
      if_stmt_2690__exit__ <-| (if_stmt_2690_dead_link)
      ;;[if_stmt_2690_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2690__entry__ |-> (if_stmt_2690_eval_test)
      $P [R_iNsTr_33_2691_place]
      R_iNsTr_33_2691_place <-| (if_stmt_2690_eval_test)
      ;;[if_stmt_2690_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2690_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_33_2691_place |-> (if_stmt_2690_if_link if_stmt_2690_else_link)
      $P [bbx_xnphx_xi_bbx_xnphx_xi]
      bbx_xnphx_xi_bbx_xnphx_xi <-| (if_stmt_2690_if_link)
      $P [bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit]
      bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit <-| (if_stmt_2690_else_link)
      ::[assign_stmt_2727_to_assign_stmt_2738] 
      {
        // 		iNsTr_27 := (curr_quotientx_x0x_xlcssax_xi + quotientx_x04x_xi)
        //  file prog.linked.opt.aa, line 1073
        // Source expression
        // (curr_quotientx_x0x_xlcssax_xi + quotientx_x04x_xi)
        $T[ADD_u64_u64_2726_sample_start_] 
        $T[ADD_u64_u64_2726_sample_completed_] 
        $T[ADD_u64_u64_2726_update_start_] 
        $T[ADD_u64_u64_2726_update_completed_] 
        // curr_quotientx_x0x_xlcssax_xi
        $T[R_curr_quotientx_x0x_xlcssax_xi_2724_sample_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xi_2724_sample_completed_] 
        $T[R_curr_quotientx_x0x_xlcssax_xi_2724_update_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xi_2724_update_completed_] 
        // implicit reference
        R_curr_quotientx_x0x_xlcssax_xi_2724_sample_start_ <-& ($entry)
        R_curr_quotientx_x0x_xlcssax_xi_2724_sample_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xi_2724_sample_start_)
        R_curr_quotientx_x0x_xlcssax_xi_2724_update_start_ <-& (R_curr_quotientx_x0x_xlcssax_xi_2724_sample_completed_)
        R_curr_quotientx_x0x_xlcssax_xi_2724_update_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xi_2724_update_start_)
        // quotientx_x04x_xi
        $T[R_quotientx_x04x_xi_2725_sample_start_] 
        $T[R_quotientx_x04x_xi_2725_sample_completed_] 
        $T[R_quotientx_x04x_xi_2725_update_start_] 
        $T[R_quotientx_x04x_xi_2725_update_completed_] 
        // implicit reference
        R_quotientx_x04x_xi_2725_sample_start_ <-& ($entry)
        R_quotientx_x04x_xi_2725_sample_completed_ <-& (R_quotientx_x04x_xi_2725_sample_start_)
        R_quotientx_x04x_xi_2725_update_start_ <-& (R_quotientx_x04x_xi_2725_sample_completed_)
        R_quotientx_x04x_xi_2725_update_completed_ <-& (R_quotientx_x04x_xi_2725_update_start_)
        ADD_u64_u64_2726_sample_start_ <-& (R_curr_quotientx_x0x_xlcssax_xi_2724_update_completed_)
        ADD_u64_u64_2726_sample_start_ <-& (R_quotientx_x04x_xi_2725_update_completed_)
        ;;[ADD_u64_u64_2726_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_2726_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_2726_sample_start_ &-> (ADD_u64_u64_2726_Sample)
        ADD_u64_u64_2726_sample_completed_ <-& (ADD_u64_u64_2726_Sample)
        ADD_u64_u64_2726_sample_completed_ &-> ($null)
        ADD_u64_u64_2726_update_start_ &-> (ADD_u64_u64_2726_Update)
        ADD_u64_u64_2726_update_completed_ <-& (ADD_u64_u64_2726_Update)
        // Target expression
        // (as target) iNsTr_27
        // iNsTr_27
        // implicit reference
        // 		iNsTr_28 := (xx_x05x_xi - shifted_divisorx_x0x_xlcssax_xi)
        //  file prog.linked.opt.aa, line 1074
        // Source expression
        // (xx_x05x_xi - shifted_divisorx_x0x_xlcssax_xi)
        $T[SUB_u64_u64_2731_sample_start_] 
        $T[SUB_u64_u64_2731_sample_completed_] 
        $T[SUB_u64_u64_2731_update_start_] 
        $T[SUB_u64_u64_2731_update_completed_] 
        // xx_x05x_xi
        $T[R_xx_x05x_xi_2729_sample_start_] 
        $T[R_xx_x05x_xi_2729_sample_completed_] 
        $T[R_xx_x05x_xi_2729_update_start_] 
        $T[R_xx_x05x_xi_2729_update_completed_] 
        // implicit reference
        R_xx_x05x_xi_2729_sample_start_ <-& ($entry)
        R_xx_x05x_xi_2729_sample_completed_ <-& (R_xx_x05x_xi_2729_sample_start_)
        R_xx_x05x_xi_2729_update_start_ <-& (R_xx_x05x_xi_2729_sample_completed_)
        R_xx_x05x_xi_2729_update_completed_ <-& (R_xx_x05x_xi_2729_update_start_)
        // shifted_divisorx_x0x_xlcssax_xi
        $T[R_shifted_divisorx_x0x_xlcssax_xi_2730_sample_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xi_2730_sample_completed_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xi_2730_update_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xi_2730_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x0x_xlcssax_xi_2730_sample_start_ <-& ($entry)
        R_shifted_divisorx_x0x_xlcssax_xi_2730_sample_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xi_2730_sample_start_)
        R_shifted_divisorx_x0x_xlcssax_xi_2730_update_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xi_2730_sample_completed_)
        R_shifted_divisorx_x0x_xlcssax_xi_2730_update_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xi_2730_update_start_)
        SUB_u64_u64_2731_sample_start_ <-& (R_xx_x05x_xi_2729_update_completed_)
        SUB_u64_u64_2731_sample_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xi_2730_update_completed_)
        ;;[SUB_u64_u64_2731_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u64_u64_2731_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u64_u64_2731_sample_start_ &-> (SUB_u64_u64_2731_Sample)
        SUB_u64_u64_2731_sample_completed_ <-& (SUB_u64_u64_2731_Sample)
        SUB_u64_u64_2731_sample_completed_ &-> ($null)
        SUB_u64_u64_2731_update_start_ &-> (SUB_u64_u64_2731_Update)
        SUB_u64_u64_2731_update_completed_ <-& (SUB_u64_u64_2731_Update)
        // Target expression
        // (as target) iNsTr_28
        // iNsTr_28
        // implicit reference
        // 		iNsTr_29 := (iNsTr_28 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
        //  file prog.linked.opt.aa, line 1075
        // Source expression
        // (iNsTr_28 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
        $T[ULT_u64_u1_2737_sample_start_] 
        $T[ULT_u64_u1_2737_sample_completed_] 
        $T[ULT_u64_u1_2737_update_start_] 
        $T[ULT_u64_u1_2737_update_completed_] 
        // iNsTr_28
        $T[R_iNsTr_28_2734_sample_start_] 
        $T[R_iNsTr_28_2734_sample_completed_] 
        $T[R_iNsTr_28_2734_update_start_] 
        $T[R_iNsTr_28_2734_update_completed_] 
        // implicit reference
        R_iNsTr_28_2734_sample_start_ <-& (SUB_u64_u64_2731_update_completed_)
        R_iNsTr_28_2734_sample_completed_ <-& (R_iNsTr_28_2734_sample_start_)
        R_iNsTr_28_2734_update_start_ <-& (R_iNsTr_28_2734_sample_completed_)
        R_iNsTr_28_2734_update_completed_ <-& (R_iNsTr_28_2734_update_start_)
        ULT_u64_u1_2737_sample_start_ <-& (R_iNsTr_28_2734_update_completed_)
        ;;[ULT_u64_u1_2737_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u64_u1_2737_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u64_u1_2737_sample_start_ &-> (ULT_u64_u1_2737_Sample)
        ULT_u64_u1_2737_sample_completed_ <-& (ULT_u64_u1_2737_Sample)
        ULT_u64_u1_2737_sample_completed_ &-> ($null)
        ULT_u64_u1_2737_update_start_ &-> (ULT_u64_u1_2737_Update)
        ULT_u64_u1_2737_update_completed_ <-& (ULT_u64_u1_2737_Update)
        // Target expression
        // (as target) iNsTr_29
        // iNsTr_29
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2727_to_assign_stmt_2738__entry__ |-> (assign_stmt_2727_to_assign_stmt_2738)
      assign_stmt_2727_to_assign_stmt_2738__exit__ <-| (assign_stmt_2727_to_assign_stmt_2738)
      // if-statement  
      //  file prog.linked.opt.aa, line 1076
      ;;[if_stmt_2739_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2739__entry__ |-> (if_stmt_2739_dead_link)
      if_stmt_2739__exit__ <-| (if_stmt_2739_dead_link)
      ;;[if_stmt_2739_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2739__entry__ |-> (if_stmt_2739_eval_test)
      $P [R_iNsTr_29_2740_place]
      R_iNsTr_29_2740_place <-| (if_stmt_2739_eval_test)
      ;;[if_stmt_2739_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2739_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_29_2740_place |-> (if_stmt_2739_if_link if_stmt_2739_else_link)
      $P [xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit]
      xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit <-| (if_stmt_2739_if_link)
      $P [xx_x_crit_edgex_xi_bbx_xnph6x_xi]
      xx_x_crit_edgex_xi_bbx_xnph6x_xi <-| (if_stmt_2739_else_link)
      ::[assign_stmt_2754] 
      {
        // 		extractx_xt := ($cast ($uint<32>) xx_xlcssa2 )
        //  file prog.linked.opt.aa, line 1084
        // Source expression
        // ($cast ($uint<32>) xx_xlcssa2 )
        $T[type_cast_2753_sample_start_] 
        $T[type_cast_2753_sample_completed_] 
        $T[type_cast_2753_update_start_] 
        $T[type_cast_2753_update_completed_] 
        // xx_xlcssa2
        $T[R_xx_xlcssa2_2752_sample_start_] 
        $T[R_xx_xlcssa2_2752_sample_completed_] 
        $T[R_xx_xlcssa2_2752_update_start_] 
        $T[R_xx_xlcssa2_2752_update_completed_] 
        // implicit reference
        R_xx_xlcssa2_2752_sample_start_ <-& ($entry)
        R_xx_xlcssa2_2752_sample_completed_ <-& (R_xx_xlcssa2_2752_sample_start_)
        R_xx_xlcssa2_2752_update_start_ <-& (R_xx_xlcssa2_2752_sample_completed_)
        R_xx_xlcssa2_2752_update_completed_ <-& (R_xx_xlcssa2_2752_update_start_)
        type_cast_2753_sample_start_ <-& (R_xx_xlcssa2_2752_update_completed_)
        ;;[type_cast_2753_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2753_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2753_sample_start_ &-> (type_cast_2753_Sample)
        type_cast_2753_sample_completed_ <-& (type_cast_2753_Sample)
        type_cast_2753_sample_completed_ &-> ($null)
        type_cast_2753_update_start_ &-> (type_cast_2753_Update)
        type_cast_2753_update_completed_ <-& (type_cast_2753_Update)
        // Target expression
        // (as target) extractx_xt
        // extractx_xt
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2754__entry__ |-> (assign_stmt_2754)
      assign_stmt_2754__exit__ <-| (assign_stmt_2754)
      ::[assign_stmt_2771_to_assign_stmt_2793] 
      {
        // 		->(iNsTr_4) := iNsTr_1
        //  file prog.linked.opt.aa, line 1089
        // Source expression
        // iNsTr_1
        $T[R_iNsTr_1_2770_sample_start_] 
        $T[R_iNsTr_1_2770_sample_completed_] 
        $T[R_iNsTr_1_2770_update_start_] 
        $T[R_iNsTr_1_2770_update_completed_] 
        // implicit reference
        R_iNsTr_1_2770_sample_start_ <-& ($entry)
        R_iNsTr_1_2770_sample_completed_ <-& (R_iNsTr_1_2770_sample_start_)
        R_iNsTr_1_2770_update_start_ <-& (R_iNsTr_1_2770_sample_completed_)
        R_iNsTr_1_2770_update_completed_ <-& (R_iNsTr_1_2770_update_start_)
        // Target expression
        // ->(iNsTr_4)
        $T[ptr_deref_2769_sample_start_] 
        $T[ptr_deref_2769_sample_completed_] 
        $T[ptr_deref_2769_update_start_] 
        $T[ptr_deref_2769_update_completed_] 
        $T[ptr_deref_2769_base_address_calculated] 
        // iNsTr_4
        $T[R_iNsTr_4_2768_sample_start_] 
        $T[R_iNsTr_4_2768_sample_completed_] 
        $T[R_iNsTr_4_2768_update_start_] 
        $T[R_iNsTr_4_2768_update_completed_] 
        // implicit reference
        R_iNsTr_4_2768_sample_start_ <-& ($entry)
        R_iNsTr_4_2768_sample_completed_ <-& (R_iNsTr_4_2768_sample_start_)
        R_iNsTr_4_2768_update_start_ <-& (R_iNsTr_4_2768_sample_completed_)
        R_iNsTr_4_2768_update_completed_ <-& (R_iNsTr_4_2768_update_start_)
        $T[ptr_deref_2769_word_address_calculated] 
        $T[ptr_deref_2769_root_address_calculated] 
        $T[ptr_deref_2769_base_address_resized] 
        ;;[ptr_deref_2769_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_2769_base_address_calculated &-> (ptr_deref_2769_base_addr_resize)
        ptr_deref_2769_base_address_resized <-& (ptr_deref_2769_base_addr_resize)
        ;;[ptr_deref_2769_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_2769_base_address_resized &-> (ptr_deref_2769_base_plus_offset)
        ptr_deref_2769_root_address_calculated <-& (ptr_deref_2769_base_plus_offset)
        ;;[ptr_deref_2769_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_2769_root_address_calculated &-> (ptr_deref_2769_word_addrgen)
        ptr_deref_2769_word_address_calculated <-& (ptr_deref_2769_word_addrgen)
        ;;[ptr_deref_2769_Sample] 
        {
          ;;[ptr_deref_2769_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_2769_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_2769_sample_start_ <-& (ptr_deref_2769_word_address_calculated)
        ptr_deref_2769_sample_start_ &-> (ptr_deref_2769_Sample)
        ptr_deref_2769_sample_completed_ <-& (ptr_deref_2769_Sample)
        ptr_deref_2769_sample_completed_ &-> ($null)
        ptr_deref_2769_update_start_ &-> (ptr_deref_2769_Update)
        ptr_deref_2769_update_completed_ <-& (ptr_deref_2769_Update)
        ptr_deref_2769_base_address_calculated <-& (R_iNsTr_4_2768_update_completed_)
        ptr_deref_2769_sample_start_ <-& (ptr_deref_2769_base_address_calculated)
        ptr_deref_2769_sample_start_ <-& (R_iNsTr_1_2770_update_completed_)
        // 		iNsTr_12 := (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 1090
        // Source expression
        // (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_2776_sample_start_] 
        $T[ADD_u32_u32_2776_sample_completed_] 
        $T[ADD_u32_u32_2776_update_start_] 
        $T[ADD_u32_u32_2776_update_completed_] 
        // iNsTr_2
        $T[R_iNsTr_2_2773_sample_start_] 
        $T[R_iNsTr_2_2773_sample_completed_] 
        $T[R_iNsTr_2_2773_update_start_] 
        $T[R_iNsTr_2_2773_update_completed_] 
        // implicit reference
        R_iNsTr_2_2773_sample_start_ <-& ($entry)
        R_iNsTr_2_2773_sample_completed_ <-& (R_iNsTr_2_2773_sample_start_)
        R_iNsTr_2_2773_update_start_ <-& (R_iNsTr_2_2773_sample_completed_)
        R_iNsTr_2_2773_update_completed_ <-& (R_iNsTr_2_2773_update_start_)
        ADD_u32_u32_2776_sample_start_ <-& (R_iNsTr_2_2773_update_completed_)
        ;;[ADD_u32_u32_2776_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_2776_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_2776_sample_start_ &-> (ADD_u32_u32_2776_Sample)
        ADD_u32_u32_2776_sample_completed_ <-& (ADD_u32_u32_2776_Sample)
        ADD_u32_u32_2776_sample_completed_ &-> ($null)
        ADD_u32_u32_2776_update_start_ &-> (ADD_u32_u32_2776_Update)
        ADD_u32_u32_2776_update_completed_ <-& (ADD_u32_u32_2776_Update)
        // Target expression
        // (as target) iNsTr_12
        // iNsTr_12
        // implicit reference
        // 		iNsTr_13 := (iNsTr_12 == ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
        //  file prog.linked.opt.aa, line 1091
        // Source expression
        // (iNsTr_12 == ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
        $T[EQ_u32_u1_2782_sample_start_] 
        $T[EQ_u32_u1_2782_sample_completed_] 
        $T[EQ_u32_u1_2782_update_start_] 
        $T[EQ_u32_u1_2782_update_completed_] 
        // iNsTr_12
        $T[R_iNsTr_12_2779_sample_start_] 
        $T[R_iNsTr_12_2779_sample_completed_] 
        $T[R_iNsTr_12_2779_update_start_] 
        $T[R_iNsTr_12_2779_update_completed_] 
        // implicit reference
        R_iNsTr_12_2779_sample_start_ <-& (ADD_u32_u32_2776_update_completed_)
        R_iNsTr_12_2779_sample_completed_ <-& (R_iNsTr_12_2779_sample_start_)
        R_iNsTr_12_2779_update_start_ <-& (R_iNsTr_12_2779_sample_completed_)
        R_iNsTr_12_2779_update_completed_ <-& (R_iNsTr_12_2779_update_start_)
        EQ_u32_u1_2782_sample_start_ <-& (R_iNsTr_12_2779_update_completed_)
        ;;[EQ_u32_u1_2782_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_2782_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_2782_sample_start_ &-> (EQ_u32_u1_2782_Sample)
        EQ_u32_u1_2782_sample_completed_ <-& (EQ_u32_u1_2782_Sample)
        EQ_u32_u1_2782_sample_completed_ &-> ($null)
        EQ_u32_u1_2782_update_start_ &-> (EQ_u32_u1_2782_Update)
        EQ_u32_u1_2782_update_completed_ <-& (EQ_u32_u1_2782_Update)
        // Target expression
        // (as target) iNsTr_13
        // iNsTr_13
        // implicit reference
        // 		iNsTr_14 := ( $mux iNsTr_13 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_12 ) 
        //  file prog.linked.opt.aa, line 1092
        // Source expression
        // ( $mux iNsTr_13 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_12 ) 
        $T[MUX_2789_sample_start_] 
        $T[MUX_2789_sample_completed_] 
        $T[MUX_2789_update_start_] 
        $T[MUX_2789_update_completed_] 
        // iNsTr_13
        $T[R_iNsTr_13_2785_sample_start_] 
        $T[R_iNsTr_13_2785_sample_completed_] 
        $T[R_iNsTr_13_2785_update_start_] 
        $T[R_iNsTr_13_2785_update_completed_] 
        // implicit reference
        R_iNsTr_13_2785_sample_start_ <-& (EQ_u32_u1_2782_update_completed_)
        R_iNsTr_13_2785_sample_completed_ <-& (R_iNsTr_13_2785_sample_start_)
        R_iNsTr_13_2785_update_start_ <-& (R_iNsTr_13_2785_sample_completed_)
        R_iNsTr_13_2785_update_completed_ <-& (R_iNsTr_13_2785_update_start_)
        // iNsTr_12
        $T[R_iNsTr_12_2788_sample_start_] 
        $T[R_iNsTr_12_2788_sample_completed_] 
        $T[R_iNsTr_12_2788_update_start_] 
        $T[R_iNsTr_12_2788_update_completed_] 
        // implicit reference
        R_iNsTr_12_2788_sample_start_ <-& (ADD_u32_u32_2776_update_completed_)
        R_iNsTr_12_2788_sample_completed_ <-& (R_iNsTr_12_2788_sample_start_)
        R_iNsTr_12_2788_update_start_ <-& (R_iNsTr_12_2788_sample_completed_)
        R_iNsTr_12_2788_update_completed_ <-& (R_iNsTr_12_2788_update_start_)
        MUX_2789_sample_start_ <-& (R_iNsTr_13_2785_update_completed_)
        MUX_2789_sample_start_ <-& (R_iNsTr_12_2788_update_completed_)
        ;;[MUX_2789_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_2789_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_2789_sample_start_ &-> (MUX_2789_start)
        MUX_2789_sample_completed_ <-& (MUX_2789_start)
        MUX_2789_update_start_ &-> (MUX_2789_complete)
        MUX_2789_update_completed_ <-& (MUX_2789_complete)
        MUX_2789_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_14
        // iNsTr_14
        // implicit reference
        // 		WINbuff_ptr := iNsTr_14
        //  file prog.linked.opt.aa, line 1093
        // Source expression
        // iNsTr_14
        $T[R_iNsTr_14_2792_sample_start_] 
        $T[R_iNsTr_14_2792_sample_completed_] 
        $T[R_iNsTr_14_2792_update_start_] 
        $T[R_iNsTr_14_2792_update_completed_] 
        // implicit reference
        R_iNsTr_14_2792_sample_start_ <-& (MUX_2789_update_completed_)
        R_iNsTr_14_2792_sample_completed_ <-& (R_iNsTr_14_2792_sample_start_)
        R_iNsTr_14_2792_update_start_ <-& (R_iNsTr_14_2792_sample_completed_)
        R_iNsTr_14_2792_update_completed_ <-& (R_iNsTr_14_2792_update_start_)
        // Target expression
        // (as target) WINbuff_ptr
        $T[STORE_WINbuff_ptr_2791_sample_start_] 
        $T[STORE_WINbuff_ptr_2791_sample_completed_] 
        $T[STORE_WINbuff_ptr_2791_update_start_] 
        $T[STORE_WINbuff_ptr_2791_update_completed_] 
        // WINbuff_ptr
        $T[STORE_WINbuff_ptr_2791_word_address_calculated] 
        $T[STORE_WINbuff_ptr_2791_root_address_calculated] 
        STORE_WINbuff_ptr_2791_word_address_calculated <-& (STORE_WINbuff_ptr_2791_root_address_calculated)
        ;;[STORE_WINbuff_ptr_2791_Sample] 
        {
          ;;[STORE_WINbuff_ptr_2791_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_WINbuff_ptr_2791_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_WINbuff_ptr_2791_sample_start_ <-& (STORE_WINbuff_ptr_2791_word_address_calculated)
        STORE_WINbuff_ptr_2791_sample_start_ &-> (STORE_WINbuff_ptr_2791_Sample)
        STORE_WINbuff_ptr_2791_sample_completed_ <-& (STORE_WINbuff_ptr_2791_Sample)
        STORE_WINbuff_ptr_2791_sample_completed_ &-> ($null)
        STORE_WINbuff_ptr_2791_update_start_ &-> (STORE_WINbuff_ptr_2791_Update)
        STORE_WINbuff_ptr_2791_update_completed_ <-& (STORE_WINbuff_ptr_2791_Update)
        STORE_WINbuff_ptr_2791_sample_start_ <-& (R_iNsTr_14_2792_update_completed_)
        // load-store dependencies..
      }
      assign_stmt_2771_to_assign_stmt_2793__entry__ |-> (assign_stmt_2771_to_assign_stmt_2793)
      assign_stmt_2771_to_assign_stmt_2793__exit__ <-| (assign_stmt_2771_to_assign_stmt_2793)
      ::[assign_stmt_2796] 
      {
        // 		filt_output_pipe := outputx_x0
        //  file prog.linked.opt.aa, line 1094
        // Source expression
        // outputx_x0
        $T[R_outputx_x0_2795_sample_start_] 
        $T[R_outputx_x0_2795_sample_completed_] 
        $T[R_outputx_x0_2795_update_start_] 
        $T[R_outputx_x0_2795_update_completed_] 
        // implicit reference
        R_outputx_x0_2795_sample_start_ <-& ($entry)
        R_outputx_x0_2795_sample_completed_ <-& (R_outputx_x0_2795_sample_start_)
        R_outputx_x0_2795_update_start_ <-& (R_outputx_x0_2795_sample_completed_)
        R_outputx_x0_2795_update_completed_ <-& (R_outputx_x0_2795_update_start_)
        // Target expression
        // (as target) filt_output_pipe
        $T[WPIPE_filt_output_pipe_2794_sample_start_] 
        $T[WPIPE_filt_output_pipe_2794_sample_completed_] 
        $T[WPIPE_filt_output_pipe_2794_update_start_] 
        $T[WPIPE_filt_output_pipe_2794_update_completed_] 
        ;;[WPIPE_filt_output_pipe_2794_Sample] 
        {
          // pipe write sample-start filt_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_filt_output_pipe_2794_Update] 
        {
          // pipe write update (complete) filt_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_filt_output_pipe_2794_sample_start_ &-> (WPIPE_filt_output_pipe_2794_Sample)
        WPIPE_filt_output_pipe_2794_sample_completed_ <-& (WPIPE_filt_output_pipe_2794_Sample)
        WPIPE_filt_output_pipe_2794_sample_completed_ &-> ($null)
        WPIPE_filt_output_pipe_2794_update_start_ &-> (WPIPE_filt_output_pipe_2794_Update)
        WPIPE_filt_output_pipe_2794_update_completed_ <-& (WPIPE_filt_output_pipe_2794_Update)
        WPIPE_filt_output_pipe_2794_sample_start_ <-& (R_outputx_x0_2795_update_completed_)
        // barrier: 		filt_output_pipe := outputx_x0
        // load-store dependencies..
        // pipe read/write dependencies for pipe filt_output_pipe
      }
      assign_stmt_2796__entry__ |-> (assign_stmt_2796)
      assign_stmt_2796__exit__ <-| (assign_stmt_2796)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1026
      ;;[merge_stmt_2602_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2602__entry__ |-> (merge_stmt_2602_dead_link)
      merge_stmt_2602__exit__ <-| (merge_stmt_2602_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1026  --------------------------
      ||[bb_0_bb_1_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_1 |-> (bb_0_bb_1_PhiReq)
      $P [merge_stmt_2602_PhiReqMerge] 
      merge_stmt_2602_PhiReqMerge <-| ( bb_0_bb_1_PhiReq )
      ||[merge_stmt_2602_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2602_PhiReqMerge |-> (merge_stmt_2602_PhiAck)
      merge_stmt_2602__exit__  <-| (merge_stmt_2602_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1026  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1034
      ;;[merge_stmt_2615_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2615__entry__ |-> (merge_stmt_2615_dead_link)
      merge_stmt_2615__exit__ <-| (merge_stmt_2615_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1034  --------------------------
      ||[bb_1_bbx_xnph6x_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_1_bbx_xnph6x_xix_xpreheader |-> (bb_1_bbx_xnph6x_xix_xpreheader_PhiReq)
      $P [merge_stmt_2615_PhiReqMerge] 
      merge_stmt_2615_PhiReqMerge <-| ( bb_1_bbx_xnph6x_xix_xpreheader_PhiReq )
      ||[merge_stmt_2615_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2615_PhiReqMerge |-> (merge_stmt_2615_PhiAck)
      merge_stmt_2615__exit__  <-| (merge_stmt_2615_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1034  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1038
      //---------------------   merge statement  file prog.linked.opt.aa, line 1038  --------------------------
      ||[bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi_PhiReq] 
      {
        ;;[phi_stmt_2623] 
        {
          ||[phi_stmt_2623_sources] 
          {
            // sources for 			$phi xx_x05x_xi := 			  ($cast ($uint<64>) iNsTr_28 ) $on xx_x_crit_edgex_xi_bbx_xnph6x_xi			  ($cast ($uint<64>) iNsTr_21 ) $on bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_28 )
            ;;[type_cast_2626] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<64>) iNsTr_21 )
            ;;[type_cast_2628] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2623_req] 
        }
        ;;[phi_stmt_2629] 
        {
          ||[phi_stmt_2629_sources] 
          {
            // sources for 			$phi quotientx_x04x_xi := 			  ($cast ($uint<64>) iNsTr_27 ) $on xx_x_crit_edgex_xi_bbx_xnph6x_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_27 )
            ;;[type_cast_2632] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2629_req] 
        }
      }
      bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi |-> (bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi_PhiReq)
      ||[xx_x_crit_edgex_xi_bbx_xnph6x_xi_PhiReq] 
      {
        ;;[phi_stmt_2623] 
        {
          ||[phi_stmt_2623_sources] 
          {
            // sources for 			$phi xx_x05x_xi := 			  ($cast ($uint<64>) iNsTr_28 ) $on xx_x_crit_edgex_xi_bbx_xnph6x_xi			  ($cast ($uint<64>) iNsTr_21 ) $on bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_28 )
            ;;[type_cast_2626] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<64>) iNsTr_21 )
            ;;[type_cast_2628] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2623_req] 
        }
        ;;[phi_stmt_2629] 
        {
          ||[phi_stmt_2629_sources] 
          {
            // sources for 			$phi quotientx_x04x_xi := 			  ($cast ($uint<64>) iNsTr_27 ) $on xx_x_crit_edgex_xi_bbx_xnph6x_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_27 )
            ;;[type_cast_2632] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2629_req] 
        }
      }
      xx_x_crit_edgex_xi_bbx_xnph6x_xi |-> (xx_x_crit_edgex_xi_bbx_xnph6x_xi_PhiReq)
      $P [merge_stmt_2622_PhiReqMerge] 
      merge_stmt_2622_PhiReqMerge <-| ( bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi_PhiReq  xx_x_crit_edgex_xi_bbx_xnph6x_xi_PhiReq )
      ||[merge_stmt_2622_PhiAck] 
      {
        $T [phi_stmt_2623_ack] 
        $T [phi_stmt_2629_ack] 
      }
      merge_stmt_2622_PhiReqMerge |-> (merge_stmt_2622_PhiAck)
      merge_stmt_2622__exit__  <-| (merge_stmt_2622_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1038  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1049
      ;;[merge_stmt_2655_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2655__entry__ |-> (merge_stmt_2655_dead_link)
      merge_stmt_2655__exit__ <-| (merge_stmt_2655_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1049  --------------------------
      ||[bbx_xnph6x_xi_bbx_xnphx_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph6x_xi_bbx_xnphx_xix_xpreheader |-> (bbx_xnph6x_xi_bbx_xnphx_xix_xpreheader_PhiReq)
      $P [merge_stmt_2655_PhiReqMerge] 
      merge_stmt_2655_PhiReqMerge <-| ( bbx_xnph6x_xi_bbx_xnphx_xix_xpreheader_PhiReq )
      ||[merge_stmt_2655_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2655_PhiReqMerge |-> (merge_stmt_2655_PhiAck)
      merge_stmt_2655__exit__  <-| (merge_stmt_2655_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1049  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1052
      //---------------------   merge statement  file prog.linked.opt.aa, line 1052  --------------------------
      ||[bbx_xnphx_xi_bbx_xnphx_xi_PhiReq] 
      {
        ;;[phi_stmt_2658] 
        {
          ||[phi_stmt_2658_sources] 
          {
            // sources for 			$phi shifted_divisorx_x02x_xi := 			  ($cast ($uint<64>) iNsTr_31 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_31 )
            ;;[type_cast_2661] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2658_req] 
        }
        ;;[phi_stmt_2665] 
        {
          ||[phi_stmt_2665_sources] 
          {
            // sources for 			$phi curr_quotientx_x01x_xi := 			  ($cast ($uint<64>) iNsTr_32 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_32 )
            ;;[type_cast_2668] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2665_req] 
        }
      }
      bbx_xnphx_xi_bbx_xnphx_xi |-> (bbx_xnphx_xi_bbx_xnphx_xi_PhiReq)
      ||[bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq] 
      {
        ;;[phi_stmt_2658] 
        {
          ||[phi_stmt_2658_sources] 
          {
            // sources for 			$phi shifted_divisorx_x02x_xi := 			  ($cast ($uint<64>) iNsTr_31 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_31 )
            ;;[type_cast_2661] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2658_req] 
        }
        ;;[phi_stmt_2665] 
        {
          ||[phi_stmt_2665_sources] 
          {
            // sources for 			$phi curr_quotientx_x01x_xi := 			  ($cast ($uint<64>) iNsTr_32 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_32 )
            ;;[type_cast_2668] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2665_req] 
        }
      }
      bbx_xnphx_xix_xpreheader_bbx_xnphx_xi |-> (bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq)
      $P [merge_stmt_2657_PhiReqMerge] 
      merge_stmt_2657_PhiReqMerge <-| ( bbx_xnphx_xi_bbx_xnphx_xi_PhiReq  bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq )
      ||[merge_stmt_2657_PhiAck] 
      {
        $T [phi_stmt_2658_ack] 
        $T [phi_stmt_2665_ack] 
      }
      merge_stmt_2657_PhiReqMerge |-> (merge_stmt_2657_PhiAck)
      merge_stmt_2657__exit__  <-| (merge_stmt_2657_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1052  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1064
      ;;[merge_stmt_2696_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2696__entry__ |-> (merge_stmt_2696_dead_link)
      merge_stmt_2696__exit__ <-| (merge_stmt_2696_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1064  --------------------------
      ||[bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_2697] 
        {
          ||[phi_stmt_2697_sources] 
          {
            // sources for 			$phi xx_xlcssa1 := 			  ($cast ($uint<64>) iNsTr_32 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_32 )
            ;;[type_cast_2700] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2697_req] 
        }
        ;;[phi_stmt_2701] 
        {
          ||[phi_stmt_2701_sources] 
          {
            // sources for 			$phi xx_xlcssa := 			  ($cast ($uint<64>) iNsTr_31 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_31 )
            ;;[type_cast_2704] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2701_req] 
        }
      }
      bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit |-> (bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq)
      $P [merge_stmt_2696_PhiReqMerge] 
      merge_stmt_2696_PhiReqMerge <-| ( bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq )
      ||[merge_stmt_2696_PhiAck] 
      {
        $T [phi_stmt_2697_ack] 
        $T [phi_stmt_2701_ack] 
      }
      merge_stmt_2696_PhiReqMerge |-> (merge_stmt_2696_PhiAck)
      merge_stmt_2696__exit__  <-| (merge_stmt_2696_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1064  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1069
      //---------------------   merge statement  file prog.linked.opt.aa, line 1069  --------------------------
      ||[bbx_xnph6x_xi_xx_x_crit_edgex_xi_PhiReq] 
      {
        ;;[phi_stmt_2708] 
        {
          ||[phi_stmt_2708_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ) ) $on bbx_xnph6x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<64>
            // ($cast ($uint<64>) xx_xlcssa )
            ;;[type_cast_2714] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2708_req] 
        }
        ;;[phi_stmt_2715] 
        {
          ||[phi_stmt_2715_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<64>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<64>
            // ($cast ($uint<64>) xx_xlcssa1 )
            ;;[type_cast_2721] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2715_req] 
        }
      }
      bbx_xnph6x_xi_xx_x_crit_edgex_xi |-> (bbx_xnph6x_xi_xx_x_crit_edgex_xi_PhiReq)
      ||[xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq] 
      {
        ;;[phi_stmt_2708] 
        {
          ||[phi_stmt_2708_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ) ) $on bbx_xnph6x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<64>
            // ($cast ($uint<64>) xx_xlcssa )
            ;;[type_cast_2714] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2708_req] 
        }
        ;;[phi_stmt_2715] 
        {
          ||[phi_stmt_2715_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<64>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<64>
            // ($cast ($uint<64>) xx_xlcssa1 )
            ;;[type_cast_2721] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2715_req] 
        }
      }
      xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi |-> (xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq)
      $P [merge_stmt_2707_PhiReqMerge] 
      merge_stmt_2707_PhiReqMerge <-| ( bbx_xnph6x_xi_xx_x_crit_edgex_xi_PhiReq  xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq )
      ||[merge_stmt_2707_PhiAck] 
      {
        $T [phi_stmt_2708_ack] 
        $T [phi_stmt_2715_ack] 
      }
      merge_stmt_2707_PhiReqMerge |-> (merge_stmt_2707_PhiAck)
      merge_stmt_2707__exit__  <-| (merge_stmt_2707_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1069  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1081
      ;;[merge_stmt_2745_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2745__entry__ |-> (merge_stmt_2745_dead_link)
      merge_stmt_2745__exit__ <-| (merge_stmt_2745_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1081  --------------------------
      ||[xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_2746] 
        {
          ||[phi_stmt_2746_sources] 
          {
            // sources for 			$phi xx_xlcssa2 := 			  ($cast ($uint<64>) iNsTr_27 ) $on xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit // type of target is $uint<64>
            // ($cast ($uint<64>) iNsTr_27 )
            ;;[type_cast_2749] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2746_req] 
        }
      }
      xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit |-> (xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit_PhiReq)
      $P [merge_stmt_2745_PhiReqMerge] 
      merge_stmt_2745_PhiReqMerge <-| ( xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit_PhiReq )
      ||[merge_stmt_2745_PhiAck] 
      {
        $T [phi_stmt_2746_ack] 
      }
      merge_stmt_2745_PhiReqMerge |-> (merge_stmt_2745_PhiAck)
      merge_stmt_2745__exit__  <-| (merge_stmt_2745_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1081  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1086
      //---------------------   merge statement  file prog.linked.opt.aa, line 1086  --------------------------
      ||[bb_0_divideUnsignedx_xexit_PhiReq] 
      {
        ;;[phi_stmt_2757] 
        {
          ||[phi_stmt_2757_sources] 
          {
            // sources for 			$phi outputx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000111110100000000  ) ) $on bb_0_divideUnsignedx_xexit			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_1_divideUnsignedx_xexit			  ($cast ($uint<32>) extractx_xt ) $on divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit // type of target is $uint<32>
            // ($cast ($uint<32>) extractx_xt )
            ;;[type_cast_2766] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2757_req] 
        }
      }
      bb_0_divideUnsignedx_xexit |-> (bb_0_divideUnsignedx_xexit_PhiReq)
      ||[bb_1_divideUnsignedx_xexit_PhiReq] 
      {
        ;;[phi_stmt_2757] 
        {
          ||[phi_stmt_2757_sources] 
          {
            // sources for 			$phi outputx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000111110100000000  ) ) $on bb_0_divideUnsignedx_xexit			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_1_divideUnsignedx_xexit			  ($cast ($uint<32>) extractx_xt ) $on divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit // type of target is $uint<32>
            // ($cast ($uint<32>) extractx_xt )
            ;;[type_cast_2766] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2757_req] 
        }
      }
      bb_1_divideUnsignedx_xexit |-> (bb_1_divideUnsignedx_xexit_PhiReq)
      ||[divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit_PhiReq] 
      {
        ;;[phi_stmt_2757] 
        {
          ||[phi_stmt_2757_sources] 
          {
            // sources for 			$phi outputx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000111110100000000  ) ) $on bb_0_divideUnsignedx_xexit			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_1_divideUnsignedx_xexit			  ($cast ($uint<32>) extractx_xt ) $on divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit // type of target is $uint<32>
            // ($cast ($uint<32>) extractx_xt )
            ;;[type_cast_2766] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2757_req] 
        }
      }
      divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit |-> (divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit_PhiReq)
      $P [merge_stmt_2756_PhiReqMerge] 
      merge_stmt_2756_PhiReqMerge <-| ( bb_0_divideUnsignedx_xexit_PhiReq  bb_1_divideUnsignedx_xexit_PhiReq  divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit_PhiReq )
      ||[merge_stmt_2756_PhiAck] 
      {
        $T [phi_stmt_2757_ack] 
      }
      merge_stmt_2756_PhiReqMerge |-> (merge_stmt_2756_PhiAck)
      merge_stmt_2756__exit__  <-| (merge_stmt_2756_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1086  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1096
      //---------------------   merge statement  file prog.linked.opt.aa, line 1096  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_2798_PhiReqMerge] 
      merge_stmt_2798_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_2798_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2798_PhiReqMerge |-> (merge_stmt_2798_PhiAck)
      merge_stmt_2798__exit__  <-| (merge_stmt_2798_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1096  --------------------------
      assign_stmt_2559__entry__ <-| (branch_block_stmt_2556__entry__)
      assign_stmt_2562_to_assign_stmt_2595__entry__ <-| (assign_stmt_2559__exit__)
      if_stmt_2596__entry__ <-| (assign_stmt_2562_to_assign_stmt_2595__exit__)
      merge_stmt_2602__entry__ <-| (if_stmt_2596__exit__)
      assign_stmt_2608__entry__ <-| (merge_stmt_2602__exit__)
      if_stmt_2609__entry__ <-| (assign_stmt_2608__exit__)
      merge_stmt_2615__entry__ <-| (if_stmt_2609__exit__)
      assign_stmt_2620__entry__ <-| (merge_stmt_2615__exit__)
      bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi <-| (assign_stmt_2620__exit__)
      assign_stmt_2642_to_assign_stmt_2648__entry__ <-| (merge_stmt_2622__exit__)
      if_stmt_2649__entry__ <-| (assign_stmt_2642_to_assign_stmt_2648__exit__)
      merge_stmt_2655__entry__ <-| (if_stmt_2649__exit__)
      bbx_xnphx_xix_xpreheader_bbx_xnphx_xi <-| (merge_stmt_2655__exit__)
      assign_stmt_2678_to_assign_stmt_2689__entry__ <-| (merge_stmt_2657__exit__)
      if_stmt_2690__entry__ <-| (assign_stmt_2678_to_assign_stmt_2689__exit__)
      merge_stmt_2696__entry__ <-| (if_stmt_2690__exit__)
      xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi <-| (merge_stmt_2696__exit__)
      assign_stmt_2727_to_assign_stmt_2738__entry__ <-| (merge_stmt_2707__exit__)
      if_stmt_2739__entry__ <-| (assign_stmt_2727_to_assign_stmt_2738__exit__)
      merge_stmt_2745__entry__ <-| (if_stmt_2739__exit__)
      assign_stmt_2754__entry__ <-| (merge_stmt_2745__exit__)
      divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit <-| (assign_stmt_2754__exit__)
      assign_stmt_2771_to_assign_stmt_2793__entry__ <-| (merge_stmt_2756__exit__)
      assign_stmt_2796__entry__ <-| (assign_stmt_2771_to_assign_stmt_2793__exit__)
      return__ <-| (assign_stmt_2796__exit__)
      merge_stmt_2798__exit__ |-> (branch_block_stmt_2556__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %mvWin%body%
    //  file prog.linked.opt.aa, line 1026
    // constant-object-declarations for block %mvWin%body%
    //  file prog.linked.opt.aa, line 1034
    // constant-object-declarations for block %mvWin%body%
    //  file prog.linked.opt.aa, line 1038
    // constant-object-declarations for block %mvWin%body%
    //  file prog.linked.opt.aa, line 1049
    // constant-object-declarations for block %mvWin%body%
    //  file prog.linked.opt.aa, line 1052
    // constant-object-declarations for block %mvWin%body%
    //  file prog.linked.opt.aa, line 1064
    // constant-object-declarations for block %mvWin%body%
    //  file prog.linked.opt.aa, line 1069
    // constant-object-declarations for block %mvWin%body%
    //  file prog.linked.opt.aa, line 1081
    // constant-object-declarations for block %mvWin%body%
    //  file prog.linked.opt.aa, line 1086
    // constant-object-declarations for block %mvWin%body%
    //  file prog.linked.opt.aa, line 1096
    // constant-object-declarations for block %mvWin%body
    //  file prog.linked.opt.aa, line 1010
    // constant-object-declarations for block %mvWin
    //  file prog.linked.opt.aa, line 1005
    // constant-declarations for block %mvWin%body
    //  file prog.linked.opt.aa, line 1010
    // WINbuff_ptr
    $constant $W[LOAD_WINbuff_ptr_2561_word_address_0] : $pointer<memory_space_18> := _b0
    // WINsum
    $constant $W[LOAD_WINsum_2564_word_address_0] : $pointer<memory_space_19> := _b0
    // @(WINbuff[iNsTr_2])
    $constant $W[array_obj_ref_2568_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_2568_offset_scale_factor_0] : $int<5> := _b00001// 1
    // ->(iNsTr_4)
    $constant $W[ptr_deref_2573_word_offset_0] : $int<5> := _b00000// 0
    // WINsum
    $constant $W[STORE_WINsum_2585_word_address_0] : $pointer<memory_space_19> := _b0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000001111101000000000000  ) )
    $constant $W[type_cast_2593_wire_constant] : $int<32> := _b00000000000001111101000000000000// 512000
    // if-statement  
    //  file prog.linked.opt.aa, line 1021
    // constant-declarations for block %mvWin%body%
    //  file prog.linked.opt.aa, line 1026
    // ($bitcast ($uint<32>) _b00000000000000000000000000010000  )
    $constant $W[type_cast_2606_wire_constant] : $int<32> := _b00000000000000000000000000010000// 16
    // if-statement  
    //  file prog.linked.opt.aa, line 1029
    // constant-declarations for block %mvWin%body%
    //  file prog.linked.opt.aa, line 1034
    // constant-declarations for block %mvWin%body%
    //  file prog.linked.opt.aa, line 1038
    // constant-declarations for phi:  			$phi xx_x05x_xi := 			  ($cast ($uint<64>) iNsTr_28 ) $on xx_x_crit_edgex_xi_bbx_xnph6x_xi			  ($cast ($uint<64>) iNsTr_21 ) $on bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1039
    // constant-declarations for phi:  			$phi quotientx_x04x_xi := 			  ($cast ($uint<64>) iNsTr_27 ) $on xx_x_crit_edgex_xi_bbx_xnph6x_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1040
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_2635_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_2640_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )
    $constant $W[type_cast_2646_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000010000// 16
    // if-statement  
    //  file prog.linked.opt.aa, line 1044
    // constant-declarations for block %mvWin%body%
    //  file prog.linked.opt.aa, line 1049
    // constant-declarations for block %mvWin%body%
    //  file prog.linked.opt.aa, line 1052
    // constant-declarations for phi:  			$phi shifted_divisorx_x02x_xi := 			  ($cast ($uint<64>) iNsTr_31 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1053
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ) )
    $constant $W[type_cast_2664_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000010000// 16
    // constant-declarations for phi:  			$phi curr_quotientx_x01x_xi := 			  ($cast ($uint<64>) iNsTr_32 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1054
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )
    $constant $W[type_cast_2671_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_2676_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_2682_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 1059
    // constant-declarations for block %mvWin%body%
    //  file prog.linked.opt.aa, line 1064
    // constant-declarations for phi:  			$phi xx_xlcssa1 := 			  ($cast ($uint<64>) iNsTr_32 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1065
    // constant-declarations for phi:  			$phi xx_xlcssa := 			  ($cast ($uint<64>) iNsTr_31 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1066
    // constant-declarations for block %mvWin%body%
    //  file prog.linked.opt.aa, line 1069
    // constant-declarations for phi:  			$phi shifted_divisorx_x0x_xlcssax_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ) ) $on bbx_xnph6x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1070
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ) )
    $constant $W[type_cast_2712_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000010000// 16
    // constant-declarations for phi:  			$phi curr_quotientx_x0x_xlcssax_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<64>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1071
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )
    $constant $W[type_cast_2719_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )
    $constant $W[type_cast_2736_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000010000// 16
    // if-statement  
    //  file prog.linked.opt.aa, line 1076
    // constant-declarations for block %mvWin%body%
    //  file prog.linked.opt.aa, line 1081
    // constant-declarations for phi:  			$phi xx_xlcssa2 := 			  ($cast ($uint<64>) iNsTr_27 ) $on xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1082
    // constant-declarations for block %mvWin%body%
    //  file prog.linked.opt.aa, line 1086
    // constant-declarations for phi:  			$phi outputx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000111110100000000  ) ) $on bb_0_divideUnsignedx_xexit			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_1_divideUnsignedx_xexit			  ($cast ($uint<32>) extractx_xt ) $on divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1087
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000111110100000000  ) )
    $constant $W[type_cast_2761_wire_constant] : $int<32> := _b00000000000000000111110100000000// 32000
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_2764_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ->(iNsTr_4)
    $constant $W[ptr_deref_2769_word_offset_0] : $int<5> := _b00000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_2775_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000010000  )
    $constant $W[type_cast_2781_wire_constant] : $int<32> := _b00000000000000000000000000010000// 16
    // ( $mux iNsTr_13 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_12 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2787_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // WINbuff_ptr
    $constant $W[STORE_WINbuff_ptr_2791_word_address_0] : $pointer<memory_space_18> := _b0
    // constant-declarations for block %mvWin%body%
    //  file prog.linked.opt.aa, line 1096
    // block %mvWin%body
    //  file prog.linked.opt.aa, line 1010
    // 		iNsTr_1 := DERIVout_pipe
    //  file prog.linked.opt.aa, line 1012
    // iNsTr_1
    $W[iNsTr_1_2559] : $int<32>
    // 		iNsTr_2 := WINbuff_ptr
    //  file prog.linked.opt.aa, line 1013
    // WINbuff_ptr
    $W[LOAD_WINbuff_ptr_2561_data_0] : $int<32>
    // iNsTr_2
    $W[iNsTr_2_2562] : $int<32>
    // 		iNsTr_3 := WINsum
    //  file prog.linked.opt.aa, line 1014
    // WINsum
    $W[LOAD_WINsum_2564_data_0] : $int<32>
    // iNsTr_3
    $W[iNsTr_3_2565] : $int<32>
    // 		iNsTr_4 := @(WINbuff[iNsTr_2])
    //  file prog.linked.opt.aa, line 1015
    // @(WINbuff[iNsTr_2])
    $intermediate $W[R_iNsTr_2_2567_resized] : $int<5>
    $intermediate $W[R_iNsTr_2_2567_scaled] : $int<5>
    $intermediate $W[array_obj_ref_2568_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_2568_root_address] : $int<5>
    // iNsTr_4
    $W[iNsTr_4_2570] : $int<32>
    // 		iNsTr_5 := ->(iNsTr_4)
    //  file prog.linked.opt.aa, line 1016
    // ->(iNsTr_4)
    $intermediate $W[ptr_deref_2573_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_2573_root_address] : $int<5>
    $W[ptr_deref_2573_word_address_0] : $pointer<memory_space_17>
    $W[ptr_deref_2573_data_0] : $int<32>
    // iNsTr_5
    $W[iNsTr_5_2574] : $int<32>
    // 		iNsTr_6 := (iNsTr_3 + iNsTr_1)
    //  file prog.linked.opt.aa, line 1017
    // iNsTr_6
    $W[iNsTr_6_2579] : $int<32>
    // 		iNsTr_7 := (iNsTr_6 - iNsTr_5)
    //  file prog.linked.opt.aa, line 1018
    // iNsTr_7
    $W[iNsTr_7_2584] : $int<32>
    // 		WINsum := iNsTr_7
    //  file prog.linked.opt.aa, line 1019
    // WINsum
    $constant $W[STORE_WINsum_2585_word_address_0] : $pointer<memory_space_19> := _b0
    $W[STORE_WINsum_2585_data_0] : $int<32>
    // 		iNsTr_9 := (($bitcast ($int<32>) iNsTr_7 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000001111101000000000000  ) ))
    //  file prog.linked.opt.aa, line 1020
    // ($bitcast ($int<32>) iNsTr_7 )
    $intermediate $W[type_cast_2590_wire] : $int<32>
    // iNsTr_9
    $W[iNsTr_9_2595] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 1021
    // 		iNsTr_19 := (iNsTr_7 < ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
    //  file prog.linked.opt.aa, line 1028
    // iNsTr_19
    $W[iNsTr_19_2608] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 1029
    // 		iNsTr_21 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_7 ) )
    //  file prog.linked.opt.aa, line 1036
    // ($cast ($int<64>) iNsTr_7 )
    $intermediate $W[type_cast_2618_wire] : $int<64>
    // iNsTr_21
    $W[iNsTr_21_2620] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 1038
    // 			$phi xx_x05x_xi := 			  ($cast ($uint<64>) iNsTr_28 ) $on xx_x_crit_edgex_xi_bbx_xnph6x_xi			  ($cast ($uint<64>) iNsTr_21 ) $on bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1039
    // ($cast ($uint<64>) iNsTr_28 )
    $intermediate $W[type_cast_2626_wire] : $int<64>
    // ($cast ($uint<64>) iNsTr_21 )
    $intermediate $W[type_cast_2628_wire] : $int<64>
    // xx_x05x_xi
    $W[xx_x05x_xi_2623] : $int<64>
    // 			$phi quotientx_x04x_xi := 			  ($cast ($uint<64>) iNsTr_27 ) $on xx_x_crit_edgex_xi_bbx_xnph6x_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1040
    // ($cast ($uint<64>) iNsTr_27 )
    $intermediate $W[type_cast_2632_wire] : $int<64>
    // quotientx_x04x_xi
    $W[quotientx_x04x_xi_2629] : $int<64>
    // 		iNsTr_23 := (xx_x05x_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1042
    // iNsTr_23
    $W[iNsTr_23_2642] : $int<64>
    // 		iNsTr_24 := (iNsTr_23 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
    //  file prog.linked.opt.aa, line 1043
    // iNsTr_24
    $W[iNsTr_24_2648] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 1044
    // merge-statement  
    //  file prog.linked.opt.aa, line 1052
    // 			$phi shifted_divisorx_x02x_xi := 			  ($cast ($uint<64>) iNsTr_31 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1053
    // ($cast ($uint<64>) iNsTr_31 )
    $intermediate $W[type_cast_2661_wire] : $int<64>
    // shifted_divisorx_x02x_xi
    $W[shifted_divisorx_x02x_xi_2658] : $int<64>
    // 			$phi curr_quotientx_x01x_xi := 			  ($cast ($uint<64>) iNsTr_32 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1054
    // ($cast ($uint<64>) iNsTr_32 )
    $intermediate $W[type_cast_2668_wire] : $int<64>
    // curr_quotientx_x01x_xi
    $W[curr_quotientx_x01x_xi_2665] : $int<64>
    // 		iNsTr_31 := (shifted_divisorx_x02x_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1056
    // iNsTr_31
    $W[iNsTr_31_2678] : $int<64>
    // 		iNsTr_32 := (curr_quotientx_x01x_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1057
    // iNsTr_32
    $W[iNsTr_32_2684] : $int<64>
    // 		iNsTr_33 := (iNsTr_31 < iNsTr_23)
    //  file prog.linked.opt.aa, line 1058
    // iNsTr_33
    $W[iNsTr_33_2689] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 1059
    // merge-statement  
    //  file prog.linked.opt.aa, line 1064
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<64>) iNsTr_32 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1065
    // ($cast ($uint<64>) iNsTr_32 )
    $intermediate $W[type_cast_2700_wire] : $int<64>
    // xx_xlcssa1
    $W[xx_xlcssa1_2697] : $int<64>
    // 			$phi xx_xlcssa := 			  ($cast ($uint<64>) iNsTr_31 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1066
    // ($cast ($uint<64>) iNsTr_31 )
    $intermediate $W[type_cast_2704_wire] : $int<64>
    // xx_xlcssa
    $W[xx_xlcssa_2701] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 1069
    // 			$phi shifted_divisorx_x0x_xlcssax_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ) ) $on bbx_xnph6x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1070
    // ($cast ($uint<64>) xx_xlcssa )
    $intermediate $W[type_cast_2714_wire] : $int<64>
    // shifted_divisorx_x0x_xlcssax_xi
    $W[shifted_divisorx_x0x_xlcssax_xi_2708] : $int<64>
    // 			$phi curr_quotientx_x0x_xlcssax_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<64>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1071
    // ($cast ($uint<64>) xx_xlcssa1 )
    $intermediate $W[type_cast_2721_wire] : $int<64>
    // curr_quotientx_x0x_xlcssax_xi
    $W[curr_quotientx_x0x_xlcssax_xi_2715] : $int<64>
    // 		iNsTr_27 := (curr_quotientx_x0x_xlcssax_xi + quotientx_x04x_xi)
    //  file prog.linked.opt.aa, line 1073
    // iNsTr_27
    $W[iNsTr_27_2727] : $int<64>
    // 		iNsTr_28 := (xx_x05x_xi - shifted_divisorx_x0x_xlcssax_xi)
    //  file prog.linked.opt.aa, line 1074
    // iNsTr_28
    $W[iNsTr_28_2732] : $int<64>
    // 		iNsTr_29 := (iNsTr_28 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
    //  file prog.linked.opt.aa, line 1075
    // iNsTr_29
    $W[iNsTr_29_2738] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 1076
    // merge-statement  
    //  file prog.linked.opt.aa, line 1081
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<64>) iNsTr_27 ) $on xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1082
    // ($cast ($uint<64>) iNsTr_27 )
    $intermediate $W[type_cast_2749_wire] : $int<64>
    // xx_xlcssa2
    $W[xx_xlcssa2_2746] : $int<64>
    // 		extractx_xt := ($cast ($uint<32>) xx_xlcssa2 )
    //  file prog.linked.opt.aa, line 1084
    // extractx_xt
    $W[extractx_xt_2754] : $int<32>
    // merge-statement  
    //  file prog.linked.opt.aa, line 1086
    // 			$phi outputx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000111110100000000  ) ) $on bb_0_divideUnsignedx_xexit			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_1_divideUnsignedx_xexit			  ($cast ($uint<32>) extractx_xt ) $on divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1087
    // ($cast ($uint<32>) extractx_xt )
    $intermediate $W[type_cast_2766_wire] : $int<32>
    // outputx_x0
    $W[outputx_x0_2757] : $int<32>
    // 		->(iNsTr_4) := iNsTr_1
    //  file prog.linked.opt.aa, line 1089
    // ->(iNsTr_4)
    $intermediate $W[ptr_deref_2769_wire] : $int<32>
    $intermediate $W[ptr_deref_2769_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_2769_root_address] : $int<5>
    $W[ptr_deref_2769_word_address_0] : $pointer<memory_space_17>
    $W[ptr_deref_2769_data_0] : $int<32>
    // 		iNsTr_12 := (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1090
    // iNsTr_12
    $W[iNsTr_12_2777] : $int<32>
    // 		iNsTr_13 := (iNsTr_12 == ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
    //  file prog.linked.opt.aa, line 1091
    // iNsTr_13
    $W[iNsTr_13_2783] : $int<1>
    // 		iNsTr_14 := ( $mux iNsTr_13 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_12 ) 
    //  file prog.linked.opt.aa, line 1092
    // iNsTr_14
    $W[iNsTr_14_2790] : $int<32>
    // 		WINbuff_ptr := iNsTr_14
    //  file prog.linked.opt.aa, line 1093
    // WINbuff_ptr
    $constant $W[STORE_WINbuff_ptr_2791_word_address_0] : $pointer<memory_space_18> := _b0
    $W[STORE_WINbuff_ptr_2791_data_0] : $int<32>
    // 		filt_output_pipe := outputx_x0
    //  file prog.linked.opt.aa, line 1094
    // filt_output_pipe
    // datapath-instances for block %mvWin%body
    //  file prog.linked.opt.aa, line 1010
    // 		iNsTr_1 := DERIVout_pipe
    //  file prog.linked.opt.aa, line 1012
    // DERIVout_pipe
    $ioport $in [RPIPE_DERIVout_pipe_2558_inst] (DERIVout_pipe) (iNsTr_1_2559) 
    // 		iNsTr_2 := WINbuff_ptr
    //  file prog.linked.opt.aa, line 1013
    // WINbuff_ptr
    $load [LOAD_WINbuff_ptr_2561_load_0] $from memory_space_18 (LOAD_WINbuff_ptr_2561_word_address_0) (LOAD_WINbuff_ptr_2561_data_0) 
    $delay LOAD_WINbuff_ptr_2561_load_0 1
    &/ [LOAD_WINbuff_ptr_2561_gather_scatter] (LOAD_WINbuff_ptr_2561_data_0) (iNsTr_2_2562) 
    // 		iNsTr_3 := WINsum
    //  file prog.linked.opt.aa, line 1014
    // WINsum
    $load [LOAD_WINsum_2564_load_0] $from memory_space_19 (LOAD_WINsum_2564_word_address_0) (LOAD_WINsum_2564_data_0) 
    $delay LOAD_WINsum_2564_load_0 1
    &/ [LOAD_WINsum_2564_gather_scatter] (LOAD_WINsum_2564_data_0) (iNsTr_3_2565) 
    // 		iNsTr_4 := @(WINbuff[iNsTr_2])
    //  file prog.linked.opt.aa, line 1015
    &/ [array_obj_ref_2568_index_0_resize] (iNsTr_2_2562) (R_iNsTr_2_2567_resized) 
    &/ [array_obj_ref_2568_index_0_rename] (R_iNsTr_2_2567_resized) (R_iNsTr_2_2567_scaled) 
    &/ [array_obj_ref_2568_index_offset] (R_iNsTr_2_2567_scaled) (array_obj_ref_2568_final_offset) 
    &/ [array_obj_ref_2568_root_address_inst] (array_obj_ref_2568_final_offset) (array_obj_ref_2568_root_address) 
    # := [addr_of_2569_final_reg] (array_obj_ref_2568_root_address) (iNsTr_4_2570) 
    // 		iNsTr_5 := ->(iNsTr_4)
    //  file prog.linked.opt.aa, line 1016
    // ->(iNsTr_4)
    &/ [ptr_deref_2573_base_resize] (iNsTr_4_2570) (ptr_deref_2573_resized_base_address) 
    &/ [ptr_deref_2573_root_address_inst] (ptr_deref_2573_resized_base_address) (ptr_deref_2573_root_address) 
    &/ [ptr_deref_2573_addr_0] (ptr_deref_2573_root_address) (ptr_deref_2573_word_address_0) 
    $load [ptr_deref_2573_load_0] $from memory_space_17 (ptr_deref_2573_word_address_0) (ptr_deref_2573_data_0) 
    $delay ptr_deref_2573_load_0 2
    &/ [ptr_deref_2573_gather_scatter] (ptr_deref_2573_data_0) (iNsTr_5_2574) 
    // 		iNsTr_6 := (iNsTr_3 + iNsTr_1)
    //  file prog.linked.opt.aa, line 1017
    // (iNsTr_3 + iNsTr_1)
    +[ADD_u32_u32_2578_inst] (iNsTr_3_2565 iNsTr_1_2559) (iNsTr_6_2579) 
    $delay ADD_u32_u32_2578_inst 1
    // 		iNsTr_7 := (iNsTr_6 - iNsTr_5)
    //  file prog.linked.opt.aa, line 1018
    // (iNsTr_6 - iNsTr_5)
    -[SUB_u32_u32_2583_inst] (iNsTr_6_2579 iNsTr_5_2574) (iNsTr_7_2584) 
    $delay SUB_u32_u32_2583_inst 1
    // 		WINsum := iNsTr_7
    //  file prog.linked.opt.aa, line 1019
    // WINsum
    $store [STORE_WINsum_2585_store_0] $to memory_space_19 (STORE_WINsum_2585_word_address_0 STORE_WINsum_2585_data_0) 
    $delay STORE_WINsum_2585_store_0 1
    &/ [STORE_WINsum_2585_gather_scatter] (iNsTr_7_2584) (STORE_WINsum_2585_data_0) 
    // 		iNsTr_9 := (($bitcast ($int<32>) iNsTr_7 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000001111101000000000000  ) ))
    //  file prog.linked.opt.aa, line 1020
    // ($bitcast ($int<32>) iNsTr_7 )
    $S:=$U [type_cast_2590_inst] (iNsTr_7_2584) (type_cast_2590_wire)   $flowthrough
    $delay type_cast_2590_inst 0
    // (($bitcast ($int<32>) iNsTr_7 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000001111101000000000000  ) ))
    $S>$S[SGT_i32_u1_2594_inst] (type_cast_2590_wire type_cast_2593_wire_constant) (iNsTr_9_2595) 
    $delay SGT_i32_u1_2594_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1021
    ==0? [if_stmt_2596_branch] (iNsTr_9_2595)
    // 		iNsTr_19 := (iNsTr_7 < ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
    //  file prog.linked.opt.aa, line 1028
    // (iNsTr_7 < ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
    <[ULT_u32_u1_2607_inst] (iNsTr_7_2584 type_cast_2606_wire_constant) (iNsTr_19_2608) 
    $delay ULT_u32_u1_2607_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1029
    ==0? [if_stmt_2609_branch] (iNsTr_19_2608)
    // 		iNsTr_21 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_7 ) )
    //  file prog.linked.opt.aa, line 1036
    // ($cast ($int<64>) iNsTr_7 )
    $S:=$U [type_cast_2618_inst] (iNsTr_7_2584) (type_cast_2618_wire)  
    $delay type_cast_2618_inst 1
    // ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_7 ) )
    # := [type_cast_2619_inst] (type_cast_2618_wire) (iNsTr_21_2620) 
    $delay type_cast_2619_inst 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1038
    // 			$phi xx_x05x_xi := 			  ($cast ($uint<64>) iNsTr_28 ) $on xx_x_crit_edgex_xi_bbx_xnph6x_xi			  ($cast ($uint<64>) iNsTr_21 ) $on bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1039
    // ($cast ($uint<64>) iNsTr_28 )
    # := [type_cast_2626_inst] (iNsTr_28_2732) (type_cast_2626_wire) 
    $delay type_cast_2626_inst 1
    // ($cast ($uint<64>) iNsTr_21 )
    # := [type_cast_2628_inst] (iNsTr_21_2620) (type_cast_2628_wire) 
    $delay type_cast_2628_inst 1
    $phi [phi_stmt_2623] (type_cast_2626_wire type_cast_2628_wire) ( xx_x05x_xi_2623 )
    // 			$phi quotientx_x04x_xi := 			  ($cast ($uint<64>) iNsTr_27 ) $on xx_x_crit_edgex_xi_bbx_xnph6x_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1040
    // ($cast ($uint<64>) iNsTr_27 )
    # := [type_cast_2632_inst] (iNsTr_27_2727) (type_cast_2632_wire) 
    $delay type_cast_2632_inst 1
    $phi [phi_stmt_2629] (type_cast_2632_wire type_cast_2635_wire_constant) ( quotientx_x04x_xi_2629 )
    // 		iNsTr_23 := (xx_x05x_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1042
    // (xx_x05x_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    >>[LSHR_u64_u64_2641_inst] (xx_x05x_xi_2623 type_cast_2640_wire_constant) (iNsTr_23_2642) 
    $delay LSHR_u64_u64_2641_inst 1
    // 		iNsTr_24 := (iNsTr_23 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
    //  file prog.linked.opt.aa, line 1043
    // (iNsTr_23 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
    >[UGT_u64_u1_2647_inst] (iNsTr_23_2642 type_cast_2646_wire_constant) (iNsTr_24_2648) 
    $delay UGT_u64_u1_2647_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1044
    ==0? [if_stmt_2649_branch] (iNsTr_24_2648)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1052
    // 			$phi shifted_divisorx_x02x_xi := 			  ($cast ($uint<64>) iNsTr_31 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1053
    // ($cast ($uint<64>) iNsTr_31 )
    # := [type_cast_2661_inst] (iNsTr_31_2678) (type_cast_2661_wire) 
    $delay type_cast_2661_inst 1
    $phi [phi_stmt_2658] (type_cast_2661_wire type_cast_2664_wire_constant) ( shifted_divisorx_x02x_xi_2658 )
    // 			$phi curr_quotientx_x01x_xi := 			  ($cast ($uint<64>) iNsTr_32 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1054
    // ($cast ($uint<64>) iNsTr_32 )
    # := [type_cast_2668_inst] (iNsTr_32_2684) (type_cast_2668_wire) 
    $delay type_cast_2668_inst 1
    $phi [phi_stmt_2665] (type_cast_2668_wire type_cast_2671_wire_constant) ( curr_quotientx_x01x_xi_2665 )
    // 		iNsTr_31 := (shifted_divisorx_x02x_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1056
    // (shifted_divisorx_x02x_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    <<[SHL_u64_u64_2677_inst] (shifted_divisorx_x02x_xi_2658 type_cast_2676_wire_constant) (iNsTr_31_2678) 
    $delay SHL_u64_u64_2677_inst 1
    // 		iNsTr_32 := (curr_quotientx_x01x_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1057
    // (curr_quotientx_x01x_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    <<[SHL_u64_u64_2683_inst] (curr_quotientx_x01x_xi_2665 type_cast_2682_wire_constant) (iNsTr_32_2684) 
    $delay SHL_u64_u64_2683_inst 1
    // 		iNsTr_33 := (iNsTr_31 < iNsTr_23)
    //  file prog.linked.opt.aa, line 1058
    // (iNsTr_31 < iNsTr_23)
    <[ULT_u64_u1_2688_inst] (iNsTr_31_2678 iNsTr_23_2642) (iNsTr_33_2689) 
    $delay ULT_u64_u1_2688_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1059
    ==0? [if_stmt_2690_branch] (iNsTr_33_2689)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1064
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<64>) iNsTr_32 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1065
    // ($cast ($uint<64>) iNsTr_32 )
    # := [type_cast_2700_inst] (iNsTr_32_2684) (type_cast_2700_wire) 
    $delay type_cast_2700_inst 1
    $phi [phi_stmt_2697] (type_cast_2700_wire) ( xx_xlcssa1_2697 )
    // 			$phi xx_xlcssa := 			  ($cast ($uint<64>) iNsTr_31 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1066
    // ($cast ($uint<64>) iNsTr_31 )
    # := [type_cast_2704_inst] (iNsTr_31_2678) (type_cast_2704_wire) 
    $delay type_cast_2704_inst 1
    $phi [phi_stmt_2701] (type_cast_2704_wire) ( xx_xlcssa_2701 )
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1069
    // 			$phi shifted_divisorx_x0x_xlcssax_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ) ) $on bbx_xnph6x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<64>) xx_xlcssa ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1070
    // ($cast ($uint<64>) xx_xlcssa )
    # := [type_cast_2714_inst] (xx_xlcssa_2701) (type_cast_2714_wire) 
    $delay type_cast_2714_inst 1
    $phi [phi_stmt_2708] (type_cast_2712_wire_constant type_cast_2714_wire) ( shifted_divisorx_x0x_xlcssax_xi_2708 )
    // 			$phi curr_quotientx_x0x_xlcssax_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on bbx_xnph6x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<64>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1071
    // ($cast ($uint<64>) xx_xlcssa1 )
    # := [type_cast_2721_inst] (xx_xlcssa1_2697) (type_cast_2721_wire) 
    $delay type_cast_2721_inst 1
    $phi [phi_stmt_2715] (type_cast_2719_wire_constant type_cast_2721_wire) ( curr_quotientx_x0x_xlcssax_xi_2715 )
    // 		iNsTr_27 := (curr_quotientx_x0x_xlcssax_xi + quotientx_x04x_xi)
    //  file prog.linked.opt.aa, line 1073
    // (curr_quotientx_x0x_xlcssax_xi + quotientx_x04x_xi)
    +[ADD_u64_u64_2726_inst] (curr_quotientx_x0x_xlcssax_xi_2715 quotientx_x04x_xi_2629) (iNsTr_27_2727) 
    $delay ADD_u64_u64_2726_inst 1
    // 		iNsTr_28 := (xx_x05x_xi - shifted_divisorx_x0x_xlcssax_xi)
    //  file prog.linked.opt.aa, line 1074
    // (xx_x05x_xi - shifted_divisorx_x0x_xlcssax_xi)
    -[SUB_u64_u64_2731_inst] (xx_x05x_xi_2623 shifted_divisorx_x0x_xlcssax_xi_2708) (iNsTr_28_2732) 
    $delay SUB_u64_u64_2731_inst 1
    // 		iNsTr_29 := (iNsTr_28 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
    //  file prog.linked.opt.aa, line 1075
    // (iNsTr_28 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
    <[ULT_u64_u1_2737_inst] (iNsTr_28_2732 type_cast_2736_wire_constant) (iNsTr_29_2738) 
    $delay ULT_u64_u1_2737_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1076
    ==0? [if_stmt_2739_branch] (iNsTr_29_2738)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1081
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<64>) iNsTr_27 ) $on xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1082
    // ($cast ($uint<64>) iNsTr_27 )
    # := [type_cast_2749_inst] (iNsTr_27_2727) (type_cast_2749_wire) 
    $delay type_cast_2749_inst 1
    $phi [phi_stmt_2746] (type_cast_2749_wire) ( xx_xlcssa2_2746 )
    // 		extractx_xt := ($cast ($uint<32>) xx_xlcssa2 )
    //  file prog.linked.opt.aa, line 1084
    // ($cast ($uint<32>) xx_xlcssa2 )
    # := [type_cast_2753_inst] (xx_xlcssa2_2746) (extractx_xt_2754) 
    $delay type_cast_2753_inst 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1086
    // 			$phi outputx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000111110100000000  ) ) $on bb_0_divideUnsignedx_xexit			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_1_divideUnsignedx_xexit			  ($cast ($uint<32>) extractx_xt ) $on divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1087
    // ($cast ($uint<32>) extractx_xt )
    # := [type_cast_2766_inst] (extractx_xt_2754) (type_cast_2766_wire) 
    $delay type_cast_2766_inst 1
    $phi [phi_stmt_2757] (type_cast_2761_wire_constant type_cast_2764_wire_constant type_cast_2766_wire) ( outputx_x0_2757 )
    // 		->(iNsTr_4) := iNsTr_1
    //  file prog.linked.opt.aa, line 1089
    // ->(iNsTr_4)
    &/ [ptr_deref_2769_base_resize] (iNsTr_4_2570) (ptr_deref_2769_resized_base_address) 
    &/ [ptr_deref_2769_root_address_inst] (ptr_deref_2769_resized_base_address) (ptr_deref_2769_root_address) 
    &/ [ptr_deref_2769_addr_0] (ptr_deref_2769_root_address) (ptr_deref_2769_word_address_0) 
    $store [ptr_deref_2769_store_0] $to memory_space_17 (ptr_deref_2769_word_address_0 ptr_deref_2769_data_0) 
    $delay ptr_deref_2769_store_0 2
    &/ [ptr_deref_2769_gather_scatter] (iNsTr_1_2559) (ptr_deref_2769_data_0) 
    // 		iNsTr_12 := (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1090
    // (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_2776_inst] (iNsTr_2_2562 type_cast_2775_wire_constant) (iNsTr_12_2777) 
    $delay ADD_u32_u32_2776_inst 1
    // 		iNsTr_13 := (iNsTr_12 == ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
    //  file prog.linked.opt.aa, line 1091
    // (iNsTr_12 == ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
    ==[EQ_u32_u1_2782_inst] (iNsTr_12_2777 type_cast_2781_wire_constant) (iNsTr_13_2783) 
    $delay EQ_u32_u1_2782_inst 1
    // 		iNsTr_14 := ( $mux iNsTr_13 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_12 ) 
    //  file prog.linked.opt.aa, line 1092
    // ( $mux iNsTr_13 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_12 ) 
    ? [MUX_2789_inst] (iNsTr_13_2783 type_cast_2787_wire_constant iNsTr_12_2777) (iNsTr_14_2790) 
    // 		WINbuff_ptr := iNsTr_14
    //  file prog.linked.opt.aa, line 1093
    // WINbuff_ptr
    $store [STORE_WINbuff_ptr_2791_store_0] $to memory_space_18 (STORE_WINbuff_ptr_2791_word_address_0 STORE_WINbuff_ptr_2791_data_0) 
    $delay STORE_WINbuff_ptr_2791_store_0 1
    &/ [STORE_WINbuff_ptr_2791_gather_scatter] (iNsTr_14_2790) (STORE_WINbuff_ptr_2791_data_0) 
    // 		filt_output_pipe := outputx_x0
    //  file prog.linked.opt.aa, line 1094
    // filt_output_pipe
    $ioport $out [WPIPE_filt_output_pipe_2794_inst]  (outputx_x0_2757) (filt_output_pipe) 
    $buffering $in WPIPE_filt_output_pipe_2794_inst outputx_x0_2757 1
  }
  // end data-path
  // 		iNsTr_1 := DERIVout_pipe
  //  file prog.linked.opt.aa, line 1012
  // DERIVout_pipe
  RPIPE_DERIVout_pipe_2558_inst <=> (branch_block_stmt_2556/assign_stmt_2559/RPIPE_DERIVout_pipe_2558_Sample/rr branch_block_stmt_2556/assign_stmt_2559/RPIPE_DERIVout_pipe_2558_Update/cr) (branch_block_stmt_2556/assign_stmt_2559/RPIPE_DERIVout_pipe_2558_Sample/ra branch_block_stmt_2556/assign_stmt_2559/RPIPE_DERIVout_pipe_2558_Update/ca)
  // 		iNsTr_2 := WINbuff_ptr
  //  file prog.linked.opt.aa, line 1013
  // WINbuff_ptr
  LOAD_WINbuff_ptr_2561_gather_scatter <=> (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/LOAD_WINbuff_ptr_2561_Update/LOAD_WINbuff_ptr_2561_Merge/merge_req) (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/LOAD_WINbuff_ptr_2561_Update/LOAD_WINbuff_ptr_2561_Merge/merge_ack)
  LOAD_WINbuff_ptr_2561_load_0 <=> (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/LOAD_WINbuff_ptr_2561_Sample/word_access_start/word_0/rr branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/LOAD_WINbuff_ptr_2561_Update/word_access_complete/word_0/cr) (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/LOAD_WINbuff_ptr_2561_Sample/word_access_start/word_0/ra branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/LOAD_WINbuff_ptr_2561_Update/word_access_complete/word_0/ca)
  // 		iNsTr_3 := WINsum
  //  file prog.linked.opt.aa, line 1014
  // WINsum
  LOAD_WINsum_2564_gather_scatter <=> (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/LOAD_WINsum_2564_Update/LOAD_WINsum_2564_Merge/merge_req) (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/LOAD_WINsum_2564_Update/LOAD_WINsum_2564_Merge/merge_ack)
  LOAD_WINsum_2564_load_0 <=> (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/LOAD_WINsum_2564_Sample/word_access_start/word_0/rr branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/LOAD_WINsum_2564_Update/word_access_complete/word_0/cr) (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/LOAD_WINsum_2564_Sample/word_access_start/word_0/ra branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/LOAD_WINsum_2564_Update/word_access_complete/word_0/ca)
  // 		iNsTr_4 := @(WINbuff[iNsTr_2])
  //  file prog.linked.opt.aa, line 1015
  array_obj_ref_2568_index_0_resize <=> (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/array_obj_ref_2568_index_resize_0/index_resize_req) (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/array_obj_ref_2568_index_resize_0/index_resize_ack)
  array_obj_ref_2568_index_0_rename <=> (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/array_obj_ref_2568_index_scale_0/scale_rename_req) (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/array_obj_ref_2568_index_scale_0/scale_rename_ack)
  array_obj_ref_2568_index_offset <=> (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/array_obj_ref_2568_final_index_sum_regn/req) (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/array_obj_ref_2568_final_index_sum_regn/ack)
  array_obj_ref_2568_root_address_inst <=> (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/array_obj_ref_2568_base_plus_offset/sum_rename_req) (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/array_obj_ref_2568_base_plus_offset/sum_rename_ack)
  addr_of_2569_final_reg <=> (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/addr_of_2569_request/req branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/addr_of_2569_complete/req) (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/addr_of_2569_request/ack branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/addr_of_2569_complete/ack)
  // 		iNsTr_5 := ->(iNsTr_4)
  //  file prog.linked.opt.aa, line 1016
  ptr_deref_2573_base_resize <=> (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/ptr_deref_2573_base_addr_resize/base_resize_req) (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/ptr_deref_2573_base_addr_resize/base_resize_ack)
  ptr_deref_2573_root_address_inst <=> (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/ptr_deref_2573_base_plus_offset/sum_rename_req) (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/ptr_deref_2573_base_plus_offset/sum_rename_ack)
  ptr_deref_2573_addr_0 <=> (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/ptr_deref_2573_word_addrgen/root_register_req) (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/ptr_deref_2573_word_addrgen/root_register_ack)
  ptr_deref_2573_gather_scatter <=> (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/ptr_deref_2573_Update/ptr_deref_2573_Merge/merge_req) (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/ptr_deref_2573_Update/ptr_deref_2573_Merge/merge_ack)
  ptr_deref_2573_load_0 <=> (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/ptr_deref_2573_Sample/word_access_start/word_0/rr branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/ptr_deref_2573_Update/word_access_complete/word_0/cr) (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/ptr_deref_2573_Sample/word_access_start/word_0/ra branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/ptr_deref_2573_Update/word_access_complete/word_0/ca)
  // 		iNsTr_6 := (iNsTr_3 + iNsTr_1)
  //  file prog.linked.opt.aa, line 1017
  // (iNsTr_3 + iNsTr_1)
  ADD_u32_u32_2578_inst <=> (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/ADD_u32_u32_2578_Sample/rr branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/ADD_u32_u32_2578_Update/cr) (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/ADD_u32_u32_2578_Sample/ra branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/ADD_u32_u32_2578_Update/ca)
  // 		iNsTr_7 := (iNsTr_6 - iNsTr_5)
  //  file prog.linked.opt.aa, line 1018
  // (iNsTr_6 - iNsTr_5)
  SUB_u32_u32_2583_inst <=> (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/SUB_u32_u32_2583_Sample/rr branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/SUB_u32_u32_2583_Update/cr) (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/SUB_u32_u32_2583_Sample/ra branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/SUB_u32_u32_2583_Update/ca)
  // 		WINsum := iNsTr_7
  //  file prog.linked.opt.aa, line 1019
  // WINsum
  STORE_WINsum_2585_gather_scatter <=> (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/STORE_WINsum_2585_Sample/STORE_WINsum_2585_Split/split_req) (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/STORE_WINsum_2585_Sample/STORE_WINsum_2585_Split/split_ack)
  STORE_WINsum_2585_store_0 <=> (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/STORE_WINsum_2585_Sample/word_access_start/word_0/rr branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/STORE_WINsum_2585_Update/word_access_complete/word_0/cr) (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/STORE_WINsum_2585_Sample/word_access_start/word_0/ra branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/STORE_WINsum_2585_Update/word_access_complete/word_0/ca)
  // 		iNsTr_9 := (($bitcast ($int<32>) iNsTr_7 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000001111101000000000000  ) ))
  //  file prog.linked.opt.aa, line 1020
  // (($bitcast ($int<32>) iNsTr_7 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000001111101000000000000  ) ))
  // ($bitcast ($int<32>) iNsTr_7 )
  type_cast_2590_inst <=> (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/type_cast_2590_Sample/rr branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/type_cast_2590_Update/cr) (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/type_cast_2590_Sample/ra branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/type_cast_2590_Update/ca)
  SGT_i32_u1_2594_inst <=> (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/SGT_i32_u1_2594_Sample/rr branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/SGT_i32_u1_2594_Update/cr) (branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/SGT_i32_u1_2594_Sample/ra branch_block_stmt_2556/assign_stmt_2562_to_assign_stmt_2595/SGT_i32_u1_2594_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1021
  if_stmt_2596_branch <=> (branch_block_stmt_2556/if_stmt_2596_eval_test/branch_req) (branch_block_stmt_2556/if_stmt_2596_else_link/else_choice_transition branch_block_stmt_2556/if_stmt_2596_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1026
  // 		iNsTr_19 := (iNsTr_7 < ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
  //  file prog.linked.opt.aa, line 1028
  // (iNsTr_7 < ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
  ULT_u32_u1_2607_inst <=> (branch_block_stmt_2556/assign_stmt_2608/ULT_u32_u1_2607_Sample/rr branch_block_stmt_2556/assign_stmt_2608/ULT_u32_u1_2607_Update/cr) (branch_block_stmt_2556/assign_stmt_2608/ULT_u32_u1_2607_Sample/ra branch_block_stmt_2556/assign_stmt_2608/ULT_u32_u1_2607_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1029
  if_stmt_2609_branch <=> (branch_block_stmt_2556/if_stmt_2609_eval_test/branch_req) (branch_block_stmt_2556/if_stmt_2609_else_link/else_choice_transition branch_block_stmt_2556/if_stmt_2609_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1034
  // 		iNsTr_21 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_7 ) )
  //  file prog.linked.opt.aa, line 1036
  // ($cast ($int<64>) iNsTr_7 )
  type_cast_2618_inst <=> (branch_block_stmt_2556/assign_stmt_2620/type_cast_2618_Sample/rr branch_block_stmt_2556/assign_stmt_2620/type_cast_2618_Update/cr) (branch_block_stmt_2556/assign_stmt_2620/type_cast_2618_Sample/ra branch_block_stmt_2556/assign_stmt_2620/type_cast_2618_Update/ca)
  // ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_7 ) )
  type_cast_2619_inst <=> (branch_block_stmt_2556/assign_stmt_2620/type_cast_2619_Sample/rr branch_block_stmt_2556/assign_stmt_2620/type_cast_2619_Update/cr) (branch_block_stmt_2556/assign_stmt_2620/type_cast_2619_Sample/ra branch_block_stmt_2556/assign_stmt_2620/type_cast_2619_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1038
  // ($cast ($uint<64>) iNsTr_28 )
  type_cast_2626_inst <=> (branch_block_stmt_2556/xx_x_crit_edgex_xi_bbx_xnph6x_xi_PhiReq/phi_stmt_2623/phi_stmt_2623_sources/type_cast_2626/SplitProtocol/Sample/rr branch_block_stmt_2556/xx_x_crit_edgex_xi_bbx_xnph6x_xi_PhiReq/phi_stmt_2623/phi_stmt_2623_sources/type_cast_2626/SplitProtocol/Update/cr) (branch_block_stmt_2556/xx_x_crit_edgex_xi_bbx_xnph6x_xi_PhiReq/phi_stmt_2623/phi_stmt_2623_sources/type_cast_2626/SplitProtocol/Sample/ra branch_block_stmt_2556/xx_x_crit_edgex_xi_bbx_xnph6x_xi_PhiReq/phi_stmt_2623/phi_stmt_2623_sources/type_cast_2626/SplitProtocol/Update/ca)
  // ($cast ($uint<64>) iNsTr_21 )
  type_cast_2628_inst <=> (branch_block_stmt_2556/bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi_PhiReq/phi_stmt_2623/phi_stmt_2623_sources/type_cast_2628/SplitProtocol/Sample/rr branch_block_stmt_2556/bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi_PhiReq/phi_stmt_2623/phi_stmt_2623_sources/type_cast_2628/SplitProtocol/Update/cr) (branch_block_stmt_2556/bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi_PhiReq/phi_stmt_2623/phi_stmt_2623_sources/type_cast_2628/SplitProtocol/Sample/ra branch_block_stmt_2556/bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi_PhiReq/phi_stmt_2623/phi_stmt_2623_sources/type_cast_2628/SplitProtocol/Update/ca)
  phi_stmt_2623 <=> (branch_block_stmt_2556/xx_x_crit_edgex_xi_bbx_xnph6x_xi_PhiReq/phi_stmt_2623/phi_stmt_2623_req branch_block_stmt_2556/bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi_PhiReq/phi_stmt_2623/phi_stmt_2623_req) (branch_block_stmt_2556/merge_stmt_2622_PhiAck/phi_stmt_2623_ack)
  // ($cast ($uint<64>) iNsTr_27 )
  type_cast_2632_inst <=> (branch_block_stmt_2556/xx_x_crit_edgex_xi_bbx_xnph6x_xi_PhiReq/phi_stmt_2629/phi_stmt_2629_sources/type_cast_2632/SplitProtocol/Sample/rr branch_block_stmt_2556/xx_x_crit_edgex_xi_bbx_xnph6x_xi_PhiReq/phi_stmt_2629/phi_stmt_2629_sources/type_cast_2632/SplitProtocol/Update/cr) (branch_block_stmt_2556/xx_x_crit_edgex_xi_bbx_xnph6x_xi_PhiReq/phi_stmt_2629/phi_stmt_2629_sources/type_cast_2632/SplitProtocol/Sample/ra branch_block_stmt_2556/xx_x_crit_edgex_xi_bbx_xnph6x_xi_PhiReq/phi_stmt_2629/phi_stmt_2629_sources/type_cast_2632/SplitProtocol/Update/ca)
  phi_stmt_2629 <=> (branch_block_stmt_2556/xx_x_crit_edgex_xi_bbx_xnph6x_xi_PhiReq/phi_stmt_2629/phi_stmt_2629_req branch_block_stmt_2556/bbx_xnph6x_xix_xpreheader_bbx_xnph6x_xi_PhiReq/phi_stmt_2629/phi_stmt_2629_req) (branch_block_stmt_2556/merge_stmt_2622_PhiAck/phi_stmt_2629_ack)
  // 		iNsTr_23 := (xx_x05x_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 1042
  // (xx_x05x_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  LSHR_u64_u64_2641_inst <=> (branch_block_stmt_2556/assign_stmt_2642_to_assign_stmt_2648/LSHR_u64_u64_2641_Sample/rr branch_block_stmt_2556/assign_stmt_2642_to_assign_stmt_2648/LSHR_u64_u64_2641_Update/cr) (branch_block_stmt_2556/assign_stmt_2642_to_assign_stmt_2648/LSHR_u64_u64_2641_Sample/ra branch_block_stmt_2556/assign_stmt_2642_to_assign_stmt_2648/LSHR_u64_u64_2641_Update/ca)
  // 		iNsTr_24 := (iNsTr_23 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
  //  file prog.linked.opt.aa, line 1043
  // (iNsTr_23 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
  UGT_u64_u1_2647_inst <=> (branch_block_stmt_2556/assign_stmt_2642_to_assign_stmt_2648/UGT_u64_u1_2647_Sample/rr branch_block_stmt_2556/assign_stmt_2642_to_assign_stmt_2648/UGT_u64_u1_2647_Update/cr) (branch_block_stmt_2556/assign_stmt_2642_to_assign_stmt_2648/UGT_u64_u1_2647_Sample/ra branch_block_stmt_2556/assign_stmt_2642_to_assign_stmt_2648/UGT_u64_u1_2647_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1044
  if_stmt_2649_branch <=> (branch_block_stmt_2556/if_stmt_2649_eval_test/branch_req) (branch_block_stmt_2556/if_stmt_2649_else_link/else_choice_transition branch_block_stmt_2556/if_stmt_2649_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1049
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1052
  // ($cast ($uint<64>) iNsTr_31 )
  type_cast_2661_inst <=> (branch_block_stmt_2556/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_2658/phi_stmt_2658_sources/type_cast_2661/SplitProtocol/Sample/rr branch_block_stmt_2556/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_2658/phi_stmt_2658_sources/type_cast_2661/SplitProtocol/Update/cr) (branch_block_stmt_2556/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_2658/phi_stmt_2658_sources/type_cast_2661/SplitProtocol/Sample/ra branch_block_stmt_2556/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_2658/phi_stmt_2658_sources/type_cast_2661/SplitProtocol/Update/ca)
  phi_stmt_2658 <=> (branch_block_stmt_2556/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_2658/phi_stmt_2658_req branch_block_stmt_2556/bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq/phi_stmt_2658/phi_stmt_2658_req) (branch_block_stmt_2556/merge_stmt_2657_PhiAck/phi_stmt_2658_ack)
  // ($cast ($uint<64>) iNsTr_32 )
  type_cast_2668_inst <=> (branch_block_stmt_2556/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_2665/phi_stmt_2665_sources/type_cast_2668/SplitProtocol/Sample/rr branch_block_stmt_2556/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_2665/phi_stmt_2665_sources/type_cast_2668/SplitProtocol/Update/cr) (branch_block_stmt_2556/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_2665/phi_stmt_2665_sources/type_cast_2668/SplitProtocol/Sample/ra branch_block_stmt_2556/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_2665/phi_stmt_2665_sources/type_cast_2668/SplitProtocol/Update/ca)
  phi_stmt_2665 <=> (branch_block_stmt_2556/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_2665/phi_stmt_2665_req branch_block_stmt_2556/bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq/phi_stmt_2665/phi_stmt_2665_req) (branch_block_stmt_2556/merge_stmt_2657_PhiAck/phi_stmt_2665_ack)
  // 		iNsTr_31 := (shifted_divisorx_x02x_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 1056
  // (shifted_divisorx_x02x_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  SHL_u64_u64_2677_inst <=> (branch_block_stmt_2556/assign_stmt_2678_to_assign_stmt_2689/SHL_u64_u64_2677_Sample/rr branch_block_stmt_2556/assign_stmt_2678_to_assign_stmt_2689/SHL_u64_u64_2677_Update/cr) (branch_block_stmt_2556/assign_stmt_2678_to_assign_stmt_2689/SHL_u64_u64_2677_Sample/ra branch_block_stmt_2556/assign_stmt_2678_to_assign_stmt_2689/SHL_u64_u64_2677_Update/ca)
  // 		iNsTr_32 := (curr_quotientx_x01x_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 1057
  // (curr_quotientx_x01x_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  SHL_u64_u64_2683_inst <=> (branch_block_stmt_2556/assign_stmt_2678_to_assign_stmt_2689/SHL_u64_u64_2683_Sample/rr branch_block_stmt_2556/assign_stmt_2678_to_assign_stmt_2689/SHL_u64_u64_2683_Update/cr) (branch_block_stmt_2556/assign_stmt_2678_to_assign_stmt_2689/SHL_u64_u64_2683_Sample/ra branch_block_stmt_2556/assign_stmt_2678_to_assign_stmt_2689/SHL_u64_u64_2683_Update/ca)
  // 		iNsTr_33 := (iNsTr_31 < iNsTr_23)
  //  file prog.linked.opt.aa, line 1058
  // (iNsTr_31 < iNsTr_23)
  ULT_u64_u1_2688_inst <=> (branch_block_stmt_2556/assign_stmt_2678_to_assign_stmt_2689/ULT_u64_u1_2688_Sample/rr branch_block_stmt_2556/assign_stmt_2678_to_assign_stmt_2689/ULT_u64_u1_2688_Update/cr) (branch_block_stmt_2556/assign_stmt_2678_to_assign_stmt_2689/ULT_u64_u1_2688_Sample/ra branch_block_stmt_2556/assign_stmt_2678_to_assign_stmt_2689/ULT_u64_u1_2688_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1059
  if_stmt_2690_branch <=> (branch_block_stmt_2556/if_stmt_2690_eval_test/branch_req) (branch_block_stmt_2556/if_stmt_2690_else_link/else_choice_transition branch_block_stmt_2556/if_stmt_2690_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1064
  // ($cast ($uint<64>) iNsTr_32 )
  type_cast_2700_inst <=> (branch_block_stmt_2556/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_2697/phi_stmt_2697_sources/type_cast_2700/SplitProtocol/Sample/rr branch_block_stmt_2556/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_2697/phi_stmt_2697_sources/type_cast_2700/SplitProtocol/Update/cr) (branch_block_stmt_2556/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_2697/phi_stmt_2697_sources/type_cast_2700/SplitProtocol/Sample/ra branch_block_stmt_2556/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_2697/phi_stmt_2697_sources/type_cast_2700/SplitProtocol/Update/ca)
  phi_stmt_2697 <=> (branch_block_stmt_2556/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_2697/phi_stmt_2697_req) (branch_block_stmt_2556/merge_stmt_2696_PhiAck/phi_stmt_2697_ack)
  // ($cast ($uint<64>) iNsTr_31 )
  type_cast_2704_inst <=> (branch_block_stmt_2556/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_2701/phi_stmt_2701_sources/type_cast_2704/SplitProtocol/Sample/rr branch_block_stmt_2556/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_2701/phi_stmt_2701_sources/type_cast_2704/SplitProtocol/Update/cr) (branch_block_stmt_2556/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_2701/phi_stmt_2701_sources/type_cast_2704/SplitProtocol/Sample/ra branch_block_stmt_2556/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_2701/phi_stmt_2701_sources/type_cast_2704/SplitProtocol/Update/ca)
  phi_stmt_2701 <=> (branch_block_stmt_2556/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_2701/phi_stmt_2701_req) (branch_block_stmt_2556/merge_stmt_2696_PhiAck/phi_stmt_2701_ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1069
  // ($cast ($uint<64>) xx_xlcssa )
  type_cast_2714_inst <=> (branch_block_stmt_2556/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_2708/phi_stmt_2708_sources/type_cast_2714/SplitProtocol/Sample/rr branch_block_stmt_2556/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_2708/phi_stmt_2708_sources/type_cast_2714/SplitProtocol/Update/cr) (branch_block_stmt_2556/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_2708/phi_stmt_2708_sources/type_cast_2714/SplitProtocol/Sample/ra branch_block_stmt_2556/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_2708/phi_stmt_2708_sources/type_cast_2714/SplitProtocol/Update/ca)
  phi_stmt_2708 <=> (branch_block_stmt_2556/bbx_xnph6x_xi_xx_x_crit_edgex_xi_PhiReq/phi_stmt_2708/phi_stmt_2708_req branch_block_stmt_2556/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_2708/phi_stmt_2708_req) (branch_block_stmt_2556/merge_stmt_2707_PhiAck/phi_stmt_2708_ack)
  // ($cast ($uint<64>) xx_xlcssa1 )
  type_cast_2721_inst <=> (branch_block_stmt_2556/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_2715/phi_stmt_2715_sources/type_cast_2721/SplitProtocol/Sample/rr branch_block_stmt_2556/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_2715/phi_stmt_2715_sources/type_cast_2721/SplitProtocol/Update/cr) (branch_block_stmt_2556/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_2715/phi_stmt_2715_sources/type_cast_2721/SplitProtocol/Sample/ra branch_block_stmt_2556/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_2715/phi_stmt_2715_sources/type_cast_2721/SplitProtocol/Update/ca)
  phi_stmt_2715 <=> (branch_block_stmt_2556/bbx_xnph6x_xi_xx_x_crit_edgex_xi_PhiReq/phi_stmt_2715/phi_stmt_2715_req branch_block_stmt_2556/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_2715/phi_stmt_2715_req) (branch_block_stmt_2556/merge_stmt_2707_PhiAck/phi_stmt_2715_ack)
  // 		iNsTr_27 := (curr_quotientx_x0x_xlcssax_xi + quotientx_x04x_xi)
  //  file prog.linked.opt.aa, line 1073
  // (curr_quotientx_x0x_xlcssax_xi + quotientx_x04x_xi)
  ADD_u64_u64_2726_inst <=> (branch_block_stmt_2556/assign_stmt_2727_to_assign_stmt_2738/ADD_u64_u64_2726_Sample/rr branch_block_stmt_2556/assign_stmt_2727_to_assign_stmt_2738/ADD_u64_u64_2726_Update/cr) (branch_block_stmt_2556/assign_stmt_2727_to_assign_stmt_2738/ADD_u64_u64_2726_Sample/ra branch_block_stmt_2556/assign_stmt_2727_to_assign_stmt_2738/ADD_u64_u64_2726_Update/ca)
  // 		iNsTr_28 := (xx_x05x_xi - shifted_divisorx_x0x_xlcssax_xi)
  //  file prog.linked.opt.aa, line 1074
  // (xx_x05x_xi - shifted_divisorx_x0x_xlcssax_xi)
  SUB_u64_u64_2731_inst <=> (branch_block_stmt_2556/assign_stmt_2727_to_assign_stmt_2738/SUB_u64_u64_2731_Sample/rr branch_block_stmt_2556/assign_stmt_2727_to_assign_stmt_2738/SUB_u64_u64_2731_Update/cr) (branch_block_stmt_2556/assign_stmt_2727_to_assign_stmt_2738/SUB_u64_u64_2731_Sample/ra branch_block_stmt_2556/assign_stmt_2727_to_assign_stmt_2738/SUB_u64_u64_2731_Update/ca)
  // 		iNsTr_29 := (iNsTr_28 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
  //  file prog.linked.opt.aa, line 1075
  // (iNsTr_28 < ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
  ULT_u64_u1_2737_inst <=> (branch_block_stmt_2556/assign_stmt_2727_to_assign_stmt_2738/ULT_u64_u1_2737_Sample/rr branch_block_stmt_2556/assign_stmt_2727_to_assign_stmt_2738/ULT_u64_u1_2737_Update/cr) (branch_block_stmt_2556/assign_stmt_2727_to_assign_stmt_2738/ULT_u64_u1_2737_Sample/ra branch_block_stmt_2556/assign_stmt_2727_to_assign_stmt_2738/ULT_u64_u1_2737_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1076
  if_stmt_2739_branch <=> (branch_block_stmt_2556/if_stmt_2739_eval_test/branch_req) (branch_block_stmt_2556/if_stmt_2739_else_link/else_choice_transition branch_block_stmt_2556/if_stmt_2739_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1081
  // ($cast ($uint<64>) iNsTr_27 )
  type_cast_2749_inst <=> (branch_block_stmt_2556/xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit_PhiReq/phi_stmt_2746/phi_stmt_2746_sources/type_cast_2749/SplitProtocol/Sample/rr branch_block_stmt_2556/xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit_PhiReq/phi_stmt_2746/phi_stmt_2746_sources/type_cast_2749/SplitProtocol/Update/cr) (branch_block_stmt_2556/xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit_PhiReq/phi_stmt_2746/phi_stmt_2746_sources/type_cast_2749/SplitProtocol/Sample/ra branch_block_stmt_2556/xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit_PhiReq/phi_stmt_2746/phi_stmt_2746_sources/type_cast_2749/SplitProtocol/Update/ca)
  phi_stmt_2746 <=> (branch_block_stmt_2556/xx_x_crit_edgex_xi_divideUnsignedx_xexitx_xloopexit_PhiReq/phi_stmt_2746/phi_stmt_2746_req) (branch_block_stmt_2556/merge_stmt_2745_PhiAck/phi_stmt_2746_ack)
  // 		extractx_xt := ($cast ($uint<32>) xx_xlcssa2 )
  //  file prog.linked.opt.aa, line 1084
  // ($cast ($uint<32>) xx_xlcssa2 )
  type_cast_2753_inst <=> (branch_block_stmt_2556/assign_stmt_2754/type_cast_2753_Sample/rr branch_block_stmt_2556/assign_stmt_2754/type_cast_2753_Update/cr) (branch_block_stmt_2556/assign_stmt_2754/type_cast_2753_Sample/ra branch_block_stmt_2556/assign_stmt_2754/type_cast_2753_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1086
  // ($cast ($uint<32>) extractx_xt )
  type_cast_2766_inst <=> (branch_block_stmt_2556/divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit_PhiReq/phi_stmt_2757/phi_stmt_2757_sources/type_cast_2766/SplitProtocol/Sample/rr branch_block_stmt_2556/divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit_PhiReq/phi_stmt_2757/phi_stmt_2757_sources/type_cast_2766/SplitProtocol/Update/cr) (branch_block_stmt_2556/divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit_PhiReq/phi_stmt_2757/phi_stmt_2757_sources/type_cast_2766/SplitProtocol/Sample/ra branch_block_stmt_2556/divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit_PhiReq/phi_stmt_2757/phi_stmt_2757_sources/type_cast_2766/SplitProtocol/Update/ca)
  phi_stmt_2757 <=> (branch_block_stmt_2556/bb_0_divideUnsignedx_xexit_PhiReq/phi_stmt_2757/phi_stmt_2757_req branch_block_stmt_2556/bb_1_divideUnsignedx_xexit_PhiReq/phi_stmt_2757/phi_stmt_2757_req branch_block_stmt_2556/divideUnsignedx_xexitx_xloopexit_divideUnsignedx_xexit_PhiReq/phi_stmt_2757/phi_stmt_2757_req) (branch_block_stmt_2556/merge_stmt_2756_PhiAck/phi_stmt_2757_ack)
  // 		->(iNsTr_4) := iNsTr_1
  //  file prog.linked.opt.aa, line 1089
  ptr_deref_2769_base_resize <=> (branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/ptr_deref_2769_base_addr_resize/base_resize_req) (branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/ptr_deref_2769_base_addr_resize/base_resize_ack)
  ptr_deref_2769_root_address_inst <=> (branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/ptr_deref_2769_base_plus_offset/sum_rename_req) (branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/ptr_deref_2769_base_plus_offset/sum_rename_ack)
  ptr_deref_2769_addr_0 <=> (branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/ptr_deref_2769_word_addrgen/root_register_req) (branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/ptr_deref_2769_word_addrgen/root_register_ack)
  ptr_deref_2769_gather_scatter <=> (branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/ptr_deref_2769_Sample/ptr_deref_2769_Split/split_req) (branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/ptr_deref_2769_Sample/ptr_deref_2769_Split/split_ack)
  ptr_deref_2769_store_0 <=> (branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/ptr_deref_2769_Sample/word_access_start/word_0/rr branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/ptr_deref_2769_Update/word_access_complete/word_0/cr) (branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/ptr_deref_2769_Sample/word_access_start/word_0/ra branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/ptr_deref_2769_Update/word_access_complete/word_0/ca)
  // 		iNsTr_12 := (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 1090
  // (iNsTr_2 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_2776_inst <=> (branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/ADD_u32_u32_2776_Sample/rr branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/ADD_u32_u32_2776_Update/cr) (branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/ADD_u32_u32_2776_Sample/ra branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/ADD_u32_u32_2776_Update/ca)
  // 		iNsTr_13 := (iNsTr_12 == ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
  //  file prog.linked.opt.aa, line 1091
  // (iNsTr_12 == ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
  EQ_u32_u1_2782_inst <=> (branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/EQ_u32_u1_2782_Sample/rr branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/EQ_u32_u1_2782_Update/cr) (branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/EQ_u32_u1_2782_Sample/ra branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/EQ_u32_u1_2782_Update/ca)
  // 		iNsTr_14 := ( $mux iNsTr_13 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_12 ) 
  //  file prog.linked.opt.aa, line 1092
  // ( $mux iNsTr_13 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_12 ) 
  MUX_2789_inst <=> (branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/MUX_2789_start/req branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/MUX_2789_complete/req) (branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/MUX_2789_start/ack branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/MUX_2789_complete/ack)
  // 		WINbuff_ptr := iNsTr_14
  //  file prog.linked.opt.aa, line 1093
  // WINbuff_ptr
  STORE_WINbuff_ptr_2791_gather_scatter <=> (branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/STORE_WINbuff_ptr_2791_Sample/STORE_WINbuff_ptr_2791_Split/split_req) (branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/STORE_WINbuff_ptr_2791_Sample/STORE_WINbuff_ptr_2791_Split/split_ack)
  STORE_WINbuff_ptr_2791_store_0 <=> (branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/STORE_WINbuff_ptr_2791_Sample/word_access_start/word_0/rr branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/STORE_WINbuff_ptr_2791_Update/word_access_complete/word_0/cr) (branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/STORE_WINbuff_ptr_2791_Sample/word_access_start/word_0/ra branch_block_stmt_2556/assign_stmt_2771_to_assign_stmt_2793/STORE_WINbuff_ptr_2791_Update/word_access_complete/word_0/ca)
  // 		filt_output_pipe := outputx_x0
  //  file prog.linked.opt.aa, line 1094
  // filt_output_pipe
  WPIPE_filt_output_pipe_2794_inst <=> (branch_block_stmt_2556/assign_stmt_2796/WPIPE_filt_output_pipe_2794_Sample/req branch_block_stmt_2556/assign_stmt_2796/WPIPE_filt_output_pipe_2794_Update/req) (branch_block_stmt_2556/assign_stmt_2796/WPIPE_filt_output_pipe_2794_Sample/ack branch_block_stmt_2556/assign_stmt_2796/WPIPE_filt_output_pipe_2794_Update/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1096
}
$module [noiseUpdate] 
{
  $in noiseVal:$int<32>
  // can point into  mempool
  // pipe-declarations for block %noiseUpdate
  //  file prog.linked.opt.aa, line 1100
  // pipe-declarations for block %noiseUpdate%body
  //  file prog.linked.opt.aa, line 1105
  // pipe-declarations for block %noiseUpdate%body%
  //  file prog.linked.opt.aa, line 1115
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_2803] // Branch Block  file prog.linked.opt.aa, line 1105
    {
      $P [branch_block_stmt_2803__entry__]
      branch_block_stmt_2803__entry__ <-| ($entry)
      $P [branch_block_stmt_2803__exit__]
      branch_block_stmt_2803__exit__ |-> ($exit)
      $P [assign_stmt_2806_to_assign_stmt_2837__entry__] 
      $P [assign_stmt_2806_to_assign_stmt_2837__exit__] 
      $P [return__]
      $P [merge_stmt_2839__exit__] 
      ::[assign_stmt_2806_to_assign_stmt_2837] 
      {
        // 		iNsTr_0 := NOISEbuff_ptr
        //  file prog.linked.opt.aa, line 1107
        // Source expression
        // NOISEbuff_ptr
        $T[LOAD_NOISEbuff_ptr_2805_sample_start_] 
        $T[LOAD_NOISEbuff_ptr_2805_sample_completed_] 
        $T[LOAD_NOISEbuff_ptr_2805_update_start_] 
        $T[LOAD_NOISEbuff_ptr_2805_update_completed_] 
        $T[LOAD_NOISEbuff_ptr_2805_sample_start_] 
        $T[LOAD_NOISEbuff_ptr_2805_sample_completed_] 
        $T[LOAD_NOISEbuff_ptr_2805_update_start_] 
        $T[LOAD_NOISEbuff_ptr_2805_update_completed_] 
        $T[LOAD_NOISEbuff_ptr_2805_word_address_calculated] 
        $T[LOAD_NOISEbuff_ptr_2805_root_address_calculated] 
        LOAD_NOISEbuff_ptr_2805_word_address_calculated <-& (LOAD_NOISEbuff_ptr_2805_root_address_calculated)
        ;;[LOAD_NOISEbuff_ptr_2805_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_NOISEbuff_ptr_2805_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_NOISEbuff_ptr_2805_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_NOISEbuff_ptr_2805_sample_start_ <-& (LOAD_NOISEbuff_ptr_2805_word_address_calculated)
        LOAD_NOISEbuff_ptr_2805_sample_start_ &-> (LOAD_NOISEbuff_ptr_2805_Sample)
        LOAD_NOISEbuff_ptr_2805_sample_completed_ <-& (LOAD_NOISEbuff_ptr_2805_Sample)
        LOAD_NOISEbuff_ptr_2805_sample_completed_ &-> ($null)
        LOAD_NOISEbuff_ptr_2805_update_start_ &-> (LOAD_NOISEbuff_ptr_2805_Update)
        LOAD_NOISEbuff_ptr_2805_update_completed_ <-& (LOAD_NOISEbuff_ptr_2805_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // 		iNsTr_1 := @(NOISEbuff[iNsTr_0])
        //  file prog.linked.opt.aa, line 1108
        // Source expression
        // @(NOISEbuff[iNsTr_0])
        $T[addr_of_2810_sample_start_] 
        $T[addr_of_2810_sample_completed_] 
        $T[addr_of_2810_update_start_] 
        $T[addr_of_2810_update_completed_] 
        $T[array_obj_ref_2809_root_address_calculated] 
        $T[array_obj_ref_2809_offset_calculated] 
        $T[array_obj_ref_2809_index_resized_0] 
        $T[array_obj_ref_2809_index_scaled_0] 
        // iNsTr_0
        $T[R_iNsTr_0_2808_sample_start_] 
        $T[R_iNsTr_0_2808_sample_completed_] 
        $T[R_iNsTr_0_2808_update_start_] 
        $T[R_iNsTr_0_2808_update_completed_] 
        // implicit reference
        R_iNsTr_0_2808_sample_start_ <-& (LOAD_NOISEbuff_ptr_2805_update_completed_)
        R_iNsTr_0_2808_sample_completed_ <-& (R_iNsTr_0_2808_sample_start_)
        R_iNsTr_0_2808_update_start_ <-& (R_iNsTr_0_2808_sample_completed_)
        R_iNsTr_0_2808_update_completed_ <-& (R_iNsTr_0_2808_update_start_)
        ;;[array_obj_ref_2809_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        R_iNsTr_0_2808_update_completed_ &-> (array_obj_ref_2809_index_resize_0)
        array_obj_ref_2809_index_resized_0 <-& (array_obj_ref_2809_index_resize_0)
        ;;[array_obj_ref_2809_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_2809_index_resized_0 &-> (array_obj_ref_2809_index_scale_0)
        array_obj_ref_2809_index_scaled_0 <-& (array_obj_ref_2809_index_scale_0)
        ;;[array_obj_ref_2809_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_2809_index_scaled_0 &-> (array_obj_ref_2809_final_index_sum_regn)
        array_obj_ref_2809_offset_calculated <-& (array_obj_ref_2809_final_index_sum_regn)
        ;;[array_obj_ref_2809_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_2809_offset_calculated &-> (array_obj_ref_2809_base_plus_offset)
        array_obj_ref_2809_root_address_calculated <-& (array_obj_ref_2809_base_plus_offset)
        ;;[addr_of_2810_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_2810_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_2810_sample_start_ <-& (array_obj_ref_2809_root_address_calculated)
        addr_of_2810_sample_start_ &-> (addr_of_2810_request)
        addr_of_2810_sample_completed_ <-& (addr_of_2810_request)
        addr_of_2810_update_start_ &-> (addr_of_2810_complete)
        addr_of_2810_update_completed_ <-& (addr_of_2810_complete)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // 		->(iNsTr_1) := noiseVal
        //  file prog.linked.opt.aa, line 1109
        // Source expression
        // noiseVal
        $T[R_noiseVal_2814_sample_start_] 
        $T[R_noiseVal_2814_sample_completed_] 
        $T[R_noiseVal_2814_update_start_] 
        $T[R_noiseVal_2814_update_completed_] 
        // reference to interface object
        R_noiseVal_2814_sample_start_ <-& ($entry)
        R_noiseVal_2814_sample_completed_ <-& (R_noiseVal_2814_sample_start_)
        R_noiseVal_2814_update_start_ <-& (R_noiseVal_2814_sample_completed_)
        R_noiseVal_2814_update_completed_ <-& (R_noiseVal_2814_update_start_)
        // Target expression
        // ->(iNsTr_1)
        $T[ptr_deref_2813_sample_start_] 
        $T[ptr_deref_2813_sample_completed_] 
        $T[ptr_deref_2813_update_start_] 
        $T[ptr_deref_2813_update_completed_] 
        $T[ptr_deref_2813_base_address_calculated] 
        // iNsTr_1
        $T[R_iNsTr_1_2812_sample_start_] 
        $T[R_iNsTr_1_2812_sample_completed_] 
        $T[R_iNsTr_1_2812_update_start_] 
        $T[R_iNsTr_1_2812_update_completed_] 
        // implicit reference
        R_iNsTr_1_2812_sample_start_ <-& (addr_of_2810_update_completed_)
        R_iNsTr_1_2812_sample_completed_ <-& (R_iNsTr_1_2812_sample_start_)
        R_iNsTr_1_2812_update_start_ <-& (R_iNsTr_1_2812_sample_completed_)
        R_iNsTr_1_2812_update_completed_ <-& (R_iNsTr_1_2812_update_start_)
        $T[ptr_deref_2813_word_address_calculated] 
        $T[ptr_deref_2813_root_address_calculated] 
        $T[ptr_deref_2813_base_address_resized] 
        ;;[ptr_deref_2813_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_2813_base_address_calculated &-> (ptr_deref_2813_base_addr_resize)
        ptr_deref_2813_base_address_resized <-& (ptr_deref_2813_base_addr_resize)
        ;;[ptr_deref_2813_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_2813_base_address_resized &-> (ptr_deref_2813_base_plus_offset)
        ptr_deref_2813_root_address_calculated <-& (ptr_deref_2813_base_plus_offset)
        ;;[ptr_deref_2813_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_2813_root_address_calculated &-> (ptr_deref_2813_word_addrgen)
        ptr_deref_2813_word_address_calculated <-& (ptr_deref_2813_word_addrgen)
        ;;[ptr_deref_2813_Sample] 
        {
          ;;[ptr_deref_2813_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_2813_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_2813_sample_start_ <-& (ptr_deref_2813_word_address_calculated)
        ptr_deref_2813_sample_start_ &-> (ptr_deref_2813_Sample)
        ptr_deref_2813_sample_completed_ <-& (ptr_deref_2813_Sample)
        ptr_deref_2813_sample_completed_ &-> ($null)
        ptr_deref_2813_update_start_ &-> (ptr_deref_2813_Update)
        ptr_deref_2813_update_completed_ <-& (ptr_deref_2813_Update)
        ptr_deref_2813_base_address_calculated <-& (R_iNsTr_1_2812_update_completed_)
        ptr_deref_2813_sample_start_ <-& (ptr_deref_2813_base_address_calculated)
        ptr_deref_2813_sample_start_ <-& (R_noiseVal_2814_update_completed_)
        // 		iNsTr_3 := (iNsTr_0 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        //  file prog.linked.opt.aa, line 1110
        // Source expression
        // (iNsTr_0 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        $T[ADD_u32_u32_2820_sample_start_] 
        $T[ADD_u32_u32_2820_sample_completed_] 
        $T[ADD_u32_u32_2820_update_start_] 
        $T[ADD_u32_u32_2820_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_2817_sample_start_] 
        $T[R_iNsTr_0_2817_sample_completed_] 
        $T[R_iNsTr_0_2817_update_start_] 
        $T[R_iNsTr_0_2817_update_completed_] 
        // implicit reference
        R_iNsTr_0_2817_sample_start_ <-& (LOAD_NOISEbuff_ptr_2805_update_completed_)
        R_iNsTr_0_2817_sample_completed_ <-& (R_iNsTr_0_2817_sample_start_)
        R_iNsTr_0_2817_update_start_ <-& (R_iNsTr_0_2817_sample_completed_)
        R_iNsTr_0_2817_update_completed_ <-& (R_iNsTr_0_2817_update_start_)
        ADD_u32_u32_2820_sample_start_ <-& (R_iNsTr_0_2817_update_completed_)
        ;;[ADD_u32_u32_2820_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_2820_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_2820_sample_start_ &-> (ADD_u32_u32_2820_Sample)
        ADD_u32_u32_2820_sample_completed_ <-& (ADD_u32_u32_2820_Sample)
        ADD_u32_u32_2820_sample_completed_ &-> ($null)
        ADD_u32_u32_2820_update_start_ &-> (ADD_u32_u32_2820_Update)
        ADD_u32_u32_2820_update_completed_ <-& (ADD_u32_u32_2820_Update)
        // Target expression
        // (as target) iNsTr_3
        // iNsTr_3
        // implicit reference
        // 		iNsTr_4 := (iNsTr_0 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.linked.opt.aa, line 1111
        // Source expression
        // (iNsTr_0 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_2826_sample_start_] 
        $T[EQ_u32_u1_2826_sample_completed_] 
        $T[EQ_u32_u1_2826_update_start_] 
        $T[EQ_u32_u1_2826_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_2823_sample_start_] 
        $T[R_iNsTr_0_2823_sample_completed_] 
        $T[R_iNsTr_0_2823_update_start_] 
        $T[R_iNsTr_0_2823_update_completed_] 
        // implicit reference
        R_iNsTr_0_2823_sample_start_ <-& (LOAD_NOISEbuff_ptr_2805_update_completed_)
        R_iNsTr_0_2823_sample_completed_ <-& (R_iNsTr_0_2823_sample_start_)
        R_iNsTr_0_2823_update_start_ <-& (R_iNsTr_0_2823_sample_completed_)
        R_iNsTr_0_2823_update_completed_ <-& (R_iNsTr_0_2823_update_start_)
        EQ_u32_u1_2826_sample_start_ <-& (R_iNsTr_0_2823_update_completed_)
        ;;[EQ_u32_u1_2826_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_2826_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_2826_sample_start_ &-> (EQ_u32_u1_2826_Sample)
        EQ_u32_u1_2826_sample_completed_ <-& (EQ_u32_u1_2826_Sample)
        EQ_u32_u1_2826_sample_completed_ &-> ($null)
        EQ_u32_u1_2826_update_start_ &-> (EQ_u32_u1_2826_Update)
        EQ_u32_u1_2826_update_completed_ <-& (EQ_u32_u1_2826_Update)
        // Target expression
        // (as target) iNsTr_4
        // iNsTr_4
        // implicit reference
        // 		maxx_xx_xi := ( $mux iNsTr_4 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_3 ) 
        //  file prog.linked.opt.aa, line 1112
        // Source expression
        // ( $mux iNsTr_4 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_3 ) 
        $T[MUX_2833_sample_start_] 
        $T[MUX_2833_sample_completed_] 
        $T[MUX_2833_update_start_] 
        $T[MUX_2833_update_completed_] 
        // iNsTr_4
        $T[R_iNsTr_4_2829_sample_start_] 
        $T[R_iNsTr_4_2829_sample_completed_] 
        $T[R_iNsTr_4_2829_update_start_] 
        $T[R_iNsTr_4_2829_update_completed_] 
        // implicit reference
        R_iNsTr_4_2829_sample_start_ <-& (EQ_u32_u1_2826_update_completed_)
        R_iNsTr_4_2829_sample_completed_ <-& (R_iNsTr_4_2829_sample_start_)
        R_iNsTr_4_2829_update_start_ <-& (R_iNsTr_4_2829_sample_completed_)
        R_iNsTr_4_2829_update_completed_ <-& (R_iNsTr_4_2829_update_start_)
        // iNsTr_3
        $T[R_iNsTr_3_2832_sample_start_] 
        $T[R_iNsTr_3_2832_sample_completed_] 
        $T[R_iNsTr_3_2832_update_start_] 
        $T[R_iNsTr_3_2832_update_completed_] 
        // implicit reference
        R_iNsTr_3_2832_sample_start_ <-& (ADD_u32_u32_2820_update_completed_)
        R_iNsTr_3_2832_sample_completed_ <-& (R_iNsTr_3_2832_sample_start_)
        R_iNsTr_3_2832_update_start_ <-& (R_iNsTr_3_2832_sample_completed_)
        R_iNsTr_3_2832_update_completed_ <-& (R_iNsTr_3_2832_update_start_)
        MUX_2833_sample_start_ <-& (R_iNsTr_4_2829_update_completed_)
        MUX_2833_sample_start_ <-& (R_iNsTr_3_2832_update_completed_)
        ;;[MUX_2833_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_2833_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_2833_sample_start_ &-> (MUX_2833_start)
        MUX_2833_sample_completed_ <-& (MUX_2833_start)
        MUX_2833_update_start_ &-> (MUX_2833_complete)
        MUX_2833_update_completed_ <-& (MUX_2833_complete)
        MUX_2833_sample_completed_ &-> ($null)
        // Target expression
        // (as target) maxx_xx_xi
        // maxx_xx_xi
        // implicit reference
        // 		NOISEbuff_ptr := maxx_xx_xi
        //  file prog.linked.opt.aa, line 1113
        // Source expression
        // maxx_xx_xi
        $T[R_maxx_xx_xi_2836_sample_start_] 
        $T[R_maxx_xx_xi_2836_sample_completed_] 
        $T[R_maxx_xx_xi_2836_update_start_] 
        $T[R_maxx_xx_xi_2836_update_completed_] 
        // implicit reference
        R_maxx_xx_xi_2836_sample_start_ <-& (MUX_2833_update_completed_)
        R_maxx_xx_xi_2836_sample_completed_ <-& (R_maxx_xx_xi_2836_sample_start_)
        R_maxx_xx_xi_2836_update_start_ <-& (R_maxx_xx_xi_2836_sample_completed_)
        R_maxx_xx_xi_2836_update_completed_ <-& (R_maxx_xx_xi_2836_update_start_)
        // Target expression
        // (as target) NOISEbuff_ptr
        $T[STORE_NOISEbuff_ptr_2835_sample_start_] 
        $T[STORE_NOISEbuff_ptr_2835_sample_completed_] 
        $T[STORE_NOISEbuff_ptr_2835_update_start_] 
        $T[STORE_NOISEbuff_ptr_2835_update_completed_] 
        // NOISEbuff_ptr
        $T[STORE_NOISEbuff_ptr_2835_word_address_calculated] 
        $T[STORE_NOISEbuff_ptr_2835_root_address_calculated] 
        STORE_NOISEbuff_ptr_2835_word_address_calculated <-& (STORE_NOISEbuff_ptr_2835_root_address_calculated)
        ;;[STORE_NOISEbuff_ptr_2835_Sample] 
        {
          ;;[STORE_NOISEbuff_ptr_2835_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_NOISEbuff_ptr_2835_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_NOISEbuff_ptr_2835_sample_start_ <-& (STORE_NOISEbuff_ptr_2835_word_address_calculated)
        STORE_NOISEbuff_ptr_2835_sample_start_ &-> (STORE_NOISEbuff_ptr_2835_Sample)
        STORE_NOISEbuff_ptr_2835_sample_completed_ <-& (STORE_NOISEbuff_ptr_2835_Sample)
        STORE_NOISEbuff_ptr_2835_sample_completed_ &-> ($null)
        STORE_NOISEbuff_ptr_2835_update_start_ &-> (STORE_NOISEbuff_ptr_2835_Update)
        STORE_NOISEbuff_ptr_2835_update_completed_ <-& (STORE_NOISEbuff_ptr_2835_Update)
        STORE_NOISEbuff_ptr_2835_sample_start_ <-& (R_maxx_xx_xi_2836_update_completed_)
        // load-store dependencies..
        $T [LOAD_NOISEbuff_ptr_2805_STORE_NOISEbuff_ptr_2835_delay] $delay
        // NOISEbuff_ptr(load) -> NOISEbuff_ptr(store)
        STORE_NOISEbuff_ptr_2835_sample_start_ <-& (LOAD_NOISEbuff_ptr_2805_STORE_NOISEbuff_ptr_2835_delay)
        LOAD_NOISEbuff_ptr_2805_STORE_NOISEbuff_ptr_2835_delay <-& (LOAD_NOISEbuff_ptr_2805_sample_completed_)
      }
      assign_stmt_2806_to_assign_stmt_2837__entry__ |-> (assign_stmt_2806_to_assign_stmt_2837)
      assign_stmt_2806_to_assign_stmt_2837__exit__ <-| (assign_stmt_2806_to_assign_stmt_2837)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1115
      //---------------------   merge statement  file prog.linked.opt.aa, line 1115  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_2839_PhiReqMerge] 
      merge_stmt_2839_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_2839_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2839_PhiReqMerge |-> (merge_stmt_2839_PhiAck)
      merge_stmt_2839__exit__  <-| (merge_stmt_2839_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1115  --------------------------
      assign_stmt_2806_to_assign_stmt_2837__entry__ <-| (branch_block_stmt_2803__entry__)
      return__ <-| (assign_stmt_2806_to_assign_stmt_2837__exit__)
      merge_stmt_2839__exit__ |-> (branch_block_stmt_2803__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %noiseUpdate%body%
    //  file prog.linked.opt.aa, line 1115
    // constant-object-declarations for block %noiseUpdate%body
    //  file prog.linked.opt.aa, line 1105
    // constant-object-declarations for block %noiseUpdate
    //  file prog.linked.opt.aa, line 1100
    // constant-declarations for block %noiseUpdate%body
    //  file prog.linked.opt.aa, line 1105
    // NOISEbuff_ptr
    $constant $W[LOAD_NOISEbuff_ptr_2805_word_address_0] : $pointer<memory_space_14> := _b0
    // @(NOISEbuff[iNsTr_0])
    $constant $W[array_obj_ref_2809_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_2809_offset_scale_factor_0] : $int<5> := _b00001// 1
    // ->(iNsTr_1)
    $constant $W[ptr_deref_2813_word_offset_0] : $int<5> := _b00000// 0
    // ($bitcast ($uint<32>) _b11111111111111111111111111111111  )
    $constant $W[type_cast_2819_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2825_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ( $mux iNsTr_4 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_3 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_2831_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // NOISEbuff_ptr
    $constant $W[STORE_NOISEbuff_ptr_2835_word_address_0] : $pointer<memory_space_14> := _b0
    // constant-declarations for block %noiseUpdate%body%
    //  file prog.linked.opt.aa, line 1115
    // block %noiseUpdate%body
    //  file prog.linked.opt.aa, line 1105
    // 		iNsTr_0 := NOISEbuff_ptr
    //  file prog.linked.opt.aa, line 1107
    // NOISEbuff_ptr
    $W[LOAD_NOISEbuff_ptr_2805_data_0] : $int<32>
    // iNsTr_0
    $W[iNsTr_0_2806] : $int<32>
    // 		iNsTr_1 := @(NOISEbuff[iNsTr_0])
    //  file prog.linked.opt.aa, line 1108
    // @(NOISEbuff[iNsTr_0])
    $intermediate $W[R_iNsTr_0_2808_resized] : $int<5>
    $intermediate $W[R_iNsTr_0_2808_scaled] : $int<5>
    $intermediate $W[array_obj_ref_2809_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_2809_root_address] : $int<5>
    // iNsTr_1
    $W[iNsTr_1_2811] : $int<32>
    // 		->(iNsTr_1) := noiseVal
    //  file prog.linked.opt.aa, line 1109
    // ->(iNsTr_1)
    $intermediate $W[ptr_deref_2813_wire] : $int<32>
    $intermediate $W[ptr_deref_2813_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_2813_root_address] : $int<5>
    $W[ptr_deref_2813_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_2813_data_0] : $int<32>
    // 		iNsTr_3 := (iNsTr_0 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.linked.opt.aa, line 1110
    // iNsTr_3
    $W[iNsTr_3_2821] : $int<32>
    // 		iNsTr_4 := (iNsTr_0 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.linked.opt.aa, line 1111
    // iNsTr_4
    $W[iNsTr_4_2827] : $int<1>
    // 		maxx_xx_xi := ( $mux iNsTr_4 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_3 ) 
    //  file prog.linked.opt.aa, line 1112
    // maxx_xx_xi
    $W[maxx_xx_xi_2834] : $int<32>
    // 		NOISEbuff_ptr := maxx_xx_xi
    //  file prog.linked.opt.aa, line 1113
    // NOISEbuff_ptr
    $constant $W[STORE_NOISEbuff_ptr_2835_word_address_0] : $pointer<memory_space_14> := _b0
    $W[STORE_NOISEbuff_ptr_2835_data_0] : $int<32>
    // datapath-instances for block %noiseUpdate%body
    //  file prog.linked.opt.aa, line 1105
    // 		iNsTr_0 := NOISEbuff_ptr
    //  file prog.linked.opt.aa, line 1107
    // NOISEbuff_ptr
    $load [LOAD_NOISEbuff_ptr_2805_load_0] $from memory_space_14 (LOAD_NOISEbuff_ptr_2805_word_address_0) (LOAD_NOISEbuff_ptr_2805_data_0) 
    $delay LOAD_NOISEbuff_ptr_2805_load_0 1
    &/ [LOAD_NOISEbuff_ptr_2805_gather_scatter] (LOAD_NOISEbuff_ptr_2805_data_0) (iNsTr_0_2806) 
    // 		iNsTr_1 := @(NOISEbuff[iNsTr_0])
    //  file prog.linked.opt.aa, line 1108
    &/ [array_obj_ref_2809_index_0_resize] (iNsTr_0_2806) (R_iNsTr_0_2808_resized) 
    &/ [array_obj_ref_2809_index_0_rename] (R_iNsTr_0_2808_resized) (R_iNsTr_0_2808_scaled) 
    &/ [array_obj_ref_2809_index_offset] (R_iNsTr_0_2808_scaled) (array_obj_ref_2809_final_offset) 
    &/ [array_obj_ref_2809_root_address_inst] (array_obj_ref_2809_final_offset) (array_obj_ref_2809_root_address) 
    # := [addr_of_2810_final_reg] (array_obj_ref_2809_root_address) (iNsTr_1_2811) 
    // 		->(iNsTr_1) := noiseVal
    //  file prog.linked.opt.aa, line 1109
    // ->(iNsTr_1)
    &/ [ptr_deref_2813_base_resize] (iNsTr_1_2811) (ptr_deref_2813_resized_base_address) 
    &/ [ptr_deref_2813_root_address_inst] (ptr_deref_2813_resized_base_address) (ptr_deref_2813_root_address) 
    &/ [ptr_deref_2813_addr_0] (ptr_deref_2813_root_address) (ptr_deref_2813_word_address_0) 
    $store [ptr_deref_2813_store_0] $to memory_space_13 (ptr_deref_2813_word_address_0 ptr_deref_2813_data_0) 
    $delay ptr_deref_2813_store_0 2
    &/ [ptr_deref_2813_gather_scatter] (noiseVal) (ptr_deref_2813_data_0) 
    // 		iNsTr_3 := (iNsTr_0 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.linked.opt.aa, line 1110
    // (iNsTr_0 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    +[ADD_u32_u32_2820_inst] (iNsTr_0_2806 type_cast_2819_wire_constant) (iNsTr_3_2821) 
    $delay ADD_u32_u32_2820_inst 1
    // 		iNsTr_4 := (iNsTr_0 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.linked.opt.aa, line 1111
    // (iNsTr_0 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_2826_inst] (iNsTr_0_2806 type_cast_2825_wire_constant) (iNsTr_4_2827) 
    $delay EQ_u32_u1_2826_inst 1
    // 		maxx_xx_xi := ( $mux iNsTr_4 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_3 ) 
    //  file prog.linked.opt.aa, line 1112
    // ( $mux iNsTr_4 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_3 ) 
    ? [MUX_2833_inst] (iNsTr_4_2827 type_cast_2831_wire_constant iNsTr_3_2821) (maxx_xx_xi_2834) 
    // 		NOISEbuff_ptr := maxx_xx_xi
    //  file prog.linked.opt.aa, line 1113
    // NOISEbuff_ptr
    $store [STORE_NOISEbuff_ptr_2835_store_0] $to memory_space_14 (STORE_NOISEbuff_ptr_2835_word_address_0 STORE_NOISEbuff_ptr_2835_data_0) 
    $delay STORE_NOISEbuff_ptr_2835_store_0 1
    &/ [STORE_NOISEbuff_ptr_2835_gather_scatter] (maxx_xx_xi_2834) (STORE_NOISEbuff_ptr_2835_data_0) 
  }
  // end data-path
  // 		iNsTr_0 := NOISEbuff_ptr
  //  file prog.linked.opt.aa, line 1107
  // NOISEbuff_ptr
  LOAD_NOISEbuff_ptr_2805_gather_scatter <=> (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/LOAD_NOISEbuff_ptr_2805_Update/LOAD_NOISEbuff_ptr_2805_Merge/merge_req) (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/LOAD_NOISEbuff_ptr_2805_Update/LOAD_NOISEbuff_ptr_2805_Merge/merge_ack)
  LOAD_NOISEbuff_ptr_2805_load_0 <=> (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/LOAD_NOISEbuff_ptr_2805_Sample/word_access_start/word_0/rr branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/LOAD_NOISEbuff_ptr_2805_Update/word_access_complete/word_0/cr) (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/LOAD_NOISEbuff_ptr_2805_Sample/word_access_start/word_0/ra branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/LOAD_NOISEbuff_ptr_2805_Update/word_access_complete/word_0/ca)
  // 		iNsTr_1 := @(NOISEbuff[iNsTr_0])
  //  file prog.linked.opt.aa, line 1108
  array_obj_ref_2809_index_0_resize <=> (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/array_obj_ref_2809_index_resize_0/index_resize_req) (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/array_obj_ref_2809_index_resize_0/index_resize_ack)
  array_obj_ref_2809_index_0_rename <=> (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/array_obj_ref_2809_index_scale_0/scale_rename_req) (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/array_obj_ref_2809_index_scale_0/scale_rename_ack)
  array_obj_ref_2809_index_offset <=> (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/array_obj_ref_2809_final_index_sum_regn/req) (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/array_obj_ref_2809_final_index_sum_regn/ack)
  array_obj_ref_2809_root_address_inst <=> (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/array_obj_ref_2809_base_plus_offset/sum_rename_req) (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/array_obj_ref_2809_base_plus_offset/sum_rename_ack)
  addr_of_2810_final_reg <=> (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/addr_of_2810_request/req branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/addr_of_2810_complete/req) (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/addr_of_2810_request/ack branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/addr_of_2810_complete/ack)
  // 		->(iNsTr_1) := noiseVal
  //  file prog.linked.opt.aa, line 1109
  ptr_deref_2813_base_resize <=> (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/ptr_deref_2813_base_addr_resize/base_resize_req) (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/ptr_deref_2813_base_addr_resize/base_resize_ack)
  ptr_deref_2813_root_address_inst <=> (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/ptr_deref_2813_base_plus_offset/sum_rename_req) (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/ptr_deref_2813_base_plus_offset/sum_rename_ack)
  ptr_deref_2813_addr_0 <=> (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/ptr_deref_2813_word_addrgen/root_register_req) (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/ptr_deref_2813_word_addrgen/root_register_ack)
  ptr_deref_2813_gather_scatter <=> (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/ptr_deref_2813_Sample/ptr_deref_2813_Split/split_req) (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/ptr_deref_2813_Sample/ptr_deref_2813_Split/split_ack)
  ptr_deref_2813_store_0 <=> (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/ptr_deref_2813_Sample/word_access_start/word_0/rr branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/ptr_deref_2813_Update/word_access_complete/word_0/cr) (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/ptr_deref_2813_Sample/word_access_start/word_0/ra branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/ptr_deref_2813_Update/word_access_complete/word_0/ca)
  // 		iNsTr_3 := (iNsTr_0 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  //  file prog.linked.opt.aa, line 1110
  // (iNsTr_0 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  ADD_u32_u32_2820_inst <=> (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/ADD_u32_u32_2820_Sample/rr branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/ADD_u32_u32_2820_Update/cr) (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/ADD_u32_u32_2820_Sample/ra branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/ADD_u32_u32_2820_Update/ca)
  // 		iNsTr_4 := (iNsTr_0 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.linked.opt.aa, line 1111
  // (iNsTr_0 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_2826_inst <=> (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/EQ_u32_u1_2826_Sample/rr branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/EQ_u32_u1_2826_Update/cr) (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/EQ_u32_u1_2826_Sample/ra branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/EQ_u32_u1_2826_Update/ca)
  // 		maxx_xx_xi := ( $mux iNsTr_4 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_3 ) 
  //  file prog.linked.opt.aa, line 1112
  // ( $mux iNsTr_4 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_3 ) 
  MUX_2833_inst <=> (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/MUX_2833_start/req branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/MUX_2833_complete/req) (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/MUX_2833_start/ack branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/MUX_2833_complete/ack)
  // 		NOISEbuff_ptr := maxx_xx_xi
  //  file prog.linked.opt.aa, line 1113
  // NOISEbuff_ptr
  STORE_NOISEbuff_ptr_2835_gather_scatter <=> (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/STORE_NOISEbuff_ptr_2835_Sample/STORE_NOISEbuff_ptr_2835_Split/split_req) (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/STORE_NOISEbuff_ptr_2835_Sample/STORE_NOISEbuff_ptr_2835_Split/split_ack)
  STORE_NOISEbuff_ptr_2835_store_0 <=> (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/STORE_NOISEbuff_ptr_2835_Sample/word_access_start/word_0/rr branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/STORE_NOISEbuff_ptr_2835_Update/word_access_complete/word_0/cr) (branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/STORE_NOISEbuff_ptr_2835_Sample/word_access_start/word_0/ra branch_block_stmt_2803/assign_stmt_2806_to_assign_stmt_2837/STORE_NOISEbuff_ptr_2835_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1115
}
$module [peak] 
{
  $out ret_val__:$int<32>
  // can point into  mempool
  // pipe-declarations for block %peak
  //  file prog.linked.opt.aa, line 1119
  // pipe-declarations for block %peak%body
  //  file prog.linked.opt.aa, line 1124
  // pipe-declarations for block %peak%body%
  //  file prog.linked.opt.aa, line 1148
  // pipe-declarations for block %peak%body%
  //  file prog.linked.opt.aa, line 1153
  // pipe-declarations for block %peak%body%
  //  file prog.linked.opt.aa, line 1164
  // pipe-declarations for block %peak%body%
  //  file prog.linked.opt.aa, line 1169
  // pipe-declarations for block %peak%body%
  //  file prog.linked.opt.aa, line 1176
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_2844] // Branch Block  file prog.linked.opt.aa, line 1124
    {
      $P [branch_block_stmt_2844__entry__]
      branch_block_stmt_2844__entry__ <-| ($entry)
      $P [branch_block_stmt_2844__exit__]
      branch_block_stmt_2844__exit__ |-> ($exit)
      $P [assign_stmt_2847_to_assign_stmt_2850__entry__] 
      $P [assign_stmt_2847_to_assign_stmt_2850__exit__] 
      $P [assign_stmt_2853__entry__] 
      $P [assign_stmt_2853__exit__] 
      $P [assign_stmt_2861_to_assign_stmt_2937__entry__] 
      $P [assign_stmt_2861_to_assign_stmt_2937__exit__] 
      $P [if_stmt_2938__entry__] 
      $P [if_stmt_2938__exit__] 
      $P [merge_stmt_2944__entry__] 
      $P [merge_stmt_2944__exit__] 
      $P [assign_stmt_2952_to_assign_stmt_2959__entry__] 
      $P [assign_stmt_2952_to_assign_stmt_2959__exit__] 
      $P [bb_1_bb_2]
      $P [merge_stmt_2961__exit__] 
      $P [assign_stmt_2976_to_assign_stmt_2989__entry__] 
      $P [assign_stmt_2976_to_assign_stmt_2989__exit__] 
      $P [if_stmt_2990__entry__] 
      $P [if_stmt_2990__exit__] 
      $P [merge_stmt_2996__entry__] 
      $P [merge_stmt_2996__exit__] 
      $P [assign_stmt_3004_to_assign_stmt_3011__entry__] 
      $P [assign_stmt_3004_to_assign_stmt_3011__exit__] 
      $P [bb_3_bb_4]
      $P [merge_stmt_3013__exit__] 
      $P [assign_stmt_3023_to_assign_stmt_3029__entry__] 
      $P [assign_stmt_3023_to_assign_stmt_3029__exit__] 
      $P [return__]
      $P [merge_stmt_3031__exit__] 
      ::[assign_stmt_2847_to_assign_stmt_2850] 
      {
        // 		iNsTr_0 := timeSinceMaxPeak
        //  file prog.linked.opt.aa, line 1126
        // Source expression
        // timeSinceMaxPeak
        $T[LOAD_timeSinceMaxPeak_2846_sample_start_] 
        $T[LOAD_timeSinceMaxPeak_2846_sample_completed_] 
        $T[LOAD_timeSinceMaxPeak_2846_update_start_] 
        $T[LOAD_timeSinceMaxPeak_2846_update_completed_] 
        $T[LOAD_timeSinceMaxPeak_2846_sample_start_] 
        $T[LOAD_timeSinceMaxPeak_2846_sample_completed_] 
        $T[LOAD_timeSinceMaxPeak_2846_update_start_] 
        $T[LOAD_timeSinceMaxPeak_2846_update_completed_] 
        $T[LOAD_timeSinceMaxPeak_2846_word_address_calculated] 
        $T[LOAD_timeSinceMaxPeak_2846_root_address_calculated] 
        LOAD_timeSinceMaxPeak_2846_word_address_calculated <-& (LOAD_timeSinceMaxPeak_2846_root_address_calculated)
        ;;[LOAD_timeSinceMaxPeak_2846_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_timeSinceMaxPeak_2846_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_timeSinceMaxPeak_2846_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_timeSinceMaxPeak_2846_sample_start_ <-& (LOAD_timeSinceMaxPeak_2846_word_address_calculated)
        LOAD_timeSinceMaxPeak_2846_sample_start_ &-> (LOAD_timeSinceMaxPeak_2846_Sample)
        LOAD_timeSinceMaxPeak_2846_sample_completed_ <-& (LOAD_timeSinceMaxPeak_2846_Sample)
        LOAD_timeSinceMaxPeak_2846_sample_completed_ &-> ($null)
        LOAD_timeSinceMaxPeak_2846_update_start_ &-> (LOAD_timeSinceMaxPeak_2846_Update)
        LOAD_timeSinceMaxPeak_2846_update_completed_ <-& (LOAD_timeSinceMaxPeak_2846_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // 		iNsTr_1 := maxPeak
        //  file prog.linked.opt.aa, line 1127
        // Source expression
        // maxPeak
        $T[LOAD_maxPeak_2849_sample_start_] 
        $T[LOAD_maxPeak_2849_sample_completed_] 
        $T[LOAD_maxPeak_2849_update_start_] 
        $T[LOAD_maxPeak_2849_update_completed_] 
        $T[LOAD_maxPeak_2849_sample_start_] 
        $T[LOAD_maxPeak_2849_sample_completed_] 
        $T[LOAD_maxPeak_2849_update_start_] 
        $T[LOAD_maxPeak_2849_update_completed_] 
        $T[LOAD_maxPeak_2849_word_address_calculated] 
        $T[LOAD_maxPeak_2849_root_address_calculated] 
        LOAD_maxPeak_2849_word_address_calculated <-& (LOAD_maxPeak_2849_root_address_calculated)
        ;;[LOAD_maxPeak_2849_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_maxPeak_2849_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_maxPeak_2849_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_maxPeak_2849_sample_start_ <-& (LOAD_maxPeak_2849_word_address_calculated)
        LOAD_maxPeak_2849_sample_start_ &-> (LOAD_maxPeak_2849_Sample)
        LOAD_maxPeak_2849_sample_completed_ <-& (LOAD_maxPeak_2849_Sample)
        LOAD_maxPeak_2849_sample_completed_ &-> ($null)
        LOAD_maxPeak_2849_update_start_ &-> (LOAD_maxPeak_2849_Update)
        LOAD_maxPeak_2849_update_completed_ <-& (LOAD_maxPeak_2849_Update)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2847_to_assign_stmt_2850__entry__ |-> (assign_stmt_2847_to_assign_stmt_2850)
      assign_stmt_2847_to_assign_stmt_2850__exit__ <-| (assign_stmt_2847_to_assign_stmt_2850)
      ::[assign_stmt_2853] 
      {
        // 		iNsTr_3 := filt_output_pipe
        //  file prog.linked.opt.aa, line 1128
        // Source expression
        // filt_output_pipe
        $T[RPIPE_filt_output_pipe_2852_sample_start_] 
        $T[RPIPE_filt_output_pipe_2852_sample_completed_] 
        $T[RPIPE_filt_output_pipe_2852_update_start_] 
        $T[RPIPE_filt_output_pipe_2852_update_completed_] 
        ;;[RPIPE_filt_output_pipe_2852_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_filt_output_pipe_2852_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_filt_output_pipe_2852_sample_start_ &-> (RPIPE_filt_output_pipe_2852_Sample)
        RPIPE_filt_output_pipe_2852_sample_completed_ <-& (RPIPE_filt_output_pipe_2852_Sample)
        RPIPE_filt_output_pipe_2852_sample_completed_ &-> ($null)
        RPIPE_filt_output_pipe_2852_update_start_ &-> (RPIPE_filt_output_pipe_2852_Update)
        RPIPE_filt_output_pipe_2852_update_completed_ <-& (RPIPE_filt_output_pipe_2852_Update)
        // Target expression
        // (as target) iNsTr_3
        // iNsTr_3
        // implicit reference
        // barrier: 		iNsTr_3 := filt_output_pipe
        // load-store dependencies..
        // pipe read/write dependencies for pipe filt_output_pipe
      }
      assign_stmt_2853__entry__ |-> (assign_stmt_2853)
      assign_stmt_2853__exit__ <-| (assign_stmt_2853)
      ::[assign_stmt_2861_to_assign_stmt_2937] 
      {
        // 		iNsTr_4 := (($bitcast ($int<32>) iNsTr_0 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.linked.opt.aa, line 1129
        // Source expression
        // (($bitcast ($int<32>) iNsTr_0 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[SGT_i32_u1_2860_sample_start_] 
        $T[SGT_i32_u1_2860_sample_completed_] 
        $T[SGT_i32_u1_2860_update_start_] 
        $T[SGT_i32_u1_2860_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_0 )
        $T[type_cast_2856_sample_start_] 
        $T[type_cast_2856_sample_completed_] 
        $T[type_cast_2856_update_start_] 
        $T[type_cast_2856_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_2855_sample_start_] 
        $T[R_iNsTr_0_2855_sample_completed_] 
        $T[R_iNsTr_0_2855_update_start_] 
        $T[R_iNsTr_0_2855_update_completed_] 
        // implicit reference
        R_iNsTr_0_2855_sample_start_ <-& ($entry)
        R_iNsTr_0_2855_sample_completed_ <-& (R_iNsTr_0_2855_sample_start_)
        R_iNsTr_0_2855_update_start_ <-& (R_iNsTr_0_2855_sample_completed_)
        R_iNsTr_0_2855_update_completed_ <-& (R_iNsTr_0_2855_update_start_)
        type_cast_2856_sample_start_ <-& (R_iNsTr_0_2855_update_completed_)
        ;;[type_cast_2856_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2856_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2856_sample_start_ &-> (type_cast_2856_Sample)
        type_cast_2856_sample_completed_ <-& (type_cast_2856_Sample)
        type_cast_2856_sample_completed_ &-> ($null)
        type_cast_2856_update_start_ &-> (type_cast_2856_Update)
        type_cast_2856_update_completed_ <-& (type_cast_2856_Update)
        // flow-through
        type_cast_2856_update_start_ <-& (type_cast_2856_sample_completed_)
        SGT_i32_u1_2860_sample_start_ <-& (type_cast_2856_update_completed_)
        ;;[SGT_i32_u1_2860_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_2860_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_2860_sample_start_ &-> (SGT_i32_u1_2860_Sample)
        SGT_i32_u1_2860_sample_completed_ <-& (SGT_i32_u1_2860_Sample)
        SGT_i32_u1_2860_sample_completed_ &-> ($null)
        SGT_i32_u1_2860_update_start_ &-> (SGT_i32_u1_2860_Update)
        SGT_i32_u1_2860_update_completed_ <-& (SGT_i32_u1_2860_Update)
        // Target expression
        // (as target) iNsTr_4
        // iNsTr_4
        // implicit reference
        // 		iNsTr_5 := ($cast ($uint<32>) iNsTr_4 )
        //  file prog.linked.opt.aa, line 1130
        // Source expression
        // ($cast ($uint<32>) iNsTr_4 )
        $T[type_cast_2864_sample_start_] 
        $T[type_cast_2864_sample_completed_] 
        $T[type_cast_2864_update_start_] 
        $T[type_cast_2864_update_completed_] 
        // iNsTr_4
        $T[R_iNsTr_4_2863_sample_start_] 
        $T[R_iNsTr_4_2863_sample_completed_] 
        $T[R_iNsTr_4_2863_update_start_] 
        $T[R_iNsTr_4_2863_update_completed_] 
        // implicit reference
        R_iNsTr_4_2863_sample_start_ <-& (SGT_i32_u1_2860_update_completed_)
        R_iNsTr_4_2863_sample_completed_ <-& (R_iNsTr_4_2863_sample_start_)
        R_iNsTr_4_2863_update_start_ <-& (R_iNsTr_4_2863_sample_completed_)
        R_iNsTr_4_2863_update_completed_ <-& (R_iNsTr_4_2863_update_start_)
        type_cast_2864_sample_start_ <-& (R_iNsTr_4_2863_update_completed_)
        ;;[type_cast_2864_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2864_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2864_sample_start_ &-> (type_cast_2864_Sample)
        type_cast_2864_sample_completed_ <-& (type_cast_2864_Sample)
        type_cast_2864_sample_completed_ &-> ($null)
        type_cast_2864_update_start_ &-> (type_cast_2864_Update)
        type_cast_2864_update_completed_ <-& (type_cast_2864_Update)
        // Target expression
        // (as target) iNsTr_5
        // iNsTr_5
        // implicit reference
        // 		iNsTr_6 := (iNsTr_5 + iNsTr_0)
        //  file prog.linked.opt.aa, line 1131
        // Source expression
        // (iNsTr_5 + iNsTr_0)
        $T[ADD_u32_u32_2869_sample_start_] 
        $T[ADD_u32_u32_2869_sample_completed_] 
        $T[ADD_u32_u32_2869_update_start_] 
        $T[ADD_u32_u32_2869_update_completed_] 
        // iNsTr_5
        $T[R_iNsTr_5_2867_sample_start_] 
        $T[R_iNsTr_5_2867_sample_completed_] 
        $T[R_iNsTr_5_2867_update_start_] 
        $T[R_iNsTr_5_2867_update_completed_] 
        // implicit reference
        R_iNsTr_5_2867_sample_start_ <-& (type_cast_2864_update_completed_)
        R_iNsTr_5_2867_sample_completed_ <-& (R_iNsTr_5_2867_sample_start_)
        R_iNsTr_5_2867_update_start_ <-& (R_iNsTr_5_2867_sample_completed_)
        R_iNsTr_5_2867_update_completed_ <-& (R_iNsTr_5_2867_update_start_)
        // iNsTr_0
        $T[R_iNsTr_0_2868_sample_start_] 
        $T[R_iNsTr_0_2868_sample_completed_] 
        $T[R_iNsTr_0_2868_update_start_] 
        $T[R_iNsTr_0_2868_update_completed_] 
        // implicit reference
        R_iNsTr_0_2868_sample_start_ <-& ($entry)
        R_iNsTr_0_2868_sample_completed_ <-& (R_iNsTr_0_2868_sample_start_)
        R_iNsTr_0_2868_update_start_ <-& (R_iNsTr_0_2868_sample_completed_)
        R_iNsTr_0_2868_update_completed_ <-& (R_iNsTr_0_2868_update_start_)
        ADD_u32_u32_2869_sample_start_ <-& (R_iNsTr_5_2867_update_completed_)
        ADD_u32_u32_2869_sample_start_ <-& (R_iNsTr_0_2868_update_completed_)
        ;;[ADD_u32_u32_2869_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_2869_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_2869_sample_start_ &-> (ADD_u32_u32_2869_Sample)
        ADD_u32_u32_2869_sample_completed_ <-& (ADD_u32_u32_2869_Sample)
        ADD_u32_u32_2869_sample_completed_ &-> ($null)
        ADD_u32_u32_2869_update_start_ &-> (ADD_u32_u32_2869_Update)
        ADD_u32_u32_2869_update_completed_ <-& (ADD_u32_u32_2869_Update)
        // Target expression
        // (as target) iNsTr_6
        // iNsTr_6
        // implicit reference
        // 		iNsTr_7 := lastDatum
        //  file prog.linked.opt.aa, line 1132
        // Source expression
        // lastDatum
        $T[LOAD_lastDatum_2872_sample_start_] 
        $T[LOAD_lastDatum_2872_sample_completed_] 
        $T[LOAD_lastDatum_2872_update_start_] 
        $T[LOAD_lastDatum_2872_update_completed_] 
        $T[LOAD_lastDatum_2872_sample_start_] 
        $T[LOAD_lastDatum_2872_sample_completed_] 
        $T[LOAD_lastDatum_2872_update_start_] 
        $T[LOAD_lastDatum_2872_update_completed_] 
        $T[LOAD_lastDatum_2872_word_address_calculated] 
        $T[LOAD_lastDatum_2872_root_address_calculated] 
        LOAD_lastDatum_2872_word_address_calculated <-& (LOAD_lastDatum_2872_root_address_calculated)
        ;;[LOAD_lastDatum_2872_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_lastDatum_2872_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_lastDatum_2872_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_lastDatum_2872_sample_start_ <-& (LOAD_lastDatum_2872_word_address_calculated)
        LOAD_lastDatum_2872_sample_start_ &-> (LOAD_lastDatum_2872_Sample)
        LOAD_lastDatum_2872_sample_completed_ <-& (LOAD_lastDatum_2872_Sample)
        LOAD_lastDatum_2872_sample_completed_ &-> ($null)
        LOAD_lastDatum_2872_update_start_ &-> (LOAD_lastDatum_2872_Update)
        LOAD_lastDatum_2872_update_completed_ <-& (LOAD_lastDatum_2872_Update)
        // Target expression
        // (as target) iNsTr_7
        // iNsTr_7
        // implicit reference
        // 		iNsTr_8 := (($bitcast ($int<32>) iNsTr_3 ) > ($bitcast ($int<32>) iNsTr_7 ))
        //  file prog.linked.opt.aa, line 1133
        // Source expression
        // (($bitcast ($int<32>) iNsTr_3 ) > ($bitcast ($int<32>) iNsTr_7 ))
        $T[SGT_i32_u1_2879_sample_start_] 
        $T[SGT_i32_u1_2879_sample_completed_] 
        $T[SGT_i32_u1_2879_update_start_] 
        $T[SGT_i32_u1_2879_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_3 )
        $T[type_cast_2876_sample_start_] 
        $T[type_cast_2876_sample_completed_] 
        $T[type_cast_2876_update_start_] 
        $T[type_cast_2876_update_completed_] 
        // iNsTr_3
        $T[R_iNsTr_3_2875_sample_start_] 
        $T[R_iNsTr_3_2875_sample_completed_] 
        $T[R_iNsTr_3_2875_update_start_] 
        $T[R_iNsTr_3_2875_update_completed_] 
        // implicit reference
        R_iNsTr_3_2875_sample_start_ <-& ($entry)
        R_iNsTr_3_2875_sample_completed_ <-& (R_iNsTr_3_2875_sample_start_)
        R_iNsTr_3_2875_update_start_ <-& (R_iNsTr_3_2875_sample_completed_)
        R_iNsTr_3_2875_update_completed_ <-& (R_iNsTr_3_2875_update_start_)
        type_cast_2876_sample_start_ <-& (R_iNsTr_3_2875_update_completed_)
        ;;[type_cast_2876_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2876_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2876_sample_start_ &-> (type_cast_2876_Sample)
        type_cast_2876_sample_completed_ <-& (type_cast_2876_Sample)
        type_cast_2876_sample_completed_ &-> ($null)
        type_cast_2876_update_start_ &-> (type_cast_2876_Update)
        type_cast_2876_update_completed_ <-& (type_cast_2876_Update)
        // flow-through
        type_cast_2876_update_start_ <-& (type_cast_2876_sample_completed_)
        // ($bitcast ($int<32>) iNsTr_7 )
        $T[type_cast_2878_sample_start_] 
        $T[type_cast_2878_sample_completed_] 
        $T[type_cast_2878_update_start_] 
        $T[type_cast_2878_update_completed_] 
        // iNsTr_7
        $T[R_iNsTr_7_2877_sample_start_] 
        $T[R_iNsTr_7_2877_sample_completed_] 
        $T[R_iNsTr_7_2877_update_start_] 
        $T[R_iNsTr_7_2877_update_completed_] 
        // implicit reference
        R_iNsTr_7_2877_sample_start_ <-& (LOAD_lastDatum_2872_update_completed_)
        R_iNsTr_7_2877_sample_completed_ <-& (R_iNsTr_7_2877_sample_start_)
        R_iNsTr_7_2877_update_start_ <-& (R_iNsTr_7_2877_sample_completed_)
        R_iNsTr_7_2877_update_completed_ <-& (R_iNsTr_7_2877_update_start_)
        type_cast_2878_sample_start_ <-& (R_iNsTr_7_2877_update_completed_)
        ;;[type_cast_2878_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2878_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2878_sample_start_ &-> (type_cast_2878_Sample)
        type_cast_2878_sample_completed_ <-& (type_cast_2878_Sample)
        type_cast_2878_sample_completed_ &-> ($null)
        type_cast_2878_update_start_ &-> (type_cast_2878_Update)
        type_cast_2878_update_completed_ <-& (type_cast_2878_Update)
        // flow-through
        type_cast_2878_update_start_ <-& (type_cast_2878_sample_completed_)
        SGT_i32_u1_2879_sample_start_ <-& (type_cast_2876_update_completed_)
        SGT_i32_u1_2879_sample_start_ <-& (type_cast_2878_update_completed_)
        ;;[SGT_i32_u1_2879_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_2879_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_2879_sample_start_ &-> (SGT_i32_u1_2879_Sample)
        SGT_i32_u1_2879_sample_completed_ <-& (SGT_i32_u1_2879_Sample)
        SGT_i32_u1_2879_sample_completed_ &-> ($null)
        SGT_i32_u1_2879_update_start_ &-> (SGT_i32_u1_2879_Update)
        SGT_i32_u1_2879_update_completed_ <-& (SGT_i32_u1_2879_Update)
        // Target expression
        // (as target) iNsTr_8
        // iNsTr_8
        // implicit reference
        // 		iNsTr_9 := (($bitcast ($int<32>) iNsTr_3 ) > ($bitcast ($int<32>) iNsTr_1 ))
        //  file prog.linked.opt.aa, line 1134
        // Source expression
        // (($bitcast ($int<32>) iNsTr_3 ) > ($bitcast ($int<32>) iNsTr_1 ))
        $T[SGT_i32_u1_2886_sample_start_] 
        $T[SGT_i32_u1_2886_sample_completed_] 
        $T[SGT_i32_u1_2886_update_start_] 
        $T[SGT_i32_u1_2886_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_3 )
        $T[type_cast_2883_sample_start_] 
        $T[type_cast_2883_sample_completed_] 
        $T[type_cast_2883_update_start_] 
        $T[type_cast_2883_update_completed_] 
        // iNsTr_3
        $T[R_iNsTr_3_2882_sample_start_] 
        $T[R_iNsTr_3_2882_sample_completed_] 
        $T[R_iNsTr_3_2882_update_start_] 
        $T[R_iNsTr_3_2882_update_completed_] 
        // implicit reference
        R_iNsTr_3_2882_sample_start_ <-& ($entry)
        R_iNsTr_3_2882_sample_completed_ <-& (R_iNsTr_3_2882_sample_start_)
        R_iNsTr_3_2882_update_start_ <-& (R_iNsTr_3_2882_sample_completed_)
        R_iNsTr_3_2882_update_completed_ <-& (R_iNsTr_3_2882_update_start_)
        type_cast_2883_sample_start_ <-& (R_iNsTr_3_2882_update_completed_)
        ;;[type_cast_2883_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2883_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2883_sample_start_ &-> (type_cast_2883_Sample)
        type_cast_2883_sample_completed_ <-& (type_cast_2883_Sample)
        type_cast_2883_sample_completed_ &-> ($null)
        type_cast_2883_update_start_ &-> (type_cast_2883_Update)
        type_cast_2883_update_completed_ <-& (type_cast_2883_Update)
        // flow-through
        type_cast_2883_update_start_ <-& (type_cast_2883_sample_completed_)
        // ($bitcast ($int<32>) iNsTr_1 )
        $T[type_cast_2885_sample_start_] 
        $T[type_cast_2885_sample_completed_] 
        $T[type_cast_2885_update_start_] 
        $T[type_cast_2885_update_completed_] 
        // iNsTr_1
        $T[R_iNsTr_1_2884_sample_start_] 
        $T[R_iNsTr_1_2884_sample_completed_] 
        $T[R_iNsTr_1_2884_update_start_] 
        $T[R_iNsTr_1_2884_update_completed_] 
        // implicit reference
        R_iNsTr_1_2884_sample_start_ <-& ($entry)
        R_iNsTr_1_2884_sample_completed_ <-& (R_iNsTr_1_2884_sample_start_)
        R_iNsTr_1_2884_update_start_ <-& (R_iNsTr_1_2884_sample_completed_)
        R_iNsTr_1_2884_update_completed_ <-& (R_iNsTr_1_2884_update_start_)
        type_cast_2885_sample_start_ <-& (R_iNsTr_1_2884_update_completed_)
        ;;[type_cast_2885_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2885_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2885_sample_start_ &-> (type_cast_2885_Sample)
        type_cast_2885_sample_completed_ <-& (type_cast_2885_Sample)
        type_cast_2885_sample_completed_ &-> ($null)
        type_cast_2885_update_start_ &-> (type_cast_2885_Update)
        type_cast_2885_update_completed_ <-& (type_cast_2885_Update)
        // flow-through
        type_cast_2885_update_start_ <-& (type_cast_2885_sample_completed_)
        SGT_i32_u1_2886_sample_start_ <-& (type_cast_2883_update_completed_)
        SGT_i32_u1_2886_sample_start_ <-& (type_cast_2885_update_completed_)
        ;;[SGT_i32_u1_2886_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_2886_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_2886_sample_start_ &-> (SGT_i32_u1_2886_Sample)
        SGT_i32_u1_2886_sample_completed_ <-& (SGT_i32_u1_2886_Sample)
        SGT_i32_u1_2886_sample_completed_ &-> ($null)
        SGT_i32_u1_2886_update_start_ &-> (SGT_i32_u1_2886_Update)
        SGT_i32_u1_2886_update_completed_ <-& (SGT_i32_u1_2886_Update)
        // Target expression
        // (as target) iNsTr_9
        // iNsTr_9
        // implicit reference
        // 		iNsTr_10 := (iNsTr_8 & iNsTr_9)
        //  file prog.linked.opt.aa, line 1135
        // Source expression
        // (iNsTr_8 & iNsTr_9)
        $T[AND_u1_u1_2891_sample_start_] 
        $T[AND_u1_u1_2891_sample_completed_] 
        $T[AND_u1_u1_2891_update_start_] 
        $T[AND_u1_u1_2891_update_completed_] 
        // iNsTr_8
        $T[R_iNsTr_8_2889_sample_start_] 
        $T[R_iNsTr_8_2889_sample_completed_] 
        $T[R_iNsTr_8_2889_update_start_] 
        $T[R_iNsTr_8_2889_update_completed_] 
        // implicit reference
        R_iNsTr_8_2889_sample_start_ <-& (SGT_i32_u1_2879_update_completed_)
        R_iNsTr_8_2889_sample_completed_ <-& (R_iNsTr_8_2889_sample_start_)
        R_iNsTr_8_2889_update_start_ <-& (R_iNsTr_8_2889_sample_completed_)
        R_iNsTr_8_2889_update_completed_ <-& (R_iNsTr_8_2889_update_start_)
        // iNsTr_9
        $T[R_iNsTr_9_2890_sample_start_] 
        $T[R_iNsTr_9_2890_sample_completed_] 
        $T[R_iNsTr_9_2890_update_start_] 
        $T[R_iNsTr_9_2890_update_completed_] 
        // implicit reference
        R_iNsTr_9_2890_sample_start_ <-& (SGT_i32_u1_2886_update_completed_)
        R_iNsTr_9_2890_sample_completed_ <-& (R_iNsTr_9_2890_sample_start_)
        R_iNsTr_9_2890_update_start_ <-& (R_iNsTr_9_2890_sample_completed_)
        R_iNsTr_9_2890_update_completed_ <-& (R_iNsTr_9_2890_update_start_)
        AND_u1_u1_2891_sample_start_ <-& (R_iNsTr_8_2889_update_completed_)
        AND_u1_u1_2891_sample_start_ <-& (R_iNsTr_9_2890_update_completed_)
        ;;[AND_u1_u1_2891_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_2891_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_2891_sample_start_ &-> (AND_u1_u1_2891_Sample)
        AND_u1_u1_2891_sample_completed_ <-& (AND_u1_u1_2891_Sample)
        AND_u1_u1_2891_sample_completed_ &-> ($null)
        AND_u1_u1_2891_update_start_ &-> (AND_u1_u1_2891_Update)
        AND_u1_u1_2891_update_completed_ <-& (AND_u1_u1_2891_Update)
        // Target expression
        // (as target) iNsTr_10
        // iNsTr_10
        // implicit reference
        // 		iNsTr_11 := ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) )
        //  file prog.linked.opt.aa, line 1136
        // Source expression
        // ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) )
        $T[type_cast_2900_sample_start_] 
        $T[type_cast_2900_sample_completed_] 
        $T[type_cast_2900_update_start_] 
        $T[type_cast_2900_update_completed_] 
        // (($bitcast ($int<32>) iNsTr_1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
        $T[ASHR_i32_i32_2899_sample_start_] 
        $T[ASHR_i32_i32_2899_sample_completed_] 
        $T[ASHR_i32_i32_2899_update_start_] 
        $T[ASHR_i32_i32_2899_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_1 )
        $T[type_cast_2895_sample_start_] 
        $T[type_cast_2895_sample_completed_] 
        $T[type_cast_2895_update_start_] 
        $T[type_cast_2895_update_completed_] 
        // iNsTr_1
        $T[R_iNsTr_1_2894_sample_start_] 
        $T[R_iNsTr_1_2894_sample_completed_] 
        $T[R_iNsTr_1_2894_update_start_] 
        $T[R_iNsTr_1_2894_update_completed_] 
        // implicit reference
        R_iNsTr_1_2894_sample_start_ <-& ($entry)
        R_iNsTr_1_2894_sample_completed_ <-& (R_iNsTr_1_2894_sample_start_)
        R_iNsTr_1_2894_update_start_ <-& (R_iNsTr_1_2894_sample_completed_)
        R_iNsTr_1_2894_update_completed_ <-& (R_iNsTr_1_2894_update_start_)
        type_cast_2895_sample_start_ <-& (R_iNsTr_1_2894_update_completed_)
        ;;[type_cast_2895_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2895_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2895_sample_start_ &-> (type_cast_2895_Sample)
        type_cast_2895_sample_completed_ <-& (type_cast_2895_Sample)
        type_cast_2895_sample_completed_ &-> ($null)
        type_cast_2895_update_start_ &-> (type_cast_2895_Update)
        type_cast_2895_update_completed_ <-& (type_cast_2895_Update)
        // flow-through
        type_cast_2895_update_start_ <-& (type_cast_2895_sample_completed_)
        ASHR_i32_i32_2899_sample_start_ <-& (type_cast_2895_update_completed_)
        ;;[ASHR_i32_i32_2899_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ASHR_i32_i32_2899_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ASHR_i32_i32_2899_sample_start_ &-> (ASHR_i32_i32_2899_Sample)
        ASHR_i32_i32_2899_sample_completed_ <-& (ASHR_i32_i32_2899_Sample)
        ASHR_i32_i32_2899_sample_completed_ &-> ($null)
        ASHR_i32_i32_2899_update_start_ &-> (ASHR_i32_i32_2899_Update)
        ASHR_i32_i32_2899_update_completed_ <-& (ASHR_i32_i32_2899_Update)
        // flow-through
        ASHR_i32_i32_2899_update_start_ <-& (ASHR_i32_i32_2899_sample_completed_)
        type_cast_2900_sample_start_ <-& (ASHR_i32_i32_2899_update_completed_)
        ;;[type_cast_2900_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2900_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2900_sample_start_ &-> (type_cast_2900_Sample)
        type_cast_2900_sample_completed_ <-& (type_cast_2900_Sample)
        type_cast_2900_sample_completed_ &-> ($null)
        type_cast_2900_update_start_ &-> (type_cast_2900_Update)
        type_cast_2900_update_completed_ <-& (type_cast_2900_Update)
        // Target expression
        // (as target) iNsTr_11
        // iNsTr_11
        // implicit reference
        // 		iNsTr_12 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_11 ))
        //  file prog.linked.opt.aa, line 1137
        // Source expression
        // (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_11 ))
        $T[SLT_i32_u1_2907_sample_start_] 
        $T[SLT_i32_u1_2907_sample_completed_] 
        $T[SLT_i32_u1_2907_update_start_] 
        $T[SLT_i32_u1_2907_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_3 )
        $T[type_cast_2904_sample_start_] 
        $T[type_cast_2904_sample_completed_] 
        $T[type_cast_2904_update_start_] 
        $T[type_cast_2904_update_completed_] 
        // iNsTr_3
        $T[R_iNsTr_3_2903_sample_start_] 
        $T[R_iNsTr_3_2903_sample_completed_] 
        $T[R_iNsTr_3_2903_update_start_] 
        $T[R_iNsTr_3_2903_update_completed_] 
        // implicit reference
        R_iNsTr_3_2903_sample_start_ <-& ($entry)
        R_iNsTr_3_2903_sample_completed_ <-& (R_iNsTr_3_2903_sample_start_)
        R_iNsTr_3_2903_update_start_ <-& (R_iNsTr_3_2903_sample_completed_)
        R_iNsTr_3_2903_update_completed_ <-& (R_iNsTr_3_2903_update_start_)
        type_cast_2904_sample_start_ <-& (R_iNsTr_3_2903_update_completed_)
        ;;[type_cast_2904_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2904_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2904_sample_start_ &-> (type_cast_2904_Sample)
        type_cast_2904_sample_completed_ <-& (type_cast_2904_Sample)
        type_cast_2904_sample_completed_ &-> ($null)
        type_cast_2904_update_start_ &-> (type_cast_2904_Update)
        type_cast_2904_update_completed_ <-& (type_cast_2904_Update)
        // flow-through
        type_cast_2904_update_start_ <-& (type_cast_2904_sample_completed_)
        // ($bitcast ($int<32>) iNsTr_11 )
        $T[type_cast_2906_sample_start_] 
        $T[type_cast_2906_sample_completed_] 
        $T[type_cast_2906_update_start_] 
        $T[type_cast_2906_update_completed_] 
        // iNsTr_11
        $T[R_iNsTr_11_2905_sample_start_] 
        $T[R_iNsTr_11_2905_sample_completed_] 
        $T[R_iNsTr_11_2905_update_start_] 
        $T[R_iNsTr_11_2905_update_completed_] 
        // implicit reference
        R_iNsTr_11_2905_sample_start_ <-& (type_cast_2900_update_completed_)
        R_iNsTr_11_2905_sample_completed_ <-& (R_iNsTr_11_2905_sample_start_)
        R_iNsTr_11_2905_update_start_ <-& (R_iNsTr_11_2905_sample_completed_)
        R_iNsTr_11_2905_update_completed_ <-& (R_iNsTr_11_2905_update_start_)
        type_cast_2906_sample_start_ <-& (R_iNsTr_11_2905_update_completed_)
        ;;[type_cast_2906_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2906_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2906_sample_start_ &-> (type_cast_2906_Sample)
        type_cast_2906_sample_completed_ <-& (type_cast_2906_Sample)
        type_cast_2906_sample_completed_ &-> ($null)
        type_cast_2906_update_start_ &-> (type_cast_2906_Update)
        type_cast_2906_update_completed_ <-& (type_cast_2906_Update)
        // flow-through
        type_cast_2906_update_start_ <-& (type_cast_2906_sample_completed_)
        SLT_i32_u1_2907_sample_start_ <-& (type_cast_2904_update_completed_)
        SLT_i32_u1_2907_sample_start_ <-& (type_cast_2906_update_completed_)
        ;;[SLT_i32_u1_2907_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_i32_u1_2907_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_i32_u1_2907_sample_start_ &-> (SLT_i32_u1_2907_Sample)
        SLT_i32_u1_2907_sample_completed_ <-& (SLT_i32_u1_2907_Sample)
        SLT_i32_u1_2907_sample_completed_ &-> ($null)
        SLT_i32_u1_2907_update_start_ &-> (SLT_i32_u1_2907_Update)
        SLT_i32_u1_2907_update_completed_ <-& (SLT_i32_u1_2907_Update)
        // Target expression
        // (as target) iNsTr_12
        // iNsTr_12
        // implicit reference
        // 		iNsTr_13 := (($bitcast ($int<32>) iNsTr_6 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010011  ) ))
        //  file prog.linked.opt.aa, line 1138
        // Source expression
        // (($bitcast ($int<32>) iNsTr_6 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010011  ) ))
        $T[SGT_i32_u1_2915_sample_start_] 
        $T[SGT_i32_u1_2915_sample_completed_] 
        $T[SGT_i32_u1_2915_update_start_] 
        $T[SGT_i32_u1_2915_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_6 )
        $T[type_cast_2911_sample_start_] 
        $T[type_cast_2911_sample_completed_] 
        $T[type_cast_2911_update_start_] 
        $T[type_cast_2911_update_completed_] 
        // iNsTr_6
        $T[R_iNsTr_6_2910_sample_start_] 
        $T[R_iNsTr_6_2910_sample_completed_] 
        $T[R_iNsTr_6_2910_update_start_] 
        $T[R_iNsTr_6_2910_update_completed_] 
        // implicit reference
        R_iNsTr_6_2910_sample_start_ <-& (ADD_u32_u32_2869_update_completed_)
        R_iNsTr_6_2910_sample_completed_ <-& (R_iNsTr_6_2910_sample_start_)
        R_iNsTr_6_2910_update_start_ <-& (R_iNsTr_6_2910_sample_completed_)
        R_iNsTr_6_2910_update_completed_ <-& (R_iNsTr_6_2910_update_start_)
        type_cast_2911_sample_start_ <-& (R_iNsTr_6_2910_update_completed_)
        ;;[type_cast_2911_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2911_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2911_sample_start_ &-> (type_cast_2911_Sample)
        type_cast_2911_sample_completed_ <-& (type_cast_2911_Sample)
        type_cast_2911_sample_completed_ &-> ($null)
        type_cast_2911_update_start_ &-> (type_cast_2911_Update)
        type_cast_2911_update_completed_ <-& (type_cast_2911_Update)
        // flow-through
        type_cast_2911_update_start_ <-& (type_cast_2911_sample_completed_)
        SGT_i32_u1_2915_sample_start_ <-& (type_cast_2911_update_completed_)
        ;;[SGT_i32_u1_2915_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_2915_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_2915_sample_start_ &-> (SGT_i32_u1_2915_Sample)
        SGT_i32_u1_2915_sample_completed_ <-& (SGT_i32_u1_2915_Sample)
        SGT_i32_u1_2915_sample_completed_ &-> ($null)
        SGT_i32_u1_2915_update_start_ &-> (SGT_i32_u1_2915_Update)
        SGT_i32_u1_2915_update_completed_ <-& (SGT_i32_u1_2915_Update)
        // Target expression
        // (as target) iNsTr_13
        // iNsTr_13
        // implicit reference
        // 		orx_xcond := (iNsTr_12 | iNsTr_13)
        //  file prog.linked.opt.aa, line 1139
        // Source expression
        // (iNsTr_12 | iNsTr_13)
        $T[OR_u1_u1_2920_sample_start_] 
        $T[OR_u1_u1_2920_sample_completed_] 
        $T[OR_u1_u1_2920_update_start_] 
        $T[OR_u1_u1_2920_update_completed_] 
        // iNsTr_12
        $T[R_iNsTr_12_2918_sample_start_] 
        $T[R_iNsTr_12_2918_sample_completed_] 
        $T[R_iNsTr_12_2918_update_start_] 
        $T[R_iNsTr_12_2918_update_completed_] 
        // implicit reference
        R_iNsTr_12_2918_sample_start_ <-& (SLT_i32_u1_2907_update_completed_)
        R_iNsTr_12_2918_sample_completed_ <-& (R_iNsTr_12_2918_sample_start_)
        R_iNsTr_12_2918_update_start_ <-& (R_iNsTr_12_2918_sample_completed_)
        R_iNsTr_12_2918_update_completed_ <-& (R_iNsTr_12_2918_update_start_)
        // iNsTr_13
        $T[R_iNsTr_13_2919_sample_start_] 
        $T[R_iNsTr_13_2919_sample_completed_] 
        $T[R_iNsTr_13_2919_update_start_] 
        $T[R_iNsTr_13_2919_update_completed_] 
        // implicit reference
        R_iNsTr_13_2919_sample_start_ <-& (SGT_i32_u1_2915_update_completed_)
        R_iNsTr_13_2919_sample_completed_ <-& (R_iNsTr_13_2919_sample_start_)
        R_iNsTr_13_2919_update_start_ <-& (R_iNsTr_13_2919_sample_completed_)
        R_iNsTr_13_2919_update_completed_ <-& (R_iNsTr_13_2919_update_start_)
        OR_u1_u1_2920_sample_start_ <-& (R_iNsTr_12_2918_update_completed_)
        OR_u1_u1_2920_sample_start_ <-& (R_iNsTr_13_2919_update_completed_)
        ;;[OR_u1_u1_2920_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u1_u1_2920_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u1_u1_2920_sample_start_ &-> (OR_u1_u1_2920_Sample)
        OR_u1_u1_2920_sample_completed_ <-& (OR_u1_u1_2920_Sample)
        OR_u1_u1_2920_sample_completed_ &-> ($null)
        OR_u1_u1_2920_update_start_ &-> (OR_u1_u1_2920_Update)
        OR_u1_u1_2920_update_completed_ <-& (OR_u1_u1_2920_Update)
        // Target expression
        // (as target) orx_xcond
        // orx_xcond
        // implicit reference
        // 		xx_xdemorgan := (iNsTr_8 & iNsTr_9)
        //  file prog.linked.opt.aa, line 1140
        // Source expression
        // (iNsTr_8 & iNsTr_9)
        $T[AND_u1_u1_2925_sample_start_] 
        $T[AND_u1_u1_2925_sample_completed_] 
        $T[AND_u1_u1_2925_update_start_] 
        $T[AND_u1_u1_2925_update_completed_] 
        // iNsTr_8
        $T[R_iNsTr_8_2923_sample_start_] 
        $T[R_iNsTr_8_2923_sample_completed_] 
        $T[R_iNsTr_8_2923_update_start_] 
        $T[R_iNsTr_8_2923_update_completed_] 
        // implicit reference
        R_iNsTr_8_2923_sample_start_ <-& (SGT_i32_u1_2879_update_completed_)
        R_iNsTr_8_2923_sample_completed_ <-& (R_iNsTr_8_2923_sample_start_)
        R_iNsTr_8_2923_update_start_ <-& (R_iNsTr_8_2923_sample_completed_)
        R_iNsTr_8_2923_update_completed_ <-& (R_iNsTr_8_2923_update_start_)
        // iNsTr_9
        $T[R_iNsTr_9_2924_sample_start_] 
        $T[R_iNsTr_9_2924_sample_completed_] 
        $T[R_iNsTr_9_2924_update_start_] 
        $T[R_iNsTr_9_2924_update_completed_] 
        // implicit reference
        R_iNsTr_9_2924_sample_start_ <-& (SGT_i32_u1_2886_update_completed_)
        R_iNsTr_9_2924_sample_completed_ <-& (R_iNsTr_9_2924_sample_start_)
        R_iNsTr_9_2924_update_start_ <-& (R_iNsTr_9_2924_sample_completed_)
        R_iNsTr_9_2924_update_completed_ <-& (R_iNsTr_9_2924_update_start_)
        AND_u1_u1_2925_sample_start_ <-& (R_iNsTr_8_2923_update_completed_)
        AND_u1_u1_2925_sample_start_ <-& (R_iNsTr_9_2924_update_completed_)
        ;;[AND_u1_u1_2925_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_2925_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_2925_sample_start_ &-> (AND_u1_u1_2925_Sample)
        AND_u1_u1_2925_sample_completed_ <-& (AND_u1_u1_2925_Sample)
        AND_u1_u1_2925_sample_completed_ &-> ($null)
        AND_u1_u1_2925_update_start_ &-> (AND_u1_u1_2925_Update)
        AND_u1_u1_2925_update_completed_ <-& (AND_u1_u1_2925_Update)
        // Target expression
        // (as target) xx_xdemorgan
        // xx_xdemorgan
        // implicit reference
        // 		iNsTr_14 := (xx_xdemorgan ^ ($bitcast ($uint<1>) _b1  ))
        //  file prog.linked.opt.aa, line 1141
        // Source expression
        // (xx_xdemorgan ^ ($bitcast ($uint<1>) _b1  ))
        $T[XOR_u1_u1_2931_sample_start_] 
        $T[XOR_u1_u1_2931_sample_completed_] 
        $T[XOR_u1_u1_2931_update_start_] 
        $T[XOR_u1_u1_2931_update_completed_] 
        // xx_xdemorgan
        $T[R_xx_xdemorgan_2928_sample_start_] 
        $T[R_xx_xdemorgan_2928_sample_completed_] 
        $T[R_xx_xdemorgan_2928_update_start_] 
        $T[R_xx_xdemorgan_2928_update_completed_] 
        // implicit reference
        R_xx_xdemorgan_2928_sample_start_ <-& (AND_u1_u1_2925_update_completed_)
        R_xx_xdemorgan_2928_sample_completed_ <-& (R_xx_xdemorgan_2928_sample_start_)
        R_xx_xdemorgan_2928_update_start_ <-& (R_xx_xdemorgan_2928_sample_completed_)
        R_xx_xdemorgan_2928_update_completed_ <-& (R_xx_xdemorgan_2928_update_start_)
        XOR_u1_u1_2931_sample_start_ <-& (R_xx_xdemorgan_2928_update_completed_)
        ;;[XOR_u1_u1_2931_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u1_u1_2931_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u1_u1_2931_sample_start_ &-> (XOR_u1_u1_2931_Sample)
        XOR_u1_u1_2931_sample_completed_ <-& (XOR_u1_u1_2931_Sample)
        XOR_u1_u1_2931_sample_completed_ &-> ($null)
        XOR_u1_u1_2931_update_start_ &-> (XOR_u1_u1_2931_Update)
        XOR_u1_u1_2931_update_completed_ <-& (XOR_u1_u1_2931_Update)
        // Target expression
        // (as target) iNsTr_14
        // iNsTr_14
        // implicit reference
        // 		iNsTr_15 := (orx_xcond & iNsTr_14)
        //  file prog.linked.opt.aa, line 1142
        // Source expression
        // (orx_xcond & iNsTr_14)
        $T[AND_u1_u1_2936_sample_start_] 
        $T[AND_u1_u1_2936_sample_completed_] 
        $T[AND_u1_u1_2936_update_start_] 
        $T[AND_u1_u1_2936_update_completed_] 
        // orx_xcond
        $T[R_orx_xcond_2934_sample_start_] 
        $T[R_orx_xcond_2934_sample_completed_] 
        $T[R_orx_xcond_2934_update_start_] 
        $T[R_orx_xcond_2934_update_completed_] 
        // implicit reference
        R_orx_xcond_2934_sample_start_ <-& (OR_u1_u1_2920_update_completed_)
        R_orx_xcond_2934_sample_completed_ <-& (R_orx_xcond_2934_sample_start_)
        R_orx_xcond_2934_update_start_ <-& (R_orx_xcond_2934_sample_completed_)
        R_orx_xcond_2934_update_completed_ <-& (R_orx_xcond_2934_update_start_)
        // iNsTr_14
        $T[R_iNsTr_14_2935_sample_start_] 
        $T[R_iNsTr_14_2935_sample_completed_] 
        $T[R_iNsTr_14_2935_update_start_] 
        $T[R_iNsTr_14_2935_update_completed_] 
        // implicit reference
        R_iNsTr_14_2935_sample_start_ <-& (XOR_u1_u1_2931_update_completed_)
        R_iNsTr_14_2935_sample_completed_ <-& (R_iNsTr_14_2935_sample_start_)
        R_iNsTr_14_2935_update_start_ <-& (R_iNsTr_14_2935_sample_completed_)
        R_iNsTr_14_2935_update_completed_ <-& (R_iNsTr_14_2935_update_start_)
        AND_u1_u1_2936_sample_start_ <-& (R_orx_xcond_2934_update_completed_)
        AND_u1_u1_2936_sample_start_ <-& (R_iNsTr_14_2935_update_completed_)
        ;;[AND_u1_u1_2936_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_2936_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_2936_sample_start_ &-> (AND_u1_u1_2936_Sample)
        AND_u1_u1_2936_sample_completed_ <-& (AND_u1_u1_2936_Sample)
        AND_u1_u1_2936_sample_completed_ &-> ($null)
        AND_u1_u1_2936_update_start_ &-> (AND_u1_u1_2936_Update)
        AND_u1_u1_2936_update_completed_ <-& (AND_u1_u1_2936_Update)
        // Target expression
        // (as target) iNsTr_15
        // iNsTr_15
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2861_to_assign_stmt_2937__entry__ |-> (assign_stmt_2861_to_assign_stmt_2937)
      assign_stmt_2861_to_assign_stmt_2937__exit__ <-| (assign_stmt_2861_to_assign_stmt_2937)
      // if-statement  
      //  file prog.linked.opt.aa, line 1143
      ;;[if_stmt_2938_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2938__entry__ |-> (if_stmt_2938_dead_link)
      if_stmt_2938__exit__ <-| (if_stmt_2938_dead_link)
      ;;[if_stmt_2938_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2938__entry__ |-> (if_stmt_2938_eval_test)
      $P [R_iNsTr_15_2939_place]
      R_iNsTr_15_2939_place <-| (if_stmt_2938_eval_test)
      ;;[if_stmt_2938_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2938_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_15_2939_place |-> (if_stmt_2938_if_link if_stmt_2938_else_link)
      $P [bb_0_bb_1]
      bb_0_bb_1 <-| (if_stmt_2938_if_link)
      $P [bb_0_bb_2]
      bb_0_bb_2 <-| (if_stmt_2938_else_link)
      ::[assign_stmt_2952_to_assign_stmt_2959] 
      {
        // 		iNsTr_17 := (($bitcast ($int<32>) iNsTr_1 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000110  ) ))
        //  file prog.linked.opt.aa, line 1150
        // Source expression
        // (($bitcast ($int<32>) iNsTr_1 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000110  ) ))
        $T[SGT_i32_u1_2951_sample_start_] 
        $T[SGT_i32_u1_2951_sample_completed_] 
        $T[SGT_i32_u1_2951_update_start_] 
        $T[SGT_i32_u1_2951_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_1 )
        $T[type_cast_2947_sample_start_] 
        $T[type_cast_2947_sample_completed_] 
        $T[type_cast_2947_update_start_] 
        $T[type_cast_2947_update_completed_] 
        // iNsTr_1
        $T[R_iNsTr_1_2946_sample_start_] 
        $T[R_iNsTr_1_2946_sample_completed_] 
        $T[R_iNsTr_1_2946_update_start_] 
        $T[R_iNsTr_1_2946_update_completed_] 
        // implicit reference
        R_iNsTr_1_2946_sample_start_ <-& ($entry)
        R_iNsTr_1_2946_sample_completed_ <-& (R_iNsTr_1_2946_sample_start_)
        R_iNsTr_1_2946_update_start_ <-& (R_iNsTr_1_2946_sample_completed_)
        R_iNsTr_1_2946_update_completed_ <-& (R_iNsTr_1_2946_update_start_)
        type_cast_2947_sample_start_ <-& (R_iNsTr_1_2946_update_completed_)
        ;;[type_cast_2947_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2947_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2947_sample_start_ &-> (type_cast_2947_Sample)
        type_cast_2947_sample_completed_ <-& (type_cast_2947_Sample)
        type_cast_2947_sample_completed_ &-> ($null)
        type_cast_2947_update_start_ &-> (type_cast_2947_Update)
        type_cast_2947_update_completed_ <-& (type_cast_2947_Update)
        // flow-through
        type_cast_2947_update_start_ <-& (type_cast_2947_sample_completed_)
        SGT_i32_u1_2951_sample_start_ <-& (type_cast_2947_update_completed_)
        ;;[SGT_i32_u1_2951_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_2951_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_2951_sample_start_ &-> (SGT_i32_u1_2951_Sample)
        SGT_i32_u1_2951_sample_completed_ <-& (SGT_i32_u1_2951_Sample)
        SGT_i32_u1_2951_sample_completed_ &-> ($null)
        SGT_i32_u1_2951_update_start_ &-> (SGT_i32_u1_2951_Update)
        SGT_i32_u1_2951_update_completed_ <-& (SGT_i32_u1_2951_Update)
        // Target expression
        // (as target) iNsTr_17
        // iNsTr_17
        // implicit reference
        // 		phitmp := ( $mux iNsTr_17 iNsTr_1  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
        //  file prog.linked.opt.aa, line 1151
        // Source expression
        // ( $mux iNsTr_17 iNsTr_1  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
        $T[MUX_2958_sample_start_] 
        $T[MUX_2958_sample_completed_] 
        $T[MUX_2958_update_start_] 
        $T[MUX_2958_update_completed_] 
        // iNsTr_17
        $T[R_iNsTr_17_2954_sample_start_] 
        $T[R_iNsTr_17_2954_sample_completed_] 
        $T[R_iNsTr_17_2954_update_start_] 
        $T[R_iNsTr_17_2954_update_completed_] 
        // implicit reference
        R_iNsTr_17_2954_sample_start_ <-& (SGT_i32_u1_2951_update_completed_)
        R_iNsTr_17_2954_sample_completed_ <-& (R_iNsTr_17_2954_sample_start_)
        R_iNsTr_17_2954_update_start_ <-& (R_iNsTr_17_2954_sample_completed_)
        R_iNsTr_17_2954_update_completed_ <-& (R_iNsTr_17_2954_update_start_)
        // iNsTr_1
        $T[R_iNsTr_1_2955_sample_start_] 
        $T[R_iNsTr_1_2955_sample_completed_] 
        $T[R_iNsTr_1_2955_update_start_] 
        $T[R_iNsTr_1_2955_update_completed_] 
        // implicit reference
        R_iNsTr_1_2955_sample_start_ <-& ($entry)
        R_iNsTr_1_2955_sample_completed_ <-& (R_iNsTr_1_2955_sample_start_)
        R_iNsTr_1_2955_update_start_ <-& (R_iNsTr_1_2955_sample_completed_)
        R_iNsTr_1_2955_update_completed_ <-& (R_iNsTr_1_2955_update_start_)
        MUX_2958_sample_start_ <-& (R_iNsTr_17_2954_update_completed_)
        MUX_2958_sample_start_ <-& (R_iNsTr_1_2955_update_completed_)
        ;;[MUX_2958_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_2958_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_2958_sample_start_ &-> (MUX_2958_start)
        MUX_2958_sample_completed_ <-& (MUX_2958_start)
        MUX_2958_update_start_ &-> (MUX_2958_complete)
        MUX_2958_update_completed_ <-& (MUX_2958_complete)
        MUX_2958_sample_completed_ &-> ($null)
        // Target expression
        // (as target) phitmp
        // phitmp
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2952_to_assign_stmt_2959__entry__ |-> (assign_stmt_2952_to_assign_stmt_2959)
      assign_stmt_2952_to_assign_stmt_2959__exit__ <-| (assign_stmt_2952_to_assign_stmt_2959)
      ::[assign_stmt_2976_to_assign_stmt_2989] 
      {
        // 		iNsTr_20 := ( $mux iNsTr_15 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_1 ) 
        //  file prog.linked.opt.aa, line 1156
        // Source expression
        // ( $mux iNsTr_15 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_1 ) 
        $T[MUX_2975_sample_start_] 
        $T[MUX_2975_sample_completed_] 
        $T[MUX_2975_update_start_] 
        $T[MUX_2975_update_completed_] 
        // iNsTr_15
        $T[R_iNsTr_15_2971_sample_start_] 
        $T[R_iNsTr_15_2971_sample_completed_] 
        $T[R_iNsTr_15_2971_update_start_] 
        $T[R_iNsTr_15_2971_update_completed_] 
        // implicit reference
        R_iNsTr_15_2971_sample_start_ <-& ($entry)
        R_iNsTr_15_2971_sample_completed_ <-& (R_iNsTr_15_2971_sample_start_)
        R_iNsTr_15_2971_update_start_ <-& (R_iNsTr_15_2971_sample_completed_)
        R_iNsTr_15_2971_update_completed_ <-& (R_iNsTr_15_2971_update_start_)
        // iNsTr_1
        $T[R_iNsTr_1_2974_sample_start_] 
        $T[R_iNsTr_1_2974_sample_completed_] 
        $T[R_iNsTr_1_2974_update_start_] 
        $T[R_iNsTr_1_2974_update_completed_] 
        // implicit reference
        R_iNsTr_1_2974_sample_start_ <-& ($entry)
        R_iNsTr_1_2974_sample_completed_ <-& (R_iNsTr_1_2974_sample_start_)
        R_iNsTr_1_2974_update_start_ <-& (R_iNsTr_1_2974_sample_completed_)
        R_iNsTr_1_2974_update_completed_ <-& (R_iNsTr_1_2974_update_start_)
        MUX_2975_sample_start_ <-& (R_iNsTr_15_2971_update_completed_)
        MUX_2975_sample_start_ <-& (R_iNsTr_1_2974_update_completed_)
        ;;[MUX_2975_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_2975_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_2975_sample_start_ &-> (MUX_2975_start)
        MUX_2975_sample_completed_ <-& (MUX_2975_start)
        MUX_2975_update_start_ &-> (MUX_2975_complete)
        MUX_2975_update_completed_ <-& (MUX_2975_complete)
        MUX_2975_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_20
        // iNsTr_20
        // implicit reference
        // 		iNsTr_21 := ( $mux iNsTr_15 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_6 ) 
        //  file prog.linked.opt.aa, line 1157
        // Source expression
        // ( $mux iNsTr_15 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_6 ) 
        $T[MUX_2982_sample_start_] 
        $T[MUX_2982_sample_completed_] 
        $T[MUX_2982_update_start_] 
        $T[MUX_2982_update_completed_] 
        // iNsTr_15
        $T[R_iNsTr_15_2978_sample_start_] 
        $T[R_iNsTr_15_2978_sample_completed_] 
        $T[R_iNsTr_15_2978_update_start_] 
        $T[R_iNsTr_15_2978_update_completed_] 
        // implicit reference
        R_iNsTr_15_2978_sample_start_ <-& ($entry)
        R_iNsTr_15_2978_sample_completed_ <-& (R_iNsTr_15_2978_sample_start_)
        R_iNsTr_15_2978_update_start_ <-& (R_iNsTr_15_2978_sample_completed_)
        R_iNsTr_15_2978_update_completed_ <-& (R_iNsTr_15_2978_update_start_)
        // iNsTr_6
        $T[R_iNsTr_6_2981_sample_start_] 
        $T[R_iNsTr_6_2981_sample_completed_] 
        $T[R_iNsTr_6_2981_update_start_] 
        $T[R_iNsTr_6_2981_update_completed_] 
        // implicit reference
        R_iNsTr_6_2981_sample_start_ <-& ($entry)
        R_iNsTr_6_2981_sample_completed_ <-& (R_iNsTr_6_2981_sample_start_)
        R_iNsTr_6_2981_update_start_ <-& (R_iNsTr_6_2981_sample_completed_)
        R_iNsTr_6_2981_update_completed_ <-& (R_iNsTr_6_2981_update_start_)
        MUX_2982_sample_start_ <-& (R_iNsTr_15_2978_update_completed_)
        MUX_2982_sample_start_ <-& (R_iNsTr_6_2981_update_completed_)
        ;;[MUX_2982_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_2982_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_2982_sample_start_ &-> (MUX_2982_start)
        MUX_2982_sample_completed_ <-& (MUX_2982_start)
        MUX_2982_update_start_ &-> (MUX_2982_complete)
        MUX_2982_update_completed_ <-& (MUX_2982_complete)
        MUX_2982_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_21
        // iNsTr_21
        // implicit reference
        // 		iNsTr_22 := ( $mux iNsTr_10 iNsTr_3  iNsTr_20 ) 
        //  file prog.linked.opt.aa, line 1158
        // Source expression
        // ( $mux iNsTr_10 iNsTr_3  iNsTr_20 ) 
        $T[MUX_2988_sample_start_] 
        $T[MUX_2988_sample_completed_] 
        $T[MUX_2988_update_start_] 
        $T[MUX_2988_update_completed_] 
        // iNsTr_10
        $T[R_iNsTr_10_2985_sample_start_] 
        $T[R_iNsTr_10_2985_sample_completed_] 
        $T[R_iNsTr_10_2985_update_start_] 
        $T[R_iNsTr_10_2985_update_completed_] 
        // implicit reference
        R_iNsTr_10_2985_sample_start_ <-& ($entry)
        R_iNsTr_10_2985_sample_completed_ <-& (R_iNsTr_10_2985_sample_start_)
        R_iNsTr_10_2985_update_start_ <-& (R_iNsTr_10_2985_sample_completed_)
        R_iNsTr_10_2985_update_completed_ <-& (R_iNsTr_10_2985_update_start_)
        // iNsTr_3
        $T[R_iNsTr_3_2986_sample_start_] 
        $T[R_iNsTr_3_2986_sample_completed_] 
        $T[R_iNsTr_3_2986_update_start_] 
        $T[R_iNsTr_3_2986_update_completed_] 
        // implicit reference
        R_iNsTr_3_2986_sample_start_ <-& ($entry)
        R_iNsTr_3_2986_sample_completed_ <-& (R_iNsTr_3_2986_sample_start_)
        R_iNsTr_3_2986_update_start_ <-& (R_iNsTr_3_2986_sample_completed_)
        R_iNsTr_3_2986_update_completed_ <-& (R_iNsTr_3_2986_update_start_)
        // iNsTr_20
        $T[R_iNsTr_20_2987_sample_start_] 
        $T[R_iNsTr_20_2987_sample_completed_] 
        $T[R_iNsTr_20_2987_update_start_] 
        $T[R_iNsTr_20_2987_update_completed_] 
        // implicit reference
        R_iNsTr_20_2987_sample_start_ <-& (MUX_2975_update_completed_)
        R_iNsTr_20_2987_sample_completed_ <-& (R_iNsTr_20_2987_sample_start_)
        R_iNsTr_20_2987_update_start_ <-& (R_iNsTr_20_2987_sample_completed_)
        R_iNsTr_20_2987_update_completed_ <-& (R_iNsTr_20_2987_update_start_)
        MUX_2988_sample_start_ <-& (R_iNsTr_10_2985_update_completed_)
        MUX_2988_sample_start_ <-& (R_iNsTr_3_2986_update_completed_)
        MUX_2988_sample_start_ <-& (R_iNsTr_20_2987_update_completed_)
        ;;[MUX_2988_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_2988_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_2988_sample_start_ &-> (MUX_2988_start)
        MUX_2988_sample_completed_ <-& (MUX_2988_start)
        MUX_2988_update_start_ &-> (MUX_2988_complete)
        MUX_2988_update_completed_ <-& (MUX_2988_complete)
        MUX_2988_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_22
        // iNsTr_22
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2976_to_assign_stmt_2989__entry__ |-> (assign_stmt_2976_to_assign_stmt_2989)
      assign_stmt_2976_to_assign_stmt_2989__exit__ <-| (assign_stmt_2976_to_assign_stmt_2989)
      // if-statement  
      //  file prog.linked.opt.aa, line 1159
      ;;[if_stmt_2990_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2990__entry__ |-> (if_stmt_2990_dead_link)
      if_stmt_2990__exit__ <-| (if_stmt_2990_dead_link)
      ;;[if_stmt_2990_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2990__entry__ |-> (if_stmt_2990_eval_test)
      $P [R_iNsTr_10_2991_place]
      R_iNsTr_10_2991_place <-| (if_stmt_2990_eval_test)
      ;;[if_stmt_2990_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2990_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_10_2991_place |-> (if_stmt_2990_if_link if_stmt_2990_else_link)
      $P [bb_2_bb_3]
      bb_2_bb_3 <-| (if_stmt_2990_if_link)
      $P [bb_2_bb_4]
      bb_2_bb_4 <-| (if_stmt_2990_else_link)
      ::[assign_stmt_3004_to_assign_stmt_3011] 
      {
        // 		iNsTr_24 := (($bitcast ($int<32>) iNsTr_22 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
        //  file prog.linked.opt.aa, line 1166
        // Source expression
        // (($bitcast ($int<32>) iNsTr_22 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
        $T[SGT_i32_u1_3003_sample_start_] 
        $T[SGT_i32_u1_3003_sample_completed_] 
        $T[SGT_i32_u1_3003_update_start_] 
        $T[SGT_i32_u1_3003_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_22 )
        $T[type_cast_2999_sample_start_] 
        $T[type_cast_2999_sample_completed_] 
        $T[type_cast_2999_update_start_] 
        $T[type_cast_2999_update_completed_] 
        // iNsTr_22
        $T[R_iNsTr_22_2998_sample_start_] 
        $T[R_iNsTr_22_2998_sample_completed_] 
        $T[R_iNsTr_22_2998_update_start_] 
        $T[R_iNsTr_22_2998_update_completed_] 
        // implicit reference
        R_iNsTr_22_2998_sample_start_ <-& ($entry)
        R_iNsTr_22_2998_sample_completed_ <-& (R_iNsTr_22_2998_sample_start_)
        R_iNsTr_22_2998_update_start_ <-& (R_iNsTr_22_2998_sample_completed_)
        R_iNsTr_22_2998_update_completed_ <-& (R_iNsTr_22_2998_update_start_)
        type_cast_2999_sample_start_ <-& (R_iNsTr_22_2998_update_completed_)
        ;;[type_cast_2999_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2999_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2999_sample_start_ &-> (type_cast_2999_Sample)
        type_cast_2999_sample_completed_ <-& (type_cast_2999_Sample)
        type_cast_2999_sample_completed_ &-> ($null)
        type_cast_2999_update_start_ &-> (type_cast_2999_Update)
        type_cast_2999_update_completed_ <-& (type_cast_2999_Update)
        // flow-through
        type_cast_2999_update_start_ <-& (type_cast_2999_sample_completed_)
        SGT_i32_u1_3003_sample_start_ <-& (type_cast_2999_update_completed_)
        ;;[SGT_i32_u1_3003_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_3003_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_3003_sample_start_ &-> (SGT_i32_u1_3003_Sample)
        SGT_i32_u1_3003_sample_completed_ <-& (SGT_i32_u1_3003_Sample)
        SGT_i32_u1_3003_sample_completed_ &-> ($null)
        SGT_i32_u1_3003_update_start_ &-> (SGT_i32_u1_3003_Update)
        SGT_i32_u1_3003_update_completed_ <-& (SGT_i32_u1_3003_Update)
        // Target expression
        // (as target) iNsTr_24
        // iNsTr_24
        // implicit reference
        // 		phitmp1 := ( $mux iNsTr_24 ($bitcast ($uint<32>) _b00000000000000000000000000000001  )  iNsTr_21 ) 
        //  file prog.linked.opt.aa, line 1167
        // Source expression
        // ( $mux iNsTr_24 ($bitcast ($uint<32>) _b00000000000000000000000000000001  )  iNsTr_21 ) 
        $T[MUX_3010_sample_start_] 
        $T[MUX_3010_sample_completed_] 
        $T[MUX_3010_update_start_] 
        $T[MUX_3010_update_completed_] 
        // iNsTr_24
        $T[R_iNsTr_24_3006_sample_start_] 
        $T[R_iNsTr_24_3006_sample_completed_] 
        $T[R_iNsTr_24_3006_update_start_] 
        $T[R_iNsTr_24_3006_update_completed_] 
        // implicit reference
        R_iNsTr_24_3006_sample_start_ <-& (SGT_i32_u1_3003_update_completed_)
        R_iNsTr_24_3006_sample_completed_ <-& (R_iNsTr_24_3006_sample_start_)
        R_iNsTr_24_3006_update_start_ <-& (R_iNsTr_24_3006_sample_completed_)
        R_iNsTr_24_3006_update_completed_ <-& (R_iNsTr_24_3006_update_start_)
        // iNsTr_21
        $T[R_iNsTr_21_3009_sample_start_] 
        $T[R_iNsTr_21_3009_sample_completed_] 
        $T[R_iNsTr_21_3009_update_start_] 
        $T[R_iNsTr_21_3009_update_completed_] 
        // implicit reference
        R_iNsTr_21_3009_sample_start_ <-& ($entry)
        R_iNsTr_21_3009_sample_completed_ <-& (R_iNsTr_21_3009_sample_start_)
        R_iNsTr_21_3009_update_start_ <-& (R_iNsTr_21_3009_sample_completed_)
        R_iNsTr_21_3009_update_completed_ <-& (R_iNsTr_21_3009_update_start_)
        MUX_3010_sample_start_ <-& (R_iNsTr_24_3006_update_completed_)
        MUX_3010_sample_start_ <-& (R_iNsTr_21_3009_update_completed_)
        ;;[MUX_3010_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_3010_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_3010_sample_start_ &-> (MUX_3010_start)
        MUX_3010_sample_completed_ <-& (MUX_3010_start)
        MUX_3010_update_start_ &-> (MUX_3010_complete)
        MUX_3010_update_completed_ <-& (MUX_3010_complete)
        MUX_3010_sample_completed_ &-> ($null)
        // Target expression
        // (as target) phitmp1
        // phitmp1
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3004_to_assign_stmt_3011__entry__ |-> (assign_stmt_3004_to_assign_stmt_3011)
      assign_stmt_3004_to_assign_stmt_3011__exit__ <-| (assign_stmt_3004_to_assign_stmt_3011)
      ::[assign_stmt_3023_to_assign_stmt_3029] 
      {
        // 		timeSinceMaxPeak := iNsTr_26
        //  file prog.linked.opt.aa, line 1172
        // Source expression
        // iNsTr_26
        $T[R_iNsTr_26_3022_sample_start_] 
        $T[R_iNsTr_26_3022_sample_completed_] 
        $T[R_iNsTr_26_3022_update_start_] 
        $T[R_iNsTr_26_3022_update_completed_] 
        // implicit reference
        R_iNsTr_26_3022_sample_start_ <-& ($entry)
        R_iNsTr_26_3022_sample_completed_ <-& (R_iNsTr_26_3022_sample_start_)
        R_iNsTr_26_3022_update_start_ <-& (R_iNsTr_26_3022_sample_completed_)
        R_iNsTr_26_3022_update_completed_ <-& (R_iNsTr_26_3022_update_start_)
        // Target expression
        // (as target) timeSinceMaxPeak
        $T[STORE_timeSinceMaxPeak_3021_sample_start_] 
        $T[STORE_timeSinceMaxPeak_3021_sample_completed_] 
        $T[STORE_timeSinceMaxPeak_3021_update_start_] 
        $T[STORE_timeSinceMaxPeak_3021_update_completed_] 
        // timeSinceMaxPeak
        $T[STORE_timeSinceMaxPeak_3021_word_address_calculated] 
        $T[STORE_timeSinceMaxPeak_3021_root_address_calculated] 
        STORE_timeSinceMaxPeak_3021_word_address_calculated <-& (STORE_timeSinceMaxPeak_3021_root_address_calculated)
        ;;[STORE_timeSinceMaxPeak_3021_Sample] 
        {
          ;;[STORE_timeSinceMaxPeak_3021_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_timeSinceMaxPeak_3021_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_timeSinceMaxPeak_3021_sample_start_ <-& (STORE_timeSinceMaxPeak_3021_word_address_calculated)
        STORE_timeSinceMaxPeak_3021_sample_start_ &-> (STORE_timeSinceMaxPeak_3021_Sample)
        STORE_timeSinceMaxPeak_3021_sample_completed_ <-& (STORE_timeSinceMaxPeak_3021_Sample)
        STORE_timeSinceMaxPeak_3021_sample_completed_ &-> ($null)
        STORE_timeSinceMaxPeak_3021_update_start_ &-> (STORE_timeSinceMaxPeak_3021_Update)
        STORE_timeSinceMaxPeak_3021_update_completed_ <-& (STORE_timeSinceMaxPeak_3021_Update)
        STORE_timeSinceMaxPeak_3021_sample_start_ <-& (R_iNsTr_26_3022_update_completed_)
        // 		maxPeak := iNsTr_22
        //  file prog.linked.opt.aa, line 1173
        // Source expression
        // iNsTr_22
        $T[R_iNsTr_22_3025_sample_start_] 
        $T[R_iNsTr_22_3025_sample_completed_] 
        $T[R_iNsTr_22_3025_update_start_] 
        $T[R_iNsTr_22_3025_update_completed_] 
        // implicit reference
        R_iNsTr_22_3025_sample_start_ <-& ($entry)
        R_iNsTr_22_3025_sample_completed_ <-& (R_iNsTr_22_3025_sample_start_)
        R_iNsTr_22_3025_update_start_ <-& (R_iNsTr_22_3025_sample_completed_)
        R_iNsTr_22_3025_update_completed_ <-& (R_iNsTr_22_3025_update_start_)
        // Target expression
        // (as target) maxPeak
        $T[STORE_maxPeak_3024_sample_start_] 
        $T[STORE_maxPeak_3024_sample_completed_] 
        $T[STORE_maxPeak_3024_update_start_] 
        $T[STORE_maxPeak_3024_update_completed_] 
        // maxPeak
        $T[STORE_maxPeak_3024_word_address_calculated] 
        $T[STORE_maxPeak_3024_root_address_calculated] 
        STORE_maxPeak_3024_word_address_calculated <-& (STORE_maxPeak_3024_root_address_calculated)
        ;;[STORE_maxPeak_3024_Sample] 
        {
          ;;[STORE_maxPeak_3024_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_maxPeak_3024_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_maxPeak_3024_sample_start_ <-& (STORE_maxPeak_3024_word_address_calculated)
        STORE_maxPeak_3024_sample_start_ &-> (STORE_maxPeak_3024_Sample)
        STORE_maxPeak_3024_sample_completed_ <-& (STORE_maxPeak_3024_Sample)
        STORE_maxPeak_3024_sample_completed_ &-> ($null)
        STORE_maxPeak_3024_update_start_ &-> (STORE_maxPeak_3024_Update)
        STORE_maxPeak_3024_update_completed_ <-& (STORE_maxPeak_3024_Update)
        STORE_maxPeak_3024_sample_start_ <-& (R_iNsTr_22_3025_update_completed_)
        // 		lastDatum := iNsTr_3
        //  file prog.linked.opt.aa, line 1174
        // Source expression
        // iNsTr_3
        $T[R_iNsTr_3_3028_sample_start_] 
        $T[R_iNsTr_3_3028_sample_completed_] 
        $T[R_iNsTr_3_3028_update_start_] 
        $T[R_iNsTr_3_3028_update_completed_] 
        // implicit reference
        R_iNsTr_3_3028_sample_start_ <-& ($entry)
        R_iNsTr_3_3028_sample_completed_ <-& (R_iNsTr_3_3028_sample_start_)
        R_iNsTr_3_3028_update_start_ <-& (R_iNsTr_3_3028_sample_completed_)
        R_iNsTr_3_3028_update_completed_ <-& (R_iNsTr_3_3028_update_start_)
        // Target expression
        // (as target) lastDatum
        $T[STORE_lastDatum_3027_sample_start_] 
        $T[STORE_lastDatum_3027_sample_completed_] 
        $T[STORE_lastDatum_3027_update_start_] 
        $T[STORE_lastDatum_3027_update_completed_] 
        // lastDatum
        $T[STORE_lastDatum_3027_word_address_calculated] 
        $T[STORE_lastDatum_3027_root_address_calculated] 
        STORE_lastDatum_3027_word_address_calculated <-& (STORE_lastDatum_3027_root_address_calculated)
        ;;[STORE_lastDatum_3027_Sample] 
        {
          ;;[STORE_lastDatum_3027_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_lastDatum_3027_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_lastDatum_3027_sample_start_ <-& (STORE_lastDatum_3027_word_address_calculated)
        STORE_lastDatum_3027_sample_start_ &-> (STORE_lastDatum_3027_Sample)
        STORE_lastDatum_3027_sample_completed_ <-& (STORE_lastDatum_3027_Sample)
        STORE_lastDatum_3027_sample_completed_ &-> ($null)
        STORE_lastDatum_3027_update_start_ &-> (STORE_lastDatum_3027_Update)
        STORE_lastDatum_3027_update_completed_ <-& (STORE_lastDatum_3027_Update)
        STORE_lastDatum_3027_sample_start_ <-& (R_iNsTr_3_3028_update_completed_)
        // load-store dependencies..
      }
      assign_stmt_3023_to_assign_stmt_3029__entry__ |-> (assign_stmt_3023_to_assign_stmt_3029)
      assign_stmt_3023_to_assign_stmt_3029__exit__ <-| (assign_stmt_3023_to_assign_stmt_3029)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1148
      ;;[merge_stmt_2944_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2944__entry__ |-> (merge_stmt_2944_dead_link)
      merge_stmt_2944__exit__ <-| (merge_stmt_2944_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1148  --------------------------
      ||[bb_0_bb_1_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_1 |-> (bb_0_bb_1_PhiReq)
      $P [merge_stmt_2944_PhiReqMerge] 
      merge_stmt_2944_PhiReqMerge <-| ( bb_0_bb_1_PhiReq )
      ||[merge_stmt_2944_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2944_PhiReqMerge |-> (merge_stmt_2944_PhiAck)
      merge_stmt_2944__exit__  <-| (merge_stmt_2944_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1148  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1153
      //---------------------   merge statement  file prog.linked.opt.aa, line 1153  --------------------------
      ||[bb_0_bb_2_PhiReq] 
      {
        ;;[phi_stmt_2962] 
        {
          ||[phi_stmt_2962_sources] 
          {
            // sources for 			$phi ret_val__ := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_0_bb_2			  ($cast ($uint<32>) phitmp ) $on bb_1_bb_2 // type of target is $uint<32>
            // ($cast ($uint<32>) phitmp )
            ;;[type_cast_2968] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2962_req] 
        }
      }
      bb_0_bb_2 |-> (bb_0_bb_2_PhiReq)
      ||[bb_1_bb_2_PhiReq] 
      {
        ;;[phi_stmt_2962] 
        {
          ||[phi_stmt_2962_sources] 
          {
            // sources for 			$phi ret_val__ := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_0_bb_2			  ($cast ($uint<32>) phitmp ) $on bb_1_bb_2 // type of target is $uint<32>
            // ($cast ($uint<32>) phitmp )
            ;;[type_cast_2968] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2962_req] 
        }
      }
      bb_1_bb_2 |-> (bb_1_bb_2_PhiReq)
      $P [merge_stmt_2961_PhiReqMerge] 
      merge_stmt_2961_PhiReqMerge <-| ( bb_0_bb_2_PhiReq  bb_1_bb_2_PhiReq )
      ||[merge_stmt_2961_PhiAck] 
      {
        $T [phi_stmt_2962_ack] 
      }
      merge_stmt_2961_PhiReqMerge |-> (merge_stmt_2961_PhiAck)
      merge_stmt_2961__exit__  <-| (merge_stmt_2961_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1153  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1164
      ;;[merge_stmt_2996_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2996__entry__ |-> (merge_stmt_2996_dead_link)
      merge_stmt_2996__exit__ <-| (merge_stmt_2996_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1164  --------------------------
      ||[bb_2_bb_3_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_2_bb_3 |-> (bb_2_bb_3_PhiReq)
      $P [merge_stmt_2996_PhiReqMerge] 
      merge_stmt_2996_PhiReqMerge <-| ( bb_2_bb_3_PhiReq )
      ||[merge_stmt_2996_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2996_PhiReqMerge |-> (merge_stmt_2996_PhiAck)
      merge_stmt_2996__exit__  <-| (merge_stmt_2996_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1164  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1169
      //---------------------   merge statement  file prog.linked.opt.aa, line 1169  --------------------------
      ||[bb_2_bb_4_PhiReq] 
      {
        ;;[phi_stmt_3014] 
        {
          ||[phi_stmt_3014_sources] 
          {
            // sources for 			$phi iNsTr_26 := 			  ($cast ($uint<32>) iNsTr_21 ) $on bb_2_bb_4			  ($cast ($uint<32>) phitmp1 ) $on bb_3_bb_4 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_21 )
            ;;[type_cast_3017] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) phitmp1 )
            ;;[type_cast_3019] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3014_req] 
        }
      }
      bb_2_bb_4 |-> (bb_2_bb_4_PhiReq)
      ||[bb_3_bb_4_PhiReq] 
      {
        ;;[phi_stmt_3014] 
        {
          ||[phi_stmt_3014_sources] 
          {
            // sources for 			$phi iNsTr_26 := 			  ($cast ($uint<32>) iNsTr_21 ) $on bb_2_bb_4			  ($cast ($uint<32>) phitmp1 ) $on bb_3_bb_4 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_21 )
            ;;[type_cast_3017] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) phitmp1 )
            ;;[type_cast_3019] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3014_req] 
        }
      }
      bb_3_bb_4 |-> (bb_3_bb_4_PhiReq)
      $P [merge_stmt_3013_PhiReqMerge] 
      merge_stmt_3013_PhiReqMerge <-| ( bb_2_bb_4_PhiReq  bb_3_bb_4_PhiReq )
      ||[merge_stmt_3013_PhiAck] 
      {
        $T [phi_stmt_3014_ack] 
      }
      merge_stmt_3013_PhiReqMerge |-> (merge_stmt_3013_PhiAck)
      merge_stmt_3013__exit__  <-| (merge_stmt_3013_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1169  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1176
      //---------------------   merge statement  file prog.linked.opt.aa, line 1176  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_3031_PhiReqMerge] 
      merge_stmt_3031_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_3031_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3031_PhiReqMerge |-> (merge_stmt_3031_PhiAck)
      merge_stmt_3031__exit__  <-| (merge_stmt_3031_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1176  --------------------------
      assign_stmt_2847_to_assign_stmt_2850__entry__ <-| (branch_block_stmt_2844__entry__)
      assign_stmt_2853__entry__ <-| (assign_stmt_2847_to_assign_stmt_2850__exit__)
      assign_stmt_2861_to_assign_stmt_2937__entry__ <-| (assign_stmt_2853__exit__)
      if_stmt_2938__entry__ <-| (assign_stmt_2861_to_assign_stmt_2937__exit__)
      merge_stmt_2944__entry__ <-| (if_stmt_2938__exit__)
      assign_stmt_2952_to_assign_stmt_2959__entry__ <-| (merge_stmt_2944__exit__)
      bb_1_bb_2 <-| (assign_stmt_2952_to_assign_stmt_2959__exit__)
      assign_stmt_2976_to_assign_stmt_2989__entry__ <-| (merge_stmt_2961__exit__)
      if_stmt_2990__entry__ <-| (assign_stmt_2976_to_assign_stmt_2989__exit__)
      merge_stmt_2996__entry__ <-| (if_stmt_2990__exit__)
      assign_stmt_3004_to_assign_stmt_3011__entry__ <-| (merge_stmt_2996__exit__)
      bb_3_bb_4 <-| (assign_stmt_3004_to_assign_stmt_3011__exit__)
      assign_stmt_3023_to_assign_stmt_3029__entry__ <-| (merge_stmt_3013__exit__)
      return__ <-| (assign_stmt_3023_to_assign_stmt_3029__exit__)
      merge_stmt_3031__exit__ |-> (branch_block_stmt_2844__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %peak%body%
    //  file prog.linked.opt.aa, line 1148
    // constant-object-declarations for block %peak%body%
    //  file prog.linked.opt.aa, line 1153
    // constant-object-declarations for block %peak%body%
    //  file prog.linked.opt.aa, line 1164
    // constant-object-declarations for block %peak%body%
    //  file prog.linked.opt.aa, line 1169
    // constant-object-declarations for block %peak%body%
    //  file prog.linked.opt.aa, line 1176
    // constant-object-declarations for block %peak%body
    //  file prog.linked.opt.aa, line 1124
    // constant-object-declarations for block %peak
    //  file prog.linked.opt.aa, line 1119
    // constant-declarations for block %peak%body
    //  file prog.linked.opt.aa, line 1124
    // timeSinceMaxPeak
    $constant $W[LOAD_timeSinceMaxPeak_2846_word_address_0] : $pointer<memory_space_25> := _b0
    // maxPeak
    $constant $W[LOAD_maxPeak_2849_word_address_0] : $pointer<memory_space_22> := _b0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_2859_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // lastDatum
    $constant $W[LOAD_lastDatum_2872_word_address_0] : $pointer<memory_space_20> := _b0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_2898_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010011  ) )
    $constant $W[type_cast_2914_wire_constant] : $int<32> := _b00000000000000000000000000010011// 19
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_2930_wire_constant] : $int<1> := _b1// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 1143
    // constant-declarations for block %peak%body%
    //  file prog.linked.opt.aa, line 1148
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000110  ) )
    $constant $W[type_cast_2950_wire_constant] : $int<32> := _b00000000000000000000000000000110// 6
    // ( $mux iNsTr_17 iNsTr_1  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2957_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for block %peak%body%
    //  file prog.linked.opt.aa, line 1153
    // constant-declarations for phi:  			$phi ret_val__ := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_0_bb_2			  ($cast ($uint<32>) phitmp ) $on bb_1_bb_2 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1154
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_2966_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ( $mux iNsTr_15 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_1 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2973_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ( $mux iNsTr_15 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_6 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2980_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ( $mux iNsTr_10 iNsTr_3  iNsTr_20 ) 
    // if-statement  
    //  file prog.linked.opt.aa, line 1159
    // constant-declarations for block %peak%body%
    //  file prog.linked.opt.aa, line 1164
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )
    $constant $W[type_cast_3002_wire_constant] : $int<32> := _b00000000000000000000000000000010// 2
    // ( $mux iNsTr_24 ($bitcast ($uint<32>) _b00000000000000000000000000000001  )  iNsTr_21 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_3008_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // constant-declarations for block %peak%body%
    //  file prog.linked.opt.aa, line 1169
    // constant-declarations for phi:  			$phi iNsTr_26 := 			  ($cast ($uint<32>) iNsTr_21 ) $on bb_2_bb_4			  ($cast ($uint<32>) phitmp1 ) $on bb_3_bb_4 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1170
    // timeSinceMaxPeak
    $constant $W[STORE_timeSinceMaxPeak_3021_word_address_0] : $pointer<memory_space_25> := _b0
    // maxPeak
    $constant $W[STORE_maxPeak_3024_word_address_0] : $pointer<memory_space_22> := _b0
    // lastDatum
    $constant $W[STORE_lastDatum_3027_word_address_0] : $pointer<memory_space_20> := _b0
    // constant-declarations for block %peak%body%
    //  file prog.linked.opt.aa, line 1176
    // block %peak%body
    //  file prog.linked.opt.aa, line 1124
    // 		iNsTr_0 := timeSinceMaxPeak
    //  file prog.linked.opt.aa, line 1126
    // timeSinceMaxPeak
    $W[LOAD_timeSinceMaxPeak_2846_data_0] : $int<32>
    // iNsTr_0
    $W[iNsTr_0_2847] : $int<32>
    // 		iNsTr_1 := maxPeak
    //  file prog.linked.opt.aa, line 1127
    // maxPeak
    $W[LOAD_maxPeak_2849_data_0] : $int<32>
    // iNsTr_1
    $W[iNsTr_1_2850] : $int<32>
    // 		iNsTr_3 := filt_output_pipe
    //  file prog.linked.opt.aa, line 1128
    // iNsTr_3
    $W[iNsTr_3_2853] : $int<32>
    // 		iNsTr_4 := (($bitcast ($int<32>) iNsTr_0 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 1129
    // ($bitcast ($int<32>) iNsTr_0 )
    $intermediate $W[type_cast_2856_wire] : $int<32>
    // iNsTr_4
    $W[iNsTr_4_2861] : $int<1>
    // 		iNsTr_5 := ($cast ($uint<32>) iNsTr_4 )
    //  file prog.linked.opt.aa, line 1130
    // iNsTr_5
    $W[iNsTr_5_2865] : $int<32>
    // 		iNsTr_6 := (iNsTr_5 + iNsTr_0)
    //  file prog.linked.opt.aa, line 1131
    // iNsTr_6
    $W[iNsTr_6_2870] : $int<32>
    // 		iNsTr_7 := lastDatum
    //  file prog.linked.opt.aa, line 1132
    // lastDatum
    $W[LOAD_lastDatum_2872_data_0] : $int<32>
    // iNsTr_7
    $W[iNsTr_7_2873] : $int<32>
    // 		iNsTr_8 := (($bitcast ($int<32>) iNsTr_3 ) > ($bitcast ($int<32>) iNsTr_7 ))
    //  file prog.linked.opt.aa, line 1133
    // ($bitcast ($int<32>) iNsTr_3 )
    $intermediate $W[type_cast_2876_wire] : $int<32>
    // ($bitcast ($int<32>) iNsTr_7 )
    $intermediate $W[type_cast_2878_wire] : $int<32>
    // iNsTr_8
    $W[iNsTr_8_2880] : $int<1>
    // 		iNsTr_9 := (($bitcast ($int<32>) iNsTr_3 ) > ($bitcast ($int<32>) iNsTr_1 ))
    //  file prog.linked.opt.aa, line 1134
    // ($bitcast ($int<32>) iNsTr_3 )
    $intermediate $W[type_cast_2883_wire] : $int<32>
    // ($bitcast ($int<32>) iNsTr_1 )
    $intermediate $W[type_cast_2885_wire] : $int<32>
    // iNsTr_9
    $W[iNsTr_9_2887] : $int<1>
    // 		iNsTr_10 := (iNsTr_8 & iNsTr_9)
    //  file prog.linked.opt.aa, line 1135
    // iNsTr_10
    $W[iNsTr_10_2892] : $int<1>
    // 		iNsTr_11 := ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) )
    //  file prog.linked.opt.aa, line 1136
    // ($bitcast ($int<32>) iNsTr_1 )
    $intermediate $W[type_cast_2895_wire] : $int<32>
    // (($bitcast ($int<32>) iNsTr_1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
    $intermediate $W[ASHR_i32_i32_2899_wire] : $int<32>
    // iNsTr_11
    $W[iNsTr_11_2901] : $int<32>
    // 		iNsTr_12 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_11 ))
    //  file prog.linked.opt.aa, line 1137
    // ($bitcast ($int<32>) iNsTr_3 )
    $intermediate $W[type_cast_2904_wire] : $int<32>
    // ($bitcast ($int<32>) iNsTr_11 )
    $intermediate $W[type_cast_2906_wire] : $int<32>
    // iNsTr_12
    $W[iNsTr_12_2908] : $int<1>
    // 		iNsTr_13 := (($bitcast ($int<32>) iNsTr_6 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010011  ) ))
    //  file prog.linked.opt.aa, line 1138
    // ($bitcast ($int<32>) iNsTr_6 )
    $intermediate $W[type_cast_2911_wire] : $int<32>
    // iNsTr_13
    $W[iNsTr_13_2916] : $int<1>
    // 		orx_xcond := (iNsTr_12 | iNsTr_13)
    //  file prog.linked.opt.aa, line 1139
    // orx_xcond
    $W[orx_xcond_2921] : $int<1>
    // 		xx_xdemorgan := (iNsTr_8 & iNsTr_9)
    //  file prog.linked.opt.aa, line 1140
    // xx_xdemorgan
    $W[xx_xdemorgan_2926] : $int<1>
    // 		iNsTr_14 := (xx_xdemorgan ^ ($bitcast ($uint<1>) _b1  ))
    //  file prog.linked.opt.aa, line 1141
    // iNsTr_14
    $W[iNsTr_14_2932] : $int<1>
    // 		iNsTr_15 := (orx_xcond & iNsTr_14)
    //  file prog.linked.opt.aa, line 1142
    // iNsTr_15
    $W[iNsTr_15_2937] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 1143
    // 		iNsTr_17 := (($bitcast ($int<32>) iNsTr_1 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000110  ) ))
    //  file prog.linked.opt.aa, line 1150
    // ($bitcast ($int<32>) iNsTr_1 )
    $intermediate $W[type_cast_2947_wire] : $int<32>
    // iNsTr_17
    $W[iNsTr_17_2952] : $int<1>
    // 		phitmp := ( $mux iNsTr_17 iNsTr_1  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
    //  file prog.linked.opt.aa, line 1151
    // phitmp
    $W[phitmp_2959] : $int<32>
    // merge-statement  
    //  file prog.linked.opt.aa, line 1153
    // 			$phi ret_val__ := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_0_bb_2			  ($cast ($uint<32>) phitmp ) $on bb_1_bb_2 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1154
    // ($cast ($uint<32>) phitmp )
    $intermediate $W[type_cast_2968_wire] : $int<32>
    // ret_val__
    // 		iNsTr_20 := ( $mux iNsTr_15 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_1 ) 
    //  file prog.linked.opt.aa, line 1156
    // iNsTr_20
    $W[iNsTr_20_2976] : $int<32>
    // 		iNsTr_21 := ( $mux iNsTr_15 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_6 ) 
    //  file prog.linked.opt.aa, line 1157
    // iNsTr_21
    $W[iNsTr_21_2983] : $int<32>
    // 		iNsTr_22 := ( $mux iNsTr_10 iNsTr_3  iNsTr_20 ) 
    //  file prog.linked.opt.aa, line 1158
    // iNsTr_22
    $W[iNsTr_22_2989] : $int<32>
    // if statement  
    //  file prog.linked.opt.aa, line 1159
    // 		iNsTr_24 := (($bitcast ($int<32>) iNsTr_22 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    //  file prog.linked.opt.aa, line 1166
    // ($bitcast ($int<32>) iNsTr_22 )
    $intermediate $W[type_cast_2999_wire] : $int<32>
    // iNsTr_24
    $W[iNsTr_24_3004] : $int<1>
    // 		phitmp1 := ( $mux iNsTr_24 ($bitcast ($uint<32>) _b00000000000000000000000000000001  )  iNsTr_21 ) 
    //  file prog.linked.opt.aa, line 1167
    // phitmp1
    $W[phitmp1_3011] : $int<32>
    // merge-statement  
    //  file prog.linked.opt.aa, line 1169
    // 			$phi iNsTr_26 := 			  ($cast ($uint<32>) iNsTr_21 ) $on bb_2_bb_4			  ($cast ($uint<32>) phitmp1 ) $on bb_3_bb_4 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1170
    // ($cast ($uint<32>) iNsTr_21 )
    $intermediate $W[type_cast_3017_wire] : $int<32>
    // ($cast ($uint<32>) phitmp1 )
    $intermediate $W[type_cast_3019_wire] : $int<32>
    // iNsTr_26
    $W[iNsTr_26_3014] : $int<32>
    // 		timeSinceMaxPeak := iNsTr_26
    //  file prog.linked.opt.aa, line 1172
    // timeSinceMaxPeak
    $constant $W[STORE_timeSinceMaxPeak_3021_word_address_0] : $pointer<memory_space_25> := _b0
    $W[STORE_timeSinceMaxPeak_3021_data_0] : $int<32>
    // 		maxPeak := iNsTr_22
    //  file prog.linked.opt.aa, line 1173
    // maxPeak
    $constant $W[STORE_maxPeak_3024_word_address_0] : $pointer<memory_space_22> := _b0
    $W[STORE_maxPeak_3024_data_0] : $int<32>
    // 		lastDatum := iNsTr_3
    //  file prog.linked.opt.aa, line 1174
    // lastDatum
    $constant $W[STORE_lastDatum_3027_word_address_0] : $pointer<memory_space_20> := _b0
    $W[STORE_lastDatum_3027_data_0] : $int<32>
    // datapath-instances for block %peak%body
    //  file prog.linked.opt.aa, line 1124
    // 		iNsTr_0 := timeSinceMaxPeak
    //  file prog.linked.opt.aa, line 1126
    // timeSinceMaxPeak
    $load [LOAD_timeSinceMaxPeak_2846_load_0] $from memory_space_25 (LOAD_timeSinceMaxPeak_2846_word_address_0) (LOAD_timeSinceMaxPeak_2846_data_0) 
    $delay LOAD_timeSinceMaxPeak_2846_load_0 1
    &/ [LOAD_timeSinceMaxPeak_2846_gather_scatter] (LOAD_timeSinceMaxPeak_2846_data_0) (iNsTr_0_2847) 
    // 		iNsTr_1 := maxPeak
    //  file prog.linked.opt.aa, line 1127
    // maxPeak
    $load [LOAD_maxPeak_2849_load_0] $from memory_space_22 (LOAD_maxPeak_2849_word_address_0) (LOAD_maxPeak_2849_data_0) 
    $delay LOAD_maxPeak_2849_load_0 1
    &/ [LOAD_maxPeak_2849_gather_scatter] (LOAD_maxPeak_2849_data_0) (iNsTr_1_2850) 
    // 		iNsTr_3 := filt_output_pipe
    //  file prog.linked.opt.aa, line 1128
    // filt_output_pipe
    $ioport $in [RPIPE_filt_output_pipe_2852_inst] (filt_output_pipe) (iNsTr_3_2853) 
    // 		iNsTr_4 := (($bitcast ($int<32>) iNsTr_0 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 1129
    // ($bitcast ($int<32>) iNsTr_0 )
    $S:=$U [type_cast_2856_inst] (iNsTr_0_2847) (type_cast_2856_wire)   $flowthrough
    $delay type_cast_2856_inst 0
    // (($bitcast ($int<32>) iNsTr_0 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    $S>$S[SGT_i32_u1_2860_inst] (type_cast_2856_wire type_cast_2859_wire_constant) (iNsTr_4_2861) 
    $delay SGT_i32_u1_2860_inst 1
    // 		iNsTr_5 := ($cast ($uint<32>) iNsTr_4 )
    //  file prog.linked.opt.aa, line 1130
    // ($cast ($uint<32>) iNsTr_4 )
    # := [type_cast_2864_inst] (iNsTr_4_2861) (iNsTr_5_2865) 
    $delay type_cast_2864_inst 1
    // 		iNsTr_6 := (iNsTr_5 + iNsTr_0)
    //  file prog.linked.opt.aa, line 1131
    // (iNsTr_5 + iNsTr_0)
    +[ADD_u32_u32_2869_inst] (iNsTr_5_2865 iNsTr_0_2847) (iNsTr_6_2870) 
    $delay ADD_u32_u32_2869_inst 1
    // 		iNsTr_7 := lastDatum
    //  file prog.linked.opt.aa, line 1132
    // lastDatum
    $load [LOAD_lastDatum_2872_load_0] $from memory_space_20 (LOAD_lastDatum_2872_word_address_0) (LOAD_lastDatum_2872_data_0) 
    $delay LOAD_lastDatum_2872_load_0 1
    &/ [LOAD_lastDatum_2872_gather_scatter] (LOAD_lastDatum_2872_data_0) (iNsTr_7_2873) 
    // 		iNsTr_8 := (($bitcast ($int<32>) iNsTr_3 ) > ($bitcast ($int<32>) iNsTr_7 ))
    //  file prog.linked.opt.aa, line 1133
    // ($bitcast ($int<32>) iNsTr_3 )
    $S:=$U [type_cast_2876_inst] (iNsTr_3_2853) (type_cast_2876_wire)   $flowthrough
    $delay type_cast_2876_inst 0
    // ($bitcast ($int<32>) iNsTr_7 )
    $S:=$U [type_cast_2878_inst] (iNsTr_7_2873) (type_cast_2878_wire)   $flowthrough
    $delay type_cast_2878_inst 0
    // (($bitcast ($int<32>) iNsTr_3 ) > ($bitcast ($int<32>) iNsTr_7 ))
    $S>$S[SGT_i32_u1_2879_inst] (type_cast_2876_wire type_cast_2878_wire) (iNsTr_8_2880) 
    $delay SGT_i32_u1_2879_inst 1
    // 		iNsTr_9 := (($bitcast ($int<32>) iNsTr_3 ) > ($bitcast ($int<32>) iNsTr_1 ))
    //  file prog.linked.opt.aa, line 1134
    // ($bitcast ($int<32>) iNsTr_3 )
    $S:=$U [type_cast_2883_inst] (iNsTr_3_2853) (type_cast_2883_wire)   $flowthrough
    $delay type_cast_2883_inst 0
    // ($bitcast ($int<32>) iNsTr_1 )
    $S:=$U [type_cast_2885_inst] (iNsTr_1_2850) (type_cast_2885_wire)   $flowthrough
    $delay type_cast_2885_inst 0
    // (($bitcast ($int<32>) iNsTr_3 ) > ($bitcast ($int<32>) iNsTr_1 ))
    $S>$S[SGT_i32_u1_2886_inst] (type_cast_2883_wire type_cast_2885_wire) (iNsTr_9_2887) 
    $delay SGT_i32_u1_2886_inst 1
    // 		iNsTr_10 := (iNsTr_8 & iNsTr_9)
    //  file prog.linked.opt.aa, line 1135
    // (iNsTr_8 & iNsTr_9)
    &[AND_u1_u1_2891_inst] (iNsTr_8_2880 iNsTr_9_2887) (iNsTr_10_2892) 
    $delay AND_u1_u1_2891_inst 1
    // 		iNsTr_11 := ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) )
    //  file prog.linked.opt.aa, line 1136
    // ($bitcast ($int<32>) iNsTr_1 )
    $S:=$U [type_cast_2895_inst] (iNsTr_1_2850) (type_cast_2895_wire)   $flowthrough
    $delay type_cast_2895_inst 0
    // (($bitcast ($int<32>) iNsTr_1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
    $S>>[ASHR_i32_i32_2899_inst] (type_cast_2895_wire type_cast_2898_wire_constant) (ASHR_i32_i32_2899_wire)  $flowthrough
    $delay ASHR_i32_i32_2899_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) )
    # := [type_cast_2900_inst] (ASHR_i32_i32_2899_wire) (iNsTr_11_2901) 
    $delay type_cast_2900_inst 1
    // 		iNsTr_12 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_11 ))
    //  file prog.linked.opt.aa, line 1137
    // ($bitcast ($int<32>) iNsTr_3 )
    $S:=$U [type_cast_2904_inst] (iNsTr_3_2853) (type_cast_2904_wire)   $flowthrough
    $delay type_cast_2904_inst 0
    // ($bitcast ($int<32>) iNsTr_11 )
    $S:=$U [type_cast_2906_inst] (iNsTr_11_2901) (type_cast_2906_wire)   $flowthrough
    $delay type_cast_2906_inst 0
    // (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_11 ))
    $S<$S[SLT_i32_u1_2907_inst] (type_cast_2904_wire type_cast_2906_wire) (iNsTr_12_2908) 
    $delay SLT_i32_u1_2907_inst 1
    // 		iNsTr_13 := (($bitcast ($int<32>) iNsTr_6 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010011  ) ))
    //  file prog.linked.opt.aa, line 1138
    // ($bitcast ($int<32>) iNsTr_6 )
    $S:=$U [type_cast_2911_inst] (iNsTr_6_2870) (type_cast_2911_wire)   $flowthrough
    $delay type_cast_2911_inst 0
    // (($bitcast ($int<32>) iNsTr_6 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010011  ) ))
    $S>$S[SGT_i32_u1_2915_inst] (type_cast_2911_wire type_cast_2914_wire_constant) (iNsTr_13_2916) 
    $delay SGT_i32_u1_2915_inst 1
    // 		orx_xcond := (iNsTr_12 | iNsTr_13)
    //  file prog.linked.opt.aa, line 1139
    // (iNsTr_12 | iNsTr_13)
    |[OR_u1_u1_2920_inst] (iNsTr_12_2908 iNsTr_13_2916) (orx_xcond_2921) 
    $delay OR_u1_u1_2920_inst 1
    // 		xx_xdemorgan := (iNsTr_8 & iNsTr_9)
    //  file prog.linked.opt.aa, line 1140
    // (iNsTr_8 & iNsTr_9)
    &[AND_u1_u1_2925_inst] (iNsTr_8_2880 iNsTr_9_2887) (xx_xdemorgan_2926) 
    $delay AND_u1_u1_2925_inst 1
    // 		iNsTr_14 := (xx_xdemorgan ^ ($bitcast ($uint<1>) _b1  ))
    //  file prog.linked.opt.aa, line 1141
    // (xx_xdemorgan ^ ($bitcast ($uint<1>) _b1  ))
    ^[XOR_u1_u1_2931_inst] (xx_xdemorgan_2926 type_cast_2930_wire_constant) (iNsTr_14_2932) 
    $delay XOR_u1_u1_2931_inst 1
    // 		iNsTr_15 := (orx_xcond & iNsTr_14)
    //  file prog.linked.opt.aa, line 1142
    // (orx_xcond & iNsTr_14)
    &[AND_u1_u1_2936_inst] (orx_xcond_2921 iNsTr_14_2932) (iNsTr_15_2937) 
    $delay AND_u1_u1_2936_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1143
    ==0? [if_stmt_2938_branch] (iNsTr_15_2937)
    // 		iNsTr_17 := (($bitcast ($int<32>) iNsTr_1 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000110  ) ))
    //  file prog.linked.opt.aa, line 1150
    // ($bitcast ($int<32>) iNsTr_1 )
    $S:=$U [type_cast_2947_inst] (iNsTr_1_2850) (type_cast_2947_wire)   $flowthrough
    $delay type_cast_2947_inst 0
    // (($bitcast ($int<32>) iNsTr_1 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000110  ) ))
    $S>$S[SGT_i32_u1_2951_inst] (type_cast_2947_wire type_cast_2950_wire_constant) (iNsTr_17_2952) 
    $delay SGT_i32_u1_2951_inst 1
    // 		phitmp := ( $mux iNsTr_17 iNsTr_1  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
    //  file prog.linked.opt.aa, line 1151
    // ( $mux iNsTr_17 iNsTr_1  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
    ? [MUX_2958_inst] (iNsTr_17_2952 iNsTr_1_2850 type_cast_2957_wire_constant) (phitmp_2959) 
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1153
    // 			$phi ret_val__ := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_0_bb_2			  ($cast ($uint<32>) phitmp ) $on bb_1_bb_2 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1154
    // ($cast ($uint<32>) phitmp )
    # := [type_cast_2968_inst] (phitmp_2959) (type_cast_2968_wire) 
    $delay type_cast_2968_inst 1
    $phi [phi_stmt_2962] (type_cast_2966_wire_constant type_cast_2968_wire) ( ret_val__ )
    // 		iNsTr_20 := ( $mux iNsTr_15 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_1 ) 
    //  file prog.linked.opt.aa, line 1156
    // ( $mux iNsTr_15 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_1 ) 
    ? [MUX_2975_inst] (iNsTr_15_2937 type_cast_2973_wire_constant iNsTr_1_2850) (iNsTr_20_2976) 
    // 		iNsTr_21 := ( $mux iNsTr_15 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_6 ) 
    //  file prog.linked.opt.aa, line 1157
    // ( $mux iNsTr_15 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_6 ) 
    ? [MUX_2982_inst] (iNsTr_15_2937 type_cast_2980_wire_constant iNsTr_6_2870) (iNsTr_21_2983) 
    // 		iNsTr_22 := ( $mux iNsTr_10 iNsTr_3  iNsTr_20 ) 
    //  file prog.linked.opt.aa, line 1158
    // ( $mux iNsTr_10 iNsTr_3  iNsTr_20 ) 
    ? [MUX_2988_inst] (iNsTr_10_2892 iNsTr_3_2853 iNsTr_20_2976) (iNsTr_22_2989) 
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1159
    ==0? [if_stmt_2990_branch] (iNsTr_10_2892)
    // 		iNsTr_24 := (($bitcast ($int<32>) iNsTr_22 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    //  file prog.linked.opt.aa, line 1166
    // ($bitcast ($int<32>) iNsTr_22 )
    $S:=$U [type_cast_2999_inst] (iNsTr_22_2989) (type_cast_2999_wire)   $flowthrough
    $delay type_cast_2999_inst 0
    // (($bitcast ($int<32>) iNsTr_22 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    $S>$S[SGT_i32_u1_3003_inst] (type_cast_2999_wire type_cast_3002_wire_constant) (iNsTr_24_3004) 
    $delay SGT_i32_u1_3003_inst 1
    // 		phitmp1 := ( $mux iNsTr_24 ($bitcast ($uint<32>) _b00000000000000000000000000000001  )  iNsTr_21 ) 
    //  file prog.linked.opt.aa, line 1167
    // ( $mux iNsTr_24 ($bitcast ($uint<32>) _b00000000000000000000000000000001  )  iNsTr_21 ) 
    ? [MUX_3010_inst] (iNsTr_24_3004 type_cast_3008_wire_constant iNsTr_21_2983) (phitmp1_3011) 
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1169
    // 			$phi iNsTr_26 := 			  ($cast ($uint<32>) iNsTr_21 ) $on bb_2_bb_4			  ($cast ($uint<32>) phitmp1 ) $on bb_3_bb_4 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1170
    // ($cast ($uint<32>) iNsTr_21 )
    # := [type_cast_3017_inst] (iNsTr_21_2983) (type_cast_3017_wire) 
    $delay type_cast_3017_inst 1
    // ($cast ($uint<32>) phitmp1 )
    # := [type_cast_3019_inst] (phitmp1_3011) (type_cast_3019_wire) 
    $delay type_cast_3019_inst 1
    $phi [phi_stmt_3014] (type_cast_3017_wire type_cast_3019_wire) ( iNsTr_26_3014 )
    // 		timeSinceMaxPeak := iNsTr_26
    //  file prog.linked.opt.aa, line 1172
    // timeSinceMaxPeak
    $store [STORE_timeSinceMaxPeak_3021_store_0] $to memory_space_25 (STORE_timeSinceMaxPeak_3021_word_address_0 STORE_timeSinceMaxPeak_3021_data_0) 
    $delay STORE_timeSinceMaxPeak_3021_store_0 1
    &/ [STORE_timeSinceMaxPeak_3021_gather_scatter] (iNsTr_26_3014) (STORE_timeSinceMaxPeak_3021_data_0) 
    // 		maxPeak := iNsTr_22
    //  file prog.linked.opt.aa, line 1173
    // maxPeak
    $store [STORE_maxPeak_3024_store_0] $to memory_space_22 (STORE_maxPeak_3024_word_address_0 STORE_maxPeak_3024_data_0) 
    $delay STORE_maxPeak_3024_store_0 1
    &/ [STORE_maxPeak_3024_gather_scatter] (iNsTr_22_2989) (STORE_maxPeak_3024_data_0) 
    // 		lastDatum := iNsTr_3
    //  file prog.linked.opt.aa, line 1174
    // lastDatum
    $store [STORE_lastDatum_3027_store_0] $to memory_space_20 (STORE_lastDatum_3027_word_address_0 STORE_lastDatum_3027_data_0) 
    $delay STORE_lastDatum_3027_store_0 1
    &/ [STORE_lastDatum_3027_gather_scatter] (iNsTr_3_2853) (STORE_lastDatum_3027_data_0) 
  }
  // end data-path
  // 		iNsTr_0 := timeSinceMaxPeak
  //  file prog.linked.opt.aa, line 1126
  // timeSinceMaxPeak
  LOAD_timeSinceMaxPeak_2846_gather_scatter <=> (branch_block_stmt_2844/assign_stmt_2847_to_assign_stmt_2850/LOAD_timeSinceMaxPeak_2846_Update/LOAD_timeSinceMaxPeak_2846_Merge/merge_req) (branch_block_stmt_2844/assign_stmt_2847_to_assign_stmt_2850/LOAD_timeSinceMaxPeak_2846_Update/LOAD_timeSinceMaxPeak_2846_Merge/merge_ack)
  LOAD_timeSinceMaxPeak_2846_load_0 <=> (branch_block_stmt_2844/assign_stmt_2847_to_assign_stmt_2850/LOAD_timeSinceMaxPeak_2846_Sample/word_access_start/word_0/rr branch_block_stmt_2844/assign_stmt_2847_to_assign_stmt_2850/LOAD_timeSinceMaxPeak_2846_Update/word_access_complete/word_0/cr) (branch_block_stmt_2844/assign_stmt_2847_to_assign_stmt_2850/LOAD_timeSinceMaxPeak_2846_Sample/word_access_start/word_0/ra branch_block_stmt_2844/assign_stmt_2847_to_assign_stmt_2850/LOAD_timeSinceMaxPeak_2846_Update/word_access_complete/word_0/ca)
  // 		iNsTr_1 := maxPeak
  //  file prog.linked.opt.aa, line 1127
  // maxPeak
  LOAD_maxPeak_2849_gather_scatter <=> (branch_block_stmt_2844/assign_stmt_2847_to_assign_stmt_2850/LOAD_maxPeak_2849_Update/LOAD_maxPeak_2849_Merge/merge_req) (branch_block_stmt_2844/assign_stmt_2847_to_assign_stmt_2850/LOAD_maxPeak_2849_Update/LOAD_maxPeak_2849_Merge/merge_ack)
  LOAD_maxPeak_2849_load_0 <=> (branch_block_stmt_2844/assign_stmt_2847_to_assign_stmt_2850/LOAD_maxPeak_2849_Sample/word_access_start/word_0/rr branch_block_stmt_2844/assign_stmt_2847_to_assign_stmt_2850/LOAD_maxPeak_2849_Update/word_access_complete/word_0/cr) (branch_block_stmt_2844/assign_stmt_2847_to_assign_stmt_2850/LOAD_maxPeak_2849_Sample/word_access_start/word_0/ra branch_block_stmt_2844/assign_stmt_2847_to_assign_stmt_2850/LOAD_maxPeak_2849_Update/word_access_complete/word_0/ca)
  // 		iNsTr_3 := filt_output_pipe
  //  file prog.linked.opt.aa, line 1128
  // filt_output_pipe
  RPIPE_filt_output_pipe_2852_inst <=> (branch_block_stmt_2844/assign_stmt_2853/RPIPE_filt_output_pipe_2852_Sample/rr branch_block_stmt_2844/assign_stmt_2853/RPIPE_filt_output_pipe_2852_Update/cr) (branch_block_stmt_2844/assign_stmt_2853/RPIPE_filt_output_pipe_2852_Sample/ra branch_block_stmt_2844/assign_stmt_2853/RPIPE_filt_output_pipe_2852_Update/ca)
  // 		iNsTr_4 := (($bitcast ($int<32>) iNsTr_0 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.linked.opt.aa, line 1129
  // (($bitcast ($int<32>) iNsTr_0 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) iNsTr_0 )
  type_cast_2856_inst <=> (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2856_Sample/rr branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2856_Update/cr) (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2856_Sample/ra branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2856_Update/ca)
  SGT_i32_u1_2860_inst <=> (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/SGT_i32_u1_2860_Sample/rr branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/SGT_i32_u1_2860_Update/cr) (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/SGT_i32_u1_2860_Sample/ra branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/SGT_i32_u1_2860_Update/ca)
  // 		iNsTr_5 := ($cast ($uint<32>) iNsTr_4 )
  //  file prog.linked.opt.aa, line 1130
  // ($cast ($uint<32>) iNsTr_4 )
  type_cast_2864_inst <=> (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2864_Sample/rr branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2864_Update/cr) (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2864_Sample/ra branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2864_Update/ca)
  // 		iNsTr_6 := (iNsTr_5 + iNsTr_0)
  //  file prog.linked.opt.aa, line 1131
  // (iNsTr_5 + iNsTr_0)
  ADD_u32_u32_2869_inst <=> (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/ADD_u32_u32_2869_Sample/rr branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/ADD_u32_u32_2869_Update/cr) (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/ADD_u32_u32_2869_Sample/ra branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/ADD_u32_u32_2869_Update/ca)
  // 		iNsTr_7 := lastDatum
  //  file prog.linked.opt.aa, line 1132
  // lastDatum
  LOAD_lastDatum_2872_gather_scatter <=> (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/LOAD_lastDatum_2872_Update/LOAD_lastDatum_2872_Merge/merge_req) (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/LOAD_lastDatum_2872_Update/LOAD_lastDatum_2872_Merge/merge_ack)
  LOAD_lastDatum_2872_load_0 <=> (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/LOAD_lastDatum_2872_Sample/word_access_start/word_0/rr branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/LOAD_lastDatum_2872_Update/word_access_complete/word_0/cr) (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/LOAD_lastDatum_2872_Sample/word_access_start/word_0/ra branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/LOAD_lastDatum_2872_Update/word_access_complete/word_0/ca)
  // 		iNsTr_8 := (($bitcast ($int<32>) iNsTr_3 ) > ($bitcast ($int<32>) iNsTr_7 ))
  //  file prog.linked.opt.aa, line 1133
  // (($bitcast ($int<32>) iNsTr_3 ) > ($bitcast ($int<32>) iNsTr_7 ))
  // ($bitcast ($int<32>) iNsTr_3 )
  type_cast_2876_inst <=> (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2876_Sample/rr branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2876_Update/cr) (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2876_Sample/ra branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2876_Update/ca)
  // ($bitcast ($int<32>) iNsTr_7 )
  type_cast_2878_inst <=> (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2878_Sample/rr branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2878_Update/cr) (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2878_Sample/ra branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2878_Update/ca)
  SGT_i32_u1_2879_inst <=> (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/SGT_i32_u1_2879_Sample/rr branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/SGT_i32_u1_2879_Update/cr) (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/SGT_i32_u1_2879_Sample/ra branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/SGT_i32_u1_2879_Update/ca)
  // 		iNsTr_9 := (($bitcast ($int<32>) iNsTr_3 ) > ($bitcast ($int<32>) iNsTr_1 ))
  //  file prog.linked.opt.aa, line 1134
  // (($bitcast ($int<32>) iNsTr_3 ) > ($bitcast ($int<32>) iNsTr_1 ))
  // ($bitcast ($int<32>) iNsTr_3 )
  type_cast_2883_inst <=> (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2883_Sample/rr branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2883_Update/cr) (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2883_Sample/ra branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2883_Update/ca)
  // ($bitcast ($int<32>) iNsTr_1 )
  type_cast_2885_inst <=> (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2885_Sample/rr branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2885_Update/cr) (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2885_Sample/ra branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2885_Update/ca)
  SGT_i32_u1_2886_inst <=> (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/SGT_i32_u1_2886_Sample/rr branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/SGT_i32_u1_2886_Update/cr) (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/SGT_i32_u1_2886_Sample/ra branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/SGT_i32_u1_2886_Update/ca)
  // 		iNsTr_10 := (iNsTr_8 & iNsTr_9)
  //  file prog.linked.opt.aa, line 1135
  // (iNsTr_8 & iNsTr_9)
  AND_u1_u1_2891_inst <=> (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/AND_u1_u1_2891_Sample/rr branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/AND_u1_u1_2891_Update/cr) (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/AND_u1_u1_2891_Sample/ra branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/AND_u1_u1_2891_Update/ca)
  // 		iNsTr_11 := ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) )
  //  file prog.linked.opt.aa, line 1136
  // (($bitcast ($int<32>) iNsTr_1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
  // ($bitcast ($int<32>) iNsTr_1 )
  type_cast_2895_inst <=> (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2895_Sample/rr branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2895_Update/cr) (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2895_Sample/ra branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2895_Update/ca)
  ASHR_i32_i32_2899_inst <=> (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/ASHR_i32_i32_2899_Sample/rr branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/ASHR_i32_i32_2899_Update/cr) (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/ASHR_i32_i32_2899_Sample/ra branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/ASHR_i32_i32_2899_Update/ca)
  // ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) )
  type_cast_2900_inst <=> (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2900_Sample/rr branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2900_Update/cr) (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2900_Sample/ra branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2900_Update/ca)
  // 		iNsTr_12 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_11 ))
  //  file prog.linked.opt.aa, line 1137
  // (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_11 ))
  // ($bitcast ($int<32>) iNsTr_3 )
  type_cast_2904_inst <=> (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2904_Sample/rr branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2904_Update/cr) (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2904_Sample/ra branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2904_Update/ca)
  // ($bitcast ($int<32>) iNsTr_11 )
  type_cast_2906_inst <=> (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2906_Sample/rr branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2906_Update/cr) (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2906_Sample/ra branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2906_Update/ca)
  SLT_i32_u1_2907_inst <=> (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/SLT_i32_u1_2907_Sample/rr branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/SLT_i32_u1_2907_Update/cr) (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/SLT_i32_u1_2907_Sample/ra branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/SLT_i32_u1_2907_Update/ca)
  // 		iNsTr_13 := (($bitcast ($int<32>) iNsTr_6 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010011  ) ))
  //  file prog.linked.opt.aa, line 1138
  // (($bitcast ($int<32>) iNsTr_6 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010011  ) ))
  // ($bitcast ($int<32>) iNsTr_6 )
  type_cast_2911_inst <=> (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2911_Sample/rr branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2911_Update/cr) (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2911_Sample/ra branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/type_cast_2911_Update/ca)
  SGT_i32_u1_2915_inst <=> (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/SGT_i32_u1_2915_Sample/rr branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/SGT_i32_u1_2915_Update/cr) (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/SGT_i32_u1_2915_Sample/ra branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/SGT_i32_u1_2915_Update/ca)
  // 		orx_xcond := (iNsTr_12 | iNsTr_13)
  //  file prog.linked.opt.aa, line 1139
  // (iNsTr_12 | iNsTr_13)
  OR_u1_u1_2920_inst <=> (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/OR_u1_u1_2920_Sample/rr branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/OR_u1_u1_2920_Update/cr) (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/OR_u1_u1_2920_Sample/ra branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/OR_u1_u1_2920_Update/ca)
  // 		xx_xdemorgan := (iNsTr_8 & iNsTr_9)
  //  file prog.linked.opt.aa, line 1140
  // (iNsTr_8 & iNsTr_9)
  AND_u1_u1_2925_inst <=> (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/AND_u1_u1_2925_Sample/rr branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/AND_u1_u1_2925_Update/cr) (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/AND_u1_u1_2925_Sample/ra branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/AND_u1_u1_2925_Update/ca)
  // 		iNsTr_14 := (xx_xdemorgan ^ ($bitcast ($uint<1>) _b1  ))
  //  file prog.linked.opt.aa, line 1141
  // (xx_xdemorgan ^ ($bitcast ($uint<1>) _b1  ))
  XOR_u1_u1_2931_inst <=> (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/XOR_u1_u1_2931_Sample/rr branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/XOR_u1_u1_2931_Update/cr) (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/XOR_u1_u1_2931_Sample/ra branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/XOR_u1_u1_2931_Update/ca)
  // 		iNsTr_15 := (orx_xcond & iNsTr_14)
  //  file prog.linked.opt.aa, line 1142
  // (orx_xcond & iNsTr_14)
  AND_u1_u1_2936_inst <=> (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/AND_u1_u1_2936_Sample/rr branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/AND_u1_u1_2936_Update/cr) (branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/AND_u1_u1_2936_Sample/ra branch_block_stmt_2844/assign_stmt_2861_to_assign_stmt_2937/AND_u1_u1_2936_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1143
  if_stmt_2938_branch <=> (branch_block_stmt_2844/if_stmt_2938_eval_test/branch_req) (branch_block_stmt_2844/if_stmt_2938_else_link/else_choice_transition branch_block_stmt_2844/if_stmt_2938_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1148
  // 		iNsTr_17 := (($bitcast ($int<32>) iNsTr_1 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000110  ) ))
  //  file prog.linked.opt.aa, line 1150
  // (($bitcast ($int<32>) iNsTr_1 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000110  ) ))
  // ($bitcast ($int<32>) iNsTr_1 )
  type_cast_2947_inst <=> (branch_block_stmt_2844/assign_stmt_2952_to_assign_stmt_2959/type_cast_2947_Sample/rr branch_block_stmt_2844/assign_stmt_2952_to_assign_stmt_2959/type_cast_2947_Update/cr) (branch_block_stmt_2844/assign_stmt_2952_to_assign_stmt_2959/type_cast_2947_Sample/ra branch_block_stmt_2844/assign_stmt_2952_to_assign_stmt_2959/type_cast_2947_Update/ca)
  SGT_i32_u1_2951_inst <=> (branch_block_stmt_2844/assign_stmt_2952_to_assign_stmt_2959/SGT_i32_u1_2951_Sample/rr branch_block_stmt_2844/assign_stmt_2952_to_assign_stmt_2959/SGT_i32_u1_2951_Update/cr) (branch_block_stmt_2844/assign_stmt_2952_to_assign_stmt_2959/SGT_i32_u1_2951_Sample/ra branch_block_stmt_2844/assign_stmt_2952_to_assign_stmt_2959/SGT_i32_u1_2951_Update/ca)
  // 		phitmp := ( $mux iNsTr_17 iNsTr_1  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
  //  file prog.linked.opt.aa, line 1151
  // ( $mux iNsTr_17 iNsTr_1  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
  MUX_2958_inst <=> (branch_block_stmt_2844/assign_stmt_2952_to_assign_stmt_2959/MUX_2958_start/req branch_block_stmt_2844/assign_stmt_2952_to_assign_stmt_2959/MUX_2958_complete/req) (branch_block_stmt_2844/assign_stmt_2952_to_assign_stmt_2959/MUX_2958_start/ack branch_block_stmt_2844/assign_stmt_2952_to_assign_stmt_2959/MUX_2958_complete/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1153
  // ($cast ($uint<32>) phitmp )
  type_cast_2968_inst <=> (branch_block_stmt_2844/bb_1_bb_2_PhiReq/phi_stmt_2962/phi_stmt_2962_sources/type_cast_2968/SplitProtocol/Sample/rr branch_block_stmt_2844/bb_1_bb_2_PhiReq/phi_stmt_2962/phi_stmt_2962_sources/type_cast_2968/SplitProtocol/Update/cr) (branch_block_stmt_2844/bb_1_bb_2_PhiReq/phi_stmt_2962/phi_stmt_2962_sources/type_cast_2968/SplitProtocol/Sample/ra branch_block_stmt_2844/bb_1_bb_2_PhiReq/phi_stmt_2962/phi_stmt_2962_sources/type_cast_2968/SplitProtocol/Update/ca)
  phi_stmt_2962 <=> (branch_block_stmt_2844/bb_0_bb_2_PhiReq/phi_stmt_2962/phi_stmt_2962_req branch_block_stmt_2844/bb_1_bb_2_PhiReq/phi_stmt_2962/phi_stmt_2962_req) (branch_block_stmt_2844/merge_stmt_2961_PhiAck/phi_stmt_2962_ack)
  // 		iNsTr_20 := ( $mux iNsTr_15 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_1 ) 
  //  file prog.linked.opt.aa, line 1156
  // ( $mux iNsTr_15 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_1 ) 
  MUX_2975_inst <=> (branch_block_stmt_2844/assign_stmt_2976_to_assign_stmt_2989/MUX_2975_start/req branch_block_stmt_2844/assign_stmt_2976_to_assign_stmt_2989/MUX_2975_complete/req) (branch_block_stmt_2844/assign_stmt_2976_to_assign_stmt_2989/MUX_2975_start/ack branch_block_stmt_2844/assign_stmt_2976_to_assign_stmt_2989/MUX_2975_complete/ack)
  // 		iNsTr_21 := ( $mux iNsTr_15 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_6 ) 
  //  file prog.linked.opt.aa, line 1157
  // ( $mux iNsTr_15 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_6 ) 
  MUX_2982_inst <=> (branch_block_stmt_2844/assign_stmt_2976_to_assign_stmt_2989/MUX_2982_start/req branch_block_stmt_2844/assign_stmt_2976_to_assign_stmt_2989/MUX_2982_complete/req) (branch_block_stmt_2844/assign_stmt_2976_to_assign_stmt_2989/MUX_2982_start/ack branch_block_stmt_2844/assign_stmt_2976_to_assign_stmt_2989/MUX_2982_complete/ack)
  // 		iNsTr_22 := ( $mux iNsTr_10 iNsTr_3  iNsTr_20 ) 
  //  file prog.linked.opt.aa, line 1158
  // ( $mux iNsTr_10 iNsTr_3  iNsTr_20 ) 
  MUX_2988_inst <=> (branch_block_stmt_2844/assign_stmt_2976_to_assign_stmt_2989/MUX_2988_start/req branch_block_stmt_2844/assign_stmt_2976_to_assign_stmt_2989/MUX_2988_complete/req) (branch_block_stmt_2844/assign_stmt_2976_to_assign_stmt_2989/MUX_2988_start/ack branch_block_stmt_2844/assign_stmt_2976_to_assign_stmt_2989/MUX_2988_complete/ack)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1159
  if_stmt_2990_branch <=> (branch_block_stmt_2844/if_stmt_2990_eval_test/branch_req) (branch_block_stmt_2844/if_stmt_2990_else_link/else_choice_transition branch_block_stmt_2844/if_stmt_2990_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1164
  // 		iNsTr_24 := (($bitcast ($int<32>) iNsTr_22 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
  //  file prog.linked.opt.aa, line 1166
  // (($bitcast ($int<32>) iNsTr_22 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
  // ($bitcast ($int<32>) iNsTr_22 )
  type_cast_2999_inst <=> (branch_block_stmt_2844/assign_stmt_3004_to_assign_stmt_3011/type_cast_2999_Sample/rr branch_block_stmt_2844/assign_stmt_3004_to_assign_stmt_3011/type_cast_2999_Update/cr) (branch_block_stmt_2844/assign_stmt_3004_to_assign_stmt_3011/type_cast_2999_Sample/ra branch_block_stmt_2844/assign_stmt_3004_to_assign_stmt_3011/type_cast_2999_Update/ca)
  SGT_i32_u1_3003_inst <=> (branch_block_stmt_2844/assign_stmt_3004_to_assign_stmt_3011/SGT_i32_u1_3003_Sample/rr branch_block_stmt_2844/assign_stmt_3004_to_assign_stmt_3011/SGT_i32_u1_3003_Update/cr) (branch_block_stmt_2844/assign_stmt_3004_to_assign_stmt_3011/SGT_i32_u1_3003_Sample/ra branch_block_stmt_2844/assign_stmt_3004_to_assign_stmt_3011/SGT_i32_u1_3003_Update/ca)
  // 		phitmp1 := ( $mux iNsTr_24 ($bitcast ($uint<32>) _b00000000000000000000000000000001  )  iNsTr_21 ) 
  //  file prog.linked.opt.aa, line 1167
  // ( $mux iNsTr_24 ($bitcast ($uint<32>) _b00000000000000000000000000000001  )  iNsTr_21 ) 
  MUX_3010_inst <=> (branch_block_stmt_2844/assign_stmt_3004_to_assign_stmt_3011/MUX_3010_start/req branch_block_stmt_2844/assign_stmt_3004_to_assign_stmt_3011/MUX_3010_complete/req) (branch_block_stmt_2844/assign_stmt_3004_to_assign_stmt_3011/MUX_3010_start/ack branch_block_stmt_2844/assign_stmt_3004_to_assign_stmt_3011/MUX_3010_complete/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1169
  // ($cast ($uint<32>) iNsTr_21 )
  type_cast_3017_inst <=> (branch_block_stmt_2844/bb_2_bb_4_PhiReq/phi_stmt_3014/phi_stmt_3014_sources/type_cast_3017/SplitProtocol/Sample/rr branch_block_stmt_2844/bb_2_bb_4_PhiReq/phi_stmt_3014/phi_stmt_3014_sources/type_cast_3017/SplitProtocol/Update/cr) (branch_block_stmt_2844/bb_2_bb_4_PhiReq/phi_stmt_3014/phi_stmt_3014_sources/type_cast_3017/SplitProtocol/Sample/ra branch_block_stmt_2844/bb_2_bb_4_PhiReq/phi_stmt_3014/phi_stmt_3014_sources/type_cast_3017/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) phitmp1 )
  type_cast_3019_inst <=> (branch_block_stmt_2844/bb_3_bb_4_PhiReq/phi_stmt_3014/phi_stmt_3014_sources/type_cast_3019/SplitProtocol/Sample/rr branch_block_stmt_2844/bb_3_bb_4_PhiReq/phi_stmt_3014/phi_stmt_3014_sources/type_cast_3019/SplitProtocol/Update/cr) (branch_block_stmt_2844/bb_3_bb_4_PhiReq/phi_stmt_3014/phi_stmt_3014_sources/type_cast_3019/SplitProtocol/Sample/ra branch_block_stmt_2844/bb_3_bb_4_PhiReq/phi_stmt_3014/phi_stmt_3014_sources/type_cast_3019/SplitProtocol/Update/ca)
  phi_stmt_3014 <=> (branch_block_stmt_2844/bb_2_bb_4_PhiReq/phi_stmt_3014/phi_stmt_3014_req branch_block_stmt_2844/bb_3_bb_4_PhiReq/phi_stmt_3014/phi_stmt_3014_req) (branch_block_stmt_2844/merge_stmt_3013_PhiAck/phi_stmt_3014_ack)
  // 		timeSinceMaxPeak := iNsTr_26
  //  file prog.linked.opt.aa, line 1172
  // timeSinceMaxPeak
  STORE_timeSinceMaxPeak_3021_gather_scatter <=> (branch_block_stmt_2844/assign_stmt_3023_to_assign_stmt_3029/STORE_timeSinceMaxPeak_3021_Sample/STORE_timeSinceMaxPeak_3021_Split/split_req) (branch_block_stmt_2844/assign_stmt_3023_to_assign_stmt_3029/STORE_timeSinceMaxPeak_3021_Sample/STORE_timeSinceMaxPeak_3021_Split/split_ack)
  STORE_timeSinceMaxPeak_3021_store_0 <=> (branch_block_stmt_2844/assign_stmt_3023_to_assign_stmt_3029/STORE_timeSinceMaxPeak_3021_Sample/word_access_start/word_0/rr branch_block_stmt_2844/assign_stmt_3023_to_assign_stmt_3029/STORE_timeSinceMaxPeak_3021_Update/word_access_complete/word_0/cr) (branch_block_stmt_2844/assign_stmt_3023_to_assign_stmt_3029/STORE_timeSinceMaxPeak_3021_Sample/word_access_start/word_0/ra branch_block_stmt_2844/assign_stmt_3023_to_assign_stmt_3029/STORE_timeSinceMaxPeak_3021_Update/word_access_complete/word_0/ca)
  // 		maxPeak := iNsTr_22
  //  file prog.linked.opt.aa, line 1173
  // maxPeak
  STORE_maxPeak_3024_gather_scatter <=> (branch_block_stmt_2844/assign_stmt_3023_to_assign_stmt_3029/STORE_maxPeak_3024_Sample/STORE_maxPeak_3024_Split/split_req) (branch_block_stmt_2844/assign_stmt_3023_to_assign_stmt_3029/STORE_maxPeak_3024_Sample/STORE_maxPeak_3024_Split/split_ack)
  STORE_maxPeak_3024_store_0 <=> (branch_block_stmt_2844/assign_stmt_3023_to_assign_stmt_3029/STORE_maxPeak_3024_Sample/word_access_start/word_0/rr branch_block_stmt_2844/assign_stmt_3023_to_assign_stmt_3029/STORE_maxPeak_3024_Update/word_access_complete/word_0/cr) (branch_block_stmt_2844/assign_stmt_3023_to_assign_stmt_3029/STORE_maxPeak_3024_Sample/word_access_start/word_0/ra branch_block_stmt_2844/assign_stmt_3023_to_assign_stmt_3029/STORE_maxPeak_3024_Update/word_access_complete/word_0/ca)
  // 		lastDatum := iNsTr_3
  //  file prog.linked.opt.aa, line 1174
  // lastDatum
  STORE_lastDatum_3027_gather_scatter <=> (branch_block_stmt_2844/assign_stmt_3023_to_assign_stmt_3029/STORE_lastDatum_3027_Sample/STORE_lastDatum_3027_Split/split_req) (branch_block_stmt_2844/assign_stmt_3023_to_assign_stmt_3029/STORE_lastDatum_3027_Sample/STORE_lastDatum_3027_Split/split_ack)
  STORE_lastDatum_3027_store_0 <=> (branch_block_stmt_2844/assign_stmt_3023_to_assign_stmt_3029/STORE_lastDatum_3027_Sample/word_access_start/word_0/rr branch_block_stmt_2844/assign_stmt_3023_to_assign_stmt_3029/STORE_lastDatum_3027_Update/word_access_complete/word_0/cr) (branch_block_stmt_2844/assign_stmt_3023_to_assign_stmt_3029/STORE_lastDatum_3027_Sample/word_access_start/word_0/ra branch_block_stmt_2844/assign_stmt_3023_to_assign_stmt_3029/STORE_lastDatum_3027_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1176
}
$module [qrsDet] 
{
  // pipe-declarations for block %qrsDet
  //  file prog.linked.opt.aa, line 1180
  // pipe-declarations for block %qrsDet%body
  //  file prog.linked.opt.aa, line 1185
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1191
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1206
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1209
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1222
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1235
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1280
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1285
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1296
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1301
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1321
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1326
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1358
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1361
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1383
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1392
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1418
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1436
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1444
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1464
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1482
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1495
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1503
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1517
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1521
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1552
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1565
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1569
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1573
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1583
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1607
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1627
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1686
  // pipe-declarations for block %qrsDet%body%
  //  file prog.linked.opt.aa, line 1693
  $memoryspace [memory_space_26] 
  {
    $capacity 8
    $datawidth 32
    $addrwidth 4
    $maxaccesswidth 32
    // 		$storage  RSETbuff_alloc : $array[8] $of $uint<32> // memory space index = 26  base address = 0  word size = 32
    // can point into 
    // in scope  %qrsDet%body
    $object [xxqrsDetxxbodyxxRSETbuff_alloc] : $array[8] $of $int<32>
  }
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_3035] // Branch Block  file prog.linked.opt.aa, line 1185
    {
      $P [branch_block_stmt_3035__entry__]
      branch_block_stmt_3035__entry__ <-| ($entry)
      $P [branch_block_stmt_3035__exit__]
      branch_block_stmt_3035__exit__ |-> ($exit)
      $P [assign_stmt_3040__entry__] 
      $P [assign_stmt_3040__exit__] 
      $P [bb_0_bb_1]
      $P [merge_stmt_3042__exit__] 
      $P [do_while_stmt_3049__entry__] 
      $P [do_while_stmt_3049__exit__] 
      $P [bb_1_bbx_xnphx_xix_xpreheader]
      $P [merge_stmt_3093__exit__] 
      $P [bbx_xnphx_xix_xpreheader_bbx_xnphx_xi]
      $P [merge_stmt_3095__exit__] 
      $P [do_while_stmt_3102__entry__] 
      $P [do_while_stmt_3102__exit__] 
      $P [bbx_xnphx_xi_initDetx_xexit]
      $P [merge_stmt_3136__exit__] 
      $P [assign_stmt_3140_to_assign_stmt_3172__entry__] 
      $P [assign_stmt_3140_to_assign_stmt_3172__exit__] 
      $P [call_stmt_3175__entry__] 
      $P [call_stmt_3175__exit__] 
      $P [initDetx_xexit_bb_5]
      $P [merge_stmt_3177__exit__] 
      $P [assign_stmt_3307__entry__] 
      $P [assign_stmt_3307__exit__] 
      $P [assign_stmt_3310__entry__] 
      $P [assign_stmt_3310__exit__] 
      $P [call_stmt_3313__entry__] 
      $P [call_stmt_3313__exit__] 
      $P [assign_stmt_3316_to_assign_stmt_3319__entry__] 
      $P [assign_stmt_3316_to_assign_stmt_3319__exit__] 
      $P [assign_stmt_3322__entry__] 
      $P [assign_stmt_3322__exit__] 
      $P [assign_stmt_3330_to_assign_stmt_3406__entry__] 
      $P [assign_stmt_3330_to_assign_stmt_3406__exit__] 
      $P [if_stmt_3407__entry__] 
      $P [if_stmt_3407__exit__] 
      $P [merge_stmt_3413__entry__] 
      $P [merge_stmt_3413__exit__] 
      $P [assign_stmt_3421_to_assign_stmt_3428__entry__] 
      $P [assign_stmt_3421_to_assign_stmt_3428__exit__] 
      $P [bb_6_bb_7]
      $P [merge_stmt_3430__exit__] 
      $P [assign_stmt_3445_to_assign_stmt_3458__entry__] 
      $P [assign_stmt_3445_to_assign_stmt_3458__exit__] 
      $P [if_stmt_3459__entry__] 
      $P [if_stmt_3459__exit__] 
      $P [merge_stmt_3465__entry__] 
      $P [merge_stmt_3465__exit__] 
      $P [assign_stmt_3473_to_assign_stmt_3480__entry__] 
      $P [assign_stmt_3473_to_assign_stmt_3480__exit__] 
      $P [bb_8_peakx_xexit]
      $P [merge_stmt_3482__exit__] 
      $P [assign_stmt_3492_to_assign_stmt_3555__entry__] 
      $P [assign_stmt_3492_to_assign_stmt_3555__exit__] 
      $P [if_stmt_3556__entry__] 
      $P [if_stmt_3556__exit__] 
      $P [merge_stmt_3562__entry__] 
      $P [merge_stmt_3562__exit__] 
      $P [assign_stmt_3568_to_assign_stmt_3575__entry__] 
      $P [assign_stmt_3568_to_assign_stmt_3575__exit__] 
      $P [bb_10_xx_xthread]
      $P [merge_stmt_3577__exit__] 
      $P [assign_stmt_3597_to_assign_stmt_3708__entry__] 
      $P [assign_stmt_3597_to_assign_stmt_3708__exit__] 
      $P [if_stmt_3709__entry__] 
      $P [if_stmt_3709__exit__] 
      $P [merge_stmt_3715__entry__] 
      $P [merge_stmt_3715__exit__] 
      $P [xx_xpreheader_bb_15]
      $P [merge_stmt_3717__exit__] 
      $P [assign_stmt_3723_to_assign_stmt_3804__entry__] 
      $P [assign_stmt_3723_to_assign_stmt_3804__exit__] 
      $P [if_stmt_3805__entry__] 
      $P [if_stmt_3805__exit__] 
      $P [merge_stmt_3811__entry__] 
      $P [merge_stmt_3811__exit__] 
      $P [assign_stmt_3817__entry__] 
      $P [assign_stmt_3817__exit__] 
      $P [call_stmt_3820__entry__] 
      $P [call_stmt_3820__exit__] 
      $P [assign_stmt_3825_to_assign_stmt_3838__entry__] 
      $P [assign_stmt_3825_to_assign_stmt_3838__exit__] 
      $P [bb_14_bb_29]
      $P [merge_stmt_3840__exit__] 
      $P [assign_stmt_3887_to_assign_stmt_3960__entry__] 
      $P [assign_stmt_3887_to_assign_stmt_3960__exit__] 
      $P [if_stmt_3961__entry__] 
      $P [if_stmt_3961__exit__] 
      $P [merge_stmt_3967__entry__] 
      $P [merge_stmt_3967__exit__] 
      $P [assign_stmt_3987_to_assign_stmt_4030__entry__] 
      $P [assign_stmt_3987_to_assign_stmt_4030__exit__] 
      $P [if_stmt_4031__entry__] 
      $P [if_stmt_4031__exit__] 
      $P [merge_stmt_4037__entry__] 
      $P [merge_stmt_4037__exit__] 
      $P [assign_stmt_4042_to_assign_stmt_4070__entry__] 
      $P [assign_stmt_4042_to_assign_stmt_4070__exit__] 
      $P [bb_17_blsCheckx_xexit]
      $P [merge_stmt_4072__exit__] 
      $P [assign_stmt_4087_to_assign_stmt_4153__entry__] 
      $P [assign_stmt_4087_to_assign_stmt_4153__exit__] 
      $P [if_stmt_4154__entry__] 
      $P [if_stmt_4154__exit__] 
      $P [merge_stmt_4160__entry__] 
      $P [merge_stmt_4160__exit__] 
      $P [assign_stmt_4163_to_assign_stmt_4200__entry__] 
      $P [assign_stmt_4163_to_assign_stmt_4200__exit__] 
      $P [call_stmt_4203__entry__] 
      $P [call_stmt_4203__exit__] 
      $P [assign_stmt_4208_to_assign_stmt_4231__entry__] 
      $P [assign_stmt_4208_to_assign_stmt_4231__exit__] 
      $P [bb_19_bb_20]
      $P [merge_stmt_4233__exit__] 
      $P [assign_stmt_4252_to_assign_stmt_4271__entry__] 
      $P [assign_stmt_4252_to_assign_stmt_4271__exit__] 
      $P [if_stmt_4272__entry__] 
      $P [if_stmt_4272__exit__] 
      $P [merge_stmt_4278__entry__] 
      $P [merge_stmt_4278__exit__] 
      $P [assign_stmt_4287_to_assign_stmt_4310__entry__] 
      $P [assign_stmt_4287_to_assign_stmt_4310__exit__] 
      $P [bb_21_bb_22]
      $P [merge_stmt_4312__exit__] 
      $P [assign_stmt_4325_to_assign_stmt_4356__entry__] 
      $P [assign_stmt_4325_to_assign_stmt_4356__exit__] 
      $P [if_stmt_4357__entry__] 
      $P [if_stmt_4357__exit__] 
      $P [merge_stmt_4363__entry__] 
      $P [merge_stmt_4363__exit__] 
      $P [assign_stmt_4366__entry__] 
      $P [assign_stmt_4366__exit__] 
      $P [xx_xthread27_bb_25]
      $P [merge_stmt_4368__exit__] 
      $P [assign_stmt_4371_to_assign_stmt_4442__entry__] 
      $P [assign_stmt_4371_to_assign_stmt_4442__exit__] 
      $P [call_stmt_4445__entry__] 
      $P [call_stmt_4445__exit__] 
      $P [assign_stmt_4451__entry__] 
      $P [assign_stmt_4451__exit__] 
      $P [call_stmt_4454__entry__] 
      $P [call_stmt_4454__exit__] 
      $P [assign_stmt_4459_to_assign_stmt_4505__entry__] 
      $P [assign_stmt_4459_to_assign_stmt_4505__exit__] 
      $P [bb_24_bb_25]
      $P [merge_stmt_4507__exit__] 
      $P [assign_stmt_4539_to_assign_stmt_4544__entry__] 
      $P [assign_stmt_4539_to_assign_stmt_4544__exit__] 
      $P [if_stmt_4545__entry__] 
      $P [if_stmt_4545__exit__] 
      $P [merge_stmt_4551__entry__] 
      $P [merge_stmt_4551__exit__] 
      $P [assign_stmt_4557__entry__] 
      $P [assign_stmt_4557__exit__] 
      $P [bb_26_bb_28]
      $P [merge_stmt_4559__exit__] 
      $P [assign_stmt_4567__entry__] 
      $P [assign_stmt_4567__exit__] 
      $P [bb_27_bb_28]
      $P [merge_stmt_4569__exit__] 
      $P [assign_stmt_4583_to_assign_stmt_4614__entry__] 
      $P [assign_stmt_4583_to_assign_stmt_4614__exit__] 
      $P [bb_28_bb_29]
      $P [merge_stmt_4616__exit__] 
      $P [assign_stmt_4757__entry__] 
      $P [assign_stmt_4757__exit__] 
      $P [if_stmt_4758__entry__] 
      $P [if_stmt_4758__exit__] 
      $P [merge_stmt_4764__entry__] 
      $P [merge_stmt_4764__exit__] 
      $P [assign_stmt_4770_to_assign_stmt_4843__entry__] 
      $P [assign_stmt_4770_to_assign_stmt_4843__exit__] 
      $P [if_stmt_4844__entry__] 
      $P [if_stmt_4844__exit__] 
      $P [merge_stmt_4850__entry__] 
      $P [merge_stmt_4850__exit__] 
      $P [assign_stmt_4857_to_assign_stmt_5112__entry__] 
      $P [assign_stmt_4857_to_assign_stmt_5112__exit__] 
      $P [call_stmt_5115__entry__] 
      $P [call_stmt_5115__exit__] 
      $P [assign_stmt_5120_to_assign_stmt_5143__entry__] 
      $P [assign_stmt_5120_to_assign_stmt_5143__exit__] 
      $P [bb_31_bb_32]
      $P [merge_stmt_5145__exit__] 
      $P [assign_stmt_5165_to_assign_stmt_5171__entry__] 
      $P [assign_stmt_5165_to_assign_stmt_5171__exit__] 
      $P [bb_32_bb_33]
      $P [merge_stmt_5173__exit__] 
      $P [assign_stmt_5219__entry__] 
      $P [assign_stmt_5219__exit__] 
      $P [bb_33_bb_5]
      ::[assign_stmt_3040] 
      {
        // load-store dependencies..
      }
      assign_stmt_3040__entry__ |-> (assign_stmt_3040)
      assign_stmt_3040__exit__ <-| (assign_stmt_3040)
      // do-while-statement  
      //  file prog.linked.opt.aa, line 1194
      <o> [do_while_stmt_3049]  $depth 7 $buffering 2 
      {
        $P[do_while_stmt_3049__entry__] 
        $P[do_while_stmt_3049__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_3049_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          // (pipelined) PHI statement phi_stmt_3051
          // 			$phi indexx_x02x_xi := 			  ($cast ($uint<32>) iNsTr_4 ) $on $loopback			  indexx_x02x_xi_at_entry $on $entry // type of target is $uint<32>
          $T[phi_stmt_3051_loopback_trigger] 
          $T[phi_stmt_3051_loopback_sample_req_from_phi_seq] 
          $T[phi_stmt_3051_loopback_sample_req] 
          phi_stmt_3051_loopback_trigger <-& (back_edge_to_loop_body)
          phi_stmt_3051_loopback_sample_req <-& (phi_stmt_3051_loopback_sample_req_from_phi_seq)
          $T[phi_stmt_3051_entry_trigger] 
          $T[phi_stmt_3051_entry_sample_req_from_phi_seq] 
          $T[phi_stmt_3051_entry_sample_req] 
          phi_stmt_3051_entry_trigger <-& (first_time_through_loop_body)
          phi_stmt_3051_entry_sample_req <-& (phi_stmt_3051_entry_sample_req_from_phi_seq)
          $T[phi_stmt_3051_sample_start_] 
          $T[phi_stmt_3051_sample_completed_] 
          $T[phi_stmt_3051_update_start_] 
          $T[phi_stmt_3051_update_completed_] 
          phi_stmt_3051_update_start_ o<-& (phi_stmt_3051_update_completed_ 0)
          phi_stmt_3051_sample_start_ o<-& (phi_stmt_3051_sample_completed_ 1)
          $T[phi_stmt_3051_merged_reqs] 
          $transitionmerge [phi_stmt_3051_req_merge] (phi_stmt_3051_entry_sample_req phi_stmt_3051_loopback_sample_req) (phi_stmt_3051_merged_reqs)
          phi_stmt_3051_merged_reqs &-> ($null)
          // ($cast ($uint<32>) iNsTr_4 )
          $T[type_cast_3054_sample_start_] 
          $T[type_cast_3054_sample_completed_] 
          $T[type_cast_3054_update_start_] 
          $T[type_cast_3054_update_completed_] 
          // iNsTr_4
          $T[R_iNsTr_4_3053_sample_start_] 
          $T[R_iNsTr_4_3053_sample_completed_] 
          $T[R_iNsTr_4_3053_update_start_] 
          $T[R_iNsTr_4_3053_update_completed_] 
          // implicit reference
          R_iNsTr_4_3053_sample_start_ <-& ($entry)
          R_iNsTr_4_3053_sample_completed_ <-& (R_iNsTr_4_3053_sample_start_)
          R_iNsTr_4_3053_update_start_ <-& (R_iNsTr_4_3053_sample_completed_)
          R_iNsTr_4_3053_update_completed_ <-& (R_iNsTr_4_3053_update_start_)
          type_cast_3054_sample_start_ <-& (R_iNsTr_4_3053_update_completed_)
          ;;[type_cast_3054_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3054_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3054_sample_start_ &-> (type_cast_3054_Sample)
          type_cast_3054_sample_completed_ <-& (type_cast_3054_Sample)
          type_cast_3054_sample_completed_ &-> ($null)
          type_cast_3054_update_start_ &-> (type_cast_3054_Update)
          type_cast_3054_update_completed_ <-& (type_cast_3054_Update)
          // RAW reenables for iNsTr_4
          R_iNsTr_4_3053_update_start_ o<-& (type_cast_3054_sample_completed_ 1)
          // self-release: 
          type_cast_3054_sample_start_ o<-& (type_cast_3054_sample_completed_ 1)
          type_cast_3054_update_start_ o<-& (type_cast_3054_update_completed_ 0)
          phi_stmt_3051_sample_start_ <-& (type_cast_3054_update_completed_)
          // RAW reenables for ($cast ($uint<32>) iNsTr_4 )
          type_cast_3054_update_start_ o<-& (phi_stmt_3051_sample_completed_ 0)
          // indexx_x02x_xi_at_entry
          $T[R_indexx_x02x_xi_at_entry_3055_sample_start_] 
          $T[R_indexx_x02x_xi_at_entry_3055_sample_completed_] 
          $T[R_indexx_x02x_xi_at_entry_3055_update_start_] 
          $T[R_indexx_x02x_xi_at_entry_3055_update_completed_] 
          // implicit reference
          R_indexx_x02x_xi_at_entry_3055_sample_start_ <-& ($entry)
          R_indexx_x02x_xi_at_entry_3055_sample_completed_ <-& (R_indexx_x02x_xi_at_entry_3055_sample_start_)
          R_indexx_x02x_xi_at_entry_3055_update_start_ <-& (R_indexx_x02x_xi_at_entry_3055_sample_completed_)
          R_indexx_x02x_xi_at_entry_3055_update_completed_ <-& (R_indexx_x02x_xi_at_entry_3055_update_start_)
          phi_stmt_3051_sample_start_ <-& (R_indexx_x02x_xi_at_entry_3055_update_completed_)
          // RAW reenables for indexx_x02x_xi_at_entry
          R_indexx_x02x_xi_at_entry_3055_update_start_ o<-& (phi_stmt_3051_sample_completed_ 1)
          $T[phi_stmt_3051_phi_sequencer_done] 
          phi_stmt_3051_phi_sequencer_done &-> ($null)
          $phisequencer [ phi_stmt_3051_phi_seq] ( phi_stmt_3051_loopback_trigger phi_stmt_3051_entry_trigger  : phi_stmt_3051_sample_start_ : phi_stmt_3051_sample_completed_ ) ( phi_stmt_3051_loopback_sample_req_from_phi_seq phi_stmt_3051_entry_sample_req_from_phi_seq  : phi_stmt_3051_phi_sequencer_done ) 
          condition_evaluated <-& (phi_stmt_3051_sample_completed_)
          // 			scevgep5x_xi := @(NOISEbuff[indexx_x02x_xi])
          //  file prog.linked.opt.aa, line 1198
          // Source expression
          // @(NOISEbuff[indexx_x02x_xi])
          $T[addr_of_3060_sample_start_] 
          $T[addr_of_3060_sample_completed_] 
          $T[addr_of_3060_update_start_] 
          $T[addr_of_3060_update_completed_] 
          $T[array_obj_ref_3059_root_address_calculated] 
          $T[array_obj_ref_3059_offset_calculated] 
          $T[array_obj_ref_3059_index_resized_0] 
          $T[array_obj_ref_3059_index_scaled_0] 
          // indexx_x02x_xi
          $T[R_indexx_x02x_xi_3058_sample_start_] 
          $T[R_indexx_x02x_xi_3058_sample_completed_] 
          $T[R_indexx_x02x_xi_3058_update_start_] 
          $T[R_indexx_x02x_xi_3058_update_completed_] 
          // implicit reference
          R_indexx_x02x_xi_3058_sample_start_ <-& (phi_stmt_3051_update_completed_)
          R_indexx_x02x_xi_3058_sample_completed_ <-& (R_indexx_x02x_xi_3058_sample_start_)
          R_indexx_x02x_xi_3058_update_start_ <-& (R_indexx_x02x_xi_3058_sample_completed_)
          R_indexx_x02x_xi_3058_update_completed_ <-& (R_indexx_x02x_xi_3058_update_start_)
          ;;[array_obj_ref_3059_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          R_indexx_x02x_xi_3058_update_completed_ &-> (array_obj_ref_3059_index_resize_0)
          array_obj_ref_3059_index_resized_0 <-& (array_obj_ref_3059_index_resize_0)
          ;;[array_obj_ref_3059_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_3059_index_resized_0 &-> (array_obj_ref_3059_index_scale_0)
          array_obj_ref_3059_index_scaled_0 <-& (array_obj_ref_3059_index_scale_0)
          ;;[array_obj_ref_3059_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_3059_index_scaled_0 &-> (array_obj_ref_3059_final_index_sum_regn)
          array_obj_ref_3059_offset_calculated <-& (array_obj_ref_3059_final_index_sum_regn)
          ;;[array_obj_ref_3059_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_3059_offset_calculated &-> (array_obj_ref_3059_base_plus_offset)
          array_obj_ref_3059_root_address_calculated <-& (array_obj_ref_3059_base_plus_offset)
          ;;[addr_of_3060_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_3060_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_3060_sample_start_ <-& (array_obj_ref_3059_root_address_calculated)
          addr_of_3060_sample_start_ &-> (addr_of_3060_request)
          addr_of_3060_sample_completed_ <-& (addr_of_3060_request)
          addr_of_3060_update_start_ &-> (addr_of_3060_complete)
          addr_of_3060_update_completed_ <-& (addr_of_3060_complete)
          // reenables .
          phi_stmt_3051_update_start_ o<-& (addr_of_3060_sample_completed_ 0)
          // self-release 
          addr_of_3060_sample_start_ o<-& (addr_of_3060_sample_completed_ 1)
          addr_of_3060_update_start_ o<-& (addr_of_3060_update_completed_ 0)
          // Target expression
          // (as target) scevgep5x_xi
          // scevgep5x_xi
          // implicit reference
          // 			scevgep6x_xi := @(RRbuff[indexx_x02x_xi])
          //  file prog.linked.opt.aa, line 1199
          // Source expression
          // @(RRbuff[indexx_x02x_xi])
          $T[addr_of_3065_sample_start_] 
          $T[addr_of_3065_sample_completed_] 
          $T[addr_of_3065_update_start_] 
          $T[addr_of_3065_update_completed_] 
          $T[array_obj_ref_3064_root_address_calculated] 
          $T[array_obj_ref_3064_offset_calculated] 
          $T[array_obj_ref_3064_index_resized_0] 
          $T[array_obj_ref_3064_index_scaled_0] 
          // indexx_x02x_xi
          $T[R_indexx_x02x_xi_3063_sample_start_] 
          $T[R_indexx_x02x_xi_3063_sample_completed_] 
          $T[R_indexx_x02x_xi_3063_update_start_] 
          $T[R_indexx_x02x_xi_3063_update_completed_] 
          // implicit reference
          R_indexx_x02x_xi_3063_sample_start_ <-& (phi_stmt_3051_update_completed_)
          R_indexx_x02x_xi_3063_sample_completed_ <-& (R_indexx_x02x_xi_3063_sample_start_)
          R_indexx_x02x_xi_3063_update_start_ <-& (R_indexx_x02x_xi_3063_sample_completed_)
          R_indexx_x02x_xi_3063_update_completed_ <-& (R_indexx_x02x_xi_3063_update_start_)
          ;;[array_obj_ref_3064_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          R_indexx_x02x_xi_3063_update_completed_ &-> (array_obj_ref_3064_index_resize_0)
          array_obj_ref_3064_index_resized_0 <-& (array_obj_ref_3064_index_resize_0)
          ;;[array_obj_ref_3064_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_3064_index_resized_0 &-> (array_obj_ref_3064_index_scale_0)
          array_obj_ref_3064_index_scaled_0 <-& (array_obj_ref_3064_index_scale_0)
          ;;[array_obj_ref_3064_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_3064_index_scaled_0 &-> (array_obj_ref_3064_final_index_sum_regn)
          array_obj_ref_3064_offset_calculated <-& (array_obj_ref_3064_final_index_sum_regn)
          $T[array_obj_ref_3064_base_plus_offset_sample_start] 
          $T[array_obj_ref_3064_base_plus_offset_sample_complete] 
          $T[array_obj_ref_3064_base_plus_offset_update_start] 
          $T[array_obj_ref_3064_base_plus_offset_update_complete] 
          ;;[array_obj_ref_3064_base_plus_offset_sample] 
          {
            $T [rr] $T [ra]
          }
          ;;[array_obj_ref_3064_base_plus_offset_update] 
          {
            $T [cr] $T [ca]
          }
          array_obj_ref_3064_base_plus_offset_sample_start &-> (array_obj_ref_3064_base_plus_offset_sample)
          array_obj_ref_3064_base_plus_offset_update_start &-> (array_obj_ref_3064_base_plus_offset_update)
          array_obj_ref_3064_base_plus_offset_sample_complete <-& (array_obj_ref_3064_base_plus_offset_sample)
          array_obj_ref_3064_base_plus_offset_update_complete <-& (array_obj_ref_3064_base_plus_offset_update)
          array_obj_ref_3064_offset_calculated &-> (array_obj_ref_3064_base_plus_offset_sample_start)
          array_obj_ref_3064_root_address_calculated <-& (array_obj_ref_3064_base_plus_offset_update_complete)
          array_obj_ref_3064_base_plus_offset_sample_complete o<-& (array_obj_ref_3064_base_plus_offset_sample_start 1)
          array_obj_ref_3064_base_plus_offset_update_complete o<-& (array_obj_ref_3064_base_plus_offset_update_start 0)
          phi_stmt_3051_update_start_ o<-& (array_obj_ref_3064_base_plus_offset_sample_complete 0)
          ;;[addr_of_3065_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_3065_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_3065_sample_start_ <-& (array_obj_ref_3064_root_address_calculated)
          addr_of_3065_sample_start_ &-> (addr_of_3065_request)
          addr_of_3065_sample_completed_ <-& (addr_of_3065_request)
          addr_of_3065_update_start_ &-> (addr_of_3065_complete)
          addr_of_3065_update_completed_ <-& (addr_of_3065_complete)
          // reenables .
          array_obj_ref_3064_base_plus_offset_update_start o<-& (addr_of_3065_sample_completed_ 0)
          // self-release 
          addr_of_3065_sample_start_ o<-& (addr_of_3065_sample_completed_ 1)
          addr_of_3065_update_start_ o<-& (addr_of_3065_update_completed_ 0)
          // Target expression
          // (as target) scevgep6x_xi
          // scevgep6x_xi
          // implicit reference
          // 			->(scevgep5x_xi) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
          //  file prog.linked.opt.aa, line 1200
          // Target expression
          // ->(scevgep5x_xi)
          $T[ptr_deref_3068_sample_start_] 
          $T[ptr_deref_3068_sample_completed_] 
          $T[ptr_deref_3068_update_start_] 
          $T[ptr_deref_3068_update_completed_] 
          $T[ptr_deref_3068_base_address_calculated] 
          // scevgep5x_xi
          $T[R_scevgep5x_xi_3067_sample_start_] 
          $T[R_scevgep5x_xi_3067_sample_completed_] 
          $T[R_scevgep5x_xi_3067_update_start_] 
          $T[R_scevgep5x_xi_3067_update_completed_] 
          // implicit reference
          R_scevgep5x_xi_3067_sample_start_ <-& (addr_of_3060_update_completed_)
          R_scevgep5x_xi_3067_sample_completed_ <-& (R_scevgep5x_xi_3067_sample_start_)
          R_scevgep5x_xi_3067_update_start_ <-& (R_scevgep5x_xi_3067_sample_completed_)
          R_scevgep5x_xi_3067_update_completed_ <-& (R_scevgep5x_xi_3067_update_start_)
          $T[ptr_deref_3068_word_address_calculated] 
          $T[ptr_deref_3068_root_address_calculated] 
          $T[ptr_deref_3068_base_address_resized] 
          ;;[ptr_deref_3068_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_3068_base_address_calculated &-> (ptr_deref_3068_base_addr_resize)
          ptr_deref_3068_base_address_resized <-& (ptr_deref_3068_base_addr_resize)
          ;;[ptr_deref_3068_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_3068_base_address_resized &-> (ptr_deref_3068_base_plus_offset)
          ptr_deref_3068_root_address_calculated <-& (ptr_deref_3068_base_plus_offset)
          ;;[ptr_deref_3068_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_3068_root_address_calculated &-> (ptr_deref_3068_word_addrgen)
          ptr_deref_3068_word_address_calculated <-& (ptr_deref_3068_word_addrgen)
          ;;[ptr_deref_3068_Sample] 
          {
            ;;[ptr_deref_3068_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_3068_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          ptr_deref_3068_sample_start_ <-& (ptr_deref_3068_word_address_calculated)
          // reenable-joins
          addr_of_3060_update_start_ o<-& (ptr_deref_3068_sample_completed_ 0)
          ptr_deref_3068_sample_start_ &-> (ptr_deref_3068_Sample)
          ptr_deref_3068_sample_completed_ <-& (ptr_deref_3068_Sample)
          ptr_deref_3068_sample_completed_ &-> ($null)
          ptr_deref_3068_update_start_ &-> (ptr_deref_3068_Update)
          ptr_deref_3068_update_completed_ <-& (ptr_deref_3068_Update)
          ptr_deref_3068_base_address_calculated <-& (R_scevgep5x_xi_3067_update_completed_)
          ptr_deref_3068_sample_start_ <-& (ptr_deref_3068_base_address_calculated)
          // RAW reenables for scevgep5x_xi
          addr_of_3060_update_start_ o<-& (ptr_deref_3068_sample_completed_ 0)
          // self-release: 
          ptr_deref_3068_sample_start_ o<-& (ptr_deref_3068_sample_completed_ 1)
          ptr_deref_3068_update_start_ o<-& (ptr_deref_3068_update_completed_ 0)
          // 			->(scevgep6x_xi) := ($bitcast ($uint<32>) _b00000000000000000000000011001000  )
          //  file prog.linked.opt.aa, line 1201
          // Target expression
          // ->(scevgep6x_xi)
          $T[ptr_deref_3073_sample_start_] 
          $T[ptr_deref_3073_sample_completed_] 
          $T[ptr_deref_3073_update_start_] 
          $T[ptr_deref_3073_update_completed_] 
          $T[ptr_deref_3073_base_address_calculated] 
          // scevgep6x_xi
          $T[R_scevgep6x_xi_3072_sample_start_] 
          $T[R_scevgep6x_xi_3072_sample_completed_] 
          $T[R_scevgep6x_xi_3072_update_start_] 
          $T[R_scevgep6x_xi_3072_update_completed_] 
          // implicit reference
          R_scevgep6x_xi_3072_sample_start_ <-& (addr_of_3065_update_completed_)
          R_scevgep6x_xi_3072_sample_completed_ <-& (R_scevgep6x_xi_3072_sample_start_)
          R_scevgep6x_xi_3072_update_start_ <-& (R_scevgep6x_xi_3072_sample_completed_)
          R_scevgep6x_xi_3072_update_completed_ <-& (R_scevgep6x_xi_3072_update_start_)
          $T[ptr_deref_3073_word_address_calculated] 
          $T[ptr_deref_3073_root_address_calculated] 
          $T[ptr_deref_3073_base_address_resized] 
          ;;[ptr_deref_3073_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_3073_base_address_calculated &-> (ptr_deref_3073_base_addr_resize)
          ptr_deref_3073_base_address_resized <-& (ptr_deref_3073_base_addr_resize)
          ;;[ptr_deref_3073_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_3073_base_address_resized &-> (ptr_deref_3073_base_plus_offset)
          ptr_deref_3073_root_address_calculated <-& (ptr_deref_3073_base_plus_offset)
          ;;[ptr_deref_3073_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_3073_root_address_calculated &-> (ptr_deref_3073_word_addrgen)
          ptr_deref_3073_word_address_calculated <-& (ptr_deref_3073_word_addrgen)
          ;;[ptr_deref_3073_Sample] 
          {
            ;;[ptr_deref_3073_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_3073_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          ptr_deref_3073_sample_start_ <-& (ptr_deref_3073_word_address_calculated)
          // reenable-joins
          addr_of_3065_update_start_ o<-& (ptr_deref_3073_sample_completed_ 0)
          ptr_deref_3073_sample_start_ &-> (ptr_deref_3073_Sample)
          ptr_deref_3073_sample_completed_ <-& (ptr_deref_3073_Sample)
          ptr_deref_3073_sample_completed_ &-> ($null)
          ptr_deref_3073_update_start_ &-> (ptr_deref_3073_Update)
          ptr_deref_3073_update_completed_ <-& (ptr_deref_3073_Update)
          ptr_deref_3073_base_address_calculated <-& (R_scevgep6x_xi_3072_update_completed_)
          ptr_deref_3073_sample_start_ <-& (ptr_deref_3073_base_address_calculated)
          // RAW reenables for scevgep6x_xi
          addr_of_3065_update_start_ o<-& (ptr_deref_3073_sample_completed_ 0)
          // self-release: 
          ptr_deref_3073_sample_start_ o<-& (ptr_deref_3073_sample_completed_ 1)
          ptr_deref_3073_update_start_ o<-& (ptr_deref_3073_update_completed_ 0)
          // 			iNsTr_4 := (indexx_x02x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          //  file prog.linked.opt.aa, line 1202
          // Source expression
          // (indexx_x02x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          $T[ADD_u32_u32_3081_sample_start_] 
          $T[ADD_u32_u32_3081_sample_completed_] 
          $T[ADD_u32_u32_3081_update_start_] 
          $T[ADD_u32_u32_3081_update_completed_] 
          // indexx_x02x_xi
          $T[R_indexx_x02x_xi_3078_sample_start_] 
          $T[R_indexx_x02x_xi_3078_sample_completed_] 
          $T[R_indexx_x02x_xi_3078_update_start_] 
          $T[R_indexx_x02x_xi_3078_update_completed_] 
          // implicit reference
          R_indexx_x02x_xi_3078_sample_start_ <-& (phi_stmt_3051_update_completed_)
          R_indexx_x02x_xi_3078_sample_completed_ <-& (R_indexx_x02x_xi_3078_sample_start_)
          R_indexx_x02x_xi_3078_update_start_ <-& (R_indexx_x02x_xi_3078_sample_completed_)
          R_indexx_x02x_xi_3078_update_completed_ <-& (R_indexx_x02x_xi_3078_update_start_)
          ADD_u32_u32_3081_sample_start_ <-& (R_indexx_x02x_xi_3078_update_completed_)
          ;;[ADD_u32_u32_3081_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u32_u32_3081_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u32_u32_3081_sample_start_ &-> (ADD_u32_u32_3081_Sample)
          ADD_u32_u32_3081_sample_completed_ <-& (ADD_u32_u32_3081_Sample)
          ADD_u32_u32_3081_sample_completed_ &-> ($null)
          ADD_u32_u32_3081_update_start_ &-> (ADD_u32_u32_3081_Update)
          ADD_u32_u32_3081_update_completed_ <-& (ADD_u32_u32_3081_Update)
          // RAW reenables for indexx_x02x_xi
          phi_stmt_3051_update_start_ o<-& (ADD_u32_u32_3081_sample_completed_ 0)
          // self-release: 
          ADD_u32_u32_3081_sample_start_ o<-& (ADD_u32_u32_3081_sample_completed_ 1)
          ADD_u32_u32_3081_update_start_ o<-& (ADD_u32_u32_3081_update_completed_ 0)
          // Target expression
          // (as target) iNsTr_4
          // iNsTr_4
          // implicit reference
          // WAR dependency: Read: iNsTr_4 before Write: 			iNsTr_4 := (indexx_x02x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          ADD_u32_u32_3081_sample_start_ <-& (phi_stmt_3051_sample_completed_)
          // WAR dependency: release  Read: iNsTr_4 with Write: 			iNsTr_4 := (indexx_x02x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          R_iNsTr_4_3053_sample_start_ o<-& (ADD_u32_u32_3081_update_completed_ 1)
          // 			exitcond6 := (iNsTr_4 == ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
          //  file prog.linked.opt.aa, line 1203
          // Source expression
          // (iNsTr_4 == ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
          $T[EQ_u32_u1_3087_sample_start_] 
          $T[EQ_u32_u1_3087_sample_completed_] 
          $T[EQ_u32_u1_3087_update_start_] 
          $T[EQ_u32_u1_3087_update_completed_] 
          // iNsTr_4
          $T[R_iNsTr_4_3084_sample_start_] 
          $T[R_iNsTr_4_3084_sample_completed_] 
          $T[R_iNsTr_4_3084_update_start_] 
          $T[R_iNsTr_4_3084_update_completed_] 
          // implicit reference
          R_iNsTr_4_3084_sample_start_ <-& (ADD_u32_u32_3081_update_completed_)
          R_iNsTr_4_3084_sample_completed_ <-& (R_iNsTr_4_3084_sample_start_)
          R_iNsTr_4_3084_update_start_ <-& (R_iNsTr_4_3084_sample_completed_)
          R_iNsTr_4_3084_update_completed_ <-& (R_iNsTr_4_3084_update_start_)
          EQ_u32_u1_3087_sample_start_ <-& (R_iNsTr_4_3084_update_completed_)
          ;;[EQ_u32_u1_3087_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[EQ_u32_u1_3087_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          EQ_u32_u1_3087_sample_start_ &-> (EQ_u32_u1_3087_Sample)
          EQ_u32_u1_3087_sample_completed_ <-& (EQ_u32_u1_3087_Sample)
          EQ_u32_u1_3087_sample_completed_ &-> ($null)
          EQ_u32_u1_3087_update_start_ &-> (EQ_u32_u1_3087_Update)
          EQ_u32_u1_3087_update_completed_ <-& (EQ_u32_u1_3087_Update)
          // RAW reenables for iNsTr_4
          ADD_u32_u32_3081_update_start_ o<-& (EQ_u32_u1_3087_sample_completed_ 0)
          // self-release: 
          EQ_u32_u1_3087_sample_start_ o<-& (EQ_u32_u1_3087_sample_completed_ 1)
          EQ_u32_u1_3087_update_start_ o<-& (EQ_u32_u1_3087_update_completed_ 0)
          // Target expression
          // (as target) exitcond6
          // exitcond6
          // implicit reference
          // ( ~ exitcond6 )
          $T[NOT_u1_u1_3091_sample_start_] 
          $T[NOT_u1_u1_3091_sample_completed_] 
          $T[NOT_u1_u1_3091_update_start_] 
          $T[NOT_u1_u1_3091_update_completed_] 
          // exitcond6
          $T[R_exitcond6_3090_sample_start_] 
          $T[R_exitcond6_3090_sample_completed_] 
          $T[R_exitcond6_3090_update_start_] 
          $T[R_exitcond6_3090_update_completed_] 
          // implicit reference
          R_exitcond6_3090_sample_start_ <-& (EQ_u32_u1_3087_update_completed_)
          R_exitcond6_3090_sample_completed_ <-& (R_exitcond6_3090_sample_start_)
          R_exitcond6_3090_update_start_ <-& (R_exitcond6_3090_sample_completed_)
          R_exitcond6_3090_update_completed_ <-& (R_exitcond6_3090_update_start_)
          NOT_u1_u1_3091_sample_start_ <-& (R_exitcond6_3090_update_completed_)
          ;;[NOT_u1_u1_3091_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[NOT_u1_u1_3091_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          NOT_u1_u1_3091_sample_start_ &-> (NOT_u1_u1_3091_Sample)
          NOT_u1_u1_3091_sample_completed_ <-& (NOT_u1_u1_3091_Sample)
          NOT_u1_u1_3091_sample_completed_ &-> ($null)
          NOT_u1_u1_3091_update_start_ &-> (NOT_u1_u1_3091_Update)
          NOT_u1_u1_3091_update_completed_ <-& (NOT_u1_u1_3091_Update)
          // flow-through
          NOT_u1_u1_3091_update_start_ <-& (NOT_u1_u1_3091_sample_completed_)
          NOT_u1_u1_3091_update_completed_ &-> (condition_evaluated)
          condition_evaluated &-> ($null)
          // load-store dependencies..
          $T [ptr_deref_3068_ptr_deref_3073_delay] $delay
          // ->(scevgep5x_xi)(store) -> ->(scevgep6x_xi)(store)
          ptr_deref_3073_sample_start_ <-& (ptr_deref_3068_ptr_deref_3073_delay)
          ptr_deref_3068_ptr_deref_3073_delay <-& (ptr_deref_3068_sample_completed_)
          // reenable across ring for memory space memory_space_13
          $T[ring_reenable_memory_space_13] 
          ring_reenable_memory_space_13 <-& (ptr_deref_3073_sample_completed_)
          ptr_deref_3068_sample_start_ o<-& (ring_reenable_memory_space_13 1)
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_3049__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_3049_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_3049__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_3049_loop_body : condition_evaluated
        $bind do_while_stmt_3049__entry__  => do_while_stmt_3049_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_3049_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_3049__exit__)
      }
      do_while_stmt_3049__entry__ |-> (do_while_stmt_3049)
      do_while_stmt_3049__exit__ <-| (do_while_stmt_3049)
      // do-while-statement  
      //  file prog.linked.opt.aa, line 1212
      <o> [do_while_stmt_3102]  $depth 7 $buffering 2 
      {
        $P[do_while_stmt_3102__entry__] 
        $P[do_while_stmt_3102__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_3102_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          // (pipelined) PHI statement phi_stmt_3104
          // 			$phi indexx_x11x_xi := 			  ($cast ($uint<32>) iNsTr_9 ) $on $loopback			  indexx_x11x_xi_at_entry $on $entry // type of target is $uint<32>
          $T[phi_stmt_3104_loopback_trigger] 
          $T[phi_stmt_3104_loopback_sample_req_from_phi_seq] 
          $T[phi_stmt_3104_loopback_sample_req] 
          phi_stmt_3104_loopback_trigger <-& (back_edge_to_loop_body)
          phi_stmt_3104_loopback_sample_req <-& (phi_stmt_3104_loopback_sample_req_from_phi_seq)
          $T[phi_stmt_3104_entry_trigger] 
          $T[phi_stmt_3104_entry_sample_req_from_phi_seq] 
          $T[phi_stmt_3104_entry_sample_req] 
          phi_stmt_3104_entry_trigger <-& (first_time_through_loop_body)
          phi_stmt_3104_entry_sample_req <-& (phi_stmt_3104_entry_sample_req_from_phi_seq)
          $T[phi_stmt_3104_sample_start_] 
          $T[phi_stmt_3104_sample_completed_] 
          $T[phi_stmt_3104_update_start_] 
          $T[phi_stmt_3104_update_completed_] 
          phi_stmt_3104_update_start_ o<-& (phi_stmt_3104_update_completed_ 0)
          phi_stmt_3104_sample_start_ o<-& (phi_stmt_3104_sample_completed_ 1)
          $T[phi_stmt_3104_merged_reqs] 
          $transitionmerge [phi_stmt_3104_req_merge] (phi_stmt_3104_entry_sample_req phi_stmt_3104_loopback_sample_req) (phi_stmt_3104_merged_reqs)
          phi_stmt_3104_merged_reqs &-> ($null)
          // ($cast ($uint<32>) iNsTr_9 )
          $T[type_cast_3107_sample_start_] 
          $T[type_cast_3107_sample_completed_] 
          $T[type_cast_3107_update_start_] 
          $T[type_cast_3107_update_completed_] 
          // iNsTr_9
          $T[R_iNsTr_9_3106_sample_start_] 
          $T[R_iNsTr_9_3106_sample_completed_] 
          $T[R_iNsTr_9_3106_update_start_] 
          $T[R_iNsTr_9_3106_update_completed_] 
          // implicit reference
          R_iNsTr_9_3106_sample_start_ <-& ($entry)
          R_iNsTr_9_3106_sample_completed_ <-& (R_iNsTr_9_3106_sample_start_)
          R_iNsTr_9_3106_update_start_ <-& (R_iNsTr_9_3106_sample_completed_)
          R_iNsTr_9_3106_update_completed_ <-& (R_iNsTr_9_3106_update_start_)
          type_cast_3107_sample_start_ <-& (R_iNsTr_9_3106_update_completed_)
          ;;[type_cast_3107_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3107_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3107_sample_start_ &-> (type_cast_3107_Sample)
          type_cast_3107_sample_completed_ <-& (type_cast_3107_Sample)
          type_cast_3107_sample_completed_ &-> ($null)
          type_cast_3107_update_start_ &-> (type_cast_3107_Update)
          type_cast_3107_update_completed_ <-& (type_cast_3107_Update)
          // RAW reenables for iNsTr_9
          R_iNsTr_9_3106_update_start_ o<-& (type_cast_3107_sample_completed_ 1)
          // self-release: 
          type_cast_3107_sample_start_ o<-& (type_cast_3107_sample_completed_ 1)
          type_cast_3107_update_start_ o<-& (type_cast_3107_update_completed_ 0)
          phi_stmt_3104_sample_start_ <-& (type_cast_3107_update_completed_)
          // RAW reenables for ($cast ($uint<32>) iNsTr_9 )
          type_cast_3107_update_start_ o<-& (phi_stmt_3104_sample_completed_ 0)
          // indexx_x11x_xi_at_entry
          $T[R_indexx_x11x_xi_at_entry_3108_sample_start_] 
          $T[R_indexx_x11x_xi_at_entry_3108_sample_completed_] 
          $T[R_indexx_x11x_xi_at_entry_3108_update_start_] 
          $T[R_indexx_x11x_xi_at_entry_3108_update_completed_] 
          // implicit reference
          R_indexx_x11x_xi_at_entry_3108_sample_start_ <-& ($entry)
          R_indexx_x11x_xi_at_entry_3108_sample_completed_ <-& (R_indexx_x11x_xi_at_entry_3108_sample_start_)
          R_indexx_x11x_xi_at_entry_3108_update_start_ <-& (R_indexx_x11x_xi_at_entry_3108_sample_completed_)
          R_indexx_x11x_xi_at_entry_3108_update_completed_ <-& (R_indexx_x11x_xi_at_entry_3108_update_start_)
          phi_stmt_3104_sample_start_ <-& (R_indexx_x11x_xi_at_entry_3108_update_completed_)
          // RAW reenables for indexx_x11x_xi_at_entry
          R_indexx_x11x_xi_at_entry_3108_update_start_ o<-& (phi_stmt_3104_sample_completed_ 1)
          $T[phi_stmt_3104_phi_sequencer_done] 
          phi_stmt_3104_phi_sequencer_done &-> ($null)
          $phisequencer [ phi_stmt_3104_phi_seq] ( phi_stmt_3104_loopback_trigger phi_stmt_3104_entry_trigger  : phi_stmt_3104_sample_start_ : phi_stmt_3104_sample_completed_ ) ( phi_stmt_3104_loopback_sample_req_from_phi_seq phi_stmt_3104_entry_sample_req_from_phi_seq  : phi_stmt_3104_phi_sequencer_done ) 
          condition_evaluated <-& (phi_stmt_3104_sample_completed_)
          // 			scevgepx_xi := @(DDCALCbuff[indexx_x11x_xi])
          //  file prog.linked.opt.aa, line 1216
          // Source expression
          // @(DDCALCbuff[indexx_x11x_xi])
          $T[addr_of_3113_sample_start_] 
          $T[addr_of_3113_sample_completed_] 
          $T[addr_of_3113_update_start_] 
          $T[addr_of_3113_update_completed_] 
          $T[array_obj_ref_3112_root_address_calculated] 
          $T[array_obj_ref_3112_offset_calculated] 
          $T[array_obj_ref_3112_index_resized_0] 
          $T[array_obj_ref_3112_index_scaled_0] 
          // indexx_x11x_xi
          $T[R_indexx_x11x_xi_3111_sample_start_] 
          $T[R_indexx_x11x_xi_3111_sample_completed_] 
          $T[R_indexx_x11x_xi_3111_update_start_] 
          $T[R_indexx_x11x_xi_3111_update_completed_] 
          // implicit reference
          R_indexx_x11x_xi_3111_sample_start_ <-& (phi_stmt_3104_update_completed_)
          R_indexx_x11x_xi_3111_sample_completed_ <-& (R_indexx_x11x_xi_3111_sample_start_)
          R_indexx_x11x_xi_3111_update_start_ <-& (R_indexx_x11x_xi_3111_sample_completed_)
          R_indexx_x11x_xi_3111_update_completed_ <-& (R_indexx_x11x_xi_3111_update_start_)
          ;;[array_obj_ref_3112_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          R_indexx_x11x_xi_3111_update_completed_ &-> (array_obj_ref_3112_index_resize_0)
          array_obj_ref_3112_index_resized_0 <-& (array_obj_ref_3112_index_resize_0)
          ;;[array_obj_ref_3112_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_3112_index_resized_0 &-> (array_obj_ref_3112_index_scale_0)
          array_obj_ref_3112_index_scaled_0 <-& (array_obj_ref_3112_index_scale_0)
          ;;[array_obj_ref_3112_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_3112_index_scaled_0 &-> (array_obj_ref_3112_final_index_sum_regn)
          array_obj_ref_3112_offset_calculated <-& (array_obj_ref_3112_final_index_sum_regn)
          ;;[array_obj_ref_3112_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_3112_offset_calculated &-> (array_obj_ref_3112_base_plus_offset)
          array_obj_ref_3112_root_address_calculated <-& (array_obj_ref_3112_base_plus_offset)
          ;;[addr_of_3113_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_3113_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_3113_sample_start_ <-& (array_obj_ref_3112_root_address_calculated)
          addr_of_3113_sample_start_ &-> (addr_of_3113_request)
          addr_of_3113_sample_completed_ <-& (addr_of_3113_request)
          addr_of_3113_update_start_ &-> (addr_of_3113_complete)
          addr_of_3113_update_completed_ <-& (addr_of_3113_complete)
          // reenables .
          phi_stmt_3104_update_start_ o<-& (addr_of_3113_sample_completed_ 0)
          // self-release 
          addr_of_3113_sample_start_ o<-& (addr_of_3113_sample_completed_ 1)
          addr_of_3113_update_start_ o<-& (addr_of_3113_update_completed_ 0)
          // Target expression
          // (as target) scevgepx_xi
          // scevgepx_xi
          // implicit reference
          // 			->(scevgepx_xi) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
          //  file prog.linked.opt.aa, line 1217
          // Target expression
          // ->(scevgepx_xi)
          $T[ptr_deref_3116_sample_start_] 
          $T[ptr_deref_3116_sample_completed_] 
          $T[ptr_deref_3116_update_start_] 
          $T[ptr_deref_3116_update_completed_] 
          $T[ptr_deref_3116_base_address_calculated] 
          // scevgepx_xi
          $T[R_scevgepx_xi_3115_sample_start_] 
          $T[R_scevgepx_xi_3115_sample_completed_] 
          $T[R_scevgepx_xi_3115_update_start_] 
          $T[R_scevgepx_xi_3115_update_completed_] 
          // implicit reference
          R_scevgepx_xi_3115_sample_start_ <-& (addr_of_3113_update_completed_)
          R_scevgepx_xi_3115_sample_completed_ <-& (R_scevgepx_xi_3115_sample_start_)
          R_scevgepx_xi_3115_update_start_ <-& (R_scevgepx_xi_3115_sample_completed_)
          R_scevgepx_xi_3115_update_completed_ <-& (R_scevgepx_xi_3115_update_start_)
          $T[ptr_deref_3116_word_address_calculated] 
          $T[ptr_deref_3116_root_address_calculated] 
          $T[ptr_deref_3116_base_address_resized] 
          ;;[ptr_deref_3116_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_3116_base_address_calculated &-> (ptr_deref_3116_base_addr_resize)
          ptr_deref_3116_base_address_resized <-& (ptr_deref_3116_base_addr_resize)
          ;;[ptr_deref_3116_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_3116_base_address_resized &-> (ptr_deref_3116_base_plus_offset)
          ptr_deref_3116_root_address_calculated <-& (ptr_deref_3116_base_plus_offset)
          ;;[ptr_deref_3116_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_3116_root_address_calculated &-> (ptr_deref_3116_word_addrgen)
          ptr_deref_3116_word_address_calculated <-& (ptr_deref_3116_word_addrgen)
          ;;[ptr_deref_3116_Sample] 
          {
            ;;[ptr_deref_3116_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_3116_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          ptr_deref_3116_sample_start_ <-& (ptr_deref_3116_word_address_calculated)
          // reenable-joins
          addr_of_3113_update_start_ o<-& (ptr_deref_3116_sample_completed_ 0)
          ptr_deref_3116_sample_start_ &-> (ptr_deref_3116_Sample)
          ptr_deref_3116_sample_completed_ <-& (ptr_deref_3116_Sample)
          ptr_deref_3116_sample_completed_ &-> ($null)
          ptr_deref_3116_update_start_ &-> (ptr_deref_3116_Update)
          ptr_deref_3116_update_completed_ <-& (ptr_deref_3116_Update)
          ptr_deref_3116_base_address_calculated <-& (R_scevgepx_xi_3115_update_completed_)
          ptr_deref_3116_sample_start_ <-& (ptr_deref_3116_base_address_calculated)
          // RAW reenables for scevgepx_xi
          addr_of_3113_update_start_ o<-& (ptr_deref_3116_sample_completed_ 0)
          // self-release: 
          ptr_deref_3116_sample_start_ o<-& (ptr_deref_3116_sample_completed_ 1)
          ptr_deref_3116_update_start_ o<-& (ptr_deref_3116_update_completed_ 0)
          // 			iNsTr_9 := (indexx_x11x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          //  file prog.linked.opt.aa, line 1218
          // Source expression
          // (indexx_x11x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          $T[ADD_u32_u32_3124_sample_start_] 
          $T[ADD_u32_u32_3124_sample_completed_] 
          $T[ADD_u32_u32_3124_update_start_] 
          $T[ADD_u32_u32_3124_update_completed_] 
          // indexx_x11x_xi
          $T[R_indexx_x11x_xi_3121_sample_start_] 
          $T[R_indexx_x11x_xi_3121_sample_completed_] 
          $T[R_indexx_x11x_xi_3121_update_start_] 
          $T[R_indexx_x11x_xi_3121_update_completed_] 
          // implicit reference
          R_indexx_x11x_xi_3121_sample_start_ <-& (phi_stmt_3104_update_completed_)
          R_indexx_x11x_xi_3121_sample_completed_ <-& (R_indexx_x11x_xi_3121_sample_start_)
          R_indexx_x11x_xi_3121_update_start_ <-& (R_indexx_x11x_xi_3121_sample_completed_)
          R_indexx_x11x_xi_3121_update_completed_ <-& (R_indexx_x11x_xi_3121_update_start_)
          ADD_u32_u32_3124_sample_start_ <-& (R_indexx_x11x_xi_3121_update_completed_)
          ;;[ADD_u32_u32_3124_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u32_u32_3124_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u32_u32_3124_sample_start_ &-> (ADD_u32_u32_3124_Sample)
          ADD_u32_u32_3124_sample_completed_ <-& (ADD_u32_u32_3124_Sample)
          ADD_u32_u32_3124_sample_completed_ &-> ($null)
          ADD_u32_u32_3124_update_start_ &-> (ADD_u32_u32_3124_Update)
          ADD_u32_u32_3124_update_completed_ <-& (ADD_u32_u32_3124_Update)
          // RAW reenables for indexx_x11x_xi
          phi_stmt_3104_update_start_ o<-& (ADD_u32_u32_3124_sample_completed_ 0)
          // self-release: 
          ADD_u32_u32_3124_sample_start_ o<-& (ADD_u32_u32_3124_sample_completed_ 1)
          ADD_u32_u32_3124_update_start_ o<-& (ADD_u32_u32_3124_update_completed_ 0)
          // Target expression
          // (as target) iNsTr_9
          // iNsTr_9
          // implicit reference
          // WAR dependency: Read: iNsTr_9 before Write: 			iNsTr_9 := (indexx_x11x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          ADD_u32_u32_3124_sample_start_ <-& (phi_stmt_3104_sample_completed_)
          // WAR dependency: release  Read: iNsTr_9 with Write: 			iNsTr_9 := (indexx_x11x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          R_iNsTr_9_3106_sample_start_ o<-& (ADD_u32_u32_3124_update_completed_ 1)
          // 			exitcond := (iNsTr_9 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
          //  file prog.linked.opt.aa, line 1219
          // Source expression
          // (iNsTr_9 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
          $T[EQ_u32_u1_3130_sample_start_] 
          $T[EQ_u32_u1_3130_sample_completed_] 
          $T[EQ_u32_u1_3130_update_start_] 
          $T[EQ_u32_u1_3130_update_completed_] 
          // iNsTr_9
          $T[R_iNsTr_9_3127_sample_start_] 
          $T[R_iNsTr_9_3127_sample_completed_] 
          $T[R_iNsTr_9_3127_update_start_] 
          $T[R_iNsTr_9_3127_update_completed_] 
          // implicit reference
          R_iNsTr_9_3127_sample_start_ <-& (ADD_u32_u32_3124_update_completed_)
          R_iNsTr_9_3127_sample_completed_ <-& (R_iNsTr_9_3127_sample_start_)
          R_iNsTr_9_3127_update_start_ <-& (R_iNsTr_9_3127_sample_completed_)
          R_iNsTr_9_3127_update_completed_ <-& (R_iNsTr_9_3127_update_start_)
          EQ_u32_u1_3130_sample_start_ <-& (R_iNsTr_9_3127_update_completed_)
          ;;[EQ_u32_u1_3130_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[EQ_u32_u1_3130_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          EQ_u32_u1_3130_sample_start_ &-> (EQ_u32_u1_3130_Sample)
          EQ_u32_u1_3130_sample_completed_ <-& (EQ_u32_u1_3130_Sample)
          EQ_u32_u1_3130_sample_completed_ &-> ($null)
          EQ_u32_u1_3130_update_start_ &-> (EQ_u32_u1_3130_Update)
          EQ_u32_u1_3130_update_completed_ <-& (EQ_u32_u1_3130_Update)
          // RAW reenables for iNsTr_9
          ADD_u32_u32_3124_update_start_ o<-& (EQ_u32_u1_3130_sample_completed_ 0)
          // self-release: 
          EQ_u32_u1_3130_sample_start_ o<-& (EQ_u32_u1_3130_sample_completed_ 1)
          EQ_u32_u1_3130_update_start_ o<-& (EQ_u32_u1_3130_update_completed_ 0)
          // Target expression
          // (as target) exitcond
          // exitcond
          // implicit reference
          // ( ~ exitcond )
          $T[NOT_u1_u1_3134_sample_start_] 
          $T[NOT_u1_u1_3134_sample_completed_] 
          $T[NOT_u1_u1_3134_update_start_] 
          $T[NOT_u1_u1_3134_update_completed_] 
          // exitcond
          $T[R_exitcond_3133_sample_start_] 
          $T[R_exitcond_3133_sample_completed_] 
          $T[R_exitcond_3133_update_start_] 
          $T[R_exitcond_3133_update_completed_] 
          // implicit reference
          R_exitcond_3133_sample_start_ <-& (EQ_u32_u1_3130_update_completed_)
          R_exitcond_3133_sample_completed_ <-& (R_exitcond_3133_sample_start_)
          R_exitcond_3133_update_start_ <-& (R_exitcond_3133_sample_completed_)
          R_exitcond_3133_update_completed_ <-& (R_exitcond_3133_update_start_)
          NOT_u1_u1_3134_sample_start_ <-& (R_exitcond_3133_update_completed_)
          ;;[NOT_u1_u1_3134_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[NOT_u1_u1_3134_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          NOT_u1_u1_3134_sample_start_ &-> (NOT_u1_u1_3134_Sample)
          NOT_u1_u1_3134_sample_completed_ <-& (NOT_u1_u1_3134_Sample)
          NOT_u1_u1_3134_sample_completed_ &-> ($null)
          NOT_u1_u1_3134_update_start_ &-> (NOT_u1_u1_3134_Update)
          NOT_u1_u1_3134_update_completed_ <-& (NOT_u1_u1_3134_Update)
          // flow-through
          NOT_u1_u1_3134_update_start_ <-& (NOT_u1_u1_3134_sample_completed_)
          NOT_u1_u1_3134_update_completed_ &-> (condition_evaluated)
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // reenable across ring for memory space memory_space_0
          // leading and trailing sets are the same... no ring dependency
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_3102__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_3102_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_3102__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_3102_loop_body : condition_evaluated
        $bind do_while_stmt_3102__entry__  => do_while_stmt_3102_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_3102_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_3102__exit__)
      }
      do_while_stmt_3102__entry__ |-> (do_while_stmt_3102)
      do_while_stmt_3102__exit__ <-| (do_while_stmt_3102)
      ::[assign_stmt_3140_to_assign_stmt_3172] 
      {
        // 		maxDer := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 1224
        // Target expression
        // (as target) maxDer
        $T[STORE_maxDer_3137_sample_start_] 
        $T[STORE_maxDer_3137_sample_completed_] 
        $T[STORE_maxDer_3137_update_start_] 
        $T[STORE_maxDer_3137_update_completed_] 
        // maxDer
        $T[STORE_maxDer_3137_word_address_calculated] 
        $T[STORE_maxDer_3137_root_address_calculated] 
        STORE_maxDer_3137_word_address_calculated <-& (STORE_maxDer_3137_root_address_calculated)
        ;;[STORE_maxDer_3137_Sample] 
        {
          ;;[STORE_maxDer_3137_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_maxDer_3137_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_maxDer_3137_sample_start_ <-& (STORE_maxDer_3137_word_address_calculated)
        STORE_maxDer_3137_sample_start_ &-> (STORE_maxDer_3137_Sample)
        STORE_maxDer_3137_sample_completed_ <-& (STORE_maxDer_3137_Sample)
        STORE_maxDer_3137_sample_completed_ &-> ($null)
        STORE_maxDer_3137_update_start_ &-> (STORE_maxDer_3137_Update)
        STORE_maxDer_3137_update_completed_ <-& (STORE_maxDer_3137_Update)
        // 		DDCALCbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 1225
        // Target expression
        // (as target) DDCALCbuff_ptr
        $T[STORE_DDCALCbuff_ptr_3141_sample_start_] 
        $T[STORE_DDCALCbuff_ptr_3141_sample_completed_] 
        $T[STORE_DDCALCbuff_ptr_3141_update_start_] 
        $T[STORE_DDCALCbuff_ptr_3141_update_completed_] 
        // DDCALCbuff_ptr
        $T[STORE_DDCALCbuff_ptr_3141_word_address_calculated] 
        $T[STORE_DDCALCbuff_ptr_3141_root_address_calculated] 
        STORE_DDCALCbuff_ptr_3141_word_address_calculated <-& (STORE_DDCALCbuff_ptr_3141_root_address_calculated)
        ;;[STORE_DDCALCbuff_ptr_3141_Sample] 
        {
          ;;[STORE_DDCALCbuff_ptr_3141_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_DDCALCbuff_ptr_3141_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_DDCALCbuff_ptr_3141_sample_start_ <-& (STORE_DDCALCbuff_ptr_3141_word_address_calculated)
        STORE_DDCALCbuff_ptr_3141_sample_start_ &-> (STORE_DDCALCbuff_ptr_3141_Sample)
        STORE_DDCALCbuff_ptr_3141_sample_completed_ <-& (STORE_DDCALCbuff_ptr_3141_Sample)
        STORE_DDCALCbuff_ptr_3141_sample_completed_ &-> ($null)
        STORE_DDCALCbuff_ptr_3141_update_start_ &-> (STORE_DDCALCbuff_ptr_3141_Update)
        STORE_DDCALCbuff_ptr_3141_update_completed_ <-& (STORE_DDCALCbuff_ptr_3141_Update)
        // 		DDbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 1226
        // Target expression
        // (as target) DDbuff_ptr
        $T[STORE_DDbuff_ptr_3145_sample_start_] 
        $T[STORE_DDbuff_ptr_3145_sample_completed_] 
        $T[STORE_DDbuff_ptr_3145_update_start_] 
        $T[STORE_DDbuff_ptr_3145_update_completed_] 
        // DDbuff_ptr
        $T[STORE_DDbuff_ptr_3145_word_address_calculated] 
        $T[STORE_DDbuff_ptr_3145_root_address_calculated] 
        STORE_DDbuff_ptr_3145_word_address_calculated <-& (STORE_DDbuff_ptr_3145_root_address_calculated)
        ;;[STORE_DDbuff_ptr_3145_Sample] 
        {
          ;;[STORE_DDbuff_ptr_3145_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_DDbuff_ptr_3145_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_DDbuff_ptr_3145_sample_start_ <-& (STORE_DDbuff_ptr_3145_word_address_calculated)
        STORE_DDbuff_ptr_3145_sample_start_ &-> (STORE_DDbuff_ptr_3145_Sample)
        STORE_DDbuff_ptr_3145_sample_completed_ <-& (STORE_DDbuff_ptr_3145_Sample)
        STORE_DDbuff_ptr_3145_sample_completed_ &-> ($null)
        STORE_DDbuff_ptr_3145_update_start_ &-> (STORE_DDbuff_ptr_3145_Update)
        STORE_DDbuff_ptr_3145_update_completed_ <-& (STORE_DDbuff_ptr_3145_Update)
        // 		NOISEbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
        //  file prog.linked.opt.aa, line 1227
        // Target expression
        // (as target) NOISEbuff_ptr
        $T[STORE_NOISEbuff_ptr_3149_sample_start_] 
        $T[STORE_NOISEbuff_ptr_3149_sample_completed_] 
        $T[STORE_NOISEbuff_ptr_3149_update_start_] 
        $T[STORE_NOISEbuff_ptr_3149_update_completed_] 
        // NOISEbuff_ptr
        $T[STORE_NOISEbuff_ptr_3149_word_address_calculated] 
        $T[STORE_NOISEbuff_ptr_3149_root_address_calculated] 
        STORE_NOISEbuff_ptr_3149_word_address_calculated <-& (STORE_NOISEbuff_ptr_3149_root_address_calculated)
        ;;[STORE_NOISEbuff_ptr_3149_Sample] 
        {
          ;;[STORE_NOISEbuff_ptr_3149_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_NOISEbuff_ptr_3149_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_NOISEbuff_ptr_3149_sample_start_ <-& (STORE_NOISEbuff_ptr_3149_word_address_calculated)
        STORE_NOISEbuff_ptr_3149_sample_start_ &-> (STORE_NOISEbuff_ptr_3149_Sample)
        STORE_NOISEbuff_ptr_3149_sample_completed_ <-& (STORE_NOISEbuff_ptr_3149_Sample)
        STORE_NOISEbuff_ptr_3149_sample_completed_ &-> ($null)
        STORE_NOISEbuff_ptr_3149_update_start_ &-> (STORE_NOISEbuff_ptr_3149_Update)
        STORE_NOISEbuff_ptr_3149_update_completed_ <-& (STORE_NOISEbuff_ptr_3149_Update)
        // 		RRbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
        //  file prog.linked.opt.aa, line 1228
        // Target expression
        // (as target) RRbuff_ptr
        $T[STORE_RRbuff_ptr_3153_sample_start_] 
        $T[STORE_RRbuff_ptr_3153_sample_completed_] 
        $T[STORE_RRbuff_ptr_3153_update_start_] 
        $T[STORE_RRbuff_ptr_3153_update_completed_] 
        // RRbuff_ptr
        $T[STORE_RRbuff_ptr_3153_word_address_calculated] 
        $T[STORE_RRbuff_ptr_3153_root_address_calculated] 
        STORE_RRbuff_ptr_3153_word_address_calculated <-& (STORE_RRbuff_ptr_3153_root_address_calculated)
        ;;[STORE_RRbuff_ptr_3153_Sample] 
        {
          ;;[STORE_RRbuff_ptr_3153_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_RRbuff_ptr_3153_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_RRbuff_ptr_3153_sample_start_ <-& (STORE_RRbuff_ptr_3153_word_address_calculated)
        STORE_RRbuff_ptr_3153_sample_start_ &-> (STORE_RRbuff_ptr_3153_Sample)
        STORE_RRbuff_ptr_3153_sample_completed_ <-& (STORE_RRbuff_ptr_3153_Sample)
        STORE_RRbuff_ptr_3153_sample_completed_ &-> ($null)
        STORE_RRbuff_ptr_3153_update_start_ &-> (STORE_RRbuff_ptr_3153_Update)
        STORE_RRbuff_ptr_3153_update_completed_ <-& (STORE_RRbuff_ptr_3153_Update)
        // 		QRSbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
        //  file prog.linked.opt.aa, line 1229
        // Target expression
        // (as target) QRSbuff_ptr
        $T[STORE_QRSbuff_ptr_3157_sample_start_] 
        $T[STORE_QRSbuff_ptr_3157_sample_completed_] 
        $T[STORE_QRSbuff_ptr_3157_update_start_] 
        $T[STORE_QRSbuff_ptr_3157_update_completed_] 
        // QRSbuff_ptr
        $T[STORE_QRSbuff_ptr_3157_word_address_calculated] 
        $T[STORE_QRSbuff_ptr_3157_root_address_calculated] 
        STORE_QRSbuff_ptr_3157_word_address_calculated <-& (STORE_QRSbuff_ptr_3157_root_address_calculated)
        ;;[STORE_QRSbuff_ptr_3157_Sample] 
        {
          ;;[STORE_QRSbuff_ptr_3157_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_QRSbuff_ptr_3157_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_QRSbuff_ptr_3157_sample_start_ <-& (STORE_QRSbuff_ptr_3157_word_address_calculated)
        STORE_QRSbuff_ptr_3157_sample_start_ &-> (STORE_QRSbuff_ptr_3157_Sample)
        STORE_QRSbuff_ptr_3157_sample_completed_ <-& (STORE_QRSbuff_ptr_3157_Sample)
        STORE_QRSbuff_ptr_3157_sample_completed_ &-> ($null)
        STORE_QRSbuff_ptr_3157_update_start_ &-> (STORE_QRSbuff_ptr_3157_Update)
        STORE_QRSbuff_ptr_3157_update_completed_ <-& (STORE_QRSbuff_ptr_3157_Update)
        // 		timeSinceMaxPeak := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 1230
        // Target expression
        // (as target) timeSinceMaxPeak
        $T[STORE_timeSinceMaxPeak_3161_sample_start_] 
        $T[STORE_timeSinceMaxPeak_3161_sample_completed_] 
        $T[STORE_timeSinceMaxPeak_3161_update_start_] 
        $T[STORE_timeSinceMaxPeak_3161_update_completed_] 
        // timeSinceMaxPeak
        $T[STORE_timeSinceMaxPeak_3161_word_address_calculated] 
        $T[STORE_timeSinceMaxPeak_3161_root_address_calculated] 
        STORE_timeSinceMaxPeak_3161_word_address_calculated <-& (STORE_timeSinceMaxPeak_3161_root_address_calculated)
        ;;[STORE_timeSinceMaxPeak_3161_Sample] 
        {
          ;;[STORE_timeSinceMaxPeak_3161_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_timeSinceMaxPeak_3161_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_timeSinceMaxPeak_3161_sample_start_ <-& (STORE_timeSinceMaxPeak_3161_word_address_calculated)
        STORE_timeSinceMaxPeak_3161_sample_start_ &-> (STORE_timeSinceMaxPeak_3161_Sample)
        STORE_timeSinceMaxPeak_3161_sample_completed_ <-& (STORE_timeSinceMaxPeak_3161_Sample)
        STORE_timeSinceMaxPeak_3161_sample_completed_ &-> ($null)
        STORE_timeSinceMaxPeak_3161_update_start_ &-> (STORE_timeSinceMaxPeak_3161_Update)
        STORE_timeSinceMaxPeak_3161_update_completed_ <-& (STORE_timeSinceMaxPeak_3161_Update)
        // 		maxPeak := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 1231
        // Target expression
        // (as target) maxPeak
        $T[STORE_maxPeak_3165_sample_start_] 
        $T[STORE_maxPeak_3165_sample_completed_] 
        $T[STORE_maxPeak_3165_update_start_] 
        $T[STORE_maxPeak_3165_update_completed_] 
        // maxPeak
        $T[STORE_maxPeak_3165_word_address_calculated] 
        $T[STORE_maxPeak_3165_root_address_calculated] 
        STORE_maxPeak_3165_word_address_calculated <-& (STORE_maxPeak_3165_root_address_calculated)
        ;;[STORE_maxPeak_3165_Sample] 
        {
          ;;[STORE_maxPeak_3165_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_maxPeak_3165_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_maxPeak_3165_sample_start_ <-& (STORE_maxPeak_3165_word_address_calculated)
        STORE_maxPeak_3165_sample_start_ &-> (STORE_maxPeak_3165_Sample)
        STORE_maxPeak_3165_sample_completed_ <-& (STORE_maxPeak_3165_Sample)
        STORE_maxPeak_3165_sample_completed_ &-> ($null)
        STORE_maxPeak_3165_update_start_ &-> (STORE_maxPeak_3165_Update)
        STORE_maxPeak_3165_update_completed_ <-& (STORE_maxPeak_3165_Update)
        // 		lastDatum := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 1232
        // Target expression
        // (as target) lastDatum
        $T[STORE_lastDatum_3169_sample_start_] 
        $T[STORE_lastDatum_3169_sample_completed_] 
        $T[STORE_lastDatum_3169_update_start_] 
        $T[STORE_lastDatum_3169_update_completed_] 
        // lastDatum
        $T[STORE_lastDatum_3169_word_address_calculated] 
        $T[STORE_lastDatum_3169_root_address_calculated] 
        STORE_lastDatum_3169_word_address_calculated <-& (STORE_lastDatum_3169_root_address_calculated)
        ;;[STORE_lastDatum_3169_Sample] 
        {
          ;;[STORE_lastDatum_3169_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_lastDatum_3169_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_lastDatum_3169_sample_start_ <-& (STORE_lastDatum_3169_word_address_calculated)
        STORE_lastDatum_3169_sample_start_ &-> (STORE_lastDatum_3169_Sample)
        STORE_lastDatum_3169_sample_completed_ <-& (STORE_lastDatum_3169_Sample)
        STORE_lastDatum_3169_sample_completed_ &-> ($null)
        STORE_lastDatum_3169_update_start_ &-> (STORE_lastDatum_3169_Update)
        STORE_lastDatum_3169_update_completed_ <-& (STORE_lastDatum_3169_Update)
        // load-store dependencies..
      }
      assign_stmt_3140_to_assign_stmt_3172__entry__ |-> (assign_stmt_3140_to_assign_stmt_3172)
      assign_stmt_3140_to_assign_stmt_3172__exit__ <-| (assign_stmt_3140_to_assign_stmt_3172)
      ::[call_stmt_3175] 
      {
        // 		$call QRSFilt (($bitcast ($uint<8>) _b00000001  ) ) () 
        //  file prog.linked.opt.aa, line 1233
        $T[call_stmt_3175_sample_start_] 
        $T[call_stmt_3175_sample_completed_] 
        $T[call_stmt_3175_update_start_] 
        $T[call_stmt_3175_update_completed_] 
        // Call input argument 0
        ;;[call_stmt_3175_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_3175_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_3175_sample_start_ &-> (call_stmt_3175_Sample)
        call_stmt_3175_sample_completed_ <-& (call_stmt_3175_Sample)
        call_stmt_3175_sample_completed_ &-> ($null)
        call_stmt_3175_update_start_ &-> (call_stmt_3175_Update)
        call_stmt_3175_update_completed_ <-& (call_stmt_3175_Update)
        // barrier: 		$call QRSFilt (($bitcast ($uint<8>) _b00000001  ) ) () 
        // load-store dependencies..
      }
      call_stmt_3175__entry__ |-> (call_stmt_3175)
      call_stmt_3175__exit__ <-| (call_stmt_3175)
      ::[assign_stmt_3307] 
      {
        // 		iNsTr_23 := det_input_pipe
        //  file prog.linked.opt.aa, line 1255
        // Source expression
        // det_input_pipe
        $T[RPIPE_det_input_pipe_3306_sample_start_] 
        $T[RPIPE_det_input_pipe_3306_sample_completed_] 
        $T[RPIPE_det_input_pipe_3306_update_start_] 
        $T[RPIPE_det_input_pipe_3306_update_completed_] 
        ;;[RPIPE_det_input_pipe_3306_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_det_input_pipe_3306_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_det_input_pipe_3306_sample_start_ &-> (RPIPE_det_input_pipe_3306_Sample)
        RPIPE_det_input_pipe_3306_sample_completed_ <-& (RPIPE_det_input_pipe_3306_Sample)
        RPIPE_det_input_pipe_3306_sample_completed_ &-> ($null)
        RPIPE_det_input_pipe_3306_update_start_ &-> (RPIPE_det_input_pipe_3306_Update)
        RPIPE_det_input_pipe_3306_update_completed_ <-& (RPIPE_det_input_pipe_3306_Update)
        // Target expression
        // (as target) iNsTr_23
        // iNsTr_23
        // implicit reference
        // barrier: 		iNsTr_23 := det_input_pipe
        // load-store dependencies..
        // pipe read/write dependencies for pipe det_input_pipe
      }
      assign_stmt_3307__entry__ |-> (assign_stmt_3307)
      assign_stmt_3307__exit__ <-| (assign_stmt_3307)
      ::[assign_stmt_3310] 
      {
        // 		filt_input_pipe := iNsTr_23
        //  file prog.linked.opt.aa, line 1256
        // Source expression
        // iNsTr_23
        $T[R_iNsTr_23_3309_sample_start_] 
        $T[R_iNsTr_23_3309_sample_completed_] 
        $T[R_iNsTr_23_3309_update_start_] 
        $T[R_iNsTr_23_3309_update_completed_] 
        // implicit reference
        R_iNsTr_23_3309_sample_start_ <-& ($entry)
        R_iNsTr_23_3309_sample_completed_ <-& (R_iNsTr_23_3309_sample_start_)
        R_iNsTr_23_3309_update_start_ <-& (R_iNsTr_23_3309_sample_completed_)
        R_iNsTr_23_3309_update_completed_ <-& (R_iNsTr_23_3309_update_start_)
        // Target expression
        // (as target) filt_input_pipe
        $T[WPIPE_filt_input_pipe_3308_sample_start_] 
        $T[WPIPE_filt_input_pipe_3308_sample_completed_] 
        $T[WPIPE_filt_input_pipe_3308_update_start_] 
        $T[WPIPE_filt_input_pipe_3308_update_completed_] 
        ;;[WPIPE_filt_input_pipe_3308_Sample] 
        {
          // pipe write sample-start filt_input_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_filt_input_pipe_3308_Update] 
        {
          // pipe write update (complete) filt_input_pipe
          $T [req] $T [ack] 
        }
        WPIPE_filt_input_pipe_3308_sample_start_ &-> (WPIPE_filt_input_pipe_3308_Sample)
        WPIPE_filt_input_pipe_3308_sample_completed_ <-& (WPIPE_filt_input_pipe_3308_Sample)
        WPIPE_filt_input_pipe_3308_sample_completed_ &-> ($null)
        WPIPE_filt_input_pipe_3308_update_start_ &-> (WPIPE_filt_input_pipe_3308_Update)
        WPIPE_filt_input_pipe_3308_update_completed_ <-& (WPIPE_filt_input_pipe_3308_Update)
        WPIPE_filt_input_pipe_3308_sample_start_ <-& (R_iNsTr_23_3309_update_completed_)
        // barrier: 		filt_input_pipe := iNsTr_23
        // load-store dependencies..
        // pipe read/write dependencies for pipe filt_input_pipe
      }
      assign_stmt_3310__entry__ |-> (assign_stmt_3310)
      assign_stmt_3310__exit__ <-| (assign_stmt_3310)
      ::[call_stmt_3313] 
      {
        // 		$call QRSFilt (($bitcast ($uint<8>) _b00000000  ) ) () 
        //  file prog.linked.opt.aa, line 1257
        $T[call_stmt_3313_sample_start_] 
        $T[call_stmt_3313_sample_completed_] 
        $T[call_stmt_3313_update_start_] 
        $T[call_stmt_3313_update_completed_] 
        // Call input argument 0
        ;;[call_stmt_3313_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_3313_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_3313_sample_start_ &-> (call_stmt_3313_Sample)
        call_stmt_3313_sample_completed_ <-& (call_stmt_3313_Sample)
        call_stmt_3313_sample_completed_ &-> ($null)
        call_stmt_3313_update_start_ &-> (call_stmt_3313_Update)
        call_stmt_3313_update_completed_ <-& (call_stmt_3313_Update)
        // barrier: 		$call QRSFilt (($bitcast ($uint<8>) _b00000000  ) ) () 
        // load-store dependencies..
      }
      call_stmt_3313__entry__ |-> (call_stmt_3313)
      call_stmt_3313__exit__ <-| (call_stmt_3313)
      ::[assign_stmt_3316_to_assign_stmt_3319] 
      {
        // 		iNsTr_27 := timeSinceMaxPeak
        //  file prog.linked.opt.aa, line 1258
        // Source expression
        // timeSinceMaxPeak
        $T[LOAD_timeSinceMaxPeak_3315_sample_start_] 
        $T[LOAD_timeSinceMaxPeak_3315_sample_completed_] 
        $T[LOAD_timeSinceMaxPeak_3315_update_start_] 
        $T[LOAD_timeSinceMaxPeak_3315_update_completed_] 
        $T[LOAD_timeSinceMaxPeak_3315_sample_start_] 
        $T[LOAD_timeSinceMaxPeak_3315_sample_completed_] 
        $T[LOAD_timeSinceMaxPeak_3315_update_start_] 
        $T[LOAD_timeSinceMaxPeak_3315_update_completed_] 
        $T[LOAD_timeSinceMaxPeak_3315_word_address_calculated] 
        $T[LOAD_timeSinceMaxPeak_3315_root_address_calculated] 
        LOAD_timeSinceMaxPeak_3315_word_address_calculated <-& (LOAD_timeSinceMaxPeak_3315_root_address_calculated)
        ;;[LOAD_timeSinceMaxPeak_3315_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_timeSinceMaxPeak_3315_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_timeSinceMaxPeak_3315_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_timeSinceMaxPeak_3315_sample_start_ <-& (LOAD_timeSinceMaxPeak_3315_word_address_calculated)
        LOAD_timeSinceMaxPeak_3315_sample_start_ &-> (LOAD_timeSinceMaxPeak_3315_Sample)
        LOAD_timeSinceMaxPeak_3315_sample_completed_ <-& (LOAD_timeSinceMaxPeak_3315_Sample)
        LOAD_timeSinceMaxPeak_3315_sample_completed_ &-> ($null)
        LOAD_timeSinceMaxPeak_3315_update_start_ &-> (LOAD_timeSinceMaxPeak_3315_Update)
        LOAD_timeSinceMaxPeak_3315_update_completed_ <-& (LOAD_timeSinceMaxPeak_3315_Update)
        // Target expression
        // (as target) iNsTr_27
        // iNsTr_27
        // implicit reference
        // 		iNsTr_28 := maxPeak
        //  file prog.linked.opt.aa, line 1259
        // Source expression
        // maxPeak
        $T[LOAD_maxPeak_3318_sample_start_] 
        $T[LOAD_maxPeak_3318_sample_completed_] 
        $T[LOAD_maxPeak_3318_update_start_] 
        $T[LOAD_maxPeak_3318_update_completed_] 
        $T[LOAD_maxPeak_3318_sample_start_] 
        $T[LOAD_maxPeak_3318_sample_completed_] 
        $T[LOAD_maxPeak_3318_update_start_] 
        $T[LOAD_maxPeak_3318_update_completed_] 
        $T[LOAD_maxPeak_3318_word_address_calculated] 
        $T[LOAD_maxPeak_3318_root_address_calculated] 
        LOAD_maxPeak_3318_word_address_calculated <-& (LOAD_maxPeak_3318_root_address_calculated)
        ;;[LOAD_maxPeak_3318_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_maxPeak_3318_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_maxPeak_3318_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_maxPeak_3318_sample_start_ <-& (LOAD_maxPeak_3318_word_address_calculated)
        LOAD_maxPeak_3318_sample_start_ &-> (LOAD_maxPeak_3318_Sample)
        LOAD_maxPeak_3318_sample_completed_ <-& (LOAD_maxPeak_3318_Sample)
        LOAD_maxPeak_3318_sample_completed_ &-> ($null)
        LOAD_maxPeak_3318_update_start_ &-> (LOAD_maxPeak_3318_Update)
        LOAD_maxPeak_3318_update_completed_ <-& (LOAD_maxPeak_3318_Update)
        // Target expression
        // (as target) iNsTr_28
        // iNsTr_28
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3316_to_assign_stmt_3319__entry__ |-> (assign_stmt_3316_to_assign_stmt_3319)
      assign_stmt_3316_to_assign_stmt_3319__exit__ <-| (assign_stmt_3316_to_assign_stmt_3319)
      ::[assign_stmt_3322] 
      {
        // 		iNsTr_30 := filt_output_pipe
        //  file prog.linked.opt.aa, line 1260
        // Source expression
        // filt_output_pipe
        $T[RPIPE_filt_output_pipe_3321_sample_start_] 
        $T[RPIPE_filt_output_pipe_3321_sample_completed_] 
        $T[RPIPE_filt_output_pipe_3321_update_start_] 
        $T[RPIPE_filt_output_pipe_3321_update_completed_] 
        ;;[RPIPE_filt_output_pipe_3321_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_filt_output_pipe_3321_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_filt_output_pipe_3321_sample_start_ &-> (RPIPE_filt_output_pipe_3321_Sample)
        RPIPE_filt_output_pipe_3321_sample_completed_ <-& (RPIPE_filt_output_pipe_3321_Sample)
        RPIPE_filt_output_pipe_3321_sample_completed_ &-> ($null)
        RPIPE_filt_output_pipe_3321_update_start_ &-> (RPIPE_filt_output_pipe_3321_Update)
        RPIPE_filt_output_pipe_3321_update_completed_ <-& (RPIPE_filt_output_pipe_3321_Update)
        // Target expression
        // (as target) iNsTr_30
        // iNsTr_30
        // implicit reference
        // barrier: 		iNsTr_30 := filt_output_pipe
        // load-store dependencies..
        // pipe read/write dependencies for pipe filt_output_pipe
      }
      assign_stmt_3322__entry__ |-> (assign_stmt_3322)
      assign_stmt_3322__exit__ <-| (assign_stmt_3322)
      ::[assign_stmt_3330_to_assign_stmt_3406] 
      {
        // 		iNsTr_31 := (($bitcast ($int<32>) iNsTr_27 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.linked.opt.aa, line 1261
        // Source expression
        // (($bitcast ($int<32>) iNsTr_27 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[SGT_i32_u1_3329_sample_start_] 
        $T[SGT_i32_u1_3329_sample_completed_] 
        $T[SGT_i32_u1_3329_update_start_] 
        $T[SGT_i32_u1_3329_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_27 )
        $T[type_cast_3325_sample_start_] 
        $T[type_cast_3325_sample_completed_] 
        $T[type_cast_3325_update_start_] 
        $T[type_cast_3325_update_completed_] 
        // iNsTr_27
        $T[R_iNsTr_27_3324_sample_start_] 
        $T[R_iNsTr_27_3324_sample_completed_] 
        $T[R_iNsTr_27_3324_update_start_] 
        $T[R_iNsTr_27_3324_update_completed_] 
        // implicit reference
        R_iNsTr_27_3324_sample_start_ <-& ($entry)
        R_iNsTr_27_3324_sample_completed_ <-& (R_iNsTr_27_3324_sample_start_)
        R_iNsTr_27_3324_update_start_ <-& (R_iNsTr_27_3324_sample_completed_)
        R_iNsTr_27_3324_update_completed_ <-& (R_iNsTr_27_3324_update_start_)
        type_cast_3325_sample_start_ <-& (R_iNsTr_27_3324_update_completed_)
        ;;[type_cast_3325_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3325_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3325_sample_start_ &-> (type_cast_3325_Sample)
        type_cast_3325_sample_completed_ <-& (type_cast_3325_Sample)
        type_cast_3325_sample_completed_ &-> ($null)
        type_cast_3325_update_start_ &-> (type_cast_3325_Update)
        type_cast_3325_update_completed_ <-& (type_cast_3325_Update)
        // flow-through
        type_cast_3325_update_start_ <-& (type_cast_3325_sample_completed_)
        SGT_i32_u1_3329_sample_start_ <-& (type_cast_3325_update_completed_)
        ;;[SGT_i32_u1_3329_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_3329_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_3329_sample_start_ &-> (SGT_i32_u1_3329_Sample)
        SGT_i32_u1_3329_sample_completed_ <-& (SGT_i32_u1_3329_Sample)
        SGT_i32_u1_3329_sample_completed_ &-> ($null)
        SGT_i32_u1_3329_update_start_ &-> (SGT_i32_u1_3329_Update)
        SGT_i32_u1_3329_update_completed_ <-& (SGT_i32_u1_3329_Update)
        // Target expression
        // (as target) iNsTr_31
        // iNsTr_31
        // implicit reference
        // 		iNsTr_32 := ($cast ($uint<32>) iNsTr_31 )
        //  file prog.linked.opt.aa, line 1262
        // Source expression
        // ($cast ($uint<32>) iNsTr_31 )
        $T[type_cast_3333_sample_start_] 
        $T[type_cast_3333_sample_completed_] 
        $T[type_cast_3333_update_start_] 
        $T[type_cast_3333_update_completed_] 
        // iNsTr_31
        $T[R_iNsTr_31_3332_sample_start_] 
        $T[R_iNsTr_31_3332_sample_completed_] 
        $T[R_iNsTr_31_3332_update_start_] 
        $T[R_iNsTr_31_3332_update_completed_] 
        // implicit reference
        R_iNsTr_31_3332_sample_start_ <-& (SGT_i32_u1_3329_update_completed_)
        R_iNsTr_31_3332_sample_completed_ <-& (R_iNsTr_31_3332_sample_start_)
        R_iNsTr_31_3332_update_start_ <-& (R_iNsTr_31_3332_sample_completed_)
        R_iNsTr_31_3332_update_completed_ <-& (R_iNsTr_31_3332_update_start_)
        type_cast_3333_sample_start_ <-& (R_iNsTr_31_3332_update_completed_)
        ;;[type_cast_3333_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3333_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3333_sample_start_ &-> (type_cast_3333_Sample)
        type_cast_3333_sample_completed_ <-& (type_cast_3333_Sample)
        type_cast_3333_sample_completed_ &-> ($null)
        type_cast_3333_update_start_ &-> (type_cast_3333_Update)
        type_cast_3333_update_completed_ <-& (type_cast_3333_Update)
        // Target expression
        // (as target) iNsTr_32
        // iNsTr_32
        // implicit reference
        // 		iNsTr_33 := (iNsTr_32 + iNsTr_27)
        //  file prog.linked.opt.aa, line 1263
        // Source expression
        // (iNsTr_32 + iNsTr_27)
        $T[ADD_u32_u32_3338_sample_start_] 
        $T[ADD_u32_u32_3338_sample_completed_] 
        $T[ADD_u32_u32_3338_update_start_] 
        $T[ADD_u32_u32_3338_update_completed_] 
        // iNsTr_32
        $T[R_iNsTr_32_3336_sample_start_] 
        $T[R_iNsTr_32_3336_sample_completed_] 
        $T[R_iNsTr_32_3336_update_start_] 
        $T[R_iNsTr_32_3336_update_completed_] 
        // implicit reference
        R_iNsTr_32_3336_sample_start_ <-& (type_cast_3333_update_completed_)
        R_iNsTr_32_3336_sample_completed_ <-& (R_iNsTr_32_3336_sample_start_)
        R_iNsTr_32_3336_update_start_ <-& (R_iNsTr_32_3336_sample_completed_)
        R_iNsTr_32_3336_update_completed_ <-& (R_iNsTr_32_3336_update_start_)
        // iNsTr_27
        $T[R_iNsTr_27_3337_sample_start_] 
        $T[R_iNsTr_27_3337_sample_completed_] 
        $T[R_iNsTr_27_3337_update_start_] 
        $T[R_iNsTr_27_3337_update_completed_] 
        // implicit reference
        R_iNsTr_27_3337_sample_start_ <-& ($entry)
        R_iNsTr_27_3337_sample_completed_ <-& (R_iNsTr_27_3337_sample_start_)
        R_iNsTr_27_3337_update_start_ <-& (R_iNsTr_27_3337_sample_completed_)
        R_iNsTr_27_3337_update_completed_ <-& (R_iNsTr_27_3337_update_start_)
        ADD_u32_u32_3338_sample_start_ <-& (R_iNsTr_32_3336_update_completed_)
        ADD_u32_u32_3338_sample_start_ <-& (R_iNsTr_27_3337_update_completed_)
        ;;[ADD_u32_u32_3338_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_3338_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_3338_sample_start_ &-> (ADD_u32_u32_3338_Sample)
        ADD_u32_u32_3338_sample_completed_ <-& (ADD_u32_u32_3338_Sample)
        ADD_u32_u32_3338_sample_completed_ &-> ($null)
        ADD_u32_u32_3338_update_start_ &-> (ADD_u32_u32_3338_Update)
        ADD_u32_u32_3338_update_completed_ <-& (ADD_u32_u32_3338_Update)
        // Target expression
        // (as target) iNsTr_33
        // iNsTr_33
        // implicit reference
        // 		iNsTr_34 := lastDatum
        //  file prog.linked.opt.aa, line 1264
        // Source expression
        // lastDatum
        $T[LOAD_lastDatum_3341_sample_start_] 
        $T[LOAD_lastDatum_3341_sample_completed_] 
        $T[LOAD_lastDatum_3341_update_start_] 
        $T[LOAD_lastDatum_3341_update_completed_] 
        $T[LOAD_lastDatum_3341_sample_start_] 
        $T[LOAD_lastDatum_3341_sample_completed_] 
        $T[LOAD_lastDatum_3341_update_start_] 
        $T[LOAD_lastDatum_3341_update_completed_] 
        $T[LOAD_lastDatum_3341_word_address_calculated] 
        $T[LOAD_lastDatum_3341_root_address_calculated] 
        LOAD_lastDatum_3341_word_address_calculated <-& (LOAD_lastDatum_3341_root_address_calculated)
        ;;[LOAD_lastDatum_3341_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_lastDatum_3341_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_lastDatum_3341_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_lastDatum_3341_sample_start_ <-& (LOAD_lastDatum_3341_word_address_calculated)
        LOAD_lastDatum_3341_sample_start_ &-> (LOAD_lastDatum_3341_Sample)
        LOAD_lastDatum_3341_sample_completed_ <-& (LOAD_lastDatum_3341_Sample)
        LOAD_lastDatum_3341_sample_completed_ &-> ($null)
        LOAD_lastDatum_3341_update_start_ &-> (LOAD_lastDatum_3341_Update)
        LOAD_lastDatum_3341_update_completed_ <-& (LOAD_lastDatum_3341_Update)
        // Target expression
        // (as target) iNsTr_34
        // iNsTr_34
        // implicit reference
        // 		iNsTr_35 := (($bitcast ($int<32>) iNsTr_30 ) > ($bitcast ($int<32>) iNsTr_34 ))
        //  file prog.linked.opt.aa, line 1265
        // Source expression
        // (($bitcast ($int<32>) iNsTr_30 ) > ($bitcast ($int<32>) iNsTr_34 ))
        $T[SGT_i32_u1_3348_sample_start_] 
        $T[SGT_i32_u1_3348_sample_completed_] 
        $T[SGT_i32_u1_3348_update_start_] 
        $T[SGT_i32_u1_3348_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_30 )
        $T[type_cast_3345_sample_start_] 
        $T[type_cast_3345_sample_completed_] 
        $T[type_cast_3345_update_start_] 
        $T[type_cast_3345_update_completed_] 
        // iNsTr_30
        $T[R_iNsTr_30_3344_sample_start_] 
        $T[R_iNsTr_30_3344_sample_completed_] 
        $T[R_iNsTr_30_3344_update_start_] 
        $T[R_iNsTr_30_3344_update_completed_] 
        // implicit reference
        R_iNsTr_30_3344_sample_start_ <-& ($entry)
        R_iNsTr_30_3344_sample_completed_ <-& (R_iNsTr_30_3344_sample_start_)
        R_iNsTr_30_3344_update_start_ <-& (R_iNsTr_30_3344_sample_completed_)
        R_iNsTr_30_3344_update_completed_ <-& (R_iNsTr_30_3344_update_start_)
        type_cast_3345_sample_start_ <-& (R_iNsTr_30_3344_update_completed_)
        ;;[type_cast_3345_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3345_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3345_sample_start_ &-> (type_cast_3345_Sample)
        type_cast_3345_sample_completed_ <-& (type_cast_3345_Sample)
        type_cast_3345_sample_completed_ &-> ($null)
        type_cast_3345_update_start_ &-> (type_cast_3345_Update)
        type_cast_3345_update_completed_ <-& (type_cast_3345_Update)
        // flow-through
        type_cast_3345_update_start_ <-& (type_cast_3345_sample_completed_)
        // ($bitcast ($int<32>) iNsTr_34 )
        $T[type_cast_3347_sample_start_] 
        $T[type_cast_3347_sample_completed_] 
        $T[type_cast_3347_update_start_] 
        $T[type_cast_3347_update_completed_] 
        // iNsTr_34
        $T[R_iNsTr_34_3346_sample_start_] 
        $T[R_iNsTr_34_3346_sample_completed_] 
        $T[R_iNsTr_34_3346_update_start_] 
        $T[R_iNsTr_34_3346_update_completed_] 
        // implicit reference
        R_iNsTr_34_3346_sample_start_ <-& (LOAD_lastDatum_3341_update_completed_)
        R_iNsTr_34_3346_sample_completed_ <-& (R_iNsTr_34_3346_sample_start_)
        R_iNsTr_34_3346_update_start_ <-& (R_iNsTr_34_3346_sample_completed_)
        R_iNsTr_34_3346_update_completed_ <-& (R_iNsTr_34_3346_update_start_)
        type_cast_3347_sample_start_ <-& (R_iNsTr_34_3346_update_completed_)
        ;;[type_cast_3347_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3347_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3347_sample_start_ &-> (type_cast_3347_Sample)
        type_cast_3347_sample_completed_ <-& (type_cast_3347_Sample)
        type_cast_3347_sample_completed_ &-> ($null)
        type_cast_3347_update_start_ &-> (type_cast_3347_Update)
        type_cast_3347_update_completed_ <-& (type_cast_3347_Update)
        // flow-through
        type_cast_3347_update_start_ <-& (type_cast_3347_sample_completed_)
        SGT_i32_u1_3348_sample_start_ <-& (type_cast_3345_update_completed_)
        SGT_i32_u1_3348_sample_start_ <-& (type_cast_3347_update_completed_)
        ;;[SGT_i32_u1_3348_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_3348_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_3348_sample_start_ &-> (SGT_i32_u1_3348_Sample)
        SGT_i32_u1_3348_sample_completed_ <-& (SGT_i32_u1_3348_Sample)
        SGT_i32_u1_3348_sample_completed_ &-> ($null)
        SGT_i32_u1_3348_update_start_ &-> (SGT_i32_u1_3348_Update)
        SGT_i32_u1_3348_update_completed_ <-& (SGT_i32_u1_3348_Update)
        // Target expression
        // (as target) iNsTr_35
        // iNsTr_35
        // implicit reference
        // 		iNsTr_36 := (($bitcast ($int<32>) iNsTr_30 ) > ($bitcast ($int<32>) iNsTr_28 ))
        //  file prog.linked.opt.aa, line 1266
        // Source expression
        // (($bitcast ($int<32>) iNsTr_30 ) > ($bitcast ($int<32>) iNsTr_28 ))
        $T[SGT_i32_u1_3355_sample_start_] 
        $T[SGT_i32_u1_3355_sample_completed_] 
        $T[SGT_i32_u1_3355_update_start_] 
        $T[SGT_i32_u1_3355_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_30 )
        $T[type_cast_3352_sample_start_] 
        $T[type_cast_3352_sample_completed_] 
        $T[type_cast_3352_update_start_] 
        $T[type_cast_3352_update_completed_] 
        // iNsTr_30
        $T[R_iNsTr_30_3351_sample_start_] 
        $T[R_iNsTr_30_3351_sample_completed_] 
        $T[R_iNsTr_30_3351_update_start_] 
        $T[R_iNsTr_30_3351_update_completed_] 
        // implicit reference
        R_iNsTr_30_3351_sample_start_ <-& ($entry)
        R_iNsTr_30_3351_sample_completed_ <-& (R_iNsTr_30_3351_sample_start_)
        R_iNsTr_30_3351_update_start_ <-& (R_iNsTr_30_3351_sample_completed_)
        R_iNsTr_30_3351_update_completed_ <-& (R_iNsTr_30_3351_update_start_)
        type_cast_3352_sample_start_ <-& (R_iNsTr_30_3351_update_completed_)
        ;;[type_cast_3352_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3352_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3352_sample_start_ &-> (type_cast_3352_Sample)
        type_cast_3352_sample_completed_ <-& (type_cast_3352_Sample)
        type_cast_3352_sample_completed_ &-> ($null)
        type_cast_3352_update_start_ &-> (type_cast_3352_Update)
        type_cast_3352_update_completed_ <-& (type_cast_3352_Update)
        // flow-through
        type_cast_3352_update_start_ <-& (type_cast_3352_sample_completed_)
        // ($bitcast ($int<32>) iNsTr_28 )
        $T[type_cast_3354_sample_start_] 
        $T[type_cast_3354_sample_completed_] 
        $T[type_cast_3354_update_start_] 
        $T[type_cast_3354_update_completed_] 
        // iNsTr_28
        $T[R_iNsTr_28_3353_sample_start_] 
        $T[R_iNsTr_28_3353_sample_completed_] 
        $T[R_iNsTr_28_3353_update_start_] 
        $T[R_iNsTr_28_3353_update_completed_] 
        // implicit reference
        R_iNsTr_28_3353_sample_start_ <-& ($entry)
        R_iNsTr_28_3353_sample_completed_ <-& (R_iNsTr_28_3353_sample_start_)
        R_iNsTr_28_3353_update_start_ <-& (R_iNsTr_28_3353_sample_completed_)
        R_iNsTr_28_3353_update_completed_ <-& (R_iNsTr_28_3353_update_start_)
        type_cast_3354_sample_start_ <-& (R_iNsTr_28_3353_update_completed_)
        ;;[type_cast_3354_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3354_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3354_sample_start_ &-> (type_cast_3354_Sample)
        type_cast_3354_sample_completed_ <-& (type_cast_3354_Sample)
        type_cast_3354_sample_completed_ &-> ($null)
        type_cast_3354_update_start_ &-> (type_cast_3354_Update)
        type_cast_3354_update_completed_ <-& (type_cast_3354_Update)
        // flow-through
        type_cast_3354_update_start_ <-& (type_cast_3354_sample_completed_)
        SGT_i32_u1_3355_sample_start_ <-& (type_cast_3352_update_completed_)
        SGT_i32_u1_3355_sample_start_ <-& (type_cast_3354_update_completed_)
        ;;[SGT_i32_u1_3355_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_3355_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_3355_sample_start_ &-> (SGT_i32_u1_3355_Sample)
        SGT_i32_u1_3355_sample_completed_ <-& (SGT_i32_u1_3355_Sample)
        SGT_i32_u1_3355_sample_completed_ &-> ($null)
        SGT_i32_u1_3355_update_start_ &-> (SGT_i32_u1_3355_Update)
        SGT_i32_u1_3355_update_completed_ <-& (SGT_i32_u1_3355_Update)
        // Target expression
        // (as target) iNsTr_36
        // iNsTr_36
        // implicit reference
        // 		iNsTr_37 := (iNsTr_35 & iNsTr_36)
        //  file prog.linked.opt.aa, line 1267
        // Source expression
        // (iNsTr_35 & iNsTr_36)
        $T[AND_u1_u1_3360_sample_start_] 
        $T[AND_u1_u1_3360_sample_completed_] 
        $T[AND_u1_u1_3360_update_start_] 
        $T[AND_u1_u1_3360_update_completed_] 
        // iNsTr_35
        $T[R_iNsTr_35_3358_sample_start_] 
        $T[R_iNsTr_35_3358_sample_completed_] 
        $T[R_iNsTr_35_3358_update_start_] 
        $T[R_iNsTr_35_3358_update_completed_] 
        // implicit reference
        R_iNsTr_35_3358_sample_start_ <-& (SGT_i32_u1_3348_update_completed_)
        R_iNsTr_35_3358_sample_completed_ <-& (R_iNsTr_35_3358_sample_start_)
        R_iNsTr_35_3358_update_start_ <-& (R_iNsTr_35_3358_sample_completed_)
        R_iNsTr_35_3358_update_completed_ <-& (R_iNsTr_35_3358_update_start_)
        // iNsTr_36
        $T[R_iNsTr_36_3359_sample_start_] 
        $T[R_iNsTr_36_3359_sample_completed_] 
        $T[R_iNsTr_36_3359_update_start_] 
        $T[R_iNsTr_36_3359_update_completed_] 
        // implicit reference
        R_iNsTr_36_3359_sample_start_ <-& (SGT_i32_u1_3355_update_completed_)
        R_iNsTr_36_3359_sample_completed_ <-& (R_iNsTr_36_3359_sample_start_)
        R_iNsTr_36_3359_update_start_ <-& (R_iNsTr_36_3359_sample_completed_)
        R_iNsTr_36_3359_update_completed_ <-& (R_iNsTr_36_3359_update_start_)
        AND_u1_u1_3360_sample_start_ <-& (R_iNsTr_35_3358_update_completed_)
        AND_u1_u1_3360_sample_start_ <-& (R_iNsTr_36_3359_update_completed_)
        ;;[AND_u1_u1_3360_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_3360_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_3360_sample_start_ &-> (AND_u1_u1_3360_Sample)
        AND_u1_u1_3360_sample_completed_ <-& (AND_u1_u1_3360_Sample)
        AND_u1_u1_3360_sample_completed_ &-> ($null)
        AND_u1_u1_3360_update_start_ &-> (AND_u1_u1_3360_Update)
        AND_u1_u1_3360_update_completed_ <-& (AND_u1_u1_3360_Update)
        // Target expression
        // (as target) iNsTr_37
        // iNsTr_37
        // implicit reference
        // 		iNsTr_38 := ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_28 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) )
        //  file prog.linked.opt.aa, line 1268
        // Source expression
        // ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_28 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) )
        $T[type_cast_3369_sample_start_] 
        $T[type_cast_3369_sample_completed_] 
        $T[type_cast_3369_update_start_] 
        $T[type_cast_3369_update_completed_] 
        // (($bitcast ($int<32>) iNsTr_28 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
        $T[ASHR_i32_i32_3368_sample_start_] 
        $T[ASHR_i32_i32_3368_sample_completed_] 
        $T[ASHR_i32_i32_3368_update_start_] 
        $T[ASHR_i32_i32_3368_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_28 )
        $T[type_cast_3364_sample_start_] 
        $T[type_cast_3364_sample_completed_] 
        $T[type_cast_3364_update_start_] 
        $T[type_cast_3364_update_completed_] 
        // iNsTr_28
        $T[R_iNsTr_28_3363_sample_start_] 
        $T[R_iNsTr_28_3363_sample_completed_] 
        $T[R_iNsTr_28_3363_update_start_] 
        $T[R_iNsTr_28_3363_update_completed_] 
        // implicit reference
        R_iNsTr_28_3363_sample_start_ <-& ($entry)
        R_iNsTr_28_3363_sample_completed_ <-& (R_iNsTr_28_3363_sample_start_)
        R_iNsTr_28_3363_update_start_ <-& (R_iNsTr_28_3363_sample_completed_)
        R_iNsTr_28_3363_update_completed_ <-& (R_iNsTr_28_3363_update_start_)
        type_cast_3364_sample_start_ <-& (R_iNsTr_28_3363_update_completed_)
        ;;[type_cast_3364_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3364_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3364_sample_start_ &-> (type_cast_3364_Sample)
        type_cast_3364_sample_completed_ <-& (type_cast_3364_Sample)
        type_cast_3364_sample_completed_ &-> ($null)
        type_cast_3364_update_start_ &-> (type_cast_3364_Update)
        type_cast_3364_update_completed_ <-& (type_cast_3364_Update)
        // flow-through
        type_cast_3364_update_start_ <-& (type_cast_3364_sample_completed_)
        ASHR_i32_i32_3368_sample_start_ <-& (type_cast_3364_update_completed_)
        ;;[ASHR_i32_i32_3368_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ASHR_i32_i32_3368_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ASHR_i32_i32_3368_sample_start_ &-> (ASHR_i32_i32_3368_Sample)
        ASHR_i32_i32_3368_sample_completed_ <-& (ASHR_i32_i32_3368_Sample)
        ASHR_i32_i32_3368_sample_completed_ &-> ($null)
        ASHR_i32_i32_3368_update_start_ &-> (ASHR_i32_i32_3368_Update)
        ASHR_i32_i32_3368_update_completed_ <-& (ASHR_i32_i32_3368_Update)
        // flow-through
        ASHR_i32_i32_3368_update_start_ <-& (ASHR_i32_i32_3368_sample_completed_)
        type_cast_3369_sample_start_ <-& (ASHR_i32_i32_3368_update_completed_)
        ;;[type_cast_3369_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3369_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3369_sample_start_ &-> (type_cast_3369_Sample)
        type_cast_3369_sample_completed_ <-& (type_cast_3369_Sample)
        type_cast_3369_sample_completed_ &-> ($null)
        type_cast_3369_update_start_ &-> (type_cast_3369_Update)
        type_cast_3369_update_completed_ <-& (type_cast_3369_Update)
        // Target expression
        // (as target) iNsTr_38
        // iNsTr_38
        // implicit reference
        // 		iNsTr_39 := (($bitcast ($int<32>) iNsTr_30 ) < ($bitcast ($int<32>) iNsTr_38 ))
        //  file prog.linked.opt.aa, line 1269
        // Source expression
        // (($bitcast ($int<32>) iNsTr_30 ) < ($bitcast ($int<32>) iNsTr_38 ))
        $T[SLT_i32_u1_3376_sample_start_] 
        $T[SLT_i32_u1_3376_sample_completed_] 
        $T[SLT_i32_u1_3376_update_start_] 
        $T[SLT_i32_u1_3376_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_30 )
        $T[type_cast_3373_sample_start_] 
        $T[type_cast_3373_sample_completed_] 
        $T[type_cast_3373_update_start_] 
        $T[type_cast_3373_update_completed_] 
        // iNsTr_30
        $T[R_iNsTr_30_3372_sample_start_] 
        $T[R_iNsTr_30_3372_sample_completed_] 
        $T[R_iNsTr_30_3372_update_start_] 
        $T[R_iNsTr_30_3372_update_completed_] 
        // implicit reference
        R_iNsTr_30_3372_sample_start_ <-& ($entry)
        R_iNsTr_30_3372_sample_completed_ <-& (R_iNsTr_30_3372_sample_start_)
        R_iNsTr_30_3372_update_start_ <-& (R_iNsTr_30_3372_sample_completed_)
        R_iNsTr_30_3372_update_completed_ <-& (R_iNsTr_30_3372_update_start_)
        type_cast_3373_sample_start_ <-& (R_iNsTr_30_3372_update_completed_)
        ;;[type_cast_3373_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3373_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3373_sample_start_ &-> (type_cast_3373_Sample)
        type_cast_3373_sample_completed_ <-& (type_cast_3373_Sample)
        type_cast_3373_sample_completed_ &-> ($null)
        type_cast_3373_update_start_ &-> (type_cast_3373_Update)
        type_cast_3373_update_completed_ <-& (type_cast_3373_Update)
        // flow-through
        type_cast_3373_update_start_ <-& (type_cast_3373_sample_completed_)
        // ($bitcast ($int<32>) iNsTr_38 )
        $T[type_cast_3375_sample_start_] 
        $T[type_cast_3375_sample_completed_] 
        $T[type_cast_3375_update_start_] 
        $T[type_cast_3375_update_completed_] 
        // iNsTr_38
        $T[R_iNsTr_38_3374_sample_start_] 
        $T[R_iNsTr_38_3374_sample_completed_] 
        $T[R_iNsTr_38_3374_update_start_] 
        $T[R_iNsTr_38_3374_update_completed_] 
        // implicit reference
        R_iNsTr_38_3374_sample_start_ <-& (type_cast_3369_update_completed_)
        R_iNsTr_38_3374_sample_completed_ <-& (R_iNsTr_38_3374_sample_start_)
        R_iNsTr_38_3374_update_start_ <-& (R_iNsTr_38_3374_sample_completed_)
        R_iNsTr_38_3374_update_completed_ <-& (R_iNsTr_38_3374_update_start_)
        type_cast_3375_sample_start_ <-& (R_iNsTr_38_3374_update_completed_)
        ;;[type_cast_3375_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3375_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3375_sample_start_ &-> (type_cast_3375_Sample)
        type_cast_3375_sample_completed_ <-& (type_cast_3375_Sample)
        type_cast_3375_sample_completed_ &-> ($null)
        type_cast_3375_update_start_ &-> (type_cast_3375_Update)
        type_cast_3375_update_completed_ <-& (type_cast_3375_Update)
        // flow-through
        type_cast_3375_update_start_ <-& (type_cast_3375_sample_completed_)
        SLT_i32_u1_3376_sample_start_ <-& (type_cast_3373_update_completed_)
        SLT_i32_u1_3376_sample_start_ <-& (type_cast_3375_update_completed_)
        ;;[SLT_i32_u1_3376_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_i32_u1_3376_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_i32_u1_3376_sample_start_ &-> (SLT_i32_u1_3376_Sample)
        SLT_i32_u1_3376_sample_completed_ <-& (SLT_i32_u1_3376_Sample)
        SLT_i32_u1_3376_sample_completed_ &-> ($null)
        SLT_i32_u1_3376_update_start_ &-> (SLT_i32_u1_3376_Update)
        SLT_i32_u1_3376_update_completed_ <-& (SLT_i32_u1_3376_Update)
        // Target expression
        // (as target) iNsTr_39
        // iNsTr_39
        // implicit reference
        // 		iNsTr_40 := (($bitcast ($int<32>) iNsTr_33 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010011  ) ))
        //  file prog.linked.opt.aa, line 1270
        // Source expression
        // (($bitcast ($int<32>) iNsTr_33 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010011  ) ))
        $T[SGT_i32_u1_3384_sample_start_] 
        $T[SGT_i32_u1_3384_sample_completed_] 
        $T[SGT_i32_u1_3384_update_start_] 
        $T[SGT_i32_u1_3384_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_33 )
        $T[type_cast_3380_sample_start_] 
        $T[type_cast_3380_sample_completed_] 
        $T[type_cast_3380_update_start_] 
        $T[type_cast_3380_update_completed_] 
        // iNsTr_33
        $T[R_iNsTr_33_3379_sample_start_] 
        $T[R_iNsTr_33_3379_sample_completed_] 
        $T[R_iNsTr_33_3379_update_start_] 
        $T[R_iNsTr_33_3379_update_completed_] 
        // implicit reference
        R_iNsTr_33_3379_sample_start_ <-& (ADD_u32_u32_3338_update_completed_)
        R_iNsTr_33_3379_sample_completed_ <-& (R_iNsTr_33_3379_sample_start_)
        R_iNsTr_33_3379_update_start_ <-& (R_iNsTr_33_3379_sample_completed_)
        R_iNsTr_33_3379_update_completed_ <-& (R_iNsTr_33_3379_update_start_)
        type_cast_3380_sample_start_ <-& (R_iNsTr_33_3379_update_completed_)
        ;;[type_cast_3380_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3380_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3380_sample_start_ &-> (type_cast_3380_Sample)
        type_cast_3380_sample_completed_ <-& (type_cast_3380_Sample)
        type_cast_3380_sample_completed_ &-> ($null)
        type_cast_3380_update_start_ &-> (type_cast_3380_Update)
        type_cast_3380_update_completed_ <-& (type_cast_3380_Update)
        // flow-through
        type_cast_3380_update_start_ <-& (type_cast_3380_sample_completed_)
        SGT_i32_u1_3384_sample_start_ <-& (type_cast_3380_update_completed_)
        ;;[SGT_i32_u1_3384_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_3384_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_3384_sample_start_ &-> (SGT_i32_u1_3384_Sample)
        SGT_i32_u1_3384_sample_completed_ <-& (SGT_i32_u1_3384_Sample)
        SGT_i32_u1_3384_sample_completed_ &-> ($null)
        SGT_i32_u1_3384_update_start_ &-> (SGT_i32_u1_3384_Update)
        SGT_i32_u1_3384_update_completed_ <-& (SGT_i32_u1_3384_Update)
        // Target expression
        // (as target) iNsTr_40
        // iNsTr_40
        // implicit reference
        // 		orx_xcondx_xi := (iNsTr_39 | iNsTr_40)
        //  file prog.linked.opt.aa, line 1271
        // Source expression
        // (iNsTr_39 | iNsTr_40)
        $T[OR_u1_u1_3389_sample_start_] 
        $T[OR_u1_u1_3389_sample_completed_] 
        $T[OR_u1_u1_3389_update_start_] 
        $T[OR_u1_u1_3389_update_completed_] 
        // iNsTr_39
        $T[R_iNsTr_39_3387_sample_start_] 
        $T[R_iNsTr_39_3387_sample_completed_] 
        $T[R_iNsTr_39_3387_update_start_] 
        $T[R_iNsTr_39_3387_update_completed_] 
        // implicit reference
        R_iNsTr_39_3387_sample_start_ <-& (SLT_i32_u1_3376_update_completed_)
        R_iNsTr_39_3387_sample_completed_ <-& (R_iNsTr_39_3387_sample_start_)
        R_iNsTr_39_3387_update_start_ <-& (R_iNsTr_39_3387_sample_completed_)
        R_iNsTr_39_3387_update_completed_ <-& (R_iNsTr_39_3387_update_start_)
        // iNsTr_40
        $T[R_iNsTr_40_3388_sample_start_] 
        $T[R_iNsTr_40_3388_sample_completed_] 
        $T[R_iNsTr_40_3388_update_start_] 
        $T[R_iNsTr_40_3388_update_completed_] 
        // implicit reference
        R_iNsTr_40_3388_sample_start_ <-& (SGT_i32_u1_3384_update_completed_)
        R_iNsTr_40_3388_sample_completed_ <-& (R_iNsTr_40_3388_sample_start_)
        R_iNsTr_40_3388_update_start_ <-& (R_iNsTr_40_3388_sample_completed_)
        R_iNsTr_40_3388_update_completed_ <-& (R_iNsTr_40_3388_update_start_)
        OR_u1_u1_3389_sample_start_ <-& (R_iNsTr_39_3387_update_completed_)
        OR_u1_u1_3389_sample_start_ <-& (R_iNsTr_40_3388_update_completed_)
        ;;[OR_u1_u1_3389_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u1_u1_3389_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u1_u1_3389_sample_start_ &-> (OR_u1_u1_3389_Sample)
        OR_u1_u1_3389_sample_completed_ <-& (OR_u1_u1_3389_Sample)
        OR_u1_u1_3389_sample_completed_ &-> ($null)
        OR_u1_u1_3389_update_start_ &-> (OR_u1_u1_3389_Update)
        OR_u1_u1_3389_update_completed_ <-& (OR_u1_u1_3389_Update)
        // Target expression
        // (as target) orx_xcondx_xi
        // orx_xcondx_xi
        // implicit reference
        // 		xx_xdemorgan42 := (iNsTr_35 & iNsTr_36)
        //  file prog.linked.opt.aa, line 1272
        // Source expression
        // (iNsTr_35 & iNsTr_36)
        $T[AND_u1_u1_3394_sample_start_] 
        $T[AND_u1_u1_3394_sample_completed_] 
        $T[AND_u1_u1_3394_update_start_] 
        $T[AND_u1_u1_3394_update_completed_] 
        // iNsTr_35
        $T[R_iNsTr_35_3392_sample_start_] 
        $T[R_iNsTr_35_3392_sample_completed_] 
        $T[R_iNsTr_35_3392_update_start_] 
        $T[R_iNsTr_35_3392_update_completed_] 
        // implicit reference
        R_iNsTr_35_3392_sample_start_ <-& (SGT_i32_u1_3348_update_completed_)
        R_iNsTr_35_3392_sample_completed_ <-& (R_iNsTr_35_3392_sample_start_)
        R_iNsTr_35_3392_update_start_ <-& (R_iNsTr_35_3392_sample_completed_)
        R_iNsTr_35_3392_update_completed_ <-& (R_iNsTr_35_3392_update_start_)
        // iNsTr_36
        $T[R_iNsTr_36_3393_sample_start_] 
        $T[R_iNsTr_36_3393_sample_completed_] 
        $T[R_iNsTr_36_3393_update_start_] 
        $T[R_iNsTr_36_3393_update_completed_] 
        // implicit reference
        R_iNsTr_36_3393_sample_start_ <-& (SGT_i32_u1_3355_update_completed_)
        R_iNsTr_36_3393_sample_completed_ <-& (R_iNsTr_36_3393_sample_start_)
        R_iNsTr_36_3393_update_start_ <-& (R_iNsTr_36_3393_sample_completed_)
        R_iNsTr_36_3393_update_completed_ <-& (R_iNsTr_36_3393_update_start_)
        AND_u1_u1_3394_sample_start_ <-& (R_iNsTr_35_3392_update_completed_)
        AND_u1_u1_3394_sample_start_ <-& (R_iNsTr_36_3393_update_completed_)
        ;;[AND_u1_u1_3394_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_3394_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_3394_sample_start_ &-> (AND_u1_u1_3394_Sample)
        AND_u1_u1_3394_sample_completed_ <-& (AND_u1_u1_3394_Sample)
        AND_u1_u1_3394_sample_completed_ &-> ($null)
        AND_u1_u1_3394_update_start_ &-> (AND_u1_u1_3394_Update)
        AND_u1_u1_3394_update_completed_ <-& (AND_u1_u1_3394_Update)
        // Target expression
        // (as target) xx_xdemorgan42
        // xx_xdemorgan42
        // implicit reference
        // 		iNsTr_41 := (xx_xdemorgan42 ^ ($bitcast ($uint<1>) _b1  ))
        //  file prog.linked.opt.aa, line 1273
        // Source expression
        // (xx_xdemorgan42 ^ ($bitcast ($uint<1>) _b1  ))
        $T[XOR_u1_u1_3400_sample_start_] 
        $T[XOR_u1_u1_3400_sample_completed_] 
        $T[XOR_u1_u1_3400_update_start_] 
        $T[XOR_u1_u1_3400_update_completed_] 
        // xx_xdemorgan42
        $T[R_xx_xdemorgan42_3397_sample_start_] 
        $T[R_xx_xdemorgan42_3397_sample_completed_] 
        $T[R_xx_xdemorgan42_3397_update_start_] 
        $T[R_xx_xdemorgan42_3397_update_completed_] 
        // implicit reference
        R_xx_xdemorgan42_3397_sample_start_ <-& (AND_u1_u1_3394_update_completed_)
        R_xx_xdemorgan42_3397_sample_completed_ <-& (R_xx_xdemorgan42_3397_sample_start_)
        R_xx_xdemorgan42_3397_update_start_ <-& (R_xx_xdemorgan42_3397_sample_completed_)
        R_xx_xdemorgan42_3397_update_completed_ <-& (R_xx_xdemorgan42_3397_update_start_)
        XOR_u1_u1_3400_sample_start_ <-& (R_xx_xdemorgan42_3397_update_completed_)
        ;;[XOR_u1_u1_3400_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u1_u1_3400_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u1_u1_3400_sample_start_ &-> (XOR_u1_u1_3400_Sample)
        XOR_u1_u1_3400_sample_completed_ <-& (XOR_u1_u1_3400_Sample)
        XOR_u1_u1_3400_sample_completed_ &-> ($null)
        XOR_u1_u1_3400_update_start_ &-> (XOR_u1_u1_3400_Update)
        XOR_u1_u1_3400_update_completed_ <-& (XOR_u1_u1_3400_Update)
        // Target expression
        // (as target) iNsTr_41
        // iNsTr_41
        // implicit reference
        // 		iNsTr_42 := (orx_xcondx_xi & iNsTr_41)
        //  file prog.linked.opt.aa, line 1274
        // Source expression
        // (orx_xcondx_xi & iNsTr_41)
        $T[AND_u1_u1_3405_sample_start_] 
        $T[AND_u1_u1_3405_sample_completed_] 
        $T[AND_u1_u1_3405_update_start_] 
        $T[AND_u1_u1_3405_update_completed_] 
        // orx_xcondx_xi
        $T[R_orx_xcondx_xi_3403_sample_start_] 
        $T[R_orx_xcondx_xi_3403_sample_completed_] 
        $T[R_orx_xcondx_xi_3403_update_start_] 
        $T[R_orx_xcondx_xi_3403_update_completed_] 
        // implicit reference
        R_orx_xcondx_xi_3403_sample_start_ <-& (OR_u1_u1_3389_update_completed_)
        R_orx_xcondx_xi_3403_sample_completed_ <-& (R_orx_xcondx_xi_3403_sample_start_)
        R_orx_xcondx_xi_3403_update_start_ <-& (R_orx_xcondx_xi_3403_sample_completed_)
        R_orx_xcondx_xi_3403_update_completed_ <-& (R_orx_xcondx_xi_3403_update_start_)
        // iNsTr_41
        $T[R_iNsTr_41_3404_sample_start_] 
        $T[R_iNsTr_41_3404_sample_completed_] 
        $T[R_iNsTr_41_3404_update_start_] 
        $T[R_iNsTr_41_3404_update_completed_] 
        // implicit reference
        R_iNsTr_41_3404_sample_start_ <-& (XOR_u1_u1_3400_update_completed_)
        R_iNsTr_41_3404_sample_completed_ <-& (R_iNsTr_41_3404_sample_start_)
        R_iNsTr_41_3404_update_start_ <-& (R_iNsTr_41_3404_sample_completed_)
        R_iNsTr_41_3404_update_completed_ <-& (R_iNsTr_41_3404_update_start_)
        AND_u1_u1_3405_sample_start_ <-& (R_orx_xcondx_xi_3403_update_completed_)
        AND_u1_u1_3405_sample_start_ <-& (R_iNsTr_41_3404_update_completed_)
        ;;[AND_u1_u1_3405_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_3405_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_3405_sample_start_ &-> (AND_u1_u1_3405_Sample)
        AND_u1_u1_3405_sample_completed_ <-& (AND_u1_u1_3405_Sample)
        AND_u1_u1_3405_sample_completed_ &-> ($null)
        AND_u1_u1_3405_update_start_ &-> (AND_u1_u1_3405_Update)
        AND_u1_u1_3405_update_completed_ <-& (AND_u1_u1_3405_Update)
        // Target expression
        // (as target) iNsTr_42
        // iNsTr_42
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3330_to_assign_stmt_3406__entry__ |-> (assign_stmt_3330_to_assign_stmt_3406)
      assign_stmt_3330_to_assign_stmt_3406__exit__ <-| (assign_stmt_3330_to_assign_stmt_3406)
      // if-statement  
      //  file prog.linked.opt.aa, line 1275
      ;;[if_stmt_3407_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3407__entry__ |-> (if_stmt_3407_dead_link)
      if_stmt_3407__exit__ <-| (if_stmt_3407_dead_link)
      ;;[if_stmt_3407_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3407__entry__ |-> (if_stmt_3407_eval_test)
      $P [R_iNsTr_42_3408_place]
      R_iNsTr_42_3408_place <-| (if_stmt_3407_eval_test)
      ;;[if_stmt_3407_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3407_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_42_3408_place |-> (if_stmt_3407_if_link if_stmt_3407_else_link)
      $P [bb_5_bb_6]
      bb_5_bb_6 <-| (if_stmt_3407_if_link)
      $P [bb_5_bb_7]
      bb_5_bb_7 <-| (if_stmt_3407_else_link)
      ::[assign_stmt_3421_to_assign_stmt_3428] 
      {
        // 		iNsTr_44 := (($bitcast ($int<32>) iNsTr_28 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000110  ) ))
        //  file prog.linked.opt.aa, line 1282
        // Source expression
        // (($bitcast ($int<32>) iNsTr_28 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000110  ) ))
        $T[SGT_i32_u1_3420_sample_start_] 
        $T[SGT_i32_u1_3420_sample_completed_] 
        $T[SGT_i32_u1_3420_update_start_] 
        $T[SGT_i32_u1_3420_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_28 )
        $T[type_cast_3416_sample_start_] 
        $T[type_cast_3416_sample_completed_] 
        $T[type_cast_3416_update_start_] 
        $T[type_cast_3416_update_completed_] 
        // iNsTr_28
        $T[R_iNsTr_28_3415_sample_start_] 
        $T[R_iNsTr_28_3415_sample_completed_] 
        $T[R_iNsTr_28_3415_update_start_] 
        $T[R_iNsTr_28_3415_update_completed_] 
        // implicit reference
        R_iNsTr_28_3415_sample_start_ <-& ($entry)
        R_iNsTr_28_3415_sample_completed_ <-& (R_iNsTr_28_3415_sample_start_)
        R_iNsTr_28_3415_update_start_ <-& (R_iNsTr_28_3415_sample_completed_)
        R_iNsTr_28_3415_update_completed_ <-& (R_iNsTr_28_3415_update_start_)
        type_cast_3416_sample_start_ <-& (R_iNsTr_28_3415_update_completed_)
        ;;[type_cast_3416_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3416_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3416_sample_start_ &-> (type_cast_3416_Sample)
        type_cast_3416_sample_completed_ <-& (type_cast_3416_Sample)
        type_cast_3416_sample_completed_ &-> ($null)
        type_cast_3416_update_start_ &-> (type_cast_3416_Update)
        type_cast_3416_update_completed_ <-& (type_cast_3416_Update)
        // flow-through
        type_cast_3416_update_start_ <-& (type_cast_3416_sample_completed_)
        SGT_i32_u1_3420_sample_start_ <-& (type_cast_3416_update_completed_)
        ;;[SGT_i32_u1_3420_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_3420_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_3420_sample_start_ &-> (SGT_i32_u1_3420_Sample)
        SGT_i32_u1_3420_sample_completed_ <-& (SGT_i32_u1_3420_Sample)
        SGT_i32_u1_3420_sample_completed_ &-> ($null)
        SGT_i32_u1_3420_update_start_ &-> (SGT_i32_u1_3420_Update)
        SGT_i32_u1_3420_update_completed_ <-& (SGT_i32_u1_3420_Update)
        // Target expression
        // (as target) iNsTr_44
        // iNsTr_44
        // implicit reference
        // 		phitmpx_xi := ( $mux iNsTr_44 iNsTr_28  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
        //  file prog.linked.opt.aa, line 1283
        // Source expression
        // ( $mux iNsTr_44 iNsTr_28  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
        $T[MUX_3427_sample_start_] 
        $T[MUX_3427_sample_completed_] 
        $T[MUX_3427_update_start_] 
        $T[MUX_3427_update_completed_] 
        // iNsTr_44
        $T[R_iNsTr_44_3423_sample_start_] 
        $T[R_iNsTr_44_3423_sample_completed_] 
        $T[R_iNsTr_44_3423_update_start_] 
        $T[R_iNsTr_44_3423_update_completed_] 
        // implicit reference
        R_iNsTr_44_3423_sample_start_ <-& (SGT_i32_u1_3420_update_completed_)
        R_iNsTr_44_3423_sample_completed_ <-& (R_iNsTr_44_3423_sample_start_)
        R_iNsTr_44_3423_update_start_ <-& (R_iNsTr_44_3423_sample_completed_)
        R_iNsTr_44_3423_update_completed_ <-& (R_iNsTr_44_3423_update_start_)
        // iNsTr_28
        $T[R_iNsTr_28_3424_sample_start_] 
        $T[R_iNsTr_28_3424_sample_completed_] 
        $T[R_iNsTr_28_3424_update_start_] 
        $T[R_iNsTr_28_3424_update_completed_] 
        // implicit reference
        R_iNsTr_28_3424_sample_start_ <-& ($entry)
        R_iNsTr_28_3424_sample_completed_ <-& (R_iNsTr_28_3424_sample_start_)
        R_iNsTr_28_3424_update_start_ <-& (R_iNsTr_28_3424_sample_completed_)
        R_iNsTr_28_3424_update_completed_ <-& (R_iNsTr_28_3424_update_start_)
        MUX_3427_sample_start_ <-& (R_iNsTr_44_3423_update_completed_)
        MUX_3427_sample_start_ <-& (R_iNsTr_28_3424_update_completed_)
        ;;[MUX_3427_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_3427_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_3427_sample_start_ &-> (MUX_3427_start)
        MUX_3427_sample_completed_ <-& (MUX_3427_start)
        MUX_3427_update_start_ &-> (MUX_3427_complete)
        MUX_3427_update_completed_ <-& (MUX_3427_complete)
        MUX_3427_sample_completed_ &-> ($null)
        // Target expression
        // (as target) phitmpx_xi
        // phitmpx_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3421_to_assign_stmt_3428__entry__ |-> (assign_stmt_3421_to_assign_stmt_3428)
      assign_stmt_3421_to_assign_stmt_3428__exit__ <-| (assign_stmt_3421_to_assign_stmt_3428)
      ::[assign_stmt_3445_to_assign_stmt_3458] 
      {
        // 		iNsTr_47 := ( $mux iNsTr_42 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_28 ) 
        //  file prog.linked.opt.aa, line 1288
        // Source expression
        // ( $mux iNsTr_42 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_28 ) 
        $T[MUX_3444_sample_start_] 
        $T[MUX_3444_sample_completed_] 
        $T[MUX_3444_update_start_] 
        $T[MUX_3444_update_completed_] 
        // iNsTr_42
        $T[R_iNsTr_42_3440_sample_start_] 
        $T[R_iNsTr_42_3440_sample_completed_] 
        $T[R_iNsTr_42_3440_update_start_] 
        $T[R_iNsTr_42_3440_update_completed_] 
        // implicit reference
        R_iNsTr_42_3440_sample_start_ <-& ($entry)
        R_iNsTr_42_3440_sample_completed_ <-& (R_iNsTr_42_3440_sample_start_)
        R_iNsTr_42_3440_update_start_ <-& (R_iNsTr_42_3440_sample_completed_)
        R_iNsTr_42_3440_update_completed_ <-& (R_iNsTr_42_3440_update_start_)
        // iNsTr_28
        $T[R_iNsTr_28_3443_sample_start_] 
        $T[R_iNsTr_28_3443_sample_completed_] 
        $T[R_iNsTr_28_3443_update_start_] 
        $T[R_iNsTr_28_3443_update_completed_] 
        // implicit reference
        R_iNsTr_28_3443_sample_start_ <-& ($entry)
        R_iNsTr_28_3443_sample_completed_ <-& (R_iNsTr_28_3443_sample_start_)
        R_iNsTr_28_3443_update_start_ <-& (R_iNsTr_28_3443_sample_completed_)
        R_iNsTr_28_3443_update_completed_ <-& (R_iNsTr_28_3443_update_start_)
        MUX_3444_sample_start_ <-& (R_iNsTr_42_3440_update_completed_)
        MUX_3444_sample_start_ <-& (R_iNsTr_28_3443_update_completed_)
        ;;[MUX_3444_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_3444_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_3444_sample_start_ &-> (MUX_3444_start)
        MUX_3444_sample_completed_ <-& (MUX_3444_start)
        MUX_3444_update_start_ &-> (MUX_3444_complete)
        MUX_3444_update_completed_ <-& (MUX_3444_complete)
        MUX_3444_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_47
        // iNsTr_47
        // implicit reference
        // 		iNsTr_48 := ( $mux iNsTr_42 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_33 ) 
        //  file prog.linked.opt.aa, line 1289
        // Source expression
        // ( $mux iNsTr_42 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_33 ) 
        $T[MUX_3451_sample_start_] 
        $T[MUX_3451_sample_completed_] 
        $T[MUX_3451_update_start_] 
        $T[MUX_3451_update_completed_] 
        // iNsTr_42
        $T[R_iNsTr_42_3447_sample_start_] 
        $T[R_iNsTr_42_3447_sample_completed_] 
        $T[R_iNsTr_42_3447_update_start_] 
        $T[R_iNsTr_42_3447_update_completed_] 
        // implicit reference
        R_iNsTr_42_3447_sample_start_ <-& ($entry)
        R_iNsTr_42_3447_sample_completed_ <-& (R_iNsTr_42_3447_sample_start_)
        R_iNsTr_42_3447_update_start_ <-& (R_iNsTr_42_3447_sample_completed_)
        R_iNsTr_42_3447_update_completed_ <-& (R_iNsTr_42_3447_update_start_)
        // iNsTr_33
        $T[R_iNsTr_33_3450_sample_start_] 
        $T[R_iNsTr_33_3450_sample_completed_] 
        $T[R_iNsTr_33_3450_update_start_] 
        $T[R_iNsTr_33_3450_update_completed_] 
        // implicit reference
        R_iNsTr_33_3450_sample_start_ <-& ($entry)
        R_iNsTr_33_3450_sample_completed_ <-& (R_iNsTr_33_3450_sample_start_)
        R_iNsTr_33_3450_update_start_ <-& (R_iNsTr_33_3450_sample_completed_)
        R_iNsTr_33_3450_update_completed_ <-& (R_iNsTr_33_3450_update_start_)
        MUX_3451_sample_start_ <-& (R_iNsTr_42_3447_update_completed_)
        MUX_3451_sample_start_ <-& (R_iNsTr_33_3450_update_completed_)
        ;;[MUX_3451_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_3451_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_3451_sample_start_ &-> (MUX_3451_start)
        MUX_3451_sample_completed_ <-& (MUX_3451_start)
        MUX_3451_update_start_ &-> (MUX_3451_complete)
        MUX_3451_update_completed_ <-& (MUX_3451_complete)
        MUX_3451_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_48
        // iNsTr_48
        // implicit reference
        // 		iNsTr_49 := ( $mux iNsTr_37 iNsTr_30  iNsTr_47 ) 
        //  file prog.linked.opt.aa, line 1290
        // Source expression
        // ( $mux iNsTr_37 iNsTr_30  iNsTr_47 ) 
        $T[MUX_3457_sample_start_] 
        $T[MUX_3457_sample_completed_] 
        $T[MUX_3457_update_start_] 
        $T[MUX_3457_update_completed_] 
        // iNsTr_37
        $T[R_iNsTr_37_3454_sample_start_] 
        $T[R_iNsTr_37_3454_sample_completed_] 
        $T[R_iNsTr_37_3454_update_start_] 
        $T[R_iNsTr_37_3454_update_completed_] 
        // implicit reference
        R_iNsTr_37_3454_sample_start_ <-& ($entry)
        R_iNsTr_37_3454_sample_completed_ <-& (R_iNsTr_37_3454_sample_start_)
        R_iNsTr_37_3454_update_start_ <-& (R_iNsTr_37_3454_sample_completed_)
        R_iNsTr_37_3454_update_completed_ <-& (R_iNsTr_37_3454_update_start_)
        // iNsTr_30
        $T[R_iNsTr_30_3455_sample_start_] 
        $T[R_iNsTr_30_3455_sample_completed_] 
        $T[R_iNsTr_30_3455_update_start_] 
        $T[R_iNsTr_30_3455_update_completed_] 
        // implicit reference
        R_iNsTr_30_3455_sample_start_ <-& ($entry)
        R_iNsTr_30_3455_sample_completed_ <-& (R_iNsTr_30_3455_sample_start_)
        R_iNsTr_30_3455_update_start_ <-& (R_iNsTr_30_3455_sample_completed_)
        R_iNsTr_30_3455_update_completed_ <-& (R_iNsTr_30_3455_update_start_)
        // iNsTr_47
        $T[R_iNsTr_47_3456_sample_start_] 
        $T[R_iNsTr_47_3456_sample_completed_] 
        $T[R_iNsTr_47_3456_update_start_] 
        $T[R_iNsTr_47_3456_update_completed_] 
        // implicit reference
        R_iNsTr_47_3456_sample_start_ <-& (MUX_3444_update_completed_)
        R_iNsTr_47_3456_sample_completed_ <-& (R_iNsTr_47_3456_sample_start_)
        R_iNsTr_47_3456_update_start_ <-& (R_iNsTr_47_3456_sample_completed_)
        R_iNsTr_47_3456_update_completed_ <-& (R_iNsTr_47_3456_update_start_)
        MUX_3457_sample_start_ <-& (R_iNsTr_37_3454_update_completed_)
        MUX_3457_sample_start_ <-& (R_iNsTr_30_3455_update_completed_)
        MUX_3457_sample_start_ <-& (R_iNsTr_47_3456_update_completed_)
        ;;[MUX_3457_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_3457_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_3457_sample_start_ &-> (MUX_3457_start)
        MUX_3457_sample_completed_ <-& (MUX_3457_start)
        MUX_3457_update_start_ &-> (MUX_3457_complete)
        MUX_3457_update_completed_ <-& (MUX_3457_complete)
        MUX_3457_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_49
        // iNsTr_49
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3445_to_assign_stmt_3458__entry__ |-> (assign_stmt_3445_to_assign_stmt_3458)
      assign_stmt_3445_to_assign_stmt_3458__exit__ <-| (assign_stmt_3445_to_assign_stmt_3458)
      // if-statement  
      //  file prog.linked.opt.aa, line 1291
      ;;[if_stmt_3459_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3459__entry__ |-> (if_stmt_3459_dead_link)
      if_stmt_3459__exit__ <-| (if_stmt_3459_dead_link)
      ;;[if_stmt_3459_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3459__entry__ |-> (if_stmt_3459_eval_test)
      $P [R_iNsTr_37_3460_place]
      R_iNsTr_37_3460_place <-| (if_stmt_3459_eval_test)
      ;;[if_stmt_3459_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3459_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_37_3460_place |-> (if_stmt_3459_if_link if_stmt_3459_else_link)
      $P [bb_7_bb_8]
      bb_7_bb_8 <-| (if_stmt_3459_if_link)
      $P [bb_7_peakx_xexit]
      bb_7_peakx_xexit <-| (if_stmt_3459_else_link)
      ::[assign_stmt_3473_to_assign_stmt_3480] 
      {
        // 		iNsTr_51 := (($bitcast ($int<32>) iNsTr_49 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
        //  file prog.linked.opt.aa, line 1298
        // Source expression
        // (($bitcast ($int<32>) iNsTr_49 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
        $T[SGT_i32_u1_3472_sample_start_] 
        $T[SGT_i32_u1_3472_sample_completed_] 
        $T[SGT_i32_u1_3472_update_start_] 
        $T[SGT_i32_u1_3472_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_49 )
        $T[type_cast_3468_sample_start_] 
        $T[type_cast_3468_sample_completed_] 
        $T[type_cast_3468_update_start_] 
        $T[type_cast_3468_update_completed_] 
        // iNsTr_49
        $T[R_iNsTr_49_3467_sample_start_] 
        $T[R_iNsTr_49_3467_sample_completed_] 
        $T[R_iNsTr_49_3467_update_start_] 
        $T[R_iNsTr_49_3467_update_completed_] 
        // implicit reference
        R_iNsTr_49_3467_sample_start_ <-& ($entry)
        R_iNsTr_49_3467_sample_completed_ <-& (R_iNsTr_49_3467_sample_start_)
        R_iNsTr_49_3467_update_start_ <-& (R_iNsTr_49_3467_sample_completed_)
        R_iNsTr_49_3467_update_completed_ <-& (R_iNsTr_49_3467_update_start_)
        type_cast_3468_sample_start_ <-& (R_iNsTr_49_3467_update_completed_)
        ;;[type_cast_3468_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3468_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3468_sample_start_ &-> (type_cast_3468_Sample)
        type_cast_3468_sample_completed_ <-& (type_cast_3468_Sample)
        type_cast_3468_sample_completed_ &-> ($null)
        type_cast_3468_update_start_ &-> (type_cast_3468_Update)
        type_cast_3468_update_completed_ <-& (type_cast_3468_Update)
        // flow-through
        type_cast_3468_update_start_ <-& (type_cast_3468_sample_completed_)
        SGT_i32_u1_3472_sample_start_ <-& (type_cast_3468_update_completed_)
        ;;[SGT_i32_u1_3472_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_3472_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_3472_sample_start_ &-> (SGT_i32_u1_3472_Sample)
        SGT_i32_u1_3472_sample_completed_ <-& (SGT_i32_u1_3472_Sample)
        SGT_i32_u1_3472_sample_completed_ &-> ($null)
        SGT_i32_u1_3472_update_start_ &-> (SGT_i32_u1_3472_Update)
        SGT_i32_u1_3472_update_completed_ <-& (SGT_i32_u1_3472_Update)
        // Target expression
        // (as target) iNsTr_51
        // iNsTr_51
        // implicit reference
        // 		phitmp1x_xi := ( $mux iNsTr_51 ($bitcast ($uint<32>) _b00000000000000000000000000000001  )  iNsTr_48 ) 
        //  file prog.linked.opt.aa, line 1299
        // Source expression
        // ( $mux iNsTr_51 ($bitcast ($uint<32>) _b00000000000000000000000000000001  )  iNsTr_48 ) 
        $T[MUX_3479_sample_start_] 
        $T[MUX_3479_sample_completed_] 
        $T[MUX_3479_update_start_] 
        $T[MUX_3479_update_completed_] 
        // iNsTr_51
        $T[R_iNsTr_51_3475_sample_start_] 
        $T[R_iNsTr_51_3475_sample_completed_] 
        $T[R_iNsTr_51_3475_update_start_] 
        $T[R_iNsTr_51_3475_update_completed_] 
        // implicit reference
        R_iNsTr_51_3475_sample_start_ <-& (SGT_i32_u1_3472_update_completed_)
        R_iNsTr_51_3475_sample_completed_ <-& (R_iNsTr_51_3475_sample_start_)
        R_iNsTr_51_3475_update_start_ <-& (R_iNsTr_51_3475_sample_completed_)
        R_iNsTr_51_3475_update_completed_ <-& (R_iNsTr_51_3475_update_start_)
        // iNsTr_48
        $T[R_iNsTr_48_3478_sample_start_] 
        $T[R_iNsTr_48_3478_sample_completed_] 
        $T[R_iNsTr_48_3478_update_start_] 
        $T[R_iNsTr_48_3478_update_completed_] 
        // implicit reference
        R_iNsTr_48_3478_sample_start_ <-& ($entry)
        R_iNsTr_48_3478_sample_completed_ <-& (R_iNsTr_48_3478_sample_start_)
        R_iNsTr_48_3478_update_start_ <-& (R_iNsTr_48_3478_sample_completed_)
        R_iNsTr_48_3478_update_completed_ <-& (R_iNsTr_48_3478_update_start_)
        MUX_3479_sample_start_ <-& (R_iNsTr_51_3475_update_completed_)
        MUX_3479_sample_start_ <-& (R_iNsTr_48_3478_update_completed_)
        ;;[MUX_3479_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_3479_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_3479_sample_start_ &-> (MUX_3479_start)
        MUX_3479_sample_completed_ <-& (MUX_3479_start)
        MUX_3479_update_start_ &-> (MUX_3479_complete)
        MUX_3479_update_completed_ <-& (MUX_3479_complete)
        MUX_3479_sample_completed_ &-> ($null)
        // Target expression
        // (as target) phitmp1x_xi
        // phitmp1x_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3473_to_assign_stmt_3480__entry__ |-> (assign_stmt_3473_to_assign_stmt_3480)
      assign_stmt_3473_to_assign_stmt_3480__exit__ <-| (assign_stmt_3473_to_assign_stmt_3480)
      ::[assign_stmt_3492_to_assign_stmt_3555] 
      {
        // 		timeSinceMaxPeak := iNsTr_53
        //  file prog.linked.opt.aa, line 1304
        // Source expression
        // iNsTr_53
        $T[R_iNsTr_53_3491_sample_start_] 
        $T[R_iNsTr_53_3491_sample_completed_] 
        $T[R_iNsTr_53_3491_update_start_] 
        $T[R_iNsTr_53_3491_update_completed_] 
        // implicit reference
        R_iNsTr_53_3491_sample_start_ <-& ($entry)
        R_iNsTr_53_3491_sample_completed_ <-& (R_iNsTr_53_3491_sample_start_)
        R_iNsTr_53_3491_update_start_ <-& (R_iNsTr_53_3491_sample_completed_)
        R_iNsTr_53_3491_update_completed_ <-& (R_iNsTr_53_3491_update_start_)
        // Target expression
        // (as target) timeSinceMaxPeak
        $T[STORE_timeSinceMaxPeak_3490_sample_start_] 
        $T[STORE_timeSinceMaxPeak_3490_sample_completed_] 
        $T[STORE_timeSinceMaxPeak_3490_update_start_] 
        $T[STORE_timeSinceMaxPeak_3490_update_completed_] 
        // timeSinceMaxPeak
        $T[STORE_timeSinceMaxPeak_3490_word_address_calculated] 
        $T[STORE_timeSinceMaxPeak_3490_root_address_calculated] 
        STORE_timeSinceMaxPeak_3490_word_address_calculated <-& (STORE_timeSinceMaxPeak_3490_root_address_calculated)
        ;;[STORE_timeSinceMaxPeak_3490_Sample] 
        {
          ;;[STORE_timeSinceMaxPeak_3490_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_timeSinceMaxPeak_3490_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_timeSinceMaxPeak_3490_sample_start_ <-& (STORE_timeSinceMaxPeak_3490_word_address_calculated)
        STORE_timeSinceMaxPeak_3490_sample_start_ &-> (STORE_timeSinceMaxPeak_3490_Sample)
        STORE_timeSinceMaxPeak_3490_sample_completed_ <-& (STORE_timeSinceMaxPeak_3490_Sample)
        STORE_timeSinceMaxPeak_3490_sample_completed_ &-> ($null)
        STORE_timeSinceMaxPeak_3490_update_start_ &-> (STORE_timeSinceMaxPeak_3490_Update)
        STORE_timeSinceMaxPeak_3490_update_completed_ <-& (STORE_timeSinceMaxPeak_3490_Update)
        STORE_timeSinceMaxPeak_3490_sample_start_ <-& (R_iNsTr_53_3491_update_completed_)
        // 		maxPeak := iNsTr_49
        //  file prog.linked.opt.aa, line 1305
        // Source expression
        // iNsTr_49
        $T[R_iNsTr_49_3494_sample_start_] 
        $T[R_iNsTr_49_3494_sample_completed_] 
        $T[R_iNsTr_49_3494_update_start_] 
        $T[R_iNsTr_49_3494_update_completed_] 
        // implicit reference
        R_iNsTr_49_3494_sample_start_ <-& ($entry)
        R_iNsTr_49_3494_sample_completed_ <-& (R_iNsTr_49_3494_sample_start_)
        R_iNsTr_49_3494_update_start_ <-& (R_iNsTr_49_3494_sample_completed_)
        R_iNsTr_49_3494_update_completed_ <-& (R_iNsTr_49_3494_update_start_)
        // Target expression
        // (as target) maxPeak
        $T[STORE_maxPeak_3493_sample_start_] 
        $T[STORE_maxPeak_3493_sample_completed_] 
        $T[STORE_maxPeak_3493_update_start_] 
        $T[STORE_maxPeak_3493_update_completed_] 
        // maxPeak
        $T[STORE_maxPeak_3493_word_address_calculated] 
        $T[STORE_maxPeak_3493_root_address_calculated] 
        STORE_maxPeak_3493_word_address_calculated <-& (STORE_maxPeak_3493_root_address_calculated)
        ;;[STORE_maxPeak_3493_Sample] 
        {
          ;;[STORE_maxPeak_3493_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_maxPeak_3493_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_maxPeak_3493_sample_start_ <-& (STORE_maxPeak_3493_word_address_calculated)
        STORE_maxPeak_3493_sample_start_ &-> (STORE_maxPeak_3493_Sample)
        STORE_maxPeak_3493_sample_completed_ <-& (STORE_maxPeak_3493_Sample)
        STORE_maxPeak_3493_sample_completed_ &-> ($null)
        STORE_maxPeak_3493_update_start_ &-> (STORE_maxPeak_3493_Update)
        STORE_maxPeak_3493_update_completed_ <-& (STORE_maxPeak_3493_Update)
        STORE_maxPeak_3493_sample_start_ <-& (R_iNsTr_49_3494_update_completed_)
        // 		lastDatum := iNsTr_30
        //  file prog.linked.opt.aa, line 1306
        // Source expression
        // iNsTr_30
        $T[R_iNsTr_30_3497_sample_start_] 
        $T[R_iNsTr_30_3497_sample_completed_] 
        $T[R_iNsTr_30_3497_update_start_] 
        $T[R_iNsTr_30_3497_update_completed_] 
        // implicit reference
        R_iNsTr_30_3497_sample_start_ <-& ($entry)
        R_iNsTr_30_3497_sample_completed_ <-& (R_iNsTr_30_3497_sample_start_)
        R_iNsTr_30_3497_update_start_ <-& (R_iNsTr_30_3497_sample_completed_)
        R_iNsTr_30_3497_update_completed_ <-& (R_iNsTr_30_3497_update_start_)
        // Target expression
        // (as target) lastDatum
        $T[STORE_lastDatum_3496_sample_start_] 
        $T[STORE_lastDatum_3496_sample_completed_] 
        $T[STORE_lastDatum_3496_update_start_] 
        $T[STORE_lastDatum_3496_update_completed_] 
        // lastDatum
        $T[STORE_lastDatum_3496_word_address_calculated] 
        $T[STORE_lastDatum_3496_root_address_calculated] 
        STORE_lastDatum_3496_word_address_calculated <-& (STORE_lastDatum_3496_root_address_calculated)
        ;;[STORE_lastDatum_3496_Sample] 
        {
          ;;[STORE_lastDatum_3496_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_lastDatum_3496_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_lastDatum_3496_sample_start_ <-& (STORE_lastDatum_3496_word_address_calculated)
        STORE_lastDatum_3496_sample_start_ &-> (STORE_lastDatum_3496_Sample)
        STORE_lastDatum_3496_sample_completed_ <-& (STORE_lastDatum_3496_Sample)
        STORE_lastDatum_3496_sample_completed_ &-> ($null)
        STORE_lastDatum_3496_update_start_ &-> (STORE_lastDatum_3496_Update)
        STORE_lastDatum_3496_update_completed_ <-& (STORE_lastDatum_3496_Update)
        STORE_lastDatum_3496_sample_start_ <-& (R_iNsTr_30_3497_update_completed_)
        // 		iNsTr_57 := (($bitcast ($int<32>) iNsTr_46 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.linked.opt.aa, line 1307
        // Source expression
        // (($bitcast ($int<32>) iNsTr_46 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[SGT_i32_u1_3505_sample_start_] 
        $T[SGT_i32_u1_3505_sample_completed_] 
        $T[SGT_i32_u1_3505_update_start_] 
        $T[SGT_i32_u1_3505_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_46 )
        $T[type_cast_3501_sample_start_] 
        $T[type_cast_3501_sample_completed_] 
        $T[type_cast_3501_update_start_] 
        $T[type_cast_3501_update_completed_] 
        // iNsTr_46
        $T[R_iNsTr_46_3500_sample_start_] 
        $T[R_iNsTr_46_3500_sample_completed_] 
        $T[R_iNsTr_46_3500_update_start_] 
        $T[R_iNsTr_46_3500_update_completed_] 
        // implicit reference
        R_iNsTr_46_3500_sample_start_ <-& ($entry)
        R_iNsTr_46_3500_sample_completed_ <-& (R_iNsTr_46_3500_sample_start_)
        R_iNsTr_46_3500_update_start_ <-& (R_iNsTr_46_3500_sample_completed_)
        R_iNsTr_46_3500_update_completed_ <-& (R_iNsTr_46_3500_update_start_)
        type_cast_3501_sample_start_ <-& (R_iNsTr_46_3500_update_completed_)
        ;;[type_cast_3501_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3501_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3501_sample_start_ &-> (type_cast_3501_Sample)
        type_cast_3501_sample_completed_ <-& (type_cast_3501_Sample)
        type_cast_3501_sample_completed_ &-> ($null)
        type_cast_3501_update_start_ &-> (type_cast_3501_Update)
        type_cast_3501_update_completed_ <-& (type_cast_3501_Update)
        // flow-through
        type_cast_3501_update_start_ <-& (type_cast_3501_sample_completed_)
        SGT_i32_u1_3505_sample_start_ <-& (type_cast_3501_update_completed_)
        ;;[SGT_i32_u1_3505_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_3505_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_3505_sample_start_ &-> (SGT_i32_u1_3505_Sample)
        SGT_i32_u1_3505_sample_completed_ <-& (SGT_i32_u1_3505_Sample)
        SGT_i32_u1_3505_sample_completed_ &-> ($null)
        SGT_i32_u1_3505_update_start_ &-> (SGT_i32_u1_3505_Update)
        SGT_i32_u1_3505_update_completed_ <-& (SGT_i32_u1_3505_Update)
        // Target expression
        // (as target) iNsTr_57
        // iNsTr_57
        // implicit reference
        // 		iNsTr_58 := (($bitcast ($int<32>) preBlank_countx_x0 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.linked.opt.aa, line 1308
        // Source expression
        // (($bitcast ($int<32>) preBlank_countx_x0 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[SGT_i32_u1_3513_sample_start_] 
        $T[SGT_i32_u1_3513_sample_completed_] 
        $T[SGT_i32_u1_3513_update_start_] 
        $T[SGT_i32_u1_3513_update_completed_] 
        // ($bitcast ($int<32>) preBlank_countx_x0 )
        $T[type_cast_3509_sample_start_] 
        $T[type_cast_3509_sample_completed_] 
        $T[type_cast_3509_update_start_] 
        $T[type_cast_3509_update_completed_] 
        // preBlank_countx_x0
        $T[R_preBlank_countx_x0_3508_sample_start_] 
        $T[R_preBlank_countx_x0_3508_sample_completed_] 
        $T[R_preBlank_countx_x0_3508_update_start_] 
        $T[R_preBlank_countx_x0_3508_update_completed_] 
        // implicit reference
        R_preBlank_countx_x0_3508_sample_start_ <-& ($entry)
        R_preBlank_countx_x0_3508_sample_completed_ <-& (R_preBlank_countx_x0_3508_sample_start_)
        R_preBlank_countx_x0_3508_update_start_ <-& (R_preBlank_countx_x0_3508_sample_completed_)
        R_preBlank_countx_x0_3508_update_completed_ <-& (R_preBlank_countx_x0_3508_update_start_)
        type_cast_3509_sample_start_ <-& (R_preBlank_countx_x0_3508_update_completed_)
        ;;[type_cast_3509_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3509_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3509_sample_start_ &-> (type_cast_3509_Sample)
        type_cast_3509_sample_completed_ <-& (type_cast_3509_Sample)
        type_cast_3509_sample_completed_ &-> ($null)
        type_cast_3509_update_start_ &-> (type_cast_3509_Update)
        type_cast_3509_update_completed_ <-& (type_cast_3509_Update)
        // flow-through
        type_cast_3509_update_start_ <-& (type_cast_3509_sample_completed_)
        SGT_i32_u1_3513_sample_start_ <-& (type_cast_3509_update_completed_)
        ;;[SGT_i32_u1_3513_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_3513_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_3513_sample_start_ &-> (SGT_i32_u1_3513_Sample)
        SGT_i32_u1_3513_sample_completed_ <-& (SGT_i32_u1_3513_Sample)
        SGT_i32_u1_3513_sample_completed_ &-> ($null)
        SGT_i32_u1_3513_update_start_ &-> (SGT_i32_u1_3513_Update)
        SGT_i32_u1_3513_update_completed_ <-& (SGT_i32_u1_3513_Update)
        // Target expression
        // (as target) iNsTr_58
        // iNsTr_58
        // implicit reference
        // 		iNsTr_59 := (($bitcast ($int<32>) iNsTr_46 ) > ($bitcast ($int<32>) tempPeakx_x0 ))
        //  file prog.linked.opt.aa, line 1309
        // Source expression
        // (($bitcast ($int<32>) iNsTr_46 ) > ($bitcast ($int<32>) tempPeakx_x0 ))
        $T[SGT_i32_u1_3520_sample_start_] 
        $T[SGT_i32_u1_3520_sample_completed_] 
        $T[SGT_i32_u1_3520_update_start_] 
        $T[SGT_i32_u1_3520_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_46 )
        $T[type_cast_3517_sample_start_] 
        $T[type_cast_3517_sample_completed_] 
        $T[type_cast_3517_update_start_] 
        $T[type_cast_3517_update_completed_] 
        // iNsTr_46
        $T[R_iNsTr_46_3516_sample_start_] 
        $T[R_iNsTr_46_3516_sample_completed_] 
        $T[R_iNsTr_46_3516_update_start_] 
        $T[R_iNsTr_46_3516_update_completed_] 
        // implicit reference
        R_iNsTr_46_3516_sample_start_ <-& ($entry)
        R_iNsTr_46_3516_sample_completed_ <-& (R_iNsTr_46_3516_sample_start_)
        R_iNsTr_46_3516_update_start_ <-& (R_iNsTr_46_3516_sample_completed_)
        R_iNsTr_46_3516_update_completed_ <-& (R_iNsTr_46_3516_update_start_)
        type_cast_3517_sample_start_ <-& (R_iNsTr_46_3516_update_completed_)
        ;;[type_cast_3517_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3517_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3517_sample_start_ &-> (type_cast_3517_Sample)
        type_cast_3517_sample_completed_ <-& (type_cast_3517_Sample)
        type_cast_3517_sample_completed_ &-> ($null)
        type_cast_3517_update_start_ &-> (type_cast_3517_Update)
        type_cast_3517_update_completed_ <-& (type_cast_3517_Update)
        // flow-through
        type_cast_3517_update_start_ <-& (type_cast_3517_sample_completed_)
        // ($bitcast ($int<32>) tempPeakx_x0 )
        $T[type_cast_3519_sample_start_] 
        $T[type_cast_3519_sample_completed_] 
        $T[type_cast_3519_update_start_] 
        $T[type_cast_3519_update_completed_] 
        // tempPeakx_x0
        $T[R_tempPeakx_x0_3518_sample_start_] 
        $T[R_tempPeakx_x0_3518_sample_completed_] 
        $T[R_tempPeakx_x0_3518_update_start_] 
        $T[R_tempPeakx_x0_3518_update_completed_] 
        // implicit reference
        R_tempPeakx_x0_3518_sample_start_ <-& ($entry)
        R_tempPeakx_x0_3518_sample_completed_ <-& (R_tempPeakx_x0_3518_sample_start_)
        R_tempPeakx_x0_3518_update_start_ <-& (R_tempPeakx_x0_3518_sample_completed_)
        R_tempPeakx_x0_3518_update_completed_ <-& (R_tempPeakx_x0_3518_update_start_)
        type_cast_3519_sample_start_ <-& (R_tempPeakx_x0_3518_update_completed_)
        ;;[type_cast_3519_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3519_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3519_sample_start_ &-> (type_cast_3519_Sample)
        type_cast_3519_sample_completed_ <-& (type_cast_3519_Sample)
        type_cast_3519_sample_completed_ &-> ($null)
        type_cast_3519_update_start_ &-> (type_cast_3519_Update)
        type_cast_3519_update_completed_ <-& (type_cast_3519_Update)
        // flow-through
        type_cast_3519_update_start_ <-& (type_cast_3519_sample_completed_)
        SGT_i32_u1_3520_sample_start_ <-& (type_cast_3517_update_completed_)
        SGT_i32_u1_3520_sample_start_ <-& (type_cast_3519_update_completed_)
        ;;[SGT_i32_u1_3520_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_3520_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_3520_sample_start_ &-> (SGT_i32_u1_3520_Sample)
        SGT_i32_u1_3520_sample_completed_ <-& (SGT_i32_u1_3520_Sample)
        SGT_i32_u1_3520_sample_completed_ &-> ($null)
        SGT_i32_u1_3520_update_start_ &-> (SGT_i32_u1_3520_Update)
        SGT_i32_u1_3520_update_completed_ <-& (SGT_i32_u1_3520_Update)
        // Target expression
        // (as target) iNsTr_59
        // iNsTr_59
        // implicit reference
        // 		iNsTr_60 := (preBlank_countx_x0 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        //  file prog.linked.opt.aa, line 1310
        // Source expression
        // (preBlank_countx_x0 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        $T[ADD_u32_u32_3526_sample_start_] 
        $T[ADD_u32_u32_3526_sample_completed_] 
        $T[ADD_u32_u32_3526_update_start_] 
        $T[ADD_u32_u32_3526_update_completed_] 
        // preBlank_countx_x0
        $T[R_preBlank_countx_x0_3523_sample_start_] 
        $T[R_preBlank_countx_x0_3523_sample_completed_] 
        $T[R_preBlank_countx_x0_3523_update_start_] 
        $T[R_preBlank_countx_x0_3523_update_completed_] 
        // implicit reference
        R_preBlank_countx_x0_3523_sample_start_ <-& ($entry)
        R_preBlank_countx_x0_3523_sample_completed_ <-& (R_preBlank_countx_x0_3523_sample_start_)
        R_preBlank_countx_x0_3523_update_start_ <-& (R_preBlank_countx_x0_3523_sample_completed_)
        R_preBlank_countx_x0_3523_update_completed_ <-& (R_preBlank_countx_x0_3523_update_start_)
        ADD_u32_u32_3526_sample_start_ <-& (R_preBlank_countx_x0_3523_update_completed_)
        ;;[ADD_u32_u32_3526_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_3526_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_3526_sample_start_ &-> (ADD_u32_u32_3526_Sample)
        ADD_u32_u32_3526_sample_completed_ <-& (ADD_u32_u32_3526_Sample)
        ADD_u32_u32_3526_sample_completed_ &-> ($null)
        ADD_u32_u32_3526_update_start_ &-> (ADD_u32_u32_3526_Update)
        ADD_u32_u32_3526_update_completed_ <-& (ADD_u32_u32_3526_Update)
        // Target expression
        // (as target) iNsTr_60
        // iNsTr_60
        // implicit reference
        // 		iNsTr_61 := (iNsTr_60 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.linked.opt.aa, line 1311
        // Source expression
        // (iNsTr_60 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_3532_sample_start_] 
        $T[EQ_u32_u1_3532_sample_completed_] 
        $T[EQ_u32_u1_3532_update_start_] 
        $T[EQ_u32_u1_3532_update_completed_] 
        // iNsTr_60
        $T[R_iNsTr_60_3529_sample_start_] 
        $T[R_iNsTr_60_3529_sample_completed_] 
        $T[R_iNsTr_60_3529_update_start_] 
        $T[R_iNsTr_60_3529_update_completed_] 
        // implicit reference
        R_iNsTr_60_3529_sample_start_ <-& (ADD_u32_u32_3526_update_completed_)
        R_iNsTr_60_3529_sample_completed_ <-& (R_iNsTr_60_3529_sample_start_)
        R_iNsTr_60_3529_update_start_ <-& (R_iNsTr_60_3529_sample_completed_)
        R_iNsTr_60_3529_update_completed_ <-& (R_iNsTr_60_3529_update_start_)
        EQ_u32_u1_3532_sample_start_ <-& (R_iNsTr_60_3529_update_completed_)
        ;;[EQ_u32_u1_3532_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_3532_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_3532_sample_start_ &-> (EQ_u32_u1_3532_Sample)
        EQ_u32_u1_3532_sample_completed_ <-& (EQ_u32_u1_3532_Sample)
        EQ_u32_u1_3532_sample_completed_ &-> ($null)
        EQ_u32_u1_3532_update_start_ &-> (EQ_u32_u1_3532_Update)
        EQ_u32_u1_3532_update_completed_ <-& (EQ_u32_u1_3532_Update)
        // Target expression
        // (as target) iNsTr_61
        // iNsTr_61
        // implicit reference
        // 		iNsTr_62 := (iNsTr_58 ^ ($bitcast ($uint<1>) _b1  ))
        //  file prog.linked.opt.aa, line 1312
        // Source expression
        // (iNsTr_58 ^ ($bitcast ($uint<1>) _b1  ))
        $T[XOR_u1_u1_3538_sample_start_] 
        $T[XOR_u1_u1_3538_sample_completed_] 
        $T[XOR_u1_u1_3538_update_start_] 
        $T[XOR_u1_u1_3538_update_completed_] 
        // iNsTr_58
        $T[R_iNsTr_58_3535_sample_start_] 
        $T[R_iNsTr_58_3535_sample_completed_] 
        $T[R_iNsTr_58_3535_update_start_] 
        $T[R_iNsTr_58_3535_update_completed_] 
        // implicit reference
        R_iNsTr_58_3535_sample_start_ <-& (SGT_i32_u1_3513_update_completed_)
        R_iNsTr_58_3535_sample_completed_ <-& (R_iNsTr_58_3535_sample_start_)
        R_iNsTr_58_3535_update_start_ <-& (R_iNsTr_58_3535_sample_completed_)
        R_iNsTr_58_3535_update_completed_ <-& (R_iNsTr_58_3535_update_start_)
        XOR_u1_u1_3538_sample_start_ <-& (R_iNsTr_58_3535_update_completed_)
        ;;[XOR_u1_u1_3538_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u1_u1_3538_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u1_u1_3538_sample_start_ &-> (XOR_u1_u1_3538_Sample)
        XOR_u1_u1_3538_sample_completed_ <-& (XOR_u1_u1_3538_Sample)
        XOR_u1_u1_3538_sample_completed_ &-> ($null)
        XOR_u1_u1_3538_update_start_ &-> (XOR_u1_u1_3538_Update)
        XOR_u1_u1_3538_update_completed_ <-& (XOR_u1_u1_3538_Update)
        // Target expression
        // (as target) iNsTr_62
        // iNsTr_62
        // implicit reference
        // 		iNsTr_63 := (iNsTr_57 & iNsTr_62)
        //  file prog.linked.opt.aa, line 1313
        // Source expression
        // (iNsTr_57 & iNsTr_62)
        $T[AND_u1_u1_3543_sample_start_] 
        $T[AND_u1_u1_3543_sample_completed_] 
        $T[AND_u1_u1_3543_update_start_] 
        $T[AND_u1_u1_3543_update_completed_] 
        // iNsTr_57
        $T[R_iNsTr_57_3541_sample_start_] 
        $T[R_iNsTr_57_3541_sample_completed_] 
        $T[R_iNsTr_57_3541_update_start_] 
        $T[R_iNsTr_57_3541_update_completed_] 
        // implicit reference
        R_iNsTr_57_3541_sample_start_ <-& (SGT_i32_u1_3505_update_completed_)
        R_iNsTr_57_3541_sample_completed_ <-& (R_iNsTr_57_3541_sample_start_)
        R_iNsTr_57_3541_update_start_ <-& (R_iNsTr_57_3541_sample_completed_)
        R_iNsTr_57_3541_update_completed_ <-& (R_iNsTr_57_3541_update_start_)
        // iNsTr_62
        $T[R_iNsTr_62_3542_sample_start_] 
        $T[R_iNsTr_62_3542_sample_completed_] 
        $T[R_iNsTr_62_3542_update_start_] 
        $T[R_iNsTr_62_3542_update_completed_] 
        // implicit reference
        R_iNsTr_62_3542_sample_start_ <-& (XOR_u1_u1_3538_update_completed_)
        R_iNsTr_62_3542_sample_completed_ <-& (R_iNsTr_62_3542_sample_start_)
        R_iNsTr_62_3542_update_start_ <-& (R_iNsTr_62_3542_sample_completed_)
        R_iNsTr_62_3542_update_completed_ <-& (R_iNsTr_62_3542_update_start_)
        AND_u1_u1_3543_sample_start_ <-& (R_iNsTr_57_3541_update_completed_)
        AND_u1_u1_3543_sample_start_ <-& (R_iNsTr_62_3542_update_completed_)
        ;;[AND_u1_u1_3543_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_3543_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_3543_sample_start_ &-> (AND_u1_u1_3543_Sample)
        AND_u1_u1_3543_sample_completed_ <-& (AND_u1_u1_3543_Sample)
        AND_u1_u1_3543_sample_completed_ &-> ($null)
        AND_u1_u1_3543_update_start_ &-> (AND_u1_u1_3543_Update)
        AND_u1_u1_3543_update_completed_ <-& (AND_u1_u1_3543_Update)
        // Target expression
        // (as target) iNsTr_63
        // iNsTr_63
        // implicit reference
        // 		xx_xnot13 := (iNsTr_59 ^ ($bitcast ($uint<1>) _b1  ))
        //  file prog.linked.opt.aa, line 1314
        // Source expression
        // (iNsTr_59 ^ ($bitcast ($uint<1>) _b1  ))
        $T[XOR_u1_u1_3549_sample_start_] 
        $T[XOR_u1_u1_3549_sample_completed_] 
        $T[XOR_u1_u1_3549_update_start_] 
        $T[XOR_u1_u1_3549_update_completed_] 
        // iNsTr_59
        $T[R_iNsTr_59_3546_sample_start_] 
        $T[R_iNsTr_59_3546_sample_completed_] 
        $T[R_iNsTr_59_3546_update_start_] 
        $T[R_iNsTr_59_3546_update_completed_] 
        // implicit reference
        R_iNsTr_59_3546_sample_start_ <-& (SGT_i32_u1_3520_update_completed_)
        R_iNsTr_59_3546_sample_completed_ <-& (R_iNsTr_59_3546_sample_start_)
        R_iNsTr_59_3546_update_start_ <-& (R_iNsTr_59_3546_sample_completed_)
        R_iNsTr_59_3546_update_completed_ <-& (R_iNsTr_59_3546_update_start_)
        XOR_u1_u1_3549_sample_start_ <-& (R_iNsTr_59_3546_update_completed_)
        ;;[XOR_u1_u1_3549_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u1_u1_3549_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u1_u1_3549_sample_start_ &-> (XOR_u1_u1_3549_Sample)
        XOR_u1_u1_3549_sample_completed_ <-& (XOR_u1_u1_3549_Sample)
        XOR_u1_u1_3549_sample_completed_ &-> ($null)
        XOR_u1_u1_3549_update_start_ &-> (XOR_u1_u1_3549_Update)
        XOR_u1_u1_3549_update_completed_ <-& (XOR_u1_u1_3549_Update)
        // Target expression
        // (as target) xx_xnot13
        // xx_xnot13
        // implicit reference
        // 		notx_xbrmerge := (iNsTr_57 & xx_xnot13)
        //  file prog.linked.opt.aa, line 1315
        // Source expression
        // (iNsTr_57 & xx_xnot13)
        $T[AND_u1_u1_3554_sample_start_] 
        $T[AND_u1_u1_3554_sample_completed_] 
        $T[AND_u1_u1_3554_update_start_] 
        $T[AND_u1_u1_3554_update_completed_] 
        // iNsTr_57
        $T[R_iNsTr_57_3552_sample_start_] 
        $T[R_iNsTr_57_3552_sample_completed_] 
        $T[R_iNsTr_57_3552_update_start_] 
        $T[R_iNsTr_57_3552_update_completed_] 
        // implicit reference
        R_iNsTr_57_3552_sample_start_ <-& (SGT_i32_u1_3505_update_completed_)
        R_iNsTr_57_3552_sample_completed_ <-& (R_iNsTr_57_3552_sample_start_)
        R_iNsTr_57_3552_update_start_ <-& (R_iNsTr_57_3552_sample_completed_)
        R_iNsTr_57_3552_update_completed_ <-& (R_iNsTr_57_3552_update_start_)
        // xx_xnot13
        $T[R_xx_xnot13_3553_sample_start_] 
        $T[R_xx_xnot13_3553_sample_completed_] 
        $T[R_xx_xnot13_3553_update_start_] 
        $T[R_xx_xnot13_3553_update_completed_] 
        // implicit reference
        R_xx_xnot13_3553_sample_start_ <-& (XOR_u1_u1_3549_update_completed_)
        R_xx_xnot13_3553_sample_completed_ <-& (R_xx_xnot13_3553_sample_start_)
        R_xx_xnot13_3553_update_start_ <-& (R_xx_xnot13_3553_sample_completed_)
        R_xx_xnot13_3553_update_completed_ <-& (R_xx_xnot13_3553_update_start_)
        AND_u1_u1_3554_sample_start_ <-& (R_iNsTr_57_3552_update_completed_)
        AND_u1_u1_3554_sample_start_ <-& (R_xx_xnot13_3553_update_completed_)
        ;;[AND_u1_u1_3554_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_3554_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_3554_sample_start_ &-> (AND_u1_u1_3554_Sample)
        AND_u1_u1_3554_sample_completed_ <-& (AND_u1_u1_3554_Sample)
        AND_u1_u1_3554_sample_completed_ &-> ($null)
        AND_u1_u1_3554_update_start_ &-> (AND_u1_u1_3554_Update)
        AND_u1_u1_3554_update_completed_ <-& (AND_u1_u1_3554_Update)
        // Target expression
        // (as target) notx_xbrmerge
        // notx_xbrmerge
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3492_to_assign_stmt_3555__entry__ |-> (assign_stmt_3492_to_assign_stmt_3555)
      assign_stmt_3492_to_assign_stmt_3555__exit__ <-| (assign_stmt_3492_to_assign_stmt_3555)
      // if-statement  
      //  file prog.linked.opt.aa, line 1316
      ;;[if_stmt_3556_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3556__entry__ |-> (if_stmt_3556_dead_link)
      if_stmt_3556__exit__ <-| (if_stmt_3556_dead_link)
      ;;[if_stmt_3556_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3556__entry__ |-> (if_stmt_3556_eval_test)
      $P [R_iNsTr_63_3557_place]
      R_iNsTr_63_3557_place <-| (if_stmt_3556_eval_test)
      ;;[if_stmt_3556_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3556_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_63_3557_place |-> (if_stmt_3556_if_link if_stmt_3556_else_link)
      $P [peakx_xexit_xx_xthread]
      peakx_xexit_xx_xthread <-| (if_stmt_3556_if_link)
      $P [peakx_xexit_bb_10]
      peakx_xexit_bb_10 <-| (if_stmt_3556_else_link)
      ::[assign_stmt_3568_to_assign_stmt_3575] 
      {
        // 		phitmp18 := ( $mux iNsTr_59 iNsTr_46  tempPeakx_x0 ) 
        //  file prog.linked.opt.aa, line 1323
        // Source expression
        // ( $mux iNsTr_59 iNsTr_46  tempPeakx_x0 ) 
        $T[MUX_3567_sample_start_] 
        $T[MUX_3567_sample_completed_] 
        $T[MUX_3567_update_start_] 
        $T[MUX_3567_update_completed_] 
        // iNsTr_59
        $T[R_iNsTr_59_3564_sample_start_] 
        $T[R_iNsTr_59_3564_sample_completed_] 
        $T[R_iNsTr_59_3564_update_start_] 
        $T[R_iNsTr_59_3564_update_completed_] 
        // implicit reference
        R_iNsTr_59_3564_sample_start_ <-& ($entry)
        R_iNsTr_59_3564_sample_completed_ <-& (R_iNsTr_59_3564_sample_start_)
        R_iNsTr_59_3564_update_start_ <-& (R_iNsTr_59_3564_sample_completed_)
        R_iNsTr_59_3564_update_completed_ <-& (R_iNsTr_59_3564_update_start_)
        // iNsTr_46
        $T[R_iNsTr_46_3565_sample_start_] 
        $T[R_iNsTr_46_3565_sample_completed_] 
        $T[R_iNsTr_46_3565_update_start_] 
        $T[R_iNsTr_46_3565_update_completed_] 
        // implicit reference
        R_iNsTr_46_3565_sample_start_ <-& ($entry)
        R_iNsTr_46_3565_sample_completed_ <-& (R_iNsTr_46_3565_sample_start_)
        R_iNsTr_46_3565_update_start_ <-& (R_iNsTr_46_3565_sample_completed_)
        R_iNsTr_46_3565_update_completed_ <-& (R_iNsTr_46_3565_update_start_)
        // tempPeakx_x0
        $T[R_tempPeakx_x0_3566_sample_start_] 
        $T[R_tempPeakx_x0_3566_sample_completed_] 
        $T[R_tempPeakx_x0_3566_update_start_] 
        $T[R_tempPeakx_x0_3566_update_completed_] 
        // implicit reference
        R_tempPeakx_x0_3566_sample_start_ <-& ($entry)
        R_tempPeakx_x0_3566_sample_completed_ <-& (R_tempPeakx_x0_3566_sample_start_)
        R_tempPeakx_x0_3566_update_start_ <-& (R_tempPeakx_x0_3566_sample_completed_)
        R_tempPeakx_x0_3566_update_completed_ <-& (R_tempPeakx_x0_3566_update_start_)
        MUX_3567_sample_start_ <-& (R_iNsTr_59_3564_update_completed_)
        MUX_3567_sample_start_ <-& (R_iNsTr_46_3565_update_completed_)
        MUX_3567_sample_start_ <-& (R_tempPeakx_x0_3566_update_completed_)
        ;;[MUX_3567_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_3567_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_3567_sample_start_ &-> (MUX_3567_start)
        MUX_3567_sample_completed_ <-& (MUX_3567_start)
        MUX_3567_update_start_ &-> (MUX_3567_complete)
        MUX_3567_update_completed_ <-& (MUX_3567_complete)
        MUX_3567_sample_completed_ &-> ($null)
        // Target expression
        // (as target) phitmp18
        // phitmp18
        // implicit reference
        // 		phitmp1 := ( $mux iNsTr_59 ($bitcast ($uint<32>) _b00000000000000000000000000100111  )  iNsTr_60 ) 
        //  file prog.linked.opt.aa, line 1324
        // Source expression
        // ( $mux iNsTr_59 ($bitcast ($uint<32>) _b00000000000000000000000000100111  )  iNsTr_60 ) 
        $T[MUX_3574_sample_start_] 
        $T[MUX_3574_sample_completed_] 
        $T[MUX_3574_update_start_] 
        $T[MUX_3574_update_completed_] 
        // iNsTr_59
        $T[R_iNsTr_59_3570_sample_start_] 
        $T[R_iNsTr_59_3570_sample_completed_] 
        $T[R_iNsTr_59_3570_update_start_] 
        $T[R_iNsTr_59_3570_update_completed_] 
        // implicit reference
        R_iNsTr_59_3570_sample_start_ <-& ($entry)
        R_iNsTr_59_3570_sample_completed_ <-& (R_iNsTr_59_3570_sample_start_)
        R_iNsTr_59_3570_update_start_ <-& (R_iNsTr_59_3570_sample_completed_)
        R_iNsTr_59_3570_update_completed_ <-& (R_iNsTr_59_3570_update_start_)
        // iNsTr_60
        $T[R_iNsTr_60_3573_sample_start_] 
        $T[R_iNsTr_60_3573_sample_completed_] 
        $T[R_iNsTr_60_3573_update_start_] 
        $T[R_iNsTr_60_3573_update_completed_] 
        // implicit reference
        R_iNsTr_60_3573_sample_start_ <-& ($entry)
        R_iNsTr_60_3573_sample_completed_ <-& (R_iNsTr_60_3573_sample_start_)
        R_iNsTr_60_3573_update_start_ <-& (R_iNsTr_60_3573_sample_completed_)
        R_iNsTr_60_3573_update_completed_ <-& (R_iNsTr_60_3573_update_start_)
        MUX_3574_sample_start_ <-& (R_iNsTr_59_3570_update_completed_)
        MUX_3574_sample_start_ <-& (R_iNsTr_60_3573_update_completed_)
        ;;[MUX_3574_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_3574_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_3574_sample_start_ &-> (MUX_3574_start)
        MUX_3574_sample_completed_ <-& (MUX_3574_start)
        MUX_3574_update_start_ &-> (MUX_3574_complete)
        MUX_3574_update_completed_ <-& (MUX_3574_complete)
        MUX_3574_sample_completed_ &-> ($null)
        // Target expression
        // (as target) phitmp1
        // phitmp1
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3568_to_assign_stmt_3575__entry__ |-> (assign_stmt_3568_to_assign_stmt_3575)
      assign_stmt_3568_to_assign_stmt_3575__exit__ <-| (assign_stmt_3568_to_assign_stmt_3575)
      ::[assign_stmt_3597_to_assign_stmt_3708] 
      {
        // 		xx_xnot14 := (iNsTr_57 ^ ($bitcast ($uint<1>) _b1  ))
        //  file prog.linked.opt.aa, line 1330
        // Source expression
        // (iNsTr_57 ^ ($bitcast ($uint<1>) _b1  ))
        $T[XOR_u1_u1_3596_sample_start_] 
        $T[XOR_u1_u1_3596_sample_completed_] 
        $T[XOR_u1_u1_3596_update_start_] 
        $T[XOR_u1_u1_3596_update_completed_] 
        // iNsTr_57
        $T[R_iNsTr_57_3593_sample_start_] 
        $T[R_iNsTr_57_3593_sample_completed_] 
        $T[R_iNsTr_57_3593_update_start_] 
        $T[R_iNsTr_57_3593_update_completed_] 
        // implicit reference
        R_iNsTr_57_3593_sample_start_ <-& ($entry)
        R_iNsTr_57_3593_sample_completed_ <-& (R_iNsTr_57_3593_sample_start_)
        R_iNsTr_57_3593_update_start_ <-& (R_iNsTr_57_3593_sample_completed_)
        R_iNsTr_57_3593_update_completed_ <-& (R_iNsTr_57_3593_update_start_)
        XOR_u1_u1_3596_sample_start_ <-& (R_iNsTr_57_3593_update_completed_)
        ;;[XOR_u1_u1_3596_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u1_u1_3596_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u1_u1_3596_sample_start_ &-> (XOR_u1_u1_3596_Sample)
        XOR_u1_u1_3596_sample_completed_ <-& (XOR_u1_u1_3596_Sample)
        XOR_u1_u1_3596_sample_completed_ &-> ($null)
        XOR_u1_u1_3596_update_start_ &-> (XOR_u1_u1_3596_Update)
        XOR_u1_u1_3596_update_completed_ <-& (XOR_u1_u1_3596_Update)
        // Target expression
        // (as target) xx_xnot14
        // xx_xnot14
        // implicit reference
        // 		xx_xnot2x_xnot := (iNsTr_58 & xx_xnot14)
        //  file prog.linked.opt.aa, line 1331
        // Source expression
        // (iNsTr_58 & xx_xnot14)
        $T[AND_u1_u1_3601_sample_start_] 
        $T[AND_u1_u1_3601_sample_completed_] 
        $T[AND_u1_u1_3601_update_start_] 
        $T[AND_u1_u1_3601_update_completed_] 
        // iNsTr_58
        $T[R_iNsTr_58_3599_sample_start_] 
        $T[R_iNsTr_58_3599_sample_completed_] 
        $T[R_iNsTr_58_3599_update_start_] 
        $T[R_iNsTr_58_3599_update_completed_] 
        // implicit reference
        R_iNsTr_58_3599_sample_start_ <-& ($entry)
        R_iNsTr_58_3599_sample_completed_ <-& (R_iNsTr_58_3599_sample_start_)
        R_iNsTr_58_3599_update_start_ <-& (R_iNsTr_58_3599_sample_completed_)
        R_iNsTr_58_3599_update_completed_ <-& (R_iNsTr_58_3599_update_start_)
        // xx_xnot14
        $T[R_xx_xnot14_3600_sample_start_] 
        $T[R_xx_xnot14_3600_sample_completed_] 
        $T[R_xx_xnot14_3600_update_start_] 
        $T[R_xx_xnot14_3600_update_completed_] 
        // implicit reference
        R_xx_xnot14_3600_sample_start_ <-& (XOR_u1_u1_3596_update_completed_)
        R_xx_xnot14_3600_sample_completed_ <-& (R_xx_xnot14_3600_sample_start_)
        R_xx_xnot14_3600_update_start_ <-& (R_xx_xnot14_3600_sample_completed_)
        R_xx_xnot14_3600_update_completed_ <-& (R_xx_xnot14_3600_update_start_)
        AND_u1_u1_3601_sample_start_ <-& (R_iNsTr_58_3599_update_completed_)
        AND_u1_u1_3601_sample_start_ <-& (R_xx_xnot14_3600_update_completed_)
        ;;[AND_u1_u1_3601_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_3601_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_3601_sample_start_ &-> (AND_u1_u1_3601_Sample)
        AND_u1_u1_3601_sample_completed_ <-& (AND_u1_u1_3601_Sample)
        AND_u1_u1_3601_sample_completed_ &-> ($null)
        AND_u1_u1_3601_update_start_ &-> (AND_u1_u1_3601_Update)
        AND_u1_u1_3601_update_completed_ <-& (AND_u1_u1_3601_Update)
        // Target expression
        // (as target) xx_xnot2x_xnot
        // xx_xnot2x_xnot
        // implicit reference
        // 		tmp := (notx_xbrmerge | xx_xnot2x_xnot)
        //  file prog.linked.opt.aa, line 1332
        // Source expression
        // (notx_xbrmerge | xx_xnot2x_xnot)
        $T[OR_u1_u1_3606_sample_start_] 
        $T[OR_u1_u1_3606_sample_completed_] 
        $T[OR_u1_u1_3606_update_start_] 
        $T[OR_u1_u1_3606_update_completed_] 
        // notx_xbrmerge
        $T[R_notx_xbrmerge_3604_sample_start_] 
        $T[R_notx_xbrmerge_3604_sample_completed_] 
        $T[R_notx_xbrmerge_3604_update_start_] 
        $T[R_notx_xbrmerge_3604_update_completed_] 
        // implicit reference
        R_notx_xbrmerge_3604_sample_start_ <-& ($entry)
        R_notx_xbrmerge_3604_sample_completed_ <-& (R_notx_xbrmerge_3604_sample_start_)
        R_notx_xbrmerge_3604_update_start_ <-& (R_notx_xbrmerge_3604_sample_completed_)
        R_notx_xbrmerge_3604_update_completed_ <-& (R_notx_xbrmerge_3604_update_start_)
        // xx_xnot2x_xnot
        $T[R_xx_xnot2x_xnot_3605_sample_start_] 
        $T[R_xx_xnot2x_xnot_3605_sample_completed_] 
        $T[R_xx_xnot2x_xnot_3605_update_start_] 
        $T[R_xx_xnot2x_xnot_3605_update_completed_] 
        // implicit reference
        R_xx_xnot2x_xnot_3605_sample_start_ <-& (AND_u1_u1_3601_update_completed_)
        R_xx_xnot2x_xnot_3605_sample_completed_ <-& (R_xx_xnot2x_xnot_3605_sample_start_)
        R_xx_xnot2x_xnot_3605_update_start_ <-& (R_xx_xnot2x_xnot_3605_sample_completed_)
        R_xx_xnot2x_xnot_3605_update_completed_ <-& (R_xx_xnot2x_xnot_3605_update_start_)
        OR_u1_u1_3606_sample_start_ <-& (R_notx_xbrmerge_3604_update_completed_)
        OR_u1_u1_3606_sample_start_ <-& (R_xx_xnot2x_xnot_3605_update_completed_)
        ;;[OR_u1_u1_3606_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u1_u1_3606_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u1_u1_3606_sample_start_ &-> (OR_u1_u1_3606_Sample)
        OR_u1_u1_3606_sample_completed_ <-& (OR_u1_u1_3606_Sample)
        OR_u1_u1_3606_sample_completed_ &-> ($null)
        OR_u1_u1_3606_update_start_ &-> (OR_u1_u1_3606_Update)
        OR_u1_u1_3606_update_completed_ <-& (OR_u1_u1_3606_Update)
        // Target expression
        // (as target) tmp
        // tmp
        // implicit reference
        // 		iNsTr_67 := (iNsTr_61 & tmp)
        //  file prog.linked.opt.aa, line 1333
        // Source expression
        // (iNsTr_61 & tmp)
        $T[AND_u1_u1_3611_sample_start_] 
        $T[AND_u1_u1_3611_sample_completed_] 
        $T[AND_u1_u1_3611_update_start_] 
        $T[AND_u1_u1_3611_update_completed_] 
        // iNsTr_61
        $T[R_iNsTr_61_3609_sample_start_] 
        $T[R_iNsTr_61_3609_sample_completed_] 
        $T[R_iNsTr_61_3609_update_start_] 
        $T[R_iNsTr_61_3609_update_completed_] 
        // implicit reference
        R_iNsTr_61_3609_sample_start_ <-& ($entry)
        R_iNsTr_61_3609_sample_completed_ <-& (R_iNsTr_61_3609_sample_start_)
        R_iNsTr_61_3609_update_start_ <-& (R_iNsTr_61_3609_sample_completed_)
        R_iNsTr_61_3609_update_completed_ <-& (R_iNsTr_61_3609_update_start_)
        // tmp
        $T[R_tmp_3610_sample_start_] 
        $T[R_tmp_3610_sample_completed_] 
        $T[R_tmp_3610_update_start_] 
        $T[R_tmp_3610_update_completed_] 
        // implicit reference
        R_tmp_3610_sample_start_ <-& (OR_u1_u1_3606_update_completed_)
        R_tmp_3610_sample_completed_ <-& (R_tmp_3610_sample_start_)
        R_tmp_3610_update_start_ <-& (R_tmp_3610_sample_completed_)
        R_tmp_3610_update_completed_ <-& (R_tmp_3610_update_start_)
        AND_u1_u1_3611_sample_start_ <-& (R_iNsTr_61_3609_update_completed_)
        AND_u1_u1_3611_sample_start_ <-& (R_tmp_3610_update_completed_)
        ;;[AND_u1_u1_3611_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_3611_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_3611_sample_start_ &-> (AND_u1_u1_3611_Sample)
        AND_u1_u1_3611_sample_completed_ <-& (AND_u1_u1_3611_Sample)
        AND_u1_u1_3611_sample_completed_ &-> ($null)
        AND_u1_u1_3611_update_start_ &-> (AND_u1_u1_3611_Update)
        AND_u1_u1_3611_update_completed_ <-& (AND_u1_u1_3611_Update)
        // Target expression
        // (as target) iNsTr_67
        // iNsTr_67
        // implicit reference
        // 		iNsTr_68 := ( $mux iNsTr_67 iNsTr_65  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
        //  file prog.linked.opt.aa, line 1334
        // Source expression
        // ( $mux iNsTr_67 iNsTr_65  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
        $T[MUX_3618_sample_start_] 
        $T[MUX_3618_sample_completed_] 
        $T[MUX_3618_update_start_] 
        $T[MUX_3618_update_completed_] 
        // iNsTr_67
        $T[R_iNsTr_67_3614_sample_start_] 
        $T[R_iNsTr_67_3614_sample_completed_] 
        $T[R_iNsTr_67_3614_update_start_] 
        $T[R_iNsTr_67_3614_update_completed_] 
        // implicit reference
        R_iNsTr_67_3614_sample_start_ <-& (AND_u1_u1_3611_update_completed_)
        R_iNsTr_67_3614_sample_completed_ <-& (R_iNsTr_67_3614_sample_start_)
        R_iNsTr_67_3614_update_start_ <-& (R_iNsTr_67_3614_sample_completed_)
        R_iNsTr_67_3614_update_completed_ <-& (R_iNsTr_67_3614_update_start_)
        // iNsTr_65
        $T[R_iNsTr_65_3615_sample_start_] 
        $T[R_iNsTr_65_3615_sample_completed_] 
        $T[R_iNsTr_65_3615_update_start_] 
        $T[R_iNsTr_65_3615_update_completed_] 
        // implicit reference
        R_iNsTr_65_3615_sample_start_ <-& ($entry)
        R_iNsTr_65_3615_sample_completed_ <-& (R_iNsTr_65_3615_sample_start_)
        R_iNsTr_65_3615_update_start_ <-& (R_iNsTr_65_3615_sample_completed_)
        R_iNsTr_65_3615_update_completed_ <-& (R_iNsTr_65_3615_update_start_)
        MUX_3618_sample_start_ <-& (R_iNsTr_67_3614_update_completed_)
        MUX_3618_sample_start_ <-& (R_iNsTr_65_3615_update_completed_)
        ;;[MUX_3618_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_3618_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_3618_sample_start_ &-> (MUX_3618_start)
        MUX_3618_sample_completed_ <-& (MUX_3618_start)
        MUX_3618_update_start_ &-> (MUX_3618_complete)
        MUX_3618_update_completed_ <-& (MUX_3618_complete)
        MUX_3618_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_68
        // iNsTr_68
        // implicit reference
        // 		iNsTr_69 := DDCALCbuff_ptr
        //  file prog.linked.opt.aa, line 1335
        // Source expression
        // DDCALCbuff_ptr
        $T[LOAD_DDCALCbuff_ptr_3621_sample_start_] 
        $T[LOAD_DDCALCbuff_ptr_3621_sample_completed_] 
        $T[LOAD_DDCALCbuff_ptr_3621_update_start_] 
        $T[LOAD_DDCALCbuff_ptr_3621_update_completed_] 
        $T[LOAD_DDCALCbuff_ptr_3621_sample_start_] 
        $T[LOAD_DDCALCbuff_ptr_3621_sample_completed_] 
        $T[LOAD_DDCALCbuff_ptr_3621_update_start_] 
        $T[LOAD_DDCALCbuff_ptr_3621_update_completed_] 
        $T[LOAD_DDCALCbuff_ptr_3621_word_address_calculated] 
        $T[LOAD_DDCALCbuff_ptr_3621_root_address_calculated] 
        LOAD_DDCALCbuff_ptr_3621_word_address_calculated <-& (LOAD_DDCALCbuff_ptr_3621_root_address_calculated)
        ;;[LOAD_DDCALCbuff_ptr_3621_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_DDCALCbuff_ptr_3621_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_DDCALCbuff_ptr_3621_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_DDCALCbuff_ptr_3621_sample_start_ <-& (LOAD_DDCALCbuff_ptr_3621_word_address_calculated)
        LOAD_DDCALCbuff_ptr_3621_sample_start_ &-> (LOAD_DDCALCbuff_ptr_3621_Sample)
        LOAD_DDCALCbuff_ptr_3621_sample_completed_ <-& (LOAD_DDCALCbuff_ptr_3621_Sample)
        LOAD_DDCALCbuff_ptr_3621_sample_completed_ &-> ($null)
        LOAD_DDCALCbuff_ptr_3621_update_start_ &-> (LOAD_DDCALCbuff_ptr_3621_Update)
        LOAD_DDCALCbuff_ptr_3621_update_completed_ <-& (LOAD_DDCALCbuff_ptr_3621_Update)
        // Target expression
        // (as target) iNsTr_69
        // iNsTr_69
        // implicit reference
        // 		iNsTr_70 := @(DDCALCbuff[iNsTr_69])
        //  file prog.linked.opt.aa, line 1336
        // Source expression
        // @(DDCALCbuff[iNsTr_69])
        $T[addr_of_3626_sample_start_] 
        $T[addr_of_3626_sample_completed_] 
        $T[addr_of_3626_update_start_] 
        $T[addr_of_3626_update_completed_] 
        $T[array_obj_ref_3625_root_address_calculated] 
        $T[array_obj_ref_3625_offset_calculated] 
        $T[array_obj_ref_3625_index_resized_0] 
        $T[array_obj_ref_3625_index_scaled_0] 
        // iNsTr_69
        $T[R_iNsTr_69_3624_sample_start_] 
        $T[R_iNsTr_69_3624_sample_completed_] 
        $T[R_iNsTr_69_3624_update_start_] 
        $T[R_iNsTr_69_3624_update_completed_] 
        // implicit reference
        R_iNsTr_69_3624_sample_start_ <-& (LOAD_DDCALCbuff_ptr_3621_update_completed_)
        R_iNsTr_69_3624_sample_completed_ <-& (R_iNsTr_69_3624_sample_start_)
        R_iNsTr_69_3624_update_start_ <-& (R_iNsTr_69_3624_sample_completed_)
        R_iNsTr_69_3624_update_completed_ <-& (R_iNsTr_69_3624_update_start_)
        ;;[array_obj_ref_3625_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        R_iNsTr_69_3624_update_completed_ &-> (array_obj_ref_3625_index_resize_0)
        array_obj_ref_3625_index_resized_0 <-& (array_obj_ref_3625_index_resize_0)
        ;;[array_obj_ref_3625_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3625_index_resized_0 &-> (array_obj_ref_3625_index_scale_0)
        array_obj_ref_3625_index_scaled_0 <-& (array_obj_ref_3625_index_scale_0)
        ;;[array_obj_ref_3625_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3625_index_scaled_0 &-> (array_obj_ref_3625_final_index_sum_regn)
        array_obj_ref_3625_offset_calculated <-& (array_obj_ref_3625_final_index_sum_regn)
        ;;[array_obj_ref_3625_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3625_offset_calculated &-> (array_obj_ref_3625_base_plus_offset)
        array_obj_ref_3625_root_address_calculated <-& (array_obj_ref_3625_base_plus_offset)
        ;;[addr_of_3626_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_3626_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_3626_sample_start_ <-& (array_obj_ref_3625_root_address_calculated)
        addr_of_3626_sample_start_ &-> (addr_of_3626_request)
        addr_of_3626_sample_completed_ <-& (addr_of_3626_request)
        addr_of_3626_update_start_ &-> (addr_of_3626_complete)
        addr_of_3626_update_completed_ <-& (addr_of_3626_complete)
        // Target expression
        // (as target) iNsTr_70
        // iNsTr_70
        // implicit reference
        // 		iNsTr_71 := ->(iNsTr_70)
        //  file prog.linked.opt.aa, line 1337
        // Source expression
        // ->(iNsTr_70)
        $T[ptr_deref_3630_sample_start_] 
        $T[ptr_deref_3630_sample_completed_] 
        $T[ptr_deref_3630_update_start_] 
        $T[ptr_deref_3630_update_completed_] 
        $T[ptr_deref_3630_base_address_calculated] 
        // iNsTr_70
        $T[R_iNsTr_70_3629_sample_start_] 
        $T[R_iNsTr_70_3629_sample_completed_] 
        $T[R_iNsTr_70_3629_update_start_] 
        $T[R_iNsTr_70_3629_update_completed_] 
        // implicit reference
        R_iNsTr_70_3629_sample_start_ <-& (addr_of_3626_update_completed_)
        R_iNsTr_70_3629_sample_completed_ <-& (R_iNsTr_70_3629_sample_start_)
        R_iNsTr_70_3629_update_start_ <-& (R_iNsTr_70_3629_sample_completed_)
        R_iNsTr_70_3629_update_completed_ <-& (R_iNsTr_70_3629_update_start_)
        $T[ptr_deref_3630_word_address_calculated] 
        $T[ptr_deref_3630_root_address_calculated] 
        $T[ptr_deref_3630_base_address_resized] 
        ;;[ptr_deref_3630_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_3630_base_address_calculated &-> (ptr_deref_3630_base_addr_resize)
        ptr_deref_3630_base_address_resized <-& (ptr_deref_3630_base_addr_resize)
        ;;[ptr_deref_3630_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_3630_base_address_resized &-> (ptr_deref_3630_base_plus_offset)
        ptr_deref_3630_root_address_calculated <-& (ptr_deref_3630_base_plus_offset)
        ;;[ptr_deref_3630_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_3630_root_address_calculated &-> (ptr_deref_3630_word_addrgen)
        ptr_deref_3630_word_address_calculated <-& (ptr_deref_3630_word_addrgen)
        ;;[ptr_deref_3630_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_3630_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_3630_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_3630_sample_start_ <-& (ptr_deref_3630_word_address_calculated)
        ptr_deref_3630_sample_start_ &-> (ptr_deref_3630_Sample)
        ptr_deref_3630_sample_completed_ <-& (ptr_deref_3630_Sample)
        ptr_deref_3630_sample_completed_ &-> ($null)
        ptr_deref_3630_update_start_ &-> (ptr_deref_3630_Update)
        ptr_deref_3630_update_completed_ <-& (ptr_deref_3630_Update)
        ptr_deref_3630_base_address_calculated <-& (R_iNsTr_70_3629_update_completed_)
        ptr_deref_3630_sample_start_ <-& (ptr_deref_3630_base_address_calculated)
        // Target expression
        // (as target) iNsTr_71
        // iNsTr_71
        // implicit reference
        // 		iNsTr_72 := (iNsTr_23 - iNsTr_71)
        //  file prog.linked.opt.aa, line 1338
        // Source expression
        // (iNsTr_23 - iNsTr_71)
        $T[SUB_u32_u32_3635_sample_start_] 
        $T[SUB_u32_u32_3635_sample_completed_] 
        $T[SUB_u32_u32_3635_update_start_] 
        $T[SUB_u32_u32_3635_update_completed_] 
        // iNsTr_23
        $T[R_iNsTr_23_3633_sample_start_] 
        $T[R_iNsTr_23_3633_sample_completed_] 
        $T[R_iNsTr_23_3633_update_start_] 
        $T[R_iNsTr_23_3633_update_completed_] 
        // implicit reference
        R_iNsTr_23_3633_sample_start_ <-& ($entry)
        R_iNsTr_23_3633_sample_completed_ <-& (R_iNsTr_23_3633_sample_start_)
        R_iNsTr_23_3633_update_start_ <-& (R_iNsTr_23_3633_sample_completed_)
        R_iNsTr_23_3633_update_completed_ <-& (R_iNsTr_23_3633_update_start_)
        // iNsTr_71
        $T[R_iNsTr_71_3634_sample_start_] 
        $T[R_iNsTr_71_3634_sample_completed_] 
        $T[R_iNsTr_71_3634_update_start_] 
        $T[R_iNsTr_71_3634_update_completed_] 
        // implicit reference
        R_iNsTr_71_3634_sample_start_ <-& (ptr_deref_3630_update_completed_)
        R_iNsTr_71_3634_sample_completed_ <-& (R_iNsTr_71_3634_sample_start_)
        R_iNsTr_71_3634_update_start_ <-& (R_iNsTr_71_3634_sample_completed_)
        R_iNsTr_71_3634_update_completed_ <-& (R_iNsTr_71_3634_update_start_)
        SUB_u32_u32_3635_sample_start_ <-& (R_iNsTr_23_3633_update_completed_)
        SUB_u32_u32_3635_sample_start_ <-& (R_iNsTr_71_3634_update_completed_)
        ;;[SUB_u32_u32_3635_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_3635_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_3635_sample_start_ &-> (SUB_u32_u32_3635_Sample)
        SUB_u32_u32_3635_sample_completed_ <-& (SUB_u32_u32_3635_Sample)
        SUB_u32_u32_3635_sample_completed_ &-> ($null)
        SUB_u32_u32_3635_update_start_ &-> (SUB_u32_u32_3635_Update)
        SUB_u32_u32_3635_update_completed_ <-& (SUB_u32_u32_3635_Update)
        // Target expression
        // (as target) iNsTr_72
        // iNsTr_72
        // implicit reference
        // 		->(iNsTr_70) := iNsTr_23
        //  file prog.linked.opt.aa, line 1339
        // Source expression
        // iNsTr_23
        $T[R_iNsTr_23_3639_sample_start_] 
        $T[R_iNsTr_23_3639_sample_completed_] 
        $T[R_iNsTr_23_3639_update_start_] 
        $T[R_iNsTr_23_3639_update_completed_] 
        // implicit reference
        R_iNsTr_23_3639_sample_start_ <-& ($entry)
        R_iNsTr_23_3639_sample_completed_ <-& (R_iNsTr_23_3639_sample_start_)
        R_iNsTr_23_3639_update_start_ <-& (R_iNsTr_23_3639_sample_completed_)
        R_iNsTr_23_3639_update_completed_ <-& (R_iNsTr_23_3639_update_start_)
        // Target expression
        // ->(iNsTr_70)
        $T[ptr_deref_3638_sample_start_] 
        $T[ptr_deref_3638_sample_completed_] 
        $T[ptr_deref_3638_update_start_] 
        $T[ptr_deref_3638_update_completed_] 
        $T[ptr_deref_3638_base_address_calculated] 
        // iNsTr_70
        $T[R_iNsTr_70_3637_sample_start_] 
        $T[R_iNsTr_70_3637_sample_completed_] 
        $T[R_iNsTr_70_3637_update_start_] 
        $T[R_iNsTr_70_3637_update_completed_] 
        // implicit reference
        R_iNsTr_70_3637_sample_start_ <-& (addr_of_3626_update_completed_)
        R_iNsTr_70_3637_sample_completed_ <-& (R_iNsTr_70_3637_sample_start_)
        R_iNsTr_70_3637_update_start_ <-& (R_iNsTr_70_3637_sample_completed_)
        R_iNsTr_70_3637_update_completed_ <-& (R_iNsTr_70_3637_update_start_)
        $T[ptr_deref_3638_word_address_calculated] 
        $T[ptr_deref_3638_root_address_calculated] 
        $T[ptr_deref_3638_base_address_resized] 
        ;;[ptr_deref_3638_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_3638_base_address_calculated &-> (ptr_deref_3638_base_addr_resize)
        ptr_deref_3638_base_address_resized <-& (ptr_deref_3638_base_addr_resize)
        ;;[ptr_deref_3638_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_3638_base_address_resized &-> (ptr_deref_3638_base_plus_offset)
        ptr_deref_3638_root_address_calculated <-& (ptr_deref_3638_base_plus_offset)
        ;;[ptr_deref_3638_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_3638_root_address_calculated &-> (ptr_deref_3638_word_addrgen)
        ptr_deref_3638_word_address_calculated <-& (ptr_deref_3638_word_addrgen)
        ;;[ptr_deref_3638_Sample] 
        {
          ;;[ptr_deref_3638_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_3638_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_3638_sample_start_ <-& (ptr_deref_3638_word_address_calculated)
        ptr_deref_3638_sample_start_ &-> (ptr_deref_3638_Sample)
        ptr_deref_3638_sample_completed_ <-& (ptr_deref_3638_Sample)
        ptr_deref_3638_sample_completed_ &-> ($null)
        ptr_deref_3638_update_start_ &-> (ptr_deref_3638_Update)
        ptr_deref_3638_update_completed_ <-& (ptr_deref_3638_Update)
        ptr_deref_3638_base_address_calculated <-& (R_iNsTr_70_3637_update_completed_)
        ptr_deref_3638_sample_start_ <-& (ptr_deref_3638_base_address_calculated)
        ptr_deref_3638_sample_start_ <-& (R_iNsTr_23_3639_update_completed_)
        // 		iNsTr_74 := (iNsTr_69 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 1340
        // Source expression
        // (iNsTr_69 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_3645_sample_start_] 
        $T[ADD_u32_u32_3645_sample_completed_] 
        $T[ADD_u32_u32_3645_update_start_] 
        $T[ADD_u32_u32_3645_update_completed_] 
        // iNsTr_69
        $T[R_iNsTr_69_3642_sample_start_] 
        $T[R_iNsTr_69_3642_sample_completed_] 
        $T[R_iNsTr_69_3642_update_start_] 
        $T[R_iNsTr_69_3642_update_completed_] 
        // implicit reference
        R_iNsTr_69_3642_sample_start_ <-& (LOAD_DDCALCbuff_ptr_3621_update_completed_)
        R_iNsTr_69_3642_sample_completed_ <-& (R_iNsTr_69_3642_sample_start_)
        R_iNsTr_69_3642_update_start_ <-& (R_iNsTr_69_3642_sample_completed_)
        R_iNsTr_69_3642_update_completed_ <-& (R_iNsTr_69_3642_update_start_)
        ADD_u32_u32_3645_sample_start_ <-& (R_iNsTr_69_3642_update_completed_)
        ;;[ADD_u32_u32_3645_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_3645_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_3645_sample_start_ &-> (ADD_u32_u32_3645_Sample)
        ADD_u32_u32_3645_sample_completed_ <-& (ADD_u32_u32_3645_Sample)
        ADD_u32_u32_3645_sample_completed_ &-> ($null)
        ADD_u32_u32_3645_update_start_ &-> (ADD_u32_u32_3645_Update)
        ADD_u32_u32_3645_update_completed_ <-& (ADD_u32_u32_3645_Update)
        // Target expression
        // (as target) iNsTr_74
        // iNsTr_74
        // implicit reference
        // 		iNsTr_75 := (iNsTr_74 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
        //  file prog.linked.opt.aa, line 1341
        // Source expression
        // (iNsTr_74 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
        $T[EQ_u32_u1_3651_sample_start_] 
        $T[EQ_u32_u1_3651_sample_completed_] 
        $T[EQ_u32_u1_3651_update_start_] 
        $T[EQ_u32_u1_3651_update_completed_] 
        // iNsTr_74
        $T[R_iNsTr_74_3648_sample_start_] 
        $T[R_iNsTr_74_3648_sample_completed_] 
        $T[R_iNsTr_74_3648_update_start_] 
        $T[R_iNsTr_74_3648_update_completed_] 
        // implicit reference
        R_iNsTr_74_3648_sample_start_ <-& (ADD_u32_u32_3645_update_completed_)
        R_iNsTr_74_3648_sample_completed_ <-& (R_iNsTr_74_3648_sample_start_)
        R_iNsTr_74_3648_update_start_ <-& (R_iNsTr_74_3648_sample_completed_)
        R_iNsTr_74_3648_update_completed_ <-& (R_iNsTr_74_3648_update_start_)
        EQ_u32_u1_3651_sample_start_ <-& (R_iNsTr_74_3648_update_completed_)
        ;;[EQ_u32_u1_3651_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_3651_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_3651_sample_start_ &-> (EQ_u32_u1_3651_Sample)
        EQ_u32_u1_3651_sample_completed_ <-& (EQ_u32_u1_3651_Sample)
        EQ_u32_u1_3651_sample_completed_ &-> ($null)
        EQ_u32_u1_3651_update_start_ &-> (EQ_u32_u1_3651_Update)
        EQ_u32_u1_3651_update_completed_ <-& (EQ_u32_u1_3651_Update)
        // Target expression
        // (as target) iNsTr_75
        // iNsTr_75
        // implicit reference
        // 		iNsTr_76 := ( $mux iNsTr_75 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_74 ) 
        //  file prog.linked.opt.aa, line 1342
        // Source expression
        // ( $mux iNsTr_75 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_74 ) 
        $T[MUX_3658_sample_start_] 
        $T[MUX_3658_sample_completed_] 
        $T[MUX_3658_update_start_] 
        $T[MUX_3658_update_completed_] 
        // iNsTr_75
        $T[R_iNsTr_75_3654_sample_start_] 
        $T[R_iNsTr_75_3654_sample_completed_] 
        $T[R_iNsTr_75_3654_update_start_] 
        $T[R_iNsTr_75_3654_update_completed_] 
        // implicit reference
        R_iNsTr_75_3654_sample_start_ <-& (EQ_u32_u1_3651_update_completed_)
        R_iNsTr_75_3654_sample_completed_ <-& (R_iNsTr_75_3654_sample_start_)
        R_iNsTr_75_3654_update_start_ <-& (R_iNsTr_75_3654_sample_completed_)
        R_iNsTr_75_3654_update_completed_ <-& (R_iNsTr_75_3654_update_start_)
        // iNsTr_74
        $T[R_iNsTr_74_3657_sample_start_] 
        $T[R_iNsTr_74_3657_sample_completed_] 
        $T[R_iNsTr_74_3657_update_start_] 
        $T[R_iNsTr_74_3657_update_completed_] 
        // implicit reference
        R_iNsTr_74_3657_sample_start_ <-& (ADD_u32_u32_3645_update_completed_)
        R_iNsTr_74_3657_sample_completed_ <-& (R_iNsTr_74_3657_sample_start_)
        R_iNsTr_74_3657_update_start_ <-& (R_iNsTr_74_3657_sample_completed_)
        R_iNsTr_74_3657_update_completed_ <-& (R_iNsTr_74_3657_update_start_)
        MUX_3658_sample_start_ <-& (R_iNsTr_75_3654_update_completed_)
        MUX_3658_sample_start_ <-& (R_iNsTr_74_3657_update_completed_)
        ;;[MUX_3658_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_3658_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_3658_sample_start_ &-> (MUX_3658_start)
        MUX_3658_sample_completed_ <-& (MUX_3658_start)
        MUX_3658_update_start_ &-> (MUX_3658_complete)
        MUX_3658_update_completed_ <-& (MUX_3658_complete)
        MUX_3658_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_76
        // iNsTr_76
        // implicit reference
        // 		DDCALCbuff_ptr := iNsTr_76
        //  file prog.linked.opt.aa, line 1343
        // Source expression
        // iNsTr_76
        $T[R_iNsTr_76_3661_sample_start_] 
        $T[R_iNsTr_76_3661_sample_completed_] 
        $T[R_iNsTr_76_3661_update_start_] 
        $T[R_iNsTr_76_3661_update_completed_] 
        // implicit reference
        R_iNsTr_76_3661_sample_start_ <-& (MUX_3658_update_completed_)
        R_iNsTr_76_3661_sample_completed_ <-& (R_iNsTr_76_3661_sample_start_)
        R_iNsTr_76_3661_update_start_ <-& (R_iNsTr_76_3661_sample_completed_)
        R_iNsTr_76_3661_update_completed_ <-& (R_iNsTr_76_3661_update_start_)
        // Target expression
        // (as target) DDCALCbuff_ptr
        $T[STORE_DDCALCbuff_ptr_3660_sample_start_] 
        $T[STORE_DDCALCbuff_ptr_3660_sample_completed_] 
        $T[STORE_DDCALCbuff_ptr_3660_update_start_] 
        $T[STORE_DDCALCbuff_ptr_3660_update_completed_] 
        // DDCALCbuff_ptr
        $T[STORE_DDCALCbuff_ptr_3660_word_address_calculated] 
        $T[STORE_DDCALCbuff_ptr_3660_root_address_calculated] 
        STORE_DDCALCbuff_ptr_3660_word_address_calculated <-& (STORE_DDCALCbuff_ptr_3660_root_address_calculated)
        ;;[STORE_DDCALCbuff_ptr_3660_Sample] 
        {
          ;;[STORE_DDCALCbuff_ptr_3660_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_DDCALCbuff_ptr_3660_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_DDCALCbuff_ptr_3660_sample_start_ <-& (STORE_DDCALCbuff_ptr_3660_word_address_calculated)
        STORE_DDCALCbuff_ptr_3660_sample_start_ &-> (STORE_DDCALCbuff_ptr_3660_Sample)
        STORE_DDCALCbuff_ptr_3660_sample_completed_ <-& (STORE_DDCALCbuff_ptr_3660_Sample)
        STORE_DDCALCbuff_ptr_3660_sample_completed_ &-> ($null)
        STORE_DDCALCbuff_ptr_3660_update_start_ &-> (STORE_DDCALCbuff_ptr_3660_Update)
        STORE_DDCALCbuff_ptr_3660_update_completed_ <-& (STORE_DDCALCbuff_ptr_3660_Update)
        STORE_DDCALCbuff_ptr_3660_sample_start_ <-& (R_iNsTr_76_3661_update_completed_)
        // 		iNsTr_78 := DDbuff_ptr
        //  file prog.linked.opt.aa, line 1344
        // Source expression
        // DDbuff_ptr
        $T[LOAD_DDbuff_ptr_3664_sample_start_] 
        $T[LOAD_DDbuff_ptr_3664_sample_completed_] 
        $T[LOAD_DDbuff_ptr_3664_update_start_] 
        $T[LOAD_DDbuff_ptr_3664_update_completed_] 
        $T[LOAD_DDbuff_ptr_3664_sample_start_] 
        $T[LOAD_DDbuff_ptr_3664_sample_completed_] 
        $T[LOAD_DDbuff_ptr_3664_update_start_] 
        $T[LOAD_DDbuff_ptr_3664_update_completed_] 
        $T[LOAD_DDbuff_ptr_3664_word_address_calculated] 
        $T[LOAD_DDbuff_ptr_3664_root_address_calculated] 
        LOAD_DDbuff_ptr_3664_word_address_calculated <-& (LOAD_DDbuff_ptr_3664_root_address_calculated)
        ;;[LOAD_DDbuff_ptr_3664_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_DDbuff_ptr_3664_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_DDbuff_ptr_3664_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_DDbuff_ptr_3664_sample_start_ <-& (LOAD_DDbuff_ptr_3664_word_address_calculated)
        LOAD_DDbuff_ptr_3664_sample_start_ &-> (LOAD_DDbuff_ptr_3664_Sample)
        LOAD_DDbuff_ptr_3664_sample_completed_ <-& (LOAD_DDbuff_ptr_3664_Sample)
        LOAD_DDbuff_ptr_3664_sample_completed_ &-> ($null)
        LOAD_DDbuff_ptr_3664_update_start_ &-> (LOAD_DDbuff_ptr_3664_Update)
        LOAD_DDbuff_ptr_3664_update_completed_ <-& (LOAD_DDbuff_ptr_3664_Update)
        // Target expression
        // (as target) iNsTr_78
        // iNsTr_78
        // implicit reference
        // 		iNsTr_79 := @(DDbuff[iNsTr_78])
        //  file prog.linked.opt.aa, line 1345
        // Source expression
        // @(DDbuff[iNsTr_78])
        $T[addr_of_3669_sample_start_] 
        $T[addr_of_3669_sample_completed_] 
        $T[addr_of_3669_update_start_] 
        $T[addr_of_3669_update_completed_] 
        $T[array_obj_ref_3668_root_address_calculated] 
        $T[array_obj_ref_3668_offset_calculated] 
        $T[array_obj_ref_3668_index_resized_0] 
        $T[array_obj_ref_3668_index_scaled_0] 
        // iNsTr_78
        $T[R_iNsTr_78_3667_sample_start_] 
        $T[R_iNsTr_78_3667_sample_completed_] 
        $T[R_iNsTr_78_3667_update_start_] 
        $T[R_iNsTr_78_3667_update_completed_] 
        // implicit reference
        R_iNsTr_78_3667_sample_start_ <-& (LOAD_DDbuff_ptr_3664_update_completed_)
        R_iNsTr_78_3667_sample_completed_ <-& (R_iNsTr_78_3667_sample_start_)
        R_iNsTr_78_3667_update_start_ <-& (R_iNsTr_78_3667_sample_completed_)
        R_iNsTr_78_3667_update_completed_ <-& (R_iNsTr_78_3667_update_start_)
        ;;[array_obj_ref_3668_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        R_iNsTr_78_3667_update_completed_ &-> (array_obj_ref_3668_index_resize_0)
        array_obj_ref_3668_index_resized_0 <-& (array_obj_ref_3668_index_resize_0)
        ;;[array_obj_ref_3668_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3668_index_resized_0 &-> (array_obj_ref_3668_index_scale_0)
        array_obj_ref_3668_index_scaled_0 <-& (array_obj_ref_3668_index_scale_0)
        ;;[array_obj_ref_3668_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3668_index_scaled_0 &-> (array_obj_ref_3668_final_index_sum_regn)
        array_obj_ref_3668_offset_calculated <-& (array_obj_ref_3668_final_index_sum_regn)
        ;;[array_obj_ref_3668_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3668_offset_calculated &-> (array_obj_ref_3668_base_plus_offset)
        array_obj_ref_3668_root_address_calculated <-& (array_obj_ref_3668_base_plus_offset)
        ;;[addr_of_3669_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_3669_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_3669_sample_start_ <-& (array_obj_ref_3668_root_address_calculated)
        addr_of_3669_sample_start_ &-> (addr_of_3669_request)
        addr_of_3669_sample_completed_ <-& (addr_of_3669_request)
        addr_of_3669_update_start_ &-> (addr_of_3669_complete)
        addr_of_3669_update_completed_ <-& (addr_of_3669_complete)
        // Target expression
        // (as target) iNsTr_79
        // iNsTr_79
        // implicit reference
        // 		->(iNsTr_79) := iNsTr_72
        //  file prog.linked.opt.aa, line 1346
        // Source expression
        // iNsTr_72
        $T[R_iNsTr_72_3673_sample_start_] 
        $T[R_iNsTr_72_3673_sample_completed_] 
        $T[R_iNsTr_72_3673_update_start_] 
        $T[R_iNsTr_72_3673_update_completed_] 
        // implicit reference
        R_iNsTr_72_3673_sample_start_ <-& (SUB_u32_u32_3635_update_completed_)
        R_iNsTr_72_3673_sample_completed_ <-& (R_iNsTr_72_3673_sample_start_)
        R_iNsTr_72_3673_update_start_ <-& (R_iNsTr_72_3673_sample_completed_)
        R_iNsTr_72_3673_update_completed_ <-& (R_iNsTr_72_3673_update_start_)
        // Target expression
        // ->(iNsTr_79)
        $T[ptr_deref_3672_sample_start_] 
        $T[ptr_deref_3672_sample_completed_] 
        $T[ptr_deref_3672_update_start_] 
        $T[ptr_deref_3672_update_completed_] 
        $T[ptr_deref_3672_base_address_calculated] 
        // iNsTr_79
        $T[R_iNsTr_79_3671_sample_start_] 
        $T[R_iNsTr_79_3671_sample_completed_] 
        $T[R_iNsTr_79_3671_update_start_] 
        $T[R_iNsTr_79_3671_update_completed_] 
        // implicit reference
        R_iNsTr_79_3671_sample_start_ <-& (addr_of_3669_update_completed_)
        R_iNsTr_79_3671_sample_completed_ <-& (R_iNsTr_79_3671_sample_start_)
        R_iNsTr_79_3671_update_start_ <-& (R_iNsTr_79_3671_sample_completed_)
        R_iNsTr_79_3671_update_completed_ <-& (R_iNsTr_79_3671_update_start_)
        $T[ptr_deref_3672_word_address_calculated] 
        $T[ptr_deref_3672_root_address_calculated] 
        $T[ptr_deref_3672_base_address_resized] 
        ;;[ptr_deref_3672_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_3672_base_address_calculated &-> (ptr_deref_3672_base_addr_resize)
        ptr_deref_3672_base_address_resized <-& (ptr_deref_3672_base_addr_resize)
        ;;[ptr_deref_3672_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_3672_base_address_resized &-> (ptr_deref_3672_base_plus_offset)
        ptr_deref_3672_root_address_calculated <-& (ptr_deref_3672_base_plus_offset)
        ;;[ptr_deref_3672_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_3672_root_address_calculated &-> (ptr_deref_3672_word_addrgen)
        ptr_deref_3672_word_address_calculated <-& (ptr_deref_3672_word_addrgen)
        ;;[ptr_deref_3672_Sample] 
        {
          ;;[ptr_deref_3672_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_3672_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_3672_sample_start_ <-& (ptr_deref_3672_word_address_calculated)
        ptr_deref_3672_sample_start_ &-> (ptr_deref_3672_Sample)
        ptr_deref_3672_sample_completed_ <-& (ptr_deref_3672_Sample)
        ptr_deref_3672_sample_completed_ &-> ($null)
        ptr_deref_3672_update_start_ &-> (ptr_deref_3672_Update)
        ptr_deref_3672_update_completed_ <-& (ptr_deref_3672_Update)
        ptr_deref_3672_base_address_calculated <-& (R_iNsTr_79_3671_update_completed_)
        ptr_deref_3672_sample_start_ <-& (ptr_deref_3672_base_address_calculated)
        ptr_deref_3672_sample_start_ <-& (R_iNsTr_72_3673_update_completed_)
        // 		iNsTr_81 := (iNsTr_78 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 1347
        // Source expression
        // (iNsTr_78 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_3679_sample_start_] 
        $T[ADD_u32_u32_3679_sample_completed_] 
        $T[ADD_u32_u32_3679_update_start_] 
        $T[ADD_u32_u32_3679_update_completed_] 
        // iNsTr_78
        $T[R_iNsTr_78_3676_sample_start_] 
        $T[R_iNsTr_78_3676_sample_completed_] 
        $T[R_iNsTr_78_3676_update_start_] 
        $T[R_iNsTr_78_3676_update_completed_] 
        // implicit reference
        R_iNsTr_78_3676_sample_start_ <-& (LOAD_DDbuff_ptr_3664_update_completed_)
        R_iNsTr_78_3676_sample_completed_ <-& (R_iNsTr_78_3676_sample_start_)
        R_iNsTr_78_3676_update_start_ <-& (R_iNsTr_78_3676_sample_completed_)
        R_iNsTr_78_3676_update_completed_ <-& (R_iNsTr_78_3676_update_start_)
        ADD_u32_u32_3679_sample_start_ <-& (R_iNsTr_78_3676_update_completed_)
        ;;[ADD_u32_u32_3679_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_3679_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_3679_sample_start_ &-> (ADD_u32_u32_3679_Sample)
        ADD_u32_u32_3679_sample_completed_ <-& (ADD_u32_u32_3679_Sample)
        ADD_u32_u32_3679_sample_completed_ &-> ($null)
        ADD_u32_u32_3679_update_start_ &-> (ADD_u32_u32_3679_Update)
        ADD_u32_u32_3679_update_completed_ <-& (ADD_u32_u32_3679_Update)
        // Target expression
        // (as target) iNsTr_81
        // iNsTr_81
        // implicit reference
        // 		iNsTr_82 := (iNsTr_81 == ($bitcast ($uint<32>) _b00000000000000000000000001011100  ))
        //  file prog.linked.opt.aa, line 1348
        // Source expression
        // (iNsTr_81 == ($bitcast ($uint<32>) _b00000000000000000000000001011100  ))
        $T[EQ_u32_u1_3685_sample_start_] 
        $T[EQ_u32_u1_3685_sample_completed_] 
        $T[EQ_u32_u1_3685_update_start_] 
        $T[EQ_u32_u1_3685_update_completed_] 
        // iNsTr_81
        $T[R_iNsTr_81_3682_sample_start_] 
        $T[R_iNsTr_81_3682_sample_completed_] 
        $T[R_iNsTr_81_3682_update_start_] 
        $T[R_iNsTr_81_3682_update_completed_] 
        // implicit reference
        R_iNsTr_81_3682_sample_start_ <-& (ADD_u32_u32_3679_update_completed_)
        R_iNsTr_81_3682_sample_completed_ <-& (R_iNsTr_81_3682_sample_start_)
        R_iNsTr_81_3682_update_start_ <-& (R_iNsTr_81_3682_sample_completed_)
        R_iNsTr_81_3682_update_completed_ <-& (R_iNsTr_81_3682_update_start_)
        EQ_u32_u1_3685_sample_start_ <-& (R_iNsTr_81_3682_update_completed_)
        ;;[EQ_u32_u1_3685_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_3685_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_3685_sample_start_ &-> (EQ_u32_u1_3685_Sample)
        EQ_u32_u1_3685_sample_completed_ <-& (EQ_u32_u1_3685_Sample)
        EQ_u32_u1_3685_sample_completed_ &-> ($null)
        EQ_u32_u1_3685_update_start_ &-> (EQ_u32_u1_3685_Update)
        EQ_u32_u1_3685_update_completed_ <-& (EQ_u32_u1_3685_Update)
        // Target expression
        // (as target) iNsTr_82
        // iNsTr_82
        // implicit reference
        // 		iNsTr_83 := ( $mux iNsTr_82 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_81 ) 
        //  file prog.linked.opt.aa, line 1349
        // Source expression
        // ( $mux iNsTr_82 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_81 ) 
        $T[MUX_3692_sample_start_] 
        $T[MUX_3692_sample_completed_] 
        $T[MUX_3692_update_start_] 
        $T[MUX_3692_update_completed_] 
        // iNsTr_82
        $T[R_iNsTr_82_3688_sample_start_] 
        $T[R_iNsTr_82_3688_sample_completed_] 
        $T[R_iNsTr_82_3688_update_start_] 
        $T[R_iNsTr_82_3688_update_completed_] 
        // implicit reference
        R_iNsTr_82_3688_sample_start_ <-& (EQ_u32_u1_3685_update_completed_)
        R_iNsTr_82_3688_sample_completed_ <-& (R_iNsTr_82_3688_sample_start_)
        R_iNsTr_82_3688_update_start_ <-& (R_iNsTr_82_3688_sample_completed_)
        R_iNsTr_82_3688_update_completed_ <-& (R_iNsTr_82_3688_update_start_)
        // iNsTr_81
        $T[R_iNsTr_81_3691_sample_start_] 
        $T[R_iNsTr_81_3691_sample_completed_] 
        $T[R_iNsTr_81_3691_update_start_] 
        $T[R_iNsTr_81_3691_update_completed_] 
        // implicit reference
        R_iNsTr_81_3691_sample_start_ <-& (ADD_u32_u32_3679_update_completed_)
        R_iNsTr_81_3691_sample_completed_ <-& (R_iNsTr_81_3691_sample_start_)
        R_iNsTr_81_3691_update_start_ <-& (R_iNsTr_81_3691_sample_completed_)
        R_iNsTr_81_3691_update_completed_ <-& (R_iNsTr_81_3691_update_start_)
        MUX_3692_sample_start_ <-& (R_iNsTr_82_3688_update_completed_)
        MUX_3692_sample_start_ <-& (R_iNsTr_81_3691_update_completed_)
        ;;[MUX_3692_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_3692_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_3692_sample_start_ &-> (MUX_3692_start)
        MUX_3692_sample_completed_ <-& (MUX_3692_start)
        MUX_3692_update_start_ &-> (MUX_3692_complete)
        MUX_3692_update_completed_ <-& (MUX_3692_complete)
        MUX_3692_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_83
        // iNsTr_83
        // implicit reference
        // 		DDbuff_ptr := iNsTr_83
        //  file prog.linked.opt.aa, line 1350
        // Source expression
        // iNsTr_83
        $T[R_iNsTr_83_3695_sample_start_] 
        $T[R_iNsTr_83_3695_sample_completed_] 
        $T[R_iNsTr_83_3695_update_start_] 
        $T[R_iNsTr_83_3695_update_completed_] 
        // implicit reference
        R_iNsTr_83_3695_sample_start_ <-& (MUX_3692_update_completed_)
        R_iNsTr_83_3695_sample_completed_ <-& (R_iNsTr_83_3695_sample_start_)
        R_iNsTr_83_3695_update_start_ <-& (R_iNsTr_83_3695_sample_completed_)
        R_iNsTr_83_3695_update_completed_ <-& (R_iNsTr_83_3695_update_start_)
        // Target expression
        // (as target) DDbuff_ptr
        $T[STORE_DDbuff_ptr_3694_sample_start_] 
        $T[STORE_DDbuff_ptr_3694_sample_completed_] 
        $T[STORE_DDbuff_ptr_3694_update_start_] 
        $T[STORE_DDbuff_ptr_3694_update_completed_] 
        // DDbuff_ptr
        $T[STORE_DDbuff_ptr_3694_word_address_calculated] 
        $T[STORE_DDbuff_ptr_3694_root_address_calculated] 
        STORE_DDbuff_ptr_3694_word_address_calculated <-& (STORE_DDbuff_ptr_3694_root_address_calculated)
        ;;[STORE_DDbuff_ptr_3694_Sample] 
        {
          ;;[STORE_DDbuff_ptr_3694_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_DDbuff_ptr_3694_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_DDbuff_ptr_3694_sample_start_ <-& (STORE_DDbuff_ptr_3694_word_address_calculated)
        STORE_DDbuff_ptr_3694_sample_start_ &-> (STORE_DDbuff_ptr_3694_Sample)
        STORE_DDbuff_ptr_3694_sample_completed_ <-& (STORE_DDbuff_ptr_3694_Sample)
        STORE_DDbuff_ptr_3694_sample_completed_ &-> ($null)
        STORE_DDbuff_ptr_3694_update_start_ &-> (STORE_DDbuff_ptr_3694_Update)
        STORE_DDbuff_ptr_3694_update_completed_ <-& (STORE_DDbuff_ptr_3694_Update)
        STORE_DDbuff_ptr_3694_sample_start_ <-& (R_iNsTr_83_3695_update_completed_)
        // 		iNsTr_85 := (countx_x0 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 1351
        // Source expression
        // (countx_x0 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_3701_sample_start_] 
        $T[ADD_u32_u32_3701_sample_completed_] 
        $T[ADD_u32_u32_3701_update_start_] 
        $T[ADD_u32_u32_3701_update_completed_] 
        // countx_x0
        $T[R_countx_x0_3698_sample_start_] 
        $T[R_countx_x0_3698_sample_completed_] 
        $T[R_countx_x0_3698_update_start_] 
        $T[R_countx_x0_3698_update_completed_] 
        // implicit reference
        R_countx_x0_3698_sample_start_ <-& ($entry)
        R_countx_x0_3698_sample_completed_ <-& (R_countx_x0_3698_sample_start_)
        R_countx_x0_3698_update_start_ <-& (R_countx_x0_3698_sample_completed_)
        R_countx_x0_3698_update_completed_ <-& (R_countx_x0_3698_update_start_)
        ADD_u32_u32_3701_sample_start_ <-& (R_countx_x0_3698_update_completed_)
        ;;[ADD_u32_u32_3701_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_3701_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_3701_sample_start_ &-> (ADD_u32_u32_3701_Sample)
        ADD_u32_u32_3701_sample_completed_ <-& (ADD_u32_u32_3701_Sample)
        ADD_u32_u32_3701_sample_completed_ &-> ($null)
        ADD_u32_u32_3701_update_start_ &-> (ADD_u32_u32_3701_Update)
        ADD_u32_u32_3701_update_completed_ <-& (ADD_u32_u32_3701_Update)
        // Target expression
        // (as target) iNsTr_85
        // iNsTr_85
        // implicit reference
        // 		iNsTr_86 := (init8Donex_x0 == ($bitcast ($uint<8>) _b00000000  ))
        //  file prog.linked.opt.aa, line 1352
        // Source expression
        // (init8Donex_x0 == ($bitcast ($uint<8>) _b00000000  ))
        $T[EQ_u8_u1_3707_sample_start_] 
        $T[EQ_u8_u1_3707_sample_completed_] 
        $T[EQ_u8_u1_3707_update_start_] 
        $T[EQ_u8_u1_3707_update_completed_] 
        // init8Donex_x0
        $T[R_init8Donex_x0_3704_sample_start_] 
        $T[R_init8Donex_x0_3704_sample_completed_] 
        $T[R_init8Donex_x0_3704_update_start_] 
        $T[R_init8Donex_x0_3704_update_completed_] 
        // implicit reference
        R_init8Donex_x0_3704_sample_start_ <-& ($entry)
        R_init8Donex_x0_3704_sample_completed_ <-& (R_init8Donex_x0_3704_sample_start_)
        R_init8Donex_x0_3704_update_start_ <-& (R_init8Donex_x0_3704_sample_completed_)
        R_init8Donex_x0_3704_update_completed_ <-& (R_init8Donex_x0_3704_update_start_)
        EQ_u8_u1_3707_sample_start_ <-& (R_init8Donex_x0_3704_update_completed_)
        ;;[EQ_u8_u1_3707_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u8_u1_3707_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u8_u1_3707_sample_start_ &-> (EQ_u8_u1_3707_Sample)
        EQ_u8_u1_3707_sample_completed_ <-& (EQ_u8_u1_3707_Sample)
        EQ_u8_u1_3707_sample_completed_ &-> ($null)
        EQ_u8_u1_3707_update_start_ &-> (EQ_u8_u1_3707_Update)
        EQ_u8_u1_3707_update_completed_ <-& (EQ_u8_u1_3707_Update)
        // Target expression
        // (as target) iNsTr_86
        // iNsTr_86
        // implicit reference
        // load-store dependencies..
        $T [ptr_deref_3630_ptr_deref_3638_delay] $delay
        // ->(iNsTr_70)(load) -> ->(iNsTr_70)(store)
        ptr_deref_3638_sample_start_ <-& (ptr_deref_3630_ptr_deref_3638_delay)
        ptr_deref_3630_ptr_deref_3638_delay <-& (ptr_deref_3630_sample_completed_)
        $T [LOAD_DDCALCbuff_ptr_3621_STORE_DDCALCbuff_ptr_3660_delay] $delay
        // DDCALCbuff_ptr(load) -> DDCALCbuff_ptr(store)
        STORE_DDCALCbuff_ptr_3660_sample_start_ <-& (LOAD_DDCALCbuff_ptr_3621_STORE_DDCALCbuff_ptr_3660_delay)
        LOAD_DDCALCbuff_ptr_3621_STORE_DDCALCbuff_ptr_3660_delay <-& (LOAD_DDCALCbuff_ptr_3621_sample_completed_)
        $T [LOAD_DDbuff_ptr_3664_STORE_DDbuff_ptr_3694_delay] $delay
        // DDbuff_ptr(load) -> DDbuff_ptr(store)
        STORE_DDbuff_ptr_3694_sample_start_ <-& (LOAD_DDbuff_ptr_3664_STORE_DDbuff_ptr_3694_delay)
        LOAD_DDbuff_ptr_3664_STORE_DDbuff_ptr_3694_delay <-& (LOAD_DDbuff_ptr_3664_sample_completed_)
      }
      assign_stmt_3597_to_assign_stmt_3708__entry__ |-> (assign_stmt_3597_to_assign_stmt_3708)
      assign_stmt_3597_to_assign_stmt_3708__exit__ <-| (assign_stmt_3597_to_assign_stmt_3708)
      // if-statement  
      //  file prog.linked.opt.aa, line 1353
      ;;[if_stmt_3709_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3709__entry__ |-> (if_stmt_3709_dead_link)
      if_stmt_3709__exit__ <-| (if_stmt_3709_dead_link)
      ;;[if_stmt_3709_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3709__entry__ |-> (if_stmt_3709_eval_test)
      $P [R_iNsTr_86_3710_place]
      R_iNsTr_86_3710_place <-| (if_stmt_3709_eval_test)
      ;;[if_stmt_3709_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3709_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_86_3710_place |-> (if_stmt_3709_if_link if_stmt_3709_else_link)
      $P [xx_xthread_bb_13]
      xx_xthread_bb_13 <-| (if_stmt_3709_if_link)
      $P [xx_xthread_xx_xpreheader]
      xx_xthread_xx_xpreheader <-| (if_stmt_3709_else_link)
      ::[assign_stmt_3723_to_assign_stmt_3804] 
      {
        // 		iNsTr_89 := (initBlankx_x1 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 1363
        // Source expression
        // (initBlankx_x1 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_3722_sample_start_] 
        $T[ADD_u32_u32_3722_sample_completed_] 
        $T[ADD_u32_u32_3722_update_start_] 
        $T[ADD_u32_u32_3722_update_completed_] 
        // initBlankx_x1
        $T[R_initBlankx_x1_3719_sample_start_] 
        $T[R_initBlankx_x1_3719_sample_completed_] 
        $T[R_initBlankx_x1_3719_update_start_] 
        $T[R_initBlankx_x1_3719_update_completed_] 
        // implicit reference
        R_initBlankx_x1_3719_sample_start_ <-& ($entry)
        R_initBlankx_x1_3719_sample_completed_ <-& (R_initBlankx_x1_3719_sample_start_)
        R_initBlankx_x1_3719_update_start_ <-& (R_initBlankx_x1_3719_sample_completed_)
        R_initBlankx_x1_3719_update_completed_ <-& (R_initBlankx_x1_3719_update_start_)
        ADD_u32_u32_3722_sample_start_ <-& (R_initBlankx_x1_3719_update_completed_)
        ;;[ADD_u32_u32_3722_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_3722_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_3722_sample_start_ &-> (ADD_u32_u32_3722_Sample)
        ADD_u32_u32_3722_sample_completed_ <-& (ADD_u32_u32_3722_Sample)
        ADD_u32_u32_3722_sample_completed_ &-> ($null)
        ADD_u32_u32_3722_update_start_ &-> (ADD_u32_u32_3722_Update)
        ADD_u32_u32_3722_update_completed_ <-& (ADD_u32_u32_3722_Update)
        // Target expression
        // (as target) iNsTr_89
        // iNsTr_89
        // implicit reference
        // 		iNsTr_90 := (iNsTr_89 == ($bitcast ($uint<32>) _b00000000000000000000000011001000  ))
        //  file prog.linked.opt.aa, line 1364
        // Source expression
        // (iNsTr_89 == ($bitcast ($uint<32>) _b00000000000000000000000011001000  ))
        $T[EQ_u32_u1_3728_sample_start_] 
        $T[EQ_u32_u1_3728_sample_completed_] 
        $T[EQ_u32_u1_3728_update_start_] 
        $T[EQ_u32_u1_3728_update_completed_] 
        // iNsTr_89
        $T[R_iNsTr_89_3725_sample_start_] 
        $T[R_iNsTr_89_3725_sample_completed_] 
        $T[R_iNsTr_89_3725_update_start_] 
        $T[R_iNsTr_89_3725_update_completed_] 
        // implicit reference
        R_iNsTr_89_3725_sample_start_ <-& (ADD_u32_u32_3722_update_completed_)
        R_iNsTr_89_3725_sample_completed_ <-& (R_iNsTr_89_3725_sample_start_)
        R_iNsTr_89_3725_update_start_ <-& (R_iNsTr_89_3725_sample_completed_)
        R_iNsTr_89_3725_update_completed_ <-& (R_iNsTr_89_3725_update_start_)
        EQ_u32_u1_3728_sample_start_ <-& (R_iNsTr_89_3725_update_completed_)
        ;;[EQ_u32_u1_3728_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_3728_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_3728_sample_start_ &-> (EQ_u32_u1_3728_Sample)
        EQ_u32_u1_3728_sample_completed_ <-& (EQ_u32_u1_3728_Sample)
        EQ_u32_u1_3728_sample_completed_ &-> ($null)
        EQ_u32_u1_3728_update_start_ &-> (EQ_u32_u1_3728_Update)
        EQ_u32_u1_3728_update_completed_ <-& (EQ_u32_u1_3728_Update)
        // Target expression
        // (as target) iNsTr_90
        // iNsTr_90
        // implicit reference
        // 		iNsTr_91 := (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.linked.opt.aa, line 1365
        // Source expression
        // (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[SGT_i32_u1_3736_sample_start_] 
        $T[SGT_i32_u1_3736_sample_completed_] 
        $T[SGT_i32_u1_3736_update_start_] 
        $T[SGT_i32_u1_3736_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_68 )
        $T[type_cast_3732_sample_start_] 
        $T[type_cast_3732_sample_completed_] 
        $T[type_cast_3732_update_start_] 
        $T[type_cast_3732_update_completed_] 
        // iNsTr_68
        $T[R_iNsTr_68_3731_sample_start_] 
        $T[R_iNsTr_68_3731_sample_completed_] 
        $T[R_iNsTr_68_3731_update_start_] 
        $T[R_iNsTr_68_3731_update_completed_] 
        // implicit reference
        R_iNsTr_68_3731_sample_start_ <-& ($entry)
        R_iNsTr_68_3731_sample_completed_ <-& (R_iNsTr_68_3731_sample_start_)
        R_iNsTr_68_3731_update_start_ <-& (R_iNsTr_68_3731_sample_completed_)
        R_iNsTr_68_3731_update_completed_ <-& (R_iNsTr_68_3731_update_start_)
        type_cast_3732_sample_start_ <-& (R_iNsTr_68_3731_update_completed_)
        ;;[type_cast_3732_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3732_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3732_sample_start_ &-> (type_cast_3732_Sample)
        type_cast_3732_sample_completed_ <-& (type_cast_3732_Sample)
        type_cast_3732_sample_completed_ &-> ($null)
        type_cast_3732_update_start_ &-> (type_cast_3732_Update)
        type_cast_3732_update_completed_ <-& (type_cast_3732_Update)
        // flow-through
        type_cast_3732_update_start_ <-& (type_cast_3732_sample_completed_)
        SGT_i32_u1_3736_sample_start_ <-& (type_cast_3732_update_completed_)
        ;;[SGT_i32_u1_3736_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_3736_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_3736_sample_start_ &-> (SGT_i32_u1_3736_Sample)
        SGT_i32_u1_3736_sample_completed_ <-& (SGT_i32_u1_3736_Sample)
        SGT_i32_u1_3736_sample_completed_ &-> ($null)
        SGT_i32_u1_3736_update_start_ &-> (SGT_i32_u1_3736_Update)
        SGT_i32_u1_3736_update_completed_ <-& (SGT_i32_u1_3736_Update)
        // Target expression
        // (as target) iNsTr_91
        // iNsTr_91
        // implicit reference
        // 		iNsTr_92 := ( $mux iNsTr_91 ($bitcast ($uint<32>) _b00000000000000000000000000010000  )  iNsTr_85 ) 
        //  file prog.linked.opt.aa, line 1366
        // Source expression
        // ( $mux iNsTr_91 ($bitcast ($uint<32>) _b00000000000000000000000000010000  )  iNsTr_85 ) 
        $T[MUX_3743_sample_start_] 
        $T[MUX_3743_sample_completed_] 
        $T[MUX_3743_update_start_] 
        $T[MUX_3743_update_completed_] 
        // iNsTr_91
        $T[R_iNsTr_91_3739_sample_start_] 
        $T[R_iNsTr_91_3739_sample_completed_] 
        $T[R_iNsTr_91_3739_update_start_] 
        $T[R_iNsTr_91_3739_update_completed_] 
        // implicit reference
        R_iNsTr_91_3739_sample_start_ <-& (SGT_i32_u1_3736_update_completed_)
        R_iNsTr_91_3739_sample_completed_ <-& (R_iNsTr_91_3739_sample_start_)
        R_iNsTr_91_3739_update_start_ <-& (R_iNsTr_91_3739_sample_completed_)
        R_iNsTr_91_3739_update_completed_ <-& (R_iNsTr_91_3739_update_start_)
        // iNsTr_85
        $T[R_iNsTr_85_3742_sample_start_] 
        $T[R_iNsTr_85_3742_sample_completed_] 
        $T[R_iNsTr_85_3742_update_start_] 
        $T[R_iNsTr_85_3742_update_completed_] 
        // implicit reference
        R_iNsTr_85_3742_sample_start_ <-& ($entry)
        R_iNsTr_85_3742_sample_completed_ <-& (R_iNsTr_85_3742_sample_start_)
        R_iNsTr_85_3742_update_start_ <-& (R_iNsTr_85_3742_sample_completed_)
        R_iNsTr_85_3742_update_completed_ <-& (R_iNsTr_85_3742_update_start_)
        MUX_3743_sample_start_ <-& (R_iNsTr_91_3739_update_completed_)
        MUX_3743_sample_start_ <-& (R_iNsTr_85_3742_update_completed_)
        ;;[MUX_3743_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_3743_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_3743_sample_start_ &-> (MUX_3743_start)
        MUX_3743_sample_completed_ <-& (MUX_3743_start)
        MUX_3743_update_start_ &-> (MUX_3743_complete)
        MUX_3743_update_completed_ <-& (MUX_3743_complete)
        MUX_3743_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_92
        // iNsTr_92
        // implicit reference
        // 		iNsTr_93 := ( $mux iNsTr_90 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_89 ) 
        //  file prog.linked.opt.aa, line 1367
        // Source expression
        // ( $mux iNsTr_90 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_89 ) 
        $T[MUX_3750_sample_start_] 
        $T[MUX_3750_sample_completed_] 
        $T[MUX_3750_update_start_] 
        $T[MUX_3750_update_completed_] 
        // iNsTr_90
        $T[R_iNsTr_90_3746_sample_start_] 
        $T[R_iNsTr_90_3746_sample_completed_] 
        $T[R_iNsTr_90_3746_update_start_] 
        $T[R_iNsTr_90_3746_update_completed_] 
        // implicit reference
        R_iNsTr_90_3746_sample_start_ <-& (EQ_u32_u1_3728_update_completed_)
        R_iNsTr_90_3746_sample_completed_ <-& (R_iNsTr_90_3746_sample_start_)
        R_iNsTr_90_3746_update_start_ <-& (R_iNsTr_90_3746_sample_completed_)
        R_iNsTr_90_3746_update_completed_ <-& (R_iNsTr_90_3746_update_start_)
        // iNsTr_89
        $T[R_iNsTr_89_3749_sample_start_] 
        $T[R_iNsTr_89_3749_sample_completed_] 
        $T[R_iNsTr_89_3749_update_start_] 
        $T[R_iNsTr_89_3749_update_completed_] 
        // implicit reference
        R_iNsTr_89_3749_sample_start_ <-& (ADD_u32_u32_3722_update_completed_)
        R_iNsTr_89_3749_sample_completed_ <-& (R_iNsTr_89_3749_sample_start_)
        R_iNsTr_89_3749_update_start_ <-& (R_iNsTr_89_3749_sample_completed_)
        R_iNsTr_89_3749_update_completed_ <-& (R_iNsTr_89_3749_update_start_)
        MUX_3750_sample_start_ <-& (R_iNsTr_90_3746_update_completed_)
        MUX_3750_sample_start_ <-& (R_iNsTr_89_3749_update_completed_)
        ;;[MUX_3750_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_3750_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_3750_sample_start_ &-> (MUX_3750_start)
        MUX_3750_sample_completed_ <-& (MUX_3750_start)
        MUX_3750_update_start_ &-> (MUX_3750_complete)
        MUX_3750_update_completed_ <-& (MUX_3750_complete)
        MUX_3750_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_93
        // iNsTr_93
        // implicit reference
        // 		iNsTr_94 := @(QRSbuff[qpk_countx_x1])
        //  file prog.linked.opt.aa, line 1368
        // Source expression
        // @(QRSbuff[qpk_countx_x1])
        $T[addr_of_3755_sample_start_] 
        $T[addr_of_3755_sample_completed_] 
        $T[addr_of_3755_update_start_] 
        $T[addr_of_3755_update_completed_] 
        $T[array_obj_ref_3754_root_address_calculated] 
        $T[array_obj_ref_3754_offset_calculated] 
        $T[array_obj_ref_3754_index_resized_0] 
        $T[array_obj_ref_3754_index_scaled_0] 
        // qpk_countx_x1
        $T[R_qpk_countx_x1_3753_sample_start_] 
        $T[R_qpk_countx_x1_3753_sample_completed_] 
        $T[R_qpk_countx_x1_3753_update_start_] 
        $T[R_qpk_countx_x1_3753_update_completed_] 
        // implicit reference
        R_qpk_countx_x1_3753_sample_start_ <-& ($entry)
        R_qpk_countx_x1_3753_sample_completed_ <-& (R_qpk_countx_x1_3753_sample_start_)
        R_qpk_countx_x1_3753_update_start_ <-& (R_qpk_countx_x1_3753_sample_completed_)
        R_qpk_countx_x1_3753_update_completed_ <-& (R_qpk_countx_x1_3753_update_start_)
        ;;[array_obj_ref_3754_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        R_qpk_countx_x1_3753_update_completed_ &-> (array_obj_ref_3754_index_resize_0)
        array_obj_ref_3754_index_resized_0 <-& (array_obj_ref_3754_index_resize_0)
        ;;[array_obj_ref_3754_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3754_index_resized_0 &-> (array_obj_ref_3754_index_scale_0)
        array_obj_ref_3754_index_scaled_0 <-& (array_obj_ref_3754_index_scale_0)
        ;;[array_obj_ref_3754_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3754_index_scaled_0 &-> (array_obj_ref_3754_final_index_sum_regn)
        array_obj_ref_3754_offset_calculated <-& (array_obj_ref_3754_final_index_sum_regn)
        $T[array_obj_ref_3754_base_plus_offset_sample_start] 
        $T[array_obj_ref_3754_base_plus_offset_sample_complete] 
        $T[array_obj_ref_3754_base_plus_offset_update_start] 
        $T[array_obj_ref_3754_base_plus_offset_update_complete] 
        ;;[array_obj_ref_3754_base_plus_offset_sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[array_obj_ref_3754_base_plus_offset_update] 
        {
          $T [cr] $T [ca]
        }
        array_obj_ref_3754_base_plus_offset_sample_start &-> (array_obj_ref_3754_base_plus_offset_sample)
        array_obj_ref_3754_base_plus_offset_update_start &-> (array_obj_ref_3754_base_plus_offset_update)
        array_obj_ref_3754_base_plus_offset_sample_complete <-& (array_obj_ref_3754_base_plus_offset_sample)
        array_obj_ref_3754_base_plus_offset_update_complete <-& (array_obj_ref_3754_base_plus_offset_update)
        array_obj_ref_3754_offset_calculated &-> (array_obj_ref_3754_base_plus_offset_sample_start)
        array_obj_ref_3754_root_address_calculated <-& (array_obj_ref_3754_base_plus_offset_update_complete)
        ;;[addr_of_3755_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_3755_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_3755_sample_start_ <-& (array_obj_ref_3754_root_address_calculated)
        addr_of_3755_sample_start_ &-> (addr_of_3755_request)
        addr_of_3755_sample_completed_ <-& (addr_of_3755_request)
        addr_of_3755_update_start_ &-> (addr_of_3755_complete)
        addr_of_3755_update_completed_ <-& (addr_of_3755_complete)
        // Target expression
        // (as target) iNsTr_94
        // iNsTr_94
        // implicit reference
        // 		->(iNsTr_94) := initMaxx_x1
        //  file prog.linked.opt.aa, line 1369
        // Source expression
        // initMaxx_x1
        $T[R_initMaxx_x1_3759_sample_start_] 
        $T[R_initMaxx_x1_3759_sample_completed_] 
        $T[R_initMaxx_x1_3759_update_start_] 
        $T[R_initMaxx_x1_3759_update_completed_] 
        // implicit reference
        R_initMaxx_x1_3759_sample_start_ <-& ($entry)
        R_initMaxx_x1_3759_sample_completed_ <-& (R_initMaxx_x1_3759_sample_start_)
        R_initMaxx_x1_3759_update_start_ <-& (R_initMaxx_x1_3759_sample_completed_)
        R_initMaxx_x1_3759_update_completed_ <-& (R_initMaxx_x1_3759_update_start_)
        // Target expression
        // ->(iNsTr_94)
        $T[ptr_deref_3758_sample_start_] 
        $T[ptr_deref_3758_sample_completed_] 
        $T[ptr_deref_3758_update_start_] 
        $T[ptr_deref_3758_update_completed_] 
        $T[ptr_deref_3758_base_address_calculated] 
        // iNsTr_94
        $T[R_iNsTr_94_3757_sample_start_] 
        $T[R_iNsTr_94_3757_sample_completed_] 
        $T[R_iNsTr_94_3757_update_start_] 
        $T[R_iNsTr_94_3757_update_completed_] 
        // implicit reference
        R_iNsTr_94_3757_sample_start_ <-& (addr_of_3755_update_completed_)
        R_iNsTr_94_3757_sample_completed_ <-& (R_iNsTr_94_3757_sample_start_)
        R_iNsTr_94_3757_update_start_ <-& (R_iNsTr_94_3757_sample_completed_)
        R_iNsTr_94_3757_update_completed_ <-& (R_iNsTr_94_3757_update_start_)
        $T[ptr_deref_3758_word_address_calculated] 
        $T[ptr_deref_3758_root_address_calculated] 
        $T[ptr_deref_3758_base_address_resized] 
        ;;[ptr_deref_3758_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_3758_base_address_calculated &-> (ptr_deref_3758_base_addr_resize)
        ptr_deref_3758_base_address_resized <-& (ptr_deref_3758_base_addr_resize)
        ;;[ptr_deref_3758_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_3758_base_address_resized &-> (ptr_deref_3758_base_plus_offset)
        ptr_deref_3758_root_address_calculated <-& (ptr_deref_3758_base_plus_offset)
        ;;[ptr_deref_3758_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_3758_root_address_calculated &-> (ptr_deref_3758_word_addrgen)
        ptr_deref_3758_word_address_calculated <-& (ptr_deref_3758_word_addrgen)
        ;;[ptr_deref_3758_Sample] 
        {
          ;;[ptr_deref_3758_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_3758_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_3758_sample_start_ <-& (ptr_deref_3758_word_address_calculated)
        ptr_deref_3758_sample_start_ &-> (ptr_deref_3758_Sample)
        ptr_deref_3758_sample_completed_ <-& (ptr_deref_3758_Sample)
        ptr_deref_3758_sample_completed_ &-> ($null)
        ptr_deref_3758_update_start_ &-> (ptr_deref_3758_Update)
        ptr_deref_3758_update_completed_ <-& (ptr_deref_3758_Update)
        ptr_deref_3758_base_address_calculated <-& (R_iNsTr_94_3757_update_completed_)
        ptr_deref_3758_sample_start_ <-& (ptr_deref_3758_base_address_calculated)
        ptr_deref_3758_sample_start_ <-& (R_initMaxx_x1_3759_update_completed_)
        // 		iNsTr_96 := ( $mux iNsTr_90 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initMaxx_x1 ) 
        //  file prog.linked.opt.aa, line 1370
        // Source expression
        // ( $mux iNsTr_90 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initMaxx_x1 ) 
        $T[MUX_3766_sample_start_] 
        $T[MUX_3766_sample_completed_] 
        $T[MUX_3766_update_start_] 
        $T[MUX_3766_update_completed_] 
        // iNsTr_90
        $T[R_iNsTr_90_3762_sample_start_] 
        $T[R_iNsTr_90_3762_sample_completed_] 
        $T[R_iNsTr_90_3762_update_start_] 
        $T[R_iNsTr_90_3762_update_completed_] 
        // implicit reference
        R_iNsTr_90_3762_sample_start_ <-& (EQ_u32_u1_3728_update_completed_)
        R_iNsTr_90_3762_sample_completed_ <-& (R_iNsTr_90_3762_sample_start_)
        R_iNsTr_90_3762_update_start_ <-& (R_iNsTr_90_3762_sample_completed_)
        R_iNsTr_90_3762_update_completed_ <-& (R_iNsTr_90_3762_update_start_)
        // initMaxx_x1
        $T[R_initMaxx_x1_3765_sample_start_] 
        $T[R_initMaxx_x1_3765_sample_completed_] 
        $T[R_initMaxx_x1_3765_update_start_] 
        $T[R_initMaxx_x1_3765_update_completed_] 
        // implicit reference
        R_initMaxx_x1_3765_sample_start_ <-& ($entry)
        R_initMaxx_x1_3765_sample_completed_ <-& (R_initMaxx_x1_3765_sample_start_)
        R_initMaxx_x1_3765_update_start_ <-& (R_initMaxx_x1_3765_sample_completed_)
        R_initMaxx_x1_3765_update_completed_ <-& (R_initMaxx_x1_3765_update_start_)
        MUX_3766_sample_start_ <-& (R_iNsTr_90_3762_update_completed_)
        MUX_3766_sample_start_ <-& (R_initMaxx_x1_3765_update_completed_)
        ;;[MUX_3766_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_3766_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_3766_sample_start_ &-> (MUX_3766_start)
        MUX_3766_sample_completed_ <-& (MUX_3766_start)
        MUX_3766_update_start_ &-> (MUX_3766_complete)
        MUX_3766_update_completed_ <-& (MUX_3766_complete)
        MUX_3766_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_96
        // iNsTr_96
        // implicit reference
        // 		iNsTr_97 := ($cast ($uint<32>) iNsTr_90 )
        //  file prog.linked.opt.aa, line 1371
        // Source expression
        // ($cast ($uint<32>) iNsTr_90 )
        $T[type_cast_3770_sample_start_] 
        $T[type_cast_3770_sample_completed_] 
        $T[type_cast_3770_update_start_] 
        $T[type_cast_3770_update_completed_] 
        // iNsTr_90
        $T[R_iNsTr_90_3769_sample_start_] 
        $T[R_iNsTr_90_3769_sample_completed_] 
        $T[R_iNsTr_90_3769_update_start_] 
        $T[R_iNsTr_90_3769_update_completed_] 
        // implicit reference
        R_iNsTr_90_3769_sample_start_ <-& (EQ_u32_u1_3728_update_completed_)
        R_iNsTr_90_3769_sample_completed_ <-& (R_iNsTr_90_3769_sample_start_)
        R_iNsTr_90_3769_update_start_ <-& (R_iNsTr_90_3769_sample_completed_)
        R_iNsTr_90_3769_update_completed_ <-& (R_iNsTr_90_3769_update_start_)
        type_cast_3770_sample_start_ <-& (R_iNsTr_90_3769_update_completed_)
        ;;[type_cast_3770_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3770_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3770_sample_start_ &-> (type_cast_3770_Sample)
        type_cast_3770_sample_completed_ <-& (type_cast_3770_Sample)
        type_cast_3770_sample_completed_ &-> ($null)
        type_cast_3770_update_start_ &-> (type_cast_3770_Update)
        type_cast_3770_update_completed_ <-& (type_cast_3770_Update)
        // Target expression
        // (as target) iNsTr_97
        // iNsTr_97
        // implicit reference
        // 		iNsTr_98 := (iNsTr_97 + qpk_countx_x1)
        //  file prog.linked.opt.aa, line 1372
        // Source expression
        // (iNsTr_97 + qpk_countx_x1)
        $T[ADD_u32_u32_3775_sample_start_] 
        $T[ADD_u32_u32_3775_sample_completed_] 
        $T[ADD_u32_u32_3775_update_start_] 
        $T[ADD_u32_u32_3775_update_completed_] 
        // iNsTr_97
        $T[R_iNsTr_97_3773_sample_start_] 
        $T[R_iNsTr_97_3773_sample_completed_] 
        $T[R_iNsTr_97_3773_update_start_] 
        $T[R_iNsTr_97_3773_update_completed_] 
        // implicit reference
        R_iNsTr_97_3773_sample_start_ <-& (type_cast_3770_update_completed_)
        R_iNsTr_97_3773_sample_completed_ <-& (R_iNsTr_97_3773_sample_start_)
        R_iNsTr_97_3773_update_start_ <-& (R_iNsTr_97_3773_sample_completed_)
        R_iNsTr_97_3773_update_completed_ <-& (R_iNsTr_97_3773_update_start_)
        // qpk_countx_x1
        $T[R_qpk_countx_x1_3774_sample_start_] 
        $T[R_qpk_countx_x1_3774_sample_completed_] 
        $T[R_qpk_countx_x1_3774_update_start_] 
        $T[R_qpk_countx_x1_3774_update_completed_] 
        // implicit reference
        R_qpk_countx_x1_3774_sample_start_ <-& ($entry)
        R_qpk_countx_x1_3774_sample_completed_ <-& (R_qpk_countx_x1_3774_sample_start_)
        R_qpk_countx_x1_3774_update_start_ <-& (R_qpk_countx_x1_3774_sample_completed_)
        R_qpk_countx_x1_3774_update_completed_ <-& (R_qpk_countx_x1_3774_update_start_)
        ADD_u32_u32_3775_sample_start_ <-& (R_iNsTr_97_3773_update_completed_)
        ADD_u32_u32_3775_sample_start_ <-& (R_qpk_countx_x1_3774_update_completed_)
        ;;[ADD_u32_u32_3775_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_3775_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_3775_sample_start_ &-> (ADD_u32_u32_3775_Sample)
        ADD_u32_u32_3775_sample_completed_ <-& (ADD_u32_u32_3775_Sample)
        ADD_u32_u32_3775_sample_completed_ &-> ($null)
        ADD_u32_u32_3775_update_start_ &-> (ADD_u32_u32_3775_Update)
        ADD_u32_u32_3775_update_completed_ <-& (ADD_u32_u32_3775_Update)
        // Target expression
        // (as target) iNsTr_98
        // iNsTr_98
        // implicit reference
        // 		iNsTr_99 := (iNsTr_98 == ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
        //  file prog.linked.opt.aa, line 1373
        // Source expression
        // (iNsTr_98 == ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
        $T[EQ_u32_u1_3781_sample_start_] 
        $T[EQ_u32_u1_3781_sample_completed_] 
        $T[EQ_u32_u1_3781_update_start_] 
        $T[EQ_u32_u1_3781_update_completed_] 
        // iNsTr_98
        $T[R_iNsTr_98_3778_sample_start_] 
        $T[R_iNsTr_98_3778_sample_completed_] 
        $T[R_iNsTr_98_3778_update_start_] 
        $T[R_iNsTr_98_3778_update_completed_] 
        // implicit reference
        R_iNsTr_98_3778_sample_start_ <-& (ADD_u32_u32_3775_update_completed_)
        R_iNsTr_98_3778_sample_completed_ <-& (R_iNsTr_98_3778_sample_start_)
        R_iNsTr_98_3778_update_start_ <-& (R_iNsTr_98_3778_sample_completed_)
        R_iNsTr_98_3778_update_completed_ <-& (R_iNsTr_98_3778_update_start_)
        EQ_u32_u1_3781_sample_start_ <-& (R_iNsTr_98_3778_update_completed_)
        ;;[EQ_u32_u1_3781_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_3781_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_3781_sample_start_ &-> (EQ_u32_u1_3781_Sample)
        EQ_u32_u1_3781_sample_completed_ <-& (EQ_u32_u1_3781_Sample)
        EQ_u32_u1_3781_sample_completed_ &-> ($null)
        EQ_u32_u1_3781_update_start_ &-> (EQ_u32_u1_3781_Update)
        EQ_u32_u1_3781_update_completed_ <-& (EQ_u32_u1_3781_Update)
        // Target expression
        // (as target) iNsTr_99
        // iNsTr_99
        // implicit reference
        // 		iNsTr_100 := (iNsTr_90 & iNsTr_99)
        //  file prog.linked.opt.aa, line 1374
        // Source expression
        // (iNsTr_90 & iNsTr_99)
        $T[AND_u1_u1_3786_sample_start_] 
        $T[AND_u1_u1_3786_sample_completed_] 
        $T[AND_u1_u1_3786_update_start_] 
        $T[AND_u1_u1_3786_update_completed_] 
        // iNsTr_90
        $T[R_iNsTr_90_3784_sample_start_] 
        $T[R_iNsTr_90_3784_sample_completed_] 
        $T[R_iNsTr_90_3784_update_start_] 
        $T[R_iNsTr_90_3784_update_completed_] 
        // implicit reference
        R_iNsTr_90_3784_sample_start_ <-& (EQ_u32_u1_3728_update_completed_)
        R_iNsTr_90_3784_sample_completed_ <-& (R_iNsTr_90_3784_sample_start_)
        R_iNsTr_90_3784_update_start_ <-& (R_iNsTr_90_3784_sample_completed_)
        R_iNsTr_90_3784_update_completed_ <-& (R_iNsTr_90_3784_update_start_)
        // iNsTr_99
        $T[R_iNsTr_99_3785_sample_start_] 
        $T[R_iNsTr_99_3785_sample_completed_] 
        $T[R_iNsTr_99_3785_update_start_] 
        $T[R_iNsTr_99_3785_update_completed_] 
        // implicit reference
        R_iNsTr_99_3785_sample_start_ <-& (EQ_u32_u1_3781_update_completed_)
        R_iNsTr_99_3785_sample_completed_ <-& (R_iNsTr_99_3785_sample_start_)
        R_iNsTr_99_3785_update_start_ <-& (R_iNsTr_99_3785_sample_completed_)
        R_iNsTr_99_3785_update_completed_ <-& (R_iNsTr_99_3785_update_start_)
        AND_u1_u1_3786_sample_start_ <-& (R_iNsTr_90_3784_update_completed_)
        AND_u1_u1_3786_sample_start_ <-& (R_iNsTr_99_3785_update_completed_)
        ;;[AND_u1_u1_3786_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_3786_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_3786_sample_start_ &-> (AND_u1_u1_3786_Sample)
        AND_u1_u1_3786_sample_completed_ <-& (AND_u1_u1_3786_Sample)
        AND_u1_u1_3786_sample_completed_ &-> ($null)
        AND_u1_u1_3786_update_start_ &-> (AND_u1_u1_3786_Update)
        AND_u1_u1_3786_update_completed_ <-& (AND_u1_u1_3786_Update)
        // Target expression
        // (as target) iNsTr_100
        // iNsTr_100
        // implicit reference
        // 		iNsTr_101 := ($cast ($uint<8>) iNsTr_100 )
        //  file prog.linked.opt.aa, line 1375
        // Source expression
        // ($cast ($uint<8>) iNsTr_100 )
        $T[type_cast_3790_sample_start_] 
        $T[type_cast_3790_sample_completed_] 
        $T[type_cast_3790_update_start_] 
        $T[type_cast_3790_update_completed_] 
        // iNsTr_100
        $T[R_iNsTr_100_3789_sample_start_] 
        $T[R_iNsTr_100_3789_sample_completed_] 
        $T[R_iNsTr_100_3789_update_start_] 
        $T[R_iNsTr_100_3789_update_completed_] 
        // implicit reference
        R_iNsTr_100_3789_sample_start_ <-& (AND_u1_u1_3786_update_completed_)
        R_iNsTr_100_3789_sample_completed_ <-& (R_iNsTr_100_3789_sample_start_)
        R_iNsTr_100_3789_update_start_ <-& (R_iNsTr_100_3789_sample_completed_)
        R_iNsTr_100_3789_update_completed_ <-& (R_iNsTr_100_3789_update_start_)
        type_cast_3790_sample_start_ <-& (R_iNsTr_100_3789_update_completed_)
        ;;[type_cast_3790_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3790_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3790_sample_start_ &-> (type_cast_3790_Sample)
        type_cast_3790_sample_completed_ <-& (type_cast_3790_Sample)
        type_cast_3790_sample_completed_ &-> ($null)
        type_cast_3790_update_start_ &-> (type_cast_3790_Update)
        type_cast_3790_update_completed_ <-& (type_cast_3790_Update)
        // Target expression
        // (as target) iNsTr_101
        // iNsTr_101
        // implicit reference
        // 		iNsTr_102 := (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) iNsTr_96 ))
        //  file prog.linked.opt.aa, line 1376
        // Source expression
        // (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) iNsTr_96 ))
        $T[SGT_i32_u1_3797_sample_start_] 
        $T[SGT_i32_u1_3797_sample_completed_] 
        $T[SGT_i32_u1_3797_update_start_] 
        $T[SGT_i32_u1_3797_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_68 )
        $T[type_cast_3794_sample_start_] 
        $T[type_cast_3794_sample_completed_] 
        $T[type_cast_3794_update_start_] 
        $T[type_cast_3794_update_completed_] 
        // iNsTr_68
        $T[R_iNsTr_68_3793_sample_start_] 
        $T[R_iNsTr_68_3793_sample_completed_] 
        $T[R_iNsTr_68_3793_update_start_] 
        $T[R_iNsTr_68_3793_update_completed_] 
        // implicit reference
        R_iNsTr_68_3793_sample_start_ <-& ($entry)
        R_iNsTr_68_3793_sample_completed_ <-& (R_iNsTr_68_3793_sample_start_)
        R_iNsTr_68_3793_update_start_ <-& (R_iNsTr_68_3793_sample_completed_)
        R_iNsTr_68_3793_update_completed_ <-& (R_iNsTr_68_3793_update_start_)
        type_cast_3794_sample_start_ <-& (R_iNsTr_68_3793_update_completed_)
        ;;[type_cast_3794_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3794_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3794_sample_start_ &-> (type_cast_3794_Sample)
        type_cast_3794_sample_completed_ <-& (type_cast_3794_Sample)
        type_cast_3794_sample_completed_ &-> ($null)
        type_cast_3794_update_start_ &-> (type_cast_3794_Update)
        type_cast_3794_update_completed_ <-& (type_cast_3794_Update)
        // flow-through
        type_cast_3794_update_start_ <-& (type_cast_3794_sample_completed_)
        // ($bitcast ($int<32>) iNsTr_96 )
        $T[type_cast_3796_sample_start_] 
        $T[type_cast_3796_sample_completed_] 
        $T[type_cast_3796_update_start_] 
        $T[type_cast_3796_update_completed_] 
        // iNsTr_96
        $T[R_iNsTr_96_3795_sample_start_] 
        $T[R_iNsTr_96_3795_sample_completed_] 
        $T[R_iNsTr_96_3795_update_start_] 
        $T[R_iNsTr_96_3795_update_completed_] 
        // implicit reference
        R_iNsTr_96_3795_sample_start_ <-& (MUX_3766_update_completed_)
        R_iNsTr_96_3795_sample_completed_ <-& (R_iNsTr_96_3795_sample_start_)
        R_iNsTr_96_3795_update_start_ <-& (R_iNsTr_96_3795_sample_completed_)
        R_iNsTr_96_3795_update_completed_ <-& (R_iNsTr_96_3795_update_start_)
        type_cast_3796_sample_start_ <-& (R_iNsTr_96_3795_update_completed_)
        ;;[type_cast_3796_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3796_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3796_sample_start_ &-> (type_cast_3796_Sample)
        type_cast_3796_sample_completed_ <-& (type_cast_3796_Sample)
        type_cast_3796_sample_completed_ &-> ($null)
        type_cast_3796_update_start_ &-> (type_cast_3796_Update)
        type_cast_3796_update_completed_ <-& (type_cast_3796_Update)
        // flow-through
        type_cast_3796_update_start_ <-& (type_cast_3796_sample_completed_)
        SGT_i32_u1_3797_sample_start_ <-& (type_cast_3794_update_completed_)
        SGT_i32_u1_3797_sample_start_ <-& (type_cast_3796_update_completed_)
        ;;[SGT_i32_u1_3797_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_3797_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_3797_sample_start_ &-> (SGT_i32_u1_3797_Sample)
        SGT_i32_u1_3797_sample_completed_ <-& (SGT_i32_u1_3797_Sample)
        SGT_i32_u1_3797_sample_completed_ &-> ($null)
        SGT_i32_u1_3797_update_start_ &-> (SGT_i32_u1_3797_Update)
        SGT_i32_u1_3797_update_completed_ <-& (SGT_i32_u1_3797_Update)
        // Target expression
        // (as target) iNsTr_102
        // iNsTr_102
        // implicit reference
        // 		iNsTr_103 := ( $mux iNsTr_102 iNsTr_68  iNsTr_96 ) 
        //  file prog.linked.opt.aa, line 1377
        // Source expression
        // ( $mux iNsTr_102 iNsTr_68  iNsTr_96 ) 
        $T[MUX_3803_sample_start_] 
        $T[MUX_3803_sample_completed_] 
        $T[MUX_3803_update_start_] 
        $T[MUX_3803_update_completed_] 
        // iNsTr_102
        $T[R_iNsTr_102_3800_sample_start_] 
        $T[R_iNsTr_102_3800_sample_completed_] 
        $T[R_iNsTr_102_3800_update_start_] 
        $T[R_iNsTr_102_3800_update_completed_] 
        // implicit reference
        R_iNsTr_102_3800_sample_start_ <-& (SGT_i32_u1_3797_update_completed_)
        R_iNsTr_102_3800_sample_completed_ <-& (R_iNsTr_102_3800_sample_start_)
        R_iNsTr_102_3800_update_start_ <-& (R_iNsTr_102_3800_sample_completed_)
        R_iNsTr_102_3800_update_completed_ <-& (R_iNsTr_102_3800_update_start_)
        // iNsTr_68
        $T[R_iNsTr_68_3801_sample_start_] 
        $T[R_iNsTr_68_3801_sample_completed_] 
        $T[R_iNsTr_68_3801_update_start_] 
        $T[R_iNsTr_68_3801_update_completed_] 
        // implicit reference
        R_iNsTr_68_3801_sample_start_ <-& ($entry)
        R_iNsTr_68_3801_sample_completed_ <-& (R_iNsTr_68_3801_sample_start_)
        R_iNsTr_68_3801_update_start_ <-& (R_iNsTr_68_3801_sample_completed_)
        R_iNsTr_68_3801_update_completed_ <-& (R_iNsTr_68_3801_update_start_)
        // iNsTr_96
        $T[R_iNsTr_96_3802_sample_start_] 
        $T[R_iNsTr_96_3802_sample_completed_] 
        $T[R_iNsTr_96_3802_update_start_] 
        $T[R_iNsTr_96_3802_update_completed_] 
        // implicit reference
        R_iNsTr_96_3802_sample_start_ <-& (MUX_3766_update_completed_)
        R_iNsTr_96_3802_sample_completed_ <-& (R_iNsTr_96_3802_sample_start_)
        R_iNsTr_96_3802_update_start_ <-& (R_iNsTr_96_3802_sample_completed_)
        R_iNsTr_96_3802_update_completed_ <-& (R_iNsTr_96_3802_update_start_)
        MUX_3803_sample_start_ <-& (R_iNsTr_102_3800_update_completed_)
        MUX_3803_sample_start_ <-& (R_iNsTr_68_3801_update_completed_)
        MUX_3803_sample_start_ <-& (R_iNsTr_96_3802_update_completed_)
        ;;[MUX_3803_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_3803_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_3803_sample_start_ &-> (MUX_3803_start)
        MUX_3803_sample_completed_ <-& (MUX_3803_start)
        MUX_3803_update_start_ &-> (MUX_3803_complete)
        MUX_3803_update_completed_ <-& (MUX_3803_complete)
        MUX_3803_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_103
        // iNsTr_103
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3723_to_assign_stmt_3804__entry__ |-> (assign_stmt_3723_to_assign_stmt_3804)
      assign_stmt_3723_to_assign_stmt_3804__exit__ <-| (assign_stmt_3723_to_assign_stmt_3804)
      // if-statement  
      //  file prog.linked.opt.aa, line 1378
      ;;[if_stmt_3805_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3805__entry__ |-> (if_stmt_3805_dead_link)
      if_stmt_3805__exit__ <-| (if_stmt_3805_dead_link)
      ;;[if_stmt_3805_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3805__entry__ |-> (if_stmt_3805_eval_test)
      $P [R_iNsTr_100_3806_place]
      R_iNsTr_100_3806_place <-| (if_stmt_3805_eval_test)
      ;;[if_stmt_3805_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3805_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_100_3806_place |-> (if_stmt_3805_if_link if_stmt_3805_else_link)
      $P [bb_13_bb_14]
      bb_13_bb_14 <-| (if_stmt_3805_if_link)
      $P [bb_13_bb_29]
      bb_13_bb_29 <-| (if_stmt_3805_else_link)
      ::[assign_stmt_3817] 
      {
        // load-store dependencies..
      }
      assign_stmt_3817__entry__ |-> (assign_stmt_3817)
      assign_stmt_3817__exit__ <-| (assign_stmt_3817)
      ::[call_stmt_3820] 
      {
        // 		$call meanCalc (iNsTr_106 ) (iNsTr_107 ) 
        //  file prog.linked.opt.aa, line 1386
        $T[call_stmt_3820_sample_start_] 
        $T[call_stmt_3820_sample_completed_] 
        $T[call_stmt_3820_update_start_] 
        $T[call_stmt_3820_update_completed_] 
        // Call input argument 0
        ;;[call_stmt_3820_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_3820_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_3820_sample_start_ &-> (call_stmt_3820_Sample)
        call_stmt_3820_sample_completed_ <-& (call_stmt_3820_Sample)
        call_stmt_3820_sample_completed_ &-> ($null)
        call_stmt_3820_update_start_ &-> (call_stmt_3820_Update)
        call_stmt_3820_update_completed_ <-& (call_stmt_3820_Update)
        // Call output argument 0
        // (as target) iNsTr_107
        // iNsTr_107
        // implicit reference
        // barrier: 		$call meanCalc (iNsTr_106 ) (iNsTr_107 ) 
        // load-store dependencies..
      }
      call_stmt_3820__entry__ |-> (call_stmt_3820)
      call_stmt_3820__exit__ <-| (call_stmt_3820)
      ::[assign_stmt_3825_to_assign_stmt_3838] 
      {
        // 		iNsTr_108 := ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_107 ) )
        //  file prog.linked.opt.aa, line 1387
        // Source expression
        // ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_107 ) )
        $T[type_cast_3824_sample_start_] 
        $T[type_cast_3824_sample_completed_] 
        $T[type_cast_3824_update_start_] 
        $T[type_cast_3824_update_completed_] 
        // ($bitcast ($int<64>) iNsTr_107 )
        $T[type_cast_3823_sample_start_] 
        $T[type_cast_3823_sample_completed_] 
        $T[type_cast_3823_update_start_] 
        $T[type_cast_3823_update_completed_] 
        // iNsTr_107
        $T[R_iNsTr_107_3822_sample_start_] 
        $T[R_iNsTr_107_3822_sample_completed_] 
        $T[R_iNsTr_107_3822_update_start_] 
        $T[R_iNsTr_107_3822_update_completed_] 
        // implicit reference
        R_iNsTr_107_3822_sample_start_ <-& ($entry)
        R_iNsTr_107_3822_sample_completed_ <-& (R_iNsTr_107_3822_sample_start_)
        R_iNsTr_107_3822_update_start_ <-& (R_iNsTr_107_3822_sample_completed_)
        R_iNsTr_107_3822_update_completed_ <-& (R_iNsTr_107_3822_update_start_)
        type_cast_3823_sample_start_ <-& (R_iNsTr_107_3822_update_completed_)
        ;;[type_cast_3823_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3823_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3823_sample_start_ &-> (type_cast_3823_Sample)
        type_cast_3823_sample_completed_ <-& (type_cast_3823_Sample)
        type_cast_3823_sample_completed_ &-> ($null)
        type_cast_3823_update_start_ &-> (type_cast_3823_Update)
        type_cast_3823_update_completed_ <-& (type_cast_3823_Update)
        // flow-through
        type_cast_3823_update_start_ <-& (type_cast_3823_sample_completed_)
        type_cast_3824_sample_start_ <-& (type_cast_3823_update_completed_)
        ;;[type_cast_3824_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3824_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3824_sample_start_ &-> (type_cast_3824_Sample)
        type_cast_3824_sample_completed_ <-& (type_cast_3824_Sample)
        type_cast_3824_sample_completed_ &-> ($null)
        type_cast_3824_update_start_ &-> (type_cast_3824_Update)
        type_cast_3824_update_completed_ <-& (type_cast_3824_Update)
        // Target expression
        // (as target) iNsTr_108
        // iNsTr_108
        // implicit reference
        // 		iNsTr_109 := threshold
        //  file prog.linked.opt.aa, line 1388
        // Source expression
        // threshold
        $T[LOAD_threshold_3827_sample_start_] 
        $T[LOAD_threshold_3827_sample_completed_] 
        $T[LOAD_threshold_3827_update_start_] 
        $T[LOAD_threshold_3827_update_completed_] 
        $T[LOAD_threshold_3827_sample_start_] 
        $T[LOAD_threshold_3827_sample_completed_] 
        $T[LOAD_threshold_3827_update_start_] 
        $T[LOAD_threshold_3827_update_completed_] 
        $T[LOAD_threshold_3827_word_address_calculated] 
        $T[LOAD_threshold_3827_root_address_calculated] 
        LOAD_threshold_3827_word_address_calculated <-& (LOAD_threshold_3827_root_address_calculated)
        ;;[LOAD_threshold_3827_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_threshold_3827_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_threshold_3827_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_threshold_3827_sample_start_ <-& (LOAD_threshold_3827_word_address_calculated)
        LOAD_threshold_3827_sample_start_ &-> (LOAD_threshold_3827_Sample)
        LOAD_threshold_3827_sample_completed_ <-& (LOAD_threshold_3827_Sample)
        LOAD_threshold_3827_sample_completed_ &-> ($null)
        LOAD_threshold_3827_update_start_ &-> (LOAD_threshold_3827_Update)
        LOAD_threshold_3827_update_completed_ <-& (LOAD_threshold_3827_Update)
        // Target expression
        // (as target) iNsTr_109
        // iNsTr_109
        // implicit reference
        // 		iNsTr_110 := (iNsTr_109 * iNsTr_108)
        //  file prog.linked.opt.aa, line 1389
        // Source expression
        // (iNsTr_109 * iNsTr_108)
        $T[MUL_f64_f64_3832_sample_start_] 
        $T[MUL_f64_f64_3832_sample_completed_] 
        $T[MUL_f64_f64_3832_update_start_] 
        $T[MUL_f64_f64_3832_update_completed_] 
        // iNsTr_109
        $T[R_iNsTr_109_3830_sample_start_] 
        $T[R_iNsTr_109_3830_sample_completed_] 
        $T[R_iNsTr_109_3830_update_start_] 
        $T[R_iNsTr_109_3830_update_completed_] 
        // implicit reference
        R_iNsTr_109_3830_sample_start_ <-& (LOAD_threshold_3827_update_completed_)
        R_iNsTr_109_3830_sample_completed_ <-& (R_iNsTr_109_3830_sample_start_)
        R_iNsTr_109_3830_update_start_ <-& (R_iNsTr_109_3830_sample_completed_)
        R_iNsTr_109_3830_update_completed_ <-& (R_iNsTr_109_3830_update_start_)
        // iNsTr_108
        $T[R_iNsTr_108_3831_sample_start_] 
        $T[R_iNsTr_108_3831_sample_completed_] 
        $T[R_iNsTr_108_3831_update_start_] 
        $T[R_iNsTr_108_3831_update_completed_] 
        // implicit reference
        R_iNsTr_108_3831_sample_start_ <-& (type_cast_3824_update_completed_)
        R_iNsTr_108_3831_sample_completed_ <-& (R_iNsTr_108_3831_sample_start_)
        R_iNsTr_108_3831_update_start_ <-& (R_iNsTr_108_3831_sample_completed_)
        R_iNsTr_108_3831_update_completed_ <-& (R_iNsTr_108_3831_update_start_)
        MUL_f64_f64_3832_sample_start_ <-& (R_iNsTr_109_3830_update_completed_)
        MUL_f64_f64_3832_sample_start_ <-& (R_iNsTr_108_3831_update_completed_)
        ;;[MUL_f64_f64_3832_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_3832_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_3832_sample_start_ &-> (MUL_f64_f64_3832_Sample)
        MUL_f64_f64_3832_sample_completed_ <-& (MUL_f64_f64_3832_Sample)
        MUL_f64_f64_3832_sample_completed_ &-> ($null)
        MUL_f64_f64_3832_update_start_ &-> (MUL_f64_f64_3832_Update)
        MUL_f64_f64_3832_update_completed_ <-& (MUL_f64_f64_3832_Update)
        // Target expression
        // (as target) iNsTr_110
        // iNsTr_110
        // implicit reference
        // 		iNsTr_111 := ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_110 ) )
        //  file prog.linked.opt.aa, line 1390
        // Source expression
        // ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_110 ) )
        $T[type_cast_3837_sample_start_] 
        $T[type_cast_3837_sample_completed_] 
        $T[type_cast_3837_update_start_] 
        $T[type_cast_3837_update_completed_] 
        // ($cast ($int<32>) iNsTr_110 )
        $T[type_cast_3836_sample_start_] 
        $T[type_cast_3836_sample_completed_] 
        $T[type_cast_3836_update_start_] 
        $T[type_cast_3836_update_completed_] 
        // iNsTr_110
        $T[R_iNsTr_110_3835_sample_start_] 
        $T[R_iNsTr_110_3835_sample_completed_] 
        $T[R_iNsTr_110_3835_update_start_] 
        $T[R_iNsTr_110_3835_update_completed_] 
        // implicit reference
        R_iNsTr_110_3835_sample_start_ <-& (MUL_f64_f64_3832_update_completed_)
        R_iNsTr_110_3835_sample_completed_ <-& (R_iNsTr_110_3835_sample_start_)
        R_iNsTr_110_3835_update_start_ <-& (R_iNsTr_110_3835_sample_completed_)
        R_iNsTr_110_3835_update_completed_ <-& (R_iNsTr_110_3835_update_start_)
        type_cast_3836_sample_start_ <-& (R_iNsTr_110_3835_update_completed_)
        ;;[type_cast_3836_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3836_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3836_sample_start_ &-> (type_cast_3836_Sample)
        type_cast_3836_sample_completed_ <-& (type_cast_3836_Sample)
        type_cast_3836_sample_completed_ &-> ($null)
        type_cast_3836_update_start_ &-> (type_cast_3836_Update)
        type_cast_3836_update_completed_ <-& (type_cast_3836_Update)
        type_cast_3837_sample_start_ <-& (type_cast_3836_update_completed_)
        ;;[type_cast_3837_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3837_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3837_sample_start_ &-> (type_cast_3837_Sample)
        type_cast_3837_sample_completed_ <-& (type_cast_3837_Sample)
        type_cast_3837_sample_completed_ &-> ($null)
        type_cast_3837_update_start_ &-> (type_cast_3837_Update)
        type_cast_3837_update_completed_ <-& (type_cast_3837_Update)
        // Target expression
        // (as target) iNsTr_111
        // iNsTr_111
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3825_to_assign_stmt_3838__entry__ |-> (assign_stmt_3825_to_assign_stmt_3838)
      assign_stmt_3825_to_assign_stmt_3838__exit__ <-| (assign_stmt_3825_to_assign_stmt_3838)
      ::[assign_stmt_3887_to_assign_stmt_3960] 
      {
        // 		iNsTr_116 := @(DDbuff[ptrx_x02x_xi])
        //  file prog.linked.opt.aa, line 1400
        // Source expression
        // @(DDbuff[ptrx_x02x_xi])
        $T[addr_of_3886_sample_start_] 
        $T[addr_of_3886_sample_completed_] 
        $T[addr_of_3886_update_start_] 
        $T[addr_of_3886_update_completed_] 
        $T[array_obj_ref_3885_root_address_calculated] 
        $T[array_obj_ref_3885_offset_calculated] 
        $T[array_obj_ref_3885_index_resized_0] 
        $T[array_obj_ref_3885_index_scaled_0] 
        // ptrx_x02x_xi
        $T[R_ptrx_x02x_xi_3884_sample_start_] 
        $T[R_ptrx_x02x_xi_3884_sample_completed_] 
        $T[R_ptrx_x02x_xi_3884_update_start_] 
        $T[R_ptrx_x02x_xi_3884_update_completed_] 
        // implicit reference
        R_ptrx_x02x_xi_3884_sample_start_ <-& ($entry)
        R_ptrx_x02x_xi_3884_sample_completed_ <-& (R_ptrx_x02x_xi_3884_sample_start_)
        R_ptrx_x02x_xi_3884_update_start_ <-& (R_ptrx_x02x_xi_3884_sample_completed_)
        R_ptrx_x02x_xi_3884_update_completed_ <-& (R_ptrx_x02x_xi_3884_update_start_)
        ;;[array_obj_ref_3885_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        R_ptrx_x02x_xi_3884_update_completed_ &-> (array_obj_ref_3885_index_resize_0)
        array_obj_ref_3885_index_resized_0 <-& (array_obj_ref_3885_index_resize_0)
        ;;[array_obj_ref_3885_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3885_index_resized_0 &-> (array_obj_ref_3885_index_scale_0)
        array_obj_ref_3885_index_scaled_0 <-& (array_obj_ref_3885_index_scale_0)
        ;;[array_obj_ref_3885_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3885_index_scaled_0 &-> (array_obj_ref_3885_final_index_sum_regn)
        array_obj_ref_3885_offset_calculated <-& (array_obj_ref_3885_final_index_sum_regn)
        ;;[array_obj_ref_3885_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3885_offset_calculated &-> (array_obj_ref_3885_base_plus_offset)
        array_obj_ref_3885_root_address_calculated <-& (array_obj_ref_3885_base_plus_offset)
        ;;[addr_of_3886_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_3886_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_3886_sample_start_ <-& (array_obj_ref_3885_root_address_calculated)
        addr_of_3886_sample_start_ &-> (addr_of_3886_request)
        addr_of_3886_sample_completed_ <-& (addr_of_3886_request)
        addr_of_3886_update_start_ &-> (addr_of_3886_complete)
        addr_of_3886_update_completed_ <-& (addr_of_3886_complete)
        // Target expression
        // (as target) iNsTr_116
        // iNsTr_116
        // implicit reference
        // 		iNsTr_117 := ->(iNsTr_116)
        //  file prog.linked.opt.aa, line 1401
        // Source expression
        // ->(iNsTr_116)
        $T[ptr_deref_3890_sample_start_] 
        $T[ptr_deref_3890_sample_completed_] 
        $T[ptr_deref_3890_update_start_] 
        $T[ptr_deref_3890_update_completed_] 
        $T[ptr_deref_3890_base_address_calculated] 
        // iNsTr_116
        $T[R_iNsTr_116_3889_sample_start_] 
        $T[R_iNsTr_116_3889_sample_completed_] 
        $T[R_iNsTr_116_3889_update_start_] 
        $T[R_iNsTr_116_3889_update_completed_] 
        // implicit reference
        R_iNsTr_116_3889_sample_start_ <-& (addr_of_3886_update_completed_)
        R_iNsTr_116_3889_sample_completed_ <-& (R_iNsTr_116_3889_sample_start_)
        R_iNsTr_116_3889_update_start_ <-& (R_iNsTr_116_3889_sample_completed_)
        R_iNsTr_116_3889_update_completed_ <-& (R_iNsTr_116_3889_update_start_)
        $T[ptr_deref_3890_word_address_calculated] 
        $T[ptr_deref_3890_root_address_calculated] 
        $T[ptr_deref_3890_base_address_resized] 
        ;;[ptr_deref_3890_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_3890_base_address_calculated &-> (ptr_deref_3890_base_addr_resize)
        ptr_deref_3890_base_address_resized <-& (ptr_deref_3890_base_addr_resize)
        ;;[ptr_deref_3890_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_3890_base_address_resized &-> (ptr_deref_3890_base_plus_offset)
        ptr_deref_3890_root_address_calculated <-& (ptr_deref_3890_base_plus_offset)
        ;;[ptr_deref_3890_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_3890_root_address_calculated &-> (ptr_deref_3890_word_addrgen)
        ptr_deref_3890_word_address_calculated <-& (ptr_deref_3890_word_addrgen)
        ;;[ptr_deref_3890_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_3890_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_3890_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_3890_sample_start_ <-& (ptr_deref_3890_word_address_calculated)
        ptr_deref_3890_sample_start_ &-> (ptr_deref_3890_Sample)
        ptr_deref_3890_sample_completed_ <-& (ptr_deref_3890_Sample)
        ptr_deref_3890_sample_completed_ &-> ($null)
        ptr_deref_3890_update_start_ &-> (ptr_deref_3890_Update)
        ptr_deref_3890_update_completed_ <-& (ptr_deref_3890_Update)
        ptr_deref_3890_base_address_calculated <-& (R_iNsTr_116_3889_update_completed_)
        ptr_deref_3890_sample_start_ <-& (ptr_deref_3890_base_address_calculated)
        // Target expression
        // (as target) iNsTr_117
        // iNsTr_117
        // implicit reference
        // 		iNsTr_118 := (($bitcast ($int<32>) iNsTr_117 ) > ($bitcast ($int<32>) maxx_x07x_xi ))
        //  file prog.linked.opt.aa, line 1402
        // Source expression
        // (($bitcast ($int<32>) iNsTr_117 ) > ($bitcast ($int<32>) maxx_x07x_xi ))
        $T[SGT_i32_u1_3897_sample_start_] 
        $T[SGT_i32_u1_3897_sample_completed_] 
        $T[SGT_i32_u1_3897_update_start_] 
        $T[SGT_i32_u1_3897_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_117 )
        $T[type_cast_3894_sample_start_] 
        $T[type_cast_3894_sample_completed_] 
        $T[type_cast_3894_update_start_] 
        $T[type_cast_3894_update_completed_] 
        // iNsTr_117
        $T[R_iNsTr_117_3893_sample_start_] 
        $T[R_iNsTr_117_3893_sample_completed_] 
        $T[R_iNsTr_117_3893_update_start_] 
        $T[R_iNsTr_117_3893_update_completed_] 
        // implicit reference
        R_iNsTr_117_3893_sample_start_ <-& (ptr_deref_3890_update_completed_)
        R_iNsTr_117_3893_sample_completed_ <-& (R_iNsTr_117_3893_sample_start_)
        R_iNsTr_117_3893_update_start_ <-& (R_iNsTr_117_3893_sample_completed_)
        R_iNsTr_117_3893_update_completed_ <-& (R_iNsTr_117_3893_update_start_)
        type_cast_3894_sample_start_ <-& (R_iNsTr_117_3893_update_completed_)
        ;;[type_cast_3894_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3894_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3894_sample_start_ &-> (type_cast_3894_Sample)
        type_cast_3894_sample_completed_ <-& (type_cast_3894_Sample)
        type_cast_3894_sample_completed_ &-> ($null)
        type_cast_3894_update_start_ &-> (type_cast_3894_Update)
        type_cast_3894_update_completed_ <-& (type_cast_3894_Update)
        // flow-through
        type_cast_3894_update_start_ <-& (type_cast_3894_sample_completed_)
        // ($bitcast ($int<32>) maxx_x07x_xi )
        $T[type_cast_3896_sample_start_] 
        $T[type_cast_3896_sample_completed_] 
        $T[type_cast_3896_update_start_] 
        $T[type_cast_3896_update_completed_] 
        // maxx_x07x_xi
        $T[R_maxx_x07x_xi_3895_sample_start_] 
        $T[R_maxx_x07x_xi_3895_sample_completed_] 
        $T[R_maxx_x07x_xi_3895_update_start_] 
        $T[R_maxx_x07x_xi_3895_update_completed_] 
        // implicit reference
        R_maxx_x07x_xi_3895_sample_start_ <-& ($entry)
        R_maxx_x07x_xi_3895_sample_completed_ <-& (R_maxx_x07x_xi_3895_sample_start_)
        R_maxx_x07x_xi_3895_update_start_ <-& (R_maxx_x07x_xi_3895_sample_completed_)
        R_maxx_x07x_xi_3895_update_completed_ <-& (R_maxx_x07x_xi_3895_update_start_)
        type_cast_3896_sample_start_ <-& (R_maxx_x07x_xi_3895_update_completed_)
        ;;[type_cast_3896_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3896_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3896_sample_start_ &-> (type_cast_3896_Sample)
        type_cast_3896_sample_completed_ <-& (type_cast_3896_Sample)
        type_cast_3896_sample_completed_ &-> ($null)
        type_cast_3896_update_start_ &-> (type_cast_3896_Update)
        type_cast_3896_update_completed_ <-& (type_cast_3896_Update)
        // flow-through
        type_cast_3896_update_start_ <-& (type_cast_3896_sample_completed_)
        SGT_i32_u1_3897_sample_start_ <-& (type_cast_3894_update_completed_)
        SGT_i32_u1_3897_sample_start_ <-& (type_cast_3896_update_completed_)
        ;;[SGT_i32_u1_3897_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_3897_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_3897_sample_start_ &-> (SGT_i32_u1_3897_Sample)
        SGT_i32_u1_3897_sample_completed_ <-& (SGT_i32_u1_3897_Sample)
        SGT_i32_u1_3897_sample_completed_ &-> ($null)
        SGT_i32_u1_3897_update_start_ &-> (SGT_i32_u1_3897_Update)
        SGT_i32_u1_3897_update_completed_ <-& (SGT_i32_u1_3897_Update)
        // Target expression
        // (as target) iNsTr_118
        // iNsTr_118
        // implicit reference
        // 		iNsTr_119 := (($bitcast ($int<32>) iNsTr_117 ) < ($bitcast ($int<32>) minx_x06x_xi ))
        //  file prog.linked.opt.aa, line 1403
        // Source expression
        // (($bitcast ($int<32>) iNsTr_117 ) < ($bitcast ($int<32>) minx_x06x_xi ))
        $T[SLT_i32_u1_3904_sample_start_] 
        $T[SLT_i32_u1_3904_sample_completed_] 
        $T[SLT_i32_u1_3904_update_start_] 
        $T[SLT_i32_u1_3904_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_117 )
        $T[type_cast_3901_sample_start_] 
        $T[type_cast_3901_sample_completed_] 
        $T[type_cast_3901_update_start_] 
        $T[type_cast_3901_update_completed_] 
        // iNsTr_117
        $T[R_iNsTr_117_3900_sample_start_] 
        $T[R_iNsTr_117_3900_sample_completed_] 
        $T[R_iNsTr_117_3900_update_start_] 
        $T[R_iNsTr_117_3900_update_completed_] 
        // implicit reference
        R_iNsTr_117_3900_sample_start_ <-& (ptr_deref_3890_update_completed_)
        R_iNsTr_117_3900_sample_completed_ <-& (R_iNsTr_117_3900_sample_start_)
        R_iNsTr_117_3900_update_start_ <-& (R_iNsTr_117_3900_sample_completed_)
        R_iNsTr_117_3900_update_completed_ <-& (R_iNsTr_117_3900_update_start_)
        type_cast_3901_sample_start_ <-& (R_iNsTr_117_3900_update_completed_)
        ;;[type_cast_3901_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3901_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3901_sample_start_ &-> (type_cast_3901_Sample)
        type_cast_3901_sample_completed_ <-& (type_cast_3901_Sample)
        type_cast_3901_sample_completed_ &-> ($null)
        type_cast_3901_update_start_ &-> (type_cast_3901_Update)
        type_cast_3901_update_completed_ <-& (type_cast_3901_Update)
        // flow-through
        type_cast_3901_update_start_ <-& (type_cast_3901_sample_completed_)
        // ($bitcast ($int<32>) minx_x06x_xi )
        $T[type_cast_3903_sample_start_] 
        $T[type_cast_3903_sample_completed_] 
        $T[type_cast_3903_update_start_] 
        $T[type_cast_3903_update_completed_] 
        // minx_x06x_xi
        $T[R_minx_x06x_xi_3902_sample_start_] 
        $T[R_minx_x06x_xi_3902_sample_completed_] 
        $T[R_minx_x06x_xi_3902_update_start_] 
        $T[R_minx_x06x_xi_3902_update_completed_] 
        // implicit reference
        R_minx_x06x_xi_3902_sample_start_ <-& ($entry)
        R_minx_x06x_xi_3902_sample_completed_ <-& (R_minx_x06x_xi_3902_sample_start_)
        R_minx_x06x_xi_3902_update_start_ <-& (R_minx_x06x_xi_3902_sample_completed_)
        R_minx_x06x_xi_3902_update_completed_ <-& (R_minx_x06x_xi_3902_update_start_)
        type_cast_3903_sample_start_ <-& (R_minx_x06x_xi_3902_update_completed_)
        ;;[type_cast_3903_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3903_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3903_sample_start_ &-> (type_cast_3903_Sample)
        type_cast_3903_sample_completed_ <-& (type_cast_3903_Sample)
        type_cast_3903_sample_completed_ &-> ($null)
        type_cast_3903_update_start_ &-> (type_cast_3903_Update)
        type_cast_3903_update_completed_ <-& (type_cast_3903_Update)
        // flow-through
        type_cast_3903_update_start_ <-& (type_cast_3903_sample_completed_)
        SLT_i32_u1_3904_sample_start_ <-& (type_cast_3901_update_completed_)
        SLT_i32_u1_3904_sample_start_ <-& (type_cast_3903_update_completed_)
        ;;[SLT_i32_u1_3904_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_i32_u1_3904_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_i32_u1_3904_sample_start_ &-> (SLT_i32_u1_3904_Sample)
        SLT_i32_u1_3904_sample_completed_ <-& (SLT_i32_u1_3904_Sample)
        SLT_i32_u1_3904_sample_completed_ &-> ($null)
        SLT_i32_u1_3904_update_start_ &-> (SLT_i32_u1_3904_Update)
        SLT_i32_u1_3904_update_completed_ <-& (SLT_i32_u1_3904_Update)
        // Target expression
        // (as target) iNsTr_119
        // iNsTr_119
        // implicit reference
        // 		iNsTr_120 := ( $mux iNsTr_118 iNsTr_115  maxtx_x05x_xi ) 
        //  file prog.linked.opt.aa, line 1404
        // Source expression
        // ( $mux iNsTr_118 iNsTr_115  maxtx_x05x_xi ) 
        $T[MUX_3910_sample_start_] 
        $T[MUX_3910_sample_completed_] 
        $T[MUX_3910_update_start_] 
        $T[MUX_3910_update_completed_] 
        // iNsTr_118
        $T[R_iNsTr_118_3907_sample_start_] 
        $T[R_iNsTr_118_3907_sample_completed_] 
        $T[R_iNsTr_118_3907_update_start_] 
        $T[R_iNsTr_118_3907_update_completed_] 
        // implicit reference
        R_iNsTr_118_3907_sample_start_ <-& (SGT_i32_u1_3897_update_completed_)
        R_iNsTr_118_3907_sample_completed_ <-& (R_iNsTr_118_3907_sample_start_)
        R_iNsTr_118_3907_update_start_ <-& (R_iNsTr_118_3907_sample_completed_)
        R_iNsTr_118_3907_update_completed_ <-& (R_iNsTr_118_3907_update_start_)
        // iNsTr_115
        $T[R_iNsTr_115_3908_sample_start_] 
        $T[R_iNsTr_115_3908_sample_completed_] 
        $T[R_iNsTr_115_3908_update_start_] 
        $T[R_iNsTr_115_3908_update_completed_] 
        // implicit reference
        R_iNsTr_115_3908_sample_start_ <-& ($entry)
        R_iNsTr_115_3908_sample_completed_ <-& (R_iNsTr_115_3908_sample_start_)
        R_iNsTr_115_3908_update_start_ <-& (R_iNsTr_115_3908_sample_completed_)
        R_iNsTr_115_3908_update_completed_ <-& (R_iNsTr_115_3908_update_start_)
        // maxtx_x05x_xi
        $T[R_maxtx_x05x_xi_3909_sample_start_] 
        $T[R_maxtx_x05x_xi_3909_sample_completed_] 
        $T[R_maxtx_x05x_xi_3909_update_start_] 
        $T[R_maxtx_x05x_xi_3909_update_completed_] 
        // implicit reference
        R_maxtx_x05x_xi_3909_sample_start_ <-& ($entry)
        R_maxtx_x05x_xi_3909_sample_completed_ <-& (R_maxtx_x05x_xi_3909_sample_start_)
        R_maxtx_x05x_xi_3909_update_start_ <-& (R_maxtx_x05x_xi_3909_sample_completed_)
        R_maxtx_x05x_xi_3909_update_completed_ <-& (R_maxtx_x05x_xi_3909_update_start_)
        MUX_3910_sample_start_ <-& (R_iNsTr_118_3907_update_completed_)
        MUX_3910_sample_start_ <-& (R_iNsTr_115_3908_update_completed_)
        MUX_3910_sample_start_ <-& (R_maxtx_x05x_xi_3909_update_completed_)
        ;;[MUX_3910_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_3910_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_3910_sample_start_ &-> (MUX_3910_start)
        MUX_3910_sample_completed_ <-& (MUX_3910_start)
        MUX_3910_update_start_ &-> (MUX_3910_complete)
        MUX_3910_update_completed_ <-& (MUX_3910_complete)
        MUX_3910_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_120
        // iNsTr_120
        // implicit reference
        // 		iNsTr_121 := ( $mux iNsTr_118 iNsTr_117  maxx_x07x_xi ) 
        //  file prog.linked.opt.aa, line 1405
        // Source expression
        // ( $mux iNsTr_118 iNsTr_117  maxx_x07x_xi ) 
        $T[MUX_3916_sample_start_] 
        $T[MUX_3916_sample_completed_] 
        $T[MUX_3916_update_start_] 
        $T[MUX_3916_update_completed_] 
        // iNsTr_118
        $T[R_iNsTr_118_3913_sample_start_] 
        $T[R_iNsTr_118_3913_sample_completed_] 
        $T[R_iNsTr_118_3913_update_start_] 
        $T[R_iNsTr_118_3913_update_completed_] 
        // implicit reference
        R_iNsTr_118_3913_sample_start_ <-& (SGT_i32_u1_3897_update_completed_)
        R_iNsTr_118_3913_sample_completed_ <-& (R_iNsTr_118_3913_sample_start_)
        R_iNsTr_118_3913_update_start_ <-& (R_iNsTr_118_3913_sample_completed_)
        R_iNsTr_118_3913_update_completed_ <-& (R_iNsTr_118_3913_update_start_)
        // iNsTr_117
        $T[R_iNsTr_117_3914_sample_start_] 
        $T[R_iNsTr_117_3914_sample_completed_] 
        $T[R_iNsTr_117_3914_update_start_] 
        $T[R_iNsTr_117_3914_update_completed_] 
        // implicit reference
        R_iNsTr_117_3914_sample_start_ <-& (ptr_deref_3890_update_completed_)
        R_iNsTr_117_3914_sample_completed_ <-& (R_iNsTr_117_3914_sample_start_)
        R_iNsTr_117_3914_update_start_ <-& (R_iNsTr_117_3914_sample_completed_)
        R_iNsTr_117_3914_update_completed_ <-& (R_iNsTr_117_3914_update_start_)
        // maxx_x07x_xi
        $T[R_maxx_x07x_xi_3915_sample_start_] 
        $T[R_maxx_x07x_xi_3915_sample_completed_] 
        $T[R_maxx_x07x_xi_3915_update_start_] 
        $T[R_maxx_x07x_xi_3915_update_completed_] 
        // implicit reference
        R_maxx_x07x_xi_3915_sample_start_ <-& ($entry)
        R_maxx_x07x_xi_3915_sample_completed_ <-& (R_maxx_x07x_xi_3915_sample_start_)
        R_maxx_x07x_xi_3915_update_start_ <-& (R_maxx_x07x_xi_3915_sample_completed_)
        R_maxx_x07x_xi_3915_update_completed_ <-& (R_maxx_x07x_xi_3915_update_start_)
        MUX_3916_sample_start_ <-& (R_iNsTr_118_3913_update_completed_)
        MUX_3916_sample_start_ <-& (R_iNsTr_117_3914_update_completed_)
        MUX_3916_sample_start_ <-& (R_maxx_x07x_xi_3915_update_completed_)
        ;;[MUX_3916_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_3916_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_3916_sample_start_ &-> (MUX_3916_start)
        MUX_3916_sample_completed_ <-& (MUX_3916_start)
        MUX_3916_update_start_ &-> (MUX_3916_complete)
        MUX_3916_update_completed_ <-& (MUX_3916_complete)
        MUX_3916_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_121
        // iNsTr_121
        // implicit reference
        // 		iNsTr_122 := ( $mux iNsTr_119 iNsTr_115  mintx_x04x_xi ) 
        //  file prog.linked.opt.aa, line 1406
        // Source expression
        // ( $mux iNsTr_119 iNsTr_115  mintx_x04x_xi ) 
        $T[MUX_3922_sample_start_] 
        $T[MUX_3922_sample_completed_] 
        $T[MUX_3922_update_start_] 
        $T[MUX_3922_update_completed_] 
        // iNsTr_119
        $T[R_iNsTr_119_3919_sample_start_] 
        $T[R_iNsTr_119_3919_sample_completed_] 
        $T[R_iNsTr_119_3919_update_start_] 
        $T[R_iNsTr_119_3919_update_completed_] 
        // implicit reference
        R_iNsTr_119_3919_sample_start_ <-& (SLT_i32_u1_3904_update_completed_)
        R_iNsTr_119_3919_sample_completed_ <-& (R_iNsTr_119_3919_sample_start_)
        R_iNsTr_119_3919_update_start_ <-& (R_iNsTr_119_3919_sample_completed_)
        R_iNsTr_119_3919_update_completed_ <-& (R_iNsTr_119_3919_update_start_)
        // iNsTr_115
        $T[R_iNsTr_115_3920_sample_start_] 
        $T[R_iNsTr_115_3920_sample_completed_] 
        $T[R_iNsTr_115_3920_update_start_] 
        $T[R_iNsTr_115_3920_update_completed_] 
        // implicit reference
        R_iNsTr_115_3920_sample_start_ <-& ($entry)
        R_iNsTr_115_3920_sample_completed_ <-& (R_iNsTr_115_3920_sample_start_)
        R_iNsTr_115_3920_update_start_ <-& (R_iNsTr_115_3920_sample_completed_)
        R_iNsTr_115_3920_update_completed_ <-& (R_iNsTr_115_3920_update_start_)
        // mintx_x04x_xi
        $T[R_mintx_x04x_xi_3921_sample_start_] 
        $T[R_mintx_x04x_xi_3921_sample_completed_] 
        $T[R_mintx_x04x_xi_3921_update_start_] 
        $T[R_mintx_x04x_xi_3921_update_completed_] 
        // implicit reference
        R_mintx_x04x_xi_3921_sample_start_ <-& ($entry)
        R_mintx_x04x_xi_3921_sample_completed_ <-& (R_mintx_x04x_xi_3921_sample_start_)
        R_mintx_x04x_xi_3921_update_start_ <-& (R_mintx_x04x_xi_3921_sample_completed_)
        R_mintx_x04x_xi_3921_update_completed_ <-& (R_mintx_x04x_xi_3921_update_start_)
        MUX_3922_sample_start_ <-& (R_iNsTr_119_3919_update_completed_)
        MUX_3922_sample_start_ <-& (R_iNsTr_115_3920_update_completed_)
        MUX_3922_sample_start_ <-& (R_mintx_x04x_xi_3921_update_completed_)
        ;;[MUX_3922_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_3922_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_3922_sample_start_ &-> (MUX_3922_start)
        MUX_3922_sample_completed_ <-& (MUX_3922_start)
        MUX_3922_update_start_ &-> (MUX_3922_complete)
        MUX_3922_update_completed_ <-& (MUX_3922_complete)
        MUX_3922_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_122
        // iNsTr_122
        // implicit reference
        // 		iNsTr_123 := ( $mux iNsTr_119 iNsTr_117  minx_x06x_xi ) 
        //  file prog.linked.opt.aa, line 1407
        // Source expression
        // ( $mux iNsTr_119 iNsTr_117  minx_x06x_xi ) 
        $T[MUX_3928_sample_start_] 
        $T[MUX_3928_sample_completed_] 
        $T[MUX_3928_update_start_] 
        $T[MUX_3928_update_completed_] 
        // iNsTr_119
        $T[R_iNsTr_119_3925_sample_start_] 
        $T[R_iNsTr_119_3925_sample_completed_] 
        $T[R_iNsTr_119_3925_update_start_] 
        $T[R_iNsTr_119_3925_update_completed_] 
        // implicit reference
        R_iNsTr_119_3925_sample_start_ <-& (SLT_i32_u1_3904_update_completed_)
        R_iNsTr_119_3925_sample_completed_ <-& (R_iNsTr_119_3925_sample_start_)
        R_iNsTr_119_3925_update_start_ <-& (R_iNsTr_119_3925_sample_completed_)
        R_iNsTr_119_3925_update_completed_ <-& (R_iNsTr_119_3925_update_start_)
        // iNsTr_117
        $T[R_iNsTr_117_3926_sample_start_] 
        $T[R_iNsTr_117_3926_sample_completed_] 
        $T[R_iNsTr_117_3926_update_start_] 
        $T[R_iNsTr_117_3926_update_completed_] 
        // implicit reference
        R_iNsTr_117_3926_sample_start_ <-& (ptr_deref_3890_update_completed_)
        R_iNsTr_117_3926_sample_completed_ <-& (R_iNsTr_117_3926_sample_start_)
        R_iNsTr_117_3926_update_start_ <-& (R_iNsTr_117_3926_sample_completed_)
        R_iNsTr_117_3926_update_completed_ <-& (R_iNsTr_117_3926_update_start_)
        // minx_x06x_xi
        $T[R_minx_x06x_xi_3927_sample_start_] 
        $T[R_minx_x06x_xi_3927_sample_completed_] 
        $T[R_minx_x06x_xi_3927_update_start_] 
        $T[R_minx_x06x_xi_3927_update_completed_] 
        // implicit reference
        R_minx_x06x_xi_3927_sample_start_ <-& ($entry)
        R_minx_x06x_xi_3927_sample_completed_ <-& (R_minx_x06x_xi_3927_sample_start_)
        R_minx_x06x_xi_3927_update_start_ <-& (R_minx_x06x_xi_3927_sample_completed_)
        R_minx_x06x_xi_3927_update_completed_ <-& (R_minx_x06x_xi_3927_update_start_)
        MUX_3928_sample_start_ <-& (R_iNsTr_119_3925_update_completed_)
        MUX_3928_sample_start_ <-& (R_iNsTr_117_3926_update_completed_)
        MUX_3928_sample_start_ <-& (R_minx_x06x_xi_3927_update_completed_)
        ;;[MUX_3928_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_3928_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_3928_sample_start_ &-> (MUX_3928_start)
        MUX_3928_sample_completed_ <-& (MUX_3928_start)
        MUX_3928_update_start_ &-> (MUX_3928_complete)
        MUX_3928_update_completed_ <-& (MUX_3928_complete)
        MUX_3928_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_123
        // iNsTr_123
        // implicit reference
        // 		iNsTr_124 := (ptrx_x02x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 1408
        // Source expression
        // (ptrx_x02x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_3934_sample_start_] 
        $T[ADD_u32_u32_3934_sample_completed_] 
        $T[ADD_u32_u32_3934_update_start_] 
        $T[ADD_u32_u32_3934_update_completed_] 
        // ptrx_x02x_xi
        $T[R_ptrx_x02x_xi_3931_sample_start_] 
        $T[R_ptrx_x02x_xi_3931_sample_completed_] 
        $T[R_ptrx_x02x_xi_3931_update_start_] 
        $T[R_ptrx_x02x_xi_3931_update_completed_] 
        // implicit reference
        R_ptrx_x02x_xi_3931_sample_start_ <-& ($entry)
        R_ptrx_x02x_xi_3931_sample_completed_ <-& (R_ptrx_x02x_xi_3931_sample_start_)
        R_ptrx_x02x_xi_3931_update_start_ <-& (R_ptrx_x02x_xi_3931_sample_completed_)
        R_ptrx_x02x_xi_3931_update_completed_ <-& (R_ptrx_x02x_xi_3931_update_start_)
        ADD_u32_u32_3934_sample_start_ <-& (R_ptrx_x02x_xi_3931_update_completed_)
        ;;[ADD_u32_u32_3934_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_3934_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_3934_sample_start_ &-> (ADD_u32_u32_3934_Sample)
        ADD_u32_u32_3934_sample_completed_ <-& (ADD_u32_u32_3934_Sample)
        ADD_u32_u32_3934_sample_completed_ &-> ($null)
        ADD_u32_u32_3934_update_start_ &-> (ADD_u32_u32_3934_Update)
        ADD_u32_u32_3934_update_completed_ <-& (ADD_u32_u32_3934_Update)
        // Target expression
        // (as target) iNsTr_124
        // iNsTr_124
        // implicit reference
        // 		iNsTr_125 := (iNsTr_115 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 1409
        // Source expression
        // (iNsTr_115 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_3940_sample_start_] 
        $T[ADD_u32_u32_3940_sample_completed_] 
        $T[ADD_u32_u32_3940_update_start_] 
        $T[ADD_u32_u32_3940_update_completed_] 
        // iNsTr_115
        $T[R_iNsTr_115_3937_sample_start_] 
        $T[R_iNsTr_115_3937_sample_completed_] 
        $T[R_iNsTr_115_3937_update_start_] 
        $T[R_iNsTr_115_3937_update_completed_] 
        // implicit reference
        R_iNsTr_115_3937_sample_start_ <-& ($entry)
        R_iNsTr_115_3937_sample_completed_ <-& (R_iNsTr_115_3937_sample_start_)
        R_iNsTr_115_3937_update_start_ <-& (R_iNsTr_115_3937_sample_completed_)
        R_iNsTr_115_3937_update_completed_ <-& (R_iNsTr_115_3937_update_start_)
        ADD_u32_u32_3940_sample_start_ <-& (R_iNsTr_115_3937_update_completed_)
        ;;[ADD_u32_u32_3940_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_3940_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_3940_sample_start_ &-> (ADD_u32_u32_3940_Sample)
        ADD_u32_u32_3940_sample_completed_ <-& (ADD_u32_u32_3940_Sample)
        ADD_u32_u32_3940_sample_completed_ &-> ($null)
        ADD_u32_u32_3940_update_start_ &-> (ADD_u32_u32_3940_Update)
        ADD_u32_u32_3940_update_completed_ <-& (ADD_u32_u32_3940_Update)
        // Target expression
        // (as target) iNsTr_125
        // iNsTr_125
        // implicit reference
        // 		iNsTr_126 := (iNsTr_124 == ($bitcast ($uint<32>) _b00000000000000000000000001011100  ))
        //  file prog.linked.opt.aa, line 1410
        // Source expression
        // (iNsTr_124 == ($bitcast ($uint<32>) _b00000000000000000000000001011100  ))
        $T[EQ_u32_u1_3946_sample_start_] 
        $T[EQ_u32_u1_3946_sample_completed_] 
        $T[EQ_u32_u1_3946_update_start_] 
        $T[EQ_u32_u1_3946_update_completed_] 
        // iNsTr_124
        $T[R_iNsTr_124_3943_sample_start_] 
        $T[R_iNsTr_124_3943_sample_completed_] 
        $T[R_iNsTr_124_3943_update_start_] 
        $T[R_iNsTr_124_3943_update_completed_] 
        // implicit reference
        R_iNsTr_124_3943_sample_start_ <-& (ADD_u32_u32_3934_update_completed_)
        R_iNsTr_124_3943_sample_completed_ <-& (R_iNsTr_124_3943_sample_start_)
        R_iNsTr_124_3943_update_start_ <-& (R_iNsTr_124_3943_sample_completed_)
        R_iNsTr_124_3943_update_completed_ <-& (R_iNsTr_124_3943_update_start_)
        EQ_u32_u1_3946_sample_start_ <-& (R_iNsTr_124_3943_update_completed_)
        ;;[EQ_u32_u1_3946_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_3946_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_3946_sample_start_ &-> (EQ_u32_u1_3946_Sample)
        EQ_u32_u1_3946_sample_completed_ <-& (EQ_u32_u1_3946_Sample)
        EQ_u32_u1_3946_sample_completed_ &-> ($null)
        EQ_u32_u1_3946_update_start_ &-> (EQ_u32_u1_3946_Update)
        EQ_u32_u1_3946_update_completed_ <-& (EQ_u32_u1_3946_Update)
        // Target expression
        // (as target) iNsTr_126
        // iNsTr_126
        // implicit reference
        // 		iNsTr_127 := ( $mux iNsTr_126 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_124 ) 
        //  file prog.linked.opt.aa, line 1411
        // Source expression
        // ( $mux iNsTr_126 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_124 ) 
        $T[MUX_3953_sample_start_] 
        $T[MUX_3953_sample_completed_] 
        $T[MUX_3953_update_start_] 
        $T[MUX_3953_update_completed_] 
        // iNsTr_126
        $T[R_iNsTr_126_3949_sample_start_] 
        $T[R_iNsTr_126_3949_sample_completed_] 
        $T[R_iNsTr_126_3949_update_start_] 
        $T[R_iNsTr_126_3949_update_completed_] 
        // implicit reference
        R_iNsTr_126_3949_sample_start_ <-& (EQ_u32_u1_3946_update_completed_)
        R_iNsTr_126_3949_sample_completed_ <-& (R_iNsTr_126_3949_sample_start_)
        R_iNsTr_126_3949_update_start_ <-& (R_iNsTr_126_3949_sample_completed_)
        R_iNsTr_126_3949_update_completed_ <-& (R_iNsTr_126_3949_update_start_)
        // iNsTr_124
        $T[R_iNsTr_124_3952_sample_start_] 
        $T[R_iNsTr_124_3952_sample_completed_] 
        $T[R_iNsTr_124_3952_update_start_] 
        $T[R_iNsTr_124_3952_update_completed_] 
        // implicit reference
        R_iNsTr_124_3952_sample_start_ <-& (ADD_u32_u32_3934_update_completed_)
        R_iNsTr_124_3952_sample_completed_ <-& (R_iNsTr_124_3952_sample_start_)
        R_iNsTr_124_3952_update_start_ <-& (R_iNsTr_124_3952_sample_completed_)
        R_iNsTr_124_3952_update_completed_ <-& (R_iNsTr_124_3952_update_start_)
        MUX_3953_sample_start_ <-& (R_iNsTr_126_3949_update_completed_)
        MUX_3953_sample_start_ <-& (R_iNsTr_124_3952_update_completed_)
        ;;[MUX_3953_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_3953_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_3953_sample_start_ &-> (MUX_3953_start)
        MUX_3953_sample_completed_ <-& (MUX_3953_start)
        MUX_3953_update_start_ &-> (MUX_3953_complete)
        MUX_3953_update_completed_ <-& (MUX_3953_complete)
        MUX_3953_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_127
        // iNsTr_127
        // implicit reference
        // 		exitcond4 := (iNsTr_125 == ($bitcast ($uint<32>) _b00000000000000000000000000101100  ))
        //  file prog.linked.opt.aa, line 1412
        // Source expression
        // (iNsTr_125 == ($bitcast ($uint<32>) _b00000000000000000000000000101100  ))
        $T[EQ_u32_u1_3959_sample_start_] 
        $T[EQ_u32_u1_3959_sample_completed_] 
        $T[EQ_u32_u1_3959_update_start_] 
        $T[EQ_u32_u1_3959_update_completed_] 
        // iNsTr_125
        $T[R_iNsTr_125_3956_sample_start_] 
        $T[R_iNsTr_125_3956_sample_completed_] 
        $T[R_iNsTr_125_3956_update_start_] 
        $T[R_iNsTr_125_3956_update_completed_] 
        // implicit reference
        R_iNsTr_125_3956_sample_start_ <-& (ADD_u32_u32_3940_update_completed_)
        R_iNsTr_125_3956_sample_completed_ <-& (R_iNsTr_125_3956_sample_start_)
        R_iNsTr_125_3956_update_start_ <-& (R_iNsTr_125_3956_sample_completed_)
        R_iNsTr_125_3956_update_completed_ <-& (R_iNsTr_125_3956_update_start_)
        EQ_u32_u1_3959_sample_start_ <-& (R_iNsTr_125_3956_update_completed_)
        ;;[EQ_u32_u1_3959_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_3959_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_3959_sample_start_ &-> (EQ_u32_u1_3959_Sample)
        EQ_u32_u1_3959_sample_completed_ <-& (EQ_u32_u1_3959_Sample)
        EQ_u32_u1_3959_sample_completed_ &-> ($null)
        EQ_u32_u1_3959_update_start_ &-> (EQ_u32_u1_3959_Update)
        EQ_u32_u1_3959_update_completed_ <-& (EQ_u32_u1_3959_Update)
        // Target expression
        // (as target) exitcond4
        // exitcond4
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3887_to_assign_stmt_3960__entry__ |-> (assign_stmt_3887_to_assign_stmt_3960)
      assign_stmt_3887_to_assign_stmt_3960__exit__ <-| (assign_stmt_3887_to_assign_stmt_3960)
      // if-statement  
      //  file prog.linked.opt.aa, line 1413
      ;;[if_stmt_3961_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3961__entry__ |-> (if_stmt_3961_dead_link)
      if_stmt_3961__exit__ <-| (if_stmt_3961_dead_link)
      ;;[if_stmt_3961_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3961__entry__ |-> (if_stmt_3961_eval_test)
      $P [R_exitcond4_3962_place]
      R_exitcond4_3962_place <-| (if_stmt_3961_eval_test)
      ;;[if_stmt_3961_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3961_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_exitcond4_3962_place |-> (if_stmt_3961_if_link if_stmt_3961_else_link)
      $P [bb_15_xx_x_crit_edgex_xi]
      bb_15_xx_x_crit_edgex_xi <-| (if_stmt_3961_if_link)
      $P [bb_15_bb_15]
      bb_15_bb_15 <-| (if_stmt_3961_else_link)
      ::[assign_stmt_3987_to_assign_stmt_4030] 
      {
        // 		maxDer := xx_xlcssa1
        //  file prog.linked.opt.aa, line 1424
        // Source expression
        // xx_xlcssa1
        $T[R_xx_xlcssa1_3986_sample_start_] 
        $T[R_xx_xlcssa1_3986_sample_completed_] 
        $T[R_xx_xlcssa1_3986_update_start_] 
        $T[R_xx_xlcssa1_3986_update_completed_] 
        // implicit reference
        R_xx_xlcssa1_3986_sample_start_ <-& ($entry)
        R_xx_xlcssa1_3986_sample_completed_ <-& (R_xx_xlcssa1_3986_sample_start_)
        R_xx_xlcssa1_3986_update_start_ <-& (R_xx_xlcssa1_3986_sample_completed_)
        R_xx_xlcssa1_3986_update_completed_ <-& (R_xx_xlcssa1_3986_update_start_)
        // Target expression
        // (as target) maxDer
        $T[STORE_maxDer_3985_sample_start_] 
        $T[STORE_maxDer_3985_sample_completed_] 
        $T[STORE_maxDer_3985_update_start_] 
        $T[STORE_maxDer_3985_update_completed_] 
        // maxDer
        $T[STORE_maxDer_3985_word_address_calculated] 
        $T[STORE_maxDer_3985_root_address_calculated] 
        STORE_maxDer_3985_word_address_calculated <-& (STORE_maxDer_3985_root_address_calculated)
        ;;[STORE_maxDer_3985_Sample] 
        {
          ;;[STORE_maxDer_3985_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_maxDer_3985_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_maxDer_3985_sample_start_ <-& (STORE_maxDer_3985_word_address_calculated)
        STORE_maxDer_3985_sample_start_ &-> (STORE_maxDer_3985_Sample)
        STORE_maxDer_3985_sample_completed_ <-& (STORE_maxDer_3985_Sample)
        STORE_maxDer_3985_sample_completed_ &-> ($null)
        STORE_maxDer_3985_update_start_ &-> (STORE_maxDer_3985_Update)
        STORE_maxDer_3985_update_completed_ <-& (STORE_maxDer_3985_Update)
        STORE_maxDer_3985_sample_start_ <-& (R_xx_xlcssa1_3986_update_completed_)
        // 		iNsTr_147 := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - xx_xlcssa3)
        //  file prog.linked.opt.aa, line 1425
        // Source expression
        // (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - xx_xlcssa3)
        $T[SUB_u32_u32_3992_sample_start_] 
        $T[SUB_u32_u32_3992_sample_completed_] 
        $T[SUB_u32_u32_3992_update_start_] 
        $T[SUB_u32_u32_3992_update_completed_] 
        // xx_xlcssa3
        $T[R_xx_xlcssa3_3991_sample_start_] 
        $T[R_xx_xlcssa3_3991_sample_completed_] 
        $T[R_xx_xlcssa3_3991_update_start_] 
        $T[R_xx_xlcssa3_3991_update_completed_] 
        // implicit reference
        R_xx_xlcssa3_3991_sample_start_ <-& ($entry)
        R_xx_xlcssa3_3991_sample_completed_ <-& (R_xx_xlcssa3_3991_sample_start_)
        R_xx_xlcssa3_3991_update_start_ <-& (R_xx_xlcssa3_3991_sample_completed_)
        R_xx_xlcssa3_3991_update_completed_ <-& (R_xx_xlcssa3_3991_update_start_)
        SUB_u32_u32_3992_sample_start_ <-& (R_xx_xlcssa3_3991_update_completed_)
        ;;[SUB_u32_u32_3992_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_3992_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_3992_sample_start_ &-> (SUB_u32_u32_3992_Sample)
        SUB_u32_u32_3992_sample_completed_ <-& (SUB_u32_u32_3992_Sample)
        SUB_u32_u32_3992_sample_completed_ &-> ($null)
        SUB_u32_u32_3992_update_start_ &-> (SUB_u32_u32_3992_Update)
        SUB_u32_u32_3992_update_completed_ <-& (SUB_u32_u32_3992_Update)
        // Target expression
        // (as target) iNsTr_147
        // iNsTr_147
        // implicit reference
        // 		iNsTr_148 := ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_147 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
        //  file prog.linked.opt.aa, line 1426
        // Source expression
        // ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_147 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
        $T[type_cast_4001_sample_start_] 
        $T[type_cast_4001_sample_completed_] 
        $T[type_cast_4001_update_start_] 
        $T[type_cast_4001_update_completed_] 
        // (($bitcast ($int<32>) iNsTr_147 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) ))
        $T[ASHR_i32_i32_4000_sample_start_] 
        $T[ASHR_i32_i32_4000_sample_completed_] 
        $T[ASHR_i32_i32_4000_update_start_] 
        $T[ASHR_i32_i32_4000_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_147 )
        $T[type_cast_3996_sample_start_] 
        $T[type_cast_3996_sample_completed_] 
        $T[type_cast_3996_update_start_] 
        $T[type_cast_3996_update_completed_] 
        // iNsTr_147
        $T[R_iNsTr_147_3995_sample_start_] 
        $T[R_iNsTr_147_3995_sample_completed_] 
        $T[R_iNsTr_147_3995_update_start_] 
        $T[R_iNsTr_147_3995_update_completed_] 
        // implicit reference
        R_iNsTr_147_3995_sample_start_ <-& (SUB_u32_u32_3992_update_completed_)
        R_iNsTr_147_3995_sample_completed_ <-& (R_iNsTr_147_3995_sample_start_)
        R_iNsTr_147_3995_update_start_ <-& (R_iNsTr_147_3995_sample_completed_)
        R_iNsTr_147_3995_update_completed_ <-& (R_iNsTr_147_3995_update_start_)
        type_cast_3996_sample_start_ <-& (R_iNsTr_147_3995_update_completed_)
        ;;[type_cast_3996_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3996_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3996_sample_start_ &-> (type_cast_3996_Sample)
        type_cast_3996_sample_completed_ <-& (type_cast_3996_Sample)
        type_cast_3996_sample_completed_ &-> ($null)
        type_cast_3996_update_start_ &-> (type_cast_3996_Update)
        type_cast_3996_update_completed_ <-& (type_cast_3996_Update)
        // flow-through
        type_cast_3996_update_start_ <-& (type_cast_3996_sample_completed_)
        ASHR_i32_i32_4000_sample_start_ <-& (type_cast_3996_update_completed_)
        ;;[ASHR_i32_i32_4000_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ASHR_i32_i32_4000_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ASHR_i32_i32_4000_sample_start_ &-> (ASHR_i32_i32_4000_Sample)
        ASHR_i32_i32_4000_sample_completed_ <-& (ASHR_i32_i32_4000_Sample)
        ASHR_i32_i32_4000_sample_completed_ &-> ($null)
        ASHR_i32_i32_4000_update_start_ &-> (ASHR_i32_i32_4000_Update)
        ASHR_i32_i32_4000_update_completed_ <-& (ASHR_i32_i32_4000_Update)
        // flow-through
        ASHR_i32_i32_4000_update_start_ <-& (ASHR_i32_i32_4000_sample_completed_)
        type_cast_4001_sample_start_ <-& (ASHR_i32_i32_4000_update_completed_)
        ;;[type_cast_4001_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4001_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4001_sample_start_ &-> (type_cast_4001_Sample)
        type_cast_4001_sample_completed_ <-& (type_cast_4001_Sample)
        type_cast_4001_sample_completed_ &-> ($null)
        type_cast_4001_update_start_ &-> (type_cast_4001_Update)
        type_cast_4001_update_completed_ <-& (type_cast_4001_Update)
        // Target expression
        // (as target) iNsTr_148
        // iNsTr_148
        // implicit reference
        // 		iNsTr_149 := (($bitcast ($int<32>) xx_xlcssa1 ) > ($bitcast ($int<32>) iNsTr_148 ))
        //  file prog.linked.opt.aa, line 1427
        // Source expression
        // (($bitcast ($int<32>) xx_xlcssa1 ) > ($bitcast ($int<32>) iNsTr_148 ))
        $T[SGT_i32_u1_4008_sample_start_] 
        $T[SGT_i32_u1_4008_sample_completed_] 
        $T[SGT_i32_u1_4008_update_start_] 
        $T[SGT_i32_u1_4008_update_completed_] 
        // ($bitcast ($int<32>) xx_xlcssa1 )
        $T[type_cast_4005_sample_start_] 
        $T[type_cast_4005_sample_completed_] 
        $T[type_cast_4005_update_start_] 
        $T[type_cast_4005_update_completed_] 
        // xx_xlcssa1
        $T[R_xx_xlcssa1_4004_sample_start_] 
        $T[R_xx_xlcssa1_4004_sample_completed_] 
        $T[R_xx_xlcssa1_4004_update_start_] 
        $T[R_xx_xlcssa1_4004_update_completed_] 
        // implicit reference
        R_xx_xlcssa1_4004_sample_start_ <-& ($entry)
        R_xx_xlcssa1_4004_sample_completed_ <-& (R_xx_xlcssa1_4004_sample_start_)
        R_xx_xlcssa1_4004_update_start_ <-& (R_xx_xlcssa1_4004_sample_completed_)
        R_xx_xlcssa1_4004_update_completed_ <-& (R_xx_xlcssa1_4004_update_start_)
        type_cast_4005_sample_start_ <-& (R_xx_xlcssa1_4004_update_completed_)
        ;;[type_cast_4005_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4005_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4005_sample_start_ &-> (type_cast_4005_Sample)
        type_cast_4005_sample_completed_ <-& (type_cast_4005_Sample)
        type_cast_4005_sample_completed_ &-> ($null)
        type_cast_4005_update_start_ &-> (type_cast_4005_Update)
        type_cast_4005_update_completed_ <-& (type_cast_4005_Update)
        // flow-through
        type_cast_4005_update_start_ <-& (type_cast_4005_sample_completed_)
        // ($bitcast ($int<32>) iNsTr_148 )
        $T[type_cast_4007_sample_start_] 
        $T[type_cast_4007_sample_completed_] 
        $T[type_cast_4007_update_start_] 
        $T[type_cast_4007_update_completed_] 
        // iNsTr_148
        $T[R_iNsTr_148_4006_sample_start_] 
        $T[R_iNsTr_148_4006_sample_completed_] 
        $T[R_iNsTr_148_4006_update_start_] 
        $T[R_iNsTr_148_4006_update_completed_] 
        // implicit reference
        R_iNsTr_148_4006_sample_start_ <-& (type_cast_4001_update_completed_)
        R_iNsTr_148_4006_sample_completed_ <-& (R_iNsTr_148_4006_sample_start_)
        R_iNsTr_148_4006_update_start_ <-& (R_iNsTr_148_4006_sample_completed_)
        R_iNsTr_148_4006_update_completed_ <-& (R_iNsTr_148_4006_update_start_)
        type_cast_4007_sample_start_ <-& (R_iNsTr_148_4006_update_completed_)
        ;;[type_cast_4007_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4007_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4007_sample_start_ &-> (type_cast_4007_Sample)
        type_cast_4007_sample_completed_ <-& (type_cast_4007_Sample)
        type_cast_4007_sample_completed_ &-> ($null)
        type_cast_4007_update_start_ &-> (type_cast_4007_Update)
        type_cast_4007_update_completed_ <-& (type_cast_4007_Update)
        // flow-through
        type_cast_4007_update_start_ <-& (type_cast_4007_sample_completed_)
        SGT_i32_u1_4008_sample_start_ <-& (type_cast_4005_update_completed_)
        SGT_i32_u1_4008_sample_start_ <-& (type_cast_4007_update_completed_)
        ;;[SGT_i32_u1_4008_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_4008_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_4008_sample_start_ &-> (SGT_i32_u1_4008_Sample)
        SGT_i32_u1_4008_sample_completed_ <-& (SGT_i32_u1_4008_Sample)
        SGT_i32_u1_4008_sample_completed_ &-> ($null)
        SGT_i32_u1_4008_update_start_ &-> (SGT_i32_u1_4008_Update)
        SGT_i32_u1_4008_update_completed_ <-& (SGT_i32_u1_4008_Update)
        // Target expression
        // (as target) iNsTr_149
        // iNsTr_149
        // implicit reference
        // 		iNsTr_150 := ($bitcast ($uint<32>) (($bitcast ($int<32>) xx_xlcssa1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
        //  file prog.linked.opt.aa, line 1428
        // Source expression
        // ($bitcast ($uint<32>) (($bitcast ($int<32>) xx_xlcssa1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
        $T[type_cast_4017_sample_start_] 
        $T[type_cast_4017_sample_completed_] 
        $T[type_cast_4017_update_start_] 
        $T[type_cast_4017_update_completed_] 
        // (($bitcast ($int<32>) xx_xlcssa1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) ))
        $T[ASHR_i32_i32_4016_sample_start_] 
        $T[ASHR_i32_i32_4016_sample_completed_] 
        $T[ASHR_i32_i32_4016_update_start_] 
        $T[ASHR_i32_i32_4016_update_completed_] 
        // ($bitcast ($int<32>) xx_xlcssa1 )
        $T[type_cast_4012_sample_start_] 
        $T[type_cast_4012_sample_completed_] 
        $T[type_cast_4012_update_start_] 
        $T[type_cast_4012_update_completed_] 
        // xx_xlcssa1
        $T[R_xx_xlcssa1_4011_sample_start_] 
        $T[R_xx_xlcssa1_4011_sample_completed_] 
        $T[R_xx_xlcssa1_4011_update_start_] 
        $T[R_xx_xlcssa1_4011_update_completed_] 
        // implicit reference
        R_xx_xlcssa1_4011_sample_start_ <-& ($entry)
        R_xx_xlcssa1_4011_sample_completed_ <-& (R_xx_xlcssa1_4011_sample_start_)
        R_xx_xlcssa1_4011_update_start_ <-& (R_xx_xlcssa1_4011_sample_completed_)
        R_xx_xlcssa1_4011_update_completed_ <-& (R_xx_xlcssa1_4011_update_start_)
        type_cast_4012_sample_start_ <-& (R_xx_xlcssa1_4011_update_completed_)
        ;;[type_cast_4012_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4012_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4012_sample_start_ &-> (type_cast_4012_Sample)
        type_cast_4012_sample_completed_ <-& (type_cast_4012_Sample)
        type_cast_4012_sample_completed_ &-> ($null)
        type_cast_4012_update_start_ &-> (type_cast_4012_Update)
        type_cast_4012_update_completed_ <-& (type_cast_4012_Update)
        // flow-through
        type_cast_4012_update_start_ <-& (type_cast_4012_sample_completed_)
        ASHR_i32_i32_4016_sample_start_ <-& (type_cast_4012_update_completed_)
        ;;[ASHR_i32_i32_4016_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ASHR_i32_i32_4016_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ASHR_i32_i32_4016_sample_start_ &-> (ASHR_i32_i32_4016_Sample)
        ASHR_i32_i32_4016_sample_completed_ <-& (ASHR_i32_i32_4016_Sample)
        ASHR_i32_i32_4016_sample_completed_ &-> ($null)
        ASHR_i32_i32_4016_update_start_ &-> (ASHR_i32_i32_4016_Update)
        ASHR_i32_i32_4016_update_completed_ <-& (ASHR_i32_i32_4016_Update)
        // flow-through
        ASHR_i32_i32_4016_update_start_ <-& (ASHR_i32_i32_4016_sample_completed_)
        type_cast_4017_sample_start_ <-& (ASHR_i32_i32_4016_update_completed_)
        ;;[type_cast_4017_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4017_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4017_sample_start_ &-> (type_cast_4017_Sample)
        type_cast_4017_sample_completed_ <-& (type_cast_4017_Sample)
        type_cast_4017_sample_completed_ &-> ($null)
        type_cast_4017_update_start_ &-> (type_cast_4017_Update)
        type_cast_4017_update_completed_ <-& (type_cast_4017_Update)
        // Target expression
        // (as target) iNsTr_150
        // iNsTr_150
        // implicit reference
        // 		iNsTr_151 := (($bitcast ($int<32>) iNsTr_150 ) < ($bitcast ($int<32>) iNsTr_147 ))
        //  file prog.linked.opt.aa, line 1429
        // Source expression
        // (($bitcast ($int<32>) iNsTr_150 ) < ($bitcast ($int<32>) iNsTr_147 ))
        $T[SLT_i32_u1_4024_sample_start_] 
        $T[SLT_i32_u1_4024_sample_completed_] 
        $T[SLT_i32_u1_4024_update_start_] 
        $T[SLT_i32_u1_4024_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_150 )
        $T[type_cast_4021_sample_start_] 
        $T[type_cast_4021_sample_completed_] 
        $T[type_cast_4021_update_start_] 
        $T[type_cast_4021_update_completed_] 
        // iNsTr_150
        $T[R_iNsTr_150_4020_sample_start_] 
        $T[R_iNsTr_150_4020_sample_completed_] 
        $T[R_iNsTr_150_4020_update_start_] 
        $T[R_iNsTr_150_4020_update_completed_] 
        // implicit reference
        R_iNsTr_150_4020_sample_start_ <-& (type_cast_4017_update_completed_)
        R_iNsTr_150_4020_sample_completed_ <-& (R_iNsTr_150_4020_sample_start_)
        R_iNsTr_150_4020_update_start_ <-& (R_iNsTr_150_4020_sample_completed_)
        R_iNsTr_150_4020_update_completed_ <-& (R_iNsTr_150_4020_update_start_)
        type_cast_4021_sample_start_ <-& (R_iNsTr_150_4020_update_completed_)
        ;;[type_cast_4021_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4021_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4021_sample_start_ &-> (type_cast_4021_Sample)
        type_cast_4021_sample_completed_ <-& (type_cast_4021_Sample)
        type_cast_4021_sample_completed_ &-> ($null)
        type_cast_4021_update_start_ &-> (type_cast_4021_Update)
        type_cast_4021_update_completed_ <-& (type_cast_4021_Update)
        // flow-through
        type_cast_4021_update_start_ <-& (type_cast_4021_sample_completed_)
        // ($bitcast ($int<32>) iNsTr_147 )
        $T[type_cast_4023_sample_start_] 
        $T[type_cast_4023_sample_completed_] 
        $T[type_cast_4023_update_start_] 
        $T[type_cast_4023_update_completed_] 
        // iNsTr_147
        $T[R_iNsTr_147_4022_sample_start_] 
        $T[R_iNsTr_147_4022_sample_completed_] 
        $T[R_iNsTr_147_4022_update_start_] 
        $T[R_iNsTr_147_4022_update_completed_] 
        // implicit reference
        R_iNsTr_147_4022_sample_start_ <-& (SUB_u32_u32_3992_update_completed_)
        R_iNsTr_147_4022_sample_completed_ <-& (R_iNsTr_147_4022_sample_start_)
        R_iNsTr_147_4022_update_start_ <-& (R_iNsTr_147_4022_sample_completed_)
        R_iNsTr_147_4022_update_completed_ <-& (R_iNsTr_147_4022_update_start_)
        type_cast_4023_sample_start_ <-& (R_iNsTr_147_4022_update_completed_)
        ;;[type_cast_4023_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4023_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4023_sample_start_ &-> (type_cast_4023_Sample)
        type_cast_4023_sample_completed_ <-& (type_cast_4023_Sample)
        type_cast_4023_sample_completed_ &-> ($null)
        type_cast_4023_update_start_ &-> (type_cast_4023_Update)
        type_cast_4023_update_completed_ <-& (type_cast_4023_Update)
        // flow-through
        type_cast_4023_update_start_ <-& (type_cast_4023_sample_completed_)
        SLT_i32_u1_4024_sample_start_ <-& (type_cast_4021_update_completed_)
        SLT_i32_u1_4024_sample_start_ <-& (type_cast_4023_update_completed_)
        ;;[SLT_i32_u1_4024_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_i32_u1_4024_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_i32_u1_4024_sample_start_ &-> (SLT_i32_u1_4024_Sample)
        SLT_i32_u1_4024_sample_completed_ <-& (SLT_i32_u1_4024_Sample)
        SLT_i32_u1_4024_sample_completed_ &-> ($null)
        SLT_i32_u1_4024_update_start_ &-> (SLT_i32_u1_4024_Update)
        SLT_i32_u1_4024_update_completed_ <-& (SLT_i32_u1_4024_Update)
        // Target expression
        // (as target) iNsTr_151
        // iNsTr_151
        // implicit reference
        // 		orx_xcondx_xi11 := (iNsTr_149 & iNsTr_151)
        //  file prog.linked.opt.aa, line 1430
        // Source expression
        // (iNsTr_149 & iNsTr_151)
        $T[AND_u1_u1_4029_sample_start_] 
        $T[AND_u1_u1_4029_sample_completed_] 
        $T[AND_u1_u1_4029_update_start_] 
        $T[AND_u1_u1_4029_update_completed_] 
        // iNsTr_149
        $T[R_iNsTr_149_4027_sample_start_] 
        $T[R_iNsTr_149_4027_sample_completed_] 
        $T[R_iNsTr_149_4027_update_start_] 
        $T[R_iNsTr_149_4027_update_completed_] 
        // implicit reference
        R_iNsTr_149_4027_sample_start_ <-& (SGT_i32_u1_4008_update_completed_)
        R_iNsTr_149_4027_sample_completed_ <-& (R_iNsTr_149_4027_sample_start_)
        R_iNsTr_149_4027_update_start_ <-& (R_iNsTr_149_4027_sample_completed_)
        R_iNsTr_149_4027_update_completed_ <-& (R_iNsTr_149_4027_update_start_)
        // iNsTr_151
        $T[R_iNsTr_151_4028_sample_start_] 
        $T[R_iNsTr_151_4028_sample_completed_] 
        $T[R_iNsTr_151_4028_update_start_] 
        $T[R_iNsTr_151_4028_update_completed_] 
        // implicit reference
        R_iNsTr_151_4028_sample_start_ <-& (SLT_i32_u1_4024_update_completed_)
        R_iNsTr_151_4028_sample_completed_ <-& (R_iNsTr_151_4028_sample_start_)
        R_iNsTr_151_4028_update_start_ <-& (R_iNsTr_151_4028_sample_completed_)
        R_iNsTr_151_4028_update_completed_ <-& (R_iNsTr_151_4028_update_start_)
        AND_u1_u1_4029_sample_start_ <-& (R_iNsTr_149_4027_update_completed_)
        AND_u1_u1_4029_sample_start_ <-& (R_iNsTr_151_4028_update_completed_)
        ;;[AND_u1_u1_4029_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_4029_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_4029_sample_start_ &-> (AND_u1_u1_4029_Sample)
        AND_u1_u1_4029_sample_completed_ <-& (AND_u1_u1_4029_Sample)
        AND_u1_u1_4029_sample_completed_ &-> ($null)
        AND_u1_u1_4029_update_start_ &-> (AND_u1_u1_4029_Update)
        AND_u1_u1_4029_update_completed_ <-& (AND_u1_u1_4029_Update)
        // Target expression
        // (as target) orx_xcondx_xi11
        // orx_xcondx_xi11
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3987_to_assign_stmt_4030__entry__ |-> (assign_stmt_3987_to_assign_stmt_4030)
      assign_stmt_3987_to_assign_stmt_4030__exit__ <-| (assign_stmt_3987_to_assign_stmt_4030)
      // if-statement  
      //  file prog.linked.opt.aa, line 1431
      ;;[if_stmt_4031_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4031__entry__ |-> (if_stmt_4031_dead_link)
      if_stmt_4031__exit__ <-| (if_stmt_4031_dead_link)
      ;;[if_stmt_4031_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_4031__entry__ |-> (if_stmt_4031_eval_test)
      $P [R_orx_xcondx_xi11_4032_place]
      R_orx_xcondx_xi11_4032_place <-| (if_stmt_4031_eval_test)
      ;;[if_stmt_4031_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4031_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcondx_xi11_4032_place |-> (if_stmt_4031_if_link if_stmt_4031_else_link)
      $P [xx_x_crit_edgex_xi_bb_17]
      xx_x_crit_edgex_xi_bb_17 <-| (if_stmt_4031_if_link)
      $P [xx_x_crit_edgex_xi_blsCheckx_xexit]
      xx_x_crit_edgex_xi_blsCheckx_xexit <-| (if_stmt_4031_else_link)
      ::[assign_stmt_4042_to_assign_stmt_4070] 
      {
        // 		iNsTr_205 := (xx_xlcssa - xx_xlcssa2)
        //  file prog.linked.opt.aa, line 1438
        // Source expression
        // (xx_xlcssa - xx_xlcssa2)
        $T[SUB_u32_u32_4041_sample_start_] 
        $T[SUB_u32_u32_4041_sample_completed_] 
        $T[SUB_u32_u32_4041_update_start_] 
        $T[SUB_u32_u32_4041_update_completed_] 
        // xx_xlcssa
        $T[R_xx_xlcssa_4039_sample_start_] 
        $T[R_xx_xlcssa_4039_sample_completed_] 
        $T[R_xx_xlcssa_4039_update_start_] 
        $T[R_xx_xlcssa_4039_update_completed_] 
        // implicit reference
        R_xx_xlcssa_4039_sample_start_ <-& ($entry)
        R_xx_xlcssa_4039_sample_completed_ <-& (R_xx_xlcssa_4039_sample_start_)
        R_xx_xlcssa_4039_update_start_ <-& (R_xx_xlcssa_4039_sample_completed_)
        R_xx_xlcssa_4039_update_completed_ <-& (R_xx_xlcssa_4039_update_start_)
        // xx_xlcssa2
        $T[R_xx_xlcssa2_4040_sample_start_] 
        $T[R_xx_xlcssa2_4040_sample_completed_] 
        $T[R_xx_xlcssa2_4040_update_start_] 
        $T[R_xx_xlcssa2_4040_update_completed_] 
        // implicit reference
        R_xx_xlcssa2_4040_sample_start_ <-& ($entry)
        R_xx_xlcssa2_4040_sample_completed_ <-& (R_xx_xlcssa2_4040_sample_start_)
        R_xx_xlcssa2_4040_update_start_ <-& (R_xx_xlcssa2_4040_sample_completed_)
        R_xx_xlcssa2_4040_update_completed_ <-& (R_xx_xlcssa2_4040_update_start_)
        SUB_u32_u32_4041_sample_start_ <-& (R_xx_xlcssa_4039_update_completed_)
        SUB_u32_u32_4041_sample_start_ <-& (R_xx_xlcssa2_4040_update_completed_)
        ;;[SUB_u32_u32_4041_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_4041_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_4041_sample_start_ &-> (SUB_u32_u32_4041_Sample)
        SUB_u32_u32_4041_sample_completed_ <-& (SUB_u32_u32_4041_Sample)
        SUB_u32_u32_4041_sample_completed_ &-> ($null)
        SUB_u32_u32_4041_update_start_ &-> (SUB_u32_u32_4041_Update)
        SUB_u32_u32_4041_update_completed_ <-& (SUB_u32_u32_4041_Update)
        // Target expression
        // (as target) iNsTr_205
        // iNsTr_205
        // implicit reference
        // 		isposx_xi := (($bitcast ($int<32>) iNsTr_205 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ))
        //  file prog.linked.opt.aa, line 1439
        // Source expression
        // (($bitcast ($int<32>) iNsTr_205 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ))
        $T[SGT_i32_u1_4049_sample_start_] 
        $T[SGT_i32_u1_4049_sample_completed_] 
        $T[SGT_i32_u1_4049_update_start_] 
        $T[SGT_i32_u1_4049_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_205 )
        $T[type_cast_4045_sample_start_] 
        $T[type_cast_4045_sample_completed_] 
        $T[type_cast_4045_update_start_] 
        $T[type_cast_4045_update_completed_] 
        // iNsTr_205
        $T[R_iNsTr_205_4044_sample_start_] 
        $T[R_iNsTr_205_4044_sample_completed_] 
        $T[R_iNsTr_205_4044_update_start_] 
        $T[R_iNsTr_205_4044_update_completed_] 
        // implicit reference
        R_iNsTr_205_4044_sample_start_ <-& (SUB_u32_u32_4041_update_completed_)
        R_iNsTr_205_4044_sample_completed_ <-& (R_iNsTr_205_4044_sample_start_)
        R_iNsTr_205_4044_update_start_ <-& (R_iNsTr_205_4044_sample_completed_)
        R_iNsTr_205_4044_update_completed_ <-& (R_iNsTr_205_4044_update_start_)
        type_cast_4045_sample_start_ <-& (R_iNsTr_205_4044_update_completed_)
        ;;[type_cast_4045_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4045_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4045_sample_start_ &-> (type_cast_4045_Sample)
        type_cast_4045_sample_completed_ <-& (type_cast_4045_Sample)
        type_cast_4045_sample_completed_ &-> ($null)
        type_cast_4045_update_start_ &-> (type_cast_4045_Update)
        type_cast_4045_update_completed_ <-& (type_cast_4045_Update)
        // flow-through
        type_cast_4045_update_start_ <-& (type_cast_4045_sample_completed_)
        SGT_i32_u1_4049_sample_start_ <-& (type_cast_4045_update_completed_)
        ;;[SGT_i32_u1_4049_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_4049_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_4049_sample_start_ &-> (SGT_i32_u1_4049_Sample)
        SGT_i32_u1_4049_sample_completed_ <-& (SGT_i32_u1_4049_Sample)
        SGT_i32_u1_4049_sample_completed_ &-> ($null)
        SGT_i32_u1_4049_update_start_ &-> (SGT_i32_u1_4049_Update)
        SGT_i32_u1_4049_update_completed_ <-& (SGT_i32_u1_4049_Update)
        // Target expression
        // (as target) isposx_xi
        // isposx_xi
        // implicit reference
        // 		negx_xi := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_205)
        //  file prog.linked.opt.aa, line 1440
        // Source expression
        // (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_205)
        $T[SUB_u32_u32_4055_sample_start_] 
        $T[SUB_u32_u32_4055_sample_completed_] 
        $T[SUB_u32_u32_4055_update_start_] 
        $T[SUB_u32_u32_4055_update_completed_] 
        // iNsTr_205
        $T[R_iNsTr_205_4054_sample_start_] 
        $T[R_iNsTr_205_4054_sample_completed_] 
        $T[R_iNsTr_205_4054_update_start_] 
        $T[R_iNsTr_205_4054_update_completed_] 
        // implicit reference
        R_iNsTr_205_4054_sample_start_ <-& (SUB_u32_u32_4041_update_completed_)
        R_iNsTr_205_4054_sample_completed_ <-& (R_iNsTr_205_4054_sample_start_)
        R_iNsTr_205_4054_update_start_ <-& (R_iNsTr_205_4054_sample_completed_)
        R_iNsTr_205_4054_update_completed_ <-& (R_iNsTr_205_4054_update_start_)
        SUB_u32_u32_4055_sample_start_ <-& (R_iNsTr_205_4054_update_completed_)
        ;;[SUB_u32_u32_4055_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_4055_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_4055_sample_start_ &-> (SUB_u32_u32_4055_Sample)
        SUB_u32_u32_4055_sample_completed_ <-& (SUB_u32_u32_4055_Sample)
        SUB_u32_u32_4055_sample_completed_ &-> ($null)
        SUB_u32_u32_4055_update_start_ &-> (SUB_u32_u32_4055_Update)
        SUB_u32_u32_4055_update_completed_ <-& (SUB_u32_u32_4055_Update)
        // Target expression
        // (as target) negx_xi
        // negx_xi
        // implicit reference
        // 		iNsTr_206 := ( $mux isposx_xi iNsTr_205  negx_xi ) 
        //  file prog.linked.opt.aa, line 1441
        // Source expression
        // ( $mux isposx_xi iNsTr_205  negx_xi ) 
        $T[MUX_4061_sample_start_] 
        $T[MUX_4061_sample_completed_] 
        $T[MUX_4061_update_start_] 
        $T[MUX_4061_update_completed_] 
        // isposx_xi
        $T[R_isposx_xi_4058_sample_start_] 
        $T[R_isposx_xi_4058_sample_completed_] 
        $T[R_isposx_xi_4058_update_start_] 
        $T[R_isposx_xi_4058_update_completed_] 
        // implicit reference
        R_isposx_xi_4058_sample_start_ <-& (SGT_i32_u1_4049_update_completed_)
        R_isposx_xi_4058_sample_completed_ <-& (R_isposx_xi_4058_sample_start_)
        R_isposx_xi_4058_update_start_ <-& (R_isposx_xi_4058_sample_completed_)
        R_isposx_xi_4058_update_completed_ <-& (R_isposx_xi_4058_update_start_)
        // iNsTr_205
        $T[R_iNsTr_205_4059_sample_start_] 
        $T[R_iNsTr_205_4059_sample_completed_] 
        $T[R_iNsTr_205_4059_update_start_] 
        $T[R_iNsTr_205_4059_update_completed_] 
        // implicit reference
        R_iNsTr_205_4059_sample_start_ <-& (SUB_u32_u32_4041_update_completed_)
        R_iNsTr_205_4059_sample_completed_ <-& (R_iNsTr_205_4059_sample_start_)
        R_iNsTr_205_4059_update_start_ <-& (R_iNsTr_205_4059_sample_completed_)
        R_iNsTr_205_4059_update_completed_ <-& (R_iNsTr_205_4059_update_start_)
        // negx_xi
        $T[R_negx_xi_4060_sample_start_] 
        $T[R_negx_xi_4060_sample_completed_] 
        $T[R_negx_xi_4060_update_start_] 
        $T[R_negx_xi_4060_update_completed_] 
        // implicit reference
        R_negx_xi_4060_sample_start_ <-& (SUB_u32_u32_4055_update_completed_)
        R_negx_xi_4060_sample_completed_ <-& (R_negx_xi_4060_sample_start_)
        R_negx_xi_4060_update_start_ <-& (R_negx_xi_4060_sample_completed_)
        R_negx_xi_4060_update_completed_ <-& (R_negx_xi_4060_update_start_)
        MUX_4061_sample_start_ <-& (R_isposx_xi_4058_update_completed_)
        MUX_4061_sample_start_ <-& (R_iNsTr_205_4059_update_completed_)
        MUX_4061_sample_start_ <-& (R_negx_xi_4060_update_completed_)
        ;;[MUX_4061_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4061_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4061_sample_start_ &-> (MUX_4061_start)
        MUX_4061_sample_completed_ <-& (MUX_4061_start)
        MUX_4061_update_start_ &-> (MUX_4061_complete)
        MUX_4061_update_completed_ <-& (MUX_4061_complete)
        MUX_4061_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_206
        // iNsTr_206
        // implicit reference
        // 		phitmpx_xi12 := (($bitcast ($int<32>) iNsTr_206 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000011101  ) ))
        //  file prog.linked.opt.aa, line 1442
        // Source expression
        // (($bitcast ($int<32>) iNsTr_206 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000011101  ) ))
        $T[SGT_i32_u1_4069_sample_start_] 
        $T[SGT_i32_u1_4069_sample_completed_] 
        $T[SGT_i32_u1_4069_update_start_] 
        $T[SGT_i32_u1_4069_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_206 )
        $T[type_cast_4065_sample_start_] 
        $T[type_cast_4065_sample_completed_] 
        $T[type_cast_4065_update_start_] 
        $T[type_cast_4065_update_completed_] 
        // iNsTr_206
        $T[R_iNsTr_206_4064_sample_start_] 
        $T[R_iNsTr_206_4064_sample_completed_] 
        $T[R_iNsTr_206_4064_update_start_] 
        $T[R_iNsTr_206_4064_update_completed_] 
        // implicit reference
        R_iNsTr_206_4064_sample_start_ <-& (MUX_4061_update_completed_)
        R_iNsTr_206_4064_sample_completed_ <-& (R_iNsTr_206_4064_sample_start_)
        R_iNsTr_206_4064_update_start_ <-& (R_iNsTr_206_4064_sample_completed_)
        R_iNsTr_206_4064_update_completed_ <-& (R_iNsTr_206_4064_update_start_)
        type_cast_4065_sample_start_ <-& (R_iNsTr_206_4064_update_completed_)
        ;;[type_cast_4065_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4065_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4065_sample_start_ &-> (type_cast_4065_Sample)
        type_cast_4065_sample_completed_ <-& (type_cast_4065_Sample)
        type_cast_4065_sample_completed_ &-> ($null)
        type_cast_4065_update_start_ &-> (type_cast_4065_Update)
        type_cast_4065_update_completed_ <-& (type_cast_4065_Update)
        // flow-through
        type_cast_4065_update_start_ <-& (type_cast_4065_sample_completed_)
        SGT_i32_u1_4069_sample_start_ <-& (type_cast_4065_update_completed_)
        ;;[SGT_i32_u1_4069_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_4069_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_4069_sample_start_ &-> (SGT_i32_u1_4069_Sample)
        SGT_i32_u1_4069_sample_completed_ <-& (SGT_i32_u1_4069_Sample)
        SGT_i32_u1_4069_sample_completed_ &-> ($null)
        SGT_i32_u1_4069_update_start_ &-> (SGT_i32_u1_4069_Update)
        SGT_i32_u1_4069_update_completed_ <-& (SGT_i32_u1_4069_Update)
        // Target expression
        // (as target) phitmpx_xi12
        // phitmpx_xi12
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_4042_to_assign_stmt_4070__entry__ |-> (assign_stmt_4042_to_assign_stmt_4070)
      assign_stmt_4042_to_assign_stmt_4070__exit__ <-| (assign_stmt_4042_to_assign_stmt_4070)
      ::[assign_stmt_4087_to_assign_stmt_4153] 
      {
        // 		iNsTr_209 := (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) det_threshx_x1 ))
        //  file prog.linked.opt.aa, line 1447
        // Source expression
        // (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) det_threshx_x1 ))
        $T[SGT_i32_u1_4086_sample_start_] 
        $T[SGT_i32_u1_4086_sample_completed_] 
        $T[SGT_i32_u1_4086_update_start_] 
        $T[SGT_i32_u1_4086_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_68 )
        $T[type_cast_4083_sample_start_] 
        $T[type_cast_4083_sample_completed_] 
        $T[type_cast_4083_update_start_] 
        $T[type_cast_4083_update_completed_] 
        // iNsTr_68
        $T[R_iNsTr_68_4082_sample_start_] 
        $T[R_iNsTr_68_4082_sample_completed_] 
        $T[R_iNsTr_68_4082_update_start_] 
        $T[R_iNsTr_68_4082_update_completed_] 
        // implicit reference
        R_iNsTr_68_4082_sample_start_ <-& ($entry)
        R_iNsTr_68_4082_sample_completed_ <-& (R_iNsTr_68_4082_sample_start_)
        R_iNsTr_68_4082_update_start_ <-& (R_iNsTr_68_4082_sample_completed_)
        R_iNsTr_68_4082_update_completed_ <-& (R_iNsTr_68_4082_update_start_)
        type_cast_4083_sample_start_ <-& (R_iNsTr_68_4082_update_completed_)
        ;;[type_cast_4083_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4083_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4083_sample_start_ &-> (type_cast_4083_Sample)
        type_cast_4083_sample_completed_ <-& (type_cast_4083_Sample)
        type_cast_4083_sample_completed_ &-> ($null)
        type_cast_4083_update_start_ &-> (type_cast_4083_Update)
        type_cast_4083_update_completed_ <-& (type_cast_4083_Update)
        // flow-through
        type_cast_4083_update_start_ <-& (type_cast_4083_sample_completed_)
        // ($bitcast ($int<32>) det_threshx_x1 )
        $T[type_cast_4085_sample_start_] 
        $T[type_cast_4085_sample_completed_] 
        $T[type_cast_4085_update_start_] 
        $T[type_cast_4085_update_completed_] 
        // det_threshx_x1
        $T[R_det_threshx_x1_4084_sample_start_] 
        $T[R_det_threshx_x1_4084_sample_completed_] 
        $T[R_det_threshx_x1_4084_update_start_] 
        $T[R_det_threshx_x1_4084_update_completed_] 
        // implicit reference
        R_det_threshx_x1_4084_sample_start_ <-& ($entry)
        R_det_threshx_x1_4084_sample_completed_ <-& (R_det_threshx_x1_4084_sample_start_)
        R_det_threshx_x1_4084_update_start_ <-& (R_det_threshx_x1_4084_sample_completed_)
        R_det_threshx_x1_4084_update_completed_ <-& (R_det_threshx_x1_4084_update_start_)
        type_cast_4085_sample_start_ <-& (R_det_threshx_x1_4084_update_completed_)
        ;;[type_cast_4085_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4085_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4085_sample_start_ &-> (type_cast_4085_Sample)
        type_cast_4085_sample_completed_ <-& (type_cast_4085_Sample)
        type_cast_4085_sample_completed_ &-> ($null)
        type_cast_4085_update_start_ &-> (type_cast_4085_Update)
        type_cast_4085_update_completed_ <-& (type_cast_4085_Update)
        // flow-through
        type_cast_4085_update_start_ <-& (type_cast_4085_sample_completed_)
        SGT_i32_u1_4086_sample_start_ <-& (type_cast_4083_update_completed_)
        SGT_i32_u1_4086_sample_start_ <-& (type_cast_4085_update_completed_)
        ;;[SGT_i32_u1_4086_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_4086_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_4086_sample_start_ &-> (SGT_i32_u1_4086_Sample)
        SGT_i32_u1_4086_sample_completed_ <-& (SGT_i32_u1_4086_Sample)
        SGT_i32_u1_4086_sample_completed_ &-> ($null)
        SGT_i32_u1_4086_update_start_ &-> (SGT_i32_u1_4086_Update)
        SGT_i32_u1_4086_update_completed_ <-& (SGT_i32_u1_4086_Update)
        // Target expression
        // (as target) iNsTr_209
        // iNsTr_209
        // implicit reference
        // 		iNsTr_210 := (iNsTr_208 ^ ($bitcast ($uint<1>) _b1  ))
        //  file prog.linked.opt.aa, line 1448
        // Source expression
        // (iNsTr_208 ^ ($bitcast ($uint<1>) _b1  ))
        $T[XOR_u1_u1_4092_sample_start_] 
        $T[XOR_u1_u1_4092_sample_completed_] 
        $T[XOR_u1_u1_4092_update_start_] 
        $T[XOR_u1_u1_4092_update_completed_] 
        // iNsTr_208
        $T[R_iNsTr_208_4089_sample_start_] 
        $T[R_iNsTr_208_4089_sample_completed_] 
        $T[R_iNsTr_208_4089_update_start_] 
        $T[R_iNsTr_208_4089_update_completed_] 
        // implicit reference
        R_iNsTr_208_4089_sample_start_ <-& ($entry)
        R_iNsTr_208_4089_sample_completed_ <-& (R_iNsTr_208_4089_sample_start_)
        R_iNsTr_208_4089_update_start_ <-& (R_iNsTr_208_4089_sample_completed_)
        R_iNsTr_208_4089_update_completed_ <-& (R_iNsTr_208_4089_update_start_)
        XOR_u1_u1_4092_sample_start_ <-& (R_iNsTr_208_4089_update_completed_)
        ;;[XOR_u1_u1_4092_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u1_u1_4092_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u1_u1_4092_sample_start_ &-> (XOR_u1_u1_4092_Sample)
        XOR_u1_u1_4092_sample_completed_ <-& (XOR_u1_u1_4092_Sample)
        XOR_u1_u1_4092_sample_completed_ &-> ($null)
        XOR_u1_u1_4092_update_start_ &-> (XOR_u1_u1_4092_Update)
        XOR_u1_u1_4092_update_completed_ <-& (XOR_u1_u1_4092_Update)
        // Target expression
        // (as target) iNsTr_210
        // iNsTr_210
        // implicit reference
        // 		iNsTr_211 := (iNsTr_209 & iNsTr_210)
        //  file prog.linked.opt.aa, line 1449
        // Source expression
        // (iNsTr_209 & iNsTr_210)
        $T[AND_u1_u1_4097_sample_start_] 
        $T[AND_u1_u1_4097_sample_completed_] 
        $T[AND_u1_u1_4097_update_start_] 
        $T[AND_u1_u1_4097_update_completed_] 
        // iNsTr_209
        $T[R_iNsTr_209_4095_sample_start_] 
        $T[R_iNsTr_209_4095_sample_completed_] 
        $T[R_iNsTr_209_4095_update_start_] 
        $T[R_iNsTr_209_4095_update_completed_] 
        // implicit reference
        R_iNsTr_209_4095_sample_start_ <-& (SGT_i32_u1_4086_update_completed_)
        R_iNsTr_209_4095_sample_completed_ <-& (R_iNsTr_209_4095_sample_start_)
        R_iNsTr_209_4095_update_start_ <-& (R_iNsTr_209_4095_sample_completed_)
        R_iNsTr_209_4095_update_completed_ <-& (R_iNsTr_209_4095_update_start_)
        // iNsTr_210
        $T[R_iNsTr_210_4096_sample_start_] 
        $T[R_iNsTr_210_4096_sample_completed_] 
        $T[R_iNsTr_210_4096_update_start_] 
        $T[R_iNsTr_210_4096_update_completed_] 
        // implicit reference
        R_iNsTr_210_4096_sample_start_ <-& (XOR_u1_u1_4092_update_completed_)
        R_iNsTr_210_4096_sample_completed_ <-& (R_iNsTr_210_4096_sample_start_)
        R_iNsTr_210_4096_update_start_ <-& (R_iNsTr_210_4096_sample_completed_)
        R_iNsTr_210_4096_update_completed_ <-& (R_iNsTr_210_4096_update_start_)
        AND_u1_u1_4097_sample_start_ <-& (R_iNsTr_209_4095_update_completed_)
        AND_u1_u1_4097_sample_start_ <-& (R_iNsTr_210_4096_update_completed_)
        ;;[AND_u1_u1_4097_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_4097_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_4097_sample_start_ &-> (AND_u1_u1_4097_Sample)
        AND_u1_u1_4097_sample_completed_ <-& (AND_u1_u1_4097_Sample)
        AND_u1_u1_4097_sample_completed_ &-> ($null)
        AND_u1_u1_4097_update_start_ &-> (AND_u1_u1_4097_Update)
        AND_u1_u1_4097_update_completed_ <-& (AND_u1_u1_4097_Update)
        // Target expression
        // (as target) iNsTr_211
        // iNsTr_211
        // implicit reference
        // 		xx_xnot5 := (($bitcast ($int<32>) iNsTr_68 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
        //  file prog.linked.opt.aa, line 1450
        // Source expression
        // (($bitcast ($int<32>) iNsTr_68 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
        $T[SLT_i32_u1_4105_sample_start_] 
        $T[SLT_i32_u1_4105_sample_completed_] 
        $T[SLT_i32_u1_4105_update_start_] 
        $T[SLT_i32_u1_4105_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_68 )
        $T[type_cast_4101_sample_start_] 
        $T[type_cast_4101_sample_completed_] 
        $T[type_cast_4101_update_start_] 
        $T[type_cast_4101_update_completed_] 
        // iNsTr_68
        $T[R_iNsTr_68_4100_sample_start_] 
        $T[R_iNsTr_68_4100_sample_completed_] 
        $T[R_iNsTr_68_4100_update_start_] 
        $T[R_iNsTr_68_4100_update_completed_] 
        // implicit reference
        R_iNsTr_68_4100_sample_start_ <-& ($entry)
        R_iNsTr_68_4100_sample_completed_ <-& (R_iNsTr_68_4100_sample_start_)
        R_iNsTr_68_4100_update_start_ <-& (R_iNsTr_68_4100_sample_completed_)
        R_iNsTr_68_4100_update_completed_ <-& (R_iNsTr_68_4100_update_start_)
        type_cast_4101_sample_start_ <-& (R_iNsTr_68_4100_update_completed_)
        ;;[type_cast_4101_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4101_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4101_sample_start_ &-> (type_cast_4101_Sample)
        type_cast_4101_sample_completed_ <-& (type_cast_4101_Sample)
        type_cast_4101_sample_completed_ &-> ($null)
        type_cast_4101_update_start_ &-> (type_cast_4101_Update)
        type_cast_4101_update_completed_ <-& (type_cast_4101_Update)
        // flow-through
        type_cast_4101_update_start_ <-& (type_cast_4101_sample_completed_)
        SLT_i32_u1_4105_sample_start_ <-& (type_cast_4101_update_completed_)
        ;;[SLT_i32_u1_4105_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_i32_u1_4105_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_i32_u1_4105_sample_start_ &-> (SLT_i32_u1_4105_Sample)
        SLT_i32_u1_4105_sample_completed_ <-& (SLT_i32_u1_4105_Sample)
        SLT_i32_u1_4105_sample_completed_ &-> ($null)
        SLT_i32_u1_4105_update_start_ &-> (SLT_i32_u1_4105_Update)
        SLT_i32_u1_4105_update_completed_ <-& (SLT_i32_u1_4105_Update)
        // Target expression
        // (as target) xx_xnot5
        // xx_xnot5
        // implicit reference
        // 		orx_xcond := (xx_xnot5 | iNsTr_209)
        //  file prog.linked.opt.aa, line 1451
        // Source expression
        // (xx_xnot5 | iNsTr_209)
        $T[OR_u1_u1_4110_sample_start_] 
        $T[OR_u1_u1_4110_sample_completed_] 
        $T[OR_u1_u1_4110_update_start_] 
        $T[OR_u1_u1_4110_update_completed_] 
        // xx_xnot5
        $T[R_xx_xnot5_4108_sample_start_] 
        $T[R_xx_xnot5_4108_sample_completed_] 
        $T[R_xx_xnot5_4108_update_start_] 
        $T[R_xx_xnot5_4108_update_completed_] 
        // implicit reference
        R_xx_xnot5_4108_sample_start_ <-& (SLT_i32_u1_4105_update_completed_)
        R_xx_xnot5_4108_sample_completed_ <-& (R_xx_xnot5_4108_sample_start_)
        R_xx_xnot5_4108_update_start_ <-& (R_xx_xnot5_4108_sample_completed_)
        R_xx_xnot5_4108_update_completed_ <-& (R_xx_xnot5_4108_update_start_)
        // iNsTr_209
        $T[R_iNsTr_209_4109_sample_start_] 
        $T[R_iNsTr_209_4109_sample_completed_] 
        $T[R_iNsTr_209_4109_update_start_] 
        $T[R_iNsTr_209_4109_update_completed_] 
        // implicit reference
        R_iNsTr_209_4109_sample_start_ <-& (SGT_i32_u1_4086_update_completed_)
        R_iNsTr_209_4109_sample_completed_ <-& (R_iNsTr_209_4109_sample_start_)
        R_iNsTr_209_4109_update_start_ <-& (R_iNsTr_209_4109_sample_completed_)
        R_iNsTr_209_4109_update_completed_ <-& (R_iNsTr_209_4109_update_start_)
        OR_u1_u1_4110_sample_start_ <-& (R_xx_xnot5_4108_update_completed_)
        OR_u1_u1_4110_sample_start_ <-& (R_iNsTr_209_4109_update_completed_)
        ;;[OR_u1_u1_4110_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u1_u1_4110_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u1_u1_4110_sample_start_ &-> (OR_u1_u1_4110_Sample)
        OR_u1_u1_4110_sample_completed_ <-& (OR_u1_u1_4110_Sample)
        OR_u1_u1_4110_sample_completed_ &-> ($null)
        OR_u1_u1_4110_update_start_ &-> (OR_u1_u1_4110_Update)
        OR_u1_u1_4110_update_completed_ <-& (OR_u1_u1_4110_Update)
        // Target expression
        // (as target) orx_xcond
        // orx_xcond
        // implicit reference
        // 		xx_xdemorgan := (orx_xcond | iNsTr_208)
        //  file prog.linked.opt.aa, line 1452
        // Source expression
        // (orx_xcond | iNsTr_208)
        $T[OR_u1_u1_4115_sample_start_] 
        $T[OR_u1_u1_4115_sample_completed_] 
        $T[OR_u1_u1_4115_update_start_] 
        $T[OR_u1_u1_4115_update_completed_] 
        // orx_xcond
        $T[R_orx_xcond_4113_sample_start_] 
        $T[R_orx_xcond_4113_sample_completed_] 
        $T[R_orx_xcond_4113_update_start_] 
        $T[R_orx_xcond_4113_update_completed_] 
        // implicit reference
        R_orx_xcond_4113_sample_start_ <-& (OR_u1_u1_4110_update_completed_)
        R_orx_xcond_4113_sample_completed_ <-& (R_orx_xcond_4113_sample_start_)
        R_orx_xcond_4113_update_start_ <-& (R_orx_xcond_4113_sample_completed_)
        R_orx_xcond_4113_update_completed_ <-& (R_orx_xcond_4113_update_start_)
        // iNsTr_208
        $T[R_iNsTr_208_4114_sample_start_] 
        $T[R_iNsTr_208_4114_sample_completed_] 
        $T[R_iNsTr_208_4114_update_start_] 
        $T[R_iNsTr_208_4114_update_completed_] 
        // implicit reference
        R_iNsTr_208_4114_sample_start_ <-& ($entry)
        R_iNsTr_208_4114_sample_completed_ <-& (R_iNsTr_208_4114_sample_start_)
        R_iNsTr_208_4114_update_start_ <-& (R_iNsTr_208_4114_sample_completed_)
        R_iNsTr_208_4114_update_completed_ <-& (R_iNsTr_208_4114_update_start_)
        OR_u1_u1_4115_sample_start_ <-& (R_orx_xcond_4113_update_completed_)
        OR_u1_u1_4115_sample_start_ <-& (R_iNsTr_208_4114_update_completed_)
        ;;[OR_u1_u1_4115_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u1_u1_4115_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u1_u1_4115_sample_start_ &-> (OR_u1_u1_4115_Sample)
        OR_u1_u1_4115_sample_completed_ <-& (OR_u1_u1_4115_Sample)
        OR_u1_u1_4115_sample_completed_ &-> ($null)
        OR_u1_u1_4115_update_start_ &-> (OR_u1_u1_4115_Update)
        OR_u1_u1_4115_update_completed_ <-& (OR_u1_u1_4115_Update)
        // Target expression
        // (as target) xx_xdemorgan
        // xx_xdemorgan
        // implicit reference
        // 		iNsTr_212 := (xx_xdemorgan ^ ($bitcast ($uint<1>) _b1  ))
        //  file prog.linked.opt.aa, line 1453
        // Source expression
        // (xx_xdemorgan ^ ($bitcast ($uint<1>) _b1  ))
        $T[XOR_u1_u1_4121_sample_start_] 
        $T[XOR_u1_u1_4121_sample_completed_] 
        $T[XOR_u1_u1_4121_update_start_] 
        $T[XOR_u1_u1_4121_update_completed_] 
        // xx_xdemorgan
        $T[R_xx_xdemorgan_4118_sample_start_] 
        $T[R_xx_xdemorgan_4118_sample_completed_] 
        $T[R_xx_xdemorgan_4118_update_start_] 
        $T[R_xx_xdemorgan_4118_update_completed_] 
        // implicit reference
        R_xx_xdemorgan_4118_sample_start_ <-& (OR_u1_u1_4115_update_completed_)
        R_xx_xdemorgan_4118_sample_completed_ <-& (R_xx_xdemorgan_4118_sample_start_)
        R_xx_xdemorgan_4118_update_start_ <-& (R_xx_xdemorgan_4118_sample_completed_)
        R_xx_xdemorgan_4118_update_completed_ <-& (R_xx_xdemorgan_4118_update_start_)
        XOR_u1_u1_4121_sample_start_ <-& (R_xx_xdemorgan_4118_update_completed_)
        ;;[XOR_u1_u1_4121_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u1_u1_4121_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u1_u1_4121_sample_start_ &-> (XOR_u1_u1_4121_Sample)
        XOR_u1_u1_4121_sample_completed_ <-& (XOR_u1_u1_4121_Sample)
        XOR_u1_u1_4121_sample_completed_ &-> ($null)
        XOR_u1_u1_4121_update_start_ &-> (XOR_u1_u1_4121_Update)
        XOR_u1_u1_4121_update_completed_ <-& (XOR_u1_u1_4121_Update)
        // Target expression
        // (as target) iNsTr_212
        // iNsTr_212
        // implicit reference
        // 		iNsTr_213 := (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) sbPeakx_x1 ))
        //  file prog.linked.opt.aa, line 1454
        // Source expression
        // (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) sbPeakx_x1 ))
        $T[SGT_i32_u1_4128_sample_start_] 
        $T[SGT_i32_u1_4128_sample_completed_] 
        $T[SGT_i32_u1_4128_update_start_] 
        $T[SGT_i32_u1_4128_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_68 )
        $T[type_cast_4125_sample_start_] 
        $T[type_cast_4125_sample_completed_] 
        $T[type_cast_4125_update_start_] 
        $T[type_cast_4125_update_completed_] 
        // iNsTr_68
        $T[R_iNsTr_68_4124_sample_start_] 
        $T[R_iNsTr_68_4124_sample_completed_] 
        $T[R_iNsTr_68_4124_update_start_] 
        $T[R_iNsTr_68_4124_update_completed_] 
        // implicit reference
        R_iNsTr_68_4124_sample_start_ <-& ($entry)
        R_iNsTr_68_4124_sample_completed_ <-& (R_iNsTr_68_4124_sample_start_)
        R_iNsTr_68_4124_update_start_ <-& (R_iNsTr_68_4124_sample_completed_)
        R_iNsTr_68_4124_update_completed_ <-& (R_iNsTr_68_4124_update_start_)
        type_cast_4125_sample_start_ <-& (R_iNsTr_68_4124_update_completed_)
        ;;[type_cast_4125_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4125_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4125_sample_start_ &-> (type_cast_4125_Sample)
        type_cast_4125_sample_completed_ <-& (type_cast_4125_Sample)
        type_cast_4125_sample_completed_ &-> ($null)
        type_cast_4125_update_start_ &-> (type_cast_4125_Update)
        type_cast_4125_update_completed_ <-& (type_cast_4125_Update)
        // flow-through
        type_cast_4125_update_start_ <-& (type_cast_4125_sample_completed_)
        // ($bitcast ($int<32>) sbPeakx_x1 )
        $T[type_cast_4127_sample_start_] 
        $T[type_cast_4127_sample_completed_] 
        $T[type_cast_4127_update_start_] 
        $T[type_cast_4127_update_completed_] 
        // sbPeakx_x1
        $T[R_sbPeakx_x1_4126_sample_start_] 
        $T[R_sbPeakx_x1_4126_sample_completed_] 
        $T[R_sbPeakx_x1_4126_update_start_] 
        $T[R_sbPeakx_x1_4126_update_completed_] 
        // implicit reference
        R_sbPeakx_x1_4126_sample_start_ <-& ($entry)
        R_sbPeakx_x1_4126_sample_completed_ <-& (R_sbPeakx_x1_4126_sample_start_)
        R_sbPeakx_x1_4126_update_start_ <-& (R_sbPeakx_x1_4126_sample_completed_)
        R_sbPeakx_x1_4126_update_completed_ <-& (R_sbPeakx_x1_4126_update_start_)
        type_cast_4127_sample_start_ <-& (R_sbPeakx_x1_4126_update_completed_)
        ;;[type_cast_4127_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4127_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4127_sample_start_ &-> (type_cast_4127_Sample)
        type_cast_4127_sample_completed_ <-& (type_cast_4127_Sample)
        type_cast_4127_sample_completed_ &-> ($null)
        type_cast_4127_update_start_ &-> (type_cast_4127_Update)
        type_cast_4127_update_completed_ <-& (type_cast_4127_Update)
        // flow-through
        type_cast_4127_update_start_ <-& (type_cast_4127_sample_completed_)
        SGT_i32_u1_4128_sample_start_ <-& (type_cast_4125_update_completed_)
        SGT_i32_u1_4128_sample_start_ <-& (type_cast_4127_update_completed_)
        ;;[SGT_i32_u1_4128_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_4128_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_4128_sample_start_ &-> (SGT_i32_u1_4128_Sample)
        SGT_i32_u1_4128_sample_completed_ <-& (SGT_i32_u1_4128_Sample)
        SGT_i32_u1_4128_sample_completed_ &-> ($null)
        SGT_i32_u1_4128_update_start_ &-> (SGT_i32_u1_4128_Update)
        SGT_i32_u1_4128_update_completed_ <-& (SGT_i32_u1_4128_Update)
        // Target expression
        // (as target) iNsTr_213
        // iNsTr_213
        // implicit reference
        // 		orx_xcond6 := (iNsTr_213 & iNsTr_212)
        //  file prog.linked.opt.aa, line 1455
        // Source expression
        // (iNsTr_213 & iNsTr_212)
        $T[AND_u1_u1_4133_sample_start_] 
        $T[AND_u1_u1_4133_sample_completed_] 
        $T[AND_u1_u1_4133_update_start_] 
        $T[AND_u1_u1_4133_update_completed_] 
        // iNsTr_213
        $T[R_iNsTr_213_4131_sample_start_] 
        $T[R_iNsTr_213_4131_sample_completed_] 
        $T[R_iNsTr_213_4131_update_start_] 
        $T[R_iNsTr_213_4131_update_completed_] 
        // implicit reference
        R_iNsTr_213_4131_sample_start_ <-& (SGT_i32_u1_4128_update_completed_)
        R_iNsTr_213_4131_sample_completed_ <-& (R_iNsTr_213_4131_sample_start_)
        R_iNsTr_213_4131_update_start_ <-& (R_iNsTr_213_4131_sample_completed_)
        R_iNsTr_213_4131_update_completed_ <-& (R_iNsTr_213_4131_update_start_)
        // iNsTr_212
        $T[R_iNsTr_212_4132_sample_start_] 
        $T[R_iNsTr_212_4132_sample_completed_] 
        $T[R_iNsTr_212_4132_update_start_] 
        $T[R_iNsTr_212_4132_update_completed_] 
        // implicit reference
        R_iNsTr_212_4132_sample_start_ <-& (XOR_u1_u1_4121_update_completed_)
        R_iNsTr_212_4132_sample_completed_ <-& (R_iNsTr_212_4132_sample_start_)
        R_iNsTr_212_4132_update_start_ <-& (R_iNsTr_212_4132_sample_completed_)
        R_iNsTr_212_4132_update_completed_ <-& (R_iNsTr_212_4132_update_start_)
        AND_u1_u1_4133_sample_start_ <-& (R_iNsTr_213_4131_update_completed_)
        AND_u1_u1_4133_sample_start_ <-& (R_iNsTr_212_4132_update_completed_)
        ;;[AND_u1_u1_4133_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_4133_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_4133_sample_start_ &-> (AND_u1_u1_4133_Sample)
        AND_u1_u1_4133_sample_completed_ <-& (AND_u1_u1_4133_Sample)
        AND_u1_u1_4133_sample_completed_ &-> ($null)
        AND_u1_u1_4133_update_start_ &-> (AND_u1_u1_4133_Update)
        AND_u1_u1_4133_update_completed_ <-& (AND_u1_u1_4133_Update)
        // Target expression
        // (as target) orx_xcond6
        // orx_xcond6
        // implicit reference
        // 		iNsTr_214 := (($bitcast ($int<32>) iNsTr_85 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000001010111  ) ))
        //  file prog.linked.opt.aa, line 1456
        // Source expression
        // (($bitcast ($int<32>) iNsTr_85 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000001010111  ) ))
        $T[SGT_i32_u1_4141_sample_start_] 
        $T[SGT_i32_u1_4141_sample_completed_] 
        $T[SGT_i32_u1_4141_update_start_] 
        $T[SGT_i32_u1_4141_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_85 )
        $T[type_cast_4137_sample_start_] 
        $T[type_cast_4137_sample_completed_] 
        $T[type_cast_4137_update_start_] 
        $T[type_cast_4137_update_completed_] 
        // iNsTr_85
        $T[R_iNsTr_85_4136_sample_start_] 
        $T[R_iNsTr_85_4136_sample_completed_] 
        $T[R_iNsTr_85_4136_update_start_] 
        $T[R_iNsTr_85_4136_update_completed_] 
        // implicit reference
        R_iNsTr_85_4136_sample_start_ <-& ($entry)
        R_iNsTr_85_4136_sample_completed_ <-& (R_iNsTr_85_4136_sample_start_)
        R_iNsTr_85_4136_update_start_ <-& (R_iNsTr_85_4136_sample_completed_)
        R_iNsTr_85_4136_update_completed_ <-& (R_iNsTr_85_4136_update_start_)
        type_cast_4137_sample_start_ <-& (R_iNsTr_85_4136_update_completed_)
        ;;[type_cast_4137_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4137_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4137_sample_start_ &-> (type_cast_4137_Sample)
        type_cast_4137_sample_completed_ <-& (type_cast_4137_Sample)
        type_cast_4137_sample_completed_ &-> ($null)
        type_cast_4137_update_start_ &-> (type_cast_4137_Update)
        type_cast_4137_update_completed_ <-& (type_cast_4137_Update)
        // flow-through
        type_cast_4137_update_start_ <-& (type_cast_4137_sample_completed_)
        SGT_i32_u1_4141_sample_start_ <-& (type_cast_4137_update_completed_)
        ;;[SGT_i32_u1_4141_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_4141_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_4141_sample_start_ &-> (SGT_i32_u1_4141_Sample)
        SGT_i32_u1_4141_sample_completed_ <-& (SGT_i32_u1_4141_Sample)
        SGT_i32_u1_4141_sample_completed_ &-> ($null)
        SGT_i32_u1_4141_update_start_ &-> (SGT_i32_u1_4141_Update)
        SGT_i32_u1_4141_update_completed_ <-& (SGT_i32_u1_4141_Update)
        // Target expression
        // (as target) iNsTr_214
        // iNsTr_214
        // implicit reference
        // 		iNsTr_215 := (orx_xcond6 & iNsTr_214)
        //  file prog.linked.opt.aa, line 1457
        // Source expression
        // (orx_xcond6 & iNsTr_214)
        $T[AND_u1_u1_4146_sample_start_] 
        $T[AND_u1_u1_4146_sample_completed_] 
        $T[AND_u1_u1_4146_update_start_] 
        $T[AND_u1_u1_4146_update_completed_] 
        // orx_xcond6
        $T[R_orx_xcond6_4144_sample_start_] 
        $T[R_orx_xcond6_4144_sample_completed_] 
        $T[R_orx_xcond6_4144_update_start_] 
        $T[R_orx_xcond6_4144_update_completed_] 
        // implicit reference
        R_orx_xcond6_4144_sample_start_ <-& (AND_u1_u1_4133_update_completed_)
        R_orx_xcond6_4144_sample_completed_ <-& (R_orx_xcond6_4144_sample_start_)
        R_orx_xcond6_4144_update_start_ <-& (R_orx_xcond6_4144_sample_completed_)
        R_orx_xcond6_4144_update_completed_ <-& (R_orx_xcond6_4144_update_start_)
        // iNsTr_214
        $T[R_iNsTr_214_4145_sample_start_] 
        $T[R_iNsTr_214_4145_sample_completed_] 
        $T[R_iNsTr_214_4145_update_start_] 
        $T[R_iNsTr_214_4145_update_completed_] 
        // implicit reference
        R_iNsTr_214_4145_sample_start_ <-& (SGT_i32_u1_4141_update_completed_)
        R_iNsTr_214_4145_sample_completed_ <-& (R_iNsTr_214_4145_sample_start_)
        R_iNsTr_214_4145_update_start_ <-& (R_iNsTr_214_4145_sample_completed_)
        R_iNsTr_214_4145_update_completed_ <-& (R_iNsTr_214_4145_update_start_)
        AND_u1_u1_4146_sample_start_ <-& (R_orx_xcond6_4144_update_completed_)
        AND_u1_u1_4146_sample_start_ <-& (R_iNsTr_214_4145_update_completed_)
        ;;[AND_u1_u1_4146_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_4146_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_4146_sample_start_ &-> (AND_u1_u1_4146_Sample)
        AND_u1_u1_4146_sample_completed_ <-& (AND_u1_u1_4146_Sample)
        AND_u1_u1_4146_sample_completed_ &-> ($null)
        AND_u1_u1_4146_update_start_ &-> (AND_u1_u1_4146_Update)
        AND_u1_u1_4146_update_completed_ <-& (AND_u1_u1_4146_Update)
        // Target expression
        // (as target) iNsTr_215
        // iNsTr_215
        // implicit reference
        // 		iNsTr_216 := ( $mux xx_xdemorgan noiseValx_x1  iNsTr_68 ) 
        //  file prog.linked.opt.aa, line 1458
        // Source expression
        // ( $mux xx_xdemorgan noiseValx_x1  iNsTr_68 ) 
        $T[MUX_4152_sample_start_] 
        $T[MUX_4152_sample_completed_] 
        $T[MUX_4152_update_start_] 
        $T[MUX_4152_update_completed_] 
        // xx_xdemorgan
        $T[R_xx_xdemorgan_4149_sample_start_] 
        $T[R_xx_xdemorgan_4149_sample_completed_] 
        $T[R_xx_xdemorgan_4149_update_start_] 
        $T[R_xx_xdemorgan_4149_update_completed_] 
        // implicit reference
        R_xx_xdemorgan_4149_sample_start_ <-& (OR_u1_u1_4115_update_completed_)
        R_xx_xdemorgan_4149_sample_completed_ <-& (R_xx_xdemorgan_4149_sample_start_)
        R_xx_xdemorgan_4149_update_start_ <-& (R_xx_xdemorgan_4149_sample_completed_)
        R_xx_xdemorgan_4149_update_completed_ <-& (R_xx_xdemorgan_4149_update_start_)
        // noiseValx_x1
        $T[R_noiseValx_x1_4150_sample_start_] 
        $T[R_noiseValx_x1_4150_sample_completed_] 
        $T[R_noiseValx_x1_4150_update_start_] 
        $T[R_noiseValx_x1_4150_update_completed_] 
        // implicit reference
        R_noiseValx_x1_4150_sample_start_ <-& ($entry)
        R_noiseValx_x1_4150_sample_completed_ <-& (R_noiseValx_x1_4150_sample_start_)
        R_noiseValx_x1_4150_update_start_ <-& (R_noiseValx_x1_4150_sample_completed_)
        R_noiseValx_x1_4150_update_completed_ <-& (R_noiseValx_x1_4150_update_start_)
        // iNsTr_68
        $T[R_iNsTr_68_4151_sample_start_] 
        $T[R_iNsTr_68_4151_sample_completed_] 
        $T[R_iNsTr_68_4151_update_start_] 
        $T[R_iNsTr_68_4151_update_completed_] 
        // implicit reference
        R_iNsTr_68_4151_sample_start_ <-& ($entry)
        R_iNsTr_68_4151_sample_completed_ <-& (R_iNsTr_68_4151_sample_start_)
        R_iNsTr_68_4151_update_start_ <-& (R_iNsTr_68_4151_sample_completed_)
        R_iNsTr_68_4151_update_completed_ <-& (R_iNsTr_68_4151_update_start_)
        MUX_4152_sample_start_ <-& (R_xx_xdemorgan_4149_update_completed_)
        MUX_4152_sample_start_ <-& (R_noiseValx_x1_4150_update_completed_)
        MUX_4152_sample_start_ <-& (R_iNsTr_68_4151_update_completed_)
        ;;[MUX_4152_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4152_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4152_sample_start_ &-> (MUX_4152_start)
        MUX_4152_sample_completed_ <-& (MUX_4152_start)
        MUX_4152_update_start_ &-> (MUX_4152_complete)
        MUX_4152_update_completed_ <-& (MUX_4152_complete)
        MUX_4152_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_216
        // iNsTr_216
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_4087_to_assign_stmt_4153__entry__ |-> (assign_stmt_4087_to_assign_stmt_4153)
      assign_stmt_4087_to_assign_stmt_4153__exit__ <-| (assign_stmt_4087_to_assign_stmt_4153)
      // if-statement  
      //  file prog.linked.opt.aa, line 1459
      ;;[if_stmt_4154_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4154__entry__ |-> (if_stmt_4154_dead_link)
      if_stmt_4154__exit__ <-| (if_stmt_4154_dead_link)
      ;;[if_stmt_4154_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_4154__entry__ |-> (if_stmt_4154_eval_test)
      $P [R_xx_xdemorgan_4155_place]
      R_xx_xdemorgan_4155_place <-| (if_stmt_4154_eval_test)
      ;;[if_stmt_4154_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4154_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_xx_xdemorgan_4155_place |-> (if_stmt_4154_if_link if_stmt_4154_else_link)
      $P [blsCheckx_xexit_bb_20]
      blsCheckx_xexit_bb_20 <-| (if_stmt_4154_if_link)
      $P [blsCheckx_xexit_bb_19]
      blsCheckx_xexit_bb_19 <-| (if_stmt_4154_else_link)
      ::[assign_stmt_4163_to_assign_stmt_4200] 
      {
        // 		iNsTr_223 := NOISEbuff_ptr
        //  file prog.linked.opt.aa, line 1466
        // Source expression
        // NOISEbuff_ptr
        $T[LOAD_NOISEbuff_ptr_4162_sample_start_] 
        $T[LOAD_NOISEbuff_ptr_4162_sample_completed_] 
        $T[LOAD_NOISEbuff_ptr_4162_update_start_] 
        $T[LOAD_NOISEbuff_ptr_4162_update_completed_] 
        $T[LOAD_NOISEbuff_ptr_4162_sample_start_] 
        $T[LOAD_NOISEbuff_ptr_4162_sample_completed_] 
        $T[LOAD_NOISEbuff_ptr_4162_update_start_] 
        $T[LOAD_NOISEbuff_ptr_4162_update_completed_] 
        $T[LOAD_NOISEbuff_ptr_4162_word_address_calculated] 
        $T[LOAD_NOISEbuff_ptr_4162_root_address_calculated] 
        LOAD_NOISEbuff_ptr_4162_word_address_calculated <-& (LOAD_NOISEbuff_ptr_4162_root_address_calculated)
        ;;[LOAD_NOISEbuff_ptr_4162_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_NOISEbuff_ptr_4162_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_NOISEbuff_ptr_4162_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_NOISEbuff_ptr_4162_sample_start_ <-& (LOAD_NOISEbuff_ptr_4162_word_address_calculated)
        LOAD_NOISEbuff_ptr_4162_sample_start_ &-> (LOAD_NOISEbuff_ptr_4162_Sample)
        LOAD_NOISEbuff_ptr_4162_sample_completed_ <-& (LOAD_NOISEbuff_ptr_4162_Sample)
        LOAD_NOISEbuff_ptr_4162_sample_completed_ &-> ($null)
        LOAD_NOISEbuff_ptr_4162_update_start_ &-> (LOAD_NOISEbuff_ptr_4162_Update)
        LOAD_NOISEbuff_ptr_4162_update_completed_ <-& (LOAD_NOISEbuff_ptr_4162_Update)
        // Target expression
        // (as target) iNsTr_223
        // iNsTr_223
        // implicit reference
        // 		iNsTr_224 := @(NOISEbuff[iNsTr_223])
        //  file prog.linked.opt.aa, line 1467
        // Source expression
        // @(NOISEbuff[iNsTr_223])
        $T[addr_of_4167_sample_start_] 
        $T[addr_of_4167_sample_completed_] 
        $T[addr_of_4167_update_start_] 
        $T[addr_of_4167_update_completed_] 
        $T[array_obj_ref_4166_root_address_calculated] 
        $T[array_obj_ref_4166_offset_calculated] 
        $T[array_obj_ref_4166_index_resized_0] 
        $T[array_obj_ref_4166_index_scaled_0] 
        // iNsTr_223
        $T[R_iNsTr_223_4165_sample_start_] 
        $T[R_iNsTr_223_4165_sample_completed_] 
        $T[R_iNsTr_223_4165_update_start_] 
        $T[R_iNsTr_223_4165_update_completed_] 
        // implicit reference
        R_iNsTr_223_4165_sample_start_ <-& (LOAD_NOISEbuff_ptr_4162_update_completed_)
        R_iNsTr_223_4165_sample_completed_ <-& (R_iNsTr_223_4165_sample_start_)
        R_iNsTr_223_4165_update_start_ <-& (R_iNsTr_223_4165_sample_completed_)
        R_iNsTr_223_4165_update_completed_ <-& (R_iNsTr_223_4165_update_start_)
        ;;[array_obj_ref_4166_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        R_iNsTr_223_4165_update_completed_ &-> (array_obj_ref_4166_index_resize_0)
        array_obj_ref_4166_index_resized_0 <-& (array_obj_ref_4166_index_resize_0)
        ;;[array_obj_ref_4166_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_4166_index_resized_0 &-> (array_obj_ref_4166_index_scale_0)
        array_obj_ref_4166_index_scaled_0 <-& (array_obj_ref_4166_index_scale_0)
        ;;[array_obj_ref_4166_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_4166_index_scaled_0 &-> (array_obj_ref_4166_final_index_sum_regn)
        array_obj_ref_4166_offset_calculated <-& (array_obj_ref_4166_final_index_sum_regn)
        ;;[array_obj_ref_4166_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_4166_offset_calculated &-> (array_obj_ref_4166_base_plus_offset)
        array_obj_ref_4166_root_address_calculated <-& (array_obj_ref_4166_base_plus_offset)
        ;;[addr_of_4167_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_4167_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_4167_sample_start_ <-& (array_obj_ref_4166_root_address_calculated)
        addr_of_4167_sample_start_ &-> (addr_of_4167_request)
        addr_of_4167_sample_completed_ <-& (addr_of_4167_request)
        addr_of_4167_update_start_ &-> (addr_of_4167_complete)
        addr_of_4167_update_completed_ <-& (addr_of_4167_complete)
        // Target expression
        // (as target) iNsTr_224
        // iNsTr_224
        // implicit reference
        // 		->(iNsTr_224) := iNsTr_216
        //  file prog.linked.opt.aa, line 1468
        // Source expression
        // iNsTr_216
        $T[R_iNsTr_216_4171_sample_start_] 
        $T[R_iNsTr_216_4171_sample_completed_] 
        $T[R_iNsTr_216_4171_update_start_] 
        $T[R_iNsTr_216_4171_update_completed_] 
        // implicit reference
        R_iNsTr_216_4171_sample_start_ <-& ($entry)
        R_iNsTr_216_4171_sample_completed_ <-& (R_iNsTr_216_4171_sample_start_)
        R_iNsTr_216_4171_update_start_ <-& (R_iNsTr_216_4171_sample_completed_)
        R_iNsTr_216_4171_update_completed_ <-& (R_iNsTr_216_4171_update_start_)
        // Target expression
        // ->(iNsTr_224)
        $T[ptr_deref_4170_sample_start_] 
        $T[ptr_deref_4170_sample_completed_] 
        $T[ptr_deref_4170_update_start_] 
        $T[ptr_deref_4170_update_completed_] 
        $T[ptr_deref_4170_base_address_calculated] 
        // iNsTr_224
        $T[R_iNsTr_224_4169_sample_start_] 
        $T[R_iNsTr_224_4169_sample_completed_] 
        $T[R_iNsTr_224_4169_update_start_] 
        $T[R_iNsTr_224_4169_update_completed_] 
        // implicit reference
        R_iNsTr_224_4169_sample_start_ <-& (addr_of_4167_update_completed_)
        R_iNsTr_224_4169_sample_completed_ <-& (R_iNsTr_224_4169_sample_start_)
        R_iNsTr_224_4169_update_start_ <-& (R_iNsTr_224_4169_sample_completed_)
        R_iNsTr_224_4169_update_completed_ <-& (R_iNsTr_224_4169_update_start_)
        $T[ptr_deref_4170_word_address_calculated] 
        $T[ptr_deref_4170_root_address_calculated] 
        $T[ptr_deref_4170_base_address_resized] 
        ;;[ptr_deref_4170_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_4170_base_address_calculated &-> (ptr_deref_4170_base_addr_resize)
        ptr_deref_4170_base_address_resized <-& (ptr_deref_4170_base_addr_resize)
        ;;[ptr_deref_4170_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_4170_base_address_resized &-> (ptr_deref_4170_base_plus_offset)
        ptr_deref_4170_root_address_calculated <-& (ptr_deref_4170_base_plus_offset)
        ;;[ptr_deref_4170_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_4170_root_address_calculated &-> (ptr_deref_4170_word_addrgen)
        ptr_deref_4170_word_address_calculated <-& (ptr_deref_4170_word_addrgen)
        ;;[ptr_deref_4170_Sample] 
        {
          ;;[ptr_deref_4170_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_4170_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_4170_sample_start_ <-& (ptr_deref_4170_word_address_calculated)
        ptr_deref_4170_sample_start_ &-> (ptr_deref_4170_Sample)
        ptr_deref_4170_sample_completed_ <-& (ptr_deref_4170_Sample)
        ptr_deref_4170_sample_completed_ &-> ($null)
        ptr_deref_4170_update_start_ &-> (ptr_deref_4170_Update)
        ptr_deref_4170_update_completed_ <-& (ptr_deref_4170_Update)
        ptr_deref_4170_base_address_calculated <-& (R_iNsTr_224_4169_update_completed_)
        ptr_deref_4170_sample_start_ <-& (ptr_deref_4170_base_address_calculated)
        ptr_deref_4170_sample_start_ <-& (R_iNsTr_216_4171_update_completed_)
        // 		iNsTr_226 := (iNsTr_223 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        //  file prog.linked.opt.aa, line 1469
        // Source expression
        // (iNsTr_223 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        $T[ADD_u32_u32_4177_sample_start_] 
        $T[ADD_u32_u32_4177_sample_completed_] 
        $T[ADD_u32_u32_4177_update_start_] 
        $T[ADD_u32_u32_4177_update_completed_] 
        // iNsTr_223
        $T[R_iNsTr_223_4174_sample_start_] 
        $T[R_iNsTr_223_4174_sample_completed_] 
        $T[R_iNsTr_223_4174_update_start_] 
        $T[R_iNsTr_223_4174_update_completed_] 
        // implicit reference
        R_iNsTr_223_4174_sample_start_ <-& (LOAD_NOISEbuff_ptr_4162_update_completed_)
        R_iNsTr_223_4174_sample_completed_ <-& (R_iNsTr_223_4174_sample_start_)
        R_iNsTr_223_4174_update_start_ <-& (R_iNsTr_223_4174_sample_completed_)
        R_iNsTr_223_4174_update_completed_ <-& (R_iNsTr_223_4174_update_start_)
        ADD_u32_u32_4177_sample_start_ <-& (R_iNsTr_223_4174_update_completed_)
        ;;[ADD_u32_u32_4177_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_4177_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_4177_sample_start_ &-> (ADD_u32_u32_4177_Sample)
        ADD_u32_u32_4177_sample_completed_ <-& (ADD_u32_u32_4177_Sample)
        ADD_u32_u32_4177_sample_completed_ &-> ($null)
        ADD_u32_u32_4177_update_start_ &-> (ADD_u32_u32_4177_Update)
        ADD_u32_u32_4177_update_completed_ <-& (ADD_u32_u32_4177_Update)
        // Target expression
        // (as target) iNsTr_226
        // iNsTr_226
        // implicit reference
        // 		iNsTr_227 := (iNsTr_223 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.linked.opt.aa, line 1470
        // Source expression
        // (iNsTr_223 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_4183_sample_start_] 
        $T[EQ_u32_u1_4183_sample_completed_] 
        $T[EQ_u32_u1_4183_update_start_] 
        $T[EQ_u32_u1_4183_update_completed_] 
        // iNsTr_223
        $T[R_iNsTr_223_4180_sample_start_] 
        $T[R_iNsTr_223_4180_sample_completed_] 
        $T[R_iNsTr_223_4180_update_start_] 
        $T[R_iNsTr_223_4180_update_completed_] 
        // implicit reference
        R_iNsTr_223_4180_sample_start_ <-& (LOAD_NOISEbuff_ptr_4162_update_completed_)
        R_iNsTr_223_4180_sample_completed_ <-& (R_iNsTr_223_4180_sample_start_)
        R_iNsTr_223_4180_update_start_ <-& (R_iNsTr_223_4180_sample_completed_)
        R_iNsTr_223_4180_update_completed_ <-& (R_iNsTr_223_4180_update_start_)
        EQ_u32_u1_4183_sample_start_ <-& (R_iNsTr_223_4180_update_completed_)
        ;;[EQ_u32_u1_4183_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_4183_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_4183_sample_start_ &-> (EQ_u32_u1_4183_Sample)
        EQ_u32_u1_4183_sample_completed_ <-& (EQ_u32_u1_4183_Sample)
        EQ_u32_u1_4183_sample_completed_ &-> ($null)
        EQ_u32_u1_4183_update_start_ &-> (EQ_u32_u1_4183_Update)
        EQ_u32_u1_4183_update_completed_ <-& (EQ_u32_u1_4183_Update)
        // Target expression
        // (as target) iNsTr_227
        // iNsTr_227
        // implicit reference
        // 		maxx_xx_xix_xi8 := ( $mux iNsTr_227 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_226 ) 
        //  file prog.linked.opt.aa, line 1471
        // Source expression
        // ( $mux iNsTr_227 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_226 ) 
        $T[MUX_4190_sample_start_] 
        $T[MUX_4190_sample_completed_] 
        $T[MUX_4190_update_start_] 
        $T[MUX_4190_update_completed_] 
        // iNsTr_227
        $T[R_iNsTr_227_4186_sample_start_] 
        $T[R_iNsTr_227_4186_sample_completed_] 
        $T[R_iNsTr_227_4186_update_start_] 
        $T[R_iNsTr_227_4186_update_completed_] 
        // implicit reference
        R_iNsTr_227_4186_sample_start_ <-& (EQ_u32_u1_4183_update_completed_)
        R_iNsTr_227_4186_sample_completed_ <-& (R_iNsTr_227_4186_sample_start_)
        R_iNsTr_227_4186_update_start_ <-& (R_iNsTr_227_4186_sample_completed_)
        R_iNsTr_227_4186_update_completed_ <-& (R_iNsTr_227_4186_update_start_)
        // iNsTr_226
        $T[R_iNsTr_226_4189_sample_start_] 
        $T[R_iNsTr_226_4189_sample_completed_] 
        $T[R_iNsTr_226_4189_update_start_] 
        $T[R_iNsTr_226_4189_update_completed_] 
        // implicit reference
        R_iNsTr_226_4189_sample_start_ <-& (ADD_u32_u32_4177_update_completed_)
        R_iNsTr_226_4189_sample_completed_ <-& (R_iNsTr_226_4189_sample_start_)
        R_iNsTr_226_4189_update_start_ <-& (R_iNsTr_226_4189_sample_completed_)
        R_iNsTr_226_4189_update_completed_ <-& (R_iNsTr_226_4189_update_start_)
        MUX_4190_sample_start_ <-& (R_iNsTr_227_4186_update_completed_)
        MUX_4190_sample_start_ <-& (R_iNsTr_226_4189_update_completed_)
        ;;[MUX_4190_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4190_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4190_sample_start_ &-> (MUX_4190_start)
        MUX_4190_sample_completed_ <-& (MUX_4190_start)
        MUX_4190_update_start_ &-> (MUX_4190_complete)
        MUX_4190_update_completed_ <-& (MUX_4190_complete)
        MUX_4190_sample_completed_ &-> ($null)
        // Target expression
        // (as target) maxx_xx_xix_xi8
        // maxx_xx_xix_xi8
        // implicit reference
        // 		NOISEbuff_ptr := maxx_xx_xix_xi8
        //  file prog.linked.opt.aa, line 1472
        // Source expression
        // maxx_xx_xix_xi8
        $T[R_maxx_xx_xix_xi8_4193_sample_start_] 
        $T[R_maxx_xx_xix_xi8_4193_sample_completed_] 
        $T[R_maxx_xx_xix_xi8_4193_update_start_] 
        $T[R_maxx_xx_xix_xi8_4193_update_completed_] 
        // implicit reference
        R_maxx_xx_xix_xi8_4193_sample_start_ <-& (MUX_4190_update_completed_)
        R_maxx_xx_xix_xi8_4193_sample_completed_ <-& (R_maxx_xx_xix_xi8_4193_sample_start_)
        R_maxx_xx_xix_xi8_4193_update_start_ <-& (R_maxx_xx_xix_xi8_4193_sample_completed_)
        R_maxx_xx_xix_xi8_4193_update_completed_ <-& (R_maxx_xx_xix_xi8_4193_update_start_)
        // Target expression
        // (as target) NOISEbuff_ptr
        $T[STORE_NOISEbuff_ptr_4192_sample_start_] 
        $T[STORE_NOISEbuff_ptr_4192_sample_completed_] 
        $T[STORE_NOISEbuff_ptr_4192_update_start_] 
        $T[STORE_NOISEbuff_ptr_4192_update_completed_] 
        // NOISEbuff_ptr
        $T[STORE_NOISEbuff_ptr_4192_word_address_calculated] 
        $T[STORE_NOISEbuff_ptr_4192_root_address_calculated] 
        STORE_NOISEbuff_ptr_4192_word_address_calculated <-& (STORE_NOISEbuff_ptr_4192_root_address_calculated)
        ;;[STORE_NOISEbuff_ptr_4192_Sample] 
        {
          ;;[STORE_NOISEbuff_ptr_4192_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_NOISEbuff_ptr_4192_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_NOISEbuff_ptr_4192_sample_start_ <-& (STORE_NOISEbuff_ptr_4192_word_address_calculated)
        STORE_NOISEbuff_ptr_4192_sample_start_ &-> (STORE_NOISEbuff_ptr_4192_Sample)
        STORE_NOISEbuff_ptr_4192_sample_completed_ <-& (STORE_NOISEbuff_ptr_4192_Sample)
        STORE_NOISEbuff_ptr_4192_sample_completed_ &-> ($null)
        STORE_NOISEbuff_ptr_4192_update_start_ &-> (STORE_NOISEbuff_ptr_4192_Update)
        STORE_NOISEbuff_ptr_4192_update_completed_ <-& (STORE_NOISEbuff_ptr_4192_Update)
        STORE_NOISEbuff_ptr_4192_sample_start_ <-& (R_maxx_xx_xix_xi8_4193_update_completed_)
        // load-store dependencies..
        $T [LOAD_NOISEbuff_ptr_4162_STORE_NOISEbuff_ptr_4192_delay] $delay
        // NOISEbuff_ptr(load) -> NOISEbuff_ptr(store)
        STORE_NOISEbuff_ptr_4192_sample_start_ <-& (LOAD_NOISEbuff_ptr_4162_STORE_NOISEbuff_ptr_4192_delay)
        LOAD_NOISEbuff_ptr_4162_STORE_NOISEbuff_ptr_4192_delay <-& (LOAD_NOISEbuff_ptr_4162_sample_completed_)
      }
      assign_stmt_4163_to_assign_stmt_4200__entry__ |-> (assign_stmt_4163_to_assign_stmt_4200)
      assign_stmt_4163_to_assign_stmt_4200__exit__ <-| (assign_stmt_4163_to_assign_stmt_4200)
      ::[call_stmt_4203] 
      {
        // 		$call meanCalc (iNsTr_229 ) (iNsTr_230 ) 
        //  file prog.linked.opt.aa, line 1474
        $T[call_stmt_4203_sample_start_] 
        $T[call_stmt_4203_sample_completed_] 
        $T[call_stmt_4203_update_start_] 
        $T[call_stmt_4203_update_completed_] 
        // Call input argument 0
        ;;[call_stmt_4203_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_4203_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_4203_sample_start_ &-> (call_stmt_4203_Sample)
        call_stmt_4203_sample_completed_ <-& (call_stmt_4203_Sample)
        call_stmt_4203_sample_completed_ &-> ($null)
        call_stmt_4203_update_start_ &-> (call_stmt_4203_Update)
        call_stmt_4203_update_completed_ <-& (call_stmt_4203_Update)
        // Call output argument 0
        // (as target) iNsTr_230
        // iNsTr_230
        // implicit reference
        // barrier: 		$call meanCalc (iNsTr_229 ) (iNsTr_230 ) 
        // load-store dependencies..
      }
      call_stmt_4203__entry__ |-> (call_stmt_4203)
      call_stmt_4203__exit__ <-| (call_stmt_4203)
      ::[assign_stmt_4208_to_assign_stmt_4231] 
      {
        // 		iNsTr_231 := (qmeanx_x1 - iNsTr_230)
        //  file prog.linked.opt.aa, line 1475
        // Source expression
        // (qmeanx_x1 - iNsTr_230)
        $T[SUB_u32_u32_4207_sample_start_] 
        $T[SUB_u32_u32_4207_sample_completed_] 
        $T[SUB_u32_u32_4207_update_start_] 
        $T[SUB_u32_u32_4207_update_completed_] 
        // qmeanx_x1
        $T[R_qmeanx_x1_4205_sample_start_] 
        $T[R_qmeanx_x1_4205_sample_completed_] 
        $T[R_qmeanx_x1_4205_update_start_] 
        $T[R_qmeanx_x1_4205_update_completed_] 
        // implicit reference
        R_qmeanx_x1_4205_sample_start_ <-& ($entry)
        R_qmeanx_x1_4205_sample_completed_ <-& (R_qmeanx_x1_4205_sample_start_)
        R_qmeanx_x1_4205_update_start_ <-& (R_qmeanx_x1_4205_sample_completed_)
        R_qmeanx_x1_4205_update_completed_ <-& (R_qmeanx_x1_4205_update_start_)
        // iNsTr_230
        $T[R_iNsTr_230_4206_sample_start_] 
        $T[R_iNsTr_230_4206_sample_completed_] 
        $T[R_iNsTr_230_4206_update_start_] 
        $T[R_iNsTr_230_4206_update_completed_] 
        // implicit reference
        R_iNsTr_230_4206_sample_start_ <-& ($entry)
        R_iNsTr_230_4206_sample_completed_ <-& (R_iNsTr_230_4206_sample_start_)
        R_iNsTr_230_4206_update_start_ <-& (R_iNsTr_230_4206_sample_completed_)
        R_iNsTr_230_4206_update_completed_ <-& (R_iNsTr_230_4206_update_start_)
        SUB_u32_u32_4207_sample_start_ <-& (R_qmeanx_x1_4205_update_completed_)
        SUB_u32_u32_4207_sample_start_ <-& (R_iNsTr_230_4206_update_completed_)
        ;;[SUB_u32_u32_4207_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_4207_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_4207_sample_start_ &-> (SUB_u32_u32_4207_Sample)
        SUB_u32_u32_4207_sample_completed_ <-& (SUB_u32_u32_4207_Sample)
        SUB_u32_u32_4207_sample_completed_ &-> ($null)
        SUB_u32_u32_4207_update_start_ &-> (SUB_u32_u32_4207_Update)
        SUB_u32_u32_4207_update_completed_ <-& (SUB_u32_u32_4207_Update)
        // Target expression
        // (as target) iNsTr_231
        // iNsTr_231
        // implicit reference
        // 		iNsTr_232 := ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_231 ) )
        //  file prog.linked.opt.aa, line 1476
        // Source expression
        // ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_231 ) )
        $T[type_cast_4212_sample_start_] 
        $T[type_cast_4212_sample_completed_] 
        $T[type_cast_4212_update_start_] 
        $T[type_cast_4212_update_completed_] 
        // ($bitcast ($int<64>) iNsTr_231 )
        $T[type_cast_4211_sample_start_] 
        $T[type_cast_4211_sample_completed_] 
        $T[type_cast_4211_update_start_] 
        $T[type_cast_4211_update_completed_] 
        // iNsTr_231
        $T[R_iNsTr_231_4210_sample_start_] 
        $T[R_iNsTr_231_4210_sample_completed_] 
        $T[R_iNsTr_231_4210_update_start_] 
        $T[R_iNsTr_231_4210_update_completed_] 
        // implicit reference
        R_iNsTr_231_4210_sample_start_ <-& (SUB_u32_u32_4207_update_completed_)
        R_iNsTr_231_4210_sample_completed_ <-& (R_iNsTr_231_4210_sample_start_)
        R_iNsTr_231_4210_update_start_ <-& (R_iNsTr_231_4210_sample_completed_)
        R_iNsTr_231_4210_update_completed_ <-& (R_iNsTr_231_4210_update_start_)
        type_cast_4211_sample_start_ <-& (R_iNsTr_231_4210_update_completed_)
        ;;[type_cast_4211_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4211_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4211_sample_start_ &-> (type_cast_4211_Sample)
        type_cast_4211_sample_completed_ <-& (type_cast_4211_Sample)
        type_cast_4211_sample_completed_ &-> ($null)
        type_cast_4211_update_start_ &-> (type_cast_4211_Update)
        type_cast_4211_update_completed_ <-& (type_cast_4211_Update)
        // flow-through
        type_cast_4211_update_start_ <-& (type_cast_4211_sample_completed_)
        type_cast_4212_sample_start_ <-& (type_cast_4211_update_completed_)
        ;;[type_cast_4212_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4212_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4212_sample_start_ &-> (type_cast_4212_Sample)
        type_cast_4212_sample_completed_ <-& (type_cast_4212_Sample)
        type_cast_4212_sample_completed_ &-> ($null)
        type_cast_4212_update_start_ &-> (type_cast_4212_Update)
        type_cast_4212_update_completed_ <-& (type_cast_4212_Update)
        // Target expression
        // (as target) iNsTr_232
        // iNsTr_232
        // implicit reference
        // 		iNsTr_233 := threshold
        //  file prog.linked.opt.aa, line 1477
        // Source expression
        // threshold
        $T[LOAD_threshold_4215_sample_start_] 
        $T[LOAD_threshold_4215_sample_completed_] 
        $T[LOAD_threshold_4215_update_start_] 
        $T[LOAD_threshold_4215_update_completed_] 
        $T[LOAD_threshold_4215_sample_start_] 
        $T[LOAD_threshold_4215_sample_completed_] 
        $T[LOAD_threshold_4215_update_start_] 
        $T[LOAD_threshold_4215_update_completed_] 
        $T[LOAD_threshold_4215_word_address_calculated] 
        $T[LOAD_threshold_4215_root_address_calculated] 
        LOAD_threshold_4215_word_address_calculated <-& (LOAD_threshold_4215_root_address_calculated)
        ;;[LOAD_threshold_4215_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_threshold_4215_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_threshold_4215_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_threshold_4215_sample_start_ <-& (LOAD_threshold_4215_word_address_calculated)
        LOAD_threshold_4215_sample_start_ &-> (LOAD_threshold_4215_Sample)
        LOAD_threshold_4215_sample_completed_ <-& (LOAD_threshold_4215_Sample)
        LOAD_threshold_4215_sample_completed_ &-> ($null)
        LOAD_threshold_4215_update_start_ &-> (LOAD_threshold_4215_Update)
        LOAD_threshold_4215_update_completed_ <-& (LOAD_threshold_4215_Update)
        // Target expression
        // (as target) iNsTr_233
        // iNsTr_233
        // implicit reference
        // 		iNsTr_234 := (iNsTr_233 * iNsTr_232)
        //  file prog.linked.opt.aa, line 1478
        // Source expression
        // (iNsTr_233 * iNsTr_232)
        $T[MUL_f64_f64_4220_sample_start_] 
        $T[MUL_f64_f64_4220_sample_completed_] 
        $T[MUL_f64_f64_4220_update_start_] 
        $T[MUL_f64_f64_4220_update_completed_] 
        // iNsTr_233
        $T[R_iNsTr_233_4218_sample_start_] 
        $T[R_iNsTr_233_4218_sample_completed_] 
        $T[R_iNsTr_233_4218_update_start_] 
        $T[R_iNsTr_233_4218_update_completed_] 
        // implicit reference
        R_iNsTr_233_4218_sample_start_ <-& (LOAD_threshold_4215_update_completed_)
        R_iNsTr_233_4218_sample_completed_ <-& (R_iNsTr_233_4218_sample_start_)
        R_iNsTr_233_4218_update_start_ <-& (R_iNsTr_233_4218_sample_completed_)
        R_iNsTr_233_4218_update_completed_ <-& (R_iNsTr_233_4218_update_start_)
        // iNsTr_232
        $T[R_iNsTr_232_4219_sample_start_] 
        $T[R_iNsTr_232_4219_sample_completed_] 
        $T[R_iNsTr_232_4219_update_start_] 
        $T[R_iNsTr_232_4219_update_completed_] 
        // implicit reference
        R_iNsTr_232_4219_sample_start_ <-& (type_cast_4212_update_completed_)
        R_iNsTr_232_4219_sample_completed_ <-& (R_iNsTr_232_4219_sample_start_)
        R_iNsTr_232_4219_update_start_ <-& (R_iNsTr_232_4219_sample_completed_)
        R_iNsTr_232_4219_update_completed_ <-& (R_iNsTr_232_4219_update_start_)
        MUL_f64_f64_4220_sample_start_ <-& (R_iNsTr_233_4218_update_completed_)
        MUL_f64_f64_4220_sample_start_ <-& (R_iNsTr_232_4219_update_completed_)
        ;;[MUL_f64_f64_4220_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_4220_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_4220_sample_start_ &-> (MUL_f64_f64_4220_Sample)
        MUL_f64_f64_4220_sample_completed_ <-& (MUL_f64_f64_4220_Sample)
        MUL_f64_f64_4220_sample_completed_ &-> ($null)
        MUL_f64_f64_4220_update_start_ &-> (MUL_f64_f64_4220_Update)
        MUL_f64_f64_4220_update_completed_ <-& (MUL_f64_f64_4220_Update)
        // Target expression
        // (as target) iNsTr_234
        // iNsTr_234
        // implicit reference
        // 		iNsTr_235 := ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_234 ) )
        //  file prog.linked.opt.aa, line 1479
        // Source expression
        // ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_234 ) )
        $T[type_cast_4225_sample_start_] 
        $T[type_cast_4225_sample_completed_] 
        $T[type_cast_4225_update_start_] 
        $T[type_cast_4225_update_completed_] 
        // ($cast ($int<32>) iNsTr_234 )
        $T[type_cast_4224_sample_start_] 
        $T[type_cast_4224_sample_completed_] 
        $T[type_cast_4224_update_start_] 
        $T[type_cast_4224_update_completed_] 
        // iNsTr_234
        $T[R_iNsTr_234_4223_sample_start_] 
        $T[R_iNsTr_234_4223_sample_completed_] 
        $T[R_iNsTr_234_4223_update_start_] 
        $T[R_iNsTr_234_4223_update_completed_] 
        // implicit reference
        R_iNsTr_234_4223_sample_start_ <-& (MUL_f64_f64_4220_update_completed_)
        R_iNsTr_234_4223_sample_completed_ <-& (R_iNsTr_234_4223_sample_start_)
        R_iNsTr_234_4223_update_start_ <-& (R_iNsTr_234_4223_sample_completed_)
        R_iNsTr_234_4223_update_completed_ <-& (R_iNsTr_234_4223_update_start_)
        type_cast_4224_sample_start_ <-& (R_iNsTr_234_4223_update_completed_)
        ;;[type_cast_4224_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4224_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4224_sample_start_ &-> (type_cast_4224_Sample)
        type_cast_4224_sample_completed_ <-& (type_cast_4224_Sample)
        type_cast_4224_sample_completed_ &-> ($null)
        type_cast_4224_update_start_ &-> (type_cast_4224_Update)
        type_cast_4224_update_completed_ <-& (type_cast_4224_Update)
        type_cast_4225_sample_start_ <-& (type_cast_4224_update_completed_)
        ;;[type_cast_4225_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4225_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4225_sample_start_ &-> (type_cast_4225_Sample)
        type_cast_4225_sample_completed_ <-& (type_cast_4225_Sample)
        type_cast_4225_sample_completed_ &-> ($null)
        type_cast_4225_update_start_ &-> (type_cast_4225_Update)
        type_cast_4225_update_completed_ <-& (type_cast_4225_Update)
        // Target expression
        // (as target) iNsTr_235
        // iNsTr_235
        // implicit reference
        // 		iNsTr_236 := (iNsTr_235 + iNsTr_230)
        //  file prog.linked.opt.aa, line 1480
        // Source expression
        // (iNsTr_235 + iNsTr_230)
        $T[ADD_u32_u32_4230_sample_start_] 
        $T[ADD_u32_u32_4230_sample_completed_] 
        $T[ADD_u32_u32_4230_update_start_] 
        $T[ADD_u32_u32_4230_update_completed_] 
        // iNsTr_235
        $T[R_iNsTr_235_4228_sample_start_] 
        $T[R_iNsTr_235_4228_sample_completed_] 
        $T[R_iNsTr_235_4228_update_start_] 
        $T[R_iNsTr_235_4228_update_completed_] 
        // implicit reference
        R_iNsTr_235_4228_sample_start_ <-& (type_cast_4225_update_completed_)
        R_iNsTr_235_4228_sample_completed_ <-& (R_iNsTr_235_4228_sample_start_)
        R_iNsTr_235_4228_update_start_ <-& (R_iNsTr_235_4228_sample_completed_)
        R_iNsTr_235_4228_update_completed_ <-& (R_iNsTr_235_4228_update_start_)
        // iNsTr_230
        $T[R_iNsTr_230_4229_sample_start_] 
        $T[R_iNsTr_230_4229_sample_completed_] 
        $T[R_iNsTr_230_4229_update_start_] 
        $T[R_iNsTr_230_4229_update_completed_] 
        // implicit reference
        R_iNsTr_230_4229_sample_start_ <-& ($entry)
        R_iNsTr_230_4229_sample_completed_ <-& (R_iNsTr_230_4229_sample_start_)
        R_iNsTr_230_4229_update_start_ <-& (R_iNsTr_230_4229_sample_completed_)
        R_iNsTr_230_4229_update_completed_ <-& (R_iNsTr_230_4229_update_start_)
        ADD_u32_u32_4230_sample_start_ <-& (R_iNsTr_235_4228_update_completed_)
        ADD_u32_u32_4230_sample_start_ <-& (R_iNsTr_230_4229_update_completed_)
        ;;[ADD_u32_u32_4230_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_4230_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_4230_sample_start_ &-> (ADD_u32_u32_4230_Sample)
        ADD_u32_u32_4230_sample_completed_ <-& (ADD_u32_u32_4230_Sample)
        ADD_u32_u32_4230_sample_completed_ &-> ($null)
        ADD_u32_u32_4230_update_start_ &-> (ADD_u32_u32_4230_Update)
        ADD_u32_u32_4230_update_completed_ <-& (ADD_u32_u32_4230_Update)
        // Target expression
        // (as target) iNsTr_236
        // iNsTr_236
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_4208_to_assign_stmt_4231__entry__ |-> (assign_stmt_4208_to_assign_stmt_4231)
      assign_stmt_4208_to_assign_stmt_4231__exit__ <-| (assign_stmt_4208_to_assign_stmt_4231)
      ::[assign_stmt_4252_to_assign_stmt_4271] 
      {
        // 		iNsTr_218 := ( $mux iNsTr_215 iNsTr_68  sbPeakx_x1 ) 
        //  file prog.linked.opt.aa, line 1486
        // Source expression
        // ( $mux iNsTr_215 iNsTr_68  sbPeakx_x1 ) 
        $T[MUX_4251_sample_start_] 
        $T[MUX_4251_sample_completed_] 
        $T[MUX_4251_update_start_] 
        $T[MUX_4251_update_completed_] 
        // iNsTr_215
        $T[R_iNsTr_215_4248_sample_start_] 
        $T[R_iNsTr_215_4248_sample_completed_] 
        $T[R_iNsTr_215_4248_update_start_] 
        $T[R_iNsTr_215_4248_update_completed_] 
        // implicit reference
        R_iNsTr_215_4248_sample_start_ <-& ($entry)
        R_iNsTr_215_4248_sample_completed_ <-& (R_iNsTr_215_4248_sample_start_)
        R_iNsTr_215_4248_update_start_ <-& (R_iNsTr_215_4248_sample_completed_)
        R_iNsTr_215_4248_update_completed_ <-& (R_iNsTr_215_4248_update_start_)
        // iNsTr_68
        $T[R_iNsTr_68_4249_sample_start_] 
        $T[R_iNsTr_68_4249_sample_completed_] 
        $T[R_iNsTr_68_4249_update_start_] 
        $T[R_iNsTr_68_4249_update_completed_] 
        // implicit reference
        R_iNsTr_68_4249_sample_start_ <-& ($entry)
        R_iNsTr_68_4249_sample_completed_ <-& (R_iNsTr_68_4249_sample_start_)
        R_iNsTr_68_4249_update_start_ <-& (R_iNsTr_68_4249_sample_completed_)
        R_iNsTr_68_4249_update_completed_ <-& (R_iNsTr_68_4249_update_start_)
        // sbPeakx_x1
        $T[R_sbPeakx_x1_4250_sample_start_] 
        $T[R_sbPeakx_x1_4250_sample_completed_] 
        $T[R_sbPeakx_x1_4250_update_start_] 
        $T[R_sbPeakx_x1_4250_update_completed_] 
        // implicit reference
        R_sbPeakx_x1_4250_sample_start_ <-& ($entry)
        R_sbPeakx_x1_4250_sample_completed_ <-& (R_sbPeakx_x1_4250_sample_start_)
        R_sbPeakx_x1_4250_update_start_ <-& (R_sbPeakx_x1_4250_sample_completed_)
        R_sbPeakx_x1_4250_update_completed_ <-& (R_sbPeakx_x1_4250_update_start_)
        MUX_4251_sample_start_ <-& (R_iNsTr_215_4248_update_completed_)
        MUX_4251_sample_start_ <-& (R_iNsTr_68_4249_update_completed_)
        MUX_4251_sample_start_ <-& (R_sbPeakx_x1_4250_update_completed_)
        ;;[MUX_4251_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4251_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4251_sample_start_ &-> (MUX_4251_start)
        MUX_4251_sample_completed_ <-& (MUX_4251_start)
        MUX_4251_update_start_ &-> (MUX_4251_complete)
        MUX_4251_update_completed_ <-& (MUX_4251_complete)
        MUX_4251_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_218
        // iNsTr_218
        // implicit reference
        // 		iNsTr_219 := (countx_x0 + ($bitcast ($uint<32>) _b11111111111111111111111111110001  ))
        //  file prog.linked.opt.aa, line 1487
        // Source expression
        // (countx_x0 + ($bitcast ($uint<32>) _b11111111111111111111111111110001  ))
        $T[ADD_u32_u32_4257_sample_start_] 
        $T[ADD_u32_u32_4257_sample_completed_] 
        $T[ADD_u32_u32_4257_update_start_] 
        $T[ADD_u32_u32_4257_update_completed_] 
        // countx_x0
        $T[R_countx_x0_4254_sample_start_] 
        $T[R_countx_x0_4254_sample_completed_] 
        $T[R_countx_x0_4254_update_start_] 
        $T[R_countx_x0_4254_update_completed_] 
        // implicit reference
        R_countx_x0_4254_sample_start_ <-& ($entry)
        R_countx_x0_4254_sample_completed_ <-& (R_countx_x0_4254_sample_start_)
        R_countx_x0_4254_update_start_ <-& (R_countx_x0_4254_sample_completed_)
        R_countx_x0_4254_update_completed_ <-& (R_countx_x0_4254_update_start_)
        ADD_u32_u32_4257_sample_start_ <-& (R_countx_x0_4254_update_completed_)
        ;;[ADD_u32_u32_4257_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_4257_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_4257_sample_start_ &-> (ADD_u32_u32_4257_Sample)
        ADD_u32_u32_4257_sample_completed_ <-& (ADD_u32_u32_4257_Sample)
        ADD_u32_u32_4257_sample_completed_ &-> ($null)
        ADD_u32_u32_4257_update_start_ &-> (ADD_u32_u32_4257_Update)
        ADD_u32_u32_4257_update_completed_ <-& (ADD_u32_u32_4257_Update)
        // Target expression
        // (as target) iNsTr_219
        // iNsTr_219
        // implicit reference
        // 		iNsTr_220 := ( $mux iNsTr_215 iNsTr_219  sbLocx_x1 ) 
        //  file prog.linked.opt.aa, line 1488
        // Source expression
        // ( $mux iNsTr_215 iNsTr_219  sbLocx_x1 ) 
        $T[MUX_4263_sample_start_] 
        $T[MUX_4263_sample_completed_] 
        $T[MUX_4263_update_start_] 
        $T[MUX_4263_update_completed_] 
        // iNsTr_215
        $T[R_iNsTr_215_4260_sample_start_] 
        $T[R_iNsTr_215_4260_sample_completed_] 
        $T[R_iNsTr_215_4260_update_start_] 
        $T[R_iNsTr_215_4260_update_completed_] 
        // implicit reference
        R_iNsTr_215_4260_sample_start_ <-& ($entry)
        R_iNsTr_215_4260_sample_completed_ <-& (R_iNsTr_215_4260_sample_start_)
        R_iNsTr_215_4260_update_start_ <-& (R_iNsTr_215_4260_sample_completed_)
        R_iNsTr_215_4260_update_completed_ <-& (R_iNsTr_215_4260_update_start_)
        // iNsTr_219
        $T[R_iNsTr_219_4261_sample_start_] 
        $T[R_iNsTr_219_4261_sample_completed_] 
        $T[R_iNsTr_219_4261_update_start_] 
        $T[R_iNsTr_219_4261_update_completed_] 
        // implicit reference
        R_iNsTr_219_4261_sample_start_ <-& (ADD_u32_u32_4257_update_completed_)
        R_iNsTr_219_4261_sample_completed_ <-& (R_iNsTr_219_4261_sample_start_)
        R_iNsTr_219_4261_update_start_ <-& (R_iNsTr_219_4261_sample_completed_)
        R_iNsTr_219_4261_update_completed_ <-& (R_iNsTr_219_4261_update_start_)
        // sbLocx_x1
        $T[R_sbLocx_x1_4262_sample_start_] 
        $T[R_sbLocx_x1_4262_sample_completed_] 
        $T[R_sbLocx_x1_4262_update_start_] 
        $T[R_sbLocx_x1_4262_update_completed_] 
        // implicit reference
        R_sbLocx_x1_4262_sample_start_ <-& ($entry)
        R_sbLocx_x1_4262_sample_completed_ <-& (R_sbLocx_x1_4262_sample_start_)
        R_sbLocx_x1_4262_update_start_ <-& (R_sbLocx_x1_4262_sample_completed_)
        R_sbLocx_x1_4262_update_completed_ <-& (R_sbLocx_x1_4262_update_start_)
        MUX_4263_sample_start_ <-& (R_iNsTr_215_4260_update_completed_)
        MUX_4263_sample_start_ <-& (R_iNsTr_219_4261_update_completed_)
        MUX_4263_sample_start_ <-& (R_sbLocx_x1_4262_update_completed_)
        ;;[MUX_4263_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4263_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4263_sample_start_ &-> (MUX_4263_start)
        MUX_4263_sample_completed_ <-& (MUX_4263_start)
        MUX_4263_update_start_ &-> (MUX_4263_complete)
        MUX_4263_update_completed_ <-& (MUX_4263_complete)
        MUX_4263_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_220
        // iNsTr_220
        // implicit reference
        // 		iNsTr_221 := (($bitcast ($int<32>) iNsTr_85 ) > ($bitcast ($int<32>) sb_countx_x1 ))
        //  file prog.linked.opt.aa, line 1489
        // Source expression
        // (($bitcast ($int<32>) iNsTr_85 ) > ($bitcast ($int<32>) sb_countx_x1 ))
        $T[SGT_i32_u1_4270_sample_start_] 
        $T[SGT_i32_u1_4270_sample_completed_] 
        $T[SGT_i32_u1_4270_update_start_] 
        $T[SGT_i32_u1_4270_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_85 )
        $T[type_cast_4267_sample_start_] 
        $T[type_cast_4267_sample_completed_] 
        $T[type_cast_4267_update_start_] 
        $T[type_cast_4267_update_completed_] 
        // iNsTr_85
        $T[R_iNsTr_85_4266_sample_start_] 
        $T[R_iNsTr_85_4266_sample_completed_] 
        $T[R_iNsTr_85_4266_update_start_] 
        $T[R_iNsTr_85_4266_update_completed_] 
        // implicit reference
        R_iNsTr_85_4266_sample_start_ <-& ($entry)
        R_iNsTr_85_4266_sample_completed_ <-& (R_iNsTr_85_4266_sample_start_)
        R_iNsTr_85_4266_update_start_ <-& (R_iNsTr_85_4266_sample_completed_)
        R_iNsTr_85_4266_update_completed_ <-& (R_iNsTr_85_4266_update_start_)
        type_cast_4267_sample_start_ <-& (R_iNsTr_85_4266_update_completed_)
        ;;[type_cast_4267_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4267_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4267_sample_start_ &-> (type_cast_4267_Sample)
        type_cast_4267_sample_completed_ <-& (type_cast_4267_Sample)
        type_cast_4267_sample_completed_ &-> ($null)
        type_cast_4267_update_start_ &-> (type_cast_4267_Update)
        type_cast_4267_update_completed_ <-& (type_cast_4267_Update)
        // flow-through
        type_cast_4267_update_start_ <-& (type_cast_4267_sample_completed_)
        // ($bitcast ($int<32>) sb_countx_x1 )
        $T[type_cast_4269_sample_start_] 
        $T[type_cast_4269_sample_completed_] 
        $T[type_cast_4269_update_start_] 
        $T[type_cast_4269_update_completed_] 
        // sb_countx_x1
        $T[R_sb_countx_x1_4268_sample_start_] 
        $T[R_sb_countx_x1_4268_sample_completed_] 
        $T[R_sb_countx_x1_4268_update_start_] 
        $T[R_sb_countx_x1_4268_update_completed_] 
        // implicit reference
        R_sb_countx_x1_4268_sample_start_ <-& ($entry)
        R_sb_countx_x1_4268_sample_completed_ <-& (R_sb_countx_x1_4268_sample_start_)
        R_sb_countx_x1_4268_update_start_ <-& (R_sb_countx_x1_4268_sample_completed_)
        R_sb_countx_x1_4268_update_completed_ <-& (R_sb_countx_x1_4268_update_start_)
        type_cast_4269_sample_start_ <-& (R_sb_countx_x1_4268_update_completed_)
        ;;[type_cast_4269_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4269_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4269_sample_start_ &-> (type_cast_4269_Sample)
        type_cast_4269_sample_completed_ <-& (type_cast_4269_Sample)
        type_cast_4269_sample_completed_ &-> ($null)
        type_cast_4269_update_start_ &-> (type_cast_4269_Update)
        type_cast_4269_update_completed_ <-& (type_cast_4269_Update)
        // flow-through
        type_cast_4269_update_start_ <-& (type_cast_4269_sample_completed_)
        SGT_i32_u1_4270_sample_start_ <-& (type_cast_4267_update_completed_)
        SGT_i32_u1_4270_sample_start_ <-& (type_cast_4269_update_completed_)
        ;;[SGT_i32_u1_4270_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_4270_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_4270_sample_start_ &-> (SGT_i32_u1_4270_Sample)
        SGT_i32_u1_4270_sample_completed_ <-& (SGT_i32_u1_4270_Sample)
        SGT_i32_u1_4270_sample_completed_ &-> ($null)
        SGT_i32_u1_4270_update_start_ &-> (SGT_i32_u1_4270_Update)
        SGT_i32_u1_4270_update_completed_ <-& (SGT_i32_u1_4270_Update)
        // Target expression
        // (as target) iNsTr_221
        // iNsTr_221
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_4252_to_assign_stmt_4271__entry__ |-> (assign_stmt_4252_to_assign_stmt_4271)
      assign_stmt_4252_to_assign_stmt_4271__exit__ <-| (assign_stmt_4252_to_assign_stmt_4271)
      // if-statement  
      //  file prog.linked.opt.aa, line 1490
      ;;[if_stmt_4272_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4272__entry__ |-> (if_stmt_4272_dead_link)
      if_stmt_4272__exit__ <-| (if_stmt_4272_dead_link)
      ;;[if_stmt_4272_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_4272__entry__ |-> (if_stmt_4272_eval_test)
      $P [R_iNsTr_221_4273_place]
      R_iNsTr_221_4273_place <-| (if_stmt_4272_eval_test)
      ;;[if_stmt_4272_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4272_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_221_4273_place |-> (if_stmt_4272_if_link if_stmt_4272_else_link)
      $P [bb_20_bb_21]
      bb_20_bb_21 <-| (if_stmt_4272_if_link)
      $P [bb_20_bb_22]
      bb_20_bb_22 <-| (if_stmt_4272_else_link)
      ::[assign_stmt_4287_to_assign_stmt_4310] 
      {
        // 		iNsTr_238 := ($bitcast ($uint<32>) (($bitcast ($int<32>) det_threshx_x2 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) )
        //  file prog.linked.opt.aa, line 1497
        // Source expression
        // ($bitcast ($uint<32>) (($bitcast ($int<32>) det_threshx_x2 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) )
        $T[type_cast_4286_sample_start_] 
        $T[type_cast_4286_sample_completed_] 
        $T[type_cast_4286_update_start_] 
        $T[type_cast_4286_update_completed_] 
        // (($bitcast ($int<32>) det_threshx_x2 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
        $T[ASHR_i32_i32_4285_sample_start_] 
        $T[ASHR_i32_i32_4285_sample_completed_] 
        $T[ASHR_i32_i32_4285_update_start_] 
        $T[ASHR_i32_i32_4285_update_completed_] 
        // ($bitcast ($int<32>) det_threshx_x2 )
        $T[type_cast_4281_sample_start_] 
        $T[type_cast_4281_sample_completed_] 
        $T[type_cast_4281_update_start_] 
        $T[type_cast_4281_update_completed_] 
        // det_threshx_x2
        $T[R_det_threshx_x2_4280_sample_start_] 
        $T[R_det_threshx_x2_4280_sample_completed_] 
        $T[R_det_threshx_x2_4280_update_start_] 
        $T[R_det_threshx_x2_4280_update_completed_] 
        // implicit reference
        R_det_threshx_x2_4280_sample_start_ <-& ($entry)
        R_det_threshx_x2_4280_sample_completed_ <-& (R_det_threshx_x2_4280_sample_start_)
        R_det_threshx_x2_4280_update_start_ <-& (R_det_threshx_x2_4280_sample_completed_)
        R_det_threshx_x2_4280_update_completed_ <-& (R_det_threshx_x2_4280_update_start_)
        type_cast_4281_sample_start_ <-& (R_det_threshx_x2_4280_update_completed_)
        ;;[type_cast_4281_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4281_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4281_sample_start_ &-> (type_cast_4281_Sample)
        type_cast_4281_sample_completed_ <-& (type_cast_4281_Sample)
        type_cast_4281_sample_completed_ &-> ($null)
        type_cast_4281_update_start_ &-> (type_cast_4281_Update)
        type_cast_4281_update_completed_ <-& (type_cast_4281_Update)
        // flow-through
        type_cast_4281_update_start_ <-& (type_cast_4281_sample_completed_)
        ASHR_i32_i32_4285_sample_start_ <-& (type_cast_4281_update_completed_)
        ;;[ASHR_i32_i32_4285_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ASHR_i32_i32_4285_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ASHR_i32_i32_4285_sample_start_ &-> (ASHR_i32_i32_4285_Sample)
        ASHR_i32_i32_4285_sample_completed_ <-& (ASHR_i32_i32_4285_Sample)
        ASHR_i32_i32_4285_sample_completed_ &-> ($null)
        ASHR_i32_i32_4285_update_start_ &-> (ASHR_i32_i32_4285_Update)
        ASHR_i32_i32_4285_update_completed_ <-& (ASHR_i32_i32_4285_Update)
        // flow-through
        ASHR_i32_i32_4285_update_start_ <-& (ASHR_i32_i32_4285_sample_completed_)
        type_cast_4286_sample_start_ <-& (ASHR_i32_i32_4285_update_completed_)
        ;;[type_cast_4286_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4286_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4286_sample_start_ &-> (type_cast_4286_Sample)
        type_cast_4286_sample_completed_ <-& (type_cast_4286_Sample)
        type_cast_4286_sample_completed_ &-> ($null)
        type_cast_4286_update_start_ &-> (type_cast_4286_Update)
        type_cast_4286_update_completed_ <-& (type_cast_4286_Update)
        // Target expression
        // (as target) iNsTr_238
        // iNsTr_238
        // implicit reference
        // 		xx_xnot := (iNsTr_209 ^ ($bitcast ($uint<1>) _b1  ))
        //  file prog.linked.opt.aa, line 1498
        // Source expression
        // (iNsTr_209 ^ ($bitcast ($uint<1>) _b1  ))
        $T[XOR_u1_u1_4292_sample_start_] 
        $T[XOR_u1_u1_4292_sample_completed_] 
        $T[XOR_u1_u1_4292_update_start_] 
        $T[XOR_u1_u1_4292_update_completed_] 
        // iNsTr_209
        $T[R_iNsTr_209_4289_sample_start_] 
        $T[R_iNsTr_209_4289_sample_completed_] 
        $T[R_iNsTr_209_4289_update_start_] 
        $T[R_iNsTr_209_4289_update_completed_] 
        // implicit reference
        R_iNsTr_209_4289_sample_start_ <-& ($entry)
        R_iNsTr_209_4289_sample_completed_ <-& (R_iNsTr_209_4289_sample_start_)
        R_iNsTr_209_4289_update_start_ <-& (R_iNsTr_209_4289_sample_completed_)
        R_iNsTr_209_4289_update_completed_ <-& (R_iNsTr_209_4289_update_start_)
        XOR_u1_u1_4292_sample_start_ <-& (R_iNsTr_209_4289_update_completed_)
        ;;[XOR_u1_u1_4292_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u1_u1_4292_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u1_u1_4292_sample_start_ &-> (XOR_u1_u1_4292_Sample)
        XOR_u1_u1_4292_sample_completed_ <-& (XOR_u1_u1_4292_Sample)
        XOR_u1_u1_4292_sample_completed_ &-> ($null)
        XOR_u1_u1_4292_update_start_ &-> (XOR_u1_u1_4292_Update)
        XOR_u1_u1_4292_update_completed_ <-& (XOR_u1_u1_4292_Update)
        // Target expression
        // (as target) xx_xnot
        // xx_xnot
        // implicit reference
        // 		iNsTr_239 := (iNsTr_208 | xx_xnot)
        //  file prog.linked.opt.aa, line 1499
        // Source expression
        // (iNsTr_208 | xx_xnot)
        $T[OR_u1_u1_4297_sample_start_] 
        $T[OR_u1_u1_4297_sample_completed_] 
        $T[OR_u1_u1_4297_update_start_] 
        $T[OR_u1_u1_4297_update_completed_] 
        // iNsTr_208
        $T[R_iNsTr_208_4295_sample_start_] 
        $T[R_iNsTr_208_4295_sample_completed_] 
        $T[R_iNsTr_208_4295_update_start_] 
        $T[R_iNsTr_208_4295_update_completed_] 
        // implicit reference
        R_iNsTr_208_4295_sample_start_ <-& ($entry)
        R_iNsTr_208_4295_sample_completed_ <-& (R_iNsTr_208_4295_sample_start_)
        R_iNsTr_208_4295_update_start_ <-& (R_iNsTr_208_4295_sample_completed_)
        R_iNsTr_208_4295_update_completed_ <-& (R_iNsTr_208_4295_update_start_)
        // xx_xnot
        $T[R_xx_xnot_4296_sample_start_] 
        $T[R_xx_xnot_4296_sample_completed_] 
        $T[R_xx_xnot_4296_update_start_] 
        $T[R_xx_xnot_4296_update_completed_] 
        // implicit reference
        R_xx_xnot_4296_sample_start_ <-& (XOR_u1_u1_4292_update_completed_)
        R_xx_xnot_4296_sample_completed_ <-& (R_xx_xnot_4296_sample_start_)
        R_xx_xnot_4296_update_start_ <-& (R_xx_xnot_4296_sample_completed_)
        R_xx_xnot_4296_update_completed_ <-& (R_xx_xnot_4296_update_start_)
        OR_u1_u1_4297_sample_start_ <-& (R_iNsTr_208_4295_update_completed_)
        OR_u1_u1_4297_sample_start_ <-& (R_xx_xnot_4296_update_completed_)
        ;;[OR_u1_u1_4297_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u1_u1_4297_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u1_u1_4297_sample_start_ &-> (OR_u1_u1_4297_Sample)
        OR_u1_u1_4297_sample_completed_ <-& (OR_u1_u1_4297_Sample)
        OR_u1_u1_4297_sample_completed_ &-> ($null)
        OR_u1_u1_4297_update_start_ &-> (OR_u1_u1_4297_Update)
        OR_u1_u1_4297_update_completed_ <-& (OR_u1_u1_4297_Update)
        // Target expression
        // (as target) iNsTr_239
        // iNsTr_239
        // implicit reference
        // 		iNsTr_240 := (($bitcast ($int<32>) iNsTr_218 ) > ($bitcast ($int<32>) iNsTr_238 ))
        //  file prog.linked.opt.aa, line 1500
        // Source expression
        // (($bitcast ($int<32>) iNsTr_218 ) > ($bitcast ($int<32>) iNsTr_238 ))
        $T[SGT_i32_u1_4304_sample_start_] 
        $T[SGT_i32_u1_4304_sample_completed_] 
        $T[SGT_i32_u1_4304_update_start_] 
        $T[SGT_i32_u1_4304_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_218 )
        $T[type_cast_4301_sample_start_] 
        $T[type_cast_4301_sample_completed_] 
        $T[type_cast_4301_update_start_] 
        $T[type_cast_4301_update_completed_] 
        // iNsTr_218
        $T[R_iNsTr_218_4300_sample_start_] 
        $T[R_iNsTr_218_4300_sample_completed_] 
        $T[R_iNsTr_218_4300_update_start_] 
        $T[R_iNsTr_218_4300_update_completed_] 
        // implicit reference
        R_iNsTr_218_4300_sample_start_ <-& ($entry)
        R_iNsTr_218_4300_sample_completed_ <-& (R_iNsTr_218_4300_sample_start_)
        R_iNsTr_218_4300_update_start_ <-& (R_iNsTr_218_4300_sample_completed_)
        R_iNsTr_218_4300_update_completed_ <-& (R_iNsTr_218_4300_update_start_)
        type_cast_4301_sample_start_ <-& (R_iNsTr_218_4300_update_completed_)
        ;;[type_cast_4301_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4301_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4301_sample_start_ &-> (type_cast_4301_Sample)
        type_cast_4301_sample_completed_ <-& (type_cast_4301_Sample)
        type_cast_4301_sample_completed_ &-> ($null)
        type_cast_4301_update_start_ &-> (type_cast_4301_Update)
        type_cast_4301_update_completed_ <-& (type_cast_4301_Update)
        // flow-through
        type_cast_4301_update_start_ <-& (type_cast_4301_sample_completed_)
        // ($bitcast ($int<32>) iNsTr_238 )
        $T[type_cast_4303_sample_start_] 
        $T[type_cast_4303_sample_completed_] 
        $T[type_cast_4303_update_start_] 
        $T[type_cast_4303_update_completed_] 
        // iNsTr_238
        $T[R_iNsTr_238_4302_sample_start_] 
        $T[R_iNsTr_238_4302_sample_completed_] 
        $T[R_iNsTr_238_4302_update_start_] 
        $T[R_iNsTr_238_4302_update_completed_] 
        // implicit reference
        R_iNsTr_238_4302_sample_start_ <-& (type_cast_4286_update_completed_)
        R_iNsTr_238_4302_sample_completed_ <-& (R_iNsTr_238_4302_sample_start_)
        R_iNsTr_238_4302_update_start_ <-& (R_iNsTr_238_4302_sample_completed_)
        R_iNsTr_238_4302_update_completed_ <-& (R_iNsTr_238_4302_update_start_)
        type_cast_4303_sample_start_ <-& (R_iNsTr_238_4302_update_completed_)
        ;;[type_cast_4303_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4303_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4303_sample_start_ &-> (type_cast_4303_Sample)
        type_cast_4303_sample_completed_ <-& (type_cast_4303_Sample)
        type_cast_4303_sample_completed_ &-> ($null)
        type_cast_4303_update_start_ &-> (type_cast_4303_Update)
        type_cast_4303_update_completed_ <-& (type_cast_4303_Update)
        // flow-through
        type_cast_4303_update_start_ <-& (type_cast_4303_sample_completed_)
        SGT_i32_u1_4304_sample_start_ <-& (type_cast_4301_update_completed_)
        SGT_i32_u1_4304_sample_start_ <-& (type_cast_4303_update_completed_)
        ;;[SGT_i32_u1_4304_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_4304_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_4304_sample_start_ &-> (SGT_i32_u1_4304_Sample)
        SGT_i32_u1_4304_sample_completed_ <-& (SGT_i32_u1_4304_Sample)
        SGT_i32_u1_4304_sample_completed_ &-> ($null)
        SGT_i32_u1_4304_update_start_ &-> (SGT_i32_u1_4304_Update)
        SGT_i32_u1_4304_update_completed_ <-& (SGT_i32_u1_4304_Update)
        // Target expression
        // (as target) iNsTr_240
        // iNsTr_240
        // implicit reference
        // 		xx_x := (iNsTr_240 & iNsTr_239)
        //  file prog.linked.opt.aa, line 1501
        // Source expression
        // (iNsTr_240 & iNsTr_239)
        $T[AND_u1_u1_4309_sample_start_] 
        $T[AND_u1_u1_4309_sample_completed_] 
        $T[AND_u1_u1_4309_update_start_] 
        $T[AND_u1_u1_4309_update_completed_] 
        // iNsTr_240
        $T[R_iNsTr_240_4307_sample_start_] 
        $T[R_iNsTr_240_4307_sample_completed_] 
        $T[R_iNsTr_240_4307_update_start_] 
        $T[R_iNsTr_240_4307_update_completed_] 
        // implicit reference
        R_iNsTr_240_4307_sample_start_ <-& (SGT_i32_u1_4304_update_completed_)
        R_iNsTr_240_4307_sample_completed_ <-& (R_iNsTr_240_4307_sample_start_)
        R_iNsTr_240_4307_update_start_ <-& (R_iNsTr_240_4307_sample_completed_)
        R_iNsTr_240_4307_update_completed_ <-& (R_iNsTr_240_4307_update_start_)
        // iNsTr_239
        $T[R_iNsTr_239_4308_sample_start_] 
        $T[R_iNsTr_239_4308_sample_completed_] 
        $T[R_iNsTr_239_4308_update_start_] 
        $T[R_iNsTr_239_4308_update_completed_] 
        // implicit reference
        R_iNsTr_239_4308_sample_start_ <-& (OR_u1_u1_4297_update_completed_)
        R_iNsTr_239_4308_sample_completed_ <-& (R_iNsTr_239_4308_sample_start_)
        R_iNsTr_239_4308_update_start_ <-& (R_iNsTr_239_4308_sample_completed_)
        R_iNsTr_239_4308_update_completed_ <-& (R_iNsTr_239_4308_update_start_)
        AND_u1_u1_4309_sample_start_ <-& (R_iNsTr_240_4307_update_completed_)
        AND_u1_u1_4309_sample_start_ <-& (R_iNsTr_239_4308_update_completed_)
        ;;[AND_u1_u1_4309_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_4309_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_4309_sample_start_ &-> (AND_u1_u1_4309_Sample)
        AND_u1_u1_4309_sample_completed_ <-& (AND_u1_u1_4309_Sample)
        AND_u1_u1_4309_sample_completed_ &-> ($null)
        AND_u1_u1_4309_update_start_ &-> (AND_u1_u1_4309_Update)
        AND_u1_u1_4309_update_completed_ <-& (AND_u1_u1_4309_Update)
        // Target expression
        // (as target) xx_x
        // xx_x
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_4287_to_assign_stmt_4310__entry__ |-> (assign_stmt_4287_to_assign_stmt_4310)
      assign_stmt_4287_to_assign_stmt_4310__exit__ <-| (assign_stmt_4287_to_assign_stmt_4310)
      ::[assign_stmt_4325_to_assign_stmt_4356] 
      {
        // 		iNsTr_243 := (iNsTr_211 | iNsTr_242)
        //  file prog.linked.opt.aa, line 1506
        // Source expression
        // (iNsTr_211 | iNsTr_242)
        $T[OR_u1_u1_4324_sample_start_] 
        $T[OR_u1_u1_4324_sample_completed_] 
        $T[OR_u1_u1_4324_update_start_] 
        $T[OR_u1_u1_4324_update_completed_] 
        // iNsTr_211
        $T[R_iNsTr_211_4322_sample_start_] 
        $T[R_iNsTr_211_4322_sample_completed_] 
        $T[R_iNsTr_211_4322_update_start_] 
        $T[R_iNsTr_211_4322_update_completed_] 
        // implicit reference
        R_iNsTr_211_4322_sample_start_ <-& ($entry)
        R_iNsTr_211_4322_sample_completed_ <-& (R_iNsTr_211_4322_sample_start_)
        R_iNsTr_211_4322_update_start_ <-& (R_iNsTr_211_4322_sample_completed_)
        R_iNsTr_211_4322_update_completed_ <-& (R_iNsTr_211_4322_update_start_)
        // iNsTr_242
        $T[R_iNsTr_242_4323_sample_start_] 
        $T[R_iNsTr_242_4323_sample_completed_] 
        $T[R_iNsTr_242_4323_update_start_] 
        $T[R_iNsTr_242_4323_update_completed_] 
        // implicit reference
        R_iNsTr_242_4323_sample_start_ <-& ($entry)
        R_iNsTr_242_4323_sample_completed_ <-& (R_iNsTr_242_4323_sample_start_)
        R_iNsTr_242_4323_update_start_ <-& (R_iNsTr_242_4323_sample_completed_)
        R_iNsTr_242_4323_update_completed_ <-& (R_iNsTr_242_4323_update_start_)
        OR_u1_u1_4324_sample_start_ <-& (R_iNsTr_211_4322_update_completed_)
        OR_u1_u1_4324_sample_start_ <-& (R_iNsTr_242_4323_update_completed_)
        ;;[OR_u1_u1_4324_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u1_u1_4324_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u1_u1_4324_sample_start_ &-> (OR_u1_u1_4324_Sample)
        OR_u1_u1_4324_sample_completed_ <-& (OR_u1_u1_4324_Sample)
        OR_u1_u1_4324_sample_completed_ &-> ($null)
        OR_u1_u1_4324_update_start_ &-> (OR_u1_u1_4324_Update)
        OR_u1_u1_4324_update_completed_ <-& (OR_u1_u1_4324_Update)
        // Target expression
        // (as target) iNsTr_243
        // iNsTr_243
        // implicit reference
        // 		iNsTr_244 := ( $mux iNsTr_211 iNsTr_68  qrsValx_x1 ) 
        //  file prog.linked.opt.aa, line 1507
        // Source expression
        // ( $mux iNsTr_211 iNsTr_68  qrsValx_x1 ) 
        $T[MUX_4330_sample_start_] 
        $T[MUX_4330_sample_completed_] 
        $T[MUX_4330_update_start_] 
        $T[MUX_4330_update_completed_] 
        // iNsTr_211
        $T[R_iNsTr_211_4327_sample_start_] 
        $T[R_iNsTr_211_4327_sample_completed_] 
        $T[R_iNsTr_211_4327_update_start_] 
        $T[R_iNsTr_211_4327_update_completed_] 
        // implicit reference
        R_iNsTr_211_4327_sample_start_ <-& ($entry)
        R_iNsTr_211_4327_sample_completed_ <-& (R_iNsTr_211_4327_sample_start_)
        R_iNsTr_211_4327_update_start_ <-& (R_iNsTr_211_4327_sample_completed_)
        R_iNsTr_211_4327_update_completed_ <-& (R_iNsTr_211_4327_update_start_)
        // iNsTr_68
        $T[R_iNsTr_68_4328_sample_start_] 
        $T[R_iNsTr_68_4328_sample_completed_] 
        $T[R_iNsTr_68_4328_update_start_] 
        $T[R_iNsTr_68_4328_update_completed_] 
        // implicit reference
        R_iNsTr_68_4328_sample_start_ <-& ($entry)
        R_iNsTr_68_4328_sample_completed_ <-& (R_iNsTr_68_4328_sample_start_)
        R_iNsTr_68_4328_update_start_ <-& (R_iNsTr_68_4328_sample_completed_)
        R_iNsTr_68_4328_update_completed_ <-& (R_iNsTr_68_4328_update_start_)
        // qrsValx_x1
        $T[R_qrsValx_x1_4329_sample_start_] 
        $T[R_qrsValx_x1_4329_sample_completed_] 
        $T[R_qrsValx_x1_4329_update_start_] 
        $T[R_qrsValx_x1_4329_update_completed_] 
        // implicit reference
        R_qrsValx_x1_4329_sample_start_ <-& ($entry)
        R_qrsValx_x1_4329_sample_completed_ <-& (R_qrsValx_x1_4329_sample_start_)
        R_qrsValx_x1_4329_update_start_ <-& (R_qrsValx_x1_4329_sample_completed_)
        R_qrsValx_x1_4329_update_completed_ <-& (R_qrsValx_x1_4329_update_start_)
        MUX_4330_sample_start_ <-& (R_iNsTr_211_4327_update_completed_)
        MUX_4330_sample_start_ <-& (R_iNsTr_68_4328_update_completed_)
        MUX_4330_sample_start_ <-& (R_qrsValx_x1_4329_update_completed_)
        ;;[MUX_4330_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4330_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4330_sample_start_ &-> (MUX_4330_start)
        MUX_4330_sample_completed_ <-& (MUX_4330_start)
        MUX_4330_update_start_ &-> (MUX_4330_complete)
        MUX_4330_update_completed_ <-& (MUX_4330_complete)
        MUX_4330_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_244
        // iNsTr_244
        // implicit reference
        // 		iNsTr_245 := ( $mux iNsTr_211 iNsTr_219  rrValx_x1 ) 
        //  file prog.linked.opt.aa, line 1508
        // Source expression
        // ( $mux iNsTr_211 iNsTr_219  rrValx_x1 ) 
        $T[MUX_4336_sample_start_] 
        $T[MUX_4336_sample_completed_] 
        $T[MUX_4336_update_start_] 
        $T[MUX_4336_update_completed_] 
        // iNsTr_211
        $T[R_iNsTr_211_4333_sample_start_] 
        $T[R_iNsTr_211_4333_sample_completed_] 
        $T[R_iNsTr_211_4333_update_start_] 
        $T[R_iNsTr_211_4333_update_completed_] 
        // implicit reference
        R_iNsTr_211_4333_sample_start_ <-& ($entry)
        R_iNsTr_211_4333_sample_completed_ <-& (R_iNsTr_211_4333_sample_start_)
        R_iNsTr_211_4333_update_start_ <-& (R_iNsTr_211_4333_sample_completed_)
        R_iNsTr_211_4333_update_completed_ <-& (R_iNsTr_211_4333_update_start_)
        // iNsTr_219
        $T[R_iNsTr_219_4334_sample_start_] 
        $T[R_iNsTr_219_4334_sample_completed_] 
        $T[R_iNsTr_219_4334_update_start_] 
        $T[R_iNsTr_219_4334_update_completed_] 
        // implicit reference
        R_iNsTr_219_4334_sample_start_ <-& ($entry)
        R_iNsTr_219_4334_sample_completed_ <-& (R_iNsTr_219_4334_sample_start_)
        R_iNsTr_219_4334_update_start_ <-& (R_iNsTr_219_4334_sample_completed_)
        R_iNsTr_219_4334_update_completed_ <-& (R_iNsTr_219_4334_update_start_)
        // rrValx_x1
        $T[R_rrValx_x1_4335_sample_start_] 
        $T[R_rrValx_x1_4335_sample_completed_] 
        $T[R_rrValx_x1_4335_update_start_] 
        $T[R_rrValx_x1_4335_update_completed_] 
        // implicit reference
        R_rrValx_x1_4335_sample_start_ <-& ($entry)
        R_rrValx_x1_4335_sample_completed_ <-& (R_rrValx_x1_4335_sample_start_)
        R_rrValx_x1_4335_update_start_ <-& (R_rrValx_x1_4335_sample_completed_)
        R_rrValx_x1_4335_update_completed_ <-& (R_rrValx_x1_4335_update_start_)
        MUX_4336_sample_start_ <-& (R_iNsTr_211_4333_update_completed_)
        MUX_4336_sample_start_ <-& (R_iNsTr_219_4334_update_completed_)
        MUX_4336_sample_start_ <-& (R_rrValx_x1_4335_update_completed_)
        ;;[MUX_4336_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4336_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4336_sample_start_ &-> (MUX_4336_start)
        MUX_4336_sample_completed_ <-& (MUX_4336_start)
        MUX_4336_update_start_ &-> (MUX_4336_complete)
        MUX_4336_update_completed_ <-& (MUX_4336_complete)
        MUX_4336_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_245
        // iNsTr_245
        // implicit reference
        // 		iNsTr_246 := ( $mux iNsTr_211 ($bitcast ($uint<32>) _b00000000000000000000000000010000  )  iNsTr_85 ) 
        //  file prog.linked.opt.aa, line 1509
        // Source expression
        // ( $mux iNsTr_211 ($bitcast ($uint<32>) _b00000000000000000000000000010000  )  iNsTr_85 ) 
        $T[MUX_4343_sample_start_] 
        $T[MUX_4343_sample_completed_] 
        $T[MUX_4343_update_start_] 
        $T[MUX_4343_update_completed_] 
        // iNsTr_211
        $T[R_iNsTr_211_4339_sample_start_] 
        $T[R_iNsTr_211_4339_sample_completed_] 
        $T[R_iNsTr_211_4339_update_start_] 
        $T[R_iNsTr_211_4339_update_completed_] 
        // implicit reference
        R_iNsTr_211_4339_sample_start_ <-& ($entry)
        R_iNsTr_211_4339_sample_completed_ <-& (R_iNsTr_211_4339_sample_start_)
        R_iNsTr_211_4339_update_start_ <-& (R_iNsTr_211_4339_sample_completed_)
        R_iNsTr_211_4339_update_completed_ <-& (R_iNsTr_211_4339_update_start_)
        // iNsTr_85
        $T[R_iNsTr_85_4342_sample_start_] 
        $T[R_iNsTr_85_4342_sample_completed_] 
        $T[R_iNsTr_85_4342_update_start_] 
        $T[R_iNsTr_85_4342_update_completed_] 
        // implicit reference
        R_iNsTr_85_4342_sample_start_ <-& ($entry)
        R_iNsTr_85_4342_sample_completed_ <-& (R_iNsTr_85_4342_sample_start_)
        R_iNsTr_85_4342_update_start_ <-& (R_iNsTr_85_4342_sample_completed_)
        R_iNsTr_85_4342_update_completed_ <-& (R_iNsTr_85_4342_update_start_)
        MUX_4343_sample_start_ <-& (R_iNsTr_211_4339_update_completed_)
        MUX_4343_sample_start_ <-& (R_iNsTr_85_4342_update_completed_)
        ;;[MUX_4343_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4343_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4343_sample_start_ &-> (MUX_4343_start)
        MUX_4343_sample_completed_ <-& (MUX_4343_start)
        MUX_4343_update_start_ &-> (MUX_4343_complete)
        MUX_4343_update_completed_ <-& (MUX_4343_complete)
        MUX_4343_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_246
        // iNsTr_246
        // implicit reference
        // 		iNsTr_247 := ( $mux iNsTr_242 iNsTr_218  iNsTr_244 ) 
        //  file prog.linked.opt.aa, line 1510
        // Source expression
        // ( $mux iNsTr_242 iNsTr_218  iNsTr_244 ) 
        $T[MUX_4349_sample_start_] 
        $T[MUX_4349_sample_completed_] 
        $T[MUX_4349_update_start_] 
        $T[MUX_4349_update_completed_] 
        // iNsTr_242
        $T[R_iNsTr_242_4346_sample_start_] 
        $T[R_iNsTr_242_4346_sample_completed_] 
        $T[R_iNsTr_242_4346_update_start_] 
        $T[R_iNsTr_242_4346_update_completed_] 
        // implicit reference
        R_iNsTr_242_4346_sample_start_ <-& ($entry)
        R_iNsTr_242_4346_sample_completed_ <-& (R_iNsTr_242_4346_sample_start_)
        R_iNsTr_242_4346_update_start_ <-& (R_iNsTr_242_4346_sample_completed_)
        R_iNsTr_242_4346_update_completed_ <-& (R_iNsTr_242_4346_update_start_)
        // iNsTr_218
        $T[R_iNsTr_218_4347_sample_start_] 
        $T[R_iNsTr_218_4347_sample_completed_] 
        $T[R_iNsTr_218_4347_update_start_] 
        $T[R_iNsTr_218_4347_update_completed_] 
        // implicit reference
        R_iNsTr_218_4347_sample_start_ <-& ($entry)
        R_iNsTr_218_4347_sample_completed_ <-& (R_iNsTr_218_4347_sample_start_)
        R_iNsTr_218_4347_update_start_ <-& (R_iNsTr_218_4347_sample_completed_)
        R_iNsTr_218_4347_update_completed_ <-& (R_iNsTr_218_4347_update_start_)
        // iNsTr_244
        $T[R_iNsTr_244_4348_sample_start_] 
        $T[R_iNsTr_244_4348_sample_completed_] 
        $T[R_iNsTr_244_4348_update_start_] 
        $T[R_iNsTr_244_4348_update_completed_] 
        // implicit reference
        R_iNsTr_244_4348_sample_start_ <-& (MUX_4330_update_completed_)
        R_iNsTr_244_4348_sample_completed_ <-& (R_iNsTr_244_4348_sample_start_)
        R_iNsTr_244_4348_update_start_ <-& (R_iNsTr_244_4348_sample_completed_)
        R_iNsTr_244_4348_update_completed_ <-& (R_iNsTr_244_4348_update_start_)
        MUX_4349_sample_start_ <-& (R_iNsTr_242_4346_update_completed_)
        MUX_4349_sample_start_ <-& (R_iNsTr_218_4347_update_completed_)
        MUX_4349_sample_start_ <-& (R_iNsTr_244_4348_update_completed_)
        ;;[MUX_4349_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4349_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4349_sample_start_ &-> (MUX_4349_start)
        MUX_4349_sample_completed_ <-& (MUX_4349_start)
        MUX_4349_update_start_ &-> (MUX_4349_complete)
        MUX_4349_update_completed_ <-& (MUX_4349_complete)
        MUX_4349_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_247
        // iNsTr_247
        // implicit reference
        // 		iNsTr_248 := ( $mux iNsTr_242 iNsTr_220  iNsTr_245 ) 
        //  file prog.linked.opt.aa, line 1511
        // Source expression
        // ( $mux iNsTr_242 iNsTr_220  iNsTr_245 ) 
        $T[MUX_4355_sample_start_] 
        $T[MUX_4355_sample_completed_] 
        $T[MUX_4355_update_start_] 
        $T[MUX_4355_update_completed_] 
        // iNsTr_242
        $T[R_iNsTr_242_4352_sample_start_] 
        $T[R_iNsTr_242_4352_sample_completed_] 
        $T[R_iNsTr_242_4352_update_start_] 
        $T[R_iNsTr_242_4352_update_completed_] 
        // implicit reference
        R_iNsTr_242_4352_sample_start_ <-& ($entry)
        R_iNsTr_242_4352_sample_completed_ <-& (R_iNsTr_242_4352_sample_start_)
        R_iNsTr_242_4352_update_start_ <-& (R_iNsTr_242_4352_sample_completed_)
        R_iNsTr_242_4352_update_completed_ <-& (R_iNsTr_242_4352_update_start_)
        // iNsTr_220
        $T[R_iNsTr_220_4353_sample_start_] 
        $T[R_iNsTr_220_4353_sample_completed_] 
        $T[R_iNsTr_220_4353_update_start_] 
        $T[R_iNsTr_220_4353_update_completed_] 
        // implicit reference
        R_iNsTr_220_4353_sample_start_ <-& ($entry)
        R_iNsTr_220_4353_sample_completed_ <-& (R_iNsTr_220_4353_sample_start_)
        R_iNsTr_220_4353_update_start_ <-& (R_iNsTr_220_4353_sample_completed_)
        R_iNsTr_220_4353_update_completed_ <-& (R_iNsTr_220_4353_update_start_)
        // iNsTr_245
        $T[R_iNsTr_245_4354_sample_start_] 
        $T[R_iNsTr_245_4354_sample_completed_] 
        $T[R_iNsTr_245_4354_update_start_] 
        $T[R_iNsTr_245_4354_update_completed_] 
        // implicit reference
        R_iNsTr_245_4354_sample_start_ <-& (MUX_4336_update_completed_)
        R_iNsTr_245_4354_sample_completed_ <-& (R_iNsTr_245_4354_sample_start_)
        R_iNsTr_245_4354_update_start_ <-& (R_iNsTr_245_4354_sample_completed_)
        R_iNsTr_245_4354_update_completed_ <-& (R_iNsTr_245_4354_update_start_)
        MUX_4355_sample_start_ <-& (R_iNsTr_242_4352_update_completed_)
        MUX_4355_sample_start_ <-& (R_iNsTr_220_4353_update_completed_)
        MUX_4355_sample_start_ <-& (R_iNsTr_245_4354_update_completed_)
        ;;[MUX_4355_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4355_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4355_sample_start_ &-> (MUX_4355_start)
        MUX_4355_sample_completed_ <-& (MUX_4355_start)
        MUX_4355_update_start_ &-> (MUX_4355_complete)
        MUX_4355_update_completed_ <-& (MUX_4355_complete)
        MUX_4355_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_248
        // iNsTr_248
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_4325_to_assign_stmt_4356__entry__ |-> (assign_stmt_4325_to_assign_stmt_4356)
      assign_stmt_4325_to_assign_stmt_4356__exit__ <-| (assign_stmt_4325_to_assign_stmt_4356)
      // if-statement  
      //  file prog.linked.opt.aa, line 1512
      ;;[if_stmt_4357_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4357__entry__ |-> (if_stmt_4357_dead_link)
      if_stmt_4357__exit__ <-| (if_stmt_4357_dead_link)
      ;;[if_stmt_4357_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_4357__entry__ |-> (if_stmt_4357_eval_test)
      $P [R_iNsTr_243_4358_place]
      R_iNsTr_243_4358_place <-| (if_stmt_4357_eval_test)
      ;;[if_stmt_4357_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4357_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_243_4358_place |-> (if_stmt_4357_if_link if_stmt_4357_else_link)
      $P [bb_22_bb_24]
      bb_22_bb_24 <-| (if_stmt_4357_if_link)
      $P [bb_22_xx_xthread27]
      bb_22_xx_xthread27 <-| (if_stmt_4357_else_link)
      ::[assign_stmt_4366] 
      {
        // 		iNsTr_277 := maxDer
        //  file prog.linked.opt.aa, line 1519
        // Source expression
        // maxDer
        $T[LOAD_maxDer_4365_sample_start_] 
        $T[LOAD_maxDer_4365_sample_completed_] 
        $T[LOAD_maxDer_4365_update_start_] 
        $T[LOAD_maxDer_4365_update_completed_] 
        $T[LOAD_maxDer_4365_sample_start_] 
        $T[LOAD_maxDer_4365_sample_completed_] 
        $T[LOAD_maxDer_4365_update_start_] 
        $T[LOAD_maxDer_4365_update_completed_] 
        $T[LOAD_maxDer_4365_word_address_calculated] 
        $T[LOAD_maxDer_4365_root_address_calculated] 
        LOAD_maxDer_4365_word_address_calculated <-& (LOAD_maxDer_4365_root_address_calculated)
        ;;[LOAD_maxDer_4365_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_maxDer_4365_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_maxDer_4365_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_maxDer_4365_sample_start_ <-& (LOAD_maxDer_4365_word_address_calculated)
        LOAD_maxDer_4365_sample_start_ &-> (LOAD_maxDer_4365_Sample)
        LOAD_maxDer_4365_sample_completed_ <-& (LOAD_maxDer_4365_Sample)
        LOAD_maxDer_4365_sample_completed_ &-> ($null)
        LOAD_maxDer_4365_update_start_ &-> (LOAD_maxDer_4365_Update)
        LOAD_maxDer_4365_update_completed_ <-& (LOAD_maxDer_4365_Update)
        // Target expression
        // (as target) iNsTr_277
        // iNsTr_277
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_4366__entry__ |-> (assign_stmt_4366)
      assign_stmt_4366__exit__ <-| (assign_stmt_4366)
      ::[assign_stmt_4371_to_assign_stmt_4442] 
      {
        // 		iNsTr_250 := QRSbuff_ptr
        //  file prog.linked.opt.aa, line 1523
        // Source expression
        // QRSbuff_ptr
        $T[LOAD_QRSbuff_ptr_4370_sample_start_] 
        $T[LOAD_QRSbuff_ptr_4370_sample_completed_] 
        $T[LOAD_QRSbuff_ptr_4370_update_start_] 
        $T[LOAD_QRSbuff_ptr_4370_update_completed_] 
        $T[LOAD_QRSbuff_ptr_4370_sample_start_] 
        $T[LOAD_QRSbuff_ptr_4370_sample_completed_] 
        $T[LOAD_QRSbuff_ptr_4370_update_start_] 
        $T[LOAD_QRSbuff_ptr_4370_update_completed_] 
        $T[LOAD_QRSbuff_ptr_4370_word_address_calculated] 
        $T[LOAD_QRSbuff_ptr_4370_root_address_calculated] 
        LOAD_QRSbuff_ptr_4370_word_address_calculated <-& (LOAD_QRSbuff_ptr_4370_root_address_calculated)
        ;;[LOAD_QRSbuff_ptr_4370_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_QRSbuff_ptr_4370_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_QRSbuff_ptr_4370_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_QRSbuff_ptr_4370_sample_start_ <-& (LOAD_QRSbuff_ptr_4370_word_address_calculated)
        LOAD_QRSbuff_ptr_4370_sample_start_ &-> (LOAD_QRSbuff_ptr_4370_Sample)
        LOAD_QRSbuff_ptr_4370_sample_completed_ <-& (LOAD_QRSbuff_ptr_4370_Sample)
        LOAD_QRSbuff_ptr_4370_sample_completed_ &-> ($null)
        LOAD_QRSbuff_ptr_4370_update_start_ &-> (LOAD_QRSbuff_ptr_4370_Update)
        LOAD_QRSbuff_ptr_4370_update_completed_ <-& (LOAD_QRSbuff_ptr_4370_Update)
        // Target expression
        // (as target) iNsTr_250
        // iNsTr_250
        // implicit reference
        // 		iNsTr_251 := RRbuff_ptr
        //  file prog.linked.opt.aa, line 1524
        // Source expression
        // RRbuff_ptr
        $T[LOAD_RRbuff_ptr_4373_sample_start_] 
        $T[LOAD_RRbuff_ptr_4373_sample_completed_] 
        $T[LOAD_RRbuff_ptr_4373_update_start_] 
        $T[LOAD_RRbuff_ptr_4373_update_completed_] 
        $T[LOAD_RRbuff_ptr_4373_sample_start_] 
        $T[LOAD_RRbuff_ptr_4373_sample_completed_] 
        $T[LOAD_RRbuff_ptr_4373_update_start_] 
        $T[LOAD_RRbuff_ptr_4373_update_completed_] 
        $T[LOAD_RRbuff_ptr_4373_word_address_calculated] 
        $T[LOAD_RRbuff_ptr_4373_root_address_calculated] 
        LOAD_RRbuff_ptr_4373_word_address_calculated <-& (LOAD_RRbuff_ptr_4373_root_address_calculated)
        ;;[LOAD_RRbuff_ptr_4373_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_RRbuff_ptr_4373_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_RRbuff_ptr_4373_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_RRbuff_ptr_4373_sample_start_ <-& (LOAD_RRbuff_ptr_4373_word_address_calculated)
        LOAD_RRbuff_ptr_4373_sample_start_ &-> (LOAD_RRbuff_ptr_4373_Sample)
        LOAD_RRbuff_ptr_4373_sample_completed_ <-& (LOAD_RRbuff_ptr_4373_Sample)
        LOAD_RRbuff_ptr_4373_sample_completed_ &-> ($null)
        LOAD_RRbuff_ptr_4373_update_start_ &-> (LOAD_RRbuff_ptr_4373_Update)
        LOAD_RRbuff_ptr_4373_update_completed_ <-& (LOAD_RRbuff_ptr_4373_Update)
        // Target expression
        // (as target) iNsTr_251
        // iNsTr_251
        // implicit reference
        // 		iNsTr_252 := @(QRSbuff[iNsTr_250])
        //  file prog.linked.opt.aa, line 1525
        // Source expression
        // @(QRSbuff[iNsTr_250])
        $T[addr_of_4378_sample_start_] 
        $T[addr_of_4378_sample_completed_] 
        $T[addr_of_4378_update_start_] 
        $T[addr_of_4378_update_completed_] 
        $T[array_obj_ref_4377_root_address_calculated] 
        $T[array_obj_ref_4377_offset_calculated] 
        $T[array_obj_ref_4377_index_resized_0] 
        $T[array_obj_ref_4377_index_scaled_0] 
        // iNsTr_250
        $T[R_iNsTr_250_4376_sample_start_] 
        $T[R_iNsTr_250_4376_sample_completed_] 
        $T[R_iNsTr_250_4376_update_start_] 
        $T[R_iNsTr_250_4376_update_completed_] 
        // implicit reference
        R_iNsTr_250_4376_sample_start_ <-& (LOAD_QRSbuff_ptr_4370_update_completed_)
        R_iNsTr_250_4376_sample_completed_ <-& (R_iNsTr_250_4376_sample_start_)
        R_iNsTr_250_4376_update_start_ <-& (R_iNsTr_250_4376_sample_completed_)
        R_iNsTr_250_4376_update_completed_ <-& (R_iNsTr_250_4376_update_start_)
        ;;[array_obj_ref_4377_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        R_iNsTr_250_4376_update_completed_ &-> (array_obj_ref_4377_index_resize_0)
        array_obj_ref_4377_index_resized_0 <-& (array_obj_ref_4377_index_resize_0)
        ;;[array_obj_ref_4377_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_4377_index_resized_0 &-> (array_obj_ref_4377_index_scale_0)
        array_obj_ref_4377_index_scaled_0 <-& (array_obj_ref_4377_index_scale_0)
        ;;[array_obj_ref_4377_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_4377_index_scaled_0 &-> (array_obj_ref_4377_final_index_sum_regn)
        array_obj_ref_4377_offset_calculated <-& (array_obj_ref_4377_final_index_sum_regn)
        $T[array_obj_ref_4377_base_plus_offset_sample_start] 
        $T[array_obj_ref_4377_base_plus_offset_sample_complete] 
        $T[array_obj_ref_4377_base_plus_offset_update_start] 
        $T[array_obj_ref_4377_base_plus_offset_update_complete] 
        ;;[array_obj_ref_4377_base_plus_offset_sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[array_obj_ref_4377_base_plus_offset_update] 
        {
          $T [cr] $T [ca]
        }
        array_obj_ref_4377_base_plus_offset_sample_start &-> (array_obj_ref_4377_base_plus_offset_sample)
        array_obj_ref_4377_base_plus_offset_update_start &-> (array_obj_ref_4377_base_plus_offset_update)
        array_obj_ref_4377_base_plus_offset_sample_complete <-& (array_obj_ref_4377_base_plus_offset_sample)
        array_obj_ref_4377_base_plus_offset_update_complete <-& (array_obj_ref_4377_base_plus_offset_update)
        array_obj_ref_4377_offset_calculated &-> (array_obj_ref_4377_base_plus_offset_sample_start)
        array_obj_ref_4377_root_address_calculated <-& (array_obj_ref_4377_base_plus_offset_update_complete)
        ;;[addr_of_4378_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_4378_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_4378_sample_start_ <-& (array_obj_ref_4377_root_address_calculated)
        addr_of_4378_sample_start_ &-> (addr_of_4378_request)
        addr_of_4378_sample_completed_ <-& (addr_of_4378_request)
        addr_of_4378_update_start_ &-> (addr_of_4378_complete)
        addr_of_4378_update_completed_ <-& (addr_of_4378_complete)
        // Target expression
        // (as target) iNsTr_252
        // iNsTr_252
        // implicit reference
        // 		->(iNsTr_252) := iNsTr_247
        //  file prog.linked.opt.aa, line 1526
        // Source expression
        // iNsTr_247
        $T[R_iNsTr_247_4382_sample_start_] 
        $T[R_iNsTr_247_4382_sample_completed_] 
        $T[R_iNsTr_247_4382_update_start_] 
        $T[R_iNsTr_247_4382_update_completed_] 
        // implicit reference
        R_iNsTr_247_4382_sample_start_ <-& ($entry)
        R_iNsTr_247_4382_sample_completed_ <-& (R_iNsTr_247_4382_sample_start_)
        R_iNsTr_247_4382_update_start_ <-& (R_iNsTr_247_4382_sample_completed_)
        R_iNsTr_247_4382_update_completed_ <-& (R_iNsTr_247_4382_update_start_)
        // Target expression
        // ->(iNsTr_252)
        $T[ptr_deref_4381_sample_start_] 
        $T[ptr_deref_4381_sample_completed_] 
        $T[ptr_deref_4381_update_start_] 
        $T[ptr_deref_4381_update_completed_] 
        $T[ptr_deref_4381_base_address_calculated] 
        // iNsTr_252
        $T[R_iNsTr_252_4380_sample_start_] 
        $T[R_iNsTr_252_4380_sample_completed_] 
        $T[R_iNsTr_252_4380_update_start_] 
        $T[R_iNsTr_252_4380_update_completed_] 
        // implicit reference
        R_iNsTr_252_4380_sample_start_ <-& (addr_of_4378_update_completed_)
        R_iNsTr_252_4380_sample_completed_ <-& (R_iNsTr_252_4380_sample_start_)
        R_iNsTr_252_4380_update_start_ <-& (R_iNsTr_252_4380_sample_completed_)
        R_iNsTr_252_4380_update_completed_ <-& (R_iNsTr_252_4380_update_start_)
        $T[ptr_deref_4381_word_address_calculated] 
        $T[ptr_deref_4381_root_address_calculated] 
        $T[ptr_deref_4381_base_address_resized] 
        ;;[ptr_deref_4381_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_4381_base_address_calculated &-> (ptr_deref_4381_base_addr_resize)
        ptr_deref_4381_base_address_resized <-& (ptr_deref_4381_base_addr_resize)
        ;;[ptr_deref_4381_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_4381_base_address_resized &-> (ptr_deref_4381_base_plus_offset)
        ptr_deref_4381_root_address_calculated <-& (ptr_deref_4381_base_plus_offset)
        ;;[ptr_deref_4381_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_4381_root_address_calculated &-> (ptr_deref_4381_word_addrgen)
        ptr_deref_4381_word_address_calculated <-& (ptr_deref_4381_word_addrgen)
        ;;[ptr_deref_4381_Sample] 
        {
          ;;[ptr_deref_4381_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_4381_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_4381_sample_start_ <-& (ptr_deref_4381_word_address_calculated)
        ptr_deref_4381_sample_start_ &-> (ptr_deref_4381_Sample)
        ptr_deref_4381_sample_completed_ <-& (ptr_deref_4381_Sample)
        ptr_deref_4381_sample_completed_ &-> ($null)
        ptr_deref_4381_update_start_ &-> (ptr_deref_4381_Update)
        ptr_deref_4381_update_completed_ <-& (ptr_deref_4381_Update)
        ptr_deref_4381_base_address_calculated <-& (R_iNsTr_252_4380_update_completed_)
        ptr_deref_4381_sample_start_ <-& (ptr_deref_4381_base_address_calculated)
        ptr_deref_4381_sample_start_ <-& (R_iNsTr_247_4382_update_completed_)
        // 		iNsTr_254 := @(RRbuff[iNsTr_251])
        //  file prog.linked.opt.aa, line 1527
        // Source expression
        // @(RRbuff[iNsTr_251])
        $T[addr_of_4387_sample_start_] 
        $T[addr_of_4387_sample_completed_] 
        $T[addr_of_4387_update_start_] 
        $T[addr_of_4387_update_completed_] 
        $T[array_obj_ref_4386_root_address_calculated] 
        $T[array_obj_ref_4386_offset_calculated] 
        $T[array_obj_ref_4386_index_resized_0] 
        $T[array_obj_ref_4386_index_scaled_0] 
        // iNsTr_251
        $T[R_iNsTr_251_4385_sample_start_] 
        $T[R_iNsTr_251_4385_sample_completed_] 
        $T[R_iNsTr_251_4385_update_start_] 
        $T[R_iNsTr_251_4385_update_completed_] 
        // implicit reference
        R_iNsTr_251_4385_sample_start_ <-& (LOAD_RRbuff_ptr_4373_update_completed_)
        R_iNsTr_251_4385_sample_completed_ <-& (R_iNsTr_251_4385_sample_start_)
        R_iNsTr_251_4385_update_start_ <-& (R_iNsTr_251_4385_sample_completed_)
        R_iNsTr_251_4385_update_completed_ <-& (R_iNsTr_251_4385_update_start_)
        ;;[array_obj_ref_4386_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        R_iNsTr_251_4385_update_completed_ &-> (array_obj_ref_4386_index_resize_0)
        array_obj_ref_4386_index_resized_0 <-& (array_obj_ref_4386_index_resize_0)
        ;;[array_obj_ref_4386_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_4386_index_resized_0 &-> (array_obj_ref_4386_index_scale_0)
        array_obj_ref_4386_index_scaled_0 <-& (array_obj_ref_4386_index_scale_0)
        ;;[array_obj_ref_4386_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_4386_index_scaled_0 &-> (array_obj_ref_4386_final_index_sum_regn)
        array_obj_ref_4386_offset_calculated <-& (array_obj_ref_4386_final_index_sum_regn)
        $T[array_obj_ref_4386_base_plus_offset_sample_start] 
        $T[array_obj_ref_4386_base_plus_offset_sample_complete] 
        $T[array_obj_ref_4386_base_plus_offset_update_start] 
        $T[array_obj_ref_4386_base_plus_offset_update_complete] 
        ;;[array_obj_ref_4386_base_plus_offset_sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[array_obj_ref_4386_base_plus_offset_update] 
        {
          $T [cr] $T [ca]
        }
        array_obj_ref_4386_base_plus_offset_sample_start &-> (array_obj_ref_4386_base_plus_offset_sample)
        array_obj_ref_4386_base_plus_offset_update_start &-> (array_obj_ref_4386_base_plus_offset_update)
        array_obj_ref_4386_base_plus_offset_sample_complete <-& (array_obj_ref_4386_base_plus_offset_sample)
        array_obj_ref_4386_base_plus_offset_update_complete <-& (array_obj_ref_4386_base_plus_offset_update)
        array_obj_ref_4386_offset_calculated &-> (array_obj_ref_4386_base_plus_offset_sample_start)
        array_obj_ref_4386_root_address_calculated <-& (array_obj_ref_4386_base_plus_offset_update_complete)
        ;;[addr_of_4387_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_4387_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_4387_sample_start_ <-& (array_obj_ref_4386_root_address_calculated)
        addr_of_4387_sample_start_ &-> (addr_of_4387_request)
        addr_of_4387_sample_completed_ <-& (addr_of_4387_request)
        addr_of_4387_update_start_ &-> (addr_of_4387_complete)
        addr_of_4387_update_completed_ <-& (addr_of_4387_complete)
        // Target expression
        // (as target) iNsTr_254
        // iNsTr_254
        // implicit reference
        // 		->(iNsTr_254) := iNsTr_248
        //  file prog.linked.opt.aa, line 1528
        // Source expression
        // iNsTr_248
        $T[R_iNsTr_248_4391_sample_start_] 
        $T[R_iNsTr_248_4391_sample_completed_] 
        $T[R_iNsTr_248_4391_update_start_] 
        $T[R_iNsTr_248_4391_update_completed_] 
        // implicit reference
        R_iNsTr_248_4391_sample_start_ <-& ($entry)
        R_iNsTr_248_4391_sample_completed_ <-& (R_iNsTr_248_4391_sample_start_)
        R_iNsTr_248_4391_update_start_ <-& (R_iNsTr_248_4391_sample_completed_)
        R_iNsTr_248_4391_update_completed_ <-& (R_iNsTr_248_4391_update_start_)
        // Target expression
        // ->(iNsTr_254)
        $T[ptr_deref_4390_sample_start_] 
        $T[ptr_deref_4390_sample_completed_] 
        $T[ptr_deref_4390_update_start_] 
        $T[ptr_deref_4390_update_completed_] 
        $T[ptr_deref_4390_base_address_calculated] 
        // iNsTr_254
        $T[R_iNsTr_254_4389_sample_start_] 
        $T[R_iNsTr_254_4389_sample_completed_] 
        $T[R_iNsTr_254_4389_update_start_] 
        $T[R_iNsTr_254_4389_update_completed_] 
        // implicit reference
        R_iNsTr_254_4389_sample_start_ <-& (addr_of_4387_update_completed_)
        R_iNsTr_254_4389_sample_completed_ <-& (R_iNsTr_254_4389_sample_start_)
        R_iNsTr_254_4389_update_start_ <-& (R_iNsTr_254_4389_sample_completed_)
        R_iNsTr_254_4389_update_completed_ <-& (R_iNsTr_254_4389_update_start_)
        $T[ptr_deref_4390_word_address_calculated] 
        $T[ptr_deref_4390_root_address_calculated] 
        $T[ptr_deref_4390_base_address_resized] 
        ;;[ptr_deref_4390_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_4390_base_address_calculated &-> (ptr_deref_4390_base_addr_resize)
        ptr_deref_4390_base_address_resized <-& (ptr_deref_4390_base_addr_resize)
        ;;[ptr_deref_4390_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_4390_base_address_resized &-> (ptr_deref_4390_base_plus_offset)
        ptr_deref_4390_root_address_calculated <-& (ptr_deref_4390_base_plus_offset)
        ;;[ptr_deref_4390_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_4390_root_address_calculated &-> (ptr_deref_4390_word_addrgen)
        ptr_deref_4390_word_address_calculated <-& (ptr_deref_4390_word_addrgen)
        ;;[ptr_deref_4390_Sample] 
        {
          ;;[ptr_deref_4390_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_4390_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_4390_sample_start_ <-& (ptr_deref_4390_word_address_calculated)
        ptr_deref_4390_sample_start_ &-> (ptr_deref_4390_Sample)
        ptr_deref_4390_sample_completed_ <-& (ptr_deref_4390_Sample)
        ptr_deref_4390_sample_completed_ &-> ($null)
        ptr_deref_4390_update_start_ &-> (ptr_deref_4390_Update)
        ptr_deref_4390_update_completed_ <-& (ptr_deref_4390_Update)
        ptr_deref_4390_base_address_calculated <-& (R_iNsTr_254_4389_update_completed_)
        ptr_deref_4390_sample_start_ <-& (ptr_deref_4390_base_address_calculated)
        ptr_deref_4390_sample_start_ <-& (R_iNsTr_248_4391_update_completed_)
        // 		iNsTr_256 := (iNsTr_250 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        //  file prog.linked.opt.aa, line 1529
        // Source expression
        // (iNsTr_250 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        $T[ADD_u32_u32_4397_sample_start_] 
        $T[ADD_u32_u32_4397_sample_completed_] 
        $T[ADD_u32_u32_4397_update_start_] 
        $T[ADD_u32_u32_4397_update_completed_] 
        // iNsTr_250
        $T[R_iNsTr_250_4394_sample_start_] 
        $T[R_iNsTr_250_4394_sample_completed_] 
        $T[R_iNsTr_250_4394_update_start_] 
        $T[R_iNsTr_250_4394_update_completed_] 
        // implicit reference
        R_iNsTr_250_4394_sample_start_ <-& (LOAD_QRSbuff_ptr_4370_update_completed_)
        R_iNsTr_250_4394_sample_completed_ <-& (R_iNsTr_250_4394_sample_start_)
        R_iNsTr_250_4394_update_start_ <-& (R_iNsTr_250_4394_sample_completed_)
        R_iNsTr_250_4394_update_completed_ <-& (R_iNsTr_250_4394_update_start_)
        ADD_u32_u32_4397_sample_start_ <-& (R_iNsTr_250_4394_update_completed_)
        ;;[ADD_u32_u32_4397_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_4397_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_4397_sample_start_ &-> (ADD_u32_u32_4397_Sample)
        ADD_u32_u32_4397_sample_completed_ <-& (ADD_u32_u32_4397_Sample)
        ADD_u32_u32_4397_sample_completed_ &-> ($null)
        ADD_u32_u32_4397_update_start_ &-> (ADD_u32_u32_4397_Update)
        ADD_u32_u32_4397_update_completed_ <-& (ADD_u32_u32_4397_Update)
        // Target expression
        // (as target) iNsTr_256
        // iNsTr_256
        // implicit reference
        // 		iNsTr_257 := (iNsTr_250 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.linked.opt.aa, line 1530
        // Source expression
        // (iNsTr_250 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_4403_sample_start_] 
        $T[EQ_u32_u1_4403_sample_completed_] 
        $T[EQ_u32_u1_4403_update_start_] 
        $T[EQ_u32_u1_4403_update_completed_] 
        // iNsTr_250
        $T[R_iNsTr_250_4400_sample_start_] 
        $T[R_iNsTr_250_4400_sample_completed_] 
        $T[R_iNsTr_250_4400_update_start_] 
        $T[R_iNsTr_250_4400_update_completed_] 
        // implicit reference
        R_iNsTr_250_4400_sample_start_ <-& (LOAD_QRSbuff_ptr_4370_update_completed_)
        R_iNsTr_250_4400_sample_completed_ <-& (R_iNsTr_250_4400_sample_start_)
        R_iNsTr_250_4400_update_start_ <-& (R_iNsTr_250_4400_sample_completed_)
        R_iNsTr_250_4400_update_completed_ <-& (R_iNsTr_250_4400_update_start_)
        EQ_u32_u1_4403_sample_start_ <-& (R_iNsTr_250_4400_update_completed_)
        ;;[EQ_u32_u1_4403_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_4403_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_4403_sample_start_ &-> (EQ_u32_u1_4403_Sample)
        EQ_u32_u1_4403_sample_completed_ <-& (EQ_u32_u1_4403_Sample)
        EQ_u32_u1_4403_sample_completed_ &-> ($null)
        EQ_u32_u1_4403_update_start_ &-> (EQ_u32_u1_4403_Update)
        EQ_u32_u1_4403_update_completed_ <-& (EQ_u32_u1_4403_Update)
        // Target expression
        // (as target) iNsTr_257
        // iNsTr_257
        // implicit reference
        // 		maxx_xx_xix_xi := ( $mux iNsTr_257 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_256 ) 
        //  file prog.linked.opt.aa, line 1531
        // Source expression
        // ( $mux iNsTr_257 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_256 ) 
        $T[MUX_4410_sample_start_] 
        $T[MUX_4410_sample_completed_] 
        $T[MUX_4410_update_start_] 
        $T[MUX_4410_update_completed_] 
        // iNsTr_257
        $T[R_iNsTr_257_4406_sample_start_] 
        $T[R_iNsTr_257_4406_sample_completed_] 
        $T[R_iNsTr_257_4406_update_start_] 
        $T[R_iNsTr_257_4406_update_completed_] 
        // implicit reference
        R_iNsTr_257_4406_sample_start_ <-& (EQ_u32_u1_4403_update_completed_)
        R_iNsTr_257_4406_sample_completed_ <-& (R_iNsTr_257_4406_sample_start_)
        R_iNsTr_257_4406_update_start_ <-& (R_iNsTr_257_4406_sample_completed_)
        R_iNsTr_257_4406_update_completed_ <-& (R_iNsTr_257_4406_update_start_)
        // iNsTr_256
        $T[R_iNsTr_256_4409_sample_start_] 
        $T[R_iNsTr_256_4409_sample_completed_] 
        $T[R_iNsTr_256_4409_update_start_] 
        $T[R_iNsTr_256_4409_update_completed_] 
        // implicit reference
        R_iNsTr_256_4409_sample_start_ <-& (ADD_u32_u32_4397_update_completed_)
        R_iNsTr_256_4409_sample_completed_ <-& (R_iNsTr_256_4409_sample_start_)
        R_iNsTr_256_4409_update_start_ <-& (R_iNsTr_256_4409_sample_completed_)
        R_iNsTr_256_4409_update_completed_ <-& (R_iNsTr_256_4409_update_start_)
        MUX_4410_sample_start_ <-& (R_iNsTr_257_4406_update_completed_)
        MUX_4410_sample_start_ <-& (R_iNsTr_256_4409_update_completed_)
        ;;[MUX_4410_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4410_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4410_sample_start_ &-> (MUX_4410_start)
        MUX_4410_sample_completed_ <-& (MUX_4410_start)
        MUX_4410_update_start_ &-> (MUX_4410_complete)
        MUX_4410_update_completed_ <-& (MUX_4410_complete)
        MUX_4410_sample_completed_ &-> ($null)
        // Target expression
        // (as target) maxx_xx_xix_xi
        // maxx_xx_xix_xi
        // implicit reference
        // 		QRSbuff_ptr := maxx_xx_xix_xi
        //  file prog.linked.opt.aa, line 1532
        // Source expression
        // maxx_xx_xix_xi
        $T[R_maxx_xx_xix_xi_4413_sample_start_] 
        $T[R_maxx_xx_xix_xi_4413_sample_completed_] 
        $T[R_maxx_xx_xix_xi_4413_update_start_] 
        $T[R_maxx_xx_xix_xi_4413_update_completed_] 
        // implicit reference
        R_maxx_xx_xix_xi_4413_sample_start_ <-& (MUX_4410_update_completed_)
        R_maxx_xx_xix_xi_4413_sample_completed_ <-& (R_maxx_xx_xix_xi_4413_sample_start_)
        R_maxx_xx_xix_xi_4413_update_start_ <-& (R_maxx_xx_xix_xi_4413_sample_completed_)
        R_maxx_xx_xix_xi_4413_update_completed_ <-& (R_maxx_xx_xix_xi_4413_update_start_)
        // Target expression
        // (as target) QRSbuff_ptr
        $T[STORE_QRSbuff_ptr_4412_sample_start_] 
        $T[STORE_QRSbuff_ptr_4412_sample_completed_] 
        $T[STORE_QRSbuff_ptr_4412_update_start_] 
        $T[STORE_QRSbuff_ptr_4412_update_completed_] 
        // QRSbuff_ptr
        $T[STORE_QRSbuff_ptr_4412_word_address_calculated] 
        $T[STORE_QRSbuff_ptr_4412_root_address_calculated] 
        STORE_QRSbuff_ptr_4412_word_address_calculated <-& (STORE_QRSbuff_ptr_4412_root_address_calculated)
        ;;[STORE_QRSbuff_ptr_4412_Sample] 
        {
          ;;[STORE_QRSbuff_ptr_4412_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_QRSbuff_ptr_4412_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_QRSbuff_ptr_4412_sample_start_ <-& (STORE_QRSbuff_ptr_4412_word_address_calculated)
        STORE_QRSbuff_ptr_4412_sample_start_ &-> (STORE_QRSbuff_ptr_4412_Sample)
        STORE_QRSbuff_ptr_4412_sample_completed_ <-& (STORE_QRSbuff_ptr_4412_Sample)
        STORE_QRSbuff_ptr_4412_sample_completed_ &-> ($null)
        STORE_QRSbuff_ptr_4412_update_start_ &-> (STORE_QRSbuff_ptr_4412_Update)
        STORE_QRSbuff_ptr_4412_update_completed_ <-& (STORE_QRSbuff_ptr_4412_Update)
        STORE_QRSbuff_ptr_4412_sample_start_ <-& (R_maxx_xx_xix_xi_4413_update_completed_)
        // 		iNsTr_259 := (iNsTr_251 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        //  file prog.linked.opt.aa, line 1533
        // Source expression
        // (iNsTr_251 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        $T[ADD_u32_u32_4419_sample_start_] 
        $T[ADD_u32_u32_4419_sample_completed_] 
        $T[ADD_u32_u32_4419_update_start_] 
        $T[ADD_u32_u32_4419_update_completed_] 
        // iNsTr_251
        $T[R_iNsTr_251_4416_sample_start_] 
        $T[R_iNsTr_251_4416_sample_completed_] 
        $T[R_iNsTr_251_4416_update_start_] 
        $T[R_iNsTr_251_4416_update_completed_] 
        // implicit reference
        R_iNsTr_251_4416_sample_start_ <-& (LOAD_RRbuff_ptr_4373_update_completed_)
        R_iNsTr_251_4416_sample_completed_ <-& (R_iNsTr_251_4416_sample_start_)
        R_iNsTr_251_4416_update_start_ <-& (R_iNsTr_251_4416_sample_completed_)
        R_iNsTr_251_4416_update_completed_ <-& (R_iNsTr_251_4416_update_start_)
        ADD_u32_u32_4419_sample_start_ <-& (R_iNsTr_251_4416_update_completed_)
        ;;[ADD_u32_u32_4419_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_4419_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_4419_sample_start_ &-> (ADD_u32_u32_4419_Sample)
        ADD_u32_u32_4419_sample_completed_ <-& (ADD_u32_u32_4419_Sample)
        ADD_u32_u32_4419_sample_completed_ &-> ($null)
        ADD_u32_u32_4419_update_start_ &-> (ADD_u32_u32_4419_Update)
        ADD_u32_u32_4419_update_completed_ <-& (ADD_u32_u32_4419_Update)
        // Target expression
        // (as target) iNsTr_259
        // iNsTr_259
        // implicit reference
        // 		iNsTr_260 := (iNsTr_251 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.linked.opt.aa, line 1534
        // Source expression
        // (iNsTr_251 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_4425_sample_start_] 
        $T[EQ_u32_u1_4425_sample_completed_] 
        $T[EQ_u32_u1_4425_update_start_] 
        $T[EQ_u32_u1_4425_update_completed_] 
        // iNsTr_251
        $T[R_iNsTr_251_4422_sample_start_] 
        $T[R_iNsTr_251_4422_sample_completed_] 
        $T[R_iNsTr_251_4422_update_start_] 
        $T[R_iNsTr_251_4422_update_completed_] 
        // implicit reference
        R_iNsTr_251_4422_sample_start_ <-& (LOAD_RRbuff_ptr_4373_update_completed_)
        R_iNsTr_251_4422_sample_completed_ <-& (R_iNsTr_251_4422_sample_start_)
        R_iNsTr_251_4422_update_start_ <-& (R_iNsTr_251_4422_sample_completed_)
        R_iNsTr_251_4422_update_completed_ <-& (R_iNsTr_251_4422_update_start_)
        EQ_u32_u1_4425_sample_start_ <-& (R_iNsTr_251_4422_update_completed_)
        ;;[EQ_u32_u1_4425_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_4425_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_4425_sample_start_ &-> (EQ_u32_u1_4425_Sample)
        EQ_u32_u1_4425_sample_completed_ <-& (EQ_u32_u1_4425_Sample)
        EQ_u32_u1_4425_sample_completed_ &-> ($null)
        EQ_u32_u1_4425_update_start_ &-> (EQ_u32_u1_4425_Update)
        EQ_u32_u1_4425_update_completed_ <-& (EQ_u32_u1_4425_Update)
        // Target expression
        // (as target) iNsTr_260
        // iNsTr_260
        // implicit reference
        // 		maxx_xx_xi1x_xi := ( $mux iNsTr_260 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_259 ) 
        //  file prog.linked.opt.aa, line 1535
        // Source expression
        // ( $mux iNsTr_260 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_259 ) 
        $T[MUX_4432_sample_start_] 
        $T[MUX_4432_sample_completed_] 
        $T[MUX_4432_update_start_] 
        $T[MUX_4432_update_completed_] 
        // iNsTr_260
        $T[R_iNsTr_260_4428_sample_start_] 
        $T[R_iNsTr_260_4428_sample_completed_] 
        $T[R_iNsTr_260_4428_update_start_] 
        $T[R_iNsTr_260_4428_update_completed_] 
        // implicit reference
        R_iNsTr_260_4428_sample_start_ <-& (EQ_u32_u1_4425_update_completed_)
        R_iNsTr_260_4428_sample_completed_ <-& (R_iNsTr_260_4428_sample_start_)
        R_iNsTr_260_4428_update_start_ <-& (R_iNsTr_260_4428_sample_completed_)
        R_iNsTr_260_4428_update_completed_ <-& (R_iNsTr_260_4428_update_start_)
        // iNsTr_259
        $T[R_iNsTr_259_4431_sample_start_] 
        $T[R_iNsTr_259_4431_sample_completed_] 
        $T[R_iNsTr_259_4431_update_start_] 
        $T[R_iNsTr_259_4431_update_completed_] 
        // implicit reference
        R_iNsTr_259_4431_sample_start_ <-& (ADD_u32_u32_4419_update_completed_)
        R_iNsTr_259_4431_sample_completed_ <-& (R_iNsTr_259_4431_sample_start_)
        R_iNsTr_259_4431_update_start_ <-& (R_iNsTr_259_4431_sample_completed_)
        R_iNsTr_259_4431_update_completed_ <-& (R_iNsTr_259_4431_update_start_)
        MUX_4432_sample_start_ <-& (R_iNsTr_260_4428_update_completed_)
        MUX_4432_sample_start_ <-& (R_iNsTr_259_4431_update_completed_)
        ;;[MUX_4432_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4432_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4432_sample_start_ &-> (MUX_4432_start)
        MUX_4432_sample_completed_ <-& (MUX_4432_start)
        MUX_4432_update_start_ &-> (MUX_4432_complete)
        MUX_4432_update_completed_ <-& (MUX_4432_complete)
        MUX_4432_sample_completed_ &-> ($null)
        // Target expression
        // (as target) maxx_xx_xi1x_xi
        // maxx_xx_xi1x_xi
        // implicit reference
        // 		RRbuff_ptr := maxx_xx_xi1x_xi
        //  file prog.linked.opt.aa, line 1536
        // Source expression
        // maxx_xx_xi1x_xi
        $T[R_maxx_xx_xi1x_xi_4435_sample_start_] 
        $T[R_maxx_xx_xi1x_xi_4435_sample_completed_] 
        $T[R_maxx_xx_xi1x_xi_4435_update_start_] 
        $T[R_maxx_xx_xi1x_xi_4435_update_completed_] 
        // implicit reference
        R_maxx_xx_xi1x_xi_4435_sample_start_ <-& (MUX_4432_update_completed_)
        R_maxx_xx_xi1x_xi_4435_sample_completed_ <-& (R_maxx_xx_xi1x_xi_4435_sample_start_)
        R_maxx_xx_xi1x_xi_4435_update_start_ <-& (R_maxx_xx_xi1x_xi_4435_sample_completed_)
        R_maxx_xx_xi1x_xi_4435_update_completed_ <-& (R_maxx_xx_xi1x_xi_4435_update_start_)
        // Target expression
        // (as target) RRbuff_ptr
        $T[STORE_RRbuff_ptr_4434_sample_start_] 
        $T[STORE_RRbuff_ptr_4434_sample_completed_] 
        $T[STORE_RRbuff_ptr_4434_update_start_] 
        $T[STORE_RRbuff_ptr_4434_update_completed_] 
        // RRbuff_ptr
        $T[STORE_RRbuff_ptr_4434_word_address_calculated] 
        $T[STORE_RRbuff_ptr_4434_root_address_calculated] 
        STORE_RRbuff_ptr_4434_word_address_calculated <-& (STORE_RRbuff_ptr_4434_root_address_calculated)
        ;;[STORE_RRbuff_ptr_4434_Sample] 
        {
          ;;[STORE_RRbuff_ptr_4434_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_RRbuff_ptr_4434_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_RRbuff_ptr_4434_sample_start_ <-& (STORE_RRbuff_ptr_4434_word_address_calculated)
        STORE_RRbuff_ptr_4434_sample_start_ &-> (STORE_RRbuff_ptr_4434_Sample)
        STORE_RRbuff_ptr_4434_sample_completed_ <-& (STORE_RRbuff_ptr_4434_Sample)
        STORE_RRbuff_ptr_4434_sample_completed_ &-> ($null)
        STORE_RRbuff_ptr_4434_update_start_ &-> (STORE_RRbuff_ptr_4434_Update)
        STORE_RRbuff_ptr_4434_update_completed_ <-& (STORE_RRbuff_ptr_4434_Update)
        STORE_RRbuff_ptr_4434_sample_start_ <-& (R_maxx_xx_xi1x_xi_4435_update_completed_)
        // load-store dependencies..
        $T [ptr_deref_4381_ptr_deref_4390_delay] $delay
        // ->(iNsTr_252)(store) -> ->(iNsTr_254)(store)
        ptr_deref_4390_sample_start_ <-& (ptr_deref_4381_ptr_deref_4390_delay)
        ptr_deref_4381_ptr_deref_4390_delay <-& (ptr_deref_4381_sample_completed_)
        $T [LOAD_QRSbuff_ptr_4370_STORE_QRSbuff_ptr_4412_delay] $delay
        // QRSbuff_ptr(load) -> QRSbuff_ptr(store)
        STORE_QRSbuff_ptr_4412_sample_start_ <-& (LOAD_QRSbuff_ptr_4370_STORE_QRSbuff_ptr_4412_delay)
        LOAD_QRSbuff_ptr_4370_STORE_QRSbuff_ptr_4412_delay <-& (LOAD_QRSbuff_ptr_4370_sample_completed_)
        $T [LOAD_RRbuff_ptr_4373_STORE_RRbuff_ptr_4434_delay] $delay
        // RRbuff_ptr(load) -> RRbuff_ptr(store)
        STORE_RRbuff_ptr_4434_sample_start_ <-& (LOAD_RRbuff_ptr_4373_STORE_RRbuff_ptr_4434_delay)
        LOAD_RRbuff_ptr_4373_STORE_RRbuff_ptr_4434_delay <-& (LOAD_RRbuff_ptr_4373_sample_completed_)
      }
      assign_stmt_4371_to_assign_stmt_4442__entry__ |-> (assign_stmt_4371_to_assign_stmt_4442)
      assign_stmt_4371_to_assign_stmt_4442__exit__ <-| (assign_stmt_4371_to_assign_stmt_4442)
      ::[call_stmt_4445] 
      {
        // 		$call meanCalc (iNsTr_262 ) (iNsTr_263 ) 
        //  file prog.linked.opt.aa, line 1538
        $T[call_stmt_4445_sample_start_] 
        $T[call_stmt_4445_sample_completed_] 
        $T[call_stmt_4445_update_start_] 
        $T[call_stmt_4445_update_completed_] 
        // Call input argument 0
        ;;[call_stmt_4445_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_4445_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_4445_sample_start_ &-> (call_stmt_4445_Sample)
        call_stmt_4445_sample_completed_ <-& (call_stmt_4445_Sample)
        call_stmt_4445_sample_completed_ &-> ($null)
        call_stmt_4445_update_start_ &-> (call_stmt_4445_Update)
        call_stmt_4445_update_completed_ <-& (call_stmt_4445_Update)
        // Call output argument 0
        // (as target) iNsTr_263
        // iNsTr_263
        // implicit reference
        // barrier: 		$call meanCalc (iNsTr_262 ) (iNsTr_263 ) 
        // load-store dependencies..
      }
      call_stmt_4445__entry__ |-> (call_stmt_4445)
      call_stmt_4445__exit__ <-| (call_stmt_4445)
      ::[assign_stmt_4451] 
      {
        // load-store dependencies..
      }
      assign_stmt_4451__entry__ |-> (assign_stmt_4451)
      assign_stmt_4451__exit__ <-| (assign_stmt_4451)
      ::[call_stmt_4454] 
      {
        // 		$call meanCalc (iNsTr_264 ) (iNsTr_265 ) 
        //  file prog.linked.opt.aa, line 1540
        $T[call_stmt_4454_sample_start_] 
        $T[call_stmt_4454_sample_completed_] 
        $T[call_stmt_4454_update_start_] 
        $T[call_stmt_4454_update_completed_] 
        // Call input argument 0
        ;;[call_stmt_4454_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_4454_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_4454_sample_start_ &-> (call_stmt_4454_Sample)
        call_stmt_4454_sample_completed_ <-& (call_stmt_4454_Sample)
        call_stmt_4454_sample_completed_ &-> ($null)
        call_stmt_4454_update_start_ &-> (call_stmt_4454_Update)
        call_stmt_4454_update_completed_ <-& (call_stmt_4454_Update)
        // Call output argument 0
        // (as target) iNsTr_265
        // iNsTr_265
        // implicit reference
        // barrier: 		$call meanCalc (iNsTr_264 ) (iNsTr_265 ) 
        // load-store dependencies..
      }
      call_stmt_4454__entry__ |-> (call_stmt_4454)
      call_stmt_4454__exit__ <-| (call_stmt_4454)
      ::[assign_stmt_4459_to_assign_stmt_4505] 
      {
        // 		iNsTr_266 := (iNsTr_263 - nmeanx_x2)
        //  file prog.linked.opt.aa, line 1541
        // Source expression
        // (iNsTr_263 - nmeanx_x2)
        $T[SUB_u32_u32_4458_sample_start_] 
        $T[SUB_u32_u32_4458_sample_completed_] 
        $T[SUB_u32_u32_4458_update_start_] 
        $T[SUB_u32_u32_4458_update_completed_] 
        // iNsTr_263
        $T[R_iNsTr_263_4456_sample_start_] 
        $T[R_iNsTr_263_4456_sample_completed_] 
        $T[R_iNsTr_263_4456_update_start_] 
        $T[R_iNsTr_263_4456_update_completed_] 
        // implicit reference
        R_iNsTr_263_4456_sample_start_ <-& ($entry)
        R_iNsTr_263_4456_sample_completed_ <-& (R_iNsTr_263_4456_sample_start_)
        R_iNsTr_263_4456_update_start_ <-& (R_iNsTr_263_4456_sample_completed_)
        R_iNsTr_263_4456_update_completed_ <-& (R_iNsTr_263_4456_update_start_)
        // nmeanx_x2
        $T[R_nmeanx_x2_4457_sample_start_] 
        $T[R_nmeanx_x2_4457_sample_completed_] 
        $T[R_nmeanx_x2_4457_update_start_] 
        $T[R_nmeanx_x2_4457_update_completed_] 
        // implicit reference
        R_nmeanx_x2_4457_sample_start_ <-& ($entry)
        R_nmeanx_x2_4457_sample_completed_ <-& (R_nmeanx_x2_4457_sample_start_)
        R_nmeanx_x2_4457_update_start_ <-& (R_nmeanx_x2_4457_sample_completed_)
        R_nmeanx_x2_4457_update_completed_ <-& (R_nmeanx_x2_4457_update_start_)
        SUB_u32_u32_4458_sample_start_ <-& (R_iNsTr_263_4456_update_completed_)
        SUB_u32_u32_4458_sample_start_ <-& (R_nmeanx_x2_4457_update_completed_)
        ;;[SUB_u32_u32_4458_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_4458_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_4458_sample_start_ &-> (SUB_u32_u32_4458_Sample)
        SUB_u32_u32_4458_sample_completed_ <-& (SUB_u32_u32_4458_Sample)
        SUB_u32_u32_4458_sample_completed_ &-> ($null)
        SUB_u32_u32_4458_update_start_ &-> (SUB_u32_u32_4458_Update)
        SUB_u32_u32_4458_update_completed_ <-& (SUB_u32_u32_4458_Update)
        // Target expression
        // (as target) iNsTr_266
        // iNsTr_266
        // implicit reference
        // 		iNsTr_267 := ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_266 ) )
        //  file prog.linked.opt.aa, line 1542
        // Source expression
        // ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_266 ) )
        $T[type_cast_4463_sample_start_] 
        $T[type_cast_4463_sample_completed_] 
        $T[type_cast_4463_update_start_] 
        $T[type_cast_4463_update_completed_] 
        // ($bitcast ($int<64>) iNsTr_266 )
        $T[type_cast_4462_sample_start_] 
        $T[type_cast_4462_sample_completed_] 
        $T[type_cast_4462_update_start_] 
        $T[type_cast_4462_update_completed_] 
        // iNsTr_266
        $T[R_iNsTr_266_4461_sample_start_] 
        $T[R_iNsTr_266_4461_sample_completed_] 
        $T[R_iNsTr_266_4461_update_start_] 
        $T[R_iNsTr_266_4461_update_completed_] 
        // implicit reference
        R_iNsTr_266_4461_sample_start_ <-& (SUB_u32_u32_4458_update_completed_)
        R_iNsTr_266_4461_sample_completed_ <-& (R_iNsTr_266_4461_sample_start_)
        R_iNsTr_266_4461_update_start_ <-& (R_iNsTr_266_4461_sample_completed_)
        R_iNsTr_266_4461_update_completed_ <-& (R_iNsTr_266_4461_update_start_)
        type_cast_4462_sample_start_ <-& (R_iNsTr_266_4461_update_completed_)
        ;;[type_cast_4462_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4462_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4462_sample_start_ &-> (type_cast_4462_Sample)
        type_cast_4462_sample_completed_ <-& (type_cast_4462_Sample)
        type_cast_4462_sample_completed_ &-> ($null)
        type_cast_4462_update_start_ &-> (type_cast_4462_Update)
        type_cast_4462_update_completed_ <-& (type_cast_4462_Update)
        // flow-through
        type_cast_4462_update_start_ <-& (type_cast_4462_sample_completed_)
        type_cast_4463_sample_start_ <-& (type_cast_4462_update_completed_)
        ;;[type_cast_4463_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4463_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4463_sample_start_ &-> (type_cast_4463_Sample)
        type_cast_4463_sample_completed_ <-& (type_cast_4463_Sample)
        type_cast_4463_sample_completed_ &-> ($null)
        type_cast_4463_update_start_ &-> (type_cast_4463_Update)
        type_cast_4463_update_completed_ <-& (type_cast_4463_Update)
        // Target expression
        // (as target) iNsTr_267
        // iNsTr_267
        // implicit reference
        // 		iNsTr_268 := threshold
        //  file prog.linked.opt.aa, line 1543
        // Source expression
        // threshold
        $T[LOAD_threshold_4466_sample_start_] 
        $T[LOAD_threshold_4466_sample_completed_] 
        $T[LOAD_threshold_4466_update_start_] 
        $T[LOAD_threshold_4466_update_completed_] 
        $T[LOAD_threshold_4466_sample_start_] 
        $T[LOAD_threshold_4466_sample_completed_] 
        $T[LOAD_threshold_4466_update_start_] 
        $T[LOAD_threshold_4466_update_completed_] 
        $T[LOAD_threshold_4466_word_address_calculated] 
        $T[LOAD_threshold_4466_root_address_calculated] 
        LOAD_threshold_4466_word_address_calculated <-& (LOAD_threshold_4466_root_address_calculated)
        ;;[LOAD_threshold_4466_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_threshold_4466_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_threshold_4466_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_threshold_4466_sample_start_ <-& (LOAD_threshold_4466_word_address_calculated)
        LOAD_threshold_4466_sample_start_ &-> (LOAD_threshold_4466_Sample)
        LOAD_threshold_4466_sample_completed_ <-& (LOAD_threshold_4466_Sample)
        LOAD_threshold_4466_sample_completed_ &-> ($null)
        LOAD_threshold_4466_update_start_ &-> (LOAD_threshold_4466_Update)
        LOAD_threshold_4466_update_completed_ <-& (LOAD_threshold_4466_Update)
        // Target expression
        // (as target) iNsTr_268
        // iNsTr_268
        // implicit reference
        // 		iNsTr_269 := (iNsTr_268 * iNsTr_267)
        //  file prog.linked.opt.aa, line 1544
        // Source expression
        // (iNsTr_268 * iNsTr_267)
        $T[MUL_f64_f64_4471_sample_start_] 
        $T[MUL_f64_f64_4471_sample_completed_] 
        $T[MUL_f64_f64_4471_update_start_] 
        $T[MUL_f64_f64_4471_update_completed_] 
        // iNsTr_268
        $T[R_iNsTr_268_4469_sample_start_] 
        $T[R_iNsTr_268_4469_sample_completed_] 
        $T[R_iNsTr_268_4469_update_start_] 
        $T[R_iNsTr_268_4469_update_completed_] 
        // implicit reference
        R_iNsTr_268_4469_sample_start_ <-& (LOAD_threshold_4466_update_completed_)
        R_iNsTr_268_4469_sample_completed_ <-& (R_iNsTr_268_4469_sample_start_)
        R_iNsTr_268_4469_update_start_ <-& (R_iNsTr_268_4469_sample_completed_)
        R_iNsTr_268_4469_update_completed_ <-& (R_iNsTr_268_4469_update_start_)
        // iNsTr_267
        $T[R_iNsTr_267_4470_sample_start_] 
        $T[R_iNsTr_267_4470_sample_completed_] 
        $T[R_iNsTr_267_4470_update_start_] 
        $T[R_iNsTr_267_4470_update_completed_] 
        // implicit reference
        R_iNsTr_267_4470_sample_start_ <-& (type_cast_4463_update_completed_)
        R_iNsTr_267_4470_sample_completed_ <-& (R_iNsTr_267_4470_sample_start_)
        R_iNsTr_267_4470_update_start_ <-& (R_iNsTr_267_4470_sample_completed_)
        R_iNsTr_267_4470_update_completed_ <-& (R_iNsTr_267_4470_update_start_)
        MUL_f64_f64_4471_sample_start_ <-& (R_iNsTr_268_4469_update_completed_)
        MUL_f64_f64_4471_sample_start_ <-& (R_iNsTr_267_4470_update_completed_)
        ;;[MUL_f64_f64_4471_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_4471_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_4471_sample_start_ &-> (MUL_f64_f64_4471_Sample)
        MUL_f64_f64_4471_sample_completed_ <-& (MUL_f64_f64_4471_Sample)
        MUL_f64_f64_4471_sample_completed_ &-> ($null)
        MUL_f64_f64_4471_update_start_ &-> (MUL_f64_f64_4471_Update)
        MUL_f64_f64_4471_update_completed_ <-& (MUL_f64_f64_4471_Update)
        // Target expression
        // (as target) iNsTr_269
        // iNsTr_269
        // implicit reference
        // 		iNsTr_270 := ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_269 ) )
        //  file prog.linked.opt.aa, line 1545
        // Source expression
        // ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_269 ) )
        $T[type_cast_4476_sample_start_] 
        $T[type_cast_4476_sample_completed_] 
        $T[type_cast_4476_update_start_] 
        $T[type_cast_4476_update_completed_] 
        // ($cast ($int<32>) iNsTr_269 )
        $T[type_cast_4475_sample_start_] 
        $T[type_cast_4475_sample_completed_] 
        $T[type_cast_4475_update_start_] 
        $T[type_cast_4475_update_completed_] 
        // iNsTr_269
        $T[R_iNsTr_269_4474_sample_start_] 
        $T[R_iNsTr_269_4474_sample_completed_] 
        $T[R_iNsTr_269_4474_update_start_] 
        $T[R_iNsTr_269_4474_update_completed_] 
        // implicit reference
        R_iNsTr_269_4474_sample_start_ <-& (MUL_f64_f64_4471_update_completed_)
        R_iNsTr_269_4474_sample_completed_ <-& (R_iNsTr_269_4474_sample_start_)
        R_iNsTr_269_4474_update_start_ <-& (R_iNsTr_269_4474_sample_completed_)
        R_iNsTr_269_4474_update_completed_ <-& (R_iNsTr_269_4474_update_start_)
        type_cast_4475_sample_start_ <-& (R_iNsTr_269_4474_update_completed_)
        ;;[type_cast_4475_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4475_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4475_sample_start_ &-> (type_cast_4475_Sample)
        type_cast_4475_sample_completed_ <-& (type_cast_4475_Sample)
        type_cast_4475_sample_completed_ &-> ($null)
        type_cast_4475_update_start_ &-> (type_cast_4475_Update)
        type_cast_4475_update_completed_ <-& (type_cast_4475_Update)
        type_cast_4476_sample_start_ <-& (type_cast_4475_update_completed_)
        ;;[type_cast_4476_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4476_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4476_sample_start_ &-> (type_cast_4476_Sample)
        type_cast_4476_sample_completed_ <-& (type_cast_4476_Sample)
        type_cast_4476_sample_completed_ &-> ($null)
        type_cast_4476_update_start_ &-> (type_cast_4476_Update)
        type_cast_4476_update_completed_ <-& (type_cast_4476_Update)
        // Target expression
        // (as target) iNsTr_270
        // iNsTr_270
        // implicit reference
        // 		iNsTr_271 := (iNsTr_270 + nmeanx_x2)
        //  file prog.linked.opt.aa, line 1546
        // Source expression
        // (iNsTr_270 + nmeanx_x2)
        $T[ADD_u32_u32_4481_sample_start_] 
        $T[ADD_u32_u32_4481_sample_completed_] 
        $T[ADD_u32_u32_4481_update_start_] 
        $T[ADD_u32_u32_4481_update_completed_] 
        // iNsTr_270
        $T[R_iNsTr_270_4479_sample_start_] 
        $T[R_iNsTr_270_4479_sample_completed_] 
        $T[R_iNsTr_270_4479_update_start_] 
        $T[R_iNsTr_270_4479_update_completed_] 
        // implicit reference
        R_iNsTr_270_4479_sample_start_ <-& (type_cast_4476_update_completed_)
        R_iNsTr_270_4479_sample_completed_ <-& (R_iNsTr_270_4479_sample_start_)
        R_iNsTr_270_4479_update_start_ <-& (R_iNsTr_270_4479_sample_completed_)
        R_iNsTr_270_4479_update_completed_ <-& (R_iNsTr_270_4479_update_start_)
        // nmeanx_x2
        $T[R_nmeanx_x2_4480_sample_start_] 
        $T[R_nmeanx_x2_4480_sample_completed_] 
        $T[R_nmeanx_x2_4480_update_start_] 
        $T[R_nmeanx_x2_4480_update_completed_] 
        // implicit reference
        R_nmeanx_x2_4480_sample_start_ <-& ($entry)
        R_nmeanx_x2_4480_sample_completed_ <-& (R_nmeanx_x2_4480_sample_start_)
        R_nmeanx_x2_4480_update_start_ <-& (R_nmeanx_x2_4480_sample_completed_)
        R_nmeanx_x2_4480_update_completed_ <-& (R_nmeanx_x2_4480_update_start_)
        ADD_u32_u32_4481_sample_start_ <-& (R_iNsTr_270_4479_update_completed_)
        ADD_u32_u32_4481_sample_start_ <-& (R_nmeanx_x2_4480_update_completed_)
        ;;[ADD_u32_u32_4481_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_4481_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_4481_sample_start_ &-> (ADD_u32_u32_4481_Sample)
        ADD_u32_u32_4481_sample_completed_ <-& (ADD_u32_u32_4481_Sample)
        ADD_u32_u32_4481_sample_completed_ &-> ($null)
        ADD_u32_u32_4481_update_start_ &-> (ADD_u32_u32_4481_Update)
        ADD_u32_u32_4481_update_completed_ <-& (ADD_u32_u32_4481_Update)
        // Target expression
        // (as target) iNsTr_271
        // iNsTr_271
        // implicit reference
        // 		iNsTr_272 := maxDer
        //  file prog.linked.opt.aa, line 1547
        // Source expression
        // maxDer
        $T[LOAD_maxDer_4484_sample_start_] 
        $T[LOAD_maxDer_4484_sample_completed_] 
        $T[LOAD_maxDer_4484_update_start_] 
        $T[LOAD_maxDer_4484_update_completed_] 
        $T[LOAD_maxDer_4484_sample_start_] 
        $T[LOAD_maxDer_4484_sample_completed_] 
        $T[LOAD_maxDer_4484_update_start_] 
        $T[LOAD_maxDer_4484_update_completed_] 
        $T[LOAD_maxDer_4484_word_address_calculated] 
        $T[LOAD_maxDer_4484_root_address_calculated] 
        LOAD_maxDer_4484_word_address_calculated <-& (LOAD_maxDer_4484_root_address_calculated)
        ;;[LOAD_maxDer_4484_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_maxDer_4484_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_maxDer_4484_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_maxDer_4484_sample_start_ <-& (LOAD_maxDer_4484_word_address_calculated)
        LOAD_maxDer_4484_sample_start_ &-> (LOAD_maxDer_4484_Sample)
        LOAD_maxDer_4484_sample_completed_ <-& (LOAD_maxDer_4484_Sample)
        LOAD_maxDer_4484_sample_completed_ &-> ($null)
        LOAD_maxDer_4484_update_start_ &-> (LOAD_maxDer_4484_Update)
        LOAD_maxDer_4484_update_completed_ <-& (LOAD_maxDer_4484_Update)
        // Target expression
        // (as target) iNsTr_272
        // iNsTr_272
        // implicit reference
        // 		iNsTr_273 := ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_265 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) )
        //  file prog.linked.opt.aa, line 1548
        // Source expression
        // ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_265 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) )
        $T[type_cast_4493_sample_start_] 
        $T[type_cast_4493_sample_completed_] 
        $T[type_cast_4493_update_start_] 
        $T[type_cast_4493_update_completed_] 
        // (($bitcast ($int<32>) iNsTr_265 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
        $T[ASHR_i32_i32_4492_sample_start_] 
        $T[ASHR_i32_i32_4492_sample_completed_] 
        $T[ASHR_i32_i32_4492_update_start_] 
        $T[ASHR_i32_i32_4492_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_265 )
        $T[type_cast_4488_sample_start_] 
        $T[type_cast_4488_sample_completed_] 
        $T[type_cast_4488_update_start_] 
        $T[type_cast_4488_update_completed_] 
        // iNsTr_265
        $T[R_iNsTr_265_4487_sample_start_] 
        $T[R_iNsTr_265_4487_sample_completed_] 
        $T[R_iNsTr_265_4487_update_start_] 
        $T[R_iNsTr_265_4487_update_completed_] 
        // implicit reference
        R_iNsTr_265_4487_sample_start_ <-& ($entry)
        R_iNsTr_265_4487_sample_completed_ <-& (R_iNsTr_265_4487_sample_start_)
        R_iNsTr_265_4487_update_start_ <-& (R_iNsTr_265_4487_sample_completed_)
        R_iNsTr_265_4487_update_completed_ <-& (R_iNsTr_265_4487_update_start_)
        type_cast_4488_sample_start_ <-& (R_iNsTr_265_4487_update_completed_)
        ;;[type_cast_4488_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4488_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4488_sample_start_ &-> (type_cast_4488_Sample)
        type_cast_4488_sample_completed_ <-& (type_cast_4488_Sample)
        type_cast_4488_sample_completed_ &-> ($null)
        type_cast_4488_update_start_ &-> (type_cast_4488_Update)
        type_cast_4488_update_completed_ <-& (type_cast_4488_Update)
        // flow-through
        type_cast_4488_update_start_ <-& (type_cast_4488_sample_completed_)
        ASHR_i32_i32_4492_sample_start_ <-& (type_cast_4488_update_completed_)
        ;;[ASHR_i32_i32_4492_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ASHR_i32_i32_4492_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ASHR_i32_i32_4492_sample_start_ &-> (ASHR_i32_i32_4492_Sample)
        ASHR_i32_i32_4492_sample_completed_ <-& (ASHR_i32_i32_4492_Sample)
        ASHR_i32_i32_4492_sample_completed_ &-> ($null)
        ASHR_i32_i32_4492_update_start_ &-> (ASHR_i32_i32_4492_Update)
        ASHR_i32_i32_4492_update_completed_ <-& (ASHR_i32_i32_4492_Update)
        // flow-through
        ASHR_i32_i32_4492_update_start_ <-& (ASHR_i32_i32_4492_sample_completed_)
        type_cast_4493_sample_start_ <-& (ASHR_i32_i32_4492_update_completed_)
        ;;[type_cast_4493_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4493_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4493_sample_start_ &-> (type_cast_4493_Sample)
        type_cast_4493_sample_completed_ <-& (type_cast_4493_Sample)
        type_cast_4493_sample_completed_ &-> ($null)
        type_cast_4493_update_start_ &-> (type_cast_4493_Update)
        type_cast_4493_update_completed_ <-& (type_cast_4493_Update)
        // Target expression
        // (as target) iNsTr_273
        // iNsTr_273
        // implicit reference
        // 		iNsTr_274 := (iNsTr_265 + ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
        //  file prog.linked.opt.aa, line 1549
        // Source expression
        // (iNsTr_265 + ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
        $T[ADD_u32_u32_4499_sample_start_] 
        $T[ADD_u32_u32_4499_sample_completed_] 
        $T[ADD_u32_u32_4499_update_start_] 
        $T[ADD_u32_u32_4499_update_completed_] 
        // iNsTr_265
        $T[R_iNsTr_265_4496_sample_start_] 
        $T[R_iNsTr_265_4496_sample_completed_] 
        $T[R_iNsTr_265_4496_update_start_] 
        $T[R_iNsTr_265_4496_update_completed_] 
        // implicit reference
        R_iNsTr_265_4496_sample_start_ <-& ($entry)
        R_iNsTr_265_4496_sample_completed_ <-& (R_iNsTr_265_4496_sample_start_)
        R_iNsTr_265_4496_update_start_ <-& (R_iNsTr_265_4496_sample_completed_)
        R_iNsTr_265_4496_update_completed_ <-& (R_iNsTr_265_4496_update_start_)
        ADD_u32_u32_4499_sample_start_ <-& (R_iNsTr_265_4496_update_completed_)
        ;;[ADD_u32_u32_4499_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_4499_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_4499_sample_start_ &-> (ADD_u32_u32_4499_Sample)
        ADD_u32_u32_4499_sample_completed_ <-& (ADD_u32_u32_4499_Sample)
        ADD_u32_u32_4499_sample_completed_ &-> ($null)
        ADD_u32_u32_4499_update_start_ &-> (ADD_u32_u32_4499_Update)
        ADD_u32_u32_4499_update_completed_ <-& (ADD_u32_u32_4499_Update)
        // Target expression
        // (as target) iNsTr_274
        // iNsTr_274
        // implicit reference
        // 		iNsTr_275 := (iNsTr_274 + iNsTr_273)
        //  file prog.linked.opt.aa, line 1550
        // Source expression
        // (iNsTr_274 + iNsTr_273)
        $T[ADD_u32_u32_4504_sample_start_] 
        $T[ADD_u32_u32_4504_sample_completed_] 
        $T[ADD_u32_u32_4504_update_start_] 
        $T[ADD_u32_u32_4504_update_completed_] 
        // iNsTr_274
        $T[R_iNsTr_274_4502_sample_start_] 
        $T[R_iNsTr_274_4502_sample_completed_] 
        $T[R_iNsTr_274_4502_update_start_] 
        $T[R_iNsTr_274_4502_update_completed_] 
        // implicit reference
        R_iNsTr_274_4502_sample_start_ <-& (ADD_u32_u32_4499_update_completed_)
        R_iNsTr_274_4502_sample_completed_ <-& (R_iNsTr_274_4502_sample_start_)
        R_iNsTr_274_4502_update_start_ <-& (R_iNsTr_274_4502_sample_completed_)
        R_iNsTr_274_4502_update_completed_ <-& (R_iNsTr_274_4502_update_start_)
        // iNsTr_273
        $T[R_iNsTr_273_4503_sample_start_] 
        $T[R_iNsTr_273_4503_sample_completed_] 
        $T[R_iNsTr_273_4503_update_start_] 
        $T[R_iNsTr_273_4503_update_completed_] 
        // implicit reference
        R_iNsTr_273_4503_sample_start_ <-& (type_cast_4493_update_completed_)
        R_iNsTr_273_4503_sample_completed_ <-& (R_iNsTr_273_4503_sample_start_)
        R_iNsTr_273_4503_update_start_ <-& (R_iNsTr_273_4503_sample_completed_)
        R_iNsTr_273_4503_update_completed_ <-& (R_iNsTr_273_4503_update_start_)
        ADD_u32_u32_4504_sample_start_ <-& (R_iNsTr_274_4502_update_completed_)
        ADD_u32_u32_4504_sample_start_ <-& (R_iNsTr_273_4503_update_completed_)
        ;;[ADD_u32_u32_4504_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_4504_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_4504_sample_start_ &-> (ADD_u32_u32_4504_Sample)
        ADD_u32_u32_4504_sample_completed_ <-& (ADD_u32_u32_4504_Sample)
        ADD_u32_u32_4504_sample_completed_ &-> ($null)
        ADD_u32_u32_4504_update_start_ &-> (ADD_u32_u32_4504_Update)
        ADD_u32_u32_4504_update_completed_ <-& (ADD_u32_u32_4504_Update)
        // Target expression
        // (as target) iNsTr_275
        // iNsTr_275
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_4459_to_assign_stmt_4505__entry__ |-> (assign_stmt_4459_to_assign_stmt_4505)
      assign_stmt_4459_to_assign_stmt_4505__exit__ <-| (assign_stmt_4459_to_assign_stmt_4505)
      ::[assign_stmt_4539_to_assign_stmt_4544] 
      {
        // 		iNsTr_281 := ( $mux iNsTr_242 iNsTr_220  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
        //  file prog.linked.opt.aa, line 1558
        // Source expression
        // ( $mux iNsTr_242 iNsTr_220  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
        $T[MUX_4538_sample_start_] 
        $T[MUX_4538_sample_completed_] 
        $T[MUX_4538_update_start_] 
        $T[MUX_4538_update_completed_] 
        // iNsTr_242
        $T[R_iNsTr_242_4534_sample_start_] 
        $T[R_iNsTr_242_4534_sample_completed_] 
        $T[R_iNsTr_242_4534_update_start_] 
        $T[R_iNsTr_242_4534_update_completed_] 
        // implicit reference
        R_iNsTr_242_4534_sample_start_ <-& ($entry)
        R_iNsTr_242_4534_sample_completed_ <-& (R_iNsTr_242_4534_sample_start_)
        R_iNsTr_242_4534_update_start_ <-& (R_iNsTr_242_4534_sample_completed_)
        R_iNsTr_242_4534_update_completed_ <-& (R_iNsTr_242_4534_update_start_)
        // iNsTr_220
        $T[R_iNsTr_220_4535_sample_start_] 
        $T[R_iNsTr_220_4535_sample_completed_] 
        $T[R_iNsTr_220_4535_update_start_] 
        $T[R_iNsTr_220_4535_update_completed_] 
        // implicit reference
        R_iNsTr_220_4535_sample_start_ <-& ($entry)
        R_iNsTr_220_4535_sample_completed_ <-& (R_iNsTr_220_4535_sample_start_)
        R_iNsTr_220_4535_update_start_ <-& (R_iNsTr_220_4535_sample_completed_)
        R_iNsTr_220_4535_update_completed_ <-& (R_iNsTr_220_4535_update_start_)
        MUX_4538_sample_start_ <-& (R_iNsTr_242_4534_update_completed_)
        MUX_4538_sample_start_ <-& (R_iNsTr_220_4535_update_completed_)
        ;;[MUX_4538_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4538_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4538_sample_start_ &-> (MUX_4538_start)
        MUX_4538_sample_completed_ <-& (MUX_4538_start)
        MUX_4538_update_start_ &-> (MUX_4538_complete)
        MUX_4538_update_completed_ <-& (MUX_4538_complete)
        MUX_4538_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_281
        // iNsTr_281
        // implicit reference
        // 		xx_x7 := (iNsTr_246 - iNsTr_281)
        //  file prog.linked.opt.aa, line 1559
        // Source expression
        // (iNsTr_246 - iNsTr_281)
        $T[SUB_u32_u32_4543_sample_start_] 
        $T[SUB_u32_u32_4543_sample_completed_] 
        $T[SUB_u32_u32_4543_update_start_] 
        $T[SUB_u32_u32_4543_update_completed_] 
        // iNsTr_246
        $T[R_iNsTr_246_4541_sample_start_] 
        $T[R_iNsTr_246_4541_sample_completed_] 
        $T[R_iNsTr_246_4541_update_start_] 
        $T[R_iNsTr_246_4541_update_completed_] 
        // implicit reference
        R_iNsTr_246_4541_sample_start_ <-& ($entry)
        R_iNsTr_246_4541_sample_completed_ <-& (R_iNsTr_246_4541_sample_start_)
        R_iNsTr_246_4541_update_start_ <-& (R_iNsTr_246_4541_sample_completed_)
        R_iNsTr_246_4541_update_completed_ <-& (R_iNsTr_246_4541_update_start_)
        // iNsTr_281
        $T[R_iNsTr_281_4542_sample_start_] 
        $T[R_iNsTr_281_4542_sample_completed_] 
        $T[R_iNsTr_281_4542_update_start_] 
        $T[R_iNsTr_281_4542_update_completed_] 
        // implicit reference
        R_iNsTr_281_4542_sample_start_ <-& (MUX_4538_update_completed_)
        R_iNsTr_281_4542_sample_completed_ <-& (R_iNsTr_281_4542_sample_start_)
        R_iNsTr_281_4542_update_start_ <-& (R_iNsTr_281_4542_sample_completed_)
        R_iNsTr_281_4542_update_completed_ <-& (R_iNsTr_281_4542_update_start_)
        SUB_u32_u32_4543_sample_start_ <-& (R_iNsTr_246_4541_update_completed_)
        SUB_u32_u32_4543_sample_start_ <-& (R_iNsTr_281_4542_update_completed_)
        ;;[SUB_u32_u32_4543_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_4543_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_4543_sample_start_ &-> (SUB_u32_u32_4543_Sample)
        SUB_u32_u32_4543_sample_completed_ <-& (SUB_u32_u32_4543_Sample)
        SUB_u32_u32_4543_sample_completed_ &-> ($null)
        SUB_u32_u32_4543_update_start_ &-> (SUB_u32_u32_4543_Update)
        SUB_u32_u32_4543_update_completed_ <-& (SUB_u32_u32_4543_Update)
        // Target expression
        // (as target) xx_x7
        // xx_x7
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_4539_to_assign_stmt_4544__entry__ |-> (assign_stmt_4539_to_assign_stmt_4544)
      assign_stmt_4539_to_assign_stmt_4544__exit__ <-| (assign_stmt_4539_to_assign_stmt_4544)
      // if-statement  
      //  file prog.linked.opt.aa, line 1560
      ;;[if_stmt_4545_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4545__entry__ |-> (if_stmt_4545_dead_link)
      if_stmt_4545__exit__ <-| (if_stmt_4545_dead_link)
      ;;[if_stmt_4545_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_4545__entry__ |-> (if_stmt_4545_eval_test)
      $P [R_iNsTr_242_4546_place]
      R_iNsTr_242_4546_place <-| (if_stmt_4545_eval_test)
      ;;[if_stmt_4545_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4545_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_242_4546_place |-> (if_stmt_4545_if_link if_stmt_4545_else_link)
      $P [bb_25_bb_26]
      bb_25_bb_26 <-| (if_stmt_4545_if_link)
      $P [bb_25_bb_27]
      bb_25_bb_27 <-| (if_stmt_4545_else_link)
      ::[assign_stmt_4557] 
      {
        // 		iNsTr_283 := (xx_x7 + ($bitcast ($uint<32>) _b00000000000000000000000000111000  ))
        //  file prog.linked.opt.aa, line 1567
        // Source expression
        // (xx_x7 + ($bitcast ($uint<32>) _b00000000000000000000000000111000  ))
        $T[ADD_u32_u32_4556_sample_start_] 
        $T[ADD_u32_u32_4556_sample_completed_] 
        $T[ADD_u32_u32_4556_update_start_] 
        $T[ADD_u32_u32_4556_update_completed_] 
        // xx_x7
        $T[R_xx_x7_4553_sample_start_] 
        $T[R_xx_x7_4553_sample_completed_] 
        $T[R_xx_x7_4553_update_start_] 
        $T[R_xx_x7_4553_update_completed_] 
        // implicit reference
        R_xx_x7_4553_sample_start_ <-& ($entry)
        R_xx_x7_4553_sample_completed_ <-& (R_xx_x7_4553_sample_start_)
        R_xx_x7_4553_update_start_ <-& (R_xx_x7_4553_sample_completed_)
        R_xx_x7_4553_update_completed_ <-& (R_xx_x7_4553_update_start_)
        ADD_u32_u32_4556_sample_start_ <-& (R_xx_x7_4553_update_completed_)
        ;;[ADD_u32_u32_4556_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_4556_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_4556_sample_start_ &-> (ADD_u32_u32_4556_Sample)
        ADD_u32_u32_4556_sample_completed_ <-& (ADD_u32_u32_4556_Sample)
        ADD_u32_u32_4556_sample_completed_ &-> ($null)
        ADD_u32_u32_4556_update_start_ &-> (ADD_u32_u32_4556_Update)
        ADD_u32_u32_4556_update_completed_ <-& (ADD_u32_u32_4556_Update)
        // Target expression
        // (as target) iNsTr_283
        // iNsTr_283
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_4557__entry__ |-> (assign_stmt_4557)
      assign_stmt_4557__exit__ <-| (assign_stmt_4557)
      ::[assign_stmt_4567] 
      {
        // 		iNsTr_285 := ( $mux iNsTr_211 ($bitcast ($uint<32>) _b00000000000000000000000001001000  )  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
        //  file prog.linked.opt.aa, line 1571
        // Source expression
        // ( $mux iNsTr_211 ($bitcast ($uint<32>) _b00000000000000000000000001001000  )  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
        $T[MUX_4566_sample_start_] 
        $T[MUX_4566_sample_completed_] 
        $T[MUX_4566_update_start_] 
        $T[MUX_4566_update_completed_] 
        // iNsTr_211
        $T[R_iNsTr_211_4561_sample_start_] 
        $T[R_iNsTr_211_4561_sample_completed_] 
        $T[R_iNsTr_211_4561_update_start_] 
        $T[R_iNsTr_211_4561_update_completed_] 
        // implicit reference
        R_iNsTr_211_4561_sample_start_ <-& ($entry)
        R_iNsTr_211_4561_sample_completed_ <-& (R_iNsTr_211_4561_sample_start_)
        R_iNsTr_211_4561_update_start_ <-& (R_iNsTr_211_4561_sample_completed_)
        R_iNsTr_211_4561_update_completed_ <-& (R_iNsTr_211_4561_update_start_)
        MUX_4566_sample_start_ <-& (R_iNsTr_211_4561_update_completed_)
        ;;[MUX_4566_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4566_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4566_sample_start_ &-> (MUX_4566_start)
        MUX_4566_sample_completed_ <-& (MUX_4566_start)
        MUX_4566_update_start_ &-> (MUX_4566_complete)
        MUX_4566_update_completed_ <-& (MUX_4566_complete)
        MUX_4566_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_285
        // iNsTr_285
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_4567__entry__ |-> (assign_stmt_4567)
      assign_stmt_4567__exit__ <-| (assign_stmt_4567)
      ::[assign_stmt_4583_to_assign_stmt_4614] 
      {
        // 		iNsTr_288 := ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_218 ) 
        //  file prog.linked.opt.aa, line 1576
        // Source expression
        // ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_218 ) 
        $T[MUX_4582_sample_start_] 
        $T[MUX_4582_sample_completed_] 
        $T[MUX_4582_update_start_] 
        $T[MUX_4582_update_completed_] 
        // iNsTr_243
        $T[R_iNsTr_243_4578_sample_start_] 
        $T[R_iNsTr_243_4578_sample_completed_] 
        $T[R_iNsTr_243_4578_update_start_] 
        $T[R_iNsTr_243_4578_update_completed_] 
        // implicit reference
        R_iNsTr_243_4578_sample_start_ <-& ($entry)
        R_iNsTr_243_4578_sample_completed_ <-& (R_iNsTr_243_4578_sample_start_)
        R_iNsTr_243_4578_update_start_ <-& (R_iNsTr_243_4578_sample_completed_)
        R_iNsTr_243_4578_update_completed_ <-& (R_iNsTr_243_4578_update_start_)
        // iNsTr_218
        $T[R_iNsTr_218_4581_sample_start_] 
        $T[R_iNsTr_218_4581_sample_completed_] 
        $T[R_iNsTr_218_4581_update_start_] 
        $T[R_iNsTr_218_4581_update_completed_] 
        // implicit reference
        R_iNsTr_218_4581_sample_start_ <-& ($entry)
        R_iNsTr_218_4581_sample_completed_ <-& (R_iNsTr_218_4581_sample_start_)
        R_iNsTr_218_4581_update_start_ <-& (R_iNsTr_218_4581_sample_completed_)
        R_iNsTr_218_4581_update_completed_ <-& (R_iNsTr_218_4581_update_start_)
        MUX_4582_sample_start_ <-& (R_iNsTr_243_4578_update_completed_)
        MUX_4582_sample_start_ <-& (R_iNsTr_218_4581_update_completed_)
        ;;[MUX_4582_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4582_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4582_sample_start_ &-> (MUX_4582_start)
        MUX_4582_sample_completed_ <-& (MUX_4582_start)
        MUX_4582_update_start_ &-> (MUX_4582_complete)
        MUX_4582_update_completed_ <-& (MUX_4582_complete)
        MUX_4582_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_288
        // iNsTr_288
        // implicit reference
        // 		iNsTr_289 := ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_279 ) 
        //  file prog.linked.opt.aa, line 1577
        // Source expression
        // ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_279 ) 
        $T[MUX_4589_sample_start_] 
        $T[MUX_4589_sample_completed_] 
        $T[MUX_4589_update_start_] 
        $T[MUX_4589_update_completed_] 
        // iNsTr_243
        $T[R_iNsTr_243_4585_sample_start_] 
        $T[R_iNsTr_243_4585_sample_completed_] 
        $T[R_iNsTr_243_4585_update_start_] 
        $T[R_iNsTr_243_4585_update_completed_] 
        // implicit reference
        R_iNsTr_243_4585_sample_start_ <-& ($entry)
        R_iNsTr_243_4585_sample_completed_ <-& (R_iNsTr_243_4585_sample_start_)
        R_iNsTr_243_4585_update_start_ <-& (R_iNsTr_243_4585_sample_completed_)
        R_iNsTr_243_4585_update_completed_ <-& (R_iNsTr_243_4585_update_start_)
        // iNsTr_279
        $T[R_iNsTr_279_4588_sample_start_] 
        $T[R_iNsTr_279_4588_sample_completed_] 
        $T[R_iNsTr_279_4588_update_start_] 
        $T[R_iNsTr_279_4588_update_completed_] 
        // implicit reference
        R_iNsTr_279_4588_sample_start_ <-& ($entry)
        R_iNsTr_279_4588_sample_completed_ <-& (R_iNsTr_279_4588_sample_start_)
        R_iNsTr_279_4588_update_start_ <-& (R_iNsTr_279_4588_sample_completed_)
        R_iNsTr_279_4588_update_completed_ <-& (R_iNsTr_279_4588_update_start_)
        MUX_4589_sample_start_ <-& (R_iNsTr_243_4585_update_completed_)
        MUX_4589_sample_start_ <-& (R_iNsTr_279_4588_update_completed_)
        ;;[MUX_4589_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4589_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4589_sample_start_ &-> (MUX_4589_start)
        MUX_4589_sample_completed_ <-& (MUX_4589_start)
        MUX_4589_update_start_ &-> (MUX_4589_complete)
        MUX_4589_update_completed_ <-& (MUX_4589_complete)
        MUX_4589_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_289
        // iNsTr_289
        // implicit reference
        // 		maxDer := iNsTr_289
        //  file prog.linked.opt.aa, line 1578
        // Source expression
        // iNsTr_289
        $T[R_iNsTr_289_4592_sample_start_] 
        $T[R_iNsTr_289_4592_sample_completed_] 
        $T[R_iNsTr_289_4592_update_start_] 
        $T[R_iNsTr_289_4592_update_completed_] 
        // implicit reference
        R_iNsTr_289_4592_sample_start_ <-& (MUX_4589_update_completed_)
        R_iNsTr_289_4592_sample_completed_ <-& (R_iNsTr_289_4592_sample_start_)
        R_iNsTr_289_4592_update_start_ <-& (R_iNsTr_289_4592_sample_completed_)
        R_iNsTr_289_4592_update_completed_ <-& (R_iNsTr_289_4592_update_start_)
        // Target expression
        // (as target) maxDer
        $T[STORE_maxDer_4591_sample_start_] 
        $T[STORE_maxDer_4591_sample_completed_] 
        $T[STORE_maxDer_4591_update_start_] 
        $T[STORE_maxDer_4591_update_completed_] 
        // maxDer
        $T[STORE_maxDer_4591_word_address_calculated] 
        $T[STORE_maxDer_4591_root_address_calculated] 
        STORE_maxDer_4591_word_address_calculated <-& (STORE_maxDer_4591_root_address_calculated)
        ;;[STORE_maxDer_4591_Sample] 
        {
          ;;[STORE_maxDer_4591_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_maxDer_4591_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_maxDer_4591_sample_start_ <-& (STORE_maxDer_4591_word_address_calculated)
        STORE_maxDer_4591_sample_start_ &-> (STORE_maxDer_4591_Sample)
        STORE_maxDer_4591_sample_completed_ <-& (STORE_maxDer_4591_Sample)
        STORE_maxDer_4591_sample_completed_ &-> ($null)
        STORE_maxDer_4591_update_start_ &-> (STORE_maxDer_4591_Update)
        STORE_maxDer_4591_update_completed_ <-& (STORE_maxDer_4591_Update)
        STORE_maxDer_4591_sample_start_ <-& (R_iNsTr_289_4592_update_completed_)
        // 		iNsTr_291 := ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initBlankx_x1 ) 
        //  file prog.linked.opt.aa, line 1579
        // Source expression
        // ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initBlankx_x1 ) 
        $T[MUX_4599_sample_start_] 
        $T[MUX_4599_sample_completed_] 
        $T[MUX_4599_update_start_] 
        $T[MUX_4599_update_completed_] 
        // iNsTr_243
        $T[R_iNsTr_243_4595_sample_start_] 
        $T[R_iNsTr_243_4595_sample_completed_] 
        $T[R_iNsTr_243_4595_update_start_] 
        $T[R_iNsTr_243_4595_update_completed_] 
        // implicit reference
        R_iNsTr_243_4595_sample_start_ <-& ($entry)
        R_iNsTr_243_4595_sample_completed_ <-& (R_iNsTr_243_4595_sample_start_)
        R_iNsTr_243_4595_update_start_ <-& (R_iNsTr_243_4595_sample_completed_)
        R_iNsTr_243_4595_update_completed_ <-& (R_iNsTr_243_4595_update_start_)
        // initBlankx_x1
        $T[R_initBlankx_x1_4598_sample_start_] 
        $T[R_initBlankx_x1_4598_sample_completed_] 
        $T[R_initBlankx_x1_4598_update_start_] 
        $T[R_initBlankx_x1_4598_update_completed_] 
        // implicit reference
        R_initBlankx_x1_4598_sample_start_ <-& ($entry)
        R_initBlankx_x1_4598_sample_completed_ <-& (R_initBlankx_x1_4598_sample_start_)
        R_initBlankx_x1_4598_update_start_ <-& (R_initBlankx_x1_4598_sample_completed_)
        R_initBlankx_x1_4598_update_completed_ <-& (R_initBlankx_x1_4598_update_start_)
        MUX_4599_sample_start_ <-& (R_iNsTr_243_4595_update_completed_)
        MUX_4599_sample_start_ <-& (R_initBlankx_x1_4598_update_completed_)
        ;;[MUX_4599_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4599_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4599_sample_start_ &-> (MUX_4599_start)
        MUX_4599_sample_completed_ <-& (MUX_4599_start)
        MUX_4599_update_start_ &-> (MUX_4599_complete)
        MUX_4599_update_completed_ <-& (MUX_4599_complete)
        MUX_4599_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_291
        // iNsTr_291
        // implicit reference
        // 		iNsTr_292 := ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initMaxx_x1 ) 
        //  file prog.linked.opt.aa, line 1580
        // Source expression
        // ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initMaxx_x1 ) 
        $T[MUX_4606_sample_start_] 
        $T[MUX_4606_sample_completed_] 
        $T[MUX_4606_update_start_] 
        $T[MUX_4606_update_completed_] 
        // iNsTr_243
        $T[R_iNsTr_243_4602_sample_start_] 
        $T[R_iNsTr_243_4602_sample_completed_] 
        $T[R_iNsTr_243_4602_update_start_] 
        $T[R_iNsTr_243_4602_update_completed_] 
        // implicit reference
        R_iNsTr_243_4602_sample_start_ <-& ($entry)
        R_iNsTr_243_4602_sample_completed_ <-& (R_iNsTr_243_4602_sample_start_)
        R_iNsTr_243_4602_update_start_ <-& (R_iNsTr_243_4602_sample_completed_)
        R_iNsTr_243_4602_update_completed_ <-& (R_iNsTr_243_4602_update_start_)
        // initMaxx_x1
        $T[R_initMaxx_x1_4605_sample_start_] 
        $T[R_initMaxx_x1_4605_sample_completed_] 
        $T[R_initMaxx_x1_4605_update_start_] 
        $T[R_initMaxx_x1_4605_update_completed_] 
        // implicit reference
        R_initMaxx_x1_4605_sample_start_ <-& ($entry)
        R_initMaxx_x1_4605_sample_completed_ <-& (R_initMaxx_x1_4605_sample_start_)
        R_initMaxx_x1_4605_update_start_ <-& (R_initMaxx_x1_4605_sample_completed_)
        R_initMaxx_x1_4605_update_completed_ <-& (R_initMaxx_x1_4605_update_start_)
        MUX_4606_sample_start_ <-& (R_iNsTr_243_4602_update_completed_)
        MUX_4606_sample_start_ <-& (R_initMaxx_x1_4605_update_completed_)
        ;;[MUX_4606_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4606_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4606_sample_start_ &-> (MUX_4606_start)
        MUX_4606_sample_completed_ <-& (MUX_4606_start)
        MUX_4606_update_start_ &-> (MUX_4606_complete)
        MUX_4606_update_completed_ <-& (MUX_4606_complete)
        MUX_4606_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_292
        // iNsTr_292
        // implicit reference
        // 		iNsTr_293 := ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  rset_countx_x1 ) 
        //  file prog.linked.opt.aa, line 1581
        // Source expression
        // ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  rset_countx_x1 ) 
        $T[MUX_4613_sample_start_] 
        $T[MUX_4613_sample_completed_] 
        $T[MUX_4613_update_start_] 
        $T[MUX_4613_update_completed_] 
        // iNsTr_243
        $T[R_iNsTr_243_4609_sample_start_] 
        $T[R_iNsTr_243_4609_sample_completed_] 
        $T[R_iNsTr_243_4609_update_start_] 
        $T[R_iNsTr_243_4609_update_completed_] 
        // implicit reference
        R_iNsTr_243_4609_sample_start_ <-& ($entry)
        R_iNsTr_243_4609_sample_completed_ <-& (R_iNsTr_243_4609_sample_start_)
        R_iNsTr_243_4609_update_start_ <-& (R_iNsTr_243_4609_sample_completed_)
        R_iNsTr_243_4609_update_completed_ <-& (R_iNsTr_243_4609_update_start_)
        // rset_countx_x1
        $T[R_rset_countx_x1_4612_sample_start_] 
        $T[R_rset_countx_x1_4612_sample_completed_] 
        $T[R_rset_countx_x1_4612_update_start_] 
        $T[R_rset_countx_x1_4612_update_completed_] 
        // implicit reference
        R_rset_countx_x1_4612_sample_start_ <-& ($entry)
        R_rset_countx_x1_4612_sample_completed_ <-& (R_rset_countx_x1_4612_sample_start_)
        R_rset_countx_x1_4612_update_start_ <-& (R_rset_countx_x1_4612_sample_completed_)
        R_rset_countx_x1_4612_update_completed_ <-& (R_rset_countx_x1_4612_update_start_)
        MUX_4613_sample_start_ <-& (R_iNsTr_243_4609_update_completed_)
        MUX_4613_sample_start_ <-& (R_rset_countx_x1_4612_update_completed_)
        ;;[MUX_4613_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4613_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4613_sample_start_ &-> (MUX_4613_start)
        MUX_4613_sample_completed_ <-& (MUX_4613_start)
        MUX_4613_update_start_ &-> (MUX_4613_complete)
        MUX_4613_update_completed_ <-& (MUX_4613_complete)
        MUX_4613_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_293
        // iNsTr_293
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_4583_to_assign_stmt_4614__entry__ |-> (assign_stmt_4583_to_assign_stmt_4614)
      assign_stmt_4583_to_assign_stmt_4614__exit__ <-| (assign_stmt_4583_to_assign_stmt_4614)
      ::[assign_stmt_4757] 
      {
        // 		iNsTr_113 := (init8Done_nextx_x0 == ($bitcast ($uint<8>) _b00000000  ))
        //  file prog.linked.opt.aa, line 1601
        // Source expression
        // (init8Done_nextx_x0 == ($bitcast ($uint<8>) _b00000000  ))
        $T[EQ_u8_u1_4756_sample_start_] 
        $T[EQ_u8_u1_4756_sample_completed_] 
        $T[EQ_u8_u1_4756_update_start_] 
        $T[EQ_u8_u1_4756_update_completed_] 
        // init8Done_nextx_x0
        $T[R_init8Done_nextx_x0_4753_sample_start_] 
        $T[R_init8Done_nextx_x0_4753_sample_completed_] 
        $T[R_init8Done_nextx_x0_4753_update_start_] 
        $T[R_init8Done_nextx_x0_4753_update_completed_] 
        // implicit reference
        R_init8Done_nextx_x0_4753_sample_start_ <-& ($entry)
        R_init8Done_nextx_x0_4753_sample_completed_ <-& (R_init8Done_nextx_x0_4753_sample_start_)
        R_init8Done_nextx_x0_4753_update_start_ <-& (R_init8Done_nextx_x0_4753_sample_completed_)
        R_init8Done_nextx_x0_4753_update_completed_ <-& (R_init8Done_nextx_x0_4753_update_start_)
        EQ_u8_u1_4756_sample_start_ <-& (R_init8Done_nextx_x0_4753_update_completed_)
        ;;[EQ_u8_u1_4756_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u8_u1_4756_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u8_u1_4756_sample_start_ &-> (EQ_u8_u1_4756_Sample)
        EQ_u8_u1_4756_sample_completed_ <-& (EQ_u8_u1_4756_Sample)
        EQ_u8_u1_4756_sample_completed_ &-> ($null)
        EQ_u8_u1_4756_update_start_ &-> (EQ_u8_u1_4756_Update)
        EQ_u8_u1_4756_update_completed_ <-& (EQ_u8_u1_4756_Update)
        // Target expression
        // (as target) iNsTr_113
        // iNsTr_113
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_4757__entry__ |-> (assign_stmt_4757)
      assign_stmt_4757__exit__ <-| (assign_stmt_4757)
      // if-statement  
      //  file prog.linked.opt.aa, line 1602
      ;;[if_stmt_4758_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4758__entry__ |-> (if_stmt_4758_dead_link)
      if_stmt_4758__exit__ <-| (if_stmt_4758_dead_link)
      ;;[if_stmt_4758_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_4758__entry__ |-> (if_stmt_4758_eval_test)
      $P [R_iNsTr_113_4759_place]
      R_iNsTr_113_4759_place <-| (if_stmt_4758_eval_test)
      ;;[if_stmt_4758_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4758_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_113_4759_place |-> (if_stmt_4758_if_link if_stmt_4758_else_link)
      $P [bb_29_bb_33]
      bb_29_bb_33 <-| (if_stmt_4758_if_link)
      $P [bb_29_bb_30]
      bb_29_bb_30 <-| (if_stmt_4758_else_link)
      ::[assign_stmt_4770_to_assign_stmt_4843] 
      {
        // 		iNsTr_132 := (initBlankx_x0 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 1609
        // Source expression
        // (initBlankx_x0 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_4769_sample_start_] 
        $T[ADD_u32_u32_4769_sample_completed_] 
        $T[ADD_u32_u32_4769_update_start_] 
        $T[ADD_u32_u32_4769_update_completed_] 
        // initBlankx_x0
        $T[R_initBlankx_x0_4766_sample_start_] 
        $T[R_initBlankx_x0_4766_sample_completed_] 
        $T[R_initBlankx_x0_4766_update_start_] 
        $T[R_initBlankx_x0_4766_update_completed_] 
        // implicit reference
        R_initBlankx_x0_4766_sample_start_ <-& ($entry)
        R_initBlankx_x0_4766_sample_completed_ <-& (R_initBlankx_x0_4766_sample_start_)
        R_initBlankx_x0_4766_update_start_ <-& (R_initBlankx_x0_4766_sample_completed_)
        R_initBlankx_x0_4766_update_completed_ <-& (R_initBlankx_x0_4766_update_start_)
        ADD_u32_u32_4769_sample_start_ <-& (R_initBlankx_x0_4766_update_completed_)
        ;;[ADD_u32_u32_4769_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_4769_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_4769_sample_start_ &-> (ADD_u32_u32_4769_Sample)
        ADD_u32_u32_4769_sample_completed_ <-& (ADD_u32_u32_4769_Sample)
        ADD_u32_u32_4769_sample_completed_ &-> ($null)
        ADD_u32_u32_4769_update_start_ &-> (ADD_u32_u32_4769_Update)
        ADD_u32_u32_4769_update_completed_ <-& (ADD_u32_u32_4769_Update)
        // Target expression
        // (as target) iNsTr_132
        // iNsTr_132
        // implicit reference
        // 		iNsTr_133 := (iNsTr_132 == ($bitcast ($uint<32>) _b00000000000000000000000011001000  ))
        //  file prog.linked.opt.aa, line 1610
        // Source expression
        // (iNsTr_132 == ($bitcast ($uint<32>) _b00000000000000000000000011001000  ))
        $T[EQ_u32_u1_4775_sample_start_] 
        $T[EQ_u32_u1_4775_sample_completed_] 
        $T[EQ_u32_u1_4775_update_start_] 
        $T[EQ_u32_u1_4775_update_completed_] 
        // iNsTr_132
        $T[R_iNsTr_132_4772_sample_start_] 
        $T[R_iNsTr_132_4772_sample_completed_] 
        $T[R_iNsTr_132_4772_update_start_] 
        $T[R_iNsTr_132_4772_update_completed_] 
        // implicit reference
        R_iNsTr_132_4772_sample_start_ <-& (ADD_u32_u32_4769_update_completed_)
        R_iNsTr_132_4772_sample_completed_ <-& (R_iNsTr_132_4772_sample_start_)
        R_iNsTr_132_4772_update_start_ <-& (R_iNsTr_132_4772_sample_completed_)
        R_iNsTr_132_4772_update_completed_ <-& (R_iNsTr_132_4772_update_start_)
        EQ_u32_u1_4775_sample_start_ <-& (R_iNsTr_132_4772_update_completed_)
        ;;[EQ_u32_u1_4775_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_4775_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_4775_sample_start_ &-> (EQ_u32_u1_4775_Sample)
        EQ_u32_u1_4775_sample_completed_ <-& (EQ_u32_u1_4775_Sample)
        EQ_u32_u1_4775_sample_completed_ &-> ($null)
        EQ_u32_u1_4775_update_start_ &-> (EQ_u32_u1_4775_Update)
        EQ_u32_u1_4775_update_completed_ <-& (EQ_u32_u1_4775_Update)
        // Target expression
        // (as target) iNsTr_133
        // iNsTr_133
        // implicit reference
        // 		iNsTr_134 := ( $mux iNsTr_133 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_132 ) 
        //  file prog.linked.opt.aa, line 1611
        // Source expression
        // ( $mux iNsTr_133 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_132 ) 
        $T[MUX_4782_sample_start_] 
        $T[MUX_4782_sample_completed_] 
        $T[MUX_4782_update_start_] 
        $T[MUX_4782_update_completed_] 
        // iNsTr_133
        $T[R_iNsTr_133_4778_sample_start_] 
        $T[R_iNsTr_133_4778_sample_completed_] 
        $T[R_iNsTr_133_4778_update_start_] 
        $T[R_iNsTr_133_4778_update_completed_] 
        // implicit reference
        R_iNsTr_133_4778_sample_start_ <-& (EQ_u32_u1_4775_update_completed_)
        R_iNsTr_133_4778_sample_completed_ <-& (R_iNsTr_133_4778_sample_start_)
        R_iNsTr_133_4778_update_start_ <-& (R_iNsTr_133_4778_sample_completed_)
        R_iNsTr_133_4778_update_completed_ <-& (R_iNsTr_133_4778_update_start_)
        // iNsTr_132
        $T[R_iNsTr_132_4781_sample_start_] 
        $T[R_iNsTr_132_4781_sample_completed_] 
        $T[R_iNsTr_132_4781_update_start_] 
        $T[R_iNsTr_132_4781_update_completed_] 
        // implicit reference
        R_iNsTr_132_4781_sample_start_ <-& (ADD_u32_u32_4769_update_completed_)
        R_iNsTr_132_4781_sample_completed_ <-& (R_iNsTr_132_4781_sample_start_)
        R_iNsTr_132_4781_update_start_ <-& (R_iNsTr_132_4781_sample_completed_)
        R_iNsTr_132_4781_update_completed_ <-& (R_iNsTr_132_4781_update_start_)
        MUX_4782_sample_start_ <-& (R_iNsTr_133_4778_update_completed_)
        MUX_4782_sample_start_ <-& (R_iNsTr_132_4781_update_completed_)
        ;;[MUX_4782_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4782_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4782_sample_start_ &-> (MUX_4782_start)
        MUX_4782_sample_completed_ <-& (MUX_4782_start)
        MUX_4782_update_start_ &-> (MUX_4782_complete)
        MUX_4782_update_completed_ <-& (MUX_4782_complete)
        MUX_4782_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_134
        // iNsTr_134
        // implicit reference
        // 		iNsTr_135 := RSETbuff[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][rset_countx_x0]
        //  file prog.linked.opt.aa, line 1612
        // Source expression
        // RSETbuff[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][rset_countx_x0]
        $T[array_obj_ref_4788_base_address_calculated] 
        $T[array_obj_ref_4788_sample_start_] 
        $T[array_obj_ref_4788_sample_completed_] 
        $T[array_obj_ref_4788_update_start_] 
        $T[array_obj_ref_4788_update_completed_] 
        $T[array_obj_ref_4788_root_address_calculated] 
        $T[array_obj_ref_4788_offset_calculated] 
        $T[array_obj_ref_4788_index_resized_1] 
        $T[array_obj_ref_4788_index_scaled_1] 
        // rset_countx_x0
        $T[R_rset_countx_x0_4787_sample_start_] 
        $T[R_rset_countx_x0_4787_sample_completed_] 
        $T[R_rset_countx_x0_4787_update_start_] 
        $T[R_rset_countx_x0_4787_update_completed_] 
        // implicit reference
        R_rset_countx_x0_4787_sample_start_ <-& ($entry)
        R_rset_countx_x0_4787_sample_completed_ <-& (R_rset_countx_x0_4787_sample_start_)
        R_rset_countx_x0_4787_update_start_ <-& (R_rset_countx_x0_4787_sample_completed_)
        R_rset_countx_x0_4787_update_completed_ <-& (R_rset_countx_x0_4787_update_start_)
        ;;[array_obj_ref_4788_index_resize_1] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        R_rset_countx_x0_4787_update_completed_ &-> (array_obj_ref_4788_index_resize_1)
        array_obj_ref_4788_index_resized_1 <-& (array_obj_ref_4788_index_resize_1)
        ;;[array_obj_ref_4788_index_scale_1] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_4788_index_resized_1 &-> (array_obj_ref_4788_index_scale_1)
        array_obj_ref_4788_index_scaled_1 <-& (array_obj_ref_4788_index_scale_1)
        $T[array_obj_ref_4788_final_index_sum_regn_sample_complete] 
        $T[array_obj_ref_4788_final_index_sum_regn_update_start] 
        ;;[array_obj_ref_4788_final_index_sum_regn_Sample] 
        {
          $T [req] $T [ack] 
        }
        ;;[array_obj_ref_4788_final_index_sum_regn_Update] 
        {
          $T [req] $T [ack] 
        }
        array_obj_ref_4788_index_scaled_1 &-> (array_obj_ref_4788_final_index_sum_regn_Sample)
        array_obj_ref_4788_final_index_sum_regn_sample_complete <-& (array_obj_ref_4788_final_index_sum_regn_Sample)
        array_obj_ref_4788_final_index_sum_regn_update_start &-> (array_obj_ref_4788_final_index_sum_regn_Update)
        array_obj_ref_4788_offset_calculated <-& (array_obj_ref_4788_final_index_sum_regn_Update)
        ;;[array_obj_ref_4788_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_4788_offset_calculated &-> (array_obj_ref_4788_base_plus_offset)
        array_obj_ref_4788_root_address_calculated <-& (array_obj_ref_4788_base_plus_offset)
        ;;[array_obj_ref_4788_request] 
        {
          $T [req] $T [ack]
        }
        ;;[array_obj_ref_4788_complete] 
        {
          $T [req] $T [ack]
        }
        array_obj_ref_4788_sample_start_ <-& (array_obj_ref_4788_root_address_calculated)
        array_obj_ref_4788_sample_start_ &-> (array_obj_ref_4788_request)
        array_obj_ref_4788_sample_completed_ <-& (array_obj_ref_4788_request)
        array_obj_ref_4788_update_start_ &-> (array_obj_ref_4788_complete)
        array_obj_ref_4788_update_completed_ <-& (array_obj_ref_4788_complete)
        // Target expression
        // (as target) iNsTr_135
        // iNsTr_135
        // implicit reference
        // 		->(iNsTr_135) := initMaxx_x0
        //  file prog.linked.opt.aa, line 1613
        // Source expression
        // initMaxx_x0
        $T[R_initMaxx_x0_4792_sample_start_] 
        $T[R_initMaxx_x0_4792_sample_completed_] 
        $T[R_initMaxx_x0_4792_update_start_] 
        $T[R_initMaxx_x0_4792_update_completed_] 
        // implicit reference
        R_initMaxx_x0_4792_sample_start_ <-& ($entry)
        R_initMaxx_x0_4792_sample_completed_ <-& (R_initMaxx_x0_4792_sample_start_)
        R_initMaxx_x0_4792_update_start_ <-& (R_initMaxx_x0_4792_sample_completed_)
        R_initMaxx_x0_4792_update_completed_ <-& (R_initMaxx_x0_4792_update_start_)
        // Target expression
        // ->(iNsTr_135)
        $T[ptr_deref_4791_sample_start_] 
        $T[ptr_deref_4791_sample_completed_] 
        $T[ptr_deref_4791_update_start_] 
        $T[ptr_deref_4791_update_completed_] 
        $T[ptr_deref_4791_base_address_calculated] 
        // iNsTr_135
        $T[R_iNsTr_135_4790_sample_start_] 
        $T[R_iNsTr_135_4790_sample_completed_] 
        $T[R_iNsTr_135_4790_update_start_] 
        $T[R_iNsTr_135_4790_update_completed_] 
        // implicit reference
        R_iNsTr_135_4790_sample_start_ <-& (array_obj_ref_4788_update_completed_)
        R_iNsTr_135_4790_sample_completed_ <-& (R_iNsTr_135_4790_sample_start_)
        R_iNsTr_135_4790_update_start_ <-& (R_iNsTr_135_4790_sample_completed_)
        R_iNsTr_135_4790_update_completed_ <-& (R_iNsTr_135_4790_update_start_)
        $T[ptr_deref_4791_word_address_calculated] 
        $T[ptr_deref_4791_root_address_calculated] 
        $T[ptr_deref_4791_base_address_resized] 
        ;;[ptr_deref_4791_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_4791_base_address_calculated &-> (ptr_deref_4791_base_addr_resize)
        ptr_deref_4791_base_address_resized <-& (ptr_deref_4791_base_addr_resize)
        ;;[ptr_deref_4791_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_4791_base_address_resized &-> (ptr_deref_4791_base_plus_offset)
        ptr_deref_4791_root_address_calculated <-& (ptr_deref_4791_base_plus_offset)
        ;;[ptr_deref_4791_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_4791_root_address_calculated &-> (ptr_deref_4791_word_addrgen)
        ptr_deref_4791_word_address_calculated <-& (ptr_deref_4791_word_addrgen)
        ;;[ptr_deref_4791_Sample] 
        {
          ;;[ptr_deref_4791_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_4791_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_4791_sample_start_ <-& (ptr_deref_4791_word_address_calculated)
        ptr_deref_4791_sample_start_ &-> (ptr_deref_4791_Sample)
        ptr_deref_4791_sample_completed_ <-& (ptr_deref_4791_Sample)
        ptr_deref_4791_sample_completed_ &-> ($null)
        ptr_deref_4791_update_start_ &-> (ptr_deref_4791_Update)
        ptr_deref_4791_update_completed_ <-& (ptr_deref_4791_Update)
        ptr_deref_4791_base_address_calculated <-& (R_iNsTr_135_4790_update_completed_)
        ptr_deref_4791_sample_start_ <-& (ptr_deref_4791_base_address_calculated)
        ptr_deref_4791_sample_start_ <-& (R_initMaxx_x0_4792_update_completed_)
        // 		iNsTr_137 := ( $mux iNsTr_133 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initMaxx_x0 ) 
        //  file prog.linked.opt.aa, line 1614
        // Source expression
        // ( $mux iNsTr_133 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initMaxx_x0 ) 
        $T[MUX_4799_sample_start_] 
        $T[MUX_4799_sample_completed_] 
        $T[MUX_4799_update_start_] 
        $T[MUX_4799_update_completed_] 
        // iNsTr_133
        $T[R_iNsTr_133_4795_sample_start_] 
        $T[R_iNsTr_133_4795_sample_completed_] 
        $T[R_iNsTr_133_4795_update_start_] 
        $T[R_iNsTr_133_4795_update_completed_] 
        // implicit reference
        R_iNsTr_133_4795_sample_start_ <-& (EQ_u32_u1_4775_update_completed_)
        R_iNsTr_133_4795_sample_completed_ <-& (R_iNsTr_133_4795_sample_start_)
        R_iNsTr_133_4795_update_start_ <-& (R_iNsTr_133_4795_sample_completed_)
        R_iNsTr_133_4795_update_completed_ <-& (R_iNsTr_133_4795_update_start_)
        // initMaxx_x0
        $T[R_initMaxx_x0_4798_sample_start_] 
        $T[R_initMaxx_x0_4798_sample_completed_] 
        $T[R_initMaxx_x0_4798_update_start_] 
        $T[R_initMaxx_x0_4798_update_completed_] 
        // implicit reference
        R_initMaxx_x0_4798_sample_start_ <-& ($entry)
        R_initMaxx_x0_4798_sample_completed_ <-& (R_initMaxx_x0_4798_sample_start_)
        R_initMaxx_x0_4798_update_start_ <-& (R_initMaxx_x0_4798_sample_completed_)
        R_initMaxx_x0_4798_update_completed_ <-& (R_initMaxx_x0_4798_update_start_)
        MUX_4799_sample_start_ <-& (R_iNsTr_133_4795_update_completed_)
        MUX_4799_sample_start_ <-& (R_initMaxx_x0_4798_update_completed_)
        ;;[MUX_4799_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4799_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4799_sample_start_ &-> (MUX_4799_start)
        MUX_4799_sample_completed_ <-& (MUX_4799_start)
        MUX_4799_update_start_ &-> (MUX_4799_complete)
        MUX_4799_update_completed_ <-& (MUX_4799_complete)
        MUX_4799_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_137
        // iNsTr_137
        // implicit reference
        // 		iNsTr_138 := ($cast ($uint<32>) iNsTr_133 )
        //  file prog.linked.opt.aa, line 1615
        // Source expression
        // ($cast ($uint<32>) iNsTr_133 )
        $T[type_cast_4803_sample_start_] 
        $T[type_cast_4803_sample_completed_] 
        $T[type_cast_4803_update_start_] 
        $T[type_cast_4803_update_completed_] 
        // iNsTr_133
        $T[R_iNsTr_133_4802_sample_start_] 
        $T[R_iNsTr_133_4802_sample_completed_] 
        $T[R_iNsTr_133_4802_update_start_] 
        $T[R_iNsTr_133_4802_update_completed_] 
        // implicit reference
        R_iNsTr_133_4802_sample_start_ <-& (EQ_u32_u1_4775_update_completed_)
        R_iNsTr_133_4802_sample_completed_ <-& (R_iNsTr_133_4802_sample_start_)
        R_iNsTr_133_4802_update_start_ <-& (R_iNsTr_133_4802_sample_completed_)
        R_iNsTr_133_4802_update_completed_ <-& (R_iNsTr_133_4802_update_start_)
        type_cast_4803_sample_start_ <-& (R_iNsTr_133_4802_update_completed_)
        ;;[type_cast_4803_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4803_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4803_sample_start_ &-> (type_cast_4803_Sample)
        type_cast_4803_sample_completed_ <-& (type_cast_4803_Sample)
        type_cast_4803_sample_completed_ &-> ($null)
        type_cast_4803_update_start_ &-> (type_cast_4803_Update)
        type_cast_4803_update_completed_ <-& (type_cast_4803_Update)
        // Target expression
        // (as target) iNsTr_138
        // iNsTr_138
        // implicit reference
        // 		iNsTr_139 := (iNsTr_138 + rset_countx_x0)
        //  file prog.linked.opt.aa, line 1616
        // Source expression
        // (iNsTr_138 + rset_countx_x0)
        $T[ADD_u32_u32_4808_sample_start_] 
        $T[ADD_u32_u32_4808_sample_completed_] 
        $T[ADD_u32_u32_4808_update_start_] 
        $T[ADD_u32_u32_4808_update_completed_] 
        // iNsTr_138
        $T[R_iNsTr_138_4806_sample_start_] 
        $T[R_iNsTr_138_4806_sample_completed_] 
        $T[R_iNsTr_138_4806_update_start_] 
        $T[R_iNsTr_138_4806_update_completed_] 
        // implicit reference
        R_iNsTr_138_4806_sample_start_ <-& (type_cast_4803_update_completed_)
        R_iNsTr_138_4806_sample_completed_ <-& (R_iNsTr_138_4806_sample_start_)
        R_iNsTr_138_4806_update_start_ <-& (R_iNsTr_138_4806_sample_completed_)
        R_iNsTr_138_4806_update_completed_ <-& (R_iNsTr_138_4806_update_start_)
        // rset_countx_x0
        $T[R_rset_countx_x0_4807_sample_start_] 
        $T[R_rset_countx_x0_4807_sample_completed_] 
        $T[R_rset_countx_x0_4807_update_start_] 
        $T[R_rset_countx_x0_4807_update_completed_] 
        // implicit reference
        R_rset_countx_x0_4807_sample_start_ <-& ($entry)
        R_rset_countx_x0_4807_sample_completed_ <-& (R_rset_countx_x0_4807_sample_start_)
        R_rset_countx_x0_4807_update_start_ <-& (R_rset_countx_x0_4807_sample_completed_)
        R_rset_countx_x0_4807_update_completed_ <-& (R_rset_countx_x0_4807_update_start_)
        ADD_u32_u32_4808_sample_start_ <-& (R_iNsTr_138_4806_update_completed_)
        ADD_u32_u32_4808_sample_start_ <-& (R_rset_countx_x0_4807_update_completed_)
        ;;[ADD_u32_u32_4808_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_4808_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_4808_sample_start_ &-> (ADD_u32_u32_4808_Sample)
        ADD_u32_u32_4808_sample_completed_ <-& (ADD_u32_u32_4808_Sample)
        ADD_u32_u32_4808_sample_completed_ &-> ($null)
        ADD_u32_u32_4808_update_start_ &-> (ADD_u32_u32_4808_Update)
        ADD_u32_u32_4808_update_completed_ <-& (ADD_u32_u32_4808_Update)
        // Target expression
        // (as target) iNsTr_139
        // iNsTr_139
        // implicit reference
        // 		iNsTr_140 := (iNsTr_139 == ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
        //  file prog.linked.opt.aa, line 1617
        // Source expression
        // (iNsTr_139 == ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
        $T[EQ_u32_u1_4814_sample_start_] 
        $T[EQ_u32_u1_4814_sample_completed_] 
        $T[EQ_u32_u1_4814_update_start_] 
        $T[EQ_u32_u1_4814_update_completed_] 
        // iNsTr_139
        $T[R_iNsTr_139_4811_sample_start_] 
        $T[R_iNsTr_139_4811_sample_completed_] 
        $T[R_iNsTr_139_4811_update_start_] 
        $T[R_iNsTr_139_4811_update_completed_] 
        // implicit reference
        R_iNsTr_139_4811_sample_start_ <-& (ADD_u32_u32_4808_update_completed_)
        R_iNsTr_139_4811_sample_completed_ <-& (R_iNsTr_139_4811_sample_start_)
        R_iNsTr_139_4811_update_start_ <-& (R_iNsTr_139_4811_sample_completed_)
        R_iNsTr_139_4811_update_completed_ <-& (R_iNsTr_139_4811_update_start_)
        EQ_u32_u1_4814_sample_start_ <-& (R_iNsTr_139_4811_update_completed_)
        ;;[EQ_u32_u1_4814_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_4814_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_4814_sample_start_ &-> (EQ_u32_u1_4814_Sample)
        EQ_u32_u1_4814_sample_completed_ <-& (EQ_u32_u1_4814_Sample)
        EQ_u32_u1_4814_sample_completed_ &-> ($null)
        EQ_u32_u1_4814_update_start_ &-> (EQ_u32_u1_4814_Update)
        EQ_u32_u1_4814_update_completed_ <-& (EQ_u32_u1_4814_Update)
        // Target expression
        // (as target) iNsTr_140
        // iNsTr_140
        // implicit reference
        // 		iNsTr_141 := ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  nmeanx_x0 ) 
        //  file prog.linked.opt.aa, line 1618
        // Source expression
        // ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  nmeanx_x0 ) 
        $T[MUX_4821_sample_start_] 
        $T[MUX_4821_sample_completed_] 
        $T[MUX_4821_update_start_] 
        $T[MUX_4821_update_completed_] 
        // iNsTr_140
        $T[R_iNsTr_140_4817_sample_start_] 
        $T[R_iNsTr_140_4817_sample_completed_] 
        $T[R_iNsTr_140_4817_update_start_] 
        $T[R_iNsTr_140_4817_update_completed_] 
        // implicit reference
        R_iNsTr_140_4817_sample_start_ <-& (EQ_u32_u1_4814_update_completed_)
        R_iNsTr_140_4817_sample_completed_ <-& (R_iNsTr_140_4817_sample_start_)
        R_iNsTr_140_4817_update_start_ <-& (R_iNsTr_140_4817_sample_completed_)
        R_iNsTr_140_4817_update_completed_ <-& (R_iNsTr_140_4817_update_start_)
        // nmeanx_x0
        $T[R_nmeanx_x0_4820_sample_start_] 
        $T[R_nmeanx_x0_4820_sample_completed_] 
        $T[R_nmeanx_x0_4820_update_start_] 
        $T[R_nmeanx_x0_4820_update_completed_] 
        // implicit reference
        R_nmeanx_x0_4820_sample_start_ <-& ($entry)
        R_nmeanx_x0_4820_sample_completed_ <-& (R_nmeanx_x0_4820_sample_start_)
        R_nmeanx_x0_4820_update_start_ <-& (R_nmeanx_x0_4820_sample_completed_)
        R_nmeanx_x0_4820_update_completed_ <-& (R_nmeanx_x0_4820_update_start_)
        MUX_4821_sample_start_ <-& (R_iNsTr_140_4817_update_completed_)
        MUX_4821_sample_start_ <-& (R_nmeanx_x0_4820_update_completed_)
        ;;[MUX_4821_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4821_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4821_sample_start_ &-> (MUX_4821_start)
        MUX_4821_sample_completed_ <-& (MUX_4821_start)
        MUX_4821_update_start_ &-> (MUX_4821_complete)
        MUX_4821_update_completed_ <-& (MUX_4821_complete)
        MUX_4821_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_141
        // iNsTr_141
        // implicit reference
        // 		iNsTr_142 := ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000101001010  )  sb_countx_x0 ) 
        //  file prog.linked.opt.aa, line 1619
        // Source expression
        // ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000101001010  )  sb_countx_x0 ) 
        $T[MUX_4828_sample_start_] 
        $T[MUX_4828_sample_completed_] 
        $T[MUX_4828_update_start_] 
        $T[MUX_4828_update_completed_] 
        // iNsTr_140
        $T[R_iNsTr_140_4824_sample_start_] 
        $T[R_iNsTr_140_4824_sample_completed_] 
        $T[R_iNsTr_140_4824_update_start_] 
        $T[R_iNsTr_140_4824_update_completed_] 
        // implicit reference
        R_iNsTr_140_4824_sample_start_ <-& (EQ_u32_u1_4814_update_completed_)
        R_iNsTr_140_4824_sample_completed_ <-& (R_iNsTr_140_4824_sample_start_)
        R_iNsTr_140_4824_update_start_ <-& (R_iNsTr_140_4824_sample_completed_)
        R_iNsTr_140_4824_update_completed_ <-& (R_iNsTr_140_4824_update_start_)
        // sb_countx_x0
        $T[R_sb_countx_x0_4827_sample_start_] 
        $T[R_sb_countx_x0_4827_sample_completed_] 
        $T[R_sb_countx_x0_4827_update_start_] 
        $T[R_sb_countx_x0_4827_update_completed_] 
        // implicit reference
        R_sb_countx_x0_4827_sample_start_ <-& ($entry)
        R_sb_countx_x0_4827_sample_completed_ <-& (R_sb_countx_x0_4827_sample_start_)
        R_sb_countx_x0_4827_update_start_ <-& (R_sb_countx_x0_4827_sample_completed_)
        R_sb_countx_x0_4827_update_completed_ <-& (R_sb_countx_x0_4827_update_start_)
        MUX_4828_sample_start_ <-& (R_iNsTr_140_4824_update_completed_)
        MUX_4828_sample_start_ <-& (R_sb_countx_x0_4827_update_completed_)
        ;;[MUX_4828_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4828_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4828_sample_start_ &-> (MUX_4828_start)
        MUX_4828_sample_completed_ <-& (MUX_4828_start)
        MUX_4828_update_start_ &-> (MUX_4828_complete)
        MUX_4828_update_completed_ <-& (MUX_4828_complete)
        MUX_4828_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_142
        // iNsTr_142
        // implicit reference
        // 		iNsTr_143 := ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_134 ) 
        //  file prog.linked.opt.aa, line 1620
        // Source expression
        // ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_134 ) 
        $T[MUX_4835_sample_start_] 
        $T[MUX_4835_sample_completed_] 
        $T[MUX_4835_update_start_] 
        $T[MUX_4835_update_completed_] 
        // iNsTr_140
        $T[R_iNsTr_140_4831_sample_start_] 
        $T[R_iNsTr_140_4831_sample_completed_] 
        $T[R_iNsTr_140_4831_update_start_] 
        $T[R_iNsTr_140_4831_update_completed_] 
        // implicit reference
        R_iNsTr_140_4831_sample_start_ <-& (EQ_u32_u1_4814_update_completed_)
        R_iNsTr_140_4831_sample_completed_ <-& (R_iNsTr_140_4831_sample_start_)
        R_iNsTr_140_4831_update_start_ <-& (R_iNsTr_140_4831_sample_completed_)
        R_iNsTr_140_4831_update_completed_ <-& (R_iNsTr_140_4831_update_start_)
        // iNsTr_134
        $T[R_iNsTr_134_4834_sample_start_] 
        $T[R_iNsTr_134_4834_sample_completed_] 
        $T[R_iNsTr_134_4834_update_start_] 
        $T[R_iNsTr_134_4834_update_completed_] 
        // implicit reference
        R_iNsTr_134_4834_sample_start_ <-& (MUX_4782_update_completed_)
        R_iNsTr_134_4834_sample_completed_ <-& (R_iNsTr_134_4834_sample_start_)
        R_iNsTr_134_4834_update_start_ <-& (R_iNsTr_134_4834_sample_completed_)
        R_iNsTr_134_4834_update_completed_ <-& (R_iNsTr_134_4834_update_start_)
        MUX_4835_sample_start_ <-& (R_iNsTr_140_4831_update_completed_)
        MUX_4835_sample_start_ <-& (R_iNsTr_134_4834_update_completed_)
        ;;[MUX_4835_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4835_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4835_sample_start_ &-> (MUX_4835_start)
        MUX_4835_sample_completed_ <-& (MUX_4835_start)
        MUX_4835_update_start_ &-> (MUX_4835_complete)
        MUX_4835_update_completed_ <-& (MUX_4835_complete)
        MUX_4835_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_143
        // iNsTr_143
        // implicit reference
        // 		iNsTr_144 := ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_139 ) 
        //  file prog.linked.opt.aa, line 1621
        // Source expression
        // ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_139 ) 
        $T[MUX_4842_sample_start_] 
        $T[MUX_4842_sample_completed_] 
        $T[MUX_4842_update_start_] 
        $T[MUX_4842_update_completed_] 
        // iNsTr_140
        $T[R_iNsTr_140_4838_sample_start_] 
        $T[R_iNsTr_140_4838_sample_completed_] 
        $T[R_iNsTr_140_4838_update_start_] 
        $T[R_iNsTr_140_4838_update_completed_] 
        // implicit reference
        R_iNsTr_140_4838_sample_start_ <-& (EQ_u32_u1_4814_update_completed_)
        R_iNsTr_140_4838_sample_completed_ <-& (R_iNsTr_140_4838_sample_start_)
        R_iNsTr_140_4838_update_start_ <-& (R_iNsTr_140_4838_sample_completed_)
        R_iNsTr_140_4838_update_completed_ <-& (R_iNsTr_140_4838_update_start_)
        // iNsTr_139
        $T[R_iNsTr_139_4841_sample_start_] 
        $T[R_iNsTr_139_4841_sample_completed_] 
        $T[R_iNsTr_139_4841_update_start_] 
        $T[R_iNsTr_139_4841_update_completed_] 
        // implicit reference
        R_iNsTr_139_4841_sample_start_ <-& (ADD_u32_u32_4808_update_completed_)
        R_iNsTr_139_4841_sample_completed_ <-& (R_iNsTr_139_4841_sample_start_)
        R_iNsTr_139_4841_update_start_ <-& (R_iNsTr_139_4841_sample_completed_)
        R_iNsTr_139_4841_update_completed_ <-& (R_iNsTr_139_4841_update_start_)
        MUX_4842_sample_start_ <-& (R_iNsTr_140_4838_update_completed_)
        MUX_4842_sample_start_ <-& (R_iNsTr_139_4841_update_completed_)
        ;;[MUX_4842_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4842_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4842_sample_start_ &-> (MUX_4842_start)
        MUX_4842_sample_completed_ <-& (MUX_4842_start)
        MUX_4842_update_start_ &-> (MUX_4842_complete)
        MUX_4842_update_completed_ <-& (MUX_4842_complete)
        MUX_4842_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_144
        // iNsTr_144
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_4770_to_assign_stmt_4843__entry__ |-> (assign_stmt_4770_to_assign_stmt_4843)
      assign_stmt_4770_to_assign_stmt_4843__exit__ <-| (assign_stmt_4770_to_assign_stmt_4843)
      // if-statement  
      //  file prog.linked.opt.aa, line 1622
      ;;[if_stmt_4844_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4844__entry__ |-> (if_stmt_4844_dead_link)
      if_stmt_4844__exit__ <-| (if_stmt_4844_dead_link)
      ;;[if_stmt_4844_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_4844__entry__ |-> (if_stmt_4844_eval_test)
      $P [R_iNsTr_140_4845_place]
      R_iNsTr_140_4845_place <-| (if_stmt_4844_eval_test)
      ;;[if_stmt_4844_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4844_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_140_4845_place |-> (if_stmt_4844_if_link if_stmt_4844_else_link)
      $P [bb_30_bb_31]
      bb_30_bb_31 <-| (if_stmt_4844_if_link)
      $P [bb_30_bb_32]
      bb_30_bb_32 <-| (if_stmt_4844_else_link)
      ::[assign_stmt_4857_to_assign_stmt_5112] 
      {
        // 		iNsTr_153 := ->(scevgep)
        //  file prog.linked.opt.aa, line 1630
        // Source expression
        // ->(scevgep)
        $T[ptr_deref_4860_sample_start_] 
        $T[ptr_deref_4860_sample_completed_] 
        $T[ptr_deref_4860_update_start_] 
        $T[ptr_deref_4860_update_completed_] 
        $T[ptr_deref_4860_base_address_calculated] 
        // scevgep
        $T[R_scevgep_4859_sample_start_] 
        $T[R_scevgep_4859_sample_completed_] 
        $T[R_scevgep_4859_update_start_] 
        $T[R_scevgep_4859_update_completed_] 
        // implicit reference
        R_scevgep_4859_sample_start_ <-& ($entry)
        R_scevgep_4859_sample_completed_ <-& (R_scevgep_4859_sample_start_)
        R_scevgep_4859_update_start_ <-& (R_scevgep_4859_sample_completed_)
        R_scevgep_4859_update_completed_ <-& (R_scevgep_4859_update_start_)
        $T[ptr_deref_4860_word_address_calculated] 
        $T[ptr_deref_4860_root_address_calculated] 
        $T[ptr_deref_4860_base_address_resized] 
        ;;[ptr_deref_4860_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_4860_base_address_calculated &-> (ptr_deref_4860_base_addr_resize)
        ptr_deref_4860_base_address_resized <-& (ptr_deref_4860_base_addr_resize)
        ;;[ptr_deref_4860_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_4860_base_address_resized &-> (ptr_deref_4860_base_plus_offset)
        ptr_deref_4860_root_address_calculated <-& (ptr_deref_4860_base_plus_offset)
        ;;[ptr_deref_4860_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_4860_root_address_calculated &-> (ptr_deref_4860_word_addrgen)
        ptr_deref_4860_word_address_calculated <-& (ptr_deref_4860_word_addrgen)
        ;;[ptr_deref_4860_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_4860_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_4860_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_4860_sample_start_ <-& (ptr_deref_4860_word_address_calculated)
        ptr_deref_4860_sample_start_ &-> (ptr_deref_4860_Sample)
        ptr_deref_4860_sample_completed_ <-& (ptr_deref_4860_Sample)
        ptr_deref_4860_sample_completed_ &-> ($null)
        ptr_deref_4860_update_start_ &-> (ptr_deref_4860_Update)
        ptr_deref_4860_update_completed_ <-& (ptr_deref_4860_Update)
        ptr_deref_4860_base_address_calculated <-& (R_scevgep_4859_update_completed_)
        ptr_deref_4860_sample_start_ <-& (ptr_deref_4860_base_address_calculated)
        // Target expression
        // (as target) iNsTr_153
        // iNsTr_153
        // implicit reference
        // 		->(iNsTr_154) := iNsTr_153
        //  file prog.linked.opt.aa, line 1632
        // Source expression
        // iNsTr_153
        $T[R_iNsTr_153_4870_sample_start_] 
        $T[R_iNsTr_153_4870_sample_completed_] 
        $T[R_iNsTr_153_4870_update_start_] 
        $T[R_iNsTr_153_4870_update_completed_] 
        // implicit reference
        R_iNsTr_153_4870_sample_start_ <-& (ptr_deref_4860_update_completed_)
        R_iNsTr_153_4870_sample_completed_ <-& (R_iNsTr_153_4870_sample_start_)
        R_iNsTr_153_4870_update_start_ <-& (R_iNsTr_153_4870_sample_completed_)
        R_iNsTr_153_4870_update_completed_ <-& (R_iNsTr_153_4870_update_start_)
        // Target expression
        // ->(iNsTr_154)
        $T[ptr_deref_4869_sample_start_] 
        $T[ptr_deref_4869_sample_completed_] 
        $T[ptr_deref_4869_update_start_] 
        $T[ptr_deref_4869_update_completed_] 
        $T[ptr_deref_4869_base_address_calculated] 
        // iNsTr_154
        $T[R_iNsTr_154_4868_sample_start_] 
        $T[R_iNsTr_154_4868_sample_completed_] 
        $T[R_iNsTr_154_4868_update_start_] 
        $T[R_iNsTr_154_4868_update_completed_] 
        // implicit reference
        R_iNsTr_154_4868_sample_start_ <-& ($entry)
        R_iNsTr_154_4868_sample_completed_ <-& (R_iNsTr_154_4868_sample_start_)
        R_iNsTr_154_4868_update_start_ <-& (R_iNsTr_154_4868_sample_completed_)
        R_iNsTr_154_4868_update_completed_ <-& (R_iNsTr_154_4868_update_start_)
        $T[ptr_deref_4869_word_address_calculated] 
        $T[ptr_deref_4869_root_address_calculated] 
        $T[ptr_deref_4869_base_address_resized] 
        ;;[ptr_deref_4869_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_4869_base_address_calculated &-> (ptr_deref_4869_base_addr_resize)
        ptr_deref_4869_base_address_resized <-& (ptr_deref_4869_base_addr_resize)
        ;;[ptr_deref_4869_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_4869_base_address_resized &-> (ptr_deref_4869_base_plus_offset)
        ptr_deref_4869_root_address_calculated <-& (ptr_deref_4869_base_plus_offset)
        ;;[ptr_deref_4869_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_4869_root_address_calculated &-> (ptr_deref_4869_word_addrgen)
        ptr_deref_4869_word_address_calculated <-& (ptr_deref_4869_word_addrgen)
        ;;[ptr_deref_4869_Sample] 
        {
          ;;[ptr_deref_4869_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_4869_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_4869_sample_start_ <-& (ptr_deref_4869_word_address_calculated)
        ptr_deref_4869_sample_start_ &-> (ptr_deref_4869_Sample)
        ptr_deref_4869_sample_completed_ <-& (ptr_deref_4869_Sample)
        ptr_deref_4869_sample_completed_ &-> ($null)
        ptr_deref_4869_update_start_ &-> (ptr_deref_4869_Update)
        ptr_deref_4869_update_completed_ <-& (ptr_deref_4869_Update)
        ptr_deref_4869_base_address_calculated <-& (R_iNsTr_154_4868_update_completed_)
        ptr_deref_4869_sample_start_ <-& (ptr_deref_4869_base_address_calculated)
        ptr_deref_4869_sample_start_ <-& (R_iNsTr_153_4870_update_completed_)
        // 		->(iNsTr_156) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 1634
        // Target expression
        // ->(iNsTr_156)
        $T[ptr_deref_4879_sample_start_] 
        $T[ptr_deref_4879_sample_completed_] 
        $T[ptr_deref_4879_update_start_] 
        $T[ptr_deref_4879_update_completed_] 
        $T[ptr_deref_4879_base_address_calculated] 
        // iNsTr_156
        $T[R_iNsTr_156_4878_sample_start_] 
        $T[R_iNsTr_156_4878_sample_completed_] 
        $T[R_iNsTr_156_4878_update_start_] 
        $T[R_iNsTr_156_4878_update_completed_] 
        // implicit reference
        R_iNsTr_156_4878_sample_start_ <-& ($entry)
        R_iNsTr_156_4878_sample_completed_ <-& (R_iNsTr_156_4878_sample_start_)
        R_iNsTr_156_4878_update_start_ <-& (R_iNsTr_156_4878_sample_completed_)
        R_iNsTr_156_4878_update_completed_ <-& (R_iNsTr_156_4878_update_start_)
        $T[ptr_deref_4879_word_address_calculated] 
        $T[ptr_deref_4879_root_address_calculated] 
        $T[ptr_deref_4879_base_address_resized] 
        ;;[ptr_deref_4879_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_4879_base_address_calculated &-> (ptr_deref_4879_base_addr_resize)
        ptr_deref_4879_base_address_resized <-& (ptr_deref_4879_base_addr_resize)
        ;;[ptr_deref_4879_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_4879_base_address_resized &-> (ptr_deref_4879_base_plus_offset)
        ptr_deref_4879_root_address_calculated <-& (ptr_deref_4879_base_plus_offset)
        ;;[ptr_deref_4879_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_4879_root_address_calculated &-> (ptr_deref_4879_word_addrgen)
        ptr_deref_4879_word_address_calculated <-& (ptr_deref_4879_word_addrgen)
        ;;[ptr_deref_4879_Sample] 
        {
          ;;[ptr_deref_4879_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_4879_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_4879_sample_start_ <-& (ptr_deref_4879_word_address_calculated)
        ptr_deref_4879_sample_start_ &-> (ptr_deref_4879_Sample)
        ptr_deref_4879_sample_completed_ <-& (ptr_deref_4879_Sample)
        ptr_deref_4879_sample_completed_ &-> ($null)
        ptr_deref_4879_update_start_ &-> (ptr_deref_4879_Update)
        ptr_deref_4879_update_completed_ <-& (ptr_deref_4879_Update)
        ptr_deref_4879_base_address_calculated <-& (R_iNsTr_156_4878_update_completed_)
        ptr_deref_4879_sample_start_ <-& (ptr_deref_4879_base_address_calculated)
        // 		iNsTr_158 := ->(scevgepx_x1)
        //  file prog.linked.opt.aa, line 1636
        // Source expression
        // ->(scevgepx_x1)
        $T[ptr_deref_4892_sample_start_] 
        $T[ptr_deref_4892_sample_completed_] 
        $T[ptr_deref_4892_update_start_] 
        $T[ptr_deref_4892_update_completed_] 
        $T[ptr_deref_4892_base_address_calculated] 
        // scevgepx_x1
        $T[R_scevgepx_x1_4891_sample_start_] 
        $T[R_scevgepx_x1_4891_sample_completed_] 
        $T[R_scevgepx_x1_4891_update_start_] 
        $T[R_scevgepx_x1_4891_update_completed_] 
        // implicit reference
        R_scevgepx_x1_4891_sample_start_ <-& ($entry)
        R_scevgepx_x1_4891_sample_completed_ <-& (R_scevgepx_x1_4891_sample_start_)
        R_scevgepx_x1_4891_update_start_ <-& (R_scevgepx_x1_4891_sample_completed_)
        R_scevgepx_x1_4891_update_completed_ <-& (R_scevgepx_x1_4891_update_start_)
        $T[ptr_deref_4892_word_address_calculated] 
        $T[ptr_deref_4892_root_address_calculated] 
        $T[ptr_deref_4892_base_address_resized] 
        ;;[ptr_deref_4892_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_4892_base_address_calculated &-> (ptr_deref_4892_base_addr_resize)
        ptr_deref_4892_base_address_resized <-& (ptr_deref_4892_base_addr_resize)
        ;;[ptr_deref_4892_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_4892_base_address_resized &-> (ptr_deref_4892_base_plus_offset)
        ptr_deref_4892_root_address_calculated <-& (ptr_deref_4892_base_plus_offset)
        ;;[ptr_deref_4892_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_4892_root_address_calculated &-> (ptr_deref_4892_word_addrgen)
        ptr_deref_4892_word_address_calculated <-& (ptr_deref_4892_word_addrgen)
        ;;[ptr_deref_4892_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_4892_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_4892_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_4892_sample_start_ <-& (ptr_deref_4892_word_address_calculated)
        ptr_deref_4892_sample_start_ &-> (ptr_deref_4892_Sample)
        ptr_deref_4892_sample_completed_ <-& (ptr_deref_4892_Sample)
        ptr_deref_4892_sample_completed_ &-> ($null)
        ptr_deref_4892_update_start_ &-> (ptr_deref_4892_Update)
        ptr_deref_4892_update_completed_ <-& (ptr_deref_4892_Update)
        ptr_deref_4892_base_address_calculated <-& (R_scevgepx_x1_4891_update_completed_)
        ptr_deref_4892_sample_start_ <-& (ptr_deref_4892_base_address_calculated)
        // Target expression
        // (as target) iNsTr_158
        // iNsTr_158
        // implicit reference
        // 		->(iNsTr_159) := iNsTr_158
        //  file prog.linked.opt.aa, line 1638
        // Source expression
        // iNsTr_158
        $T[R_iNsTr_158_4902_sample_start_] 
        $T[R_iNsTr_158_4902_sample_completed_] 
        $T[R_iNsTr_158_4902_update_start_] 
        $T[R_iNsTr_158_4902_update_completed_] 
        // implicit reference
        R_iNsTr_158_4902_sample_start_ <-& (ptr_deref_4892_update_completed_)
        R_iNsTr_158_4902_sample_completed_ <-& (R_iNsTr_158_4902_sample_start_)
        R_iNsTr_158_4902_update_start_ <-& (R_iNsTr_158_4902_sample_completed_)
        R_iNsTr_158_4902_update_completed_ <-& (R_iNsTr_158_4902_update_start_)
        // Target expression
        // ->(iNsTr_159)
        $T[ptr_deref_4901_sample_start_] 
        $T[ptr_deref_4901_sample_completed_] 
        $T[ptr_deref_4901_update_start_] 
        $T[ptr_deref_4901_update_completed_] 
        $T[ptr_deref_4901_base_address_calculated] 
        // iNsTr_159
        $T[R_iNsTr_159_4900_sample_start_] 
        $T[R_iNsTr_159_4900_sample_completed_] 
        $T[R_iNsTr_159_4900_update_start_] 
        $T[R_iNsTr_159_4900_update_completed_] 
        // implicit reference
        R_iNsTr_159_4900_sample_start_ <-& ($entry)
        R_iNsTr_159_4900_sample_completed_ <-& (R_iNsTr_159_4900_sample_start_)
        R_iNsTr_159_4900_update_start_ <-& (R_iNsTr_159_4900_sample_completed_)
        R_iNsTr_159_4900_update_completed_ <-& (R_iNsTr_159_4900_update_start_)
        $T[ptr_deref_4901_word_address_calculated] 
        $T[ptr_deref_4901_root_address_calculated] 
        $T[ptr_deref_4901_base_address_resized] 
        ;;[ptr_deref_4901_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_4901_base_address_calculated &-> (ptr_deref_4901_base_addr_resize)
        ptr_deref_4901_base_address_resized <-& (ptr_deref_4901_base_addr_resize)
        ;;[ptr_deref_4901_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_4901_base_address_resized &-> (ptr_deref_4901_base_plus_offset)
        ptr_deref_4901_root_address_calculated <-& (ptr_deref_4901_base_plus_offset)
        ;;[ptr_deref_4901_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_4901_root_address_calculated &-> (ptr_deref_4901_word_addrgen)
        ptr_deref_4901_word_address_calculated <-& (ptr_deref_4901_word_addrgen)
        ;;[ptr_deref_4901_Sample] 
        {
          ;;[ptr_deref_4901_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_4901_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_4901_sample_start_ <-& (ptr_deref_4901_word_address_calculated)
        ptr_deref_4901_sample_start_ &-> (ptr_deref_4901_Sample)
        ptr_deref_4901_sample_completed_ <-& (ptr_deref_4901_Sample)
        ptr_deref_4901_sample_completed_ &-> ($null)
        ptr_deref_4901_update_start_ &-> (ptr_deref_4901_Update)
        ptr_deref_4901_update_completed_ <-& (ptr_deref_4901_Update)
        ptr_deref_4901_base_address_calculated <-& (R_iNsTr_159_4900_update_completed_)
        ptr_deref_4901_sample_start_ <-& (ptr_deref_4901_base_address_calculated)
        ptr_deref_4901_sample_start_ <-& (R_iNsTr_158_4902_update_completed_)
        // 		->(iNsTr_161) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 1640
        // Target expression
        // ->(iNsTr_161)
        $T[ptr_deref_4911_sample_start_] 
        $T[ptr_deref_4911_sample_completed_] 
        $T[ptr_deref_4911_update_start_] 
        $T[ptr_deref_4911_update_completed_] 
        $T[ptr_deref_4911_base_address_calculated] 
        // iNsTr_161
        $T[R_iNsTr_161_4910_sample_start_] 
        $T[R_iNsTr_161_4910_sample_completed_] 
        $T[R_iNsTr_161_4910_update_start_] 
        $T[R_iNsTr_161_4910_update_completed_] 
        // implicit reference
        R_iNsTr_161_4910_sample_start_ <-& ($entry)
        R_iNsTr_161_4910_sample_completed_ <-& (R_iNsTr_161_4910_sample_start_)
        R_iNsTr_161_4910_update_start_ <-& (R_iNsTr_161_4910_sample_completed_)
        R_iNsTr_161_4910_update_completed_ <-& (R_iNsTr_161_4910_update_start_)
        $T[ptr_deref_4911_word_address_calculated] 
        $T[ptr_deref_4911_root_address_calculated] 
        $T[ptr_deref_4911_base_address_resized] 
        ;;[ptr_deref_4911_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_4911_base_address_calculated &-> (ptr_deref_4911_base_addr_resize)
        ptr_deref_4911_base_address_resized <-& (ptr_deref_4911_base_addr_resize)
        ;;[ptr_deref_4911_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_4911_base_address_resized &-> (ptr_deref_4911_base_plus_offset)
        ptr_deref_4911_root_address_calculated <-& (ptr_deref_4911_base_plus_offset)
        ;;[ptr_deref_4911_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_4911_root_address_calculated &-> (ptr_deref_4911_word_addrgen)
        ptr_deref_4911_word_address_calculated <-& (ptr_deref_4911_word_addrgen)
        ;;[ptr_deref_4911_Sample] 
        {
          ;;[ptr_deref_4911_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_4911_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_4911_sample_start_ <-& (ptr_deref_4911_word_address_calculated)
        ptr_deref_4911_sample_start_ &-> (ptr_deref_4911_Sample)
        ptr_deref_4911_sample_completed_ <-& (ptr_deref_4911_Sample)
        ptr_deref_4911_sample_completed_ &-> ($null)
        ptr_deref_4911_update_start_ &-> (ptr_deref_4911_Update)
        ptr_deref_4911_update_completed_ <-& (ptr_deref_4911_Update)
        ptr_deref_4911_base_address_calculated <-& (R_iNsTr_161_4910_update_completed_)
        ptr_deref_4911_sample_start_ <-& (ptr_deref_4911_base_address_calculated)
        // 		iNsTr_163 := ->(scevgepx_x2)
        //  file prog.linked.opt.aa, line 1642
        // Source expression
        // ->(scevgepx_x2)
        $T[ptr_deref_4924_sample_start_] 
        $T[ptr_deref_4924_sample_completed_] 
        $T[ptr_deref_4924_update_start_] 
        $T[ptr_deref_4924_update_completed_] 
        $T[ptr_deref_4924_base_address_calculated] 
        // scevgepx_x2
        $T[R_scevgepx_x2_4923_sample_start_] 
        $T[R_scevgepx_x2_4923_sample_completed_] 
        $T[R_scevgepx_x2_4923_update_start_] 
        $T[R_scevgepx_x2_4923_update_completed_] 
        // implicit reference
        R_scevgepx_x2_4923_sample_start_ <-& ($entry)
        R_scevgepx_x2_4923_sample_completed_ <-& (R_scevgepx_x2_4923_sample_start_)
        R_scevgepx_x2_4923_update_start_ <-& (R_scevgepx_x2_4923_sample_completed_)
        R_scevgepx_x2_4923_update_completed_ <-& (R_scevgepx_x2_4923_update_start_)
        $T[ptr_deref_4924_word_address_calculated] 
        $T[ptr_deref_4924_root_address_calculated] 
        $T[ptr_deref_4924_base_address_resized] 
        ;;[ptr_deref_4924_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_4924_base_address_calculated &-> (ptr_deref_4924_base_addr_resize)
        ptr_deref_4924_base_address_resized <-& (ptr_deref_4924_base_addr_resize)
        ;;[ptr_deref_4924_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_4924_base_address_resized &-> (ptr_deref_4924_base_plus_offset)
        ptr_deref_4924_root_address_calculated <-& (ptr_deref_4924_base_plus_offset)
        ;;[ptr_deref_4924_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_4924_root_address_calculated &-> (ptr_deref_4924_word_addrgen)
        ptr_deref_4924_word_address_calculated <-& (ptr_deref_4924_word_addrgen)
        ;;[ptr_deref_4924_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_4924_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_4924_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_4924_sample_start_ <-& (ptr_deref_4924_word_address_calculated)
        ptr_deref_4924_sample_start_ &-> (ptr_deref_4924_Sample)
        ptr_deref_4924_sample_completed_ <-& (ptr_deref_4924_Sample)
        ptr_deref_4924_sample_completed_ &-> ($null)
        ptr_deref_4924_update_start_ &-> (ptr_deref_4924_Update)
        ptr_deref_4924_update_completed_ <-& (ptr_deref_4924_Update)
        ptr_deref_4924_base_address_calculated <-& (R_scevgepx_x2_4923_update_completed_)
        ptr_deref_4924_sample_start_ <-& (ptr_deref_4924_base_address_calculated)
        // Target expression
        // (as target) iNsTr_163
        // iNsTr_163
        // implicit reference
        // 		->(iNsTr_164) := iNsTr_163
        //  file prog.linked.opt.aa, line 1644
        // Source expression
        // iNsTr_163
        $T[R_iNsTr_163_4934_sample_start_] 
        $T[R_iNsTr_163_4934_sample_completed_] 
        $T[R_iNsTr_163_4934_update_start_] 
        $T[R_iNsTr_163_4934_update_completed_] 
        // implicit reference
        R_iNsTr_163_4934_sample_start_ <-& (ptr_deref_4924_update_completed_)
        R_iNsTr_163_4934_sample_completed_ <-& (R_iNsTr_163_4934_sample_start_)
        R_iNsTr_163_4934_update_start_ <-& (R_iNsTr_163_4934_sample_completed_)
        R_iNsTr_163_4934_update_completed_ <-& (R_iNsTr_163_4934_update_start_)
        // Target expression
        // ->(iNsTr_164)
        $T[ptr_deref_4933_sample_start_] 
        $T[ptr_deref_4933_sample_completed_] 
        $T[ptr_deref_4933_update_start_] 
        $T[ptr_deref_4933_update_completed_] 
        $T[ptr_deref_4933_base_address_calculated] 
        // iNsTr_164
        $T[R_iNsTr_164_4932_sample_start_] 
        $T[R_iNsTr_164_4932_sample_completed_] 
        $T[R_iNsTr_164_4932_update_start_] 
        $T[R_iNsTr_164_4932_update_completed_] 
        // implicit reference
        R_iNsTr_164_4932_sample_start_ <-& ($entry)
        R_iNsTr_164_4932_sample_completed_ <-& (R_iNsTr_164_4932_sample_start_)
        R_iNsTr_164_4932_update_start_ <-& (R_iNsTr_164_4932_sample_completed_)
        R_iNsTr_164_4932_update_completed_ <-& (R_iNsTr_164_4932_update_start_)
        $T[ptr_deref_4933_word_address_calculated] 
        $T[ptr_deref_4933_root_address_calculated] 
        $T[ptr_deref_4933_base_address_resized] 
        ;;[ptr_deref_4933_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_4933_base_address_calculated &-> (ptr_deref_4933_base_addr_resize)
        ptr_deref_4933_base_address_resized <-& (ptr_deref_4933_base_addr_resize)
        ;;[ptr_deref_4933_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_4933_base_address_resized &-> (ptr_deref_4933_base_plus_offset)
        ptr_deref_4933_root_address_calculated <-& (ptr_deref_4933_base_plus_offset)
        ;;[ptr_deref_4933_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_4933_root_address_calculated &-> (ptr_deref_4933_word_addrgen)
        ptr_deref_4933_word_address_calculated <-& (ptr_deref_4933_word_addrgen)
        ;;[ptr_deref_4933_Sample] 
        {
          ;;[ptr_deref_4933_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_4933_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_4933_sample_start_ <-& (ptr_deref_4933_word_address_calculated)
        ptr_deref_4933_sample_start_ &-> (ptr_deref_4933_Sample)
        ptr_deref_4933_sample_completed_ <-& (ptr_deref_4933_Sample)
        ptr_deref_4933_sample_completed_ &-> ($null)
        ptr_deref_4933_update_start_ &-> (ptr_deref_4933_Update)
        ptr_deref_4933_update_completed_ <-& (ptr_deref_4933_Update)
        ptr_deref_4933_base_address_calculated <-& (R_iNsTr_164_4932_update_completed_)
        ptr_deref_4933_sample_start_ <-& (ptr_deref_4933_base_address_calculated)
        ptr_deref_4933_sample_start_ <-& (R_iNsTr_163_4934_update_completed_)
        // 		->(iNsTr_166) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 1646
        // Target expression
        // ->(iNsTr_166)
        $T[ptr_deref_4943_sample_start_] 
        $T[ptr_deref_4943_sample_completed_] 
        $T[ptr_deref_4943_update_start_] 
        $T[ptr_deref_4943_update_completed_] 
        $T[ptr_deref_4943_base_address_calculated] 
        // iNsTr_166
        $T[R_iNsTr_166_4942_sample_start_] 
        $T[R_iNsTr_166_4942_sample_completed_] 
        $T[R_iNsTr_166_4942_update_start_] 
        $T[R_iNsTr_166_4942_update_completed_] 
        // implicit reference
        R_iNsTr_166_4942_sample_start_ <-& ($entry)
        R_iNsTr_166_4942_sample_completed_ <-& (R_iNsTr_166_4942_sample_start_)
        R_iNsTr_166_4942_update_start_ <-& (R_iNsTr_166_4942_sample_completed_)
        R_iNsTr_166_4942_update_completed_ <-& (R_iNsTr_166_4942_update_start_)
        $T[ptr_deref_4943_word_address_calculated] 
        $T[ptr_deref_4943_root_address_calculated] 
        $T[ptr_deref_4943_base_address_resized] 
        ;;[ptr_deref_4943_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_4943_base_address_calculated &-> (ptr_deref_4943_base_addr_resize)
        ptr_deref_4943_base_address_resized <-& (ptr_deref_4943_base_addr_resize)
        ;;[ptr_deref_4943_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_4943_base_address_resized &-> (ptr_deref_4943_base_plus_offset)
        ptr_deref_4943_root_address_calculated <-& (ptr_deref_4943_base_plus_offset)
        ;;[ptr_deref_4943_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_4943_root_address_calculated &-> (ptr_deref_4943_word_addrgen)
        ptr_deref_4943_word_address_calculated <-& (ptr_deref_4943_word_addrgen)
        ;;[ptr_deref_4943_Sample] 
        {
          ;;[ptr_deref_4943_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_4943_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_4943_sample_start_ <-& (ptr_deref_4943_word_address_calculated)
        ptr_deref_4943_sample_start_ &-> (ptr_deref_4943_Sample)
        ptr_deref_4943_sample_completed_ <-& (ptr_deref_4943_Sample)
        ptr_deref_4943_sample_completed_ &-> ($null)
        ptr_deref_4943_update_start_ &-> (ptr_deref_4943_Update)
        ptr_deref_4943_update_completed_ <-& (ptr_deref_4943_Update)
        ptr_deref_4943_base_address_calculated <-& (R_iNsTr_166_4942_update_completed_)
        ptr_deref_4943_sample_start_ <-& (ptr_deref_4943_base_address_calculated)
        // 		iNsTr_168 := ->(scevgepx_x3)
        //  file prog.linked.opt.aa, line 1648
        // Source expression
        // ->(scevgepx_x3)
        $T[ptr_deref_4956_sample_start_] 
        $T[ptr_deref_4956_sample_completed_] 
        $T[ptr_deref_4956_update_start_] 
        $T[ptr_deref_4956_update_completed_] 
        $T[ptr_deref_4956_base_address_calculated] 
        // scevgepx_x3
        $T[R_scevgepx_x3_4955_sample_start_] 
        $T[R_scevgepx_x3_4955_sample_completed_] 
        $T[R_scevgepx_x3_4955_update_start_] 
        $T[R_scevgepx_x3_4955_update_completed_] 
        // implicit reference
        R_scevgepx_x3_4955_sample_start_ <-& ($entry)
        R_scevgepx_x3_4955_sample_completed_ <-& (R_scevgepx_x3_4955_sample_start_)
        R_scevgepx_x3_4955_update_start_ <-& (R_scevgepx_x3_4955_sample_completed_)
        R_scevgepx_x3_4955_update_completed_ <-& (R_scevgepx_x3_4955_update_start_)
        $T[ptr_deref_4956_word_address_calculated] 
        $T[ptr_deref_4956_root_address_calculated] 
        $T[ptr_deref_4956_base_address_resized] 
        ;;[ptr_deref_4956_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_4956_base_address_calculated &-> (ptr_deref_4956_base_addr_resize)
        ptr_deref_4956_base_address_resized <-& (ptr_deref_4956_base_addr_resize)
        ;;[ptr_deref_4956_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_4956_base_address_resized &-> (ptr_deref_4956_base_plus_offset)
        ptr_deref_4956_root_address_calculated <-& (ptr_deref_4956_base_plus_offset)
        ;;[ptr_deref_4956_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_4956_root_address_calculated &-> (ptr_deref_4956_word_addrgen)
        ptr_deref_4956_word_address_calculated <-& (ptr_deref_4956_word_addrgen)
        ;;[ptr_deref_4956_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_4956_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_4956_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_4956_sample_start_ <-& (ptr_deref_4956_word_address_calculated)
        ptr_deref_4956_sample_start_ &-> (ptr_deref_4956_Sample)
        ptr_deref_4956_sample_completed_ <-& (ptr_deref_4956_Sample)
        ptr_deref_4956_sample_completed_ &-> ($null)
        ptr_deref_4956_update_start_ &-> (ptr_deref_4956_Update)
        ptr_deref_4956_update_completed_ <-& (ptr_deref_4956_Update)
        ptr_deref_4956_base_address_calculated <-& (R_scevgepx_x3_4955_update_completed_)
        ptr_deref_4956_sample_start_ <-& (ptr_deref_4956_base_address_calculated)
        // Target expression
        // (as target) iNsTr_168
        // iNsTr_168
        // implicit reference
        // 		->(iNsTr_169) := iNsTr_168
        //  file prog.linked.opt.aa, line 1650
        // Source expression
        // iNsTr_168
        $T[R_iNsTr_168_4966_sample_start_] 
        $T[R_iNsTr_168_4966_sample_completed_] 
        $T[R_iNsTr_168_4966_update_start_] 
        $T[R_iNsTr_168_4966_update_completed_] 
        // implicit reference
        R_iNsTr_168_4966_sample_start_ <-& (ptr_deref_4956_update_completed_)
        R_iNsTr_168_4966_sample_completed_ <-& (R_iNsTr_168_4966_sample_start_)
        R_iNsTr_168_4966_update_start_ <-& (R_iNsTr_168_4966_sample_completed_)
        R_iNsTr_168_4966_update_completed_ <-& (R_iNsTr_168_4966_update_start_)
        // Target expression
        // ->(iNsTr_169)
        $T[ptr_deref_4965_sample_start_] 
        $T[ptr_deref_4965_sample_completed_] 
        $T[ptr_deref_4965_update_start_] 
        $T[ptr_deref_4965_update_completed_] 
        $T[ptr_deref_4965_base_address_calculated] 
        // iNsTr_169
        $T[R_iNsTr_169_4964_sample_start_] 
        $T[R_iNsTr_169_4964_sample_completed_] 
        $T[R_iNsTr_169_4964_update_start_] 
        $T[R_iNsTr_169_4964_update_completed_] 
        // implicit reference
        R_iNsTr_169_4964_sample_start_ <-& ($entry)
        R_iNsTr_169_4964_sample_completed_ <-& (R_iNsTr_169_4964_sample_start_)
        R_iNsTr_169_4964_update_start_ <-& (R_iNsTr_169_4964_sample_completed_)
        R_iNsTr_169_4964_update_completed_ <-& (R_iNsTr_169_4964_update_start_)
        $T[ptr_deref_4965_word_address_calculated] 
        $T[ptr_deref_4965_root_address_calculated] 
        $T[ptr_deref_4965_base_address_resized] 
        ;;[ptr_deref_4965_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_4965_base_address_calculated &-> (ptr_deref_4965_base_addr_resize)
        ptr_deref_4965_base_address_resized <-& (ptr_deref_4965_base_addr_resize)
        ;;[ptr_deref_4965_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_4965_base_address_resized &-> (ptr_deref_4965_base_plus_offset)
        ptr_deref_4965_root_address_calculated <-& (ptr_deref_4965_base_plus_offset)
        ;;[ptr_deref_4965_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_4965_root_address_calculated &-> (ptr_deref_4965_word_addrgen)
        ptr_deref_4965_word_address_calculated <-& (ptr_deref_4965_word_addrgen)
        ;;[ptr_deref_4965_Sample] 
        {
          ;;[ptr_deref_4965_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_4965_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_4965_sample_start_ <-& (ptr_deref_4965_word_address_calculated)
        ptr_deref_4965_sample_start_ &-> (ptr_deref_4965_Sample)
        ptr_deref_4965_sample_completed_ <-& (ptr_deref_4965_Sample)
        ptr_deref_4965_sample_completed_ &-> ($null)
        ptr_deref_4965_update_start_ &-> (ptr_deref_4965_Update)
        ptr_deref_4965_update_completed_ <-& (ptr_deref_4965_Update)
        ptr_deref_4965_base_address_calculated <-& (R_iNsTr_169_4964_update_completed_)
        ptr_deref_4965_sample_start_ <-& (ptr_deref_4965_base_address_calculated)
        ptr_deref_4965_sample_start_ <-& (R_iNsTr_168_4966_update_completed_)
        // 		->(iNsTr_171) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 1652
        // Target expression
        // ->(iNsTr_171)
        $T[ptr_deref_4975_sample_start_] 
        $T[ptr_deref_4975_sample_completed_] 
        $T[ptr_deref_4975_update_start_] 
        $T[ptr_deref_4975_update_completed_] 
        $T[ptr_deref_4975_base_address_calculated] 
        // iNsTr_171
        $T[R_iNsTr_171_4974_sample_start_] 
        $T[R_iNsTr_171_4974_sample_completed_] 
        $T[R_iNsTr_171_4974_update_start_] 
        $T[R_iNsTr_171_4974_update_completed_] 
        // implicit reference
        R_iNsTr_171_4974_sample_start_ <-& ($entry)
        R_iNsTr_171_4974_sample_completed_ <-& (R_iNsTr_171_4974_sample_start_)
        R_iNsTr_171_4974_update_start_ <-& (R_iNsTr_171_4974_sample_completed_)
        R_iNsTr_171_4974_update_completed_ <-& (R_iNsTr_171_4974_update_start_)
        $T[ptr_deref_4975_word_address_calculated] 
        $T[ptr_deref_4975_root_address_calculated] 
        $T[ptr_deref_4975_base_address_resized] 
        ;;[ptr_deref_4975_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_4975_base_address_calculated &-> (ptr_deref_4975_base_addr_resize)
        ptr_deref_4975_base_address_resized <-& (ptr_deref_4975_base_addr_resize)
        ;;[ptr_deref_4975_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_4975_base_address_resized &-> (ptr_deref_4975_base_plus_offset)
        ptr_deref_4975_root_address_calculated <-& (ptr_deref_4975_base_plus_offset)
        ;;[ptr_deref_4975_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_4975_root_address_calculated &-> (ptr_deref_4975_word_addrgen)
        ptr_deref_4975_word_address_calculated <-& (ptr_deref_4975_word_addrgen)
        ;;[ptr_deref_4975_Sample] 
        {
          ;;[ptr_deref_4975_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_4975_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_4975_sample_start_ <-& (ptr_deref_4975_word_address_calculated)
        ptr_deref_4975_sample_start_ &-> (ptr_deref_4975_Sample)
        ptr_deref_4975_sample_completed_ <-& (ptr_deref_4975_Sample)
        ptr_deref_4975_sample_completed_ &-> ($null)
        ptr_deref_4975_update_start_ &-> (ptr_deref_4975_Update)
        ptr_deref_4975_update_completed_ <-& (ptr_deref_4975_Update)
        ptr_deref_4975_base_address_calculated <-& (R_iNsTr_171_4974_update_completed_)
        ptr_deref_4975_sample_start_ <-& (ptr_deref_4975_base_address_calculated)
        // 		iNsTr_173 := ->(scevgepx_x4)
        //  file prog.linked.opt.aa, line 1654
        // Source expression
        // ->(scevgepx_x4)
        $T[ptr_deref_4988_sample_start_] 
        $T[ptr_deref_4988_sample_completed_] 
        $T[ptr_deref_4988_update_start_] 
        $T[ptr_deref_4988_update_completed_] 
        $T[ptr_deref_4988_base_address_calculated] 
        // scevgepx_x4
        $T[R_scevgepx_x4_4987_sample_start_] 
        $T[R_scevgepx_x4_4987_sample_completed_] 
        $T[R_scevgepx_x4_4987_update_start_] 
        $T[R_scevgepx_x4_4987_update_completed_] 
        // implicit reference
        R_scevgepx_x4_4987_sample_start_ <-& ($entry)
        R_scevgepx_x4_4987_sample_completed_ <-& (R_scevgepx_x4_4987_sample_start_)
        R_scevgepx_x4_4987_update_start_ <-& (R_scevgepx_x4_4987_sample_completed_)
        R_scevgepx_x4_4987_update_completed_ <-& (R_scevgepx_x4_4987_update_start_)
        $T[ptr_deref_4988_word_address_calculated] 
        $T[ptr_deref_4988_root_address_calculated] 
        $T[ptr_deref_4988_base_address_resized] 
        ;;[ptr_deref_4988_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_4988_base_address_calculated &-> (ptr_deref_4988_base_addr_resize)
        ptr_deref_4988_base_address_resized <-& (ptr_deref_4988_base_addr_resize)
        ;;[ptr_deref_4988_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_4988_base_address_resized &-> (ptr_deref_4988_base_plus_offset)
        ptr_deref_4988_root_address_calculated <-& (ptr_deref_4988_base_plus_offset)
        ;;[ptr_deref_4988_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_4988_root_address_calculated &-> (ptr_deref_4988_word_addrgen)
        ptr_deref_4988_word_address_calculated <-& (ptr_deref_4988_word_addrgen)
        ;;[ptr_deref_4988_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_4988_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_4988_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_4988_sample_start_ <-& (ptr_deref_4988_word_address_calculated)
        ptr_deref_4988_sample_start_ &-> (ptr_deref_4988_Sample)
        ptr_deref_4988_sample_completed_ <-& (ptr_deref_4988_Sample)
        ptr_deref_4988_sample_completed_ &-> ($null)
        ptr_deref_4988_update_start_ &-> (ptr_deref_4988_Update)
        ptr_deref_4988_update_completed_ <-& (ptr_deref_4988_Update)
        ptr_deref_4988_base_address_calculated <-& (R_scevgepx_x4_4987_update_completed_)
        ptr_deref_4988_sample_start_ <-& (ptr_deref_4988_base_address_calculated)
        // Target expression
        // (as target) iNsTr_173
        // iNsTr_173
        // implicit reference
        // 		->(iNsTr_174) := iNsTr_173
        //  file prog.linked.opt.aa, line 1656
        // Source expression
        // iNsTr_173
        $T[R_iNsTr_173_4998_sample_start_] 
        $T[R_iNsTr_173_4998_sample_completed_] 
        $T[R_iNsTr_173_4998_update_start_] 
        $T[R_iNsTr_173_4998_update_completed_] 
        // implicit reference
        R_iNsTr_173_4998_sample_start_ <-& (ptr_deref_4988_update_completed_)
        R_iNsTr_173_4998_sample_completed_ <-& (R_iNsTr_173_4998_sample_start_)
        R_iNsTr_173_4998_update_start_ <-& (R_iNsTr_173_4998_sample_completed_)
        R_iNsTr_173_4998_update_completed_ <-& (R_iNsTr_173_4998_update_start_)
        // Target expression
        // ->(iNsTr_174)
        $T[ptr_deref_4997_sample_start_] 
        $T[ptr_deref_4997_sample_completed_] 
        $T[ptr_deref_4997_update_start_] 
        $T[ptr_deref_4997_update_completed_] 
        $T[ptr_deref_4997_base_address_calculated] 
        // iNsTr_174
        $T[R_iNsTr_174_4996_sample_start_] 
        $T[R_iNsTr_174_4996_sample_completed_] 
        $T[R_iNsTr_174_4996_update_start_] 
        $T[R_iNsTr_174_4996_update_completed_] 
        // implicit reference
        R_iNsTr_174_4996_sample_start_ <-& ($entry)
        R_iNsTr_174_4996_sample_completed_ <-& (R_iNsTr_174_4996_sample_start_)
        R_iNsTr_174_4996_update_start_ <-& (R_iNsTr_174_4996_sample_completed_)
        R_iNsTr_174_4996_update_completed_ <-& (R_iNsTr_174_4996_update_start_)
        $T[ptr_deref_4997_word_address_calculated] 
        $T[ptr_deref_4997_root_address_calculated] 
        $T[ptr_deref_4997_base_address_resized] 
        ;;[ptr_deref_4997_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_4997_base_address_calculated &-> (ptr_deref_4997_base_addr_resize)
        ptr_deref_4997_base_address_resized <-& (ptr_deref_4997_base_addr_resize)
        ;;[ptr_deref_4997_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_4997_base_address_resized &-> (ptr_deref_4997_base_plus_offset)
        ptr_deref_4997_root_address_calculated <-& (ptr_deref_4997_base_plus_offset)
        ;;[ptr_deref_4997_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_4997_root_address_calculated &-> (ptr_deref_4997_word_addrgen)
        ptr_deref_4997_word_address_calculated <-& (ptr_deref_4997_word_addrgen)
        ;;[ptr_deref_4997_Sample] 
        {
          ;;[ptr_deref_4997_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_4997_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_4997_sample_start_ <-& (ptr_deref_4997_word_address_calculated)
        ptr_deref_4997_sample_start_ &-> (ptr_deref_4997_Sample)
        ptr_deref_4997_sample_completed_ <-& (ptr_deref_4997_Sample)
        ptr_deref_4997_sample_completed_ &-> ($null)
        ptr_deref_4997_update_start_ &-> (ptr_deref_4997_Update)
        ptr_deref_4997_update_completed_ <-& (ptr_deref_4997_Update)
        ptr_deref_4997_base_address_calculated <-& (R_iNsTr_174_4996_update_completed_)
        ptr_deref_4997_sample_start_ <-& (ptr_deref_4997_base_address_calculated)
        ptr_deref_4997_sample_start_ <-& (R_iNsTr_173_4998_update_completed_)
        // 		->(iNsTr_176) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 1658
        // Target expression
        // ->(iNsTr_176)
        $T[ptr_deref_5007_sample_start_] 
        $T[ptr_deref_5007_sample_completed_] 
        $T[ptr_deref_5007_update_start_] 
        $T[ptr_deref_5007_update_completed_] 
        $T[ptr_deref_5007_base_address_calculated] 
        // iNsTr_176
        $T[R_iNsTr_176_5006_sample_start_] 
        $T[R_iNsTr_176_5006_sample_completed_] 
        $T[R_iNsTr_176_5006_update_start_] 
        $T[R_iNsTr_176_5006_update_completed_] 
        // implicit reference
        R_iNsTr_176_5006_sample_start_ <-& ($entry)
        R_iNsTr_176_5006_sample_completed_ <-& (R_iNsTr_176_5006_sample_start_)
        R_iNsTr_176_5006_update_start_ <-& (R_iNsTr_176_5006_sample_completed_)
        R_iNsTr_176_5006_update_completed_ <-& (R_iNsTr_176_5006_update_start_)
        $T[ptr_deref_5007_word_address_calculated] 
        $T[ptr_deref_5007_root_address_calculated] 
        $T[ptr_deref_5007_base_address_resized] 
        ;;[ptr_deref_5007_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_5007_base_address_calculated &-> (ptr_deref_5007_base_addr_resize)
        ptr_deref_5007_base_address_resized <-& (ptr_deref_5007_base_addr_resize)
        ;;[ptr_deref_5007_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_5007_base_address_resized &-> (ptr_deref_5007_base_plus_offset)
        ptr_deref_5007_root_address_calculated <-& (ptr_deref_5007_base_plus_offset)
        ;;[ptr_deref_5007_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_5007_root_address_calculated &-> (ptr_deref_5007_word_addrgen)
        ptr_deref_5007_word_address_calculated <-& (ptr_deref_5007_word_addrgen)
        ;;[ptr_deref_5007_Sample] 
        {
          ;;[ptr_deref_5007_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_5007_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_5007_sample_start_ <-& (ptr_deref_5007_word_address_calculated)
        ptr_deref_5007_sample_start_ &-> (ptr_deref_5007_Sample)
        ptr_deref_5007_sample_completed_ <-& (ptr_deref_5007_Sample)
        ptr_deref_5007_sample_completed_ &-> ($null)
        ptr_deref_5007_update_start_ &-> (ptr_deref_5007_Update)
        ptr_deref_5007_update_completed_ <-& (ptr_deref_5007_Update)
        ptr_deref_5007_base_address_calculated <-& (R_iNsTr_176_5006_update_completed_)
        ptr_deref_5007_sample_start_ <-& (ptr_deref_5007_base_address_calculated)
        // 		iNsTr_178 := ->(scevgepx_x5)
        //  file prog.linked.opt.aa, line 1660
        // Source expression
        // ->(scevgepx_x5)
        $T[ptr_deref_5020_sample_start_] 
        $T[ptr_deref_5020_sample_completed_] 
        $T[ptr_deref_5020_update_start_] 
        $T[ptr_deref_5020_update_completed_] 
        $T[ptr_deref_5020_base_address_calculated] 
        // scevgepx_x5
        $T[R_scevgepx_x5_5019_sample_start_] 
        $T[R_scevgepx_x5_5019_sample_completed_] 
        $T[R_scevgepx_x5_5019_update_start_] 
        $T[R_scevgepx_x5_5019_update_completed_] 
        // implicit reference
        R_scevgepx_x5_5019_sample_start_ <-& ($entry)
        R_scevgepx_x5_5019_sample_completed_ <-& (R_scevgepx_x5_5019_sample_start_)
        R_scevgepx_x5_5019_update_start_ <-& (R_scevgepx_x5_5019_sample_completed_)
        R_scevgepx_x5_5019_update_completed_ <-& (R_scevgepx_x5_5019_update_start_)
        $T[ptr_deref_5020_word_address_calculated] 
        $T[ptr_deref_5020_root_address_calculated] 
        $T[ptr_deref_5020_base_address_resized] 
        ;;[ptr_deref_5020_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_5020_base_address_calculated &-> (ptr_deref_5020_base_addr_resize)
        ptr_deref_5020_base_address_resized <-& (ptr_deref_5020_base_addr_resize)
        ;;[ptr_deref_5020_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_5020_base_address_resized &-> (ptr_deref_5020_base_plus_offset)
        ptr_deref_5020_root_address_calculated <-& (ptr_deref_5020_base_plus_offset)
        ;;[ptr_deref_5020_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_5020_root_address_calculated &-> (ptr_deref_5020_word_addrgen)
        ptr_deref_5020_word_address_calculated <-& (ptr_deref_5020_word_addrgen)
        ;;[ptr_deref_5020_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_5020_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_5020_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_5020_sample_start_ <-& (ptr_deref_5020_word_address_calculated)
        ptr_deref_5020_sample_start_ &-> (ptr_deref_5020_Sample)
        ptr_deref_5020_sample_completed_ <-& (ptr_deref_5020_Sample)
        ptr_deref_5020_sample_completed_ &-> ($null)
        ptr_deref_5020_update_start_ &-> (ptr_deref_5020_Update)
        ptr_deref_5020_update_completed_ <-& (ptr_deref_5020_Update)
        ptr_deref_5020_base_address_calculated <-& (R_scevgepx_x5_5019_update_completed_)
        ptr_deref_5020_sample_start_ <-& (ptr_deref_5020_base_address_calculated)
        // Target expression
        // (as target) iNsTr_178
        // iNsTr_178
        // implicit reference
        // 		->(iNsTr_179) := iNsTr_178
        //  file prog.linked.opt.aa, line 1662
        // Source expression
        // iNsTr_178
        $T[R_iNsTr_178_5030_sample_start_] 
        $T[R_iNsTr_178_5030_sample_completed_] 
        $T[R_iNsTr_178_5030_update_start_] 
        $T[R_iNsTr_178_5030_update_completed_] 
        // implicit reference
        R_iNsTr_178_5030_sample_start_ <-& (ptr_deref_5020_update_completed_)
        R_iNsTr_178_5030_sample_completed_ <-& (R_iNsTr_178_5030_sample_start_)
        R_iNsTr_178_5030_update_start_ <-& (R_iNsTr_178_5030_sample_completed_)
        R_iNsTr_178_5030_update_completed_ <-& (R_iNsTr_178_5030_update_start_)
        // Target expression
        // ->(iNsTr_179)
        $T[ptr_deref_5029_sample_start_] 
        $T[ptr_deref_5029_sample_completed_] 
        $T[ptr_deref_5029_update_start_] 
        $T[ptr_deref_5029_update_completed_] 
        $T[ptr_deref_5029_base_address_calculated] 
        // iNsTr_179
        $T[R_iNsTr_179_5028_sample_start_] 
        $T[R_iNsTr_179_5028_sample_completed_] 
        $T[R_iNsTr_179_5028_update_start_] 
        $T[R_iNsTr_179_5028_update_completed_] 
        // implicit reference
        R_iNsTr_179_5028_sample_start_ <-& ($entry)
        R_iNsTr_179_5028_sample_completed_ <-& (R_iNsTr_179_5028_sample_start_)
        R_iNsTr_179_5028_update_start_ <-& (R_iNsTr_179_5028_sample_completed_)
        R_iNsTr_179_5028_update_completed_ <-& (R_iNsTr_179_5028_update_start_)
        $T[ptr_deref_5029_word_address_calculated] 
        $T[ptr_deref_5029_root_address_calculated] 
        $T[ptr_deref_5029_base_address_resized] 
        ;;[ptr_deref_5029_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_5029_base_address_calculated &-> (ptr_deref_5029_base_addr_resize)
        ptr_deref_5029_base_address_resized <-& (ptr_deref_5029_base_addr_resize)
        ;;[ptr_deref_5029_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_5029_base_address_resized &-> (ptr_deref_5029_base_plus_offset)
        ptr_deref_5029_root_address_calculated <-& (ptr_deref_5029_base_plus_offset)
        ;;[ptr_deref_5029_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_5029_root_address_calculated &-> (ptr_deref_5029_word_addrgen)
        ptr_deref_5029_word_address_calculated <-& (ptr_deref_5029_word_addrgen)
        ;;[ptr_deref_5029_Sample] 
        {
          ;;[ptr_deref_5029_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_5029_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_5029_sample_start_ <-& (ptr_deref_5029_word_address_calculated)
        ptr_deref_5029_sample_start_ &-> (ptr_deref_5029_Sample)
        ptr_deref_5029_sample_completed_ <-& (ptr_deref_5029_Sample)
        ptr_deref_5029_sample_completed_ &-> ($null)
        ptr_deref_5029_update_start_ &-> (ptr_deref_5029_Update)
        ptr_deref_5029_update_completed_ <-& (ptr_deref_5029_Update)
        ptr_deref_5029_base_address_calculated <-& (R_iNsTr_179_5028_update_completed_)
        ptr_deref_5029_sample_start_ <-& (ptr_deref_5029_base_address_calculated)
        ptr_deref_5029_sample_start_ <-& (R_iNsTr_178_5030_update_completed_)
        // 		->(iNsTr_181) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 1664
        // Target expression
        // ->(iNsTr_181)
        $T[ptr_deref_5039_sample_start_] 
        $T[ptr_deref_5039_sample_completed_] 
        $T[ptr_deref_5039_update_start_] 
        $T[ptr_deref_5039_update_completed_] 
        $T[ptr_deref_5039_base_address_calculated] 
        // iNsTr_181
        $T[R_iNsTr_181_5038_sample_start_] 
        $T[R_iNsTr_181_5038_sample_completed_] 
        $T[R_iNsTr_181_5038_update_start_] 
        $T[R_iNsTr_181_5038_update_completed_] 
        // implicit reference
        R_iNsTr_181_5038_sample_start_ <-& ($entry)
        R_iNsTr_181_5038_sample_completed_ <-& (R_iNsTr_181_5038_sample_start_)
        R_iNsTr_181_5038_update_start_ <-& (R_iNsTr_181_5038_sample_completed_)
        R_iNsTr_181_5038_update_completed_ <-& (R_iNsTr_181_5038_update_start_)
        $T[ptr_deref_5039_word_address_calculated] 
        $T[ptr_deref_5039_root_address_calculated] 
        $T[ptr_deref_5039_base_address_resized] 
        ;;[ptr_deref_5039_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_5039_base_address_calculated &-> (ptr_deref_5039_base_addr_resize)
        ptr_deref_5039_base_address_resized <-& (ptr_deref_5039_base_addr_resize)
        ;;[ptr_deref_5039_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_5039_base_address_resized &-> (ptr_deref_5039_base_plus_offset)
        ptr_deref_5039_root_address_calculated <-& (ptr_deref_5039_base_plus_offset)
        ;;[ptr_deref_5039_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_5039_root_address_calculated &-> (ptr_deref_5039_word_addrgen)
        ptr_deref_5039_word_address_calculated <-& (ptr_deref_5039_word_addrgen)
        ;;[ptr_deref_5039_Sample] 
        {
          ;;[ptr_deref_5039_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_5039_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_5039_sample_start_ <-& (ptr_deref_5039_word_address_calculated)
        ptr_deref_5039_sample_start_ &-> (ptr_deref_5039_Sample)
        ptr_deref_5039_sample_completed_ <-& (ptr_deref_5039_Sample)
        ptr_deref_5039_sample_completed_ &-> ($null)
        ptr_deref_5039_update_start_ &-> (ptr_deref_5039_Update)
        ptr_deref_5039_update_completed_ <-& (ptr_deref_5039_Update)
        ptr_deref_5039_base_address_calculated <-& (R_iNsTr_181_5038_update_completed_)
        ptr_deref_5039_sample_start_ <-& (ptr_deref_5039_base_address_calculated)
        // 		iNsTr_183 := ->(scevgepx_x6)
        //  file prog.linked.opt.aa, line 1666
        // Source expression
        // ->(scevgepx_x6)
        $T[ptr_deref_5052_sample_start_] 
        $T[ptr_deref_5052_sample_completed_] 
        $T[ptr_deref_5052_update_start_] 
        $T[ptr_deref_5052_update_completed_] 
        $T[ptr_deref_5052_base_address_calculated] 
        // scevgepx_x6
        $T[R_scevgepx_x6_5051_sample_start_] 
        $T[R_scevgepx_x6_5051_sample_completed_] 
        $T[R_scevgepx_x6_5051_update_start_] 
        $T[R_scevgepx_x6_5051_update_completed_] 
        // implicit reference
        R_scevgepx_x6_5051_sample_start_ <-& ($entry)
        R_scevgepx_x6_5051_sample_completed_ <-& (R_scevgepx_x6_5051_sample_start_)
        R_scevgepx_x6_5051_update_start_ <-& (R_scevgepx_x6_5051_sample_completed_)
        R_scevgepx_x6_5051_update_completed_ <-& (R_scevgepx_x6_5051_update_start_)
        $T[ptr_deref_5052_word_address_calculated] 
        $T[ptr_deref_5052_root_address_calculated] 
        $T[ptr_deref_5052_base_address_resized] 
        ;;[ptr_deref_5052_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_5052_base_address_calculated &-> (ptr_deref_5052_base_addr_resize)
        ptr_deref_5052_base_address_resized <-& (ptr_deref_5052_base_addr_resize)
        ;;[ptr_deref_5052_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_5052_base_address_resized &-> (ptr_deref_5052_base_plus_offset)
        ptr_deref_5052_root_address_calculated <-& (ptr_deref_5052_base_plus_offset)
        ;;[ptr_deref_5052_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_5052_root_address_calculated &-> (ptr_deref_5052_word_addrgen)
        ptr_deref_5052_word_address_calculated <-& (ptr_deref_5052_word_addrgen)
        ;;[ptr_deref_5052_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_5052_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_5052_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_5052_sample_start_ <-& (ptr_deref_5052_word_address_calculated)
        ptr_deref_5052_sample_start_ &-> (ptr_deref_5052_Sample)
        ptr_deref_5052_sample_completed_ <-& (ptr_deref_5052_Sample)
        ptr_deref_5052_sample_completed_ &-> ($null)
        ptr_deref_5052_update_start_ &-> (ptr_deref_5052_Update)
        ptr_deref_5052_update_completed_ <-& (ptr_deref_5052_Update)
        ptr_deref_5052_base_address_calculated <-& (R_scevgepx_x6_5051_update_completed_)
        ptr_deref_5052_sample_start_ <-& (ptr_deref_5052_base_address_calculated)
        // Target expression
        // (as target) iNsTr_183
        // iNsTr_183
        // implicit reference
        // 		->(iNsTr_184) := iNsTr_183
        //  file prog.linked.opt.aa, line 1668
        // Source expression
        // iNsTr_183
        $T[R_iNsTr_183_5062_sample_start_] 
        $T[R_iNsTr_183_5062_sample_completed_] 
        $T[R_iNsTr_183_5062_update_start_] 
        $T[R_iNsTr_183_5062_update_completed_] 
        // implicit reference
        R_iNsTr_183_5062_sample_start_ <-& (ptr_deref_5052_update_completed_)
        R_iNsTr_183_5062_sample_completed_ <-& (R_iNsTr_183_5062_sample_start_)
        R_iNsTr_183_5062_update_start_ <-& (R_iNsTr_183_5062_sample_completed_)
        R_iNsTr_183_5062_update_completed_ <-& (R_iNsTr_183_5062_update_start_)
        // Target expression
        // ->(iNsTr_184)
        $T[ptr_deref_5061_sample_start_] 
        $T[ptr_deref_5061_sample_completed_] 
        $T[ptr_deref_5061_update_start_] 
        $T[ptr_deref_5061_update_completed_] 
        $T[ptr_deref_5061_base_address_calculated] 
        // iNsTr_184
        $T[R_iNsTr_184_5060_sample_start_] 
        $T[R_iNsTr_184_5060_sample_completed_] 
        $T[R_iNsTr_184_5060_update_start_] 
        $T[R_iNsTr_184_5060_update_completed_] 
        // implicit reference
        R_iNsTr_184_5060_sample_start_ <-& ($entry)
        R_iNsTr_184_5060_sample_completed_ <-& (R_iNsTr_184_5060_sample_start_)
        R_iNsTr_184_5060_update_start_ <-& (R_iNsTr_184_5060_sample_completed_)
        R_iNsTr_184_5060_update_completed_ <-& (R_iNsTr_184_5060_update_start_)
        $T[ptr_deref_5061_word_address_calculated] 
        $T[ptr_deref_5061_root_address_calculated] 
        $T[ptr_deref_5061_base_address_resized] 
        ;;[ptr_deref_5061_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_5061_base_address_calculated &-> (ptr_deref_5061_base_addr_resize)
        ptr_deref_5061_base_address_resized <-& (ptr_deref_5061_base_addr_resize)
        ;;[ptr_deref_5061_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_5061_base_address_resized &-> (ptr_deref_5061_base_plus_offset)
        ptr_deref_5061_root_address_calculated <-& (ptr_deref_5061_base_plus_offset)
        ;;[ptr_deref_5061_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_5061_root_address_calculated &-> (ptr_deref_5061_word_addrgen)
        ptr_deref_5061_word_address_calculated <-& (ptr_deref_5061_word_addrgen)
        ;;[ptr_deref_5061_Sample] 
        {
          ;;[ptr_deref_5061_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_5061_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_5061_sample_start_ <-& (ptr_deref_5061_word_address_calculated)
        ptr_deref_5061_sample_start_ &-> (ptr_deref_5061_Sample)
        ptr_deref_5061_sample_completed_ <-& (ptr_deref_5061_Sample)
        ptr_deref_5061_sample_completed_ &-> ($null)
        ptr_deref_5061_update_start_ &-> (ptr_deref_5061_Update)
        ptr_deref_5061_update_completed_ <-& (ptr_deref_5061_Update)
        ptr_deref_5061_base_address_calculated <-& (R_iNsTr_184_5060_update_completed_)
        ptr_deref_5061_sample_start_ <-& (ptr_deref_5061_base_address_calculated)
        ptr_deref_5061_sample_start_ <-& (R_iNsTr_183_5062_update_completed_)
        // 		->(iNsTr_186) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 1670
        // Target expression
        // ->(iNsTr_186)
        $T[ptr_deref_5071_sample_start_] 
        $T[ptr_deref_5071_sample_completed_] 
        $T[ptr_deref_5071_update_start_] 
        $T[ptr_deref_5071_update_completed_] 
        $T[ptr_deref_5071_base_address_calculated] 
        // iNsTr_186
        $T[R_iNsTr_186_5070_sample_start_] 
        $T[R_iNsTr_186_5070_sample_completed_] 
        $T[R_iNsTr_186_5070_update_start_] 
        $T[R_iNsTr_186_5070_update_completed_] 
        // implicit reference
        R_iNsTr_186_5070_sample_start_ <-& ($entry)
        R_iNsTr_186_5070_sample_completed_ <-& (R_iNsTr_186_5070_sample_start_)
        R_iNsTr_186_5070_update_start_ <-& (R_iNsTr_186_5070_sample_completed_)
        R_iNsTr_186_5070_update_completed_ <-& (R_iNsTr_186_5070_update_start_)
        $T[ptr_deref_5071_word_address_calculated] 
        $T[ptr_deref_5071_root_address_calculated] 
        $T[ptr_deref_5071_base_address_resized] 
        ;;[ptr_deref_5071_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_5071_base_address_calculated &-> (ptr_deref_5071_base_addr_resize)
        ptr_deref_5071_base_address_resized <-& (ptr_deref_5071_base_addr_resize)
        ;;[ptr_deref_5071_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_5071_base_address_resized &-> (ptr_deref_5071_base_plus_offset)
        ptr_deref_5071_root_address_calculated <-& (ptr_deref_5071_base_plus_offset)
        ;;[ptr_deref_5071_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_5071_root_address_calculated &-> (ptr_deref_5071_word_addrgen)
        ptr_deref_5071_word_address_calculated <-& (ptr_deref_5071_word_addrgen)
        ;;[ptr_deref_5071_Sample] 
        {
          ;;[ptr_deref_5071_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_5071_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_5071_sample_start_ <-& (ptr_deref_5071_word_address_calculated)
        ptr_deref_5071_sample_start_ &-> (ptr_deref_5071_Sample)
        ptr_deref_5071_sample_completed_ <-& (ptr_deref_5071_Sample)
        ptr_deref_5071_sample_completed_ &-> ($null)
        ptr_deref_5071_update_start_ &-> (ptr_deref_5071_Update)
        ptr_deref_5071_update_completed_ <-& (ptr_deref_5071_Update)
        ptr_deref_5071_base_address_calculated <-& (R_iNsTr_186_5070_update_completed_)
        ptr_deref_5071_sample_start_ <-& (ptr_deref_5071_base_address_calculated)
        // 		iNsTr_188 := ->(scevgepx_x7)
        //  file prog.linked.opt.aa, line 1672
        // Source expression
        // ->(scevgepx_x7)
        $T[ptr_deref_5084_sample_start_] 
        $T[ptr_deref_5084_sample_completed_] 
        $T[ptr_deref_5084_update_start_] 
        $T[ptr_deref_5084_update_completed_] 
        $T[ptr_deref_5084_base_address_calculated] 
        // scevgepx_x7
        $T[R_scevgepx_x7_5083_sample_start_] 
        $T[R_scevgepx_x7_5083_sample_completed_] 
        $T[R_scevgepx_x7_5083_update_start_] 
        $T[R_scevgepx_x7_5083_update_completed_] 
        // implicit reference
        R_scevgepx_x7_5083_sample_start_ <-& ($entry)
        R_scevgepx_x7_5083_sample_completed_ <-& (R_scevgepx_x7_5083_sample_start_)
        R_scevgepx_x7_5083_update_start_ <-& (R_scevgepx_x7_5083_sample_completed_)
        R_scevgepx_x7_5083_update_completed_ <-& (R_scevgepx_x7_5083_update_start_)
        $T[ptr_deref_5084_word_address_calculated] 
        $T[ptr_deref_5084_root_address_calculated] 
        $T[ptr_deref_5084_base_address_resized] 
        ;;[ptr_deref_5084_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_5084_base_address_calculated &-> (ptr_deref_5084_base_addr_resize)
        ptr_deref_5084_base_address_resized <-& (ptr_deref_5084_base_addr_resize)
        ;;[ptr_deref_5084_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_5084_base_address_resized &-> (ptr_deref_5084_base_plus_offset)
        ptr_deref_5084_root_address_calculated <-& (ptr_deref_5084_base_plus_offset)
        ;;[ptr_deref_5084_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_5084_root_address_calculated &-> (ptr_deref_5084_word_addrgen)
        ptr_deref_5084_word_address_calculated <-& (ptr_deref_5084_word_addrgen)
        ;;[ptr_deref_5084_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_5084_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_5084_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_5084_sample_start_ <-& (ptr_deref_5084_word_address_calculated)
        ptr_deref_5084_sample_start_ &-> (ptr_deref_5084_Sample)
        ptr_deref_5084_sample_completed_ <-& (ptr_deref_5084_Sample)
        ptr_deref_5084_sample_completed_ &-> ($null)
        ptr_deref_5084_update_start_ &-> (ptr_deref_5084_Update)
        ptr_deref_5084_update_completed_ <-& (ptr_deref_5084_Update)
        ptr_deref_5084_base_address_calculated <-& (R_scevgepx_x7_5083_update_completed_)
        ptr_deref_5084_sample_start_ <-& (ptr_deref_5084_base_address_calculated)
        // Target expression
        // (as target) iNsTr_188
        // iNsTr_188
        // implicit reference
        // 		->(iNsTr_189) := iNsTr_188
        //  file prog.linked.opt.aa, line 1674
        // Source expression
        // iNsTr_188
        $T[R_iNsTr_188_5094_sample_start_] 
        $T[R_iNsTr_188_5094_sample_completed_] 
        $T[R_iNsTr_188_5094_update_start_] 
        $T[R_iNsTr_188_5094_update_completed_] 
        // implicit reference
        R_iNsTr_188_5094_sample_start_ <-& (ptr_deref_5084_update_completed_)
        R_iNsTr_188_5094_sample_completed_ <-& (R_iNsTr_188_5094_sample_start_)
        R_iNsTr_188_5094_update_start_ <-& (R_iNsTr_188_5094_sample_completed_)
        R_iNsTr_188_5094_update_completed_ <-& (R_iNsTr_188_5094_update_start_)
        // Target expression
        // ->(iNsTr_189)
        $T[ptr_deref_5093_sample_start_] 
        $T[ptr_deref_5093_sample_completed_] 
        $T[ptr_deref_5093_update_start_] 
        $T[ptr_deref_5093_update_completed_] 
        $T[ptr_deref_5093_base_address_calculated] 
        // iNsTr_189
        $T[R_iNsTr_189_5092_sample_start_] 
        $T[R_iNsTr_189_5092_sample_completed_] 
        $T[R_iNsTr_189_5092_update_start_] 
        $T[R_iNsTr_189_5092_update_completed_] 
        // implicit reference
        R_iNsTr_189_5092_sample_start_ <-& ($entry)
        R_iNsTr_189_5092_sample_completed_ <-& (R_iNsTr_189_5092_sample_start_)
        R_iNsTr_189_5092_update_start_ <-& (R_iNsTr_189_5092_sample_completed_)
        R_iNsTr_189_5092_update_completed_ <-& (R_iNsTr_189_5092_update_start_)
        $T[ptr_deref_5093_word_address_calculated] 
        $T[ptr_deref_5093_root_address_calculated] 
        $T[ptr_deref_5093_base_address_resized] 
        ;;[ptr_deref_5093_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_5093_base_address_calculated &-> (ptr_deref_5093_base_addr_resize)
        ptr_deref_5093_base_address_resized <-& (ptr_deref_5093_base_addr_resize)
        ;;[ptr_deref_5093_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_5093_base_address_resized &-> (ptr_deref_5093_base_plus_offset)
        ptr_deref_5093_root_address_calculated <-& (ptr_deref_5093_base_plus_offset)
        ;;[ptr_deref_5093_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_5093_root_address_calculated &-> (ptr_deref_5093_word_addrgen)
        ptr_deref_5093_word_address_calculated <-& (ptr_deref_5093_word_addrgen)
        ;;[ptr_deref_5093_Sample] 
        {
          ;;[ptr_deref_5093_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_5093_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_5093_sample_start_ <-& (ptr_deref_5093_word_address_calculated)
        ptr_deref_5093_sample_start_ &-> (ptr_deref_5093_Sample)
        ptr_deref_5093_sample_completed_ <-& (ptr_deref_5093_Sample)
        ptr_deref_5093_sample_completed_ &-> ($null)
        ptr_deref_5093_update_start_ &-> (ptr_deref_5093_Update)
        ptr_deref_5093_update_completed_ <-& (ptr_deref_5093_Update)
        ptr_deref_5093_base_address_calculated <-& (R_iNsTr_189_5092_update_completed_)
        ptr_deref_5093_sample_start_ <-& (ptr_deref_5093_base_address_calculated)
        ptr_deref_5093_sample_start_ <-& (R_iNsTr_188_5094_update_completed_)
        // 		->(iNsTr_191) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
        //  file prog.linked.opt.aa, line 1676
        // Target expression
        // ->(iNsTr_191)
        $T[ptr_deref_5103_sample_start_] 
        $T[ptr_deref_5103_sample_completed_] 
        $T[ptr_deref_5103_update_start_] 
        $T[ptr_deref_5103_update_completed_] 
        $T[ptr_deref_5103_base_address_calculated] 
        // iNsTr_191
        $T[R_iNsTr_191_5102_sample_start_] 
        $T[R_iNsTr_191_5102_sample_completed_] 
        $T[R_iNsTr_191_5102_update_start_] 
        $T[R_iNsTr_191_5102_update_completed_] 
        // implicit reference
        R_iNsTr_191_5102_sample_start_ <-& ($entry)
        R_iNsTr_191_5102_sample_completed_ <-& (R_iNsTr_191_5102_sample_start_)
        R_iNsTr_191_5102_update_start_ <-& (R_iNsTr_191_5102_sample_completed_)
        R_iNsTr_191_5102_update_completed_ <-& (R_iNsTr_191_5102_update_start_)
        $T[ptr_deref_5103_word_address_calculated] 
        $T[ptr_deref_5103_root_address_calculated] 
        $T[ptr_deref_5103_base_address_resized] 
        ;;[ptr_deref_5103_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_5103_base_address_calculated &-> (ptr_deref_5103_base_addr_resize)
        ptr_deref_5103_base_address_resized <-& (ptr_deref_5103_base_addr_resize)
        ;;[ptr_deref_5103_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_5103_base_address_resized &-> (ptr_deref_5103_base_plus_offset)
        ptr_deref_5103_root_address_calculated <-& (ptr_deref_5103_base_plus_offset)
        ;;[ptr_deref_5103_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_5103_root_address_calculated &-> (ptr_deref_5103_word_addrgen)
        ptr_deref_5103_word_address_calculated <-& (ptr_deref_5103_word_addrgen)
        ;;[ptr_deref_5103_Sample] 
        {
          ;;[ptr_deref_5103_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_5103_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_5103_sample_start_ <-& (ptr_deref_5103_word_address_calculated)
        ptr_deref_5103_sample_start_ &-> (ptr_deref_5103_Sample)
        ptr_deref_5103_sample_completed_ <-& (ptr_deref_5103_Sample)
        ptr_deref_5103_sample_completed_ &-> ($null)
        ptr_deref_5103_update_start_ &-> (ptr_deref_5103_Update)
        ptr_deref_5103_update_completed_ <-& (ptr_deref_5103_Update)
        ptr_deref_5103_base_address_calculated <-& (R_iNsTr_191_5102_update_completed_)
        ptr_deref_5103_sample_start_ <-& (ptr_deref_5103_base_address_calculated)
        // load-store dependencies..
        $T [ptr_deref_4869_ptr_deref_4879_delay] $delay
        // ->(iNsTr_154)(store) -> ->(iNsTr_156)(store)
        ptr_deref_4879_sample_start_ <-& (ptr_deref_4869_ptr_deref_4879_delay)
        ptr_deref_4869_ptr_deref_4879_delay <-& (ptr_deref_4869_sample_completed_)
        $T [ptr_deref_4879_ptr_deref_4901_delay] $delay
        // ->(iNsTr_156)(store) -> ->(iNsTr_159)(store)
        ptr_deref_4901_sample_start_ <-& (ptr_deref_4879_ptr_deref_4901_delay)
        ptr_deref_4879_ptr_deref_4901_delay <-& (ptr_deref_4879_sample_completed_)
        $T [ptr_deref_4901_ptr_deref_4911_delay] $delay
        // ->(iNsTr_159)(store) -> ->(iNsTr_161)(store)
        ptr_deref_4911_sample_start_ <-& (ptr_deref_4901_ptr_deref_4911_delay)
        ptr_deref_4901_ptr_deref_4911_delay <-& (ptr_deref_4901_sample_completed_)
        $T [ptr_deref_4911_ptr_deref_4933_delay] $delay
        // ->(iNsTr_161)(store) -> ->(iNsTr_164)(store)
        ptr_deref_4933_sample_start_ <-& (ptr_deref_4911_ptr_deref_4933_delay)
        ptr_deref_4911_ptr_deref_4933_delay <-& (ptr_deref_4911_sample_completed_)
        $T [ptr_deref_4933_ptr_deref_4943_delay] $delay
        // ->(iNsTr_164)(store) -> ->(iNsTr_166)(store)
        ptr_deref_4943_sample_start_ <-& (ptr_deref_4933_ptr_deref_4943_delay)
        ptr_deref_4933_ptr_deref_4943_delay <-& (ptr_deref_4933_sample_completed_)
        $T [ptr_deref_4943_ptr_deref_4965_delay] $delay
        // ->(iNsTr_166)(store) -> ->(iNsTr_169)(store)
        ptr_deref_4965_sample_start_ <-& (ptr_deref_4943_ptr_deref_4965_delay)
        ptr_deref_4943_ptr_deref_4965_delay <-& (ptr_deref_4943_sample_completed_)
        $T [ptr_deref_4965_ptr_deref_4975_delay] $delay
        // ->(iNsTr_169)(store) -> ->(iNsTr_171)(store)
        ptr_deref_4975_sample_start_ <-& (ptr_deref_4965_ptr_deref_4975_delay)
        ptr_deref_4965_ptr_deref_4975_delay <-& (ptr_deref_4965_sample_completed_)
        $T [ptr_deref_4975_ptr_deref_4997_delay] $delay
        // ->(iNsTr_171)(store) -> ->(iNsTr_174)(store)
        ptr_deref_4997_sample_start_ <-& (ptr_deref_4975_ptr_deref_4997_delay)
        ptr_deref_4975_ptr_deref_4997_delay <-& (ptr_deref_4975_sample_completed_)
        $T [ptr_deref_4997_ptr_deref_5007_delay] $delay
        // ->(iNsTr_174)(store) -> ->(iNsTr_176)(store)
        ptr_deref_5007_sample_start_ <-& (ptr_deref_4997_ptr_deref_5007_delay)
        ptr_deref_4997_ptr_deref_5007_delay <-& (ptr_deref_4997_sample_completed_)
        $T [ptr_deref_5007_ptr_deref_5029_delay] $delay
        // ->(iNsTr_176)(store) -> ->(iNsTr_179)(store)
        ptr_deref_5029_sample_start_ <-& (ptr_deref_5007_ptr_deref_5029_delay)
        ptr_deref_5007_ptr_deref_5029_delay <-& (ptr_deref_5007_sample_completed_)
        $T [ptr_deref_5029_ptr_deref_5039_delay] $delay
        // ->(iNsTr_179)(store) -> ->(iNsTr_181)(store)
        ptr_deref_5039_sample_start_ <-& (ptr_deref_5029_ptr_deref_5039_delay)
        ptr_deref_5029_ptr_deref_5039_delay <-& (ptr_deref_5029_sample_completed_)
        $T [ptr_deref_5039_ptr_deref_5061_delay] $delay
        // ->(iNsTr_181)(store) -> ->(iNsTr_184)(store)
        ptr_deref_5061_sample_start_ <-& (ptr_deref_5039_ptr_deref_5061_delay)
        ptr_deref_5039_ptr_deref_5061_delay <-& (ptr_deref_5039_sample_completed_)
        $T [ptr_deref_5061_ptr_deref_5071_delay] $delay
        // ->(iNsTr_184)(store) -> ->(iNsTr_186)(store)
        ptr_deref_5071_sample_start_ <-& (ptr_deref_5061_ptr_deref_5071_delay)
        ptr_deref_5061_ptr_deref_5071_delay <-& (ptr_deref_5061_sample_completed_)
        $T [ptr_deref_5071_ptr_deref_5093_delay] $delay
        // ->(iNsTr_186)(store) -> ->(iNsTr_189)(store)
        ptr_deref_5093_sample_start_ <-& (ptr_deref_5071_ptr_deref_5093_delay)
        ptr_deref_5071_ptr_deref_5093_delay <-& (ptr_deref_5071_sample_completed_)
        $T [ptr_deref_5093_ptr_deref_5103_delay] $delay
        // ->(iNsTr_189)(store) -> ->(iNsTr_191)(store)
        ptr_deref_5103_sample_start_ <-& (ptr_deref_5093_ptr_deref_5103_delay)
        ptr_deref_5093_ptr_deref_5103_delay <-& (ptr_deref_5093_sample_completed_)
      }
      assign_stmt_4857_to_assign_stmt_5112__entry__ |-> (assign_stmt_4857_to_assign_stmt_5112)
      assign_stmt_4857_to_assign_stmt_5112__exit__ <-| (assign_stmt_4857_to_assign_stmt_5112)
      ::[call_stmt_5115] 
      {
        // 		$call meanCalc (iNsTr_193 ) (iNsTr_194 ) 
        //  file prog.linked.opt.aa, line 1678
        $T[call_stmt_5115_sample_start_] 
        $T[call_stmt_5115_sample_completed_] 
        $T[call_stmt_5115_update_start_] 
        $T[call_stmt_5115_update_completed_] 
        // Call input argument 0
        ;;[call_stmt_5115_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_5115_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_5115_sample_start_ &-> (call_stmt_5115_Sample)
        call_stmt_5115_sample_completed_ <-& (call_stmt_5115_Sample)
        call_stmt_5115_sample_completed_ &-> ($null)
        call_stmt_5115_update_start_ &-> (call_stmt_5115_Update)
        call_stmt_5115_update_completed_ <-& (call_stmt_5115_Update)
        // Call output argument 0
        // (as target) iNsTr_194
        // iNsTr_194
        // implicit reference
        // barrier: 		$call meanCalc (iNsTr_193 ) (iNsTr_194 ) 
        // load-store dependencies..
      }
      call_stmt_5115__entry__ |-> (call_stmt_5115)
      call_stmt_5115__exit__ <-| (call_stmt_5115)
      ::[assign_stmt_5120_to_assign_stmt_5143] 
      {
        // 		iNsTr_195 := (iNsTr_194 - iNsTr_141)
        //  file prog.linked.opt.aa, line 1679
        // Source expression
        // (iNsTr_194 - iNsTr_141)
        $T[SUB_u32_u32_5119_sample_start_] 
        $T[SUB_u32_u32_5119_sample_completed_] 
        $T[SUB_u32_u32_5119_update_start_] 
        $T[SUB_u32_u32_5119_update_completed_] 
        // iNsTr_194
        $T[R_iNsTr_194_5117_sample_start_] 
        $T[R_iNsTr_194_5117_sample_completed_] 
        $T[R_iNsTr_194_5117_update_start_] 
        $T[R_iNsTr_194_5117_update_completed_] 
        // implicit reference
        R_iNsTr_194_5117_sample_start_ <-& ($entry)
        R_iNsTr_194_5117_sample_completed_ <-& (R_iNsTr_194_5117_sample_start_)
        R_iNsTr_194_5117_update_start_ <-& (R_iNsTr_194_5117_sample_completed_)
        R_iNsTr_194_5117_update_completed_ <-& (R_iNsTr_194_5117_update_start_)
        // iNsTr_141
        $T[R_iNsTr_141_5118_sample_start_] 
        $T[R_iNsTr_141_5118_sample_completed_] 
        $T[R_iNsTr_141_5118_update_start_] 
        $T[R_iNsTr_141_5118_update_completed_] 
        // implicit reference
        R_iNsTr_141_5118_sample_start_ <-& ($entry)
        R_iNsTr_141_5118_sample_completed_ <-& (R_iNsTr_141_5118_sample_start_)
        R_iNsTr_141_5118_update_start_ <-& (R_iNsTr_141_5118_sample_completed_)
        R_iNsTr_141_5118_update_completed_ <-& (R_iNsTr_141_5118_update_start_)
        SUB_u32_u32_5119_sample_start_ <-& (R_iNsTr_194_5117_update_completed_)
        SUB_u32_u32_5119_sample_start_ <-& (R_iNsTr_141_5118_update_completed_)
        ;;[SUB_u32_u32_5119_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_5119_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_5119_sample_start_ &-> (SUB_u32_u32_5119_Sample)
        SUB_u32_u32_5119_sample_completed_ <-& (SUB_u32_u32_5119_Sample)
        SUB_u32_u32_5119_sample_completed_ &-> ($null)
        SUB_u32_u32_5119_update_start_ &-> (SUB_u32_u32_5119_Update)
        SUB_u32_u32_5119_update_completed_ <-& (SUB_u32_u32_5119_Update)
        // Target expression
        // (as target) iNsTr_195
        // iNsTr_195
        // implicit reference
        // 		iNsTr_196 := ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_195 ) )
        //  file prog.linked.opt.aa, line 1680
        // Source expression
        // ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_195 ) )
        $T[type_cast_5124_sample_start_] 
        $T[type_cast_5124_sample_completed_] 
        $T[type_cast_5124_update_start_] 
        $T[type_cast_5124_update_completed_] 
        // ($bitcast ($int<64>) iNsTr_195 )
        $T[type_cast_5123_sample_start_] 
        $T[type_cast_5123_sample_completed_] 
        $T[type_cast_5123_update_start_] 
        $T[type_cast_5123_update_completed_] 
        // iNsTr_195
        $T[R_iNsTr_195_5122_sample_start_] 
        $T[R_iNsTr_195_5122_sample_completed_] 
        $T[R_iNsTr_195_5122_update_start_] 
        $T[R_iNsTr_195_5122_update_completed_] 
        // implicit reference
        R_iNsTr_195_5122_sample_start_ <-& (SUB_u32_u32_5119_update_completed_)
        R_iNsTr_195_5122_sample_completed_ <-& (R_iNsTr_195_5122_sample_start_)
        R_iNsTr_195_5122_update_start_ <-& (R_iNsTr_195_5122_sample_completed_)
        R_iNsTr_195_5122_update_completed_ <-& (R_iNsTr_195_5122_update_start_)
        type_cast_5123_sample_start_ <-& (R_iNsTr_195_5122_update_completed_)
        ;;[type_cast_5123_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_5123_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_5123_sample_start_ &-> (type_cast_5123_Sample)
        type_cast_5123_sample_completed_ <-& (type_cast_5123_Sample)
        type_cast_5123_sample_completed_ &-> ($null)
        type_cast_5123_update_start_ &-> (type_cast_5123_Update)
        type_cast_5123_update_completed_ <-& (type_cast_5123_Update)
        // flow-through
        type_cast_5123_update_start_ <-& (type_cast_5123_sample_completed_)
        type_cast_5124_sample_start_ <-& (type_cast_5123_update_completed_)
        ;;[type_cast_5124_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_5124_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_5124_sample_start_ &-> (type_cast_5124_Sample)
        type_cast_5124_sample_completed_ <-& (type_cast_5124_Sample)
        type_cast_5124_sample_completed_ &-> ($null)
        type_cast_5124_update_start_ &-> (type_cast_5124_Update)
        type_cast_5124_update_completed_ <-& (type_cast_5124_Update)
        // Target expression
        // (as target) iNsTr_196
        // iNsTr_196
        // implicit reference
        // 		iNsTr_197 := threshold
        //  file prog.linked.opt.aa, line 1681
        // Source expression
        // threshold
        $T[LOAD_threshold_5127_sample_start_] 
        $T[LOAD_threshold_5127_sample_completed_] 
        $T[LOAD_threshold_5127_update_start_] 
        $T[LOAD_threshold_5127_update_completed_] 
        $T[LOAD_threshold_5127_sample_start_] 
        $T[LOAD_threshold_5127_sample_completed_] 
        $T[LOAD_threshold_5127_update_start_] 
        $T[LOAD_threshold_5127_update_completed_] 
        $T[LOAD_threshold_5127_word_address_calculated] 
        $T[LOAD_threshold_5127_root_address_calculated] 
        LOAD_threshold_5127_word_address_calculated <-& (LOAD_threshold_5127_root_address_calculated)
        ;;[LOAD_threshold_5127_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_threshold_5127_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_threshold_5127_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_threshold_5127_sample_start_ <-& (LOAD_threshold_5127_word_address_calculated)
        LOAD_threshold_5127_sample_start_ &-> (LOAD_threshold_5127_Sample)
        LOAD_threshold_5127_sample_completed_ <-& (LOAD_threshold_5127_Sample)
        LOAD_threshold_5127_sample_completed_ &-> ($null)
        LOAD_threshold_5127_update_start_ &-> (LOAD_threshold_5127_Update)
        LOAD_threshold_5127_update_completed_ <-& (LOAD_threshold_5127_Update)
        // Target expression
        // (as target) iNsTr_197
        // iNsTr_197
        // implicit reference
        // 		iNsTr_198 := (iNsTr_197 * iNsTr_196)
        //  file prog.linked.opt.aa, line 1682
        // Source expression
        // (iNsTr_197 * iNsTr_196)
        $T[MUL_f64_f64_5132_sample_start_] 
        $T[MUL_f64_f64_5132_sample_completed_] 
        $T[MUL_f64_f64_5132_update_start_] 
        $T[MUL_f64_f64_5132_update_completed_] 
        // iNsTr_197
        $T[R_iNsTr_197_5130_sample_start_] 
        $T[R_iNsTr_197_5130_sample_completed_] 
        $T[R_iNsTr_197_5130_update_start_] 
        $T[R_iNsTr_197_5130_update_completed_] 
        // implicit reference
        R_iNsTr_197_5130_sample_start_ <-& (LOAD_threshold_5127_update_completed_)
        R_iNsTr_197_5130_sample_completed_ <-& (R_iNsTr_197_5130_sample_start_)
        R_iNsTr_197_5130_update_start_ <-& (R_iNsTr_197_5130_sample_completed_)
        R_iNsTr_197_5130_update_completed_ <-& (R_iNsTr_197_5130_update_start_)
        // iNsTr_196
        $T[R_iNsTr_196_5131_sample_start_] 
        $T[R_iNsTr_196_5131_sample_completed_] 
        $T[R_iNsTr_196_5131_update_start_] 
        $T[R_iNsTr_196_5131_update_completed_] 
        // implicit reference
        R_iNsTr_196_5131_sample_start_ <-& (type_cast_5124_update_completed_)
        R_iNsTr_196_5131_sample_completed_ <-& (R_iNsTr_196_5131_sample_start_)
        R_iNsTr_196_5131_update_start_ <-& (R_iNsTr_196_5131_sample_completed_)
        R_iNsTr_196_5131_update_completed_ <-& (R_iNsTr_196_5131_update_start_)
        MUL_f64_f64_5132_sample_start_ <-& (R_iNsTr_197_5130_update_completed_)
        MUL_f64_f64_5132_sample_start_ <-& (R_iNsTr_196_5131_update_completed_)
        ;;[MUL_f64_f64_5132_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_5132_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_5132_sample_start_ &-> (MUL_f64_f64_5132_Sample)
        MUL_f64_f64_5132_sample_completed_ <-& (MUL_f64_f64_5132_Sample)
        MUL_f64_f64_5132_sample_completed_ &-> ($null)
        MUL_f64_f64_5132_update_start_ &-> (MUL_f64_f64_5132_Update)
        MUL_f64_f64_5132_update_completed_ <-& (MUL_f64_f64_5132_Update)
        // Target expression
        // (as target) iNsTr_198
        // iNsTr_198
        // implicit reference
        // 		iNsTr_199 := ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_198 ) )
        //  file prog.linked.opt.aa, line 1683
        // Source expression
        // ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_198 ) )
        $T[type_cast_5137_sample_start_] 
        $T[type_cast_5137_sample_completed_] 
        $T[type_cast_5137_update_start_] 
        $T[type_cast_5137_update_completed_] 
        // ($cast ($int<32>) iNsTr_198 )
        $T[type_cast_5136_sample_start_] 
        $T[type_cast_5136_sample_completed_] 
        $T[type_cast_5136_update_start_] 
        $T[type_cast_5136_update_completed_] 
        // iNsTr_198
        $T[R_iNsTr_198_5135_sample_start_] 
        $T[R_iNsTr_198_5135_sample_completed_] 
        $T[R_iNsTr_198_5135_update_start_] 
        $T[R_iNsTr_198_5135_update_completed_] 
        // implicit reference
        R_iNsTr_198_5135_sample_start_ <-& (MUL_f64_f64_5132_update_completed_)
        R_iNsTr_198_5135_sample_completed_ <-& (R_iNsTr_198_5135_sample_start_)
        R_iNsTr_198_5135_update_start_ <-& (R_iNsTr_198_5135_sample_completed_)
        R_iNsTr_198_5135_update_completed_ <-& (R_iNsTr_198_5135_update_start_)
        type_cast_5136_sample_start_ <-& (R_iNsTr_198_5135_update_completed_)
        ;;[type_cast_5136_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_5136_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_5136_sample_start_ &-> (type_cast_5136_Sample)
        type_cast_5136_sample_completed_ <-& (type_cast_5136_Sample)
        type_cast_5136_sample_completed_ &-> ($null)
        type_cast_5136_update_start_ &-> (type_cast_5136_Update)
        type_cast_5136_update_completed_ <-& (type_cast_5136_Update)
        type_cast_5137_sample_start_ <-& (type_cast_5136_update_completed_)
        ;;[type_cast_5137_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_5137_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_5137_sample_start_ &-> (type_cast_5137_Sample)
        type_cast_5137_sample_completed_ <-& (type_cast_5137_Sample)
        type_cast_5137_sample_completed_ &-> ($null)
        type_cast_5137_update_start_ &-> (type_cast_5137_Update)
        type_cast_5137_update_completed_ <-& (type_cast_5137_Update)
        // Target expression
        // (as target) iNsTr_199
        // iNsTr_199
        // implicit reference
        // 		iNsTr_200 := (iNsTr_199 + iNsTr_141)
        //  file prog.linked.opt.aa, line 1684
        // Source expression
        // (iNsTr_199 + iNsTr_141)
        $T[ADD_u32_u32_5142_sample_start_] 
        $T[ADD_u32_u32_5142_sample_completed_] 
        $T[ADD_u32_u32_5142_update_start_] 
        $T[ADD_u32_u32_5142_update_completed_] 
        // iNsTr_199
        $T[R_iNsTr_199_5140_sample_start_] 
        $T[R_iNsTr_199_5140_sample_completed_] 
        $T[R_iNsTr_199_5140_update_start_] 
        $T[R_iNsTr_199_5140_update_completed_] 
        // implicit reference
        R_iNsTr_199_5140_sample_start_ <-& (type_cast_5137_update_completed_)
        R_iNsTr_199_5140_sample_completed_ <-& (R_iNsTr_199_5140_sample_start_)
        R_iNsTr_199_5140_update_start_ <-& (R_iNsTr_199_5140_sample_completed_)
        R_iNsTr_199_5140_update_completed_ <-& (R_iNsTr_199_5140_update_start_)
        // iNsTr_141
        $T[R_iNsTr_141_5141_sample_start_] 
        $T[R_iNsTr_141_5141_sample_completed_] 
        $T[R_iNsTr_141_5141_update_start_] 
        $T[R_iNsTr_141_5141_update_completed_] 
        // implicit reference
        R_iNsTr_141_5141_sample_start_ <-& ($entry)
        R_iNsTr_141_5141_sample_completed_ <-& (R_iNsTr_141_5141_sample_start_)
        R_iNsTr_141_5141_update_start_ <-& (R_iNsTr_141_5141_sample_completed_)
        R_iNsTr_141_5141_update_completed_ <-& (R_iNsTr_141_5141_update_start_)
        ADD_u32_u32_5142_sample_start_ <-& (R_iNsTr_199_5140_update_completed_)
        ADD_u32_u32_5142_sample_start_ <-& (R_iNsTr_141_5141_update_completed_)
        ;;[ADD_u32_u32_5142_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_5142_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_5142_sample_start_ &-> (ADD_u32_u32_5142_Sample)
        ADD_u32_u32_5142_sample_completed_ <-& (ADD_u32_u32_5142_Sample)
        ADD_u32_u32_5142_sample_completed_ &-> ($null)
        ADD_u32_u32_5142_update_start_ &-> (ADD_u32_u32_5142_Update)
        ADD_u32_u32_5142_update_completed_ <-& (ADD_u32_u32_5142_Update)
        // Target expression
        // (as target) iNsTr_200
        // iNsTr_200
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_5120_to_assign_stmt_5143__entry__ |-> (assign_stmt_5120_to_assign_stmt_5143)
      assign_stmt_5120_to_assign_stmt_5143__exit__ <-| (assign_stmt_5120_to_assign_stmt_5143)
      ::[assign_stmt_5165_to_assign_stmt_5171] 
      {
        // 		iNsTr_202 := (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) iNsTr_137 ))
        //  file prog.linked.opt.aa, line 1690
        // Source expression
        // (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) iNsTr_137 ))
        $T[SGT_i32_u1_5164_sample_start_] 
        $T[SGT_i32_u1_5164_sample_completed_] 
        $T[SGT_i32_u1_5164_update_start_] 
        $T[SGT_i32_u1_5164_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_68 )
        $T[type_cast_5161_sample_start_] 
        $T[type_cast_5161_sample_completed_] 
        $T[type_cast_5161_update_start_] 
        $T[type_cast_5161_update_completed_] 
        // iNsTr_68
        $T[R_iNsTr_68_5160_sample_start_] 
        $T[R_iNsTr_68_5160_sample_completed_] 
        $T[R_iNsTr_68_5160_update_start_] 
        $T[R_iNsTr_68_5160_update_completed_] 
        // implicit reference
        R_iNsTr_68_5160_sample_start_ <-& ($entry)
        R_iNsTr_68_5160_sample_completed_ <-& (R_iNsTr_68_5160_sample_start_)
        R_iNsTr_68_5160_update_start_ <-& (R_iNsTr_68_5160_sample_completed_)
        R_iNsTr_68_5160_update_completed_ <-& (R_iNsTr_68_5160_update_start_)
        type_cast_5161_sample_start_ <-& (R_iNsTr_68_5160_update_completed_)
        ;;[type_cast_5161_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_5161_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_5161_sample_start_ &-> (type_cast_5161_Sample)
        type_cast_5161_sample_completed_ <-& (type_cast_5161_Sample)
        type_cast_5161_sample_completed_ &-> ($null)
        type_cast_5161_update_start_ &-> (type_cast_5161_Update)
        type_cast_5161_update_completed_ <-& (type_cast_5161_Update)
        // flow-through
        type_cast_5161_update_start_ <-& (type_cast_5161_sample_completed_)
        // ($bitcast ($int<32>) iNsTr_137 )
        $T[type_cast_5163_sample_start_] 
        $T[type_cast_5163_sample_completed_] 
        $T[type_cast_5163_update_start_] 
        $T[type_cast_5163_update_completed_] 
        // iNsTr_137
        $T[R_iNsTr_137_5162_sample_start_] 
        $T[R_iNsTr_137_5162_sample_completed_] 
        $T[R_iNsTr_137_5162_update_start_] 
        $T[R_iNsTr_137_5162_update_completed_] 
        // implicit reference
        R_iNsTr_137_5162_sample_start_ <-& ($entry)
        R_iNsTr_137_5162_sample_completed_ <-& (R_iNsTr_137_5162_sample_start_)
        R_iNsTr_137_5162_update_start_ <-& (R_iNsTr_137_5162_sample_completed_)
        R_iNsTr_137_5162_update_completed_ <-& (R_iNsTr_137_5162_update_start_)
        type_cast_5163_sample_start_ <-& (R_iNsTr_137_5162_update_completed_)
        ;;[type_cast_5163_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_5163_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_5163_sample_start_ &-> (type_cast_5163_Sample)
        type_cast_5163_sample_completed_ <-& (type_cast_5163_Sample)
        type_cast_5163_sample_completed_ &-> ($null)
        type_cast_5163_update_start_ &-> (type_cast_5163_Update)
        type_cast_5163_update_completed_ <-& (type_cast_5163_Update)
        // flow-through
        type_cast_5163_update_start_ <-& (type_cast_5163_sample_completed_)
        SGT_i32_u1_5164_sample_start_ <-& (type_cast_5161_update_completed_)
        SGT_i32_u1_5164_sample_start_ <-& (type_cast_5163_update_completed_)
        ;;[SGT_i32_u1_5164_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_i32_u1_5164_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_i32_u1_5164_sample_start_ &-> (SGT_i32_u1_5164_Sample)
        SGT_i32_u1_5164_sample_completed_ <-& (SGT_i32_u1_5164_Sample)
        SGT_i32_u1_5164_sample_completed_ &-> ($null)
        SGT_i32_u1_5164_update_start_ &-> (SGT_i32_u1_5164_Update)
        SGT_i32_u1_5164_update_completed_ <-& (SGT_i32_u1_5164_Update)
        // Target expression
        // (as target) iNsTr_202
        // iNsTr_202
        // implicit reference
        // 		iNsTr_203 := ( $mux iNsTr_202 iNsTr_68  iNsTr_137 ) 
        //  file prog.linked.opt.aa, line 1691
        // Source expression
        // ( $mux iNsTr_202 iNsTr_68  iNsTr_137 ) 
        $T[MUX_5170_sample_start_] 
        $T[MUX_5170_sample_completed_] 
        $T[MUX_5170_update_start_] 
        $T[MUX_5170_update_completed_] 
        // iNsTr_202
        $T[R_iNsTr_202_5167_sample_start_] 
        $T[R_iNsTr_202_5167_sample_completed_] 
        $T[R_iNsTr_202_5167_update_start_] 
        $T[R_iNsTr_202_5167_update_completed_] 
        // implicit reference
        R_iNsTr_202_5167_sample_start_ <-& (SGT_i32_u1_5164_update_completed_)
        R_iNsTr_202_5167_sample_completed_ <-& (R_iNsTr_202_5167_sample_start_)
        R_iNsTr_202_5167_update_start_ <-& (R_iNsTr_202_5167_sample_completed_)
        R_iNsTr_202_5167_update_completed_ <-& (R_iNsTr_202_5167_update_start_)
        // iNsTr_68
        $T[R_iNsTr_68_5168_sample_start_] 
        $T[R_iNsTr_68_5168_sample_completed_] 
        $T[R_iNsTr_68_5168_update_start_] 
        $T[R_iNsTr_68_5168_update_completed_] 
        // implicit reference
        R_iNsTr_68_5168_sample_start_ <-& ($entry)
        R_iNsTr_68_5168_sample_completed_ <-& (R_iNsTr_68_5168_sample_start_)
        R_iNsTr_68_5168_update_start_ <-& (R_iNsTr_68_5168_sample_completed_)
        R_iNsTr_68_5168_update_completed_ <-& (R_iNsTr_68_5168_update_start_)
        // iNsTr_137
        $T[R_iNsTr_137_5169_sample_start_] 
        $T[R_iNsTr_137_5169_sample_completed_] 
        $T[R_iNsTr_137_5169_update_start_] 
        $T[R_iNsTr_137_5169_update_completed_] 
        // implicit reference
        R_iNsTr_137_5169_sample_start_ <-& ($entry)
        R_iNsTr_137_5169_sample_completed_ <-& (R_iNsTr_137_5169_sample_start_)
        R_iNsTr_137_5169_update_start_ <-& (R_iNsTr_137_5169_sample_completed_)
        R_iNsTr_137_5169_update_completed_ <-& (R_iNsTr_137_5169_update_start_)
        MUX_5170_sample_start_ <-& (R_iNsTr_202_5167_update_completed_)
        MUX_5170_sample_start_ <-& (R_iNsTr_68_5168_update_completed_)
        MUX_5170_sample_start_ <-& (R_iNsTr_137_5169_update_completed_)
        ;;[MUX_5170_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_5170_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_5170_sample_start_ &-> (MUX_5170_start)
        MUX_5170_sample_completed_ <-& (MUX_5170_start)
        MUX_5170_update_start_ &-> (MUX_5170_complete)
        MUX_5170_update_completed_ <-& (MUX_5170_complete)
        MUX_5170_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_203
        // iNsTr_203
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_5165_to_assign_stmt_5171__entry__ |-> (assign_stmt_5165_to_assign_stmt_5171)
      assign_stmt_5165_to_assign_stmt_5171__exit__ <-| (assign_stmt_5165_to_assign_stmt_5171)
      ::[assign_stmt_5219] 
      {
        // 		det_output_pipe := QRSdelayx_x0
        //  file prog.linked.opt.aa, line 1702
        // Source expression
        // QRSdelayx_x0
        $T[R_QRSdelayx_x0_5218_sample_start_] 
        $T[R_QRSdelayx_x0_5218_sample_completed_] 
        $T[R_QRSdelayx_x0_5218_update_start_] 
        $T[R_QRSdelayx_x0_5218_update_completed_] 
        // implicit reference
        R_QRSdelayx_x0_5218_sample_start_ <-& ($entry)
        R_QRSdelayx_x0_5218_sample_completed_ <-& (R_QRSdelayx_x0_5218_sample_start_)
        R_QRSdelayx_x0_5218_update_start_ <-& (R_QRSdelayx_x0_5218_sample_completed_)
        R_QRSdelayx_x0_5218_update_completed_ <-& (R_QRSdelayx_x0_5218_update_start_)
        // Target expression
        // (as target) det_output_pipe
        $T[WPIPE_det_output_pipe_5217_sample_start_] 
        $T[WPIPE_det_output_pipe_5217_sample_completed_] 
        $T[WPIPE_det_output_pipe_5217_update_start_] 
        $T[WPIPE_det_output_pipe_5217_update_completed_] 
        ;;[WPIPE_det_output_pipe_5217_Sample] 
        {
          // pipe write sample-start det_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_det_output_pipe_5217_Update] 
        {
          // pipe write update (complete) det_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_det_output_pipe_5217_sample_start_ &-> (WPIPE_det_output_pipe_5217_Sample)
        WPIPE_det_output_pipe_5217_sample_completed_ <-& (WPIPE_det_output_pipe_5217_Sample)
        WPIPE_det_output_pipe_5217_sample_completed_ &-> ($null)
        WPIPE_det_output_pipe_5217_update_start_ &-> (WPIPE_det_output_pipe_5217_Update)
        WPIPE_det_output_pipe_5217_update_completed_ <-& (WPIPE_det_output_pipe_5217_Update)
        WPIPE_det_output_pipe_5217_sample_start_ <-& (R_QRSdelayx_x0_5218_update_completed_)
        // barrier: 		det_output_pipe := QRSdelayx_x0
        // load-store dependencies..
        // pipe read/write dependencies for pipe det_output_pipe
      }
      assign_stmt_5219__entry__ |-> (assign_stmt_5219)
      assign_stmt_5219__exit__ <-| (assign_stmt_5219)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1191
      //---------------------   merge statement  file prog.linked.opt.aa, line 1191  --------------------------
      ||[bb_0_bb_1_PhiReq] 
      {
        ;;[phi_stmt_3043] 
        {
          ||[phi_stmt_3043_sources] 
          {
            // sources for 			$phi indexx_x02x_xi_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_0_bb_1 // type of target is $uint<32>
          }
          $T [phi_stmt_3043_req] 
        }
      }
      bb_0_bb_1 |-> (bb_0_bb_1_PhiReq)
      $P [merge_stmt_3042_PhiReqMerge] 
      merge_stmt_3042_PhiReqMerge <-| ( bb_0_bb_1_PhiReq )
      ||[merge_stmt_3042_PhiAck] 
      {
        $T [phi_stmt_3043_ack] 
      }
      merge_stmt_3042_PhiReqMerge |-> (merge_stmt_3042_PhiAck)
      merge_stmt_3042__exit__  <-| (merge_stmt_3042_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1191  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1206
      //---------------------   merge statement  file prog.linked.opt.aa, line 1206  --------------------------
      ||[bb_1_bbx_xnphx_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_1_bbx_xnphx_xix_xpreheader |-> (bb_1_bbx_xnphx_xix_xpreheader_PhiReq)
      $P [merge_stmt_3093_PhiReqMerge] 
      merge_stmt_3093_PhiReqMerge <-| ( bb_1_bbx_xnphx_xix_xpreheader_PhiReq )
      ||[merge_stmt_3093_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3093_PhiReqMerge |-> (merge_stmt_3093_PhiAck)
      merge_stmt_3093__exit__  <-| (merge_stmt_3093_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1206  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1209
      //---------------------   merge statement  file prog.linked.opt.aa, line 1209  --------------------------
      ||[bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq] 
      {
        ;;[phi_stmt_3096] 
        {
          ||[phi_stmt_3096_sources] 
          {
            // sources for 			$phi indexx_x11x_xi_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<32>
          }
          $T [phi_stmt_3096_req] 
        }
      }
      bbx_xnphx_xix_xpreheader_bbx_xnphx_xi |-> (bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq)
      $P [merge_stmt_3095_PhiReqMerge] 
      merge_stmt_3095_PhiReqMerge <-| ( bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq )
      ||[merge_stmt_3095_PhiAck] 
      {
        $T [phi_stmt_3096_ack] 
      }
      merge_stmt_3095_PhiReqMerge |-> (merge_stmt_3095_PhiAck)
      merge_stmt_3095__exit__  <-| (merge_stmt_3095_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1209  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1222
      //---------------------   merge statement  file prog.linked.opt.aa, line 1222  --------------------------
      ||[bbx_xnphx_xi_initDetx_xexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnphx_xi_initDetx_xexit |-> (bbx_xnphx_xi_initDetx_xexit_PhiReq)
      $P [merge_stmt_3136_PhiReqMerge] 
      merge_stmt_3136_PhiReqMerge <-| ( bbx_xnphx_xi_initDetx_xexit_PhiReq )
      ||[merge_stmt_3136_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3136_PhiReqMerge |-> (merge_stmt_3136_PhiAck)
      merge_stmt_3136__exit__  <-| (merge_stmt_3136_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1222  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1235
      //---------------------   merge statement  file prog.linked.opt.aa, line 1235  --------------------------
      ||[bb_33_bb_5_PhiReq] 
      {
        ;;[phi_stmt_3297] 
        {
          ||[phi_stmt_3297_sources] 
          {
            // sources for 			$phi tempPeakx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) iNsTr_65 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_65 )
            ;;[type_cast_3303] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3297_req] 
        }
        ;;[phi_stmt_3290] 
        {
          ||[phi_stmt_3290_sources] 
          {
            // sources for 			$phi sbPeakx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) sbPeakx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) sbPeakx_x0 )
            ;;[type_cast_3296] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3290_req] 
        }
        ;;[phi_stmt_3283] 
        {
          ||[phi_stmt_3283_sources] 
          {
            // sources for 			$phi qpk_countx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) qpk_countx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) qpk_countx_x0 )
            ;;[type_cast_3289] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3283_req] 
        }
        ;;[phi_stmt_3276] 
        {
          ||[phi_stmt_3276_sources] 
          {
            // sources for 			$phi countx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) countx_x1 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) countx_x1 )
            ;;[type_cast_3282] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3276_req] 
        }
        ;;[phi_stmt_3178] 
        {
          ||[phi_stmt_3178_sources] 
          {
            // sources for 			$phi init8Donex_x0 := 			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<8>) init8Done_nextx_x0 ) $on bb_33_bb_5 // type of target is $uint<8>
            // ($cast ($uint<8>) init8Done_nextx_x0 )
            ;;[type_cast_3184] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3178_req] 
        }
        ;;[phi_stmt_3185] 
        {
          ||[phi_stmt_3185_sources] 
          {
            // sources for 			$phi init8Done_nextx_x1 := 			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<8>) init8Done_nextx_x0 ) $on bb_33_bb_5 // type of target is $uint<8>
            // ($cast ($uint<8>) init8Done_nextx_x0 )
            ;;[type_cast_3191] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3185_req] 
        }
        ;;[phi_stmt_3192] 
        {
          ||[phi_stmt_3192_sources] 
          {
            // sources for 			$phi noiseValx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) noiseValx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) noiseValx_x0 )
            ;;[type_cast_3198] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3192_req] 
        }
        ;;[phi_stmt_3199] 
        {
          ||[phi_stmt_3199_sources] 
          {
            // sources for 			$phi rrValx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) rrValx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) rrValx_x0 )
            ;;[type_cast_3205] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3199_req] 
        }
        ;;[phi_stmt_3206] 
        {
          ||[phi_stmt_3206_sources] 
          {
            // sources for 			$phi qrsValx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) qrsValx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) qrsValx_x0 )
            ;;[type_cast_3212] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3206_req] 
        }
        ;;[phi_stmt_3213] 
        {
          ||[phi_stmt_3213_sources] 
          {
            // sources for 			$phi nmeanx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) nmeanx_x3 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) nmeanx_x3 )
            ;;[type_cast_3219] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3213_req] 
        }
        ;;[phi_stmt_3220] 
        {
          ||[phi_stmt_3220_sources] 
          {
            // sources for 			$phi qmeanx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) qmeanx_x4 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) qmeanx_x4 )
            ;;[type_cast_3226] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3220_req] 
        }
        ;;[phi_stmt_3227] 
        {
          ||[phi_stmt_3227_sources] 
          {
            // sources for 			$phi sbLocx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000100101100  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) sbLocx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) sbLocx_x0 )
            ;;[type_cast_3233] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3227_req] 
        }
        ;;[phi_stmt_3234] 
        {
          ||[phi_stmt_3234_sources] 
          {
            // sources for 			$phi sb_countx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000100101100  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) sb_countx_x2 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) sb_countx_x2 )
            ;;[type_cast_3240] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3234_req] 
        }
        ;;[phi_stmt_3241] 
        {
          ||[phi_stmt_3241_sources] 
          {
            // sources for 			$phi det_threshx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) det_threshx_x5 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) det_threshx_x5 )
            ;;[type_cast_3247] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3241_req] 
        }
        ;;[phi_stmt_3248] 
        {
          ||[phi_stmt_3248_sources] 
          {
            // sources for 			$phi initMaxx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) initMaxx_x2 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) initMaxx_x2 )
            ;;[type_cast_3254] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3248_req] 
        }
        ;;[phi_stmt_3255] 
        {
          ||[phi_stmt_3255_sources] 
          {
            // sources for 			$phi rset_countx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) rset_countx_x2 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) rset_countx_x2 )
            ;;[type_cast_3261] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3255_req] 
        }
        ;;[phi_stmt_3262] 
        {
          ||[phi_stmt_3262_sources] 
          {
            // sources for 			$phi preBlank_countx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) iNsTr_66 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_66 )
            ;;[type_cast_3268] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3262_req] 
        }
        ;;[phi_stmt_3269] 
        {
          ||[phi_stmt_3269_sources] 
          {
            // sources for 			$phi initBlankx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) initBlankx_x2 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) initBlankx_x2 )
            ;;[type_cast_3275] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3269_req] 
        }
      }
      bb_33_bb_5 |-> (bb_33_bb_5_PhiReq)
      ||[initDetx_xexit_bb_5_PhiReq] 
      {
        ;;[phi_stmt_3297] 
        {
          ||[phi_stmt_3297_sources] 
          {
            // sources for 			$phi tempPeakx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) iNsTr_65 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_65 )
            ;;[type_cast_3303] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3297_req] 
        }
        ;;[phi_stmt_3290] 
        {
          ||[phi_stmt_3290_sources] 
          {
            // sources for 			$phi sbPeakx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) sbPeakx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) sbPeakx_x0 )
            ;;[type_cast_3296] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3290_req] 
        }
        ;;[phi_stmt_3283] 
        {
          ||[phi_stmt_3283_sources] 
          {
            // sources for 			$phi qpk_countx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) qpk_countx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) qpk_countx_x0 )
            ;;[type_cast_3289] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3283_req] 
        }
        ;;[phi_stmt_3276] 
        {
          ||[phi_stmt_3276_sources] 
          {
            // sources for 			$phi countx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) countx_x1 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) countx_x1 )
            ;;[type_cast_3282] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3276_req] 
        }
        ;;[phi_stmt_3178] 
        {
          ||[phi_stmt_3178_sources] 
          {
            // sources for 			$phi init8Donex_x0 := 			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<8>) init8Done_nextx_x0 ) $on bb_33_bb_5 // type of target is $uint<8>
            // ($cast ($uint<8>) init8Done_nextx_x0 )
            ;;[type_cast_3184] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3178_req] 
        }
        ;;[phi_stmt_3185] 
        {
          ||[phi_stmt_3185_sources] 
          {
            // sources for 			$phi init8Done_nextx_x1 := 			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<8>) init8Done_nextx_x0 ) $on bb_33_bb_5 // type of target is $uint<8>
            // ($cast ($uint<8>) init8Done_nextx_x0 )
            ;;[type_cast_3191] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3185_req] 
        }
        ;;[phi_stmt_3192] 
        {
          ||[phi_stmt_3192_sources] 
          {
            // sources for 			$phi noiseValx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) noiseValx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) noiseValx_x0 )
            ;;[type_cast_3198] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3192_req] 
        }
        ;;[phi_stmt_3199] 
        {
          ||[phi_stmt_3199_sources] 
          {
            // sources for 			$phi rrValx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) rrValx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) rrValx_x0 )
            ;;[type_cast_3205] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3199_req] 
        }
        ;;[phi_stmt_3206] 
        {
          ||[phi_stmt_3206_sources] 
          {
            // sources for 			$phi qrsValx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) qrsValx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) qrsValx_x0 )
            ;;[type_cast_3212] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3206_req] 
        }
        ;;[phi_stmt_3213] 
        {
          ||[phi_stmt_3213_sources] 
          {
            // sources for 			$phi nmeanx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) nmeanx_x3 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) nmeanx_x3 )
            ;;[type_cast_3219] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3213_req] 
        }
        ;;[phi_stmt_3220] 
        {
          ||[phi_stmt_3220_sources] 
          {
            // sources for 			$phi qmeanx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) qmeanx_x4 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) qmeanx_x4 )
            ;;[type_cast_3226] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3220_req] 
        }
        ;;[phi_stmt_3227] 
        {
          ||[phi_stmt_3227_sources] 
          {
            // sources for 			$phi sbLocx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000100101100  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) sbLocx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) sbLocx_x0 )
            ;;[type_cast_3233] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3227_req] 
        }
        ;;[phi_stmt_3234] 
        {
          ||[phi_stmt_3234_sources] 
          {
            // sources for 			$phi sb_countx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000100101100  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) sb_countx_x2 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) sb_countx_x2 )
            ;;[type_cast_3240] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3234_req] 
        }
        ;;[phi_stmt_3241] 
        {
          ||[phi_stmt_3241_sources] 
          {
            // sources for 			$phi det_threshx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) det_threshx_x5 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) det_threshx_x5 )
            ;;[type_cast_3247] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3241_req] 
        }
        ;;[phi_stmt_3248] 
        {
          ||[phi_stmt_3248_sources] 
          {
            // sources for 			$phi initMaxx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) initMaxx_x2 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) initMaxx_x2 )
            ;;[type_cast_3254] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3248_req] 
        }
        ;;[phi_stmt_3255] 
        {
          ||[phi_stmt_3255_sources] 
          {
            // sources for 			$phi rset_countx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) rset_countx_x2 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) rset_countx_x2 )
            ;;[type_cast_3261] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3255_req] 
        }
        ;;[phi_stmt_3262] 
        {
          ||[phi_stmt_3262_sources] 
          {
            // sources for 			$phi preBlank_countx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) iNsTr_66 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_66 )
            ;;[type_cast_3268] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3262_req] 
        }
        ;;[phi_stmt_3269] 
        {
          ||[phi_stmt_3269_sources] 
          {
            // sources for 			$phi initBlankx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) initBlankx_x2 ) $on bb_33_bb_5 // type of target is $uint<32>
            // ($cast ($uint<32>) initBlankx_x2 )
            ;;[type_cast_3275] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3269_req] 
        }
      }
      initDetx_xexit_bb_5 |-> (initDetx_xexit_bb_5_PhiReq)
      $P [merge_stmt_3177_PhiReqMerge] 
      merge_stmt_3177_PhiReqMerge <-| ( bb_33_bb_5_PhiReq  initDetx_xexit_bb_5_PhiReq )
      ||[merge_stmt_3177_PhiAck] 
      {
        $T [phi_stmt_3178_ack] 
        $T [phi_stmt_3185_ack] 
        $T [phi_stmt_3192_ack] 
        $T [phi_stmt_3199_ack] 
        $T [phi_stmt_3206_ack] 
        $T [phi_stmt_3213_ack] 
        $T [phi_stmt_3220_ack] 
        $T [phi_stmt_3227_ack] 
        $T [phi_stmt_3234_ack] 
        $T [phi_stmt_3241_ack] 
        $T [phi_stmt_3248_ack] 
        $T [phi_stmt_3255_ack] 
        $T [phi_stmt_3262_ack] 
        $T [phi_stmt_3269_ack] 
        $T [phi_stmt_3276_ack] 
        $T [phi_stmt_3283_ack] 
        $T [phi_stmt_3290_ack] 
        $T [phi_stmt_3297_ack] 
      }
      merge_stmt_3177_PhiReqMerge |-> (merge_stmt_3177_PhiAck)
      merge_stmt_3177__exit__  <-| (merge_stmt_3177_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1235  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1280
      ;;[merge_stmt_3413_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3413__entry__ |-> (merge_stmt_3413_dead_link)
      merge_stmt_3413__exit__ <-| (merge_stmt_3413_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1280  --------------------------
      ||[bb_5_bb_6_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_5_bb_6 |-> (bb_5_bb_6_PhiReq)
      $P [merge_stmt_3413_PhiReqMerge] 
      merge_stmt_3413_PhiReqMerge <-| ( bb_5_bb_6_PhiReq )
      ||[merge_stmt_3413_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3413_PhiReqMerge |-> (merge_stmt_3413_PhiAck)
      merge_stmt_3413__exit__  <-| (merge_stmt_3413_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1280  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1285
      //---------------------   merge statement  file prog.linked.opt.aa, line 1285  --------------------------
      ||[bb_5_bb_7_PhiReq] 
      {
        ;;[phi_stmt_3431] 
        {
          ||[phi_stmt_3431_sources] 
          {
            // sources for 			$phi iNsTr_46 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_5_bb_7			  ($cast ($uint<32>) phitmpx_xi ) $on bb_6_bb_7 // type of target is $uint<32>
            // ($cast ($uint<32>) phitmpx_xi )
            ;;[type_cast_3437] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3431_req] 
        }
      }
      bb_5_bb_7 |-> (bb_5_bb_7_PhiReq)
      ||[bb_6_bb_7_PhiReq] 
      {
        ;;[phi_stmt_3431] 
        {
          ||[phi_stmt_3431_sources] 
          {
            // sources for 			$phi iNsTr_46 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_5_bb_7			  ($cast ($uint<32>) phitmpx_xi ) $on bb_6_bb_7 // type of target is $uint<32>
            // ($cast ($uint<32>) phitmpx_xi )
            ;;[type_cast_3437] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3431_req] 
        }
      }
      bb_6_bb_7 |-> (bb_6_bb_7_PhiReq)
      $P [merge_stmt_3430_PhiReqMerge] 
      merge_stmt_3430_PhiReqMerge <-| ( bb_5_bb_7_PhiReq  bb_6_bb_7_PhiReq )
      ||[merge_stmt_3430_PhiAck] 
      {
        $T [phi_stmt_3431_ack] 
      }
      merge_stmt_3430_PhiReqMerge |-> (merge_stmt_3430_PhiAck)
      merge_stmt_3430__exit__  <-| (merge_stmt_3430_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1285  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1296
      ;;[merge_stmt_3465_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3465__entry__ |-> (merge_stmt_3465_dead_link)
      merge_stmt_3465__exit__ <-| (merge_stmt_3465_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1296  --------------------------
      ||[bb_7_bb_8_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_7_bb_8 |-> (bb_7_bb_8_PhiReq)
      $P [merge_stmt_3465_PhiReqMerge] 
      merge_stmt_3465_PhiReqMerge <-| ( bb_7_bb_8_PhiReq )
      ||[merge_stmt_3465_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3465_PhiReqMerge |-> (merge_stmt_3465_PhiAck)
      merge_stmt_3465__exit__  <-| (merge_stmt_3465_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1296  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1301
      //---------------------   merge statement  file prog.linked.opt.aa, line 1301  --------------------------
      ||[bb_7_peakx_xexit_PhiReq] 
      {
        ;;[phi_stmt_3483] 
        {
          ||[phi_stmt_3483_sources] 
          {
            // sources for 			$phi iNsTr_53 := 			  ($cast ($uint<32>) iNsTr_48 ) $on bb_7_peakx_xexit			  ($cast ($uint<32>) phitmp1x_xi ) $on bb_8_peakx_xexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_48 )
            ;;[type_cast_3486] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) phitmp1x_xi )
            ;;[type_cast_3488] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3483_req] 
        }
      }
      bb_7_peakx_xexit |-> (bb_7_peakx_xexit_PhiReq)
      ||[bb_8_peakx_xexit_PhiReq] 
      {
        ;;[phi_stmt_3483] 
        {
          ||[phi_stmt_3483_sources] 
          {
            // sources for 			$phi iNsTr_53 := 			  ($cast ($uint<32>) iNsTr_48 ) $on bb_7_peakx_xexit			  ($cast ($uint<32>) phitmp1x_xi ) $on bb_8_peakx_xexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_48 )
            ;;[type_cast_3486] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) phitmp1x_xi )
            ;;[type_cast_3488] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3483_req] 
        }
      }
      bb_8_peakx_xexit |-> (bb_8_peakx_xexit_PhiReq)
      $P [merge_stmt_3482_PhiReqMerge] 
      merge_stmt_3482_PhiReqMerge <-| ( bb_7_peakx_xexit_PhiReq  bb_8_peakx_xexit_PhiReq )
      ||[merge_stmt_3482_PhiAck] 
      {
        $T [phi_stmt_3483_ack] 
      }
      merge_stmt_3482_PhiReqMerge |-> (merge_stmt_3482_PhiAck)
      merge_stmt_3482__exit__  <-| (merge_stmt_3482_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1301  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1321
      ;;[merge_stmt_3562_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3562__entry__ |-> (merge_stmt_3562_dead_link)
      merge_stmt_3562__exit__ <-| (merge_stmt_3562_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1321  --------------------------
      ||[peakx_xexit_bb_10_PhiReq] 
      {
        // no phi statements in merge..
      }
      peakx_xexit_bb_10 |-> (peakx_xexit_bb_10_PhiReq)
      $P [merge_stmt_3562_PhiReqMerge] 
      merge_stmt_3562_PhiReqMerge <-| ( peakx_xexit_bb_10_PhiReq )
      ||[merge_stmt_3562_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3562_PhiReqMerge |-> (merge_stmt_3562_PhiAck)
      merge_stmt_3562__exit__  <-| (merge_stmt_3562_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1321  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1326
      //---------------------   merge statement  file prog.linked.opt.aa, line 1326  --------------------------
      ||[bb_10_xx_xthread_PhiReq] 
      {
        ;;[phi_stmt_3578] 
        {
          ||[phi_stmt_3578_sources] 
          {
            // sources for 			$phi iNsTr_65 := 			  ($cast ($uint<32>) phitmp18 ) $on bb_10_xx_xthread			  ($cast ($uint<32>) iNsTr_46 ) $on peakx_xexit_xx_xthread // type of target is $uint<32>
            // ($cast ($uint<32>) phitmp18 )
            ;;[type_cast_3581] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_46 )
            ;;[type_cast_3583] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3578_req] 
        }
        ;;[phi_stmt_3584] 
        {
          ||[phi_stmt_3584_sources] 
          {
            // sources for 			$phi iNsTr_66 := 			  ($cast ($uint<32>) phitmp1 ) $on bb_10_xx_xthread			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000100111  ) ) $on peakx_xexit_xx_xthread // type of target is $uint<32>
            // ($cast ($uint<32>) phitmp1 )
            ;;[type_cast_3587] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3584_req] 
        }
      }
      bb_10_xx_xthread |-> (bb_10_xx_xthread_PhiReq)
      ||[peakx_xexit_xx_xthread_PhiReq] 
      {
        ;;[phi_stmt_3578] 
        {
          ||[phi_stmt_3578_sources] 
          {
            // sources for 			$phi iNsTr_65 := 			  ($cast ($uint<32>) phitmp18 ) $on bb_10_xx_xthread			  ($cast ($uint<32>) iNsTr_46 ) $on peakx_xexit_xx_xthread // type of target is $uint<32>
            // ($cast ($uint<32>) phitmp18 )
            ;;[type_cast_3581] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_46 )
            ;;[type_cast_3583] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3578_req] 
        }
        ;;[phi_stmt_3584] 
        {
          ||[phi_stmt_3584_sources] 
          {
            // sources for 			$phi iNsTr_66 := 			  ($cast ($uint<32>) phitmp1 ) $on bb_10_xx_xthread			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000100111  ) ) $on peakx_xexit_xx_xthread // type of target is $uint<32>
            // ($cast ($uint<32>) phitmp1 )
            ;;[type_cast_3587] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3584_req] 
        }
      }
      peakx_xexit_xx_xthread |-> (peakx_xexit_xx_xthread_PhiReq)
      $P [merge_stmt_3577_PhiReqMerge] 
      merge_stmt_3577_PhiReqMerge <-| ( bb_10_xx_xthread_PhiReq  peakx_xexit_xx_xthread_PhiReq )
      ||[merge_stmt_3577_PhiAck] 
      {
        $T [phi_stmt_3578_ack] 
        $T [phi_stmt_3584_ack] 
      }
      merge_stmt_3577_PhiReqMerge |-> (merge_stmt_3577_PhiAck)
      merge_stmt_3577__exit__  <-| (merge_stmt_3577_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1326  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1358
      ;;[merge_stmt_3715_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3715__entry__ |-> (merge_stmt_3715_dead_link)
      merge_stmt_3715__exit__ <-| (merge_stmt_3715_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1358  --------------------------
      ||[xx_xthread_xx_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      xx_xthread_xx_xpreheader |-> (xx_xthread_xx_xpreheader_PhiReq)
      $P [merge_stmt_3715_PhiReqMerge] 
      merge_stmt_3715_PhiReqMerge <-| ( xx_xthread_xx_xpreheader_PhiReq )
      ||[merge_stmt_3715_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3715_PhiReqMerge |-> (merge_stmt_3715_PhiAck)
      merge_stmt_3715__exit__  <-| (merge_stmt_3715_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1358  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1361
      //---------------------   merge statement  file prog.linked.opt.aa, line 1361  --------------------------
      ||[xx_xthread_bb_13_PhiReq] 
      {
        // no phi statements in merge..
      }
      xx_xthread_bb_13 |-> (xx_xthread_bb_13_PhiReq)
      $P [merge_stmt_3717_PhiReqMerge] 
      merge_stmt_3717_PhiReqMerge <-| ( xx_xthread_bb_13_PhiReq )
      ||[merge_stmt_3717_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3717_PhiReqMerge |-> (merge_stmt_3717_PhiAck)
      merge_stmt_3717__exit__  <-| (merge_stmt_3717_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1361  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1383
      ;;[merge_stmt_3811_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3811__entry__ |-> (merge_stmt_3811_dead_link)
      merge_stmt_3811__exit__ <-| (merge_stmt_3811_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1383  --------------------------
      ||[bb_13_bb_14_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_13_bb_14 |-> (bb_13_bb_14_PhiReq)
      $P [merge_stmt_3811_PhiReqMerge] 
      merge_stmt_3811_PhiReqMerge <-| ( bb_13_bb_14_PhiReq )
      ||[merge_stmt_3811_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3811_PhiReqMerge |-> (merge_stmt_3811_PhiAck)
      merge_stmt_3811__exit__  <-| (merge_stmt_3811_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1383  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1392
      //---------------------   merge statement  file prog.linked.opt.aa, line 1392  --------------------------
      ||[bb_15_bb_15_PhiReq] 
      {
        ;;[phi_stmt_3841] 
        {
          ||[phi_stmt_3841_sources] 
          {
            // sources for 			$phi maxx_x07x_xi := 			  ($cast ($uint<32>) iNsTr_121 ) $on bb_15_bb_15			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_121 )
            ;;[type_cast_3844] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3841_req] 
        }
        ;;[phi_stmt_3848] 
        {
          ||[phi_stmt_3848_sources] 
          {
            // sources for 			$phi minx_x06x_xi := 			  ($cast ($uint<32>) iNsTr_123 ) $on bb_15_bb_15			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_123 )
            ;;[type_cast_3851] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3848_req] 
        }
        ;;[phi_stmt_3855] 
        {
          ||[phi_stmt_3855_sources] 
          {
            // sources for 			$phi maxtx_x05x_xi := 			  ($cast ($uint<32>) iNsTr_120 ) $on bb_15_bb_15			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_120 )
            ;;[type_cast_3858] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3855_req] 
        }
        ;;[phi_stmt_3862] 
        {
          ||[phi_stmt_3862_sources] 
          {
            // sources for 			$phi mintx_x04x_xi := 			  ($cast ($uint<32>) iNsTr_122 ) $on bb_15_bb_15			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_122 )
            ;;[type_cast_3865] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3862_req] 
        }
        ;;[phi_stmt_3869] 
        {
          ||[phi_stmt_3869_sources] 
          {
            // sources for 			$phi iNsTr_115 := 			  ($cast ($uint<32>) iNsTr_125 ) $on bb_15_bb_15			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_125 )
            ;;[type_cast_3872] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3869_req] 
        }
        ;;[phi_stmt_3876] 
        {
          ||[phi_stmt_3876_sources] 
          {
            // sources for 			$phi ptrx_x02x_xi := 			  ($cast ($uint<32>) iNsTr_127 ) $on bb_15_bb_15			  ($cast ($uint<32>) iNsTr_83 ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_127 )
            ;;[type_cast_3879] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_83 )
            ;;[type_cast_3881] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3876_req] 
        }
      }
      bb_15_bb_15 |-> (bb_15_bb_15_PhiReq)
      ||[xx_xpreheader_bb_15_PhiReq] 
      {
        ;;[phi_stmt_3841] 
        {
          ||[phi_stmt_3841_sources] 
          {
            // sources for 			$phi maxx_x07x_xi := 			  ($cast ($uint<32>) iNsTr_121 ) $on bb_15_bb_15			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_121 )
            ;;[type_cast_3844] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3841_req] 
        }
        ;;[phi_stmt_3848] 
        {
          ||[phi_stmt_3848_sources] 
          {
            // sources for 			$phi minx_x06x_xi := 			  ($cast ($uint<32>) iNsTr_123 ) $on bb_15_bb_15			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_123 )
            ;;[type_cast_3851] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3848_req] 
        }
        ;;[phi_stmt_3855] 
        {
          ||[phi_stmt_3855_sources] 
          {
            // sources for 			$phi maxtx_x05x_xi := 			  ($cast ($uint<32>) iNsTr_120 ) $on bb_15_bb_15			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_120 )
            ;;[type_cast_3858] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3855_req] 
        }
        ;;[phi_stmt_3862] 
        {
          ||[phi_stmt_3862_sources] 
          {
            // sources for 			$phi mintx_x04x_xi := 			  ($cast ($uint<32>) iNsTr_122 ) $on bb_15_bb_15			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_122 )
            ;;[type_cast_3865] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3862_req] 
        }
        ;;[phi_stmt_3869] 
        {
          ||[phi_stmt_3869_sources] 
          {
            // sources for 			$phi iNsTr_115 := 			  ($cast ($uint<32>) iNsTr_125 ) $on bb_15_bb_15			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_125 )
            ;;[type_cast_3872] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3869_req] 
        }
        ;;[phi_stmt_3876] 
        {
          ||[phi_stmt_3876_sources] 
          {
            // sources for 			$phi ptrx_x02x_xi := 			  ($cast ($uint<32>) iNsTr_127 ) $on bb_15_bb_15			  ($cast ($uint<32>) iNsTr_83 ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_127 )
            ;;[type_cast_3879] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_83 )
            ;;[type_cast_3881] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3876_req] 
        }
      }
      xx_xpreheader_bb_15 |-> (xx_xpreheader_bb_15_PhiReq)
      $P [merge_stmt_3840_PhiReqMerge] 
      merge_stmt_3840_PhiReqMerge <-| ( bb_15_bb_15_PhiReq  xx_xpreheader_bb_15_PhiReq )
      ||[merge_stmt_3840_PhiAck] 
      {
        $T [phi_stmt_3841_ack] 
        $T [phi_stmt_3848_ack] 
        $T [phi_stmt_3855_ack] 
        $T [phi_stmt_3862_ack] 
        $T [phi_stmt_3869_ack] 
        $T [phi_stmt_3876_ack] 
      }
      merge_stmt_3840_PhiReqMerge |-> (merge_stmt_3840_PhiAck)
      merge_stmt_3840__exit__  <-| (merge_stmt_3840_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1392  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1418
      ;;[merge_stmt_3967_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3967__entry__ |-> (merge_stmt_3967_dead_link)
      merge_stmt_3967__exit__ <-| (merge_stmt_3967_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1418  --------------------------
      ||[bb_15_xx_x_crit_edgex_xi_PhiReq] 
      {
        ;;[phi_stmt_3968] 
        {
          ||[phi_stmt_3968_sources] 
          {
            // sources for 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_123 ) $on bb_15_xx_x_crit_edgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_123 )
            ;;[type_cast_3971] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3968_req] 
        }
        ;;[phi_stmt_3972] 
        {
          ||[phi_stmt_3972_sources] 
          {
            // sources for 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_122 ) $on bb_15_xx_x_crit_edgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_122 )
            ;;[type_cast_3975] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3972_req] 
        }
        ;;[phi_stmt_3976] 
        {
          ||[phi_stmt_3976_sources] 
          {
            // sources for 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_121 ) $on bb_15_xx_x_crit_edgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_121 )
            ;;[type_cast_3979] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3976_req] 
        }
        ;;[phi_stmt_3980] 
        {
          ||[phi_stmt_3980_sources] 
          {
            // sources for 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_120 ) $on bb_15_xx_x_crit_edgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_120 )
            ;;[type_cast_3983] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3980_req] 
        }
      }
      bb_15_xx_x_crit_edgex_xi |-> (bb_15_xx_x_crit_edgex_xi_PhiReq)
      $P [merge_stmt_3967_PhiReqMerge] 
      merge_stmt_3967_PhiReqMerge <-| ( bb_15_xx_x_crit_edgex_xi_PhiReq )
      ||[merge_stmt_3967_PhiAck] 
      {
        $T [phi_stmt_3968_ack] 
        $T [phi_stmt_3972_ack] 
        $T [phi_stmt_3976_ack] 
        $T [phi_stmt_3980_ack] 
      }
      merge_stmt_3967_PhiReqMerge |-> (merge_stmt_3967_PhiAck)
      merge_stmt_3967__exit__  <-| (merge_stmt_3967_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1418  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1436
      ;;[merge_stmt_4037_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_4037__entry__ |-> (merge_stmt_4037_dead_link)
      merge_stmt_4037__exit__ <-| (merge_stmt_4037_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1436  --------------------------
      ||[xx_x_crit_edgex_xi_bb_17_PhiReq] 
      {
        // no phi statements in merge..
      }
      xx_x_crit_edgex_xi_bb_17 |-> (xx_x_crit_edgex_xi_bb_17_PhiReq)
      $P [merge_stmt_4037_PhiReqMerge] 
      merge_stmt_4037_PhiReqMerge <-| ( xx_x_crit_edgex_xi_bb_17_PhiReq )
      ||[merge_stmt_4037_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_4037_PhiReqMerge |-> (merge_stmt_4037_PhiAck)
      merge_stmt_4037__exit__  <-| (merge_stmt_4037_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1436  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1444
      //---------------------   merge statement  file prog.linked.opt.aa, line 1444  --------------------------
      ||[bb_17_blsCheckx_xexit_PhiReq] 
      {
        ;;[phi_stmt_4073] 
        {
          ||[phi_stmt_4073_sources] 
          {
            // sources for 			$phi iNsTr_208 := 			  ($cast ($uint<1>) ($bitcast ($uint<1>) _b1  ) ) $on xx_x_crit_edgex_xi_blsCheckx_xexit			  ($cast ($uint<1>) phitmpx_xi12 ) $on bb_17_blsCheckx_xexit // type of target is $uint<1>
            // ($cast ($uint<1>) phitmpx_xi12 )
            ;;[type_cast_4079] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4073_req] 
        }
      }
      bb_17_blsCheckx_xexit |-> (bb_17_blsCheckx_xexit_PhiReq)
      ||[xx_x_crit_edgex_xi_blsCheckx_xexit_PhiReq] 
      {
        ;;[phi_stmt_4073] 
        {
          ||[phi_stmt_4073_sources] 
          {
            // sources for 			$phi iNsTr_208 := 			  ($cast ($uint<1>) ($bitcast ($uint<1>) _b1  ) ) $on xx_x_crit_edgex_xi_blsCheckx_xexit			  ($cast ($uint<1>) phitmpx_xi12 ) $on bb_17_blsCheckx_xexit // type of target is $uint<1>
            // ($cast ($uint<1>) phitmpx_xi12 )
            ;;[type_cast_4079] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4073_req] 
        }
      }
      xx_x_crit_edgex_xi_blsCheckx_xexit |-> (xx_x_crit_edgex_xi_blsCheckx_xexit_PhiReq)
      $P [merge_stmt_4072_PhiReqMerge] 
      merge_stmt_4072_PhiReqMerge <-| ( bb_17_blsCheckx_xexit_PhiReq  xx_x_crit_edgex_xi_blsCheckx_xexit_PhiReq )
      ||[merge_stmt_4072_PhiAck] 
      {
        $T [phi_stmt_4073_ack] 
      }
      merge_stmt_4072_PhiReqMerge |-> (merge_stmt_4072_PhiAck)
      merge_stmt_4072__exit__  <-| (merge_stmt_4072_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1444  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1464
      ;;[merge_stmt_4160_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_4160__entry__ |-> (merge_stmt_4160_dead_link)
      merge_stmt_4160__exit__ <-| (merge_stmt_4160_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1464  --------------------------
      ||[blsCheckx_xexit_bb_19_PhiReq] 
      {
        // no phi statements in merge..
      }
      blsCheckx_xexit_bb_19 |-> (blsCheckx_xexit_bb_19_PhiReq)
      $P [merge_stmt_4160_PhiReqMerge] 
      merge_stmt_4160_PhiReqMerge <-| ( blsCheckx_xexit_bb_19_PhiReq )
      ||[merge_stmt_4160_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_4160_PhiReqMerge |-> (merge_stmt_4160_PhiAck)
      merge_stmt_4160__exit__  <-| (merge_stmt_4160_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1464  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1482
      //---------------------   merge statement  file prog.linked.opt.aa, line 1482  --------------------------
      ||[bb_19_bb_20_PhiReq] 
      {
        ;;[phi_stmt_4234] 
        {
          ||[phi_stmt_4234_sources] 
          {
            // sources for 			$phi nmeanx_x2 := 			  ($cast ($uint<32>) iNsTr_230 ) $on bb_19_bb_20			  ($cast ($uint<32>) nmeanx_x1 ) $on blsCheckx_xexit_bb_20 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_230 )
            ;;[type_cast_4237] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) nmeanx_x1 )
            ;;[type_cast_4239] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4234_req] 
        }
        ;;[phi_stmt_4240] 
        {
          ||[phi_stmt_4240_sources] 
          {
            // sources for 			$phi det_threshx_x2 := 			  ($cast ($uint<32>) iNsTr_236 ) $on bb_19_bb_20			  ($cast ($uint<32>) det_threshx_x1 ) $on blsCheckx_xexit_bb_20 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_236 )
            ;;[type_cast_4243] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) det_threshx_x1 )
            ;;[type_cast_4245] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4240_req] 
        }
      }
      bb_19_bb_20 |-> (bb_19_bb_20_PhiReq)
      ||[blsCheckx_xexit_bb_20_PhiReq] 
      {
        ;;[phi_stmt_4234] 
        {
          ||[phi_stmt_4234_sources] 
          {
            // sources for 			$phi nmeanx_x2 := 			  ($cast ($uint<32>) iNsTr_230 ) $on bb_19_bb_20			  ($cast ($uint<32>) nmeanx_x1 ) $on blsCheckx_xexit_bb_20 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_230 )
            ;;[type_cast_4237] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) nmeanx_x1 )
            ;;[type_cast_4239] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4234_req] 
        }
        ;;[phi_stmt_4240] 
        {
          ||[phi_stmt_4240_sources] 
          {
            // sources for 			$phi det_threshx_x2 := 			  ($cast ($uint<32>) iNsTr_236 ) $on bb_19_bb_20			  ($cast ($uint<32>) det_threshx_x1 ) $on blsCheckx_xexit_bb_20 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_236 )
            ;;[type_cast_4243] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) det_threshx_x1 )
            ;;[type_cast_4245] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4240_req] 
        }
      }
      blsCheckx_xexit_bb_20 |-> (blsCheckx_xexit_bb_20_PhiReq)
      $P [merge_stmt_4233_PhiReqMerge] 
      merge_stmt_4233_PhiReqMerge <-| ( bb_19_bb_20_PhiReq  blsCheckx_xexit_bb_20_PhiReq )
      ||[merge_stmt_4233_PhiAck] 
      {
        $T [phi_stmt_4234_ack] 
        $T [phi_stmt_4240_ack] 
      }
      merge_stmt_4233_PhiReqMerge |-> (merge_stmt_4233_PhiAck)
      merge_stmt_4233__exit__  <-| (merge_stmt_4233_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1482  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1495
      ;;[merge_stmt_4278_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_4278__entry__ |-> (merge_stmt_4278_dead_link)
      merge_stmt_4278__exit__ <-| (merge_stmt_4278_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1495  --------------------------
      ||[bb_20_bb_21_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_20_bb_21 |-> (bb_20_bb_21_PhiReq)
      $P [merge_stmt_4278_PhiReqMerge] 
      merge_stmt_4278_PhiReqMerge <-| ( bb_20_bb_21_PhiReq )
      ||[merge_stmt_4278_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_4278_PhiReqMerge |-> (merge_stmt_4278_PhiAck)
      merge_stmt_4278__exit__  <-| (merge_stmt_4278_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1495  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1503
      //---------------------   merge statement  file prog.linked.opt.aa, line 1503  --------------------------
      ||[bb_20_bb_22_PhiReq] 
      {
        ;;[phi_stmt_4313] 
        {
          ||[phi_stmt_4313_sources] 
          {
            // sources for 			$phi iNsTr_242 := 			  ($cast ($uint<1>) ($bitcast ($uint<1>) _b0  ) ) $on bb_20_bb_22			  ($cast ($uint<1>) xx_x ) $on bb_21_bb_22 // type of target is $uint<1>
            // ($cast ($uint<1>) xx_x )
            ;;[type_cast_4319] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4313_req] 
        }
      }
      bb_20_bb_22 |-> (bb_20_bb_22_PhiReq)
      ||[bb_21_bb_22_PhiReq] 
      {
        ;;[phi_stmt_4313] 
        {
          ||[phi_stmt_4313_sources] 
          {
            // sources for 			$phi iNsTr_242 := 			  ($cast ($uint<1>) ($bitcast ($uint<1>) _b0  ) ) $on bb_20_bb_22			  ($cast ($uint<1>) xx_x ) $on bb_21_bb_22 // type of target is $uint<1>
            // ($cast ($uint<1>) xx_x )
            ;;[type_cast_4319] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4313_req] 
        }
      }
      bb_21_bb_22 |-> (bb_21_bb_22_PhiReq)
      $P [merge_stmt_4312_PhiReqMerge] 
      merge_stmt_4312_PhiReqMerge <-| ( bb_20_bb_22_PhiReq  bb_21_bb_22_PhiReq )
      ||[merge_stmt_4312_PhiAck] 
      {
        $T [phi_stmt_4313_ack] 
      }
      merge_stmt_4312_PhiReqMerge |-> (merge_stmt_4312_PhiAck)
      merge_stmt_4312__exit__  <-| (merge_stmt_4312_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1503  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1517
      ;;[merge_stmt_4363_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_4363__entry__ |-> (merge_stmt_4363_dead_link)
      merge_stmt_4363__exit__ <-| (merge_stmt_4363_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1517  --------------------------
      ||[bb_22_xx_xthread27_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_22_xx_xthread27 |-> (bb_22_xx_xthread27_PhiReq)
      $P [merge_stmt_4363_PhiReqMerge] 
      merge_stmt_4363_PhiReqMerge <-| ( bb_22_xx_xthread27_PhiReq )
      ||[merge_stmt_4363_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_4363_PhiReqMerge |-> (merge_stmt_4363_PhiAck)
      merge_stmt_4363__exit__  <-| (merge_stmt_4363_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1517  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1521
      //---------------------   merge statement  file prog.linked.opt.aa, line 1521  --------------------------
      ||[bb_22_bb_24_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_22_bb_24 |-> (bb_22_bb_24_PhiReq)
      $P [merge_stmt_4368_PhiReqMerge] 
      merge_stmt_4368_PhiReqMerge <-| ( bb_22_bb_24_PhiReq )
      ||[merge_stmt_4368_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_4368_PhiReqMerge |-> (merge_stmt_4368_PhiAck)
      merge_stmt_4368__exit__  <-| (merge_stmt_4368_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1521  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1552
      //---------------------   merge statement  file prog.linked.opt.aa, line 1552  --------------------------
      ||[bb_24_bb_25_PhiReq] 
      {
        ;;[phi_stmt_4508] 
        {
          ||[phi_stmt_4508_sources] 
          {
            // sources for 			$phi iNsTr_279 := 			  ($cast ($uint<32>) iNsTr_272 ) $on bb_24_bb_25			  ($cast ($uint<32>) iNsTr_277 ) $on xx_xthread27_bb_25 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_272 )
            ;;[type_cast_4511] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_277 )
            ;;[type_cast_4513] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4508_req] 
        }
        ;;[phi_stmt_4514] 
        {
          ||[phi_stmt_4514_sources] 
          {
            // sources for 			$phi det_threshx_x325 := 			  ($cast ($uint<32>) iNsTr_271 ) $on bb_24_bb_25			  ($cast ($uint<32>) det_threshx_x2 ) $on xx_xthread27_bb_25 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_271 )
            ;;[type_cast_4517] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) det_threshx_x2 )
            ;;[type_cast_4519] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4514_req] 
        }
        ;;[phi_stmt_4520] 
        {
          ||[phi_stmt_4520_sources] 
          {
            // sources for 			$phi qmeanx_x223 := 			  ($cast ($uint<32>) iNsTr_263 ) $on bb_24_bb_25			  ($cast ($uint<32>) qmeanx_x1 ) $on xx_xthread27_bb_25 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_263 )
            ;;[type_cast_4523] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) qmeanx_x1 )
            ;;[type_cast_4525] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4520_req] 
        }
        ;;[phi_stmt_4526] 
        {
          ||[phi_stmt_4526_sources] 
          {
            // sources for 			$phi iNsTr_280 := 			  ($cast ($uint<32>) iNsTr_275 ) $on bb_24_bb_25			  ($cast ($uint<32>) sb_countx_x1 ) $on xx_xthread27_bb_25 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_275 )
            ;;[type_cast_4529] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) sb_countx_x1 )
            ;;[type_cast_4531] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4526_req] 
        }
      }
      bb_24_bb_25 |-> (bb_24_bb_25_PhiReq)
      ||[xx_xthread27_bb_25_PhiReq] 
      {
        ;;[phi_stmt_4508] 
        {
          ||[phi_stmt_4508_sources] 
          {
            // sources for 			$phi iNsTr_279 := 			  ($cast ($uint<32>) iNsTr_272 ) $on bb_24_bb_25			  ($cast ($uint<32>) iNsTr_277 ) $on xx_xthread27_bb_25 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_272 )
            ;;[type_cast_4511] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_277 )
            ;;[type_cast_4513] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4508_req] 
        }
        ;;[phi_stmt_4514] 
        {
          ||[phi_stmt_4514_sources] 
          {
            // sources for 			$phi det_threshx_x325 := 			  ($cast ($uint<32>) iNsTr_271 ) $on bb_24_bb_25			  ($cast ($uint<32>) det_threshx_x2 ) $on xx_xthread27_bb_25 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_271 )
            ;;[type_cast_4517] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) det_threshx_x2 )
            ;;[type_cast_4519] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4514_req] 
        }
        ;;[phi_stmt_4520] 
        {
          ||[phi_stmt_4520_sources] 
          {
            // sources for 			$phi qmeanx_x223 := 			  ($cast ($uint<32>) iNsTr_263 ) $on bb_24_bb_25			  ($cast ($uint<32>) qmeanx_x1 ) $on xx_xthread27_bb_25 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_263 )
            ;;[type_cast_4523] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) qmeanx_x1 )
            ;;[type_cast_4525] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4520_req] 
        }
        ;;[phi_stmt_4526] 
        {
          ||[phi_stmt_4526_sources] 
          {
            // sources for 			$phi iNsTr_280 := 			  ($cast ($uint<32>) iNsTr_275 ) $on bb_24_bb_25			  ($cast ($uint<32>) sb_countx_x1 ) $on xx_xthread27_bb_25 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_275 )
            ;;[type_cast_4529] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) sb_countx_x1 )
            ;;[type_cast_4531] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4526_req] 
        }
      }
      xx_xthread27_bb_25 |-> (xx_xthread27_bb_25_PhiReq)
      $P [merge_stmt_4507_PhiReqMerge] 
      merge_stmt_4507_PhiReqMerge <-| ( bb_24_bb_25_PhiReq  xx_xthread27_bb_25_PhiReq )
      ||[merge_stmt_4507_PhiAck] 
      {
        $T [phi_stmt_4508_ack] 
        $T [phi_stmt_4514_ack] 
        $T [phi_stmt_4520_ack] 
        $T [phi_stmt_4526_ack] 
      }
      merge_stmt_4507_PhiReqMerge |-> (merge_stmt_4507_PhiAck)
      merge_stmt_4507__exit__  <-| (merge_stmt_4507_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1552  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1565
      ;;[merge_stmt_4551_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_4551__entry__ |-> (merge_stmt_4551_dead_link)
      merge_stmt_4551__exit__ <-| (merge_stmt_4551_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1565  --------------------------
      ||[bb_25_bb_26_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_25_bb_26 |-> (bb_25_bb_26_PhiReq)
      $P [merge_stmt_4551_PhiReqMerge] 
      merge_stmt_4551_PhiReqMerge <-| ( bb_25_bb_26_PhiReq )
      ||[merge_stmt_4551_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_4551_PhiReqMerge |-> (merge_stmt_4551_PhiAck)
      merge_stmt_4551__exit__  <-| (merge_stmt_4551_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1565  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1569
      //---------------------   merge statement  file prog.linked.opt.aa, line 1569  --------------------------
      ||[bb_25_bb_27_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_25_bb_27 |-> (bb_25_bb_27_PhiReq)
      $P [merge_stmt_4559_PhiReqMerge] 
      merge_stmt_4559_PhiReqMerge <-| ( bb_25_bb_27_PhiReq )
      ||[merge_stmt_4559_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_4559_PhiReqMerge |-> (merge_stmt_4559_PhiAck)
      merge_stmt_4559__exit__  <-| (merge_stmt_4559_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1569  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1573
      //---------------------   merge statement  file prog.linked.opt.aa, line 1573  --------------------------
      ||[bb_26_bb_28_PhiReq] 
      {
        ;;[phi_stmt_4570] 
        {
          ||[phi_stmt_4570_sources] 
          {
            // sources for 			$phi iNsTr_287 := 			  ($cast ($uint<32>) iNsTr_283 ) $on bb_26_bb_28			  ($cast ($uint<32>) iNsTr_285 ) $on bb_27_bb_28 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_283 )
            ;;[type_cast_4573] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_285 )
            ;;[type_cast_4575] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4570_req] 
        }
      }
      bb_26_bb_28 |-> (bb_26_bb_28_PhiReq)
      ||[bb_27_bb_28_PhiReq] 
      {
        ;;[phi_stmt_4570] 
        {
          ||[phi_stmt_4570_sources] 
          {
            // sources for 			$phi iNsTr_287 := 			  ($cast ($uint<32>) iNsTr_283 ) $on bb_26_bb_28			  ($cast ($uint<32>) iNsTr_285 ) $on bb_27_bb_28 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_283 )
            ;;[type_cast_4573] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_285 )
            ;;[type_cast_4575] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4570_req] 
        }
      }
      bb_27_bb_28 |-> (bb_27_bb_28_PhiReq)
      $P [merge_stmt_4569_PhiReqMerge] 
      merge_stmt_4569_PhiReqMerge <-| ( bb_26_bb_28_PhiReq  bb_27_bb_28_PhiReq )
      ||[merge_stmt_4569_PhiAck] 
      {
        $T [phi_stmt_4570_ack] 
      }
      merge_stmt_4569_PhiReqMerge |-> (merge_stmt_4569_PhiAck)
      merge_stmt_4569__exit__  <-| (merge_stmt_4569_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1573  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1583
      //---------------------   merge statement  file prog.linked.opt.aa, line 1583  --------------------------
      ||[bb_13_bb_29_PhiReq] 
      {
        ;;[phi_stmt_4617] 
        {
          ||[phi_stmt_4617_sources] 
          {
            // sources for 			$phi QRSdelayx_x0 := 			  ($cast ($uint<32>) iNsTr_287 ) $on bb_28_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_14_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_287 )
            ;;[type_cast_4620] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4617_req] 
        }
        ;;[phi_stmt_4627] 
        {
          ||[phi_stmt_4627_sources] 
          {
            // sources for 			$phi init8Done_nextx_x0 := 			  ($cast ($uint<8>) init8Done_nextx_x1 ) $on bb_28_bb_29			  ($cast ($uint<8>) iNsTr_101 ) $on bb_14_bb_29			  ($cast ($uint<8>) iNsTr_101 ) $on bb_13_bb_29 // type of target is $uint<8>
            // ($cast ($uint<8>) init8Done_nextx_x1 )
            ;;[type_cast_4630] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<8>) iNsTr_101 )
            ;;[type_cast_4632] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<8>) iNsTr_101 )
            ;;[type_cast_4634] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4627_req] 
        }
        ;;[phi_stmt_4635] 
        {
          ||[phi_stmt_4635_sources] 
          {
            // sources for 			$phi noiseValx_x0 := 			  ($cast ($uint<32>) iNsTr_216 ) $on bb_28_bb_29			  ($cast ($uint<32>) noiseValx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) noiseValx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_216 )
            ;;[type_cast_4638] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) noiseValx_x1 )
            ;;[type_cast_4640] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) noiseValx_x1 )
            ;;[type_cast_4642] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4635_req] 
        }
        ;;[phi_stmt_4643] 
        {
          ||[phi_stmt_4643_sources] 
          {
            // sources for 			$phi rrValx_x0 := 			  ($cast ($uint<32>) iNsTr_248 ) $on bb_28_bb_29			  ($cast ($uint<32>) rrValx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) rrValx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_248 )
            ;;[type_cast_4646] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) rrValx_x1 )
            ;;[type_cast_4648] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) rrValx_x1 )
            ;;[type_cast_4650] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4643_req] 
        }
        ;;[phi_stmt_4651] 
        {
          ||[phi_stmt_4651_sources] 
          {
            // sources for 			$phi qrsValx_x0 := 			  ($cast ($uint<32>) iNsTr_247 ) $on bb_28_bb_29			  ($cast ($uint<32>) qrsValx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) qrsValx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_247 )
            ;;[type_cast_4654] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) qrsValx_x1 )
            ;;[type_cast_4656] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) qrsValx_x1 )
            ;;[type_cast_4658] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4651_req] 
        }
        ;;[phi_stmt_4659] 
        {
          ||[phi_stmt_4659_sources] 
          {
            // sources for 			$phi nmeanx_x0 := 			  ($cast ($uint<32>) nmeanx_x2 ) $on bb_28_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_14_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) nmeanx_x2 )
            ;;[type_cast_4662] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4659_req] 
        }
        ;;[phi_stmt_4669] 
        {
          ||[phi_stmt_4669_sources] 
          {
            // sources for 			$phi qmeanx_x0 := 			  ($cast ($uint<32>) qmeanx_x223 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_107 ) $on bb_14_bb_29			  ($cast ($uint<32>) qmeanx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) qmeanx_x223 )
            ;;[type_cast_4672] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_107 )
            ;;[type_cast_4674] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) qmeanx_x1 )
            ;;[type_cast_4676] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4669_req] 
        }
        ;;[phi_stmt_4677] 
        {
          ||[phi_stmt_4677_sources] 
          {
            // sources for 			$phi sbLocx_x0 := 			  ($cast ($uint<32>) iNsTr_220 ) $on bb_28_bb_29			  ($cast ($uint<32>) sbLocx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) sbLocx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_220 )
            ;;[type_cast_4680] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) sbLocx_x1 )
            ;;[type_cast_4682] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) sbLocx_x1 )
            ;;[type_cast_4684] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4677_req] 
        }
        ;;[phi_stmt_4685] 
        {
          ||[phi_stmt_4685_sources] 
          {
            // sources for 			$phi sb_countx_x0 := 			  ($cast ($uint<32>) iNsTr_280 ) $on bb_28_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000101001010  ) ) $on bb_14_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000101001010  ) ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_280 )
            ;;[type_cast_4688] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4685_req] 
        }
        ;;[phi_stmt_4695] 
        {
          ||[phi_stmt_4695_sources] 
          {
            // sources for 			$phi det_threshx_x0 := 			  ($cast ($uint<32>) det_threshx_x325 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_111 ) $on bb_14_bb_29			  ($cast ($uint<32>) det_threshx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) det_threshx_x325 )
            ;;[type_cast_4698] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_111 )
            ;;[type_cast_4700] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) det_threshx_x1 )
            ;;[type_cast_4702] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4695_req] 
        }
        ;;[phi_stmt_4703] 
        {
          ||[phi_stmt_4703_sources] 
          {
            // sources for 			$phi initMaxx_x0 := 			  ($cast ($uint<32>) iNsTr_292 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_103 ) $on bb_14_bb_29			  ($cast ($uint<32>) iNsTr_103 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_292 )
            ;;[type_cast_4706] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_103 )
            ;;[type_cast_4708] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_103 )
            ;;[type_cast_4710] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4703_req] 
        }
        ;;[phi_stmt_4711] 
        {
          ||[phi_stmt_4711_sources] 
          {
            // sources for 			$phi rset_countx_x0 := 			  ($cast ($uint<32>) iNsTr_293 ) $on bb_28_bb_29			  ($cast ($uint<32>) rset_countx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) rset_countx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_293 )
            ;;[type_cast_4714] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) rset_countx_x1 )
            ;;[type_cast_4716] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) rset_countx_x1 )
            ;;[type_cast_4718] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4711_req] 
        }
        ;;[phi_stmt_4719] 
        {
          ||[phi_stmt_4719_sources] 
          {
            // sources for 			$phi initBlankx_x0 := 			  ($cast ($uint<32>) iNsTr_291 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_93 ) $on bb_14_bb_29			  ($cast ($uint<32>) iNsTr_93 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_291 )
            ;;[type_cast_4722] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_93 )
            ;;[type_cast_4724] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_93 )
            ;;[type_cast_4726] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4719_req] 
        }
        ;;[phi_stmt_4727] 
        {
          ||[phi_stmt_4727_sources] 
          {
            // sources for 			$phi countx_x1 := 			  ($cast ($uint<32>) xx_x7 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_92 ) $on bb_14_bb_29			  ($cast ($uint<32>) iNsTr_92 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) xx_x7 )
            ;;[type_cast_4730] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_92 )
            ;;[type_cast_4732] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_92 )
            ;;[type_cast_4734] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4727_req] 
        }
        ;;[phi_stmt_4735] 
        {
          ||[phi_stmt_4735_sources] 
          {
            // sources for 			$phi qpk_countx_x0 := 			  ($cast ($uint<32>) qpk_countx_x1 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_98 ) $on bb_14_bb_29			  ($cast ($uint<32>) iNsTr_98 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) qpk_countx_x1 )
            ;;[type_cast_4738] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_98 )
            ;;[type_cast_4740] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_98 )
            ;;[type_cast_4742] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4735_req] 
        }
        ;;[phi_stmt_4743] 
        {
          ||[phi_stmt_4743_sources] 
          {
            // sources for 			$phi sbPeakx_x0 := 			  ($cast ($uint<32>) iNsTr_288 ) $on bb_28_bb_29			  ($cast ($uint<32>) sbPeakx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) sbPeakx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_288 )
            ;;[type_cast_4746] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) sbPeakx_x1 )
            ;;[type_cast_4748] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) sbPeakx_x1 )
            ;;[type_cast_4750] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4743_req] 
        }
      }
      bb_13_bb_29 |-> (bb_13_bb_29_PhiReq)
      ||[bb_14_bb_29_PhiReq] 
      {
        ;;[phi_stmt_4617] 
        {
          ||[phi_stmt_4617_sources] 
          {
            // sources for 			$phi QRSdelayx_x0 := 			  ($cast ($uint<32>) iNsTr_287 ) $on bb_28_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_14_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_287 )
            ;;[type_cast_4620] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4617_req] 
        }
        ;;[phi_stmt_4627] 
        {
          ||[phi_stmt_4627_sources] 
          {
            // sources for 			$phi init8Done_nextx_x0 := 			  ($cast ($uint<8>) init8Done_nextx_x1 ) $on bb_28_bb_29			  ($cast ($uint<8>) iNsTr_101 ) $on bb_14_bb_29			  ($cast ($uint<8>) iNsTr_101 ) $on bb_13_bb_29 // type of target is $uint<8>
            // ($cast ($uint<8>) init8Done_nextx_x1 )
            ;;[type_cast_4630] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<8>) iNsTr_101 )
            ;;[type_cast_4632] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<8>) iNsTr_101 )
            ;;[type_cast_4634] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4627_req] 
        }
        ;;[phi_stmt_4635] 
        {
          ||[phi_stmt_4635_sources] 
          {
            // sources for 			$phi noiseValx_x0 := 			  ($cast ($uint<32>) iNsTr_216 ) $on bb_28_bb_29			  ($cast ($uint<32>) noiseValx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) noiseValx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_216 )
            ;;[type_cast_4638] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) noiseValx_x1 )
            ;;[type_cast_4640] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) noiseValx_x1 )
            ;;[type_cast_4642] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4635_req] 
        }
        ;;[phi_stmt_4643] 
        {
          ||[phi_stmt_4643_sources] 
          {
            // sources for 			$phi rrValx_x0 := 			  ($cast ($uint<32>) iNsTr_248 ) $on bb_28_bb_29			  ($cast ($uint<32>) rrValx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) rrValx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_248 )
            ;;[type_cast_4646] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) rrValx_x1 )
            ;;[type_cast_4648] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) rrValx_x1 )
            ;;[type_cast_4650] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4643_req] 
        }
        ;;[phi_stmt_4651] 
        {
          ||[phi_stmt_4651_sources] 
          {
            // sources for 			$phi qrsValx_x0 := 			  ($cast ($uint<32>) iNsTr_247 ) $on bb_28_bb_29			  ($cast ($uint<32>) qrsValx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) qrsValx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_247 )
            ;;[type_cast_4654] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) qrsValx_x1 )
            ;;[type_cast_4656] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) qrsValx_x1 )
            ;;[type_cast_4658] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4651_req] 
        }
        ;;[phi_stmt_4659] 
        {
          ||[phi_stmt_4659_sources] 
          {
            // sources for 			$phi nmeanx_x0 := 			  ($cast ($uint<32>) nmeanx_x2 ) $on bb_28_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_14_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) nmeanx_x2 )
            ;;[type_cast_4662] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4659_req] 
        }
        ;;[phi_stmt_4669] 
        {
          ||[phi_stmt_4669_sources] 
          {
            // sources for 			$phi qmeanx_x0 := 			  ($cast ($uint<32>) qmeanx_x223 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_107 ) $on bb_14_bb_29			  ($cast ($uint<32>) qmeanx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) qmeanx_x223 )
            ;;[type_cast_4672] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_107 )
            ;;[type_cast_4674] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) qmeanx_x1 )
            ;;[type_cast_4676] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4669_req] 
        }
        ;;[phi_stmt_4677] 
        {
          ||[phi_stmt_4677_sources] 
          {
            // sources for 			$phi sbLocx_x0 := 			  ($cast ($uint<32>) iNsTr_220 ) $on bb_28_bb_29			  ($cast ($uint<32>) sbLocx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) sbLocx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_220 )
            ;;[type_cast_4680] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) sbLocx_x1 )
            ;;[type_cast_4682] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) sbLocx_x1 )
            ;;[type_cast_4684] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4677_req] 
        }
        ;;[phi_stmt_4685] 
        {
          ||[phi_stmt_4685_sources] 
          {
            // sources for 			$phi sb_countx_x0 := 			  ($cast ($uint<32>) iNsTr_280 ) $on bb_28_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000101001010  ) ) $on bb_14_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000101001010  ) ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_280 )
            ;;[type_cast_4688] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4685_req] 
        }
        ;;[phi_stmt_4695] 
        {
          ||[phi_stmt_4695_sources] 
          {
            // sources for 			$phi det_threshx_x0 := 			  ($cast ($uint<32>) det_threshx_x325 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_111 ) $on bb_14_bb_29			  ($cast ($uint<32>) det_threshx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) det_threshx_x325 )
            ;;[type_cast_4698] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_111 )
            ;;[type_cast_4700] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) det_threshx_x1 )
            ;;[type_cast_4702] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4695_req] 
        }
        ;;[phi_stmt_4703] 
        {
          ||[phi_stmt_4703_sources] 
          {
            // sources for 			$phi initMaxx_x0 := 			  ($cast ($uint<32>) iNsTr_292 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_103 ) $on bb_14_bb_29			  ($cast ($uint<32>) iNsTr_103 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_292 )
            ;;[type_cast_4706] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_103 )
            ;;[type_cast_4708] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_103 )
            ;;[type_cast_4710] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4703_req] 
        }
        ;;[phi_stmt_4711] 
        {
          ||[phi_stmt_4711_sources] 
          {
            // sources for 			$phi rset_countx_x0 := 			  ($cast ($uint<32>) iNsTr_293 ) $on bb_28_bb_29			  ($cast ($uint<32>) rset_countx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) rset_countx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_293 )
            ;;[type_cast_4714] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) rset_countx_x1 )
            ;;[type_cast_4716] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) rset_countx_x1 )
            ;;[type_cast_4718] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4711_req] 
        }
        ;;[phi_stmt_4719] 
        {
          ||[phi_stmt_4719_sources] 
          {
            // sources for 			$phi initBlankx_x0 := 			  ($cast ($uint<32>) iNsTr_291 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_93 ) $on bb_14_bb_29			  ($cast ($uint<32>) iNsTr_93 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_291 )
            ;;[type_cast_4722] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_93 )
            ;;[type_cast_4724] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_93 )
            ;;[type_cast_4726] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4719_req] 
        }
        ;;[phi_stmt_4727] 
        {
          ||[phi_stmt_4727_sources] 
          {
            // sources for 			$phi countx_x1 := 			  ($cast ($uint<32>) xx_x7 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_92 ) $on bb_14_bb_29			  ($cast ($uint<32>) iNsTr_92 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) xx_x7 )
            ;;[type_cast_4730] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_92 )
            ;;[type_cast_4732] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_92 )
            ;;[type_cast_4734] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4727_req] 
        }
        ;;[phi_stmt_4735] 
        {
          ||[phi_stmt_4735_sources] 
          {
            // sources for 			$phi qpk_countx_x0 := 			  ($cast ($uint<32>) qpk_countx_x1 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_98 ) $on bb_14_bb_29			  ($cast ($uint<32>) iNsTr_98 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) qpk_countx_x1 )
            ;;[type_cast_4738] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_98 )
            ;;[type_cast_4740] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_98 )
            ;;[type_cast_4742] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4735_req] 
        }
        ;;[phi_stmt_4743] 
        {
          ||[phi_stmt_4743_sources] 
          {
            // sources for 			$phi sbPeakx_x0 := 			  ($cast ($uint<32>) iNsTr_288 ) $on bb_28_bb_29			  ($cast ($uint<32>) sbPeakx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) sbPeakx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_288 )
            ;;[type_cast_4746] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) sbPeakx_x1 )
            ;;[type_cast_4748] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) sbPeakx_x1 )
            ;;[type_cast_4750] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4743_req] 
        }
      }
      bb_14_bb_29 |-> (bb_14_bb_29_PhiReq)
      ||[bb_28_bb_29_PhiReq] 
      {
        ;;[phi_stmt_4617] 
        {
          ||[phi_stmt_4617_sources] 
          {
            // sources for 			$phi QRSdelayx_x0 := 			  ($cast ($uint<32>) iNsTr_287 ) $on bb_28_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_14_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_287 )
            ;;[type_cast_4620] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4617_req] 
        }
        ;;[phi_stmt_4627] 
        {
          ||[phi_stmt_4627_sources] 
          {
            // sources for 			$phi init8Done_nextx_x0 := 			  ($cast ($uint<8>) init8Done_nextx_x1 ) $on bb_28_bb_29			  ($cast ($uint<8>) iNsTr_101 ) $on bb_14_bb_29			  ($cast ($uint<8>) iNsTr_101 ) $on bb_13_bb_29 // type of target is $uint<8>
            // ($cast ($uint<8>) init8Done_nextx_x1 )
            ;;[type_cast_4630] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<8>) iNsTr_101 )
            ;;[type_cast_4632] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<8>) iNsTr_101 )
            ;;[type_cast_4634] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4627_req] 
        }
        ;;[phi_stmt_4635] 
        {
          ||[phi_stmt_4635_sources] 
          {
            // sources for 			$phi noiseValx_x0 := 			  ($cast ($uint<32>) iNsTr_216 ) $on bb_28_bb_29			  ($cast ($uint<32>) noiseValx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) noiseValx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_216 )
            ;;[type_cast_4638] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) noiseValx_x1 )
            ;;[type_cast_4640] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) noiseValx_x1 )
            ;;[type_cast_4642] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4635_req] 
        }
        ;;[phi_stmt_4643] 
        {
          ||[phi_stmt_4643_sources] 
          {
            // sources for 			$phi rrValx_x0 := 			  ($cast ($uint<32>) iNsTr_248 ) $on bb_28_bb_29			  ($cast ($uint<32>) rrValx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) rrValx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_248 )
            ;;[type_cast_4646] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) rrValx_x1 )
            ;;[type_cast_4648] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) rrValx_x1 )
            ;;[type_cast_4650] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4643_req] 
        }
        ;;[phi_stmt_4651] 
        {
          ||[phi_stmt_4651_sources] 
          {
            // sources for 			$phi qrsValx_x0 := 			  ($cast ($uint<32>) iNsTr_247 ) $on bb_28_bb_29			  ($cast ($uint<32>) qrsValx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) qrsValx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_247 )
            ;;[type_cast_4654] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) qrsValx_x1 )
            ;;[type_cast_4656] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) qrsValx_x1 )
            ;;[type_cast_4658] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4651_req] 
        }
        ;;[phi_stmt_4659] 
        {
          ||[phi_stmt_4659_sources] 
          {
            // sources for 			$phi nmeanx_x0 := 			  ($cast ($uint<32>) nmeanx_x2 ) $on bb_28_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_14_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) nmeanx_x2 )
            ;;[type_cast_4662] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4659_req] 
        }
        ;;[phi_stmt_4669] 
        {
          ||[phi_stmt_4669_sources] 
          {
            // sources for 			$phi qmeanx_x0 := 			  ($cast ($uint<32>) qmeanx_x223 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_107 ) $on bb_14_bb_29			  ($cast ($uint<32>) qmeanx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) qmeanx_x223 )
            ;;[type_cast_4672] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_107 )
            ;;[type_cast_4674] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) qmeanx_x1 )
            ;;[type_cast_4676] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4669_req] 
        }
        ;;[phi_stmt_4677] 
        {
          ||[phi_stmt_4677_sources] 
          {
            // sources for 			$phi sbLocx_x0 := 			  ($cast ($uint<32>) iNsTr_220 ) $on bb_28_bb_29			  ($cast ($uint<32>) sbLocx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) sbLocx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_220 )
            ;;[type_cast_4680] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) sbLocx_x1 )
            ;;[type_cast_4682] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) sbLocx_x1 )
            ;;[type_cast_4684] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4677_req] 
        }
        ;;[phi_stmt_4685] 
        {
          ||[phi_stmt_4685_sources] 
          {
            // sources for 			$phi sb_countx_x0 := 			  ($cast ($uint<32>) iNsTr_280 ) $on bb_28_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000101001010  ) ) $on bb_14_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000101001010  ) ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_280 )
            ;;[type_cast_4688] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4685_req] 
        }
        ;;[phi_stmt_4695] 
        {
          ||[phi_stmt_4695_sources] 
          {
            // sources for 			$phi det_threshx_x0 := 			  ($cast ($uint<32>) det_threshx_x325 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_111 ) $on bb_14_bb_29			  ($cast ($uint<32>) det_threshx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) det_threshx_x325 )
            ;;[type_cast_4698] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_111 )
            ;;[type_cast_4700] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) det_threshx_x1 )
            ;;[type_cast_4702] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4695_req] 
        }
        ;;[phi_stmt_4703] 
        {
          ||[phi_stmt_4703_sources] 
          {
            // sources for 			$phi initMaxx_x0 := 			  ($cast ($uint<32>) iNsTr_292 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_103 ) $on bb_14_bb_29			  ($cast ($uint<32>) iNsTr_103 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_292 )
            ;;[type_cast_4706] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_103 )
            ;;[type_cast_4708] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_103 )
            ;;[type_cast_4710] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4703_req] 
        }
        ;;[phi_stmt_4711] 
        {
          ||[phi_stmt_4711_sources] 
          {
            // sources for 			$phi rset_countx_x0 := 			  ($cast ($uint<32>) iNsTr_293 ) $on bb_28_bb_29			  ($cast ($uint<32>) rset_countx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) rset_countx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_293 )
            ;;[type_cast_4714] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) rset_countx_x1 )
            ;;[type_cast_4716] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) rset_countx_x1 )
            ;;[type_cast_4718] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4711_req] 
        }
        ;;[phi_stmt_4719] 
        {
          ||[phi_stmt_4719_sources] 
          {
            // sources for 			$phi initBlankx_x0 := 			  ($cast ($uint<32>) iNsTr_291 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_93 ) $on bb_14_bb_29			  ($cast ($uint<32>) iNsTr_93 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_291 )
            ;;[type_cast_4722] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_93 )
            ;;[type_cast_4724] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_93 )
            ;;[type_cast_4726] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4719_req] 
        }
        ;;[phi_stmt_4727] 
        {
          ||[phi_stmt_4727_sources] 
          {
            // sources for 			$phi countx_x1 := 			  ($cast ($uint<32>) xx_x7 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_92 ) $on bb_14_bb_29			  ($cast ($uint<32>) iNsTr_92 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) xx_x7 )
            ;;[type_cast_4730] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_92 )
            ;;[type_cast_4732] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_92 )
            ;;[type_cast_4734] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4727_req] 
        }
        ;;[phi_stmt_4735] 
        {
          ||[phi_stmt_4735_sources] 
          {
            // sources for 			$phi qpk_countx_x0 := 			  ($cast ($uint<32>) qpk_countx_x1 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_98 ) $on bb_14_bb_29			  ($cast ($uint<32>) iNsTr_98 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) qpk_countx_x1 )
            ;;[type_cast_4738] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_98 )
            ;;[type_cast_4740] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_98 )
            ;;[type_cast_4742] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4735_req] 
        }
        ;;[phi_stmt_4743] 
        {
          ||[phi_stmt_4743_sources] 
          {
            // sources for 			$phi sbPeakx_x0 := 			  ($cast ($uint<32>) iNsTr_288 ) $on bb_28_bb_29			  ($cast ($uint<32>) sbPeakx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) sbPeakx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_288 )
            ;;[type_cast_4746] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) sbPeakx_x1 )
            ;;[type_cast_4748] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) sbPeakx_x1 )
            ;;[type_cast_4750] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4743_req] 
        }
      }
      bb_28_bb_29 |-> (bb_28_bb_29_PhiReq)
      $P [merge_stmt_4616_PhiReqMerge] 
      merge_stmt_4616_PhiReqMerge <-| ( bb_13_bb_29_PhiReq  bb_14_bb_29_PhiReq  bb_28_bb_29_PhiReq )
      ||[merge_stmt_4616_PhiAck] 
      {
        $T [phi_stmt_4617_ack] 
        $T [phi_stmt_4627_ack] 
        $T [phi_stmt_4635_ack] 
        $T [phi_stmt_4643_ack] 
        $T [phi_stmt_4651_ack] 
        $T [phi_stmt_4659_ack] 
        $T [phi_stmt_4669_ack] 
        $T [phi_stmt_4677_ack] 
        $T [phi_stmt_4685_ack] 
        $T [phi_stmt_4695_ack] 
        $T [phi_stmt_4703_ack] 
        $T [phi_stmt_4711_ack] 
        $T [phi_stmt_4719_ack] 
        $T [phi_stmt_4727_ack] 
        $T [phi_stmt_4735_ack] 
        $T [phi_stmt_4743_ack] 
      }
      merge_stmt_4616_PhiReqMerge |-> (merge_stmt_4616_PhiAck)
      merge_stmt_4616__exit__  <-| (merge_stmt_4616_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1583  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1607
      ;;[merge_stmt_4764_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_4764__entry__ |-> (merge_stmt_4764_dead_link)
      merge_stmt_4764__exit__ <-| (merge_stmt_4764_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1607  --------------------------
      ||[bb_29_bb_30_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_29_bb_30 |-> (bb_29_bb_30_PhiReq)
      $P [merge_stmt_4764_PhiReqMerge] 
      merge_stmt_4764_PhiReqMerge <-| ( bb_29_bb_30_PhiReq )
      ||[merge_stmt_4764_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_4764_PhiReqMerge |-> (merge_stmt_4764_PhiAck)
      merge_stmt_4764__exit__  <-| (merge_stmt_4764_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1607  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1627
      ;;[merge_stmt_4850_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_4850__entry__ |-> (merge_stmt_4850_dead_link)
      merge_stmt_4850__exit__ <-| (merge_stmt_4850_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1627  --------------------------
      ||[bb_30_bb_31_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_30_bb_31 |-> (bb_30_bb_31_PhiReq)
      $P [merge_stmt_4850_PhiReqMerge] 
      merge_stmt_4850_PhiReqMerge <-| ( bb_30_bb_31_PhiReq )
      ||[merge_stmt_4850_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_4850_PhiReqMerge |-> (merge_stmt_4850_PhiAck)
      merge_stmt_4850__exit__  <-| (merge_stmt_4850_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1627  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1686
      //---------------------   merge statement  file prog.linked.opt.aa, line 1686  --------------------------
      ||[bb_30_bb_32_PhiReq] 
      {
        ;;[phi_stmt_5152] 
        {
          ||[phi_stmt_5152_sources] 
          {
            // sources for 			$phi det_threshx_x4 := 			  ($cast ($uint<32>) iNsTr_200 ) $on bb_31_bb_32			  ($cast ($uint<32>) det_threshx_x0 ) $on bb_30_bb_32 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_200 )
            ;;[type_cast_5155] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) det_threshx_x0 )
            ;;[type_cast_5157] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_5152_req] 
        }
        ;;[phi_stmt_5146] 
        {
          ||[phi_stmt_5146_sources] 
          {
            // sources for 			$phi qmeanx_x3 := 			  ($cast ($uint<32>) iNsTr_194 ) $on bb_31_bb_32			  ($cast ($uint<32>) qmeanx_x0 ) $on bb_30_bb_32 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_194 )
            ;;[type_cast_5149] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) qmeanx_x0 )
            ;;[type_cast_5151] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_5146_req] 
        }
      }
      bb_30_bb_32 |-> (bb_30_bb_32_PhiReq)
      ||[bb_31_bb_32_PhiReq] 
      {
        ;;[phi_stmt_5152] 
        {
          ||[phi_stmt_5152_sources] 
          {
            // sources for 			$phi det_threshx_x4 := 			  ($cast ($uint<32>) iNsTr_200 ) $on bb_31_bb_32			  ($cast ($uint<32>) det_threshx_x0 ) $on bb_30_bb_32 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_200 )
            ;;[type_cast_5155] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) det_threshx_x0 )
            ;;[type_cast_5157] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_5152_req] 
        }
        ;;[phi_stmt_5146] 
        {
          ||[phi_stmt_5146_sources] 
          {
            // sources for 			$phi qmeanx_x3 := 			  ($cast ($uint<32>) iNsTr_194 ) $on bb_31_bb_32			  ($cast ($uint<32>) qmeanx_x0 ) $on bb_30_bb_32 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_194 )
            ;;[type_cast_5149] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) qmeanx_x0 )
            ;;[type_cast_5151] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_5146_req] 
        }
      }
      bb_31_bb_32 |-> (bb_31_bb_32_PhiReq)
      $P [merge_stmt_5145_PhiReqMerge] 
      merge_stmt_5145_PhiReqMerge <-| ( bb_30_bb_32_PhiReq  bb_31_bb_32_PhiReq )
      ||[merge_stmt_5145_PhiAck] 
      {
        $T [phi_stmt_5146_ack] 
        $T [phi_stmt_5152_ack] 
      }
      merge_stmt_5145_PhiReqMerge |-> (merge_stmt_5145_PhiAck)
      merge_stmt_5145__exit__  <-| (merge_stmt_5145_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1686  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1693
      //---------------------   merge statement  file prog.linked.opt.aa, line 1693  --------------------------
      ||[bb_29_bb_33_PhiReq] 
      {
        ;;[phi_stmt_5198] 
        {
          ||[phi_stmt_5198_sources] 
          {
            // sources for 			$phi initMaxx_x2 := 			  ($cast ($uint<32>) iNsTr_203 ) $on bb_32_bb_33			  ($cast ($uint<32>) initMaxx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_203 )
            ;;[type_cast_5201] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) initMaxx_x0 )
            ;;[type_cast_5203] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_5198_req] 
        }
        ;;[phi_stmt_5186] 
        {
          ||[phi_stmt_5186_sources] 
          {
            // sources for 			$phi sb_countx_x2 := 			  ($cast ($uint<32>) iNsTr_142 ) $on bb_32_bb_33			  ($cast ($uint<32>) sb_countx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_142 )
            ;;[type_cast_5189] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) sb_countx_x0 )
            ;;[type_cast_5191] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_5186_req] 
        }
        ;;[phi_stmt_5210] 
        {
          ||[phi_stmt_5210_sources] 
          {
            // sources for 			$phi initBlankx_x2 := 			  ($cast ($uint<32>) iNsTr_143 ) $on bb_32_bb_33			  ($cast ($uint<32>) initBlankx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_143 )
            ;;[type_cast_5213] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) initBlankx_x0 )
            ;;[type_cast_5215] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_5210_req] 
        }
        ;;[phi_stmt_5180] 
        {
          ||[phi_stmt_5180_sources] 
          {
            // sources for 			$phi qmeanx_x4 := 			  ($cast ($uint<32>) qmeanx_x3 ) $on bb_32_bb_33			  ($cast ($uint<32>) qmeanx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
            // ($cast ($uint<32>) qmeanx_x3 )
            ;;[type_cast_5183] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) qmeanx_x0 )
            ;;[type_cast_5185] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_5180_req] 
        }
        ;;[phi_stmt_5192] 
        {
          ||[phi_stmt_5192_sources] 
          {
            // sources for 			$phi det_threshx_x5 := 			  ($cast ($uint<32>) det_threshx_x4 ) $on bb_32_bb_33			  ($cast ($uint<32>) det_threshx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
            // ($cast ($uint<32>) det_threshx_x4 )
            ;;[type_cast_5195] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) det_threshx_x0 )
            ;;[type_cast_5197] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_5192_req] 
        }
        ;;[phi_stmt_5174] 
        {
          ||[phi_stmt_5174_sources] 
          {
            // sources for 			$phi nmeanx_x3 := 			  ($cast ($uint<32>) iNsTr_141 ) $on bb_32_bb_33			  ($cast ($uint<32>) nmeanx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_141 )
            ;;[type_cast_5177] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) nmeanx_x0 )
            ;;[type_cast_5179] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_5174_req] 
        }
        ;;[phi_stmt_5204] 
        {
          ||[phi_stmt_5204_sources] 
          {
            // sources for 			$phi rset_countx_x2 := 			  ($cast ($uint<32>) iNsTr_144 ) $on bb_32_bb_33			  ($cast ($uint<32>) rset_countx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_144 )
            ;;[type_cast_5207] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) rset_countx_x0 )
            ;;[type_cast_5209] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_5204_req] 
        }
      }
      bb_29_bb_33 |-> (bb_29_bb_33_PhiReq)
      ||[bb_32_bb_33_PhiReq] 
      {
        ;;[phi_stmt_5198] 
        {
          ||[phi_stmt_5198_sources] 
          {
            // sources for 			$phi initMaxx_x2 := 			  ($cast ($uint<32>) iNsTr_203 ) $on bb_32_bb_33			  ($cast ($uint<32>) initMaxx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_203 )
            ;;[type_cast_5201] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) initMaxx_x0 )
            ;;[type_cast_5203] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_5198_req] 
        }
        ;;[phi_stmt_5186] 
        {
          ||[phi_stmt_5186_sources] 
          {
            // sources for 			$phi sb_countx_x2 := 			  ($cast ($uint<32>) iNsTr_142 ) $on bb_32_bb_33			  ($cast ($uint<32>) sb_countx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_142 )
            ;;[type_cast_5189] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) sb_countx_x0 )
            ;;[type_cast_5191] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_5186_req] 
        }
        ;;[phi_stmt_5210] 
        {
          ||[phi_stmt_5210_sources] 
          {
            // sources for 			$phi initBlankx_x2 := 			  ($cast ($uint<32>) iNsTr_143 ) $on bb_32_bb_33			  ($cast ($uint<32>) initBlankx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_143 )
            ;;[type_cast_5213] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) initBlankx_x0 )
            ;;[type_cast_5215] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_5210_req] 
        }
        ;;[phi_stmt_5180] 
        {
          ||[phi_stmt_5180_sources] 
          {
            // sources for 			$phi qmeanx_x4 := 			  ($cast ($uint<32>) qmeanx_x3 ) $on bb_32_bb_33			  ($cast ($uint<32>) qmeanx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
            // ($cast ($uint<32>) qmeanx_x3 )
            ;;[type_cast_5183] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) qmeanx_x0 )
            ;;[type_cast_5185] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_5180_req] 
        }
        ;;[phi_stmt_5192] 
        {
          ||[phi_stmt_5192_sources] 
          {
            // sources for 			$phi det_threshx_x5 := 			  ($cast ($uint<32>) det_threshx_x4 ) $on bb_32_bb_33			  ($cast ($uint<32>) det_threshx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
            // ($cast ($uint<32>) det_threshx_x4 )
            ;;[type_cast_5195] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) det_threshx_x0 )
            ;;[type_cast_5197] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_5192_req] 
        }
        ;;[phi_stmt_5174] 
        {
          ||[phi_stmt_5174_sources] 
          {
            // sources for 			$phi nmeanx_x3 := 			  ($cast ($uint<32>) iNsTr_141 ) $on bb_32_bb_33			  ($cast ($uint<32>) nmeanx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_141 )
            ;;[type_cast_5177] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) nmeanx_x0 )
            ;;[type_cast_5179] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_5174_req] 
        }
        ;;[phi_stmt_5204] 
        {
          ||[phi_stmt_5204_sources] 
          {
            // sources for 			$phi rset_countx_x2 := 			  ($cast ($uint<32>) iNsTr_144 ) $on bb_32_bb_33			  ($cast ($uint<32>) rset_countx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_144 )
            ;;[type_cast_5207] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) rset_countx_x0 )
            ;;[type_cast_5209] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_5204_req] 
        }
      }
      bb_32_bb_33 |-> (bb_32_bb_33_PhiReq)
      $P [merge_stmt_5173_PhiReqMerge] 
      merge_stmt_5173_PhiReqMerge <-| ( bb_29_bb_33_PhiReq  bb_32_bb_33_PhiReq )
      ||[merge_stmt_5173_PhiAck] 
      {
        $T [phi_stmt_5174_ack] 
        $T [phi_stmt_5180_ack] 
        $T [phi_stmt_5186_ack] 
        $T [phi_stmt_5192_ack] 
        $T [phi_stmt_5198_ack] 
        $T [phi_stmt_5204_ack] 
        $T [phi_stmt_5210_ack] 
      }
      merge_stmt_5173_PhiReqMerge |-> (merge_stmt_5173_PhiAck)
      merge_stmt_5173__exit__  <-| (merge_stmt_5173_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1693  --------------------------
      assign_stmt_3040__entry__ <-| (branch_block_stmt_3035__entry__)
      bb_0_bb_1 <-| (assign_stmt_3040__exit__)
      do_while_stmt_3049__entry__ <-| (merge_stmt_3042__exit__)
      bb_1_bbx_xnphx_xix_xpreheader <-| (do_while_stmt_3049__exit__)
      bbx_xnphx_xix_xpreheader_bbx_xnphx_xi <-| (merge_stmt_3093__exit__)
      do_while_stmt_3102__entry__ <-| (merge_stmt_3095__exit__)
      bbx_xnphx_xi_initDetx_xexit <-| (do_while_stmt_3102__exit__)
      assign_stmt_3140_to_assign_stmt_3172__entry__ <-| (merge_stmt_3136__exit__)
      call_stmt_3175__entry__ <-| (assign_stmt_3140_to_assign_stmt_3172__exit__)
      initDetx_xexit_bb_5 <-| (call_stmt_3175__exit__)
      assign_stmt_3307__entry__ <-| (merge_stmt_3177__exit__)
      assign_stmt_3310__entry__ <-| (assign_stmt_3307__exit__)
      call_stmt_3313__entry__ <-| (assign_stmt_3310__exit__)
      assign_stmt_3316_to_assign_stmt_3319__entry__ <-| (call_stmt_3313__exit__)
      assign_stmt_3322__entry__ <-| (assign_stmt_3316_to_assign_stmt_3319__exit__)
      assign_stmt_3330_to_assign_stmt_3406__entry__ <-| (assign_stmt_3322__exit__)
      if_stmt_3407__entry__ <-| (assign_stmt_3330_to_assign_stmt_3406__exit__)
      merge_stmt_3413__entry__ <-| (if_stmt_3407__exit__)
      assign_stmt_3421_to_assign_stmt_3428__entry__ <-| (merge_stmt_3413__exit__)
      bb_6_bb_7 <-| (assign_stmt_3421_to_assign_stmt_3428__exit__)
      assign_stmt_3445_to_assign_stmt_3458__entry__ <-| (merge_stmt_3430__exit__)
      if_stmt_3459__entry__ <-| (assign_stmt_3445_to_assign_stmt_3458__exit__)
      merge_stmt_3465__entry__ <-| (if_stmt_3459__exit__)
      assign_stmt_3473_to_assign_stmt_3480__entry__ <-| (merge_stmt_3465__exit__)
      bb_8_peakx_xexit <-| (assign_stmt_3473_to_assign_stmt_3480__exit__)
      assign_stmt_3492_to_assign_stmt_3555__entry__ <-| (merge_stmt_3482__exit__)
      if_stmt_3556__entry__ <-| (assign_stmt_3492_to_assign_stmt_3555__exit__)
      merge_stmt_3562__entry__ <-| (if_stmt_3556__exit__)
      assign_stmt_3568_to_assign_stmt_3575__entry__ <-| (merge_stmt_3562__exit__)
      bb_10_xx_xthread <-| (assign_stmt_3568_to_assign_stmt_3575__exit__)
      assign_stmt_3597_to_assign_stmt_3708__entry__ <-| (merge_stmt_3577__exit__)
      if_stmt_3709__entry__ <-| (assign_stmt_3597_to_assign_stmt_3708__exit__)
      merge_stmt_3715__entry__ <-| (if_stmt_3709__exit__)
      xx_xpreheader_bb_15 <-| (merge_stmt_3715__exit__)
      assign_stmt_3723_to_assign_stmt_3804__entry__ <-| (merge_stmt_3717__exit__)
      if_stmt_3805__entry__ <-| (assign_stmt_3723_to_assign_stmt_3804__exit__)
      merge_stmt_3811__entry__ <-| (if_stmt_3805__exit__)
      assign_stmt_3817__entry__ <-| (merge_stmt_3811__exit__)
      call_stmt_3820__entry__ <-| (assign_stmt_3817__exit__)
      assign_stmt_3825_to_assign_stmt_3838__entry__ <-| (call_stmt_3820__exit__)
      bb_14_bb_29 <-| (assign_stmt_3825_to_assign_stmt_3838__exit__)
      assign_stmt_3887_to_assign_stmt_3960__entry__ <-| (merge_stmt_3840__exit__)
      if_stmt_3961__entry__ <-| (assign_stmt_3887_to_assign_stmt_3960__exit__)
      merge_stmt_3967__entry__ <-| (if_stmt_3961__exit__)
      assign_stmt_3987_to_assign_stmt_4030__entry__ <-| (merge_stmt_3967__exit__)
      if_stmt_4031__entry__ <-| (assign_stmt_3987_to_assign_stmt_4030__exit__)
      merge_stmt_4037__entry__ <-| (if_stmt_4031__exit__)
      assign_stmt_4042_to_assign_stmt_4070__entry__ <-| (merge_stmt_4037__exit__)
      bb_17_blsCheckx_xexit <-| (assign_stmt_4042_to_assign_stmt_4070__exit__)
      assign_stmt_4087_to_assign_stmt_4153__entry__ <-| (merge_stmt_4072__exit__)
      if_stmt_4154__entry__ <-| (assign_stmt_4087_to_assign_stmt_4153__exit__)
      merge_stmt_4160__entry__ <-| (if_stmt_4154__exit__)
      assign_stmt_4163_to_assign_stmt_4200__entry__ <-| (merge_stmt_4160__exit__)
      call_stmt_4203__entry__ <-| (assign_stmt_4163_to_assign_stmt_4200__exit__)
      assign_stmt_4208_to_assign_stmt_4231__entry__ <-| (call_stmt_4203__exit__)
      bb_19_bb_20 <-| (assign_stmt_4208_to_assign_stmt_4231__exit__)
      assign_stmt_4252_to_assign_stmt_4271__entry__ <-| (merge_stmt_4233__exit__)
      if_stmt_4272__entry__ <-| (assign_stmt_4252_to_assign_stmt_4271__exit__)
      merge_stmt_4278__entry__ <-| (if_stmt_4272__exit__)
      assign_stmt_4287_to_assign_stmt_4310__entry__ <-| (merge_stmt_4278__exit__)
      bb_21_bb_22 <-| (assign_stmt_4287_to_assign_stmt_4310__exit__)
      assign_stmt_4325_to_assign_stmt_4356__entry__ <-| (merge_stmt_4312__exit__)
      if_stmt_4357__entry__ <-| (assign_stmt_4325_to_assign_stmt_4356__exit__)
      merge_stmt_4363__entry__ <-| (if_stmt_4357__exit__)
      assign_stmt_4366__entry__ <-| (merge_stmt_4363__exit__)
      xx_xthread27_bb_25 <-| (assign_stmt_4366__exit__)
      assign_stmt_4371_to_assign_stmt_4442__entry__ <-| (merge_stmt_4368__exit__)
      call_stmt_4445__entry__ <-| (assign_stmt_4371_to_assign_stmt_4442__exit__)
      assign_stmt_4451__entry__ <-| (call_stmt_4445__exit__)
      call_stmt_4454__entry__ <-| (assign_stmt_4451__exit__)
      assign_stmt_4459_to_assign_stmt_4505__entry__ <-| (call_stmt_4454__exit__)
      bb_24_bb_25 <-| (assign_stmt_4459_to_assign_stmt_4505__exit__)
      assign_stmt_4539_to_assign_stmt_4544__entry__ <-| (merge_stmt_4507__exit__)
      if_stmt_4545__entry__ <-| (assign_stmt_4539_to_assign_stmt_4544__exit__)
      merge_stmt_4551__entry__ <-| (if_stmt_4545__exit__)
      assign_stmt_4557__entry__ <-| (merge_stmt_4551__exit__)
      bb_26_bb_28 <-| (assign_stmt_4557__exit__)
      assign_stmt_4567__entry__ <-| (merge_stmt_4559__exit__)
      bb_27_bb_28 <-| (assign_stmt_4567__exit__)
      assign_stmt_4583_to_assign_stmt_4614__entry__ <-| (merge_stmt_4569__exit__)
      bb_28_bb_29 <-| (assign_stmt_4583_to_assign_stmt_4614__exit__)
      assign_stmt_4757__entry__ <-| (merge_stmt_4616__exit__)
      if_stmt_4758__entry__ <-| (assign_stmt_4757__exit__)
      merge_stmt_4764__entry__ <-| (if_stmt_4758__exit__)
      assign_stmt_4770_to_assign_stmt_4843__entry__ <-| (merge_stmt_4764__exit__)
      if_stmt_4844__entry__ <-| (assign_stmt_4770_to_assign_stmt_4843__exit__)
      merge_stmt_4850__entry__ <-| (if_stmt_4844__exit__)
      assign_stmt_4857_to_assign_stmt_5112__entry__ <-| (merge_stmt_4850__exit__)
      call_stmt_5115__entry__ <-| (assign_stmt_4857_to_assign_stmt_5112__exit__)
      assign_stmt_5120_to_assign_stmt_5143__entry__ <-| (call_stmt_5115__exit__)
      bb_31_bb_32 <-| (assign_stmt_5120_to_assign_stmt_5143__exit__)
      assign_stmt_5165_to_assign_stmt_5171__entry__ <-| (merge_stmt_5145__exit__)
      bb_32_bb_33 <-| (assign_stmt_5165_to_assign_stmt_5171__exit__)
      assign_stmt_5219__entry__ <-| (merge_stmt_5173__exit__)
      bb_33_bb_5 <-| (assign_stmt_5219__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1191
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1195
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1206
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1209
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1213
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1222
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1235
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1280
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1285
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1296
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1301
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1321
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1326
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1358
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1361
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1383
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1392
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1418
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1436
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1444
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1464
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1482
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1495
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1503
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1517
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1521
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1552
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1565
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1569
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1573
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1583
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1607
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1627
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1686
    // constant-object-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1693
    // constant-object-declarations for block %qrsDet%body
    //  file prog.linked.opt.aa, line 1185
    // load store constants for object %qrsDet%body:RSETbuff_alloc
    $constant $W[xxqrsDetxxbodyxxRSETbuff_alloc_base_address] : $int<4> := _b0000
    // constant-object-declarations for block %qrsDet
    //  file prog.linked.opt.aa, line 1180
    // constant-declarations for block %qrsDet%body
    //  file prog.linked.opt.aa, line 1185
    // 		RSETbuff := @(RSETbuff_alloc)
    //  file prog.linked.opt.aa, line 1189
    $constant $W[RSETbuff_3040] : $int<32> := _b00000000000000000000000000000000 // 0
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1191
    // constant-declarations for phi:  			$phi indexx_x02x_xi_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_0_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1192
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3047_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // do-while statement  
    //  file prog.linked.opt.aa, line 1194
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1195
    // constant-declarations for phi:  			$phi indexx_x02x_xi := 			  ($cast ($uint<32>) iNsTr_4 ) $on $loopback			  indexx_x02x_xi_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1196
    // @(NOISEbuff[indexx_x02x_xi])
    $constant $W[array_obj_ref_3059_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_3059_offset_scale_factor_0] : $int<5> := _b00001// 1
    // @(RRbuff[indexx_x02x_xi])
    $constant $W[array_obj_ref_3064_resized_base_address] : $int<5> := _b10000// 16
    $constant $W[array_obj_ref_3064_offset_scale_factor_0] : $int<5> := _b00001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_3070_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ->(scevgep5x_xi)
    $constant $W[ptr_deref_3068_word_offset_0] : $int<5> := _b00000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000011001000  )
    $constant $W[type_cast_3075_wire_constant] : $int<32> := _b00000000000000000000000011001000// 200
    // ->(scevgep6x_xi)
    $constant $W[ptr_deref_3073_word_offset_0] : $int<5> := _b00000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_3080_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000001000  )
    $constant $W[type_cast_3086_wire_constant] : $int<32> := _b00000000000000000000000000001000// 8
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1206
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1209
    // constant-declarations for phi:  			$phi indexx_x11x_xi_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1210
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3100_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // do-while statement  
    //  file prog.linked.opt.aa, line 1212
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1213
    // constant-declarations for phi:  			$phi indexx_x11x_xi := 			  ($cast ($uint<32>) iNsTr_9 ) $on $loopback			  indexx_x11x_xi_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1214
    // @(DDCALCbuff[indexx_x11x_xi])
    $constant $W[array_obj_ref_3112_resized_base_address] : $int<2> := _b00// 0
    $constant $W[array_obj_ref_3112_offset_scale_factor_0] : $int<2> := _b01// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_3118_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ->(scevgepx_xi)
    $constant $W[ptr_deref_3116_word_offset_0] : $int<2> := _b00// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_3123_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000010  )
    $constant $W[type_cast_3129_wire_constant] : $int<32> := _b00000000000000000000000000000010// 2
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1222
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_3139_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // maxDer
    $constant $W[STORE_maxDer_3137_word_address_0] : $pointer<memory_space_21> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_3143_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // DDCALCbuff_ptr
    $constant $W[STORE_DDCALCbuff_ptr_3141_word_address_0] : $pointer<memory_space_1> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_3147_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // DDbuff_ptr
    $constant $W[STORE_DDbuff_ptr_3145_word_address_0] : $pointer<memory_space_3> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_3151_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // NOISEbuff_ptr
    $constant $W[STORE_NOISEbuff_ptr_3149_word_address_0] : $pointer<memory_space_14> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_3155_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // RRbuff_ptr
    $constant $W[STORE_RRbuff_ptr_3153_word_address_0] : $pointer<memory_space_16> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_3159_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // QRSbuff_ptr
    $constant $W[STORE_QRSbuff_ptr_3157_word_address_0] : $pointer<memory_space_15> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_3163_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // timeSinceMaxPeak
    $constant $W[STORE_timeSinceMaxPeak_3161_word_address_0] : $pointer<memory_space_25> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_3167_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // maxPeak
    $constant $W[STORE_maxPeak_3165_word_address_0] : $pointer<memory_space_22> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_3171_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // lastDatum
    $constant $W[STORE_lastDatum_3169_word_address_0] : $pointer<memory_space_20> := _b0
    // 		$call QRSFilt (($bitcast ($uint<8>) _b00000001  ) ) () 
    //  file prog.linked.opt.aa, line 1233
    // ($bitcast ($uint<8>) _b00000001  )
    $constant $W[type_cast_3174_wire_constant] : $int<8> := _b00000001// 1
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1235
    // constant-declarations for phi:  			$phi init8Donex_x0 := 			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<8>) init8Done_nextx_x0 ) $on bb_33_bb_5 // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 1236
    // ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000000  ) )
    $constant $W[type_cast_3182_wire_constant] : $int<8> := _b00000000// 0
    // constant-declarations for phi:  			$phi init8Done_nextx_x1 := 			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<8>) init8Done_nextx_x0 ) $on bb_33_bb_5 // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 1237
    // ($cast ($uint<8>) ($bitcast ($uint<8>) _b0  ) )
    $constant $W[type_cast_3189_wire_constant] : $int<8> := _b00000000// 0
    // constant-declarations for phi:  			$phi noiseValx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) noiseValx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1238
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) )
    $constant $W[type_cast_3196_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi rrValx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) rrValx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1239
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) )
    $constant $W[type_cast_3203_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi qrsValx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) qrsValx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1240
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) )
    $constant $W[type_cast_3210_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi nmeanx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) nmeanx_x3 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1241
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) )
    $constant $W[type_cast_3217_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi qmeanx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) qmeanx_x4 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1242
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) )
    $constant $W[type_cast_3224_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi sbLocx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000100101100  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) sbLocx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1243
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000100101100  ) )
    $constant $W[type_cast_3231_wire_constant] : $int<32> := _b00000000000000000000000100101100// 300
    // constant-declarations for phi:  			$phi sb_countx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000100101100  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) sb_countx_x2 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1244
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000100101100  ) )
    $constant $W[type_cast_3238_wire_constant] : $int<32> := _b00000000000000000000000100101100// 300
    // constant-declarations for phi:  			$phi det_threshx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) det_threshx_x5 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1245
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3245_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi initMaxx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) initMaxx_x2 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1246
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3252_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi rset_countx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) rset_countx_x2 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1247
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3259_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi preBlank_countx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) iNsTr_66 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1248
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3266_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi initBlankx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) initBlankx_x2 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1249
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3273_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi countx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) countx_x1 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1250
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3280_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi qpk_countx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) qpk_countx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1251
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3287_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi sbPeakx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) sbPeakx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1252
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3294_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi tempPeakx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) iNsTr_65 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1253
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3301_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // 		$call QRSFilt (($bitcast ($uint<8>) _b00000000  ) ) () 
    //  file prog.linked.opt.aa, line 1257
    // ($bitcast ($uint<8>) _b00000000  )
    $constant $W[type_cast_3312_wire_constant] : $int<8> := _b00000000// 0
    // timeSinceMaxPeak
    $constant $W[LOAD_timeSinceMaxPeak_3315_word_address_0] : $pointer<memory_space_25> := _b0
    // maxPeak
    $constant $W[LOAD_maxPeak_3318_word_address_0] : $pointer<memory_space_22> := _b0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3328_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // lastDatum
    $constant $W[LOAD_lastDatum_3341_word_address_0] : $pointer<memory_space_20> := _b0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_3367_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010011  ) )
    $constant $W[type_cast_3383_wire_constant] : $int<32> := _b00000000000000000000000000010011// 19
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_3399_wire_constant] : $int<1> := _b1// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 1275
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1280
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000110  ) )
    $constant $W[type_cast_3419_wire_constant] : $int<32> := _b00000000000000000000000000000110// 6
    // ( $mux iNsTr_44 iNsTr_28  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_3426_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1285
    // constant-declarations for phi:  			$phi iNsTr_46 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_5_bb_7			  ($cast ($uint<32>) phitmpx_xi ) $on bb_6_bb_7 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1286
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3435_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ( $mux iNsTr_42 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_28 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_3442_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ( $mux iNsTr_42 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_33 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_3449_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ( $mux iNsTr_37 iNsTr_30  iNsTr_47 ) 
    // if-statement  
    //  file prog.linked.opt.aa, line 1291
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1296
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )
    $constant $W[type_cast_3471_wire_constant] : $int<32> := _b00000000000000000000000000000010// 2
    // ( $mux iNsTr_51 ($bitcast ($uint<32>) _b00000000000000000000000000000001  )  iNsTr_48 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_3477_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1301
    // constant-declarations for phi:  			$phi iNsTr_53 := 			  ($cast ($uint<32>) iNsTr_48 ) $on bb_7_peakx_xexit			  ($cast ($uint<32>) phitmp1x_xi ) $on bb_8_peakx_xexit // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1302
    // timeSinceMaxPeak
    $constant $W[STORE_timeSinceMaxPeak_3490_word_address_0] : $pointer<memory_space_25> := _b0
    // maxPeak
    $constant $W[STORE_maxPeak_3493_word_address_0] : $pointer<memory_space_22> := _b0
    // lastDatum
    $constant $W[STORE_lastDatum_3496_word_address_0] : $pointer<memory_space_20> := _b0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3504_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3512_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b11111111111111111111111111111111  )
    $constant $W[type_cast_3525_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_3531_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_3537_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_3548_wire_constant] : $int<1> := _b1// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 1316
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1321
    // ( $mux iNsTr_59 iNsTr_46  tempPeakx_x0 ) 
    // ( $mux iNsTr_59 ($bitcast ($uint<32>) _b00000000000000000000000000100111  )  iNsTr_60 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000100111  )
    $constant $W[type_cast_3572_wire_constant] : $int<32> := _b00000000000000000000000000100111// 39
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1326
    // constant-declarations for phi:  			$phi iNsTr_65 := 			  ($cast ($uint<32>) phitmp18 ) $on bb_10_xx_xthread			  ($cast ($uint<32>) iNsTr_46 ) $on peakx_xexit_xx_xthread // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1327
    // constant-declarations for phi:  			$phi iNsTr_66 := 			  ($cast ($uint<32>) phitmp1 ) $on bb_10_xx_xthread			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000100111  ) ) $on peakx_xexit_xx_xthread // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1328
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000100111  ) )
    $constant $W[type_cast_3590_wire_constant] : $int<32> := _b00000000000000000000000000100111// 39
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_3595_wire_constant] : $int<1> := _b1// 1
    // ( $mux iNsTr_67 iNsTr_65  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_3617_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // DDCALCbuff_ptr
    $constant $W[LOAD_DDCALCbuff_ptr_3621_word_address_0] : $pointer<memory_space_1> := _b0
    // @(DDCALCbuff[iNsTr_69])
    $constant $W[array_obj_ref_3625_resized_base_address] : $int<2> := _b00// 0
    $constant $W[array_obj_ref_3625_offset_scale_factor_0] : $int<2> := _b01// 1
    // ->(iNsTr_70)
    $constant $W[ptr_deref_3630_word_offset_0] : $int<2> := _b00// 0
    // ->(iNsTr_70)
    $constant $W[ptr_deref_3638_word_offset_0] : $int<2> := _b00// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_3644_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000010  )
    $constant $W[type_cast_3650_wire_constant] : $int<32> := _b00000000000000000000000000000010// 2
    // ( $mux iNsTr_75 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_74 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_3656_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // DDCALCbuff_ptr
    $constant $W[STORE_DDCALCbuff_ptr_3660_word_address_0] : $pointer<memory_space_1> := _b0
    // DDbuff_ptr
    $constant $W[LOAD_DDbuff_ptr_3664_word_address_0] : $pointer<memory_space_3> := _b0
    // @(DDbuff[iNsTr_78])
    $constant $W[array_obj_ref_3668_resized_base_address] : $int<7> := _b0000000// 0
    $constant $W[array_obj_ref_3668_offset_scale_factor_0] : $int<7> := _b0000001// 1
    // ->(iNsTr_79)
    $constant $W[ptr_deref_3672_word_offset_0] : $int<7> := _b0000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_3678_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000001011100  )
    $constant $W[type_cast_3684_wire_constant] : $int<32> := _b00000000000000000000000001011100// 92
    // ( $mux iNsTr_82 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_81 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_3690_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // DDbuff_ptr
    $constant $W[STORE_DDbuff_ptr_3694_word_address_0] : $pointer<memory_space_3> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_3700_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<8>) _b00000000  )
    $constant $W[type_cast_3706_wire_constant] : $int<8> := _b00000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 1353
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1358
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1361
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_3721_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000011001000  )
    $constant $W[type_cast_3727_wire_constant] : $int<32> := _b00000000000000000000000011001000// 200
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3735_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ( $mux iNsTr_91 ($bitcast ($uint<32>) _b00000000000000000000000000010000  )  iNsTr_85 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000010000  )
    $constant $W[type_cast_3741_wire_constant] : $int<32> := _b00000000000000000000000000010000// 16
    // ( $mux iNsTr_90 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_89 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_3748_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // @(QRSbuff[qpk_countx_x1])
    $constant $W[array_obj_ref_3754_resized_base_address] : $int<5> := _b01000// 8
    $constant $W[array_obj_ref_3754_offset_scale_factor_0] : $int<5> := _b00001// 1
    // ->(iNsTr_94)
    $constant $W[ptr_deref_3758_word_offset_0] : $int<5> := _b00000// 0
    // ( $mux iNsTr_90 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initMaxx_x1 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_3764_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000001000  )
    $constant $W[type_cast_3780_wire_constant] : $int<32> := _b00000000000000000000000000001000// 8
    // ( $mux iNsTr_102 iNsTr_68  iNsTr_96 ) 
    // if-statement  
    //  file prog.linked.opt.aa, line 1378
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1383
    // 		iNsTr_106 := @(QRSbuff[($bitcast ($uint<32>) _b00000000000000000000000000000000  )])
    //  file prog.linked.opt.aa, line 1385
    $constant $W[iNsTr_106_3817] : $int<32> := _b00000000000000000000000000001000 // 8
    // 		$call meanCalc (iNsTr_106 ) (iNsTr_107 ) 
    //  file prog.linked.opt.aa, line 1386
    // threshold
    $constant $W[LOAD_threshold_3827_word_address_0] : $pointer<memory_space_24> := _b0
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1392
    // constant-declarations for phi:  			$phi maxx_x07x_xi := 			  ($cast ($uint<32>) iNsTr_121 ) $on bb_15_bb_15			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1393
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3847_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi minx_x06x_xi := 			  ($cast ($uint<32>) iNsTr_123 ) $on bb_15_bb_15			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1394
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3854_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi maxtx_x05x_xi := 			  ($cast ($uint<32>) iNsTr_120 ) $on bb_15_bb_15			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1395
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) )
    $constant $W[type_cast_3861_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi mintx_x04x_xi := 			  ($cast ($uint<32>) iNsTr_122 ) $on bb_15_bb_15			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1396
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) )
    $constant $W[type_cast_3868_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi iNsTr_115 := 			  ($cast ($uint<32>) iNsTr_125 ) $on bb_15_bb_15			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1397
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3875_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi ptrx_x02x_xi := 			  ($cast ($uint<32>) iNsTr_127 ) $on bb_15_bb_15			  ($cast ($uint<32>) iNsTr_83 ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1398
    // @(DDbuff[ptrx_x02x_xi])
    $constant $W[array_obj_ref_3885_resized_base_address] : $int<7> := _b0000000// 0
    $constant $W[array_obj_ref_3885_offset_scale_factor_0] : $int<7> := _b0000001// 1
    // ->(iNsTr_116)
    $constant $W[ptr_deref_3890_word_offset_0] : $int<7> := _b0000000// 0
    // ( $mux iNsTr_118 iNsTr_115  maxtx_x05x_xi ) 
    // ( $mux iNsTr_118 iNsTr_117  maxx_x07x_xi ) 
    // ( $mux iNsTr_119 iNsTr_115  mintx_x04x_xi ) 
    // ( $mux iNsTr_119 iNsTr_117  minx_x06x_xi ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_3933_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_3939_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000001011100  )
    $constant $W[type_cast_3945_wire_constant] : $int<32> := _b00000000000000000000000001011100// 92
    // ( $mux iNsTr_126 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_124 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_3951_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000101100  )
    $constant $W[type_cast_3958_wire_constant] : $int<32> := _b00000000000000000000000000101100// 44
    // if-statement  
    //  file prog.linked.opt.aa, line 1413
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1418
    // constant-declarations for phi:  			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_123 ) $on bb_15_xx_x_crit_edgex_xi // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1419
    // constant-declarations for phi:  			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_122 ) $on bb_15_xx_x_crit_edgex_xi // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1420
    // constant-declarations for phi:  			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_121 ) $on bb_15_xx_x_crit_edgex_xi // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1421
    // constant-declarations for phi:  			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_120 ) $on bb_15_xx_x_crit_edgex_xi // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1422
    // maxDer
    $constant $W[STORE_maxDer_3985_word_address_0] : $pointer<memory_space_21> := _b0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_3990_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )
    $constant $W[type_cast_3999_wire_constant] : $int<32> := _b00000000000000000000000000000011// 3
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )
    $constant $W[type_cast_4015_wire_constant] : $int<32> := _b00000000000000000000000000000011// 3
    // if-statement  
    //  file prog.linked.opt.aa, line 1431
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1436
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) )
    $constant $W[type_cast_4048_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_4053_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ( $mux isposx_xi iNsTr_205  negx_xi ) 
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000011101  ) )
    $constant $W[type_cast_4068_wire_constant] : $int<32> := _b00000000000000000000000000011101// 29
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1444
    // constant-declarations for phi:  			$phi iNsTr_208 := 			  ($cast ($uint<1>) ($bitcast ($uint<1>) _b1  ) ) $on xx_x_crit_edgex_xi_blsCheckx_xexit			  ($cast ($uint<1>) phitmpx_xi12 ) $on bb_17_blsCheckx_xexit // type of target is $uint<1>
    //  file prog.linked.opt.aa, line 1445
    // ($cast ($uint<1>) ($bitcast ($uint<1>) _b1  ) )
    $constant $W[type_cast_4077_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_4091_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_4104_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_4120_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000001010111  ) )
    $constant $W[type_cast_4140_wire_constant] : $int<32> := _b00000000000000000000000001010111// 87
    // ( $mux xx_xdemorgan noiseValx_x1  iNsTr_68 ) 
    // if-statement  
    //  file prog.linked.opt.aa, line 1459
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1464
    // NOISEbuff_ptr
    $constant $W[LOAD_NOISEbuff_ptr_4162_word_address_0] : $pointer<memory_space_14> := _b0
    // @(NOISEbuff[iNsTr_223])
    $constant $W[array_obj_ref_4166_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_4166_offset_scale_factor_0] : $int<5> := _b00001// 1
    // ->(iNsTr_224)
    $constant $W[ptr_deref_4170_word_offset_0] : $int<5> := _b00000// 0
    // ($bitcast ($uint<32>) _b11111111111111111111111111111111  )
    $constant $W[type_cast_4176_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_4182_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ( $mux iNsTr_227 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_226 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_4188_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // NOISEbuff_ptr
    $constant $W[STORE_NOISEbuff_ptr_4192_word_address_0] : $pointer<memory_space_14> := _b0
    // 		iNsTr_229 := @(NOISEbuff[($bitcast ($uint<32>) _b00000000000000000000000000000000  )])
    //  file prog.linked.opt.aa, line 1473
    $constant $W[iNsTr_229_4200] : $int<32> := _b00000000000000000000000000000000 // 0
    // 		$call meanCalc (iNsTr_229 ) (iNsTr_230 ) 
    //  file prog.linked.opt.aa, line 1474
    // threshold
    $constant $W[LOAD_threshold_4215_word_address_0] : $pointer<memory_space_24> := _b0
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1482
    // constant-declarations for phi:  			$phi nmeanx_x2 := 			  ($cast ($uint<32>) iNsTr_230 ) $on bb_19_bb_20			  ($cast ($uint<32>) nmeanx_x1 ) $on blsCheckx_xexit_bb_20 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1483
    // constant-declarations for phi:  			$phi det_threshx_x2 := 			  ($cast ($uint<32>) iNsTr_236 ) $on bb_19_bb_20			  ($cast ($uint<32>) det_threshx_x1 ) $on blsCheckx_xexit_bb_20 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1484
    // ( $mux iNsTr_215 iNsTr_68  sbPeakx_x1 ) 
    // ($bitcast ($uint<32>) _b11111111111111111111111111110001  )
    $constant $W[type_cast_4256_wire_constant] : $int<32> := _b11111111111111111111111111110001// -15
    // ( $mux iNsTr_215 iNsTr_219  sbLocx_x1 ) 
    // if-statement  
    //  file prog.linked.opt.aa, line 1490
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1495
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_4284_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_4291_wire_constant] : $int<1> := _b1// 1
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1503
    // constant-declarations for phi:  			$phi iNsTr_242 := 			  ($cast ($uint<1>) ($bitcast ($uint<1>) _b0  ) ) $on bb_20_bb_22			  ($cast ($uint<1>) xx_x ) $on bb_21_bb_22 // type of target is $uint<1>
    //  file prog.linked.opt.aa, line 1504
    // ($cast ($uint<1>) ($bitcast ($uint<1>) _b0  ) )
    $constant $W[type_cast_4317_wire_constant] : $int<1> := _b0// 0
    // ( $mux iNsTr_211 iNsTr_68  qrsValx_x1 ) 
    // ( $mux iNsTr_211 iNsTr_219  rrValx_x1 ) 
    // ( $mux iNsTr_211 ($bitcast ($uint<32>) _b00000000000000000000000000010000  )  iNsTr_85 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000010000  )
    $constant $W[type_cast_4341_wire_constant] : $int<32> := _b00000000000000000000000000010000// 16
    // ( $mux iNsTr_242 iNsTr_218  iNsTr_244 ) 
    // ( $mux iNsTr_242 iNsTr_220  iNsTr_245 ) 
    // if-statement  
    //  file prog.linked.opt.aa, line 1512
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1517
    // maxDer
    $constant $W[LOAD_maxDer_4365_word_address_0] : $pointer<memory_space_21> := _b0
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1521
    // QRSbuff_ptr
    $constant $W[LOAD_QRSbuff_ptr_4370_word_address_0] : $pointer<memory_space_15> := _b0
    // RRbuff_ptr
    $constant $W[LOAD_RRbuff_ptr_4373_word_address_0] : $pointer<memory_space_16> := _b0
    // @(QRSbuff[iNsTr_250])
    $constant $W[array_obj_ref_4377_resized_base_address] : $int<5> := _b01000// 8
    $constant $W[array_obj_ref_4377_offset_scale_factor_0] : $int<5> := _b00001// 1
    // ->(iNsTr_252)
    $constant $W[ptr_deref_4381_word_offset_0] : $int<5> := _b00000// 0
    // @(RRbuff[iNsTr_251])
    $constant $W[array_obj_ref_4386_resized_base_address] : $int<5> := _b10000// 16
    $constant $W[array_obj_ref_4386_offset_scale_factor_0] : $int<5> := _b00001// 1
    // ->(iNsTr_254)
    $constant $W[ptr_deref_4390_word_offset_0] : $int<5> := _b00000// 0
    // ($bitcast ($uint<32>) _b11111111111111111111111111111111  )
    $constant $W[type_cast_4396_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_4402_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ( $mux iNsTr_257 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_256 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_4408_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // QRSbuff_ptr
    $constant $W[STORE_QRSbuff_ptr_4412_word_address_0] : $pointer<memory_space_15> := _b0
    // ($bitcast ($uint<32>) _b11111111111111111111111111111111  )
    $constant $W[type_cast_4418_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_4424_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ( $mux iNsTr_260 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_259 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_4430_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // RRbuff_ptr
    $constant $W[STORE_RRbuff_ptr_4434_word_address_0] : $pointer<memory_space_16> := _b0
    // 		iNsTr_262 := @(QRSbuff[($bitcast ($uint<32>) _b00000000000000000000000000000000  )])
    //  file prog.linked.opt.aa, line 1537
    $constant $W[iNsTr_262_4442] : $int<32> := _b00000000000000000000000000001000 // 8
    // 		$call meanCalc (iNsTr_262 ) (iNsTr_263 ) 
    //  file prog.linked.opt.aa, line 1538
    // 		iNsTr_264 := @(RRbuff[($bitcast ($uint<32>) _b00000000000000000000000000000000  )])
    //  file prog.linked.opt.aa, line 1539
    $constant $W[iNsTr_264_4451] : $int<32> := _b00000000000000000000000000010000 // 16
    // 		$call meanCalc (iNsTr_264 ) (iNsTr_265 ) 
    //  file prog.linked.opt.aa, line 1540
    // threshold
    $constant $W[LOAD_threshold_4466_word_address_0] : $pointer<memory_space_24> := _b0
    // maxDer
    $constant $W[LOAD_maxDer_4484_word_address_0] : $pointer<memory_space_21> := _b0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_4491_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000010000  )
    $constant $W[type_cast_4498_wire_constant] : $int<32> := _b00000000000000000000000000010000// 16
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1552
    // constant-declarations for phi:  			$phi iNsTr_279 := 			  ($cast ($uint<32>) iNsTr_272 ) $on bb_24_bb_25			  ($cast ($uint<32>) iNsTr_277 ) $on xx_xthread27_bb_25 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1553
    // constant-declarations for phi:  			$phi det_threshx_x325 := 			  ($cast ($uint<32>) iNsTr_271 ) $on bb_24_bb_25			  ($cast ($uint<32>) det_threshx_x2 ) $on xx_xthread27_bb_25 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1554
    // constant-declarations for phi:  			$phi qmeanx_x223 := 			  ($cast ($uint<32>) iNsTr_263 ) $on bb_24_bb_25			  ($cast ($uint<32>) qmeanx_x1 ) $on xx_xthread27_bb_25 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1555
    // constant-declarations for phi:  			$phi iNsTr_280 := 			  ($cast ($uint<32>) iNsTr_275 ) $on bb_24_bb_25			  ($cast ($uint<32>) sb_countx_x1 ) $on xx_xthread27_bb_25 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1556
    // ( $mux iNsTr_242 iNsTr_220  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_4537_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 1560
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1565
    // ($bitcast ($uint<32>) _b00000000000000000000000000111000  )
    $constant $W[type_cast_4555_wire_constant] : $int<32> := _b00000000000000000000000000111000// 56
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1569
    // ( $mux iNsTr_211 ($bitcast ($uint<32>) _b00000000000000000000000001001000  )  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000001001000  )
    $constant $W[type_cast_4563_wire_constant] : $int<32> := _b00000000000000000000000001001000// 72
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_4565_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1573
    // constant-declarations for phi:  			$phi iNsTr_287 := 			  ($cast ($uint<32>) iNsTr_283 ) $on bb_26_bb_28			  ($cast ($uint<32>) iNsTr_285 ) $on bb_27_bb_28 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1574
    // ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_218 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_4580_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_279 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_4587_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // maxDer
    $constant $W[STORE_maxDer_4591_word_address_0] : $pointer<memory_space_21> := _b0
    // ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initBlankx_x1 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_4597_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initMaxx_x1 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_4604_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  rset_countx_x1 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_4611_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1583
    // constant-declarations for phi:  			$phi QRSdelayx_x0 := 			  ($cast ($uint<32>) iNsTr_287 ) $on bb_28_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_14_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1584
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_4623_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_4626_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi init8Done_nextx_x0 := 			  ($cast ($uint<8>) init8Done_nextx_x1 ) $on bb_28_bb_29			  ($cast ($uint<8>) iNsTr_101 ) $on bb_14_bb_29			  ($cast ($uint<8>) iNsTr_101 ) $on bb_13_bb_29 // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 1585
    // constant-declarations for phi:  			$phi noiseValx_x0 := 			  ($cast ($uint<32>) iNsTr_216 ) $on bb_28_bb_29			  ($cast ($uint<32>) noiseValx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) noiseValx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1586
    // constant-declarations for phi:  			$phi rrValx_x0 := 			  ($cast ($uint<32>) iNsTr_248 ) $on bb_28_bb_29			  ($cast ($uint<32>) rrValx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) rrValx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1587
    // constant-declarations for phi:  			$phi qrsValx_x0 := 			  ($cast ($uint<32>) iNsTr_247 ) $on bb_28_bb_29			  ($cast ($uint<32>) qrsValx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) qrsValx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1588
    // constant-declarations for phi:  			$phi nmeanx_x0 := 			  ($cast ($uint<32>) nmeanx_x2 ) $on bb_28_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_14_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1589
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_4665_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_4668_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi qmeanx_x0 := 			  ($cast ($uint<32>) qmeanx_x223 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_107 ) $on bb_14_bb_29			  ($cast ($uint<32>) qmeanx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1590
    // constant-declarations for phi:  			$phi sbLocx_x0 := 			  ($cast ($uint<32>) iNsTr_220 ) $on bb_28_bb_29			  ($cast ($uint<32>) sbLocx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) sbLocx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1591
    // constant-declarations for phi:  			$phi sb_countx_x0 := 			  ($cast ($uint<32>) iNsTr_280 ) $on bb_28_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000101001010  ) ) $on bb_14_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000101001010  ) ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1592
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000101001010  ) )
    $constant $W[type_cast_4691_wire_constant] : $int<32> := _b00000000000000000000000101001010// 330
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000101001010  ) )
    $constant $W[type_cast_4694_wire_constant] : $int<32> := _b00000000000000000000000101001010// 330
    // constant-declarations for phi:  			$phi det_threshx_x0 := 			  ($cast ($uint<32>) det_threshx_x325 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_111 ) $on bb_14_bb_29			  ($cast ($uint<32>) det_threshx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1593
    // constant-declarations for phi:  			$phi initMaxx_x0 := 			  ($cast ($uint<32>) iNsTr_292 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_103 ) $on bb_14_bb_29			  ($cast ($uint<32>) iNsTr_103 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1594
    // constant-declarations for phi:  			$phi rset_countx_x0 := 			  ($cast ($uint<32>) iNsTr_293 ) $on bb_28_bb_29			  ($cast ($uint<32>) rset_countx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) rset_countx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1595
    // constant-declarations for phi:  			$phi initBlankx_x0 := 			  ($cast ($uint<32>) iNsTr_291 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_93 ) $on bb_14_bb_29			  ($cast ($uint<32>) iNsTr_93 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1596
    // constant-declarations for phi:  			$phi countx_x1 := 			  ($cast ($uint<32>) xx_x7 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_92 ) $on bb_14_bb_29			  ($cast ($uint<32>) iNsTr_92 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1597
    // constant-declarations for phi:  			$phi qpk_countx_x0 := 			  ($cast ($uint<32>) qpk_countx_x1 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_98 ) $on bb_14_bb_29			  ($cast ($uint<32>) iNsTr_98 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1598
    // constant-declarations for phi:  			$phi sbPeakx_x0 := 			  ($cast ($uint<32>) iNsTr_288 ) $on bb_28_bb_29			  ($cast ($uint<32>) sbPeakx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) sbPeakx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1599
    // ($bitcast ($uint<8>) _b00000000  )
    $constant $W[type_cast_4755_wire_constant] : $int<8> := _b00000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 1602
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1607
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_4768_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000011001000  )
    $constant $W[type_cast_4774_wire_constant] : $int<32> := _b00000000000000000000000011001000// 200
    // ( $mux iNsTr_133 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_132 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_4780_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // RSETbuff[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][rset_countx_x0]
    $constant $W[array_obj_ref_4788_constant_part_of_offset] : $int<4> := _b0000// 0
    $constant $W[array_obj_ref_4788_resized_base_address] : $int<4> := _b0000// 0
    $constant $W[array_obj_ref_4788_offset_scale_factor_0] : $int<4> := _b1000// 8
    $constant $W[array_obj_ref_4788_offset_scale_factor_1] : $int<4> := _b0001// 1
    // ->(iNsTr_135)
    $constant $W[ptr_deref_4791_word_offset_0] : $int<4> := _b0000// 0
    // ( $mux iNsTr_133 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initMaxx_x0 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_4797_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000001000  )
    $constant $W[type_cast_4813_wire_constant] : $int<32> := _b00000000000000000000000000001000// 8
    // ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  nmeanx_x0 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_4819_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000101001010  )  sb_countx_x0 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000101001010  )
    $constant $W[type_cast_4826_wire_constant] : $int<32> := _b00000000000000000000000101001010// 330
    // ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_134 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_4833_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_139 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_4840_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 1622
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1627
    // 		scevgep := RSETbuff[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )]
    //  file prog.linked.opt.aa, line 1629
    $constant $W[scevgep_4857] : $int<32> := _b00000000000000000000000000000000 // 0
    // ->(scevgep)
    $constant $W[ptr_deref_4860_word_offset_0] : $int<4> := _b0000// 0
    // 		iNsTr_154 := @(QRSbuff[($bitcast ($uint<32>) _b00000000000000000000000000000000  )])
    //  file prog.linked.opt.aa, line 1631
    $constant $W[iNsTr_154_4867] : $int<32> := _b00000000000000000000000000001000 // 8
    // ->(iNsTr_154)
    $constant $W[ptr_deref_4869_word_offset_0] : $int<5> := _b00000// 0
    // 		iNsTr_156 := @(NOISEbuff[($bitcast ($uint<32>) _b00000000000000000000000000000000  )])
    //  file prog.linked.opt.aa, line 1633
    $constant $W[iNsTr_156_4877] : $int<32> := _b00000000000000000000000000000000 // 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_4881_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ->(iNsTr_156)
    $constant $W[ptr_deref_4879_word_offset_0] : $int<5> := _b00000// 0
    // 		scevgepx_x1 := RSETbuff[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000001  )]
    //  file prog.linked.opt.aa, line 1635
    $constant $W[scevgepx_x1_4889] : $int<32> := _b00000000000000000000000000000001 // 1
    // ->(scevgepx_x1)
    $constant $W[ptr_deref_4892_word_offset_0] : $int<4> := _b0000// 0
    // 		iNsTr_159 := @(QRSbuff[($bitcast ($uint<32>) _b00000000000000000000000000000001  )])
    //  file prog.linked.opt.aa, line 1637
    $constant $W[iNsTr_159_4899] : $int<32> := _b00000000000000000000000000001001 // 9
    // ->(iNsTr_159)
    $constant $W[ptr_deref_4901_word_offset_0] : $int<5> := _b00000// 0
    // 		iNsTr_161 := @(NOISEbuff[($bitcast ($uint<32>) _b00000000000000000000000000000001  )])
    //  file prog.linked.opt.aa, line 1639
    $constant $W[iNsTr_161_4909] : $int<32> := _b00000000000000000000000000000001 // 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_4913_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ->(iNsTr_161)
    $constant $W[ptr_deref_4911_word_offset_0] : $int<5> := _b00000// 0
    // 		scevgepx_x2 := RSETbuff[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000010  )]
    //  file prog.linked.opt.aa, line 1641
    $constant $W[scevgepx_x2_4921] : $int<32> := _b00000000000000000000000000000010 // 2
    // ->(scevgepx_x2)
    $constant $W[ptr_deref_4924_word_offset_0] : $int<4> := _b0000// 0
    // 		iNsTr_164 := @(QRSbuff[($bitcast ($uint<32>) _b00000000000000000000000000000010  )])
    //  file prog.linked.opt.aa, line 1643
    $constant $W[iNsTr_164_4931] : $int<32> := _b00000000000000000000000000001010 // 10
    // ->(iNsTr_164)
    $constant $W[ptr_deref_4933_word_offset_0] : $int<5> := _b00000// 0
    // 		iNsTr_166 := @(NOISEbuff[($bitcast ($uint<32>) _b00000000000000000000000000000010  )])
    //  file prog.linked.opt.aa, line 1645
    $constant $W[iNsTr_166_4941] : $int<32> := _b00000000000000000000000000000010 // 2
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_4945_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ->(iNsTr_166)
    $constant $W[ptr_deref_4943_word_offset_0] : $int<5> := _b00000// 0
    // 		scevgepx_x3 := RSETbuff[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )]
    //  file prog.linked.opt.aa, line 1647
    $constant $W[scevgepx_x3_4953] : $int<32> := _b00000000000000000000000000000011 // 3
    // ->(scevgepx_x3)
    $constant $W[ptr_deref_4956_word_offset_0] : $int<4> := _b0000// 0
    // 		iNsTr_169 := @(QRSbuff[($bitcast ($uint<32>) _b00000000000000000000000000000011  )])
    //  file prog.linked.opt.aa, line 1649
    $constant $W[iNsTr_169_4963] : $int<32> := _b00000000000000000000000000001011 // 11
    // ->(iNsTr_169)
    $constant $W[ptr_deref_4965_word_offset_0] : $int<5> := _b00000// 0
    // 		iNsTr_171 := @(NOISEbuff[($bitcast ($uint<32>) _b00000000000000000000000000000011  )])
    //  file prog.linked.opt.aa, line 1651
    $constant $W[iNsTr_171_4973] : $int<32> := _b00000000000000000000000000000011 // 3
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_4977_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ->(iNsTr_171)
    $constant $W[ptr_deref_4975_word_offset_0] : $int<5> := _b00000// 0
    // 		scevgepx_x4 := RSETbuff[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000100  )]
    //  file prog.linked.opt.aa, line 1653
    $constant $W[scevgepx_x4_4985] : $int<32> := _b00000000000000000000000000000100 // 4
    // ->(scevgepx_x4)
    $constant $W[ptr_deref_4988_word_offset_0] : $int<4> := _b0000// 0
    // 		iNsTr_174 := @(QRSbuff[($bitcast ($uint<32>) _b00000000000000000000000000000100  )])
    //  file prog.linked.opt.aa, line 1655
    $constant $W[iNsTr_174_4995] : $int<32> := _b00000000000000000000000000001100 // 12
    // ->(iNsTr_174)
    $constant $W[ptr_deref_4997_word_offset_0] : $int<5> := _b00000// 0
    // 		iNsTr_176 := @(NOISEbuff[($bitcast ($uint<32>) _b00000000000000000000000000000100  )])
    //  file prog.linked.opt.aa, line 1657
    $constant $W[iNsTr_176_5005] : $int<32> := _b00000000000000000000000000000100 // 4
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_5009_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ->(iNsTr_176)
    $constant $W[ptr_deref_5007_word_offset_0] : $int<5> := _b00000// 0
    // 		scevgepx_x5 := RSETbuff[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000101  )]
    //  file prog.linked.opt.aa, line 1659
    $constant $W[scevgepx_x5_5017] : $int<32> := _b00000000000000000000000000000101 // 5
    // ->(scevgepx_x5)
    $constant $W[ptr_deref_5020_word_offset_0] : $int<4> := _b0000// 0
    // 		iNsTr_179 := @(QRSbuff[($bitcast ($uint<32>) _b00000000000000000000000000000101  )])
    //  file prog.linked.opt.aa, line 1661
    $constant $W[iNsTr_179_5027] : $int<32> := _b00000000000000000000000000001101 // 13
    // ->(iNsTr_179)
    $constant $W[ptr_deref_5029_word_offset_0] : $int<5> := _b00000// 0
    // 		iNsTr_181 := @(NOISEbuff[($bitcast ($uint<32>) _b00000000000000000000000000000101  )])
    //  file prog.linked.opt.aa, line 1663
    $constant $W[iNsTr_181_5037] : $int<32> := _b00000000000000000000000000000101 // 5
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_5041_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ->(iNsTr_181)
    $constant $W[ptr_deref_5039_word_offset_0] : $int<5> := _b00000// 0
    // 		scevgepx_x6 := RSETbuff[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000110  )]
    //  file prog.linked.opt.aa, line 1665
    $constant $W[scevgepx_x6_5049] : $int<32> := _b00000000000000000000000000000110 // 6
    // ->(scevgepx_x6)
    $constant $W[ptr_deref_5052_word_offset_0] : $int<4> := _b0000// 0
    // 		iNsTr_184 := @(QRSbuff[($bitcast ($uint<32>) _b00000000000000000000000000000110  )])
    //  file prog.linked.opt.aa, line 1667
    $constant $W[iNsTr_184_5059] : $int<32> := _b00000000000000000000000000001110 // 14
    // ->(iNsTr_184)
    $constant $W[ptr_deref_5061_word_offset_0] : $int<5> := _b00000// 0
    // 		iNsTr_186 := @(NOISEbuff[($bitcast ($uint<32>) _b00000000000000000000000000000110  )])
    //  file prog.linked.opt.aa, line 1669
    $constant $W[iNsTr_186_5069] : $int<32> := _b00000000000000000000000000000110 // 6
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_5073_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ->(iNsTr_186)
    $constant $W[ptr_deref_5071_word_offset_0] : $int<5> := _b00000// 0
    // 		scevgepx_x7 := RSETbuff[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000111  )]
    //  file prog.linked.opt.aa, line 1671
    $constant $W[scevgepx_x7_5081] : $int<32> := _b00000000000000000000000000000111 // 7
    // ->(scevgepx_x7)
    $constant $W[ptr_deref_5084_word_offset_0] : $int<4> := _b0000// 0
    // 		iNsTr_189 := @(QRSbuff[($bitcast ($uint<32>) _b00000000000000000000000000000111  )])
    //  file prog.linked.opt.aa, line 1673
    $constant $W[iNsTr_189_5091] : $int<32> := _b00000000000000000000000000001111 // 15
    // ->(iNsTr_189)
    $constant $W[ptr_deref_5093_word_offset_0] : $int<5> := _b00000// 0
    // 		iNsTr_191 := @(NOISEbuff[($bitcast ($uint<32>) _b00000000000000000000000000000111  )])
    //  file prog.linked.opt.aa, line 1675
    $constant $W[iNsTr_191_5101] : $int<32> := _b00000000000000000000000000000111 // 7
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_5105_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ->(iNsTr_191)
    $constant $W[ptr_deref_5103_word_offset_0] : $int<5> := _b00000// 0
    // 		iNsTr_193 := @(QRSbuff[($bitcast ($uint<32>) _b00000000000000000000000000000000  )])
    //  file prog.linked.opt.aa, line 1677
    $constant $W[iNsTr_193_5112] : $int<32> := _b00000000000000000000000000001000 // 8
    // 		$call meanCalc (iNsTr_193 ) (iNsTr_194 ) 
    //  file prog.linked.opt.aa, line 1678
    // threshold
    $constant $W[LOAD_threshold_5127_word_address_0] : $pointer<memory_space_24> := _b0
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1686
    // constant-declarations for phi:  			$phi qmeanx_x3 := 			  ($cast ($uint<32>) iNsTr_194 ) $on bb_31_bb_32			  ($cast ($uint<32>) qmeanx_x0 ) $on bb_30_bb_32 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1687
    // constant-declarations for phi:  			$phi det_threshx_x4 := 			  ($cast ($uint<32>) iNsTr_200 ) $on bb_31_bb_32			  ($cast ($uint<32>) det_threshx_x0 ) $on bb_30_bb_32 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1688
    // ( $mux iNsTr_202 iNsTr_68  iNsTr_137 ) 
    // constant-declarations for block %qrsDet%body%
    //  file prog.linked.opt.aa, line 1693
    // constant-declarations for phi:  			$phi nmeanx_x3 := 			  ($cast ($uint<32>) iNsTr_141 ) $on bb_32_bb_33			  ($cast ($uint<32>) nmeanx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1694
    // constant-declarations for phi:  			$phi qmeanx_x4 := 			  ($cast ($uint<32>) qmeanx_x3 ) $on bb_32_bb_33			  ($cast ($uint<32>) qmeanx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1695
    // constant-declarations for phi:  			$phi sb_countx_x2 := 			  ($cast ($uint<32>) iNsTr_142 ) $on bb_32_bb_33			  ($cast ($uint<32>) sb_countx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1696
    // constant-declarations for phi:  			$phi det_threshx_x5 := 			  ($cast ($uint<32>) det_threshx_x4 ) $on bb_32_bb_33			  ($cast ($uint<32>) det_threshx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1697
    // constant-declarations for phi:  			$phi initMaxx_x2 := 			  ($cast ($uint<32>) iNsTr_203 ) $on bb_32_bb_33			  ($cast ($uint<32>) initMaxx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1698
    // constant-declarations for phi:  			$phi rset_countx_x2 := 			  ($cast ($uint<32>) iNsTr_144 ) $on bb_32_bb_33			  ($cast ($uint<32>) rset_countx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1699
    // constant-declarations for phi:  			$phi initBlankx_x2 := 			  ($cast ($uint<32>) iNsTr_143 ) $on bb_32_bb_33			  ($cast ($uint<32>) initBlankx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1700
    // block %qrsDet%body
    //  file prog.linked.opt.aa, line 1185
    // merge-statement  
    //  file prog.linked.opt.aa, line 1191
    // 			$phi indexx_x02x_xi_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_0_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1192
    // indexx_x02x_xi_at_entry
    $W[indexx_x02x_xi_at_entry_3043] : $int<32>
    // do-while statement  
    //  file prog.linked.opt.aa, line 1194
    // ( ~ exitcond6 )
    $intermediate $W[NOT_u1_u1_3091_wire] : $int<1>
    // merge-statement  
    //  file prog.linked.opt.aa, line 1195
    // 			$phi indexx_x02x_xi := 			  ($cast ($uint<32>) iNsTr_4 ) $on $loopback			  indexx_x02x_xi_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1196
    // ($cast ($uint<32>) iNsTr_4 )
    $intermediate $W[type_cast_3054_wire] : $int<32>
    // indexx_x02x_xi
    $W[indexx_x02x_xi_3051] : $int<32>
    // 			scevgep5x_xi := @(NOISEbuff[indexx_x02x_xi])
    //  file prog.linked.opt.aa, line 1198
    // @(NOISEbuff[indexx_x02x_xi])
    $intermediate $W[R_indexx_x02x_xi_3058_resized] : $int<5>
    $intermediate $W[R_indexx_x02x_xi_3058_scaled] : $int<5>
    $intermediate $W[array_obj_ref_3059_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_3059_root_address] : $int<5>
    // scevgep5x_xi
    $W[scevgep5x_xi_3061] : $int<32>
    // 			scevgep6x_xi := @(RRbuff[indexx_x02x_xi])
    //  file prog.linked.opt.aa, line 1199
    // @(RRbuff[indexx_x02x_xi])
    $intermediate $W[R_indexx_x02x_xi_3063_resized] : $int<5>
    $intermediate $W[R_indexx_x02x_xi_3063_scaled] : $int<5>
    $intermediate $W[array_obj_ref_3064_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_3064_root_address] : $int<5>
    // scevgep6x_xi
    $W[scevgep6x_xi_3066] : $int<32>
    // 			->(scevgep5x_xi) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1200
    // ->(scevgep5x_xi)
    $intermediate $W[ptr_deref_3068_wire] : $int<32>
    $intermediate $W[ptr_deref_3068_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_3068_root_address] : $int<5>
    $W[ptr_deref_3068_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_3068_data_0] : $int<32>
    // 			->(scevgep6x_xi) := ($bitcast ($uint<32>) _b00000000000000000000000011001000  )
    //  file prog.linked.opt.aa, line 1201
    // ->(scevgep6x_xi)
    $intermediate $W[ptr_deref_3073_wire] : $int<32>
    $intermediate $W[ptr_deref_3073_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_3073_root_address] : $int<5>
    $W[ptr_deref_3073_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_3073_data_0] : $int<32>
    // 			iNsTr_4 := (indexx_x02x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1202
    // iNsTr_4
    $W[iNsTr_4_3082] : $int<32>
    // 			exitcond6 := (iNsTr_4 == ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
    //  file prog.linked.opt.aa, line 1203
    // exitcond6
    $W[exitcond6_3088] : $int<1>
    // merge-statement  
    //  file prog.linked.opt.aa, line 1209
    // 			$phi indexx_x11x_xi_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1210
    // indexx_x11x_xi_at_entry
    $W[indexx_x11x_xi_at_entry_3096] : $int<32>
    // do-while statement  
    //  file prog.linked.opt.aa, line 1212
    // ( ~ exitcond )
    $intermediate $W[NOT_u1_u1_3134_wire] : $int<1>
    // merge-statement  
    //  file prog.linked.opt.aa, line 1213
    // 			$phi indexx_x11x_xi := 			  ($cast ($uint<32>) iNsTr_9 ) $on $loopback			  indexx_x11x_xi_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1214
    // ($cast ($uint<32>) iNsTr_9 )
    $intermediate $W[type_cast_3107_wire] : $int<32>
    // indexx_x11x_xi
    $W[indexx_x11x_xi_3104] : $int<32>
    // 			scevgepx_xi := @(DDCALCbuff[indexx_x11x_xi])
    //  file prog.linked.opt.aa, line 1216
    // @(DDCALCbuff[indexx_x11x_xi])
    $intermediate $W[R_indexx_x11x_xi_3111_resized] : $int<2>
    $intermediate $W[R_indexx_x11x_xi_3111_scaled] : $int<2>
    $intermediate $W[array_obj_ref_3112_final_offset] : $int<2>
    $intermediate $W[array_obj_ref_3112_root_address] : $int<2>
    // scevgepx_xi
    $W[scevgepx_xi_3114] : $int<32>
    // 			->(scevgepx_xi) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1217
    // ->(scevgepx_xi)
    $intermediate $W[ptr_deref_3116_wire] : $int<32>
    $intermediate $W[ptr_deref_3116_resized_base_address] : $int<2>
    $intermediate $W[ptr_deref_3116_root_address] : $int<2>
    $W[ptr_deref_3116_word_address_0] : $pointer<memory_space_0>
    $W[ptr_deref_3116_data_0] : $int<32>
    // 			iNsTr_9 := (indexx_x11x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1218
    // iNsTr_9
    $W[iNsTr_9_3125] : $int<32>
    // 			exitcond := (iNsTr_9 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
    //  file prog.linked.opt.aa, line 1219
    // exitcond
    $W[exitcond_3131] : $int<1>
    // 		maxDer := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1224
    // maxDer
    $constant $W[STORE_maxDer_3137_word_address_0] : $pointer<memory_space_21> := _b0
    $W[STORE_maxDer_3137_data_0] : $int<32>
    // 		DDCALCbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1225
    // DDCALCbuff_ptr
    $constant $W[STORE_DDCALCbuff_ptr_3141_word_address_0] : $pointer<memory_space_1> := _b0
    $W[STORE_DDCALCbuff_ptr_3141_data_0] : $int<32>
    // 		DDbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1226
    // DDbuff_ptr
    $constant $W[STORE_DDbuff_ptr_3145_word_address_0] : $pointer<memory_space_3> := _b0
    $W[STORE_DDbuff_ptr_3145_data_0] : $int<32>
    // 		NOISEbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    //  file prog.linked.opt.aa, line 1227
    // NOISEbuff_ptr
    $constant $W[STORE_NOISEbuff_ptr_3149_word_address_0] : $pointer<memory_space_14> := _b0
    $W[STORE_NOISEbuff_ptr_3149_data_0] : $int<32>
    // 		RRbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    //  file prog.linked.opt.aa, line 1228
    // RRbuff_ptr
    $constant $W[STORE_RRbuff_ptr_3153_word_address_0] : $pointer<memory_space_16> := _b0
    $W[STORE_RRbuff_ptr_3153_data_0] : $int<32>
    // 		QRSbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    //  file prog.linked.opt.aa, line 1229
    // QRSbuff_ptr
    $constant $W[STORE_QRSbuff_ptr_3157_word_address_0] : $pointer<memory_space_15> := _b0
    $W[STORE_QRSbuff_ptr_3157_data_0] : $int<32>
    // 		timeSinceMaxPeak := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1230
    // timeSinceMaxPeak
    $constant $W[STORE_timeSinceMaxPeak_3161_word_address_0] : $pointer<memory_space_25> := _b0
    $W[STORE_timeSinceMaxPeak_3161_data_0] : $int<32>
    // 		maxPeak := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1231
    // maxPeak
    $constant $W[STORE_maxPeak_3165_word_address_0] : $pointer<memory_space_22> := _b0
    $W[STORE_maxPeak_3165_data_0] : $int<32>
    // 		lastDatum := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1232
    // lastDatum
    $constant $W[STORE_lastDatum_3169_word_address_0] : $pointer<memory_space_20> := _b0
    $W[STORE_lastDatum_3169_data_0] : $int<32>
    // 		$call QRSFilt (($bitcast ($uint<8>) _b00000001  ) ) () 
    //  file prog.linked.opt.aa, line 1233
    // merge-statement  
    //  file prog.linked.opt.aa, line 1235
    // 			$phi init8Donex_x0 := 			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<8>) init8Done_nextx_x0 ) $on bb_33_bb_5 // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 1236
    // ($cast ($uint<8>) init8Done_nextx_x0 )
    $intermediate $W[type_cast_3184_wire] : $int<8>
    // init8Donex_x0
    $W[init8Donex_x0_3178] : $int<8>
    // 			$phi init8Done_nextx_x1 := 			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<8>) init8Done_nextx_x0 ) $on bb_33_bb_5 // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 1237
    // ($cast ($uint<8>) init8Done_nextx_x0 )
    $intermediate $W[type_cast_3191_wire] : $int<8>
    // init8Done_nextx_x1
    $W[init8Done_nextx_x1_3185] : $int<8>
    // 			$phi noiseValx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) noiseValx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1238
    // ($cast ($uint<32>) noiseValx_x0 )
    $intermediate $W[type_cast_3198_wire] : $int<32>
    // noiseValx_x1
    $W[noiseValx_x1_3192] : $int<32>
    // 			$phi rrValx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) rrValx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1239
    // ($cast ($uint<32>) rrValx_x0 )
    $intermediate $W[type_cast_3205_wire] : $int<32>
    // rrValx_x1
    $W[rrValx_x1_3199] : $int<32>
    // 			$phi qrsValx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) qrsValx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1240
    // ($cast ($uint<32>) qrsValx_x0 )
    $intermediate $W[type_cast_3212_wire] : $int<32>
    // qrsValx_x1
    $W[qrsValx_x1_3206] : $int<32>
    // 			$phi nmeanx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) nmeanx_x3 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1241
    // ($cast ($uint<32>) nmeanx_x3 )
    $intermediate $W[type_cast_3219_wire] : $int<32>
    // nmeanx_x1
    $W[nmeanx_x1_3213] : $int<32>
    // 			$phi qmeanx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) qmeanx_x4 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1242
    // ($cast ($uint<32>) qmeanx_x4 )
    $intermediate $W[type_cast_3226_wire] : $int<32>
    // qmeanx_x1
    $W[qmeanx_x1_3220] : $int<32>
    // 			$phi sbLocx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000100101100  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) sbLocx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1243
    // ($cast ($uint<32>) sbLocx_x0 )
    $intermediate $W[type_cast_3233_wire] : $int<32>
    // sbLocx_x1
    $W[sbLocx_x1_3227] : $int<32>
    // 			$phi sb_countx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000100101100  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) sb_countx_x2 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1244
    // ($cast ($uint<32>) sb_countx_x2 )
    $intermediate $W[type_cast_3240_wire] : $int<32>
    // sb_countx_x1
    $W[sb_countx_x1_3234] : $int<32>
    // 			$phi det_threshx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) det_threshx_x5 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1245
    // ($cast ($uint<32>) det_threshx_x5 )
    $intermediate $W[type_cast_3247_wire] : $int<32>
    // det_threshx_x1
    $W[det_threshx_x1_3241] : $int<32>
    // 			$phi initMaxx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) initMaxx_x2 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1246
    // ($cast ($uint<32>) initMaxx_x2 )
    $intermediate $W[type_cast_3254_wire] : $int<32>
    // initMaxx_x1
    $W[initMaxx_x1_3248] : $int<32>
    // 			$phi rset_countx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) rset_countx_x2 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1247
    // ($cast ($uint<32>) rset_countx_x2 )
    $intermediate $W[type_cast_3261_wire] : $int<32>
    // rset_countx_x1
    $W[rset_countx_x1_3255] : $int<32>
    // 			$phi preBlank_countx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) iNsTr_66 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1248
    // ($cast ($uint<32>) iNsTr_66 )
    $intermediate $W[type_cast_3268_wire] : $int<32>
    // preBlank_countx_x0
    $W[preBlank_countx_x0_3262] : $int<32>
    // 			$phi initBlankx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) initBlankx_x2 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1249
    // ($cast ($uint<32>) initBlankx_x2 )
    $intermediate $W[type_cast_3275_wire] : $int<32>
    // initBlankx_x1
    $W[initBlankx_x1_3269] : $int<32>
    // 			$phi countx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) countx_x1 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1250
    // ($cast ($uint<32>) countx_x1 )
    $intermediate $W[type_cast_3282_wire] : $int<32>
    // countx_x0
    $W[countx_x0_3276] : $int<32>
    // 			$phi qpk_countx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) qpk_countx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1251
    // ($cast ($uint<32>) qpk_countx_x0 )
    $intermediate $W[type_cast_3289_wire] : $int<32>
    // qpk_countx_x1
    $W[qpk_countx_x1_3283] : $int<32>
    // 			$phi sbPeakx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) sbPeakx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1252
    // ($cast ($uint<32>) sbPeakx_x0 )
    $intermediate $W[type_cast_3296_wire] : $int<32>
    // sbPeakx_x1
    $W[sbPeakx_x1_3290] : $int<32>
    // 			$phi tempPeakx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) iNsTr_65 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1253
    // ($cast ($uint<32>) iNsTr_65 )
    $intermediate $W[type_cast_3303_wire] : $int<32>
    // tempPeakx_x0
    $W[tempPeakx_x0_3297] : $int<32>
    // 		iNsTr_23 := det_input_pipe
    //  file prog.linked.opt.aa, line 1255
    // iNsTr_23
    $W[iNsTr_23_3307] : $int<32>
    // 		filt_input_pipe := iNsTr_23
    //  file prog.linked.opt.aa, line 1256
    // filt_input_pipe
    // 		$call QRSFilt (($bitcast ($uint<8>) _b00000000  ) ) () 
    //  file prog.linked.opt.aa, line 1257
    // 		iNsTr_27 := timeSinceMaxPeak
    //  file prog.linked.opt.aa, line 1258
    // timeSinceMaxPeak
    $W[LOAD_timeSinceMaxPeak_3315_data_0] : $int<32>
    // iNsTr_27
    $W[iNsTr_27_3316] : $int<32>
    // 		iNsTr_28 := maxPeak
    //  file prog.linked.opt.aa, line 1259
    // maxPeak
    $W[LOAD_maxPeak_3318_data_0] : $int<32>
    // iNsTr_28
    $W[iNsTr_28_3319] : $int<32>
    // 		iNsTr_30 := filt_output_pipe
    //  file prog.linked.opt.aa, line 1260
    // iNsTr_30
    $W[iNsTr_30_3322] : $int<32>
    // 		iNsTr_31 := (($bitcast ($int<32>) iNsTr_27 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 1261
    // ($bitcast ($int<32>) iNsTr_27 )
    $intermediate $W[type_cast_3325_wire] : $int<32>
    // iNsTr_31
    $W[iNsTr_31_3330] : $int<1>
    // 		iNsTr_32 := ($cast ($uint<32>) iNsTr_31 )
    //  file prog.linked.opt.aa, line 1262
    // iNsTr_32
    $W[iNsTr_32_3334] : $int<32>
    // 		iNsTr_33 := (iNsTr_32 + iNsTr_27)
    //  file prog.linked.opt.aa, line 1263
    // iNsTr_33
    $W[iNsTr_33_3339] : $int<32>
    // 		iNsTr_34 := lastDatum
    //  file prog.linked.opt.aa, line 1264
    // lastDatum
    $W[LOAD_lastDatum_3341_data_0] : $int<32>
    // iNsTr_34
    $W[iNsTr_34_3342] : $int<32>
    // 		iNsTr_35 := (($bitcast ($int<32>) iNsTr_30 ) > ($bitcast ($int<32>) iNsTr_34 ))
    //  file prog.linked.opt.aa, line 1265
    // ($bitcast ($int<32>) iNsTr_30 )
    $intermediate $W[type_cast_3345_wire] : $int<32>
    // ($bitcast ($int<32>) iNsTr_34 )
    $intermediate $W[type_cast_3347_wire] : $int<32>
    // iNsTr_35
    $W[iNsTr_35_3349] : $int<1>
    // 		iNsTr_36 := (($bitcast ($int<32>) iNsTr_30 ) > ($bitcast ($int<32>) iNsTr_28 ))
    //  file prog.linked.opt.aa, line 1266
    // ($bitcast ($int<32>) iNsTr_30 )
    $intermediate $W[type_cast_3352_wire] : $int<32>
    // ($bitcast ($int<32>) iNsTr_28 )
    $intermediate $W[type_cast_3354_wire] : $int<32>
    // iNsTr_36
    $W[iNsTr_36_3356] : $int<1>
    // 		iNsTr_37 := (iNsTr_35 & iNsTr_36)
    //  file prog.linked.opt.aa, line 1267
    // iNsTr_37
    $W[iNsTr_37_3361] : $int<1>
    // 		iNsTr_38 := ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_28 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) )
    //  file prog.linked.opt.aa, line 1268
    // ($bitcast ($int<32>) iNsTr_28 )
    $intermediate $W[type_cast_3364_wire] : $int<32>
    // (($bitcast ($int<32>) iNsTr_28 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
    $intermediate $W[ASHR_i32_i32_3368_wire] : $int<32>
    // iNsTr_38
    $W[iNsTr_38_3370] : $int<32>
    // 		iNsTr_39 := (($bitcast ($int<32>) iNsTr_30 ) < ($bitcast ($int<32>) iNsTr_38 ))
    //  file prog.linked.opt.aa, line 1269
    // ($bitcast ($int<32>) iNsTr_30 )
    $intermediate $W[type_cast_3373_wire] : $int<32>
    // ($bitcast ($int<32>) iNsTr_38 )
    $intermediate $W[type_cast_3375_wire] : $int<32>
    // iNsTr_39
    $W[iNsTr_39_3377] : $int<1>
    // 		iNsTr_40 := (($bitcast ($int<32>) iNsTr_33 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010011  ) ))
    //  file prog.linked.opt.aa, line 1270
    // ($bitcast ($int<32>) iNsTr_33 )
    $intermediate $W[type_cast_3380_wire] : $int<32>
    // iNsTr_40
    $W[iNsTr_40_3385] : $int<1>
    // 		orx_xcondx_xi := (iNsTr_39 | iNsTr_40)
    //  file prog.linked.opt.aa, line 1271
    // orx_xcondx_xi
    $W[orx_xcondx_xi_3390] : $int<1>
    // 		xx_xdemorgan42 := (iNsTr_35 & iNsTr_36)
    //  file prog.linked.opt.aa, line 1272
    // xx_xdemorgan42
    $W[xx_xdemorgan42_3395] : $int<1>
    // 		iNsTr_41 := (xx_xdemorgan42 ^ ($bitcast ($uint<1>) _b1  ))
    //  file prog.linked.opt.aa, line 1273
    // iNsTr_41
    $W[iNsTr_41_3401] : $int<1>
    // 		iNsTr_42 := (orx_xcondx_xi & iNsTr_41)
    //  file prog.linked.opt.aa, line 1274
    // iNsTr_42
    $W[iNsTr_42_3406] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 1275
    // 		iNsTr_44 := (($bitcast ($int<32>) iNsTr_28 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000110  ) ))
    //  file prog.linked.opt.aa, line 1282
    // ($bitcast ($int<32>) iNsTr_28 )
    $intermediate $W[type_cast_3416_wire] : $int<32>
    // iNsTr_44
    $W[iNsTr_44_3421] : $int<1>
    // 		phitmpx_xi := ( $mux iNsTr_44 iNsTr_28  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
    //  file prog.linked.opt.aa, line 1283
    // phitmpx_xi
    $W[phitmpx_xi_3428] : $int<32>
    // merge-statement  
    //  file prog.linked.opt.aa, line 1285
    // 			$phi iNsTr_46 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_5_bb_7			  ($cast ($uint<32>) phitmpx_xi ) $on bb_6_bb_7 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1286
    // ($cast ($uint<32>) phitmpx_xi )
    $intermediate $W[type_cast_3437_wire] : $int<32>
    // iNsTr_46
    $W[iNsTr_46_3431] : $int<32>
    // 		iNsTr_47 := ( $mux iNsTr_42 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_28 ) 
    //  file prog.linked.opt.aa, line 1288
    // iNsTr_47
    $W[iNsTr_47_3445] : $int<32>
    // 		iNsTr_48 := ( $mux iNsTr_42 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_33 ) 
    //  file prog.linked.opt.aa, line 1289
    // iNsTr_48
    $W[iNsTr_48_3452] : $int<32>
    // 		iNsTr_49 := ( $mux iNsTr_37 iNsTr_30  iNsTr_47 ) 
    //  file prog.linked.opt.aa, line 1290
    // iNsTr_49
    $W[iNsTr_49_3458] : $int<32>
    // if statement  
    //  file prog.linked.opt.aa, line 1291
    // 		iNsTr_51 := (($bitcast ($int<32>) iNsTr_49 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    //  file prog.linked.opt.aa, line 1298
    // ($bitcast ($int<32>) iNsTr_49 )
    $intermediate $W[type_cast_3468_wire] : $int<32>
    // iNsTr_51
    $W[iNsTr_51_3473] : $int<1>
    // 		phitmp1x_xi := ( $mux iNsTr_51 ($bitcast ($uint<32>) _b00000000000000000000000000000001  )  iNsTr_48 ) 
    //  file prog.linked.opt.aa, line 1299
    // phitmp1x_xi
    $W[phitmp1x_xi_3480] : $int<32>
    // merge-statement  
    //  file prog.linked.opt.aa, line 1301
    // 			$phi iNsTr_53 := 			  ($cast ($uint<32>) iNsTr_48 ) $on bb_7_peakx_xexit			  ($cast ($uint<32>) phitmp1x_xi ) $on bb_8_peakx_xexit // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1302
    // ($cast ($uint<32>) iNsTr_48 )
    $intermediate $W[type_cast_3486_wire] : $int<32>
    // ($cast ($uint<32>) phitmp1x_xi )
    $intermediate $W[type_cast_3488_wire] : $int<32>
    // iNsTr_53
    $W[iNsTr_53_3483] : $int<32>
    // 		timeSinceMaxPeak := iNsTr_53
    //  file prog.linked.opt.aa, line 1304
    // timeSinceMaxPeak
    $constant $W[STORE_timeSinceMaxPeak_3490_word_address_0] : $pointer<memory_space_25> := _b0
    $W[STORE_timeSinceMaxPeak_3490_data_0] : $int<32>
    // 		maxPeak := iNsTr_49
    //  file prog.linked.opt.aa, line 1305
    // maxPeak
    $constant $W[STORE_maxPeak_3493_word_address_0] : $pointer<memory_space_22> := _b0
    $W[STORE_maxPeak_3493_data_0] : $int<32>
    // 		lastDatum := iNsTr_30
    //  file prog.linked.opt.aa, line 1306
    // lastDatum
    $constant $W[STORE_lastDatum_3496_word_address_0] : $pointer<memory_space_20> := _b0
    $W[STORE_lastDatum_3496_data_0] : $int<32>
    // 		iNsTr_57 := (($bitcast ($int<32>) iNsTr_46 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 1307
    // ($bitcast ($int<32>) iNsTr_46 )
    $intermediate $W[type_cast_3501_wire] : $int<32>
    // iNsTr_57
    $W[iNsTr_57_3506] : $int<1>
    // 		iNsTr_58 := (($bitcast ($int<32>) preBlank_countx_x0 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 1308
    // ($bitcast ($int<32>) preBlank_countx_x0 )
    $intermediate $W[type_cast_3509_wire] : $int<32>
    // iNsTr_58
    $W[iNsTr_58_3514] : $int<1>
    // 		iNsTr_59 := (($bitcast ($int<32>) iNsTr_46 ) > ($bitcast ($int<32>) tempPeakx_x0 ))
    //  file prog.linked.opt.aa, line 1309
    // ($bitcast ($int<32>) iNsTr_46 )
    $intermediate $W[type_cast_3517_wire] : $int<32>
    // ($bitcast ($int<32>) tempPeakx_x0 )
    $intermediate $W[type_cast_3519_wire] : $int<32>
    // iNsTr_59
    $W[iNsTr_59_3521] : $int<1>
    // 		iNsTr_60 := (preBlank_countx_x0 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.linked.opt.aa, line 1310
    // iNsTr_60
    $W[iNsTr_60_3527] : $int<32>
    // 		iNsTr_61 := (iNsTr_60 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.linked.opt.aa, line 1311
    // iNsTr_61
    $W[iNsTr_61_3533] : $int<1>
    // 		iNsTr_62 := (iNsTr_58 ^ ($bitcast ($uint<1>) _b1  ))
    //  file prog.linked.opt.aa, line 1312
    // iNsTr_62
    $W[iNsTr_62_3539] : $int<1>
    // 		iNsTr_63 := (iNsTr_57 & iNsTr_62)
    //  file prog.linked.opt.aa, line 1313
    // iNsTr_63
    $W[iNsTr_63_3544] : $int<1>
    // 		xx_xnot13 := (iNsTr_59 ^ ($bitcast ($uint<1>) _b1  ))
    //  file prog.linked.opt.aa, line 1314
    // xx_xnot13
    $W[xx_xnot13_3550] : $int<1>
    // 		notx_xbrmerge := (iNsTr_57 & xx_xnot13)
    //  file prog.linked.opt.aa, line 1315
    // notx_xbrmerge
    $W[notx_xbrmerge_3555] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 1316
    // 		phitmp18 := ( $mux iNsTr_59 iNsTr_46  tempPeakx_x0 ) 
    //  file prog.linked.opt.aa, line 1323
    // phitmp18
    $W[phitmp18_3568] : $int<32>
    // 		phitmp1 := ( $mux iNsTr_59 ($bitcast ($uint<32>) _b00000000000000000000000000100111  )  iNsTr_60 ) 
    //  file prog.linked.opt.aa, line 1324
    // phitmp1
    $W[phitmp1_3575] : $int<32>
    // merge-statement  
    //  file prog.linked.opt.aa, line 1326
    // 			$phi iNsTr_65 := 			  ($cast ($uint<32>) phitmp18 ) $on bb_10_xx_xthread			  ($cast ($uint<32>) iNsTr_46 ) $on peakx_xexit_xx_xthread // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1327
    // ($cast ($uint<32>) phitmp18 )
    $intermediate $W[type_cast_3581_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_46 )
    $intermediate $W[type_cast_3583_wire] : $int<32>
    // iNsTr_65
    $W[iNsTr_65_3578] : $int<32>
    // 			$phi iNsTr_66 := 			  ($cast ($uint<32>) phitmp1 ) $on bb_10_xx_xthread			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000100111  ) ) $on peakx_xexit_xx_xthread // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1328
    // ($cast ($uint<32>) phitmp1 )
    $intermediate $W[type_cast_3587_wire] : $int<32>
    // iNsTr_66
    $W[iNsTr_66_3584] : $int<32>
    // 		xx_xnot14 := (iNsTr_57 ^ ($bitcast ($uint<1>) _b1  ))
    //  file prog.linked.opt.aa, line 1330
    // xx_xnot14
    $W[xx_xnot14_3597] : $int<1>
    // 		xx_xnot2x_xnot := (iNsTr_58 & xx_xnot14)
    //  file prog.linked.opt.aa, line 1331
    // xx_xnot2x_xnot
    $W[xx_xnot2x_xnot_3602] : $int<1>
    // 		tmp := (notx_xbrmerge | xx_xnot2x_xnot)
    //  file prog.linked.opt.aa, line 1332
    // tmp
    $W[tmp_3607] : $int<1>
    // 		iNsTr_67 := (iNsTr_61 & tmp)
    //  file prog.linked.opt.aa, line 1333
    // iNsTr_67
    $W[iNsTr_67_3612] : $int<1>
    // 		iNsTr_68 := ( $mux iNsTr_67 iNsTr_65  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
    //  file prog.linked.opt.aa, line 1334
    // iNsTr_68
    $W[iNsTr_68_3619] : $int<32>
    // 		iNsTr_69 := DDCALCbuff_ptr
    //  file prog.linked.opt.aa, line 1335
    // DDCALCbuff_ptr
    $W[LOAD_DDCALCbuff_ptr_3621_data_0] : $int<32>
    // iNsTr_69
    $W[iNsTr_69_3622] : $int<32>
    // 		iNsTr_70 := @(DDCALCbuff[iNsTr_69])
    //  file prog.linked.opt.aa, line 1336
    // @(DDCALCbuff[iNsTr_69])
    $intermediate $W[R_iNsTr_69_3624_resized] : $int<2>
    $intermediate $W[R_iNsTr_69_3624_scaled] : $int<2>
    $intermediate $W[array_obj_ref_3625_final_offset] : $int<2>
    $intermediate $W[array_obj_ref_3625_root_address] : $int<2>
    // iNsTr_70
    $W[iNsTr_70_3627] : $int<32>
    // 		iNsTr_71 := ->(iNsTr_70)
    //  file prog.linked.opt.aa, line 1337
    // ->(iNsTr_70)
    $intermediate $W[ptr_deref_3630_resized_base_address] : $int<2>
    $intermediate $W[ptr_deref_3630_root_address] : $int<2>
    $W[ptr_deref_3630_word_address_0] : $pointer<memory_space_0>
    $W[ptr_deref_3630_data_0] : $int<32>
    // iNsTr_71
    $W[iNsTr_71_3631] : $int<32>
    // 		iNsTr_72 := (iNsTr_23 - iNsTr_71)
    //  file prog.linked.opt.aa, line 1338
    // iNsTr_72
    $W[iNsTr_72_3636] : $int<32>
    // 		->(iNsTr_70) := iNsTr_23
    //  file prog.linked.opt.aa, line 1339
    // ->(iNsTr_70)
    $intermediate $W[ptr_deref_3638_wire] : $int<32>
    $intermediate $W[ptr_deref_3638_resized_base_address] : $int<2>
    $intermediate $W[ptr_deref_3638_root_address] : $int<2>
    $W[ptr_deref_3638_word_address_0] : $pointer<memory_space_0>
    $W[ptr_deref_3638_data_0] : $int<32>
    // 		iNsTr_74 := (iNsTr_69 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1340
    // iNsTr_74
    $W[iNsTr_74_3646] : $int<32>
    // 		iNsTr_75 := (iNsTr_74 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
    //  file prog.linked.opt.aa, line 1341
    // iNsTr_75
    $W[iNsTr_75_3652] : $int<1>
    // 		iNsTr_76 := ( $mux iNsTr_75 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_74 ) 
    //  file prog.linked.opt.aa, line 1342
    // iNsTr_76
    $W[iNsTr_76_3659] : $int<32>
    // 		DDCALCbuff_ptr := iNsTr_76
    //  file prog.linked.opt.aa, line 1343
    // DDCALCbuff_ptr
    $constant $W[STORE_DDCALCbuff_ptr_3660_word_address_0] : $pointer<memory_space_1> := _b0
    $W[STORE_DDCALCbuff_ptr_3660_data_0] : $int<32>
    // 		iNsTr_78 := DDbuff_ptr
    //  file prog.linked.opt.aa, line 1344
    // DDbuff_ptr
    $W[LOAD_DDbuff_ptr_3664_data_0] : $int<32>
    // iNsTr_78
    $W[iNsTr_78_3665] : $int<32>
    // 		iNsTr_79 := @(DDbuff[iNsTr_78])
    //  file prog.linked.opt.aa, line 1345
    // @(DDbuff[iNsTr_78])
    $intermediate $W[R_iNsTr_78_3667_resized] : $int<7>
    $intermediate $W[R_iNsTr_78_3667_scaled] : $int<7>
    $intermediate $W[array_obj_ref_3668_final_offset] : $int<7>
    $intermediate $W[array_obj_ref_3668_root_address] : $int<7>
    // iNsTr_79
    $W[iNsTr_79_3670] : $int<32>
    // 		->(iNsTr_79) := iNsTr_72
    //  file prog.linked.opt.aa, line 1346
    // ->(iNsTr_79)
    $intermediate $W[ptr_deref_3672_wire] : $int<32>
    $intermediate $W[ptr_deref_3672_resized_base_address] : $int<7>
    $intermediate $W[ptr_deref_3672_root_address] : $int<7>
    $W[ptr_deref_3672_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_3672_data_0] : $int<32>
    // 		iNsTr_81 := (iNsTr_78 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1347
    // iNsTr_81
    $W[iNsTr_81_3680] : $int<32>
    // 		iNsTr_82 := (iNsTr_81 == ($bitcast ($uint<32>) _b00000000000000000000000001011100  ))
    //  file prog.linked.opt.aa, line 1348
    // iNsTr_82
    $W[iNsTr_82_3686] : $int<1>
    // 		iNsTr_83 := ( $mux iNsTr_82 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_81 ) 
    //  file prog.linked.opt.aa, line 1349
    // iNsTr_83
    $W[iNsTr_83_3693] : $int<32>
    // 		DDbuff_ptr := iNsTr_83
    //  file prog.linked.opt.aa, line 1350
    // DDbuff_ptr
    $constant $W[STORE_DDbuff_ptr_3694_word_address_0] : $pointer<memory_space_3> := _b0
    $W[STORE_DDbuff_ptr_3694_data_0] : $int<32>
    // 		iNsTr_85 := (countx_x0 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1351
    // iNsTr_85
    $W[iNsTr_85_3702] : $int<32>
    // 		iNsTr_86 := (init8Donex_x0 == ($bitcast ($uint<8>) _b00000000  ))
    //  file prog.linked.opt.aa, line 1352
    // iNsTr_86
    $W[iNsTr_86_3708] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 1353
    // 		iNsTr_89 := (initBlankx_x1 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1363
    // iNsTr_89
    $W[iNsTr_89_3723] : $int<32>
    // 		iNsTr_90 := (iNsTr_89 == ($bitcast ($uint<32>) _b00000000000000000000000011001000  ))
    //  file prog.linked.opt.aa, line 1364
    // iNsTr_90
    $W[iNsTr_90_3729] : $int<1>
    // 		iNsTr_91 := (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 1365
    // ($bitcast ($int<32>) iNsTr_68 )
    $intermediate $W[type_cast_3732_wire] : $int<32>
    // iNsTr_91
    $W[iNsTr_91_3737] : $int<1>
    // 		iNsTr_92 := ( $mux iNsTr_91 ($bitcast ($uint<32>) _b00000000000000000000000000010000  )  iNsTr_85 ) 
    //  file prog.linked.opt.aa, line 1366
    // iNsTr_92
    $W[iNsTr_92_3744] : $int<32>
    // 		iNsTr_93 := ( $mux iNsTr_90 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_89 ) 
    //  file prog.linked.opt.aa, line 1367
    // iNsTr_93
    $W[iNsTr_93_3751] : $int<32>
    // 		iNsTr_94 := @(QRSbuff[qpk_countx_x1])
    //  file prog.linked.opt.aa, line 1368
    // @(QRSbuff[qpk_countx_x1])
    $intermediate $W[R_qpk_countx_x1_3753_resized] : $int<5>
    $intermediate $W[R_qpk_countx_x1_3753_scaled] : $int<5>
    $intermediate $W[array_obj_ref_3754_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_3754_root_address] : $int<5>
    // iNsTr_94
    $W[iNsTr_94_3756] : $int<32>
    // 		->(iNsTr_94) := initMaxx_x1
    //  file prog.linked.opt.aa, line 1369
    // ->(iNsTr_94)
    $intermediate $W[ptr_deref_3758_wire] : $int<32>
    $intermediate $W[ptr_deref_3758_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_3758_root_address] : $int<5>
    $W[ptr_deref_3758_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_3758_data_0] : $int<32>
    // 		iNsTr_96 := ( $mux iNsTr_90 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initMaxx_x1 ) 
    //  file prog.linked.opt.aa, line 1370
    // iNsTr_96
    $W[iNsTr_96_3767] : $int<32>
    // 		iNsTr_97 := ($cast ($uint<32>) iNsTr_90 )
    //  file prog.linked.opt.aa, line 1371
    // iNsTr_97
    $W[iNsTr_97_3771] : $int<32>
    // 		iNsTr_98 := (iNsTr_97 + qpk_countx_x1)
    //  file prog.linked.opt.aa, line 1372
    // iNsTr_98
    $W[iNsTr_98_3776] : $int<32>
    // 		iNsTr_99 := (iNsTr_98 == ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
    //  file prog.linked.opt.aa, line 1373
    // iNsTr_99
    $W[iNsTr_99_3782] : $int<1>
    // 		iNsTr_100 := (iNsTr_90 & iNsTr_99)
    //  file prog.linked.opt.aa, line 1374
    // iNsTr_100
    $W[iNsTr_100_3787] : $int<1>
    // 		iNsTr_101 := ($cast ($uint<8>) iNsTr_100 )
    //  file prog.linked.opt.aa, line 1375
    // iNsTr_101
    $W[iNsTr_101_3791] : $int<8>
    // 		iNsTr_102 := (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) iNsTr_96 ))
    //  file prog.linked.opt.aa, line 1376
    // ($bitcast ($int<32>) iNsTr_68 )
    $intermediate $W[type_cast_3794_wire] : $int<32>
    // ($bitcast ($int<32>) iNsTr_96 )
    $intermediate $W[type_cast_3796_wire] : $int<32>
    // iNsTr_102
    $W[iNsTr_102_3798] : $int<1>
    // 		iNsTr_103 := ( $mux iNsTr_102 iNsTr_68  iNsTr_96 ) 
    //  file prog.linked.opt.aa, line 1377
    // iNsTr_103
    $W[iNsTr_103_3804] : $int<32>
    // if statement  
    //  file prog.linked.opt.aa, line 1378
    // 		$call meanCalc (iNsTr_106 ) (iNsTr_107 ) 
    //  file prog.linked.opt.aa, line 1386
    // iNsTr_107
    $W[iNsTr_107_3820] : $int<32>
    // 		iNsTr_108 := ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_107 ) )
    //  file prog.linked.opt.aa, line 1387
    // ($bitcast ($int<64>) iNsTr_107 )
    $intermediate $W[type_cast_3823_wire] : $int<64>
    // iNsTr_108
    $W[iNsTr_108_3825] : $float<11,52>
    // 		iNsTr_109 := threshold
    //  file prog.linked.opt.aa, line 1388
    // threshold
    $W[LOAD_threshold_3827_data_0] : $int<64>
    // iNsTr_109
    $W[iNsTr_109_3828] : $float<11,52>
    // 		iNsTr_110 := (iNsTr_109 * iNsTr_108)
    //  file prog.linked.opt.aa, line 1389
    // iNsTr_110
    $W[iNsTr_110_3833] : $float<11,52>
    // 		iNsTr_111 := ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_110 ) )
    //  file prog.linked.opt.aa, line 1390
    // ($cast ($int<32>) iNsTr_110 )
    $intermediate $W[type_cast_3836_wire] : $int<32>
    // iNsTr_111
    $W[iNsTr_111_3838] : $int<32>
    // merge-statement  
    //  file prog.linked.opt.aa, line 1392
    // 			$phi maxx_x07x_xi := 			  ($cast ($uint<32>) iNsTr_121 ) $on bb_15_bb_15			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1393
    // ($cast ($uint<32>) iNsTr_121 )
    $intermediate $W[type_cast_3844_wire] : $int<32>
    // maxx_x07x_xi
    $W[maxx_x07x_xi_3841] : $int<32>
    // 			$phi minx_x06x_xi := 			  ($cast ($uint<32>) iNsTr_123 ) $on bb_15_bb_15			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1394
    // ($cast ($uint<32>) iNsTr_123 )
    $intermediate $W[type_cast_3851_wire] : $int<32>
    // minx_x06x_xi
    $W[minx_x06x_xi_3848] : $int<32>
    // 			$phi maxtx_x05x_xi := 			  ($cast ($uint<32>) iNsTr_120 ) $on bb_15_bb_15			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1395
    // ($cast ($uint<32>) iNsTr_120 )
    $intermediate $W[type_cast_3858_wire] : $int<32>
    // maxtx_x05x_xi
    $W[maxtx_x05x_xi_3855] : $int<32>
    // 			$phi mintx_x04x_xi := 			  ($cast ($uint<32>) iNsTr_122 ) $on bb_15_bb_15			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1396
    // ($cast ($uint<32>) iNsTr_122 )
    $intermediate $W[type_cast_3865_wire] : $int<32>
    // mintx_x04x_xi
    $W[mintx_x04x_xi_3862] : $int<32>
    // 			$phi iNsTr_115 := 			  ($cast ($uint<32>) iNsTr_125 ) $on bb_15_bb_15			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1397
    // ($cast ($uint<32>) iNsTr_125 )
    $intermediate $W[type_cast_3872_wire] : $int<32>
    // iNsTr_115
    $W[iNsTr_115_3869] : $int<32>
    // 			$phi ptrx_x02x_xi := 			  ($cast ($uint<32>) iNsTr_127 ) $on bb_15_bb_15			  ($cast ($uint<32>) iNsTr_83 ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1398
    // ($cast ($uint<32>) iNsTr_127 )
    $intermediate $W[type_cast_3879_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_83 )
    $intermediate $W[type_cast_3881_wire] : $int<32>
    // ptrx_x02x_xi
    $W[ptrx_x02x_xi_3876] : $int<32>
    // 		iNsTr_116 := @(DDbuff[ptrx_x02x_xi])
    //  file prog.linked.opt.aa, line 1400
    // @(DDbuff[ptrx_x02x_xi])
    $intermediate $W[R_ptrx_x02x_xi_3884_resized] : $int<7>
    $intermediate $W[R_ptrx_x02x_xi_3884_scaled] : $int<7>
    $intermediate $W[array_obj_ref_3885_final_offset] : $int<7>
    $intermediate $W[array_obj_ref_3885_root_address] : $int<7>
    // iNsTr_116
    $W[iNsTr_116_3887] : $int<32>
    // 		iNsTr_117 := ->(iNsTr_116)
    //  file prog.linked.opt.aa, line 1401
    // ->(iNsTr_116)
    $intermediate $W[ptr_deref_3890_resized_base_address] : $int<7>
    $intermediate $W[ptr_deref_3890_root_address] : $int<7>
    $W[ptr_deref_3890_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_3890_data_0] : $int<32>
    // iNsTr_117
    $W[iNsTr_117_3891] : $int<32>
    // 		iNsTr_118 := (($bitcast ($int<32>) iNsTr_117 ) > ($bitcast ($int<32>) maxx_x07x_xi ))
    //  file prog.linked.opt.aa, line 1402
    // ($bitcast ($int<32>) iNsTr_117 )
    $intermediate $W[type_cast_3894_wire] : $int<32>
    // ($bitcast ($int<32>) maxx_x07x_xi )
    $intermediate $W[type_cast_3896_wire] : $int<32>
    // iNsTr_118
    $W[iNsTr_118_3898] : $int<1>
    // 		iNsTr_119 := (($bitcast ($int<32>) iNsTr_117 ) < ($bitcast ($int<32>) minx_x06x_xi ))
    //  file prog.linked.opt.aa, line 1403
    // ($bitcast ($int<32>) iNsTr_117 )
    $intermediate $W[type_cast_3901_wire] : $int<32>
    // ($bitcast ($int<32>) minx_x06x_xi )
    $intermediate $W[type_cast_3903_wire] : $int<32>
    // iNsTr_119
    $W[iNsTr_119_3905] : $int<1>
    // 		iNsTr_120 := ( $mux iNsTr_118 iNsTr_115  maxtx_x05x_xi ) 
    //  file prog.linked.opt.aa, line 1404
    // iNsTr_120
    $W[iNsTr_120_3911] : $int<32>
    // 		iNsTr_121 := ( $mux iNsTr_118 iNsTr_117  maxx_x07x_xi ) 
    //  file prog.linked.opt.aa, line 1405
    // iNsTr_121
    $W[iNsTr_121_3917] : $int<32>
    // 		iNsTr_122 := ( $mux iNsTr_119 iNsTr_115  mintx_x04x_xi ) 
    //  file prog.linked.opt.aa, line 1406
    // iNsTr_122
    $W[iNsTr_122_3923] : $int<32>
    // 		iNsTr_123 := ( $mux iNsTr_119 iNsTr_117  minx_x06x_xi ) 
    //  file prog.linked.opt.aa, line 1407
    // iNsTr_123
    $W[iNsTr_123_3929] : $int<32>
    // 		iNsTr_124 := (ptrx_x02x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1408
    // iNsTr_124
    $W[iNsTr_124_3935] : $int<32>
    // 		iNsTr_125 := (iNsTr_115 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1409
    // iNsTr_125
    $W[iNsTr_125_3941] : $int<32>
    // 		iNsTr_126 := (iNsTr_124 == ($bitcast ($uint<32>) _b00000000000000000000000001011100  ))
    //  file prog.linked.opt.aa, line 1410
    // iNsTr_126
    $W[iNsTr_126_3947] : $int<1>
    // 		iNsTr_127 := ( $mux iNsTr_126 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_124 ) 
    //  file prog.linked.opt.aa, line 1411
    // iNsTr_127
    $W[iNsTr_127_3954] : $int<32>
    // 		exitcond4 := (iNsTr_125 == ($bitcast ($uint<32>) _b00000000000000000000000000101100  ))
    //  file prog.linked.opt.aa, line 1412
    // exitcond4
    $W[exitcond4_3960] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 1413
    // merge-statement  
    //  file prog.linked.opt.aa, line 1418
    // 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_123 ) $on bb_15_xx_x_crit_edgex_xi // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1419
    // ($cast ($uint<32>) iNsTr_123 )
    $intermediate $W[type_cast_3971_wire] : $int<32>
    // xx_xlcssa3
    $W[xx_xlcssa3_3968] : $int<32>
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_122 ) $on bb_15_xx_x_crit_edgex_xi // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1420
    // ($cast ($uint<32>) iNsTr_122 )
    $intermediate $W[type_cast_3975_wire] : $int<32>
    // xx_xlcssa2
    $W[xx_xlcssa2_3972] : $int<32>
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_121 ) $on bb_15_xx_x_crit_edgex_xi // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1421
    // ($cast ($uint<32>) iNsTr_121 )
    $intermediate $W[type_cast_3979_wire] : $int<32>
    // xx_xlcssa1
    $W[xx_xlcssa1_3976] : $int<32>
    // 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_120 ) $on bb_15_xx_x_crit_edgex_xi // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1422
    // ($cast ($uint<32>) iNsTr_120 )
    $intermediate $W[type_cast_3983_wire] : $int<32>
    // xx_xlcssa
    $W[xx_xlcssa_3980] : $int<32>
    // 		maxDer := xx_xlcssa1
    //  file prog.linked.opt.aa, line 1424
    // maxDer
    $constant $W[STORE_maxDer_3985_word_address_0] : $pointer<memory_space_21> := _b0
    $W[STORE_maxDer_3985_data_0] : $int<32>
    // 		iNsTr_147 := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - xx_xlcssa3)
    //  file prog.linked.opt.aa, line 1425
    // iNsTr_147
    $W[iNsTr_147_3993] : $int<32>
    // 		iNsTr_148 := ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_147 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
    //  file prog.linked.opt.aa, line 1426
    // ($bitcast ($int<32>) iNsTr_147 )
    $intermediate $W[type_cast_3996_wire] : $int<32>
    // (($bitcast ($int<32>) iNsTr_147 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) ))
    $intermediate $W[ASHR_i32_i32_4000_wire] : $int<32>
    // iNsTr_148
    $W[iNsTr_148_4002] : $int<32>
    // 		iNsTr_149 := (($bitcast ($int<32>) xx_xlcssa1 ) > ($bitcast ($int<32>) iNsTr_148 ))
    //  file prog.linked.opt.aa, line 1427
    // ($bitcast ($int<32>) xx_xlcssa1 )
    $intermediate $W[type_cast_4005_wire] : $int<32>
    // ($bitcast ($int<32>) iNsTr_148 )
    $intermediate $W[type_cast_4007_wire] : $int<32>
    // iNsTr_149
    $W[iNsTr_149_4009] : $int<1>
    // 		iNsTr_150 := ($bitcast ($uint<32>) (($bitcast ($int<32>) xx_xlcssa1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
    //  file prog.linked.opt.aa, line 1428
    // ($bitcast ($int<32>) xx_xlcssa1 )
    $intermediate $W[type_cast_4012_wire] : $int<32>
    // (($bitcast ($int<32>) xx_xlcssa1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) ))
    $intermediate $W[ASHR_i32_i32_4016_wire] : $int<32>
    // iNsTr_150
    $W[iNsTr_150_4018] : $int<32>
    // 		iNsTr_151 := (($bitcast ($int<32>) iNsTr_150 ) < ($bitcast ($int<32>) iNsTr_147 ))
    //  file prog.linked.opt.aa, line 1429
    // ($bitcast ($int<32>) iNsTr_150 )
    $intermediate $W[type_cast_4021_wire] : $int<32>
    // ($bitcast ($int<32>) iNsTr_147 )
    $intermediate $W[type_cast_4023_wire] : $int<32>
    // iNsTr_151
    $W[iNsTr_151_4025] : $int<1>
    // 		orx_xcondx_xi11 := (iNsTr_149 & iNsTr_151)
    //  file prog.linked.opt.aa, line 1430
    // orx_xcondx_xi11
    $W[orx_xcondx_xi11_4030] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 1431
    // 		iNsTr_205 := (xx_xlcssa - xx_xlcssa2)
    //  file prog.linked.opt.aa, line 1438
    // iNsTr_205
    $W[iNsTr_205_4042] : $int<32>
    // 		isposx_xi := (($bitcast ($int<32>) iNsTr_205 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ))
    //  file prog.linked.opt.aa, line 1439
    // ($bitcast ($int<32>) iNsTr_205 )
    $intermediate $W[type_cast_4045_wire] : $int<32>
    // isposx_xi
    $W[isposx_xi_4050] : $int<1>
    // 		negx_xi := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_205)
    //  file prog.linked.opt.aa, line 1440
    // negx_xi
    $W[negx_xi_4056] : $int<32>
    // 		iNsTr_206 := ( $mux isposx_xi iNsTr_205  negx_xi ) 
    //  file prog.linked.opt.aa, line 1441
    // iNsTr_206
    $W[iNsTr_206_4062] : $int<32>
    // 		phitmpx_xi12 := (($bitcast ($int<32>) iNsTr_206 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000011101  ) ))
    //  file prog.linked.opt.aa, line 1442
    // ($bitcast ($int<32>) iNsTr_206 )
    $intermediate $W[type_cast_4065_wire] : $int<32>
    // phitmpx_xi12
    $W[phitmpx_xi12_4070] : $int<1>
    // merge-statement  
    //  file prog.linked.opt.aa, line 1444
    // 			$phi iNsTr_208 := 			  ($cast ($uint<1>) ($bitcast ($uint<1>) _b1  ) ) $on xx_x_crit_edgex_xi_blsCheckx_xexit			  ($cast ($uint<1>) phitmpx_xi12 ) $on bb_17_blsCheckx_xexit // type of target is $uint<1>
    //  file prog.linked.opt.aa, line 1445
    // ($cast ($uint<1>) phitmpx_xi12 )
    $intermediate $W[type_cast_4079_wire] : $int<1>
    // iNsTr_208
    $W[iNsTr_208_4073] : $int<1>
    // 		iNsTr_209 := (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) det_threshx_x1 ))
    //  file prog.linked.opt.aa, line 1447
    // ($bitcast ($int<32>) iNsTr_68 )
    $intermediate $W[type_cast_4083_wire] : $int<32>
    // ($bitcast ($int<32>) det_threshx_x1 )
    $intermediate $W[type_cast_4085_wire] : $int<32>
    // iNsTr_209
    $W[iNsTr_209_4087] : $int<1>
    // 		iNsTr_210 := (iNsTr_208 ^ ($bitcast ($uint<1>) _b1  ))
    //  file prog.linked.opt.aa, line 1448
    // iNsTr_210
    $W[iNsTr_210_4093] : $int<1>
    // 		iNsTr_211 := (iNsTr_209 & iNsTr_210)
    //  file prog.linked.opt.aa, line 1449
    // iNsTr_211
    $W[iNsTr_211_4098] : $int<1>
    // 		xx_xnot5 := (($bitcast ($int<32>) iNsTr_68 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
    //  file prog.linked.opt.aa, line 1450
    // ($bitcast ($int<32>) iNsTr_68 )
    $intermediate $W[type_cast_4101_wire] : $int<32>
    // xx_xnot5
    $W[xx_xnot5_4106] : $int<1>
    // 		orx_xcond := (xx_xnot5 | iNsTr_209)
    //  file prog.linked.opt.aa, line 1451
    // orx_xcond
    $W[orx_xcond_4111] : $int<1>
    // 		xx_xdemorgan := (orx_xcond | iNsTr_208)
    //  file prog.linked.opt.aa, line 1452
    // xx_xdemorgan
    $W[xx_xdemorgan_4116] : $int<1>
    // 		iNsTr_212 := (xx_xdemorgan ^ ($bitcast ($uint<1>) _b1  ))
    //  file prog.linked.opt.aa, line 1453
    // iNsTr_212
    $W[iNsTr_212_4122] : $int<1>
    // 		iNsTr_213 := (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) sbPeakx_x1 ))
    //  file prog.linked.opt.aa, line 1454
    // ($bitcast ($int<32>) iNsTr_68 )
    $intermediate $W[type_cast_4125_wire] : $int<32>
    // ($bitcast ($int<32>) sbPeakx_x1 )
    $intermediate $W[type_cast_4127_wire] : $int<32>
    // iNsTr_213
    $W[iNsTr_213_4129] : $int<1>
    // 		orx_xcond6 := (iNsTr_213 & iNsTr_212)
    //  file prog.linked.opt.aa, line 1455
    // orx_xcond6
    $W[orx_xcond6_4134] : $int<1>
    // 		iNsTr_214 := (($bitcast ($int<32>) iNsTr_85 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000001010111  ) ))
    //  file prog.linked.opt.aa, line 1456
    // ($bitcast ($int<32>) iNsTr_85 )
    $intermediate $W[type_cast_4137_wire] : $int<32>
    // iNsTr_214
    $W[iNsTr_214_4142] : $int<1>
    // 		iNsTr_215 := (orx_xcond6 & iNsTr_214)
    //  file prog.linked.opt.aa, line 1457
    // iNsTr_215
    $W[iNsTr_215_4147] : $int<1>
    // 		iNsTr_216 := ( $mux xx_xdemorgan noiseValx_x1  iNsTr_68 ) 
    //  file prog.linked.opt.aa, line 1458
    // iNsTr_216
    $W[iNsTr_216_4153] : $int<32>
    // if statement  
    //  file prog.linked.opt.aa, line 1459
    // 		iNsTr_223 := NOISEbuff_ptr
    //  file prog.linked.opt.aa, line 1466
    // NOISEbuff_ptr
    $W[LOAD_NOISEbuff_ptr_4162_data_0] : $int<32>
    // iNsTr_223
    $W[iNsTr_223_4163] : $int<32>
    // 		iNsTr_224 := @(NOISEbuff[iNsTr_223])
    //  file prog.linked.opt.aa, line 1467
    // @(NOISEbuff[iNsTr_223])
    $intermediate $W[R_iNsTr_223_4165_resized] : $int<5>
    $intermediate $W[R_iNsTr_223_4165_scaled] : $int<5>
    $intermediate $W[array_obj_ref_4166_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_4166_root_address] : $int<5>
    // iNsTr_224
    $W[iNsTr_224_4168] : $int<32>
    // 		->(iNsTr_224) := iNsTr_216
    //  file prog.linked.opt.aa, line 1468
    // ->(iNsTr_224)
    $intermediate $W[ptr_deref_4170_wire] : $int<32>
    $intermediate $W[ptr_deref_4170_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_4170_root_address] : $int<5>
    $W[ptr_deref_4170_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_4170_data_0] : $int<32>
    // 		iNsTr_226 := (iNsTr_223 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.linked.opt.aa, line 1469
    // iNsTr_226
    $W[iNsTr_226_4178] : $int<32>
    // 		iNsTr_227 := (iNsTr_223 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.linked.opt.aa, line 1470
    // iNsTr_227
    $W[iNsTr_227_4184] : $int<1>
    // 		maxx_xx_xix_xi8 := ( $mux iNsTr_227 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_226 ) 
    //  file prog.linked.opt.aa, line 1471
    // maxx_xx_xix_xi8
    $W[maxx_xx_xix_xi8_4191] : $int<32>
    // 		NOISEbuff_ptr := maxx_xx_xix_xi8
    //  file prog.linked.opt.aa, line 1472
    // NOISEbuff_ptr
    $constant $W[STORE_NOISEbuff_ptr_4192_word_address_0] : $pointer<memory_space_14> := _b0
    $W[STORE_NOISEbuff_ptr_4192_data_0] : $int<32>
    // 		$call meanCalc (iNsTr_229 ) (iNsTr_230 ) 
    //  file prog.linked.opt.aa, line 1474
    // iNsTr_230
    $W[iNsTr_230_4203] : $int<32>
    // 		iNsTr_231 := (qmeanx_x1 - iNsTr_230)
    //  file prog.linked.opt.aa, line 1475
    // iNsTr_231
    $W[iNsTr_231_4208] : $int<32>
    // 		iNsTr_232 := ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_231 ) )
    //  file prog.linked.opt.aa, line 1476
    // ($bitcast ($int<64>) iNsTr_231 )
    $intermediate $W[type_cast_4211_wire] : $int<64>
    // iNsTr_232
    $W[iNsTr_232_4213] : $float<11,52>
    // 		iNsTr_233 := threshold
    //  file prog.linked.opt.aa, line 1477
    // threshold
    $W[LOAD_threshold_4215_data_0] : $int<64>
    // iNsTr_233
    $W[iNsTr_233_4216] : $float<11,52>
    // 		iNsTr_234 := (iNsTr_233 * iNsTr_232)
    //  file prog.linked.opt.aa, line 1478
    // iNsTr_234
    $W[iNsTr_234_4221] : $float<11,52>
    // 		iNsTr_235 := ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_234 ) )
    //  file prog.linked.opt.aa, line 1479
    // ($cast ($int<32>) iNsTr_234 )
    $intermediate $W[type_cast_4224_wire] : $int<32>
    // iNsTr_235
    $W[iNsTr_235_4226] : $int<32>
    // 		iNsTr_236 := (iNsTr_235 + iNsTr_230)
    //  file prog.linked.opt.aa, line 1480
    // iNsTr_236
    $W[iNsTr_236_4231] : $int<32>
    // merge-statement  
    //  file prog.linked.opt.aa, line 1482
    // 			$phi nmeanx_x2 := 			  ($cast ($uint<32>) iNsTr_230 ) $on bb_19_bb_20			  ($cast ($uint<32>) nmeanx_x1 ) $on blsCheckx_xexit_bb_20 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1483
    // ($cast ($uint<32>) iNsTr_230 )
    $intermediate $W[type_cast_4237_wire] : $int<32>
    // ($cast ($uint<32>) nmeanx_x1 )
    $intermediate $W[type_cast_4239_wire] : $int<32>
    // nmeanx_x2
    $W[nmeanx_x2_4234] : $int<32>
    // 			$phi det_threshx_x2 := 			  ($cast ($uint<32>) iNsTr_236 ) $on bb_19_bb_20			  ($cast ($uint<32>) det_threshx_x1 ) $on blsCheckx_xexit_bb_20 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1484
    // ($cast ($uint<32>) iNsTr_236 )
    $intermediate $W[type_cast_4243_wire] : $int<32>
    // ($cast ($uint<32>) det_threshx_x1 )
    $intermediate $W[type_cast_4245_wire] : $int<32>
    // det_threshx_x2
    $W[det_threshx_x2_4240] : $int<32>
    // 		iNsTr_218 := ( $mux iNsTr_215 iNsTr_68  sbPeakx_x1 ) 
    //  file prog.linked.opt.aa, line 1486
    // iNsTr_218
    $W[iNsTr_218_4252] : $int<32>
    // 		iNsTr_219 := (countx_x0 + ($bitcast ($uint<32>) _b11111111111111111111111111110001  ))
    //  file prog.linked.opt.aa, line 1487
    // iNsTr_219
    $W[iNsTr_219_4258] : $int<32>
    // 		iNsTr_220 := ( $mux iNsTr_215 iNsTr_219  sbLocx_x1 ) 
    //  file prog.linked.opt.aa, line 1488
    // iNsTr_220
    $W[iNsTr_220_4264] : $int<32>
    // 		iNsTr_221 := (($bitcast ($int<32>) iNsTr_85 ) > ($bitcast ($int<32>) sb_countx_x1 ))
    //  file prog.linked.opt.aa, line 1489
    // ($bitcast ($int<32>) iNsTr_85 )
    $intermediate $W[type_cast_4267_wire] : $int<32>
    // ($bitcast ($int<32>) sb_countx_x1 )
    $intermediate $W[type_cast_4269_wire] : $int<32>
    // iNsTr_221
    $W[iNsTr_221_4271] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 1490
    // 		iNsTr_238 := ($bitcast ($uint<32>) (($bitcast ($int<32>) det_threshx_x2 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) )
    //  file prog.linked.opt.aa, line 1497
    // ($bitcast ($int<32>) det_threshx_x2 )
    $intermediate $W[type_cast_4281_wire] : $int<32>
    // (($bitcast ($int<32>) det_threshx_x2 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
    $intermediate $W[ASHR_i32_i32_4285_wire] : $int<32>
    // iNsTr_238
    $W[iNsTr_238_4287] : $int<32>
    // 		xx_xnot := (iNsTr_209 ^ ($bitcast ($uint<1>) _b1  ))
    //  file prog.linked.opt.aa, line 1498
    // xx_xnot
    $W[xx_xnot_4293] : $int<1>
    // 		iNsTr_239 := (iNsTr_208 | xx_xnot)
    //  file prog.linked.opt.aa, line 1499
    // iNsTr_239
    $W[iNsTr_239_4298] : $int<1>
    // 		iNsTr_240 := (($bitcast ($int<32>) iNsTr_218 ) > ($bitcast ($int<32>) iNsTr_238 ))
    //  file prog.linked.opt.aa, line 1500
    // ($bitcast ($int<32>) iNsTr_218 )
    $intermediate $W[type_cast_4301_wire] : $int<32>
    // ($bitcast ($int<32>) iNsTr_238 )
    $intermediate $W[type_cast_4303_wire] : $int<32>
    // iNsTr_240
    $W[iNsTr_240_4305] : $int<1>
    // 		xx_x := (iNsTr_240 & iNsTr_239)
    //  file prog.linked.opt.aa, line 1501
    // xx_x
    $W[xx_x_4310] : $int<1>
    // merge-statement  
    //  file prog.linked.opt.aa, line 1503
    // 			$phi iNsTr_242 := 			  ($cast ($uint<1>) ($bitcast ($uint<1>) _b0  ) ) $on bb_20_bb_22			  ($cast ($uint<1>) xx_x ) $on bb_21_bb_22 // type of target is $uint<1>
    //  file prog.linked.opt.aa, line 1504
    // ($cast ($uint<1>) xx_x )
    $intermediate $W[type_cast_4319_wire] : $int<1>
    // iNsTr_242
    $W[iNsTr_242_4313] : $int<1>
    // 		iNsTr_243 := (iNsTr_211 | iNsTr_242)
    //  file prog.linked.opt.aa, line 1506
    // iNsTr_243
    $W[iNsTr_243_4325] : $int<1>
    // 		iNsTr_244 := ( $mux iNsTr_211 iNsTr_68  qrsValx_x1 ) 
    //  file prog.linked.opt.aa, line 1507
    // iNsTr_244
    $W[iNsTr_244_4331] : $int<32>
    // 		iNsTr_245 := ( $mux iNsTr_211 iNsTr_219  rrValx_x1 ) 
    //  file prog.linked.opt.aa, line 1508
    // iNsTr_245
    $W[iNsTr_245_4337] : $int<32>
    // 		iNsTr_246 := ( $mux iNsTr_211 ($bitcast ($uint<32>) _b00000000000000000000000000010000  )  iNsTr_85 ) 
    //  file prog.linked.opt.aa, line 1509
    // iNsTr_246
    $W[iNsTr_246_4344] : $int<32>
    // 		iNsTr_247 := ( $mux iNsTr_242 iNsTr_218  iNsTr_244 ) 
    //  file prog.linked.opt.aa, line 1510
    // iNsTr_247
    $W[iNsTr_247_4350] : $int<32>
    // 		iNsTr_248 := ( $mux iNsTr_242 iNsTr_220  iNsTr_245 ) 
    //  file prog.linked.opt.aa, line 1511
    // iNsTr_248
    $W[iNsTr_248_4356] : $int<32>
    // if statement  
    //  file prog.linked.opt.aa, line 1512
    // 		iNsTr_277 := maxDer
    //  file prog.linked.opt.aa, line 1519
    // maxDer
    $W[LOAD_maxDer_4365_data_0] : $int<32>
    // iNsTr_277
    $W[iNsTr_277_4366] : $int<32>
    // 		iNsTr_250 := QRSbuff_ptr
    //  file prog.linked.opt.aa, line 1523
    // QRSbuff_ptr
    $W[LOAD_QRSbuff_ptr_4370_data_0] : $int<32>
    // iNsTr_250
    $W[iNsTr_250_4371] : $int<32>
    // 		iNsTr_251 := RRbuff_ptr
    //  file prog.linked.opt.aa, line 1524
    // RRbuff_ptr
    $W[LOAD_RRbuff_ptr_4373_data_0] : $int<32>
    // iNsTr_251
    $W[iNsTr_251_4374] : $int<32>
    // 		iNsTr_252 := @(QRSbuff[iNsTr_250])
    //  file prog.linked.opt.aa, line 1525
    // @(QRSbuff[iNsTr_250])
    $intermediate $W[R_iNsTr_250_4376_resized] : $int<5>
    $intermediate $W[R_iNsTr_250_4376_scaled] : $int<5>
    $intermediate $W[array_obj_ref_4377_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_4377_root_address] : $int<5>
    // iNsTr_252
    $W[iNsTr_252_4379] : $int<32>
    // 		->(iNsTr_252) := iNsTr_247
    //  file prog.linked.opt.aa, line 1526
    // ->(iNsTr_252)
    $intermediate $W[ptr_deref_4381_wire] : $int<32>
    $intermediate $W[ptr_deref_4381_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_4381_root_address] : $int<5>
    $W[ptr_deref_4381_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_4381_data_0] : $int<32>
    // 		iNsTr_254 := @(RRbuff[iNsTr_251])
    //  file prog.linked.opt.aa, line 1527
    // @(RRbuff[iNsTr_251])
    $intermediate $W[R_iNsTr_251_4385_resized] : $int<5>
    $intermediate $W[R_iNsTr_251_4385_scaled] : $int<5>
    $intermediate $W[array_obj_ref_4386_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_4386_root_address] : $int<5>
    // iNsTr_254
    $W[iNsTr_254_4388] : $int<32>
    // 		->(iNsTr_254) := iNsTr_248
    //  file prog.linked.opt.aa, line 1528
    // ->(iNsTr_254)
    $intermediate $W[ptr_deref_4390_wire] : $int<32>
    $intermediate $W[ptr_deref_4390_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_4390_root_address] : $int<5>
    $W[ptr_deref_4390_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_4390_data_0] : $int<32>
    // 		iNsTr_256 := (iNsTr_250 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.linked.opt.aa, line 1529
    // iNsTr_256
    $W[iNsTr_256_4398] : $int<32>
    // 		iNsTr_257 := (iNsTr_250 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.linked.opt.aa, line 1530
    // iNsTr_257
    $W[iNsTr_257_4404] : $int<1>
    // 		maxx_xx_xix_xi := ( $mux iNsTr_257 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_256 ) 
    //  file prog.linked.opt.aa, line 1531
    // maxx_xx_xix_xi
    $W[maxx_xx_xix_xi_4411] : $int<32>
    // 		QRSbuff_ptr := maxx_xx_xix_xi
    //  file prog.linked.opt.aa, line 1532
    // QRSbuff_ptr
    $constant $W[STORE_QRSbuff_ptr_4412_word_address_0] : $pointer<memory_space_15> := _b0
    $W[STORE_QRSbuff_ptr_4412_data_0] : $int<32>
    // 		iNsTr_259 := (iNsTr_251 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.linked.opt.aa, line 1533
    // iNsTr_259
    $W[iNsTr_259_4420] : $int<32>
    // 		iNsTr_260 := (iNsTr_251 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.linked.opt.aa, line 1534
    // iNsTr_260
    $W[iNsTr_260_4426] : $int<1>
    // 		maxx_xx_xi1x_xi := ( $mux iNsTr_260 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_259 ) 
    //  file prog.linked.opt.aa, line 1535
    // maxx_xx_xi1x_xi
    $W[maxx_xx_xi1x_xi_4433] : $int<32>
    // 		RRbuff_ptr := maxx_xx_xi1x_xi
    //  file prog.linked.opt.aa, line 1536
    // RRbuff_ptr
    $constant $W[STORE_RRbuff_ptr_4434_word_address_0] : $pointer<memory_space_16> := _b0
    $W[STORE_RRbuff_ptr_4434_data_0] : $int<32>
    // 		$call meanCalc (iNsTr_262 ) (iNsTr_263 ) 
    //  file prog.linked.opt.aa, line 1538
    // iNsTr_263
    $W[iNsTr_263_4445] : $int<32>
    // 		$call meanCalc (iNsTr_264 ) (iNsTr_265 ) 
    //  file prog.linked.opt.aa, line 1540
    // iNsTr_265
    $W[iNsTr_265_4454] : $int<32>
    // 		iNsTr_266 := (iNsTr_263 - nmeanx_x2)
    //  file prog.linked.opt.aa, line 1541
    // iNsTr_266
    $W[iNsTr_266_4459] : $int<32>
    // 		iNsTr_267 := ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_266 ) )
    //  file prog.linked.opt.aa, line 1542
    // ($bitcast ($int<64>) iNsTr_266 )
    $intermediate $W[type_cast_4462_wire] : $int<64>
    // iNsTr_267
    $W[iNsTr_267_4464] : $float<11,52>
    // 		iNsTr_268 := threshold
    //  file prog.linked.opt.aa, line 1543
    // threshold
    $W[LOAD_threshold_4466_data_0] : $int<64>
    // iNsTr_268
    $W[iNsTr_268_4467] : $float<11,52>
    // 		iNsTr_269 := (iNsTr_268 * iNsTr_267)
    //  file prog.linked.opt.aa, line 1544
    // iNsTr_269
    $W[iNsTr_269_4472] : $float<11,52>
    // 		iNsTr_270 := ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_269 ) )
    //  file prog.linked.opt.aa, line 1545
    // ($cast ($int<32>) iNsTr_269 )
    $intermediate $W[type_cast_4475_wire] : $int<32>
    // iNsTr_270
    $W[iNsTr_270_4477] : $int<32>
    // 		iNsTr_271 := (iNsTr_270 + nmeanx_x2)
    //  file prog.linked.opt.aa, line 1546
    // iNsTr_271
    $W[iNsTr_271_4482] : $int<32>
    // 		iNsTr_272 := maxDer
    //  file prog.linked.opt.aa, line 1547
    // maxDer
    $W[LOAD_maxDer_4484_data_0] : $int<32>
    // iNsTr_272
    $W[iNsTr_272_4485] : $int<32>
    // 		iNsTr_273 := ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_265 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) )
    //  file prog.linked.opt.aa, line 1548
    // ($bitcast ($int<32>) iNsTr_265 )
    $intermediate $W[type_cast_4488_wire] : $int<32>
    // (($bitcast ($int<32>) iNsTr_265 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
    $intermediate $W[ASHR_i32_i32_4492_wire] : $int<32>
    // iNsTr_273
    $W[iNsTr_273_4494] : $int<32>
    // 		iNsTr_274 := (iNsTr_265 + ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
    //  file prog.linked.opt.aa, line 1549
    // iNsTr_274
    $W[iNsTr_274_4500] : $int<32>
    // 		iNsTr_275 := (iNsTr_274 + iNsTr_273)
    //  file prog.linked.opt.aa, line 1550
    // iNsTr_275
    $W[iNsTr_275_4505] : $int<32>
    // merge-statement  
    //  file prog.linked.opt.aa, line 1552
    // 			$phi iNsTr_279 := 			  ($cast ($uint<32>) iNsTr_272 ) $on bb_24_bb_25			  ($cast ($uint<32>) iNsTr_277 ) $on xx_xthread27_bb_25 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1553
    // ($cast ($uint<32>) iNsTr_272 )
    $intermediate $W[type_cast_4511_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_277 )
    $intermediate $W[type_cast_4513_wire] : $int<32>
    // iNsTr_279
    $W[iNsTr_279_4508] : $int<32>
    // 			$phi det_threshx_x325 := 			  ($cast ($uint<32>) iNsTr_271 ) $on bb_24_bb_25			  ($cast ($uint<32>) det_threshx_x2 ) $on xx_xthread27_bb_25 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1554
    // ($cast ($uint<32>) iNsTr_271 )
    $intermediate $W[type_cast_4517_wire] : $int<32>
    // ($cast ($uint<32>) det_threshx_x2 )
    $intermediate $W[type_cast_4519_wire] : $int<32>
    // det_threshx_x325
    $W[det_threshx_x325_4514] : $int<32>
    // 			$phi qmeanx_x223 := 			  ($cast ($uint<32>) iNsTr_263 ) $on bb_24_bb_25			  ($cast ($uint<32>) qmeanx_x1 ) $on xx_xthread27_bb_25 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1555
    // ($cast ($uint<32>) iNsTr_263 )
    $intermediate $W[type_cast_4523_wire] : $int<32>
    // ($cast ($uint<32>) qmeanx_x1 )
    $intermediate $W[type_cast_4525_wire] : $int<32>
    // qmeanx_x223
    $W[qmeanx_x223_4520] : $int<32>
    // 			$phi iNsTr_280 := 			  ($cast ($uint<32>) iNsTr_275 ) $on bb_24_bb_25			  ($cast ($uint<32>) sb_countx_x1 ) $on xx_xthread27_bb_25 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1556
    // ($cast ($uint<32>) iNsTr_275 )
    $intermediate $W[type_cast_4529_wire] : $int<32>
    // ($cast ($uint<32>) sb_countx_x1 )
    $intermediate $W[type_cast_4531_wire] : $int<32>
    // iNsTr_280
    $W[iNsTr_280_4526] : $int<32>
    // 		iNsTr_281 := ( $mux iNsTr_242 iNsTr_220  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
    //  file prog.linked.opt.aa, line 1558
    // iNsTr_281
    $W[iNsTr_281_4539] : $int<32>
    // 		xx_x7 := (iNsTr_246 - iNsTr_281)
    //  file prog.linked.opt.aa, line 1559
    // xx_x7
    $W[xx_x7_4544] : $int<32>
    // if statement  
    //  file prog.linked.opt.aa, line 1560
    // 		iNsTr_283 := (xx_x7 + ($bitcast ($uint<32>) _b00000000000000000000000000111000  ))
    //  file prog.linked.opt.aa, line 1567
    // iNsTr_283
    $W[iNsTr_283_4557] : $int<32>
    // 		iNsTr_285 := ( $mux iNsTr_211 ($bitcast ($uint<32>) _b00000000000000000000000001001000  )  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
    //  file prog.linked.opt.aa, line 1571
    // iNsTr_285
    $W[iNsTr_285_4567] : $int<32>
    // merge-statement  
    //  file prog.linked.opt.aa, line 1573
    // 			$phi iNsTr_287 := 			  ($cast ($uint<32>) iNsTr_283 ) $on bb_26_bb_28			  ($cast ($uint<32>) iNsTr_285 ) $on bb_27_bb_28 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1574
    // ($cast ($uint<32>) iNsTr_283 )
    $intermediate $W[type_cast_4573_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_285 )
    $intermediate $W[type_cast_4575_wire] : $int<32>
    // iNsTr_287
    $W[iNsTr_287_4570] : $int<32>
    // 		iNsTr_288 := ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_218 ) 
    //  file prog.linked.opt.aa, line 1576
    // iNsTr_288
    $W[iNsTr_288_4583] : $int<32>
    // 		iNsTr_289 := ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_279 ) 
    //  file prog.linked.opt.aa, line 1577
    // iNsTr_289
    $W[iNsTr_289_4590] : $int<32>
    // 		maxDer := iNsTr_289
    //  file prog.linked.opt.aa, line 1578
    // maxDer
    $constant $W[STORE_maxDer_4591_word_address_0] : $pointer<memory_space_21> := _b0
    $W[STORE_maxDer_4591_data_0] : $int<32>
    // 		iNsTr_291 := ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initBlankx_x1 ) 
    //  file prog.linked.opt.aa, line 1579
    // iNsTr_291
    $W[iNsTr_291_4600] : $int<32>
    // 		iNsTr_292 := ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initMaxx_x1 ) 
    //  file prog.linked.opt.aa, line 1580
    // iNsTr_292
    $W[iNsTr_292_4607] : $int<32>
    // 		iNsTr_293 := ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  rset_countx_x1 ) 
    //  file prog.linked.opt.aa, line 1581
    // iNsTr_293
    $W[iNsTr_293_4614] : $int<32>
    // merge-statement  
    //  file prog.linked.opt.aa, line 1583
    // 			$phi QRSdelayx_x0 := 			  ($cast ($uint<32>) iNsTr_287 ) $on bb_28_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_14_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1584
    // ($cast ($uint<32>) iNsTr_287 )
    $intermediate $W[type_cast_4620_wire] : $int<32>
    // QRSdelayx_x0
    $W[QRSdelayx_x0_4617] : $int<32>
    // 			$phi init8Done_nextx_x0 := 			  ($cast ($uint<8>) init8Done_nextx_x1 ) $on bb_28_bb_29			  ($cast ($uint<8>) iNsTr_101 ) $on bb_14_bb_29			  ($cast ($uint<8>) iNsTr_101 ) $on bb_13_bb_29 // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 1585
    // ($cast ($uint<8>) init8Done_nextx_x1 )
    $intermediate $W[type_cast_4630_wire] : $int<8>
    // ($cast ($uint<8>) iNsTr_101 )
    $intermediate $W[type_cast_4632_wire] : $int<8>
    // ($cast ($uint<8>) iNsTr_101 )
    $intermediate $W[type_cast_4634_wire] : $int<8>
    // init8Done_nextx_x0
    $W[init8Done_nextx_x0_4627] : $int<8>
    // 			$phi noiseValx_x0 := 			  ($cast ($uint<32>) iNsTr_216 ) $on bb_28_bb_29			  ($cast ($uint<32>) noiseValx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) noiseValx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1586
    // ($cast ($uint<32>) iNsTr_216 )
    $intermediate $W[type_cast_4638_wire] : $int<32>
    // ($cast ($uint<32>) noiseValx_x1 )
    $intermediate $W[type_cast_4640_wire] : $int<32>
    // ($cast ($uint<32>) noiseValx_x1 )
    $intermediate $W[type_cast_4642_wire] : $int<32>
    // noiseValx_x0
    $W[noiseValx_x0_4635] : $int<32>
    // 			$phi rrValx_x0 := 			  ($cast ($uint<32>) iNsTr_248 ) $on bb_28_bb_29			  ($cast ($uint<32>) rrValx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) rrValx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1587
    // ($cast ($uint<32>) iNsTr_248 )
    $intermediate $W[type_cast_4646_wire] : $int<32>
    // ($cast ($uint<32>) rrValx_x1 )
    $intermediate $W[type_cast_4648_wire] : $int<32>
    // ($cast ($uint<32>) rrValx_x1 )
    $intermediate $W[type_cast_4650_wire] : $int<32>
    // rrValx_x0
    $W[rrValx_x0_4643] : $int<32>
    // 			$phi qrsValx_x0 := 			  ($cast ($uint<32>) iNsTr_247 ) $on bb_28_bb_29			  ($cast ($uint<32>) qrsValx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) qrsValx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1588
    // ($cast ($uint<32>) iNsTr_247 )
    $intermediate $W[type_cast_4654_wire] : $int<32>
    // ($cast ($uint<32>) qrsValx_x1 )
    $intermediate $W[type_cast_4656_wire] : $int<32>
    // ($cast ($uint<32>) qrsValx_x1 )
    $intermediate $W[type_cast_4658_wire] : $int<32>
    // qrsValx_x0
    $W[qrsValx_x0_4651] : $int<32>
    // 			$phi nmeanx_x0 := 			  ($cast ($uint<32>) nmeanx_x2 ) $on bb_28_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_14_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1589
    // ($cast ($uint<32>) nmeanx_x2 )
    $intermediate $W[type_cast_4662_wire] : $int<32>
    // nmeanx_x0
    $W[nmeanx_x0_4659] : $int<32>
    // 			$phi qmeanx_x0 := 			  ($cast ($uint<32>) qmeanx_x223 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_107 ) $on bb_14_bb_29			  ($cast ($uint<32>) qmeanx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1590
    // ($cast ($uint<32>) qmeanx_x223 )
    $intermediate $W[type_cast_4672_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_107 )
    $intermediate $W[type_cast_4674_wire] : $int<32>
    // ($cast ($uint<32>) qmeanx_x1 )
    $intermediate $W[type_cast_4676_wire] : $int<32>
    // qmeanx_x0
    $W[qmeanx_x0_4669] : $int<32>
    // 			$phi sbLocx_x0 := 			  ($cast ($uint<32>) iNsTr_220 ) $on bb_28_bb_29			  ($cast ($uint<32>) sbLocx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) sbLocx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1591
    // ($cast ($uint<32>) iNsTr_220 )
    $intermediate $W[type_cast_4680_wire] : $int<32>
    // ($cast ($uint<32>) sbLocx_x1 )
    $intermediate $W[type_cast_4682_wire] : $int<32>
    // ($cast ($uint<32>) sbLocx_x1 )
    $intermediate $W[type_cast_4684_wire] : $int<32>
    // sbLocx_x0
    $W[sbLocx_x0_4677] : $int<32>
    // 			$phi sb_countx_x0 := 			  ($cast ($uint<32>) iNsTr_280 ) $on bb_28_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000101001010  ) ) $on bb_14_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000101001010  ) ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1592
    // ($cast ($uint<32>) iNsTr_280 )
    $intermediate $W[type_cast_4688_wire] : $int<32>
    // sb_countx_x0
    $W[sb_countx_x0_4685] : $int<32>
    // 			$phi det_threshx_x0 := 			  ($cast ($uint<32>) det_threshx_x325 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_111 ) $on bb_14_bb_29			  ($cast ($uint<32>) det_threshx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1593
    // ($cast ($uint<32>) det_threshx_x325 )
    $intermediate $W[type_cast_4698_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_111 )
    $intermediate $W[type_cast_4700_wire] : $int<32>
    // ($cast ($uint<32>) det_threshx_x1 )
    $intermediate $W[type_cast_4702_wire] : $int<32>
    // det_threshx_x0
    $W[det_threshx_x0_4695] : $int<32>
    // 			$phi initMaxx_x0 := 			  ($cast ($uint<32>) iNsTr_292 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_103 ) $on bb_14_bb_29			  ($cast ($uint<32>) iNsTr_103 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1594
    // ($cast ($uint<32>) iNsTr_292 )
    $intermediate $W[type_cast_4706_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_103 )
    $intermediate $W[type_cast_4708_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_103 )
    $intermediate $W[type_cast_4710_wire] : $int<32>
    // initMaxx_x0
    $W[initMaxx_x0_4703] : $int<32>
    // 			$phi rset_countx_x0 := 			  ($cast ($uint<32>) iNsTr_293 ) $on bb_28_bb_29			  ($cast ($uint<32>) rset_countx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) rset_countx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1595
    // ($cast ($uint<32>) iNsTr_293 )
    $intermediate $W[type_cast_4714_wire] : $int<32>
    // ($cast ($uint<32>) rset_countx_x1 )
    $intermediate $W[type_cast_4716_wire] : $int<32>
    // ($cast ($uint<32>) rset_countx_x1 )
    $intermediate $W[type_cast_4718_wire] : $int<32>
    // rset_countx_x0
    $W[rset_countx_x0_4711] : $int<32>
    // 			$phi initBlankx_x0 := 			  ($cast ($uint<32>) iNsTr_291 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_93 ) $on bb_14_bb_29			  ($cast ($uint<32>) iNsTr_93 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1596
    // ($cast ($uint<32>) iNsTr_291 )
    $intermediate $W[type_cast_4722_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_93 )
    $intermediate $W[type_cast_4724_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_93 )
    $intermediate $W[type_cast_4726_wire] : $int<32>
    // initBlankx_x0
    $W[initBlankx_x0_4719] : $int<32>
    // 			$phi countx_x1 := 			  ($cast ($uint<32>) xx_x7 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_92 ) $on bb_14_bb_29			  ($cast ($uint<32>) iNsTr_92 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1597
    // ($cast ($uint<32>) xx_x7 )
    $intermediate $W[type_cast_4730_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_92 )
    $intermediate $W[type_cast_4732_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_92 )
    $intermediate $W[type_cast_4734_wire] : $int<32>
    // countx_x1
    $W[countx_x1_4727] : $int<32>
    // 			$phi qpk_countx_x0 := 			  ($cast ($uint<32>) qpk_countx_x1 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_98 ) $on bb_14_bb_29			  ($cast ($uint<32>) iNsTr_98 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1598
    // ($cast ($uint<32>) qpk_countx_x1 )
    $intermediate $W[type_cast_4738_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_98 )
    $intermediate $W[type_cast_4740_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_98 )
    $intermediate $W[type_cast_4742_wire] : $int<32>
    // qpk_countx_x0
    $W[qpk_countx_x0_4735] : $int<32>
    // 			$phi sbPeakx_x0 := 			  ($cast ($uint<32>) iNsTr_288 ) $on bb_28_bb_29			  ($cast ($uint<32>) sbPeakx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) sbPeakx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1599
    // ($cast ($uint<32>) iNsTr_288 )
    $intermediate $W[type_cast_4746_wire] : $int<32>
    // ($cast ($uint<32>) sbPeakx_x1 )
    $intermediate $W[type_cast_4748_wire] : $int<32>
    // ($cast ($uint<32>) sbPeakx_x1 )
    $intermediate $W[type_cast_4750_wire] : $int<32>
    // sbPeakx_x0
    $W[sbPeakx_x0_4743] : $int<32>
    // 		iNsTr_113 := (init8Done_nextx_x0 == ($bitcast ($uint<8>) _b00000000  ))
    //  file prog.linked.opt.aa, line 1601
    // iNsTr_113
    $W[iNsTr_113_4757] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 1602
    // 		iNsTr_132 := (initBlankx_x0 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1609
    // iNsTr_132
    $W[iNsTr_132_4770] : $int<32>
    // 		iNsTr_133 := (iNsTr_132 == ($bitcast ($uint<32>) _b00000000000000000000000011001000  ))
    //  file prog.linked.opt.aa, line 1610
    // iNsTr_133
    $W[iNsTr_133_4776] : $int<1>
    // 		iNsTr_134 := ( $mux iNsTr_133 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_132 ) 
    //  file prog.linked.opt.aa, line 1611
    // iNsTr_134
    $W[iNsTr_134_4783] : $int<32>
    // 		iNsTr_135 := RSETbuff[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][rset_countx_x0]
    //  file prog.linked.opt.aa, line 1612
    // RSETbuff[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][rset_countx_x0]
    $intermediate $W[R_rset_countx_x0_4787_resized] : $int<4>
    $intermediate $W[R_rset_countx_x0_4787_scaled] : $int<4>
    $intermediate $W[array_obj_ref_4788_final_offset] : $int<4>
    $intermediate $W[array_obj_ref_4788_root_address] : $int<4>
    // iNsTr_135
    $W[iNsTr_135_4789] : $int<32>
    // 		->(iNsTr_135) := initMaxx_x0
    //  file prog.linked.opt.aa, line 1613
    // ->(iNsTr_135)
    $intermediate $W[ptr_deref_4791_wire] : $int<32>
    $intermediate $W[ptr_deref_4791_resized_base_address] : $int<4>
    $intermediate $W[ptr_deref_4791_root_address] : $int<4>
    $W[ptr_deref_4791_word_address_0] : $pointer<qrsDet/memory_space_26>
    $W[ptr_deref_4791_data_0] : $int<32>
    // 		iNsTr_137 := ( $mux iNsTr_133 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initMaxx_x0 ) 
    //  file prog.linked.opt.aa, line 1614
    // iNsTr_137
    $W[iNsTr_137_4800] : $int<32>
    // 		iNsTr_138 := ($cast ($uint<32>) iNsTr_133 )
    //  file prog.linked.opt.aa, line 1615
    // iNsTr_138
    $W[iNsTr_138_4804] : $int<32>
    // 		iNsTr_139 := (iNsTr_138 + rset_countx_x0)
    //  file prog.linked.opt.aa, line 1616
    // iNsTr_139
    $W[iNsTr_139_4809] : $int<32>
    // 		iNsTr_140 := (iNsTr_139 == ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
    //  file prog.linked.opt.aa, line 1617
    // iNsTr_140
    $W[iNsTr_140_4815] : $int<1>
    // 		iNsTr_141 := ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  nmeanx_x0 ) 
    //  file prog.linked.opt.aa, line 1618
    // iNsTr_141
    $W[iNsTr_141_4822] : $int<32>
    // 		iNsTr_142 := ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000101001010  )  sb_countx_x0 ) 
    //  file prog.linked.opt.aa, line 1619
    // iNsTr_142
    $W[iNsTr_142_4829] : $int<32>
    // 		iNsTr_143 := ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_134 ) 
    //  file prog.linked.opt.aa, line 1620
    // iNsTr_143
    $W[iNsTr_143_4836] : $int<32>
    // 		iNsTr_144 := ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_139 ) 
    //  file prog.linked.opt.aa, line 1621
    // iNsTr_144
    $W[iNsTr_144_4843] : $int<32>
    // if statement  
    //  file prog.linked.opt.aa, line 1622
    // 		iNsTr_153 := ->(scevgep)
    //  file prog.linked.opt.aa, line 1630
    // ->(scevgep)
    $intermediate $W[ptr_deref_4860_resized_base_address] : $int<4>
    $intermediate $W[ptr_deref_4860_root_address] : $int<4>
    $W[ptr_deref_4860_word_address_0] : $pointer<qrsDet/memory_space_26>
    $W[ptr_deref_4860_data_0] : $int<32>
    // iNsTr_153
    $W[iNsTr_153_4861] : $int<32>
    // 		->(iNsTr_154) := iNsTr_153
    //  file prog.linked.opt.aa, line 1632
    // ->(iNsTr_154)
    $intermediate $W[ptr_deref_4869_wire] : $int<32>
    $intermediate $W[ptr_deref_4869_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_4869_root_address] : $int<5>
    $W[ptr_deref_4869_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_4869_data_0] : $int<32>
    // 		->(iNsTr_156) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1634
    // ->(iNsTr_156)
    $intermediate $W[ptr_deref_4879_wire] : $int<32>
    $intermediate $W[ptr_deref_4879_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_4879_root_address] : $int<5>
    $W[ptr_deref_4879_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_4879_data_0] : $int<32>
    // 		iNsTr_158 := ->(scevgepx_x1)
    //  file prog.linked.opt.aa, line 1636
    // ->(scevgepx_x1)
    $intermediate $W[ptr_deref_4892_resized_base_address] : $int<4>
    $intermediate $W[ptr_deref_4892_root_address] : $int<4>
    $W[ptr_deref_4892_word_address_0] : $pointer<qrsDet/memory_space_26>
    $W[ptr_deref_4892_data_0] : $int<32>
    // iNsTr_158
    $W[iNsTr_158_4893] : $int<32>
    // 		->(iNsTr_159) := iNsTr_158
    //  file prog.linked.opt.aa, line 1638
    // ->(iNsTr_159)
    $intermediate $W[ptr_deref_4901_wire] : $int<32>
    $intermediate $W[ptr_deref_4901_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_4901_root_address] : $int<5>
    $W[ptr_deref_4901_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_4901_data_0] : $int<32>
    // 		->(iNsTr_161) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1640
    // ->(iNsTr_161)
    $intermediate $W[ptr_deref_4911_wire] : $int<32>
    $intermediate $W[ptr_deref_4911_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_4911_root_address] : $int<5>
    $W[ptr_deref_4911_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_4911_data_0] : $int<32>
    // 		iNsTr_163 := ->(scevgepx_x2)
    //  file prog.linked.opt.aa, line 1642
    // ->(scevgepx_x2)
    $intermediate $W[ptr_deref_4924_resized_base_address] : $int<4>
    $intermediate $W[ptr_deref_4924_root_address] : $int<4>
    $W[ptr_deref_4924_word_address_0] : $pointer<qrsDet/memory_space_26>
    $W[ptr_deref_4924_data_0] : $int<32>
    // iNsTr_163
    $W[iNsTr_163_4925] : $int<32>
    // 		->(iNsTr_164) := iNsTr_163
    //  file prog.linked.opt.aa, line 1644
    // ->(iNsTr_164)
    $intermediate $W[ptr_deref_4933_wire] : $int<32>
    $intermediate $W[ptr_deref_4933_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_4933_root_address] : $int<5>
    $W[ptr_deref_4933_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_4933_data_0] : $int<32>
    // 		->(iNsTr_166) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1646
    // ->(iNsTr_166)
    $intermediate $W[ptr_deref_4943_wire] : $int<32>
    $intermediate $W[ptr_deref_4943_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_4943_root_address] : $int<5>
    $W[ptr_deref_4943_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_4943_data_0] : $int<32>
    // 		iNsTr_168 := ->(scevgepx_x3)
    //  file prog.linked.opt.aa, line 1648
    // ->(scevgepx_x3)
    $intermediate $W[ptr_deref_4956_resized_base_address] : $int<4>
    $intermediate $W[ptr_deref_4956_root_address] : $int<4>
    $W[ptr_deref_4956_word_address_0] : $pointer<qrsDet/memory_space_26>
    $W[ptr_deref_4956_data_0] : $int<32>
    // iNsTr_168
    $W[iNsTr_168_4957] : $int<32>
    // 		->(iNsTr_169) := iNsTr_168
    //  file prog.linked.opt.aa, line 1650
    // ->(iNsTr_169)
    $intermediate $W[ptr_deref_4965_wire] : $int<32>
    $intermediate $W[ptr_deref_4965_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_4965_root_address] : $int<5>
    $W[ptr_deref_4965_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_4965_data_0] : $int<32>
    // 		->(iNsTr_171) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1652
    // ->(iNsTr_171)
    $intermediate $W[ptr_deref_4975_wire] : $int<32>
    $intermediate $W[ptr_deref_4975_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_4975_root_address] : $int<5>
    $W[ptr_deref_4975_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_4975_data_0] : $int<32>
    // 		iNsTr_173 := ->(scevgepx_x4)
    //  file prog.linked.opt.aa, line 1654
    // ->(scevgepx_x4)
    $intermediate $W[ptr_deref_4988_resized_base_address] : $int<4>
    $intermediate $W[ptr_deref_4988_root_address] : $int<4>
    $W[ptr_deref_4988_word_address_0] : $pointer<qrsDet/memory_space_26>
    $W[ptr_deref_4988_data_0] : $int<32>
    // iNsTr_173
    $W[iNsTr_173_4989] : $int<32>
    // 		->(iNsTr_174) := iNsTr_173
    //  file prog.linked.opt.aa, line 1656
    // ->(iNsTr_174)
    $intermediate $W[ptr_deref_4997_wire] : $int<32>
    $intermediate $W[ptr_deref_4997_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_4997_root_address] : $int<5>
    $W[ptr_deref_4997_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_4997_data_0] : $int<32>
    // 		->(iNsTr_176) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1658
    // ->(iNsTr_176)
    $intermediate $W[ptr_deref_5007_wire] : $int<32>
    $intermediate $W[ptr_deref_5007_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_5007_root_address] : $int<5>
    $W[ptr_deref_5007_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_5007_data_0] : $int<32>
    // 		iNsTr_178 := ->(scevgepx_x5)
    //  file prog.linked.opt.aa, line 1660
    // ->(scevgepx_x5)
    $intermediate $W[ptr_deref_5020_resized_base_address] : $int<4>
    $intermediate $W[ptr_deref_5020_root_address] : $int<4>
    $W[ptr_deref_5020_word_address_0] : $pointer<qrsDet/memory_space_26>
    $W[ptr_deref_5020_data_0] : $int<32>
    // iNsTr_178
    $W[iNsTr_178_5021] : $int<32>
    // 		->(iNsTr_179) := iNsTr_178
    //  file prog.linked.opt.aa, line 1662
    // ->(iNsTr_179)
    $intermediate $W[ptr_deref_5029_wire] : $int<32>
    $intermediate $W[ptr_deref_5029_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_5029_root_address] : $int<5>
    $W[ptr_deref_5029_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_5029_data_0] : $int<32>
    // 		->(iNsTr_181) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1664
    // ->(iNsTr_181)
    $intermediate $W[ptr_deref_5039_wire] : $int<32>
    $intermediate $W[ptr_deref_5039_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_5039_root_address] : $int<5>
    $W[ptr_deref_5039_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_5039_data_0] : $int<32>
    // 		iNsTr_183 := ->(scevgepx_x6)
    //  file prog.linked.opt.aa, line 1666
    // ->(scevgepx_x6)
    $intermediate $W[ptr_deref_5052_resized_base_address] : $int<4>
    $intermediate $W[ptr_deref_5052_root_address] : $int<4>
    $W[ptr_deref_5052_word_address_0] : $pointer<qrsDet/memory_space_26>
    $W[ptr_deref_5052_data_0] : $int<32>
    // iNsTr_183
    $W[iNsTr_183_5053] : $int<32>
    // 		->(iNsTr_184) := iNsTr_183
    //  file prog.linked.opt.aa, line 1668
    // ->(iNsTr_184)
    $intermediate $W[ptr_deref_5061_wire] : $int<32>
    $intermediate $W[ptr_deref_5061_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_5061_root_address] : $int<5>
    $W[ptr_deref_5061_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_5061_data_0] : $int<32>
    // 		->(iNsTr_186) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1670
    // ->(iNsTr_186)
    $intermediate $W[ptr_deref_5071_wire] : $int<32>
    $intermediate $W[ptr_deref_5071_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_5071_root_address] : $int<5>
    $W[ptr_deref_5071_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_5071_data_0] : $int<32>
    // 		iNsTr_188 := ->(scevgepx_x7)
    //  file prog.linked.opt.aa, line 1672
    // ->(scevgepx_x7)
    $intermediate $W[ptr_deref_5084_resized_base_address] : $int<4>
    $intermediate $W[ptr_deref_5084_root_address] : $int<4>
    $W[ptr_deref_5084_word_address_0] : $pointer<qrsDet/memory_space_26>
    $W[ptr_deref_5084_data_0] : $int<32>
    // iNsTr_188
    $W[iNsTr_188_5085] : $int<32>
    // 		->(iNsTr_189) := iNsTr_188
    //  file prog.linked.opt.aa, line 1674
    // ->(iNsTr_189)
    $intermediate $W[ptr_deref_5093_wire] : $int<32>
    $intermediate $W[ptr_deref_5093_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_5093_root_address] : $int<5>
    $W[ptr_deref_5093_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_5093_data_0] : $int<32>
    // 		->(iNsTr_191) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1676
    // ->(iNsTr_191)
    $intermediate $W[ptr_deref_5103_wire] : $int<32>
    $intermediate $W[ptr_deref_5103_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_5103_root_address] : $int<5>
    $W[ptr_deref_5103_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_5103_data_0] : $int<32>
    // 		$call meanCalc (iNsTr_193 ) (iNsTr_194 ) 
    //  file prog.linked.opt.aa, line 1678
    // iNsTr_194
    $W[iNsTr_194_5115] : $int<32>
    // 		iNsTr_195 := (iNsTr_194 - iNsTr_141)
    //  file prog.linked.opt.aa, line 1679
    // iNsTr_195
    $W[iNsTr_195_5120] : $int<32>
    // 		iNsTr_196 := ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_195 ) )
    //  file prog.linked.opt.aa, line 1680
    // ($bitcast ($int<64>) iNsTr_195 )
    $intermediate $W[type_cast_5123_wire] : $int<64>
    // iNsTr_196
    $W[iNsTr_196_5125] : $float<11,52>
    // 		iNsTr_197 := threshold
    //  file prog.linked.opt.aa, line 1681
    // threshold
    $W[LOAD_threshold_5127_data_0] : $int<64>
    // iNsTr_197
    $W[iNsTr_197_5128] : $float<11,52>
    // 		iNsTr_198 := (iNsTr_197 * iNsTr_196)
    //  file prog.linked.opt.aa, line 1682
    // iNsTr_198
    $W[iNsTr_198_5133] : $float<11,52>
    // 		iNsTr_199 := ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_198 ) )
    //  file prog.linked.opt.aa, line 1683
    // ($cast ($int<32>) iNsTr_198 )
    $intermediate $W[type_cast_5136_wire] : $int<32>
    // iNsTr_199
    $W[iNsTr_199_5138] : $int<32>
    // 		iNsTr_200 := (iNsTr_199 + iNsTr_141)
    //  file prog.linked.opt.aa, line 1684
    // iNsTr_200
    $W[iNsTr_200_5143] : $int<32>
    // merge-statement  
    //  file prog.linked.opt.aa, line 1686
    // 			$phi qmeanx_x3 := 			  ($cast ($uint<32>) iNsTr_194 ) $on bb_31_bb_32			  ($cast ($uint<32>) qmeanx_x0 ) $on bb_30_bb_32 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1687
    // ($cast ($uint<32>) iNsTr_194 )
    $intermediate $W[type_cast_5149_wire] : $int<32>
    // ($cast ($uint<32>) qmeanx_x0 )
    $intermediate $W[type_cast_5151_wire] : $int<32>
    // qmeanx_x3
    $W[qmeanx_x3_5146] : $int<32>
    // 			$phi det_threshx_x4 := 			  ($cast ($uint<32>) iNsTr_200 ) $on bb_31_bb_32			  ($cast ($uint<32>) det_threshx_x0 ) $on bb_30_bb_32 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1688
    // ($cast ($uint<32>) iNsTr_200 )
    $intermediate $W[type_cast_5155_wire] : $int<32>
    // ($cast ($uint<32>) det_threshx_x0 )
    $intermediate $W[type_cast_5157_wire] : $int<32>
    // det_threshx_x4
    $W[det_threshx_x4_5152] : $int<32>
    // 		iNsTr_202 := (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) iNsTr_137 ))
    //  file prog.linked.opt.aa, line 1690
    // ($bitcast ($int<32>) iNsTr_68 )
    $intermediate $W[type_cast_5161_wire] : $int<32>
    // ($bitcast ($int<32>) iNsTr_137 )
    $intermediate $W[type_cast_5163_wire] : $int<32>
    // iNsTr_202
    $W[iNsTr_202_5165] : $int<1>
    // 		iNsTr_203 := ( $mux iNsTr_202 iNsTr_68  iNsTr_137 ) 
    //  file prog.linked.opt.aa, line 1691
    // iNsTr_203
    $W[iNsTr_203_5171] : $int<32>
    // merge-statement  
    //  file prog.linked.opt.aa, line 1693
    // 			$phi nmeanx_x3 := 			  ($cast ($uint<32>) iNsTr_141 ) $on bb_32_bb_33			  ($cast ($uint<32>) nmeanx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1694
    // ($cast ($uint<32>) iNsTr_141 )
    $intermediate $W[type_cast_5177_wire] : $int<32>
    // ($cast ($uint<32>) nmeanx_x0 )
    $intermediate $W[type_cast_5179_wire] : $int<32>
    // nmeanx_x3
    $W[nmeanx_x3_5174] : $int<32>
    // 			$phi qmeanx_x4 := 			  ($cast ($uint<32>) qmeanx_x3 ) $on bb_32_bb_33			  ($cast ($uint<32>) qmeanx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1695
    // ($cast ($uint<32>) qmeanx_x3 )
    $intermediate $W[type_cast_5183_wire] : $int<32>
    // ($cast ($uint<32>) qmeanx_x0 )
    $intermediate $W[type_cast_5185_wire] : $int<32>
    // qmeanx_x4
    $W[qmeanx_x4_5180] : $int<32>
    // 			$phi sb_countx_x2 := 			  ($cast ($uint<32>) iNsTr_142 ) $on bb_32_bb_33			  ($cast ($uint<32>) sb_countx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1696
    // ($cast ($uint<32>) iNsTr_142 )
    $intermediate $W[type_cast_5189_wire] : $int<32>
    // ($cast ($uint<32>) sb_countx_x0 )
    $intermediate $W[type_cast_5191_wire] : $int<32>
    // sb_countx_x2
    $W[sb_countx_x2_5186] : $int<32>
    // 			$phi det_threshx_x5 := 			  ($cast ($uint<32>) det_threshx_x4 ) $on bb_32_bb_33			  ($cast ($uint<32>) det_threshx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1697
    // ($cast ($uint<32>) det_threshx_x4 )
    $intermediate $W[type_cast_5195_wire] : $int<32>
    // ($cast ($uint<32>) det_threshx_x0 )
    $intermediate $W[type_cast_5197_wire] : $int<32>
    // det_threshx_x5
    $W[det_threshx_x5_5192] : $int<32>
    // 			$phi initMaxx_x2 := 			  ($cast ($uint<32>) iNsTr_203 ) $on bb_32_bb_33			  ($cast ($uint<32>) initMaxx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1698
    // ($cast ($uint<32>) iNsTr_203 )
    $intermediate $W[type_cast_5201_wire] : $int<32>
    // ($cast ($uint<32>) initMaxx_x0 )
    $intermediate $W[type_cast_5203_wire] : $int<32>
    // initMaxx_x2
    $W[initMaxx_x2_5198] : $int<32>
    // 			$phi rset_countx_x2 := 			  ($cast ($uint<32>) iNsTr_144 ) $on bb_32_bb_33			  ($cast ($uint<32>) rset_countx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1699
    // ($cast ($uint<32>) iNsTr_144 )
    $intermediate $W[type_cast_5207_wire] : $int<32>
    // ($cast ($uint<32>) rset_countx_x0 )
    $intermediate $W[type_cast_5209_wire] : $int<32>
    // rset_countx_x2
    $W[rset_countx_x2_5204] : $int<32>
    // 			$phi initBlankx_x2 := 			  ($cast ($uint<32>) iNsTr_143 ) $on bb_32_bb_33			  ($cast ($uint<32>) initBlankx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1700
    // ($cast ($uint<32>) iNsTr_143 )
    $intermediate $W[type_cast_5213_wire] : $int<32>
    // ($cast ($uint<32>) initBlankx_x0 )
    $intermediate $W[type_cast_5215_wire] : $int<32>
    // initBlankx_x2
    $W[initBlankx_x2_5210] : $int<32>
    // 		det_output_pipe := QRSdelayx_x0
    //  file prog.linked.opt.aa, line 1702
    // det_output_pipe
    // datapath-instances for block %qrsDet%body
    //  file prog.linked.opt.aa, line 1185
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1191
    // 			$phi indexx_x02x_xi_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_0_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1192
    $phi [phi_stmt_3043] (type_cast_3047_wire_constant) ( indexx_x02x_xi_at_entry_3043 )
    // datapath-instances for do-while  
    //  file prog.linked.opt.aa, line 1194
    // ( ~ exitcond6 )
    ~ [NOT_u1_u1_3091_inst] (exitcond6_3088) (NOT_u1_u1_3091_wire)   $flowthrough
    $delay NOT_u1_u1_3091_inst 0
    ==0? [do_while_stmt_3049_branch] (NOT_u1_u1_3091_wire)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1195
    // 			$phi indexx_x02x_xi := 			  ($cast ($uint<32>) iNsTr_4 ) $on $loopback			  indexx_x02x_xi_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1196
    // ($cast ($uint<32>) iNsTr_4 )
    # := [type_cast_3054_inst] (iNsTr_4_3082) (type_cast_3054_wire) 
    $delay type_cast_3054_inst 1
    # $phi [phi_stmt_3051] (type_cast_3054_wire indexx_x02x_xi_at_entry_3043) ( indexx_x02x_xi_3051 )
    // 			scevgep5x_xi := @(NOISEbuff[indexx_x02x_xi])
    //  file prog.linked.opt.aa, line 1198
    &/ [array_obj_ref_3059_index_0_resize] (indexx_x02x_xi_3051) (R_indexx_x02x_xi_3058_resized) 
    &/ [array_obj_ref_3059_index_0_rename] (R_indexx_x02x_xi_3058_resized) (R_indexx_x02x_xi_3058_scaled) 
    &/ [array_obj_ref_3059_index_offset] (R_indexx_x02x_xi_3058_scaled) (array_obj_ref_3059_final_offset) 
    &/ [array_obj_ref_3059_root_address_inst] (array_obj_ref_3059_final_offset) (array_obj_ref_3059_root_address) 
    # := [addr_of_3060_final_reg] (array_obj_ref_3059_root_address) (scevgep5x_xi_3061) 
    // 			scevgep6x_xi := @(RRbuff[indexx_x02x_xi])
    //  file prog.linked.opt.aa, line 1199
    &/ [array_obj_ref_3064_index_0_resize] (indexx_x02x_xi_3051) (R_indexx_x02x_xi_3063_resized) 
    &/ [array_obj_ref_3064_index_0_rename] (R_indexx_x02x_xi_3063_resized) (R_indexx_x02x_xi_3063_scaled) 
    &/ [array_obj_ref_3064_index_offset] (R_indexx_x02x_xi_3063_scaled) (array_obj_ref_3064_final_offset) 
    +[array_obj_ref_3064_root_address_inst] (array_obj_ref_3064_final_offset array_obj_ref_3064_resized_base_address) (array_obj_ref_3064_root_address) 
    $delay array_obj_ref_3064_root_address_inst 2
    # := [addr_of_3065_final_reg] (array_obj_ref_3064_root_address) (scevgep6x_xi_3066) 
    // 			->(scevgep5x_xi) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1200
    // ->(scevgep5x_xi)
    &/ [ptr_deref_3068_base_resize] (scevgep5x_xi_3061) (ptr_deref_3068_resized_base_address) 
    &/ [ptr_deref_3068_root_address_inst] (ptr_deref_3068_resized_base_address) (ptr_deref_3068_root_address) 
    &/ [ptr_deref_3068_addr_0] (ptr_deref_3068_root_address) (ptr_deref_3068_word_address_0) 
    $store [ptr_deref_3068_store_0] $to memory_space_13 (ptr_deref_3068_word_address_0 ptr_deref_3068_data_0) 
    $delay ptr_deref_3068_store_0 2
    &/ [ptr_deref_3068_gather_scatter] (type_cast_3070_wire_constant) (ptr_deref_3068_data_0) 
    // 			->(scevgep6x_xi) := ($bitcast ($uint<32>) _b00000000000000000000000011001000  )
    //  file prog.linked.opt.aa, line 1201
    // ->(scevgep6x_xi)
    &/ [ptr_deref_3073_base_resize] (scevgep6x_xi_3066) (ptr_deref_3073_resized_base_address) 
    &/ [ptr_deref_3073_root_address_inst] (ptr_deref_3073_resized_base_address) (ptr_deref_3073_root_address) 
    &/ [ptr_deref_3073_addr_0] (ptr_deref_3073_root_address) (ptr_deref_3073_word_address_0) 
    $store [ptr_deref_3073_store_0] $to memory_space_13 (ptr_deref_3073_word_address_0 ptr_deref_3073_data_0) 
    $delay ptr_deref_3073_store_0 2
    &/ [ptr_deref_3073_gather_scatter] (type_cast_3075_wire_constant) (ptr_deref_3073_data_0) 
    // 			iNsTr_4 := (indexx_x02x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1202
    // (indexx_x02x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_3081_inst] (indexx_x02x_xi_3051 type_cast_3080_wire_constant) (iNsTr_4_3082) 
    $delay ADD_u32_u32_3081_inst 1
    // 			exitcond6 := (iNsTr_4 == ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
    //  file prog.linked.opt.aa, line 1203
    // (iNsTr_4 == ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
    ==[EQ_u32_u1_3087_inst] (iNsTr_4_3082 type_cast_3086_wire_constant) (exitcond6_3088) 
    $delay EQ_u32_u1_3087_inst 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1209
    // 			$phi indexx_x11x_xi_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1210
    $phi [phi_stmt_3096] (type_cast_3100_wire_constant) ( indexx_x11x_xi_at_entry_3096 )
    // datapath-instances for do-while  
    //  file prog.linked.opt.aa, line 1212
    // ( ~ exitcond )
    ~ [NOT_u1_u1_3134_inst] (exitcond_3131) (NOT_u1_u1_3134_wire)   $flowthrough
    $delay NOT_u1_u1_3134_inst 0
    ==0? [do_while_stmt_3102_branch] (NOT_u1_u1_3134_wire)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1213
    // 			$phi indexx_x11x_xi := 			  ($cast ($uint<32>) iNsTr_9 ) $on $loopback			  indexx_x11x_xi_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1214
    // ($cast ($uint<32>) iNsTr_9 )
    # := [type_cast_3107_inst] (iNsTr_9_3125) (type_cast_3107_wire) 
    $delay type_cast_3107_inst 1
    # $phi [phi_stmt_3104] (type_cast_3107_wire indexx_x11x_xi_at_entry_3096) ( indexx_x11x_xi_3104 )
    // 			scevgepx_xi := @(DDCALCbuff[indexx_x11x_xi])
    //  file prog.linked.opt.aa, line 1216
    &/ [array_obj_ref_3112_index_0_resize] (indexx_x11x_xi_3104) (R_indexx_x11x_xi_3111_resized) 
    &/ [array_obj_ref_3112_index_0_rename] (R_indexx_x11x_xi_3111_resized) (R_indexx_x11x_xi_3111_scaled) 
    &/ [array_obj_ref_3112_index_offset] (R_indexx_x11x_xi_3111_scaled) (array_obj_ref_3112_final_offset) 
    &/ [array_obj_ref_3112_root_address_inst] (array_obj_ref_3112_final_offset) (array_obj_ref_3112_root_address) 
    # := [addr_of_3113_final_reg] (array_obj_ref_3112_root_address) (scevgepx_xi_3114) 
    // 			->(scevgepx_xi) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1217
    // ->(scevgepx_xi)
    &/ [ptr_deref_3116_base_resize] (scevgepx_xi_3114) (ptr_deref_3116_resized_base_address) 
    &/ [ptr_deref_3116_root_address_inst] (ptr_deref_3116_resized_base_address) (ptr_deref_3116_root_address) 
    &/ [ptr_deref_3116_addr_0] (ptr_deref_3116_root_address) (ptr_deref_3116_word_address_0) 
    $store [ptr_deref_3116_store_0] $to memory_space_0 (ptr_deref_3116_word_address_0 ptr_deref_3116_data_0) 
    $delay ptr_deref_3116_store_0 2
    &/ [ptr_deref_3116_gather_scatter] (type_cast_3118_wire_constant) (ptr_deref_3116_data_0) 
    // 			iNsTr_9 := (indexx_x11x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1218
    // (indexx_x11x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_3124_inst] (indexx_x11x_xi_3104 type_cast_3123_wire_constant) (iNsTr_9_3125) 
    $delay ADD_u32_u32_3124_inst 1
    // 			exitcond := (iNsTr_9 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
    //  file prog.linked.opt.aa, line 1219
    // (iNsTr_9 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
    ==[EQ_u32_u1_3130_inst] (iNsTr_9_3125 type_cast_3129_wire_constant) (exitcond_3131) 
    $delay EQ_u32_u1_3130_inst 1
    // 		maxDer := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1224
    // maxDer
    $store [STORE_maxDer_3137_store_0] $to memory_space_21 (STORE_maxDer_3137_word_address_0 STORE_maxDer_3137_data_0) 
    $delay STORE_maxDer_3137_store_0 1
    &/ [STORE_maxDer_3137_gather_scatter] (type_cast_3139_wire_constant) (STORE_maxDer_3137_data_0) 
    // 		DDCALCbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1225
    // DDCALCbuff_ptr
    $store [STORE_DDCALCbuff_ptr_3141_store_0] $to memory_space_1 (STORE_DDCALCbuff_ptr_3141_word_address_0 STORE_DDCALCbuff_ptr_3141_data_0) 
    $delay STORE_DDCALCbuff_ptr_3141_store_0 1
    &/ [STORE_DDCALCbuff_ptr_3141_gather_scatter] (type_cast_3143_wire_constant) (STORE_DDCALCbuff_ptr_3141_data_0) 
    // 		DDbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1226
    // DDbuff_ptr
    $store [STORE_DDbuff_ptr_3145_store_0] $to memory_space_3 (STORE_DDbuff_ptr_3145_word_address_0 STORE_DDbuff_ptr_3145_data_0) 
    $delay STORE_DDbuff_ptr_3145_store_0 1
    &/ [STORE_DDbuff_ptr_3145_gather_scatter] (type_cast_3147_wire_constant) (STORE_DDbuff_ptr_3145_data_0) 
    // 		NOISEbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    //  file prog.linked.opt.aa, line 1227
    // NOISEbuff_ptr
    $store [STORE_NOISEbuff_ptr_3149_store_0] $to memory_space_14 (STORE_NOISEbuff_ptr_3149_word_address_0 STORE_NOISEbuff_ptr_3149_data_0) 
    $delay STORE_NOISEbuff_ptr_3149_store_0 1
    &/ [STORE_NOISEbuff_ptr_3149_gather_scatter] (type_cast_3151_wire_constant) (STORE_NOISEbuff_ptr_3149_data_0) 
    // 		RRbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    //  file prog.linked.opt.aa, line 1228
    // RRbuff_ptr
    $store [STORE_RRbuff_ptr_3153_store_0] $to memory_space_16 (STORE_RRbuff_ptr_3153_word_address_0 STORE_RRbuff_ptr_3153_data_0) 
    $delay STORE_RRbuff_ptr_3153_store_0 1
    &/ [STORE_RRbuff_ptr_3153_gather_scatter] (type_cast_3155_wire_constant) (STORE_RRbuff_ptr_3153_data_0) 
    // 		QRSbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    //  file prog.linked.opt.aa, line 1229
    // QRSbuff_ptr
    $store [STORE_QRSbuff_ptr_3157_store_0] $to memory_space_15 (STORE_QRSbuff_ptr_3157_word_address_0 STORE_QRSbuff_ptr_3157_data_0) 
    $delay STORE_QRSbuff_ptr_3157_store_0 1
    &/ [STORE_QRSbuff_ptr_3157_gather_scatter] (type_cast_3159_wire_constant) (STORE_QRSbuff_ptr_3157_data_0) 
    // 		timeSinceMaxPeak := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1230
    // timeSinceMaxPeak
    $store [STORE_timeSinceMaxPeak_3161_store_0] $to memory_space_25 (STORE_timeSinceMaxPeak_3161_word_address_0 STORE_timeSinceMaxPeak_3161_data_0) 
    $delay STORE_timeSinceMaxPeak_3161_store_0 1
    &/ [STORE_timeSinceMaxPeak_3161_gather_scatter] (type_cast_3163_wire_constant) (STORE_timeSinceMaxPeak_3161_data_0) 
    // 		maxPeak := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1231
    // maxPeak
    $store [STORE_maxPeak_3165_store_0] $to memory_space_22 (STORE_maxPeak_3165_word_address_0 STORE_maxPeak_3165_data_0) 
    $delay STORE_maxPeak_3165_store_0 1
    &/ [STORE_maxPeak_3165_gather_scatter] (type_cast_3167_wire_constant) (STORE_maxPeak_3165_data_0) 
    // 		lastDatum := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1232
    // lastDatum
    $store [STORE_lastDatum_3169_store_0] $to memory_space_20 (STORE_lastDatum_3169_word_address_0 STORE_lastDatum_3169_data_0) 
    $delay STORE_lastDatum_3169_store_0 1
    &/ [STORE_lastDatum_3169_gather_scatter] (type_cast_3171_wire_constant) (STORE_lastDatum_3169_data_0) 
    // 		$call QRSFilt (($bitcast ($uint<8>) _b00000001  ) ) () 
    //  file prog.linked.opt.aa, line 1233
    $call [call_stmt_3175_call] $module QRSFilt(type_cast_3174_wire_constant) () 
    $delay call_stmt_3175_call 2
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1235
    // 			$phi init8Donex_x0 := 			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<8>) init8Done_nextx_x0 ) $on bb_33_bb_5 // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 1236
    // ($cast ($uint<8>) init8Done_nextx_x0 )
    # := [type_cast_3184_inst] (init8Done_nextx_x0_4627) (type_cast_3184_wire) 
    $delay type_cast_3184_inst 1
    $phi [phi_stmt_3178] (type_cast_3182_wire_constant type_cast_3184_wire) ( init8Donex_x0_3178 )
    // 			$phi init8Done_nextx_x1 := 			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<8>) init8Done_nextx_x0 ) $on bb_33_bb_5 // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 1237
    // ($cast ($uint<8>) init8Done_nextx_x0 )
    # := [type_cast_3191_inst] (init8Done_nextx_x0_4627) (type_cast_3191_wire) 
    $delay type_cast_3191_inst 1
    $phi [phi_stmt_3185] (type_cast_3189_wire_constant type_cast_3191_wire) ( init8Done_nextx_x1_3185 )
    // 			$phi noiseValx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) noiseValx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1238
    // ($cast ($uint<32>) noiseValx_x0 )
    # := [type_cast_3198_inst] (noiseValx_x0_4635) (type_cast_3198_wire) 
    $delay type_cast_3198_inst 1
    $phi [phi_stmt_3192] (type_cast_3196_wire_constant type_cast_3198_wire) ( noiseValx_x1_3192 )
    // 			$phi rrValx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) rrValx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1239
    // ($cast ($uint<32>) rrValx_x0 )
    # := [type_cast_3205_inst] (rrValx_x0_4643) (type_cast_3205_wire) 
    $delay type_cast_3205_inst 1
    $phi [phi_stmt_3199] (type_cast_3203_wire_constant type_cast_3205_wire) ( rrValx_x1_3199 )
    // 			$phi qrsValx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) qrsValx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1240
    // ($cast ($uint<32>) qrsValx_x0 )
    # := [type_cast_3212_inst] (qrsValx_x0_4651) (type_cast_3212_wire) 
    $delay type_cast_3212_inst 1
    $phi [phi_stmt_3206] (type_cast_3210_wire_constant type_cast_3212_wire) ( qrsValx_x1_3206 )
    // 			$phi nmeanx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) nmeanx_x3 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1241
    // ($cast ($uint<32>) nmeanx_x3 )
    # := [type_cast_3219_inst] (nmeanx_x3_5174) (type_cast_3219_wire) 
    $delay type_cast_3219_inst 1
    $phi [phi_stmt_3213] (type_cast_3217_wire_constant type_cast_3219_wire) ( nmeanx_x1_3213 )
    // 			$phi qmeanx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) qmeanx_x4 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1242
    // ($cast ($uint<32>) qmeanx_x4 )
    # := [type_cast_3226_inst] (qmeanx_x4_5180) (type_cast_3226_wire) 
    $delay type_cast_3226_inst 1
    $phi [phi_stmt_3220] (type_cast_3224_wire_constant type_cast_3226_wire) ( qmeanx_x1_3220 )
    // 			$phi sbLocx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000100101100  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) sbLocx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1243
    // ($cast ($uint<32>) sbLocx_x0 )
    # := [type_cast_3233_inst] (sbLocx_x0_4677) (type_cast_3233_wire) 
    $delay type_cast_3233_inst 1
    $phi [phi_stmt_3227] (type_cast_3231_wire_constant type_cast_3233_wire) ( sbLocx_x1_3227 )
    // 			$phi sb_countx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000100101100  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) sb_countx_x2 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1244
    // ($cast ($uint<32>) sb_countx_x2 )
    # := [type_cast_3240_inst] (sb_countx_x2_5186) (type_cast_3240_wire) 
    $delay type_cast_3240_inst 1
    $phi [phi_stmt_3234] (type_cast_3238_wire_constant type_cast_3240_wire) ( sb_countx_x1_3234 )
    // 			$phi det_threshx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) det_threshx_x5 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1245
    // ($cast ($uint<32>) det_threshx_x5 )
    # := [type_cast_3247_inst] (det_threshx_x5_5192) (type_cast_3247_wire) 
    $delay type_cast_3247_inst 1
    $phi [phi_stmt_3241] (type_cast_3245_wire_constant type_cast_3247_wire) ( det_threshx_x1_3241 )
    // 			$phi initMaxx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) initMaxx_x2 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1246
    // ($cast ($uint<32>) initMaxx_x2 )
    # := [type_cast_3254_inst] (initMaxx_x2_5198) (type_cast_3254_wire) 
    $delay type_cast_3254_inst 1
    $phi [phi_stmt_3248] (type_cast_3252_wire_constant type_cast_3254_wire) ( initMaxx_x1_3248 )
    // 			$phi rset_countx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) rset_countx_x2 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1247
    // ($cast ($uint<32>) rset_countx_x2 )
    # := [type_cast_3261_inst] (rset_countx_x2_5204) (type_cast_3261_wire) 
    $delay type_cast_3261_inst 1
    $phi [phi_stmt_3255] (type_cast_3259_wire_constant type_cast_3261_wire) ( rset_countx_x1_3255 )
    // 			$phi preBlank_countx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) iNsTr_66 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1248
    // ($cast ($uint<32>) iNsTr_66 )
    # := [type_cast_3268_inst] (iNsTr_66_3584) (type_cast_3268_wire) 
    $delay type_cast_3268_inst 1
    $phi [phi_stmt_3262] (type_cast_3266_wire_constant type_cast_3268_wire) ( preBlank_countx_x0_3262 )
    // 			$phi initBlankx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) initBlankx_x2 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1249
    // ($cast ($uint<32>) initBlankx_x2 )
    # := [type_cast_3275_inst] (initBlankx_x2_5210) (type_cast_3275_wire) 
    $delay type_cast_3275_inst 1
    $phi [phi_stmt_3269] (type_cast_3273_wire_constant type_cast_3275_wire) ( initBlankx_x1_3269 )
    // 			$phi countx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) countx_x1 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1250
    // ($cast ($uint<32>) countx_x1 )
    # := [type_cast_3282_inst] (countx_x1_4727) (type_cast_3282_wire) 
    $delay type_cast_3282_inst 1
    $phi [phi_stmt_3276] (type_cast_3280_wire_constant type_cast_3282_wire) ( countx_x0_3276 )
    // 			$phi qpk_countx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) qpk_countx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1251
    // ($cast ($uint<32>) qpk_countx_x0 )
    # := [type_cast_3289_inst] (qpk_countx_x0_4735) (type_cast_3289_wire) 
    $delay type_cast_3289_inst 1
    $phi [phi_stmt_3283] (type_cast_3287_wire_constant type_cast_3289_wire) ( qpk_countx_x1_3283 )
    // 			$phi sbPeakx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) sbPeakx_x0 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1252
    // ($cast ($uint<32>) sbPeakx_x0 )
    # := [type_cast_3296_inst] (sbPeakx_x0_4743) (type_cast_3296_wire) 
    $delay type_cast_3296_inst 1
    $phi [phi_stmt_3290] (type_cast_3294_wire_constant type_cast_3296_wire) ( sbPeakx_x1_3290 )
    // 			$phi tempPeakx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on initDetx_xexit_bb_5			  ($cast ($uint<32>) iNsTr_65 ) $on bb_33_bb_5 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1253
    // ($cast ($uint<32>) iNsTr_65 )
    # := [type_cast_3303_inst] (iNsTr_65_3578) (type_cast_3303_wire) 
    $delay type_cast_3303_inst 1
    $phi [phi_stmt_3297] (type_cast_3301_wire_constant type_cast_3303_wire) ( tempPeakx_x0_3297 )
    // 		iNsTr_23 := det_input_pipe
    //  file prog.linked.opt.aa, line 1255
    // det_input_pipe
    $ioport $in [RPIPE_det_input_pipe_3306_inst] (det_input_pipe) (iNsTr_23_3307) 
    // 		filt_input_pipe := iNsTr_23
    //  file prog.linked.opt.aa, line 1256
    // filt_input_pipe
    $ioport $out [WPIPE_filt_input_pipe_3308_inst]  (iNsTr_23_3307) (filt_input_pipe) 
    $buffering $in WPIPE_filt_input_pipe_3308_inst iNsTr_23_3307 1
    // 		$call QRSFilt (($bitcast ($uint<8>) _b00000000  ) ) () 
    //  file prog.linked.opt.aa, line 1257
    $call [call_stmt_3313_call] $module QRSFilt(type_cast_3312_wire_constant) () 
    $delay call_stmt_3313_call 2
    // 		iNsTr_27 := timeSinceMaxPeak
    //  file prog.linked.opt.aa, line 1258
    // timeSinceMaxPeak
    $load [LOAD_timeSinceMaxPeak_3315_load_0] $from memory_space_25 (LOAD_timeSinceMaxPeak_3315_word_address_0) (LOAD_timeSinceMaxPeak_3315_data_0) 
    $delay LOAD_timeSinceMaxPeak_3315_load_0 1
    &/ [LOAD_timeSinceMaxPeak_3315_gather_scatter] (LOAD_timeSinceMaxPeak_3315_data_0) (iNsTr_27_3316) 
    // 		iNsTr_28 := maxPeak
    //  file prog.linked.opt.aa, line 1259
    // maxPeak
    $load [LOAD_maxPeak_3318_load_0] $from memory_space_22 (LOAD_maxPeak_3318_word_address_0) (LOAD_maxPeak_3318_data_0) 
    $delay LOAD_maxPeak_3318_load_0 1
    &/ [LOAD_maxPeak_3318_gather_scatter] (LOAD_maxPeak_3318_data_0) (iNsTr_28_3319) 
    // 		iNsTr_30 := filt_output_pipe
    //  file prog.linked.opt.aa, line 1260
    // filt_output_pipe
    $ioport $in [RPIPE_filt_output_pipe_3321_inst] (filt_output_pipe) (iNsTr_30_3322) 
    // 		iNsTr_31 := (($bitcast ($int<32>) iNsTr_27 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 1261
    // ($bitcast ($int<32>) iNsTr_27 )
    $S:=$U [type_cast_3325_inst] (iNsTr_27_3316) (type_cast_3325_wire)   $flowthrough
    $delay type_cast_3325_inst 0
    // (($bitcast ($int<32>) iNsTr_27 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    $S>$S[SGT_i32_u1_3329_inst] (type_cast_3325_wire type_cast_3328_wire_constant) (iNsTr_31_3330) 
    $delay SGT_i32_u1_3329_inst 1
    // 		iNsTr_32 := ($cast ($uint<32>) iNsTr_31 )
    //  file prog.linked.opt.aa, line 1262
    // ($cast ($uint<32>) iNsTr_31 )
    # := [type_cast_3333_inst] (iNsTr_31_3330) (iNsTr_32_3334) 
    $delay type_cast_3333_inst 1
    // 		iNsTr_33 := (iNsTr_32 + iNsTr_27)
    //  file prog.linked.opt.aa, line 1263
    // (iNsTr_32 + iNsTr_27)
    +[ADD_u32_u32_3338_inst] (iNsTr_32_3334 iNsTr_27_3316) (iNsTr_33_3339) 
    $delay ADD_u32_u32_3338_inst 1
    // 		iNsTr_34 := lastDatum
    //  file prog.linked.opt.aa, line 1264
    // lastDatum
    $load [LOAD_lastDatum_3341_load_0] $from memory_space_20 (LOAD_lastDatum_3341_word_address_0) (LOAD_lastDatum_3341_data_0) 
    $delay LOAD_lastDatum_3341_load_0 1
    &/ [LOAD_lastDatum_3341_gather_scatter] (LOAD_lastDatum_3341_data_0) (iNsTr_34_3342) 
    // 		iNsTr_35 := (($bitcast ($int<32>) iNsTr_30 ) > ($bitcast ($int<32>) iNsTr_34 ))
    //  file prog.linked.opt.aa, line 1265
    // ($bitcast ($int<32>) iNsTr_30 )
    $S:=$U [type_cast_3345_inst] (iNsTr_30_3322) (type_cast_3345_wire)   $flowthrough
    $delay type_cast_3345_inst 0
    // ($bitcast ($int<32>) iNsTr_34 )
    $S:=$U [type_cast_3347_inst] (iNsTr_34_3342) (type_cast_3347_wire)   $flowthrough
    $delay type_cast_3347_inst 0
    // (($bitcast ($int<32>) iNsTr_30 ) > ($bitcast ($int<32>) iNsTr_34 ))
    $S>$S[SGT_i32_u1_3348_inst] (type_cast_3345_wire type_cast_3347_wire) (iNsTr_35_3349) 
    $delay SGT_i32_u1_3348_inst 1
    // 		iNsTr_36 := (($bitcast ($int<32>) iNsTr_30 ) > ($bitcast ($int<32>) iNsTr_28 ))
    //  file prog.linked.opt.aa, line 1266
    // ($bitcast ($int<32>) iNsTr_30 )
    $S:=$U [type_cast_3352_inst] (iNsTr_30_3322) (type_cast_3352_wire)   $flowthrough
    $delay type_cast_3352_inst 0
    // ($bitcast ($int<32>) iNsTr_28 )
    $S:=$U [type_cast_3354_inst] (iNsTr_28_3319) (type_cast_3354_wire)   $flowthrough
    $delay type_cast_3354_inst 0
    // (($bitcast ($int<32>) iNsTr_30 ) > ($bitcast ($int<32>) iNsTr_28 ))
    $S>$S[SGT_i32_u1_3355_inst] (type_cast_3352_wire type_cast_3354_wire) (iNsTr_36_3356) 
    $delay SGT_i32_u1_3355_inst 1
    // 		iNsTr_37 := (iNsTr_35 & iNsTr_36)
    //  file prog.linked.opt.aa, line 1267
    // (iNsTr_35 & iNsTr_36)
    &[AND_u1_u1_3360_inst] (iNsTr_35_3349 iNsTr_36_3356) (iNsTr_37_3361) 
    $delay AND_u1_u1_3360_inst 1
    // 		iNsTr_38 := ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_28 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) )
    //  file prog.linked.opt.aa, line 1268
    // ($bitcast ($int<32>) iNsTr_28 )
    $S:=$U [type_cast_3364_inst] (iNsTr_28_3319) (type_cast_3364_wire)   $flowthrough
    $delay type_cast_3364_inst 0
    // (($bitcast ($int<32>) iNsTr_28 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
    $S>>[ASHR_i32_i32_3368_inst] (type_cast_3364_wire type_cast_3367_wire_constant) (ASHR_i32_i32_3368_wire)  $flowthrough
    $delay ASHR_i32_i32_3368_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_28 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) )
    # := [type_cast_3369_inst] (ASHR_i32_i32_3368_wire) (iNsTr_38_3370) 
    $delay type_cast_3369_inst 1
    // 		iNsTr_39 := (($bitcast ($int<32>) iNsTr_30 ) < ($bitcast ($int<32>) iNsTr_38 ))
    //  file prog.linked.opt.aa, line 1269
    // ($bitcast ($int<32>) iNsTr_30 )
    $S:=$U [type_cast_3373_inst] (iNsTr_30_3322) (type_cast_3373_wire)   $flowthrough
    $delay type_cast_3373_inst 0
    // ($bitcast ($int<32>) iNsTr_38 )
    $S:=$U [type_cast_3375_inst] (iNsTr_38_3370) (type_cast_3375_wire)   $flowthrough
    $delay type_cast_3375_inst 0
    // (($bitcast ($int<32>) iNsTr_30 ) < ($bitcast ($int<32>) iNsTr_38 ))
    $S<$S[SLT_i32_u1_3376_inst] (type_cast_3373_wire type_cast_3375_wire) (iNsTr_39_3377) 
    $delay SLT_i32_u1_3376_inst 1
    // 		iNsTr_40 := (($bitcast ($int<32>) iNsTr_33 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010011  ) ))
    //  file prog.linked.opt.aa, line 1270
    // ($bitcast ($int<32>) iNsTr_33 )
    $S:=$U [type_cast_3380_inst] (iNsTr_33_3339) (type_cast_3380_wire)   $flowthrough
    $delay type_cast_3380_inst 0
    // (($bitcast ($int<32>) iNsTr_33 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010011  ) ))
    $S>$S[SGT_i32_u1_3384_inst] (type_cast_3380_wire type_cast_3383_wire_constant) (iNsTr_40_3385) 
    $delay SGT_i32_u1_3384_inst 1
    // 		orx_xcondx_xi := (iNsTr_39 | iNsTr_40)
    //  file prog.linked.opt.aa, line 1271
    // (iNsTr_39 | iNsTr_40)
    |[OR_u1_u1_3389_inst] (iNsTr_39_3377 iNsTr_40_3385) (orx_xcondx_xi_3390) 
    $delay OR_u1_u1_3389_inst 1
    // 		xx_xdemorgan42 := (iNsTr_35 & iNsTr_36)
    //  file prog.linked.opt.aa, line 1272
    // (iNsTr_35 & iNsTr_36)
    &[AND_u1_u1_3394_inst] (iNsTr_35_3349 iNsTr_36_3356) (xx_xdemorgan42_3395) 
    $delay AND_u1_u1_3394_inst 1
    // 		iNsTr_41 := (xx_xdemorgan42 ^ ($bitcast ($uint<1>) _b1  ))
    //  file prog.linked.opt.aa, line 1273
    // (xx_xdemorgan42 ^ ($bitcast ($uint<1>) _b1  ))
    ^[XOR_u1_u1_3400_inst] (xx_xdemorgan42_3395 type_cast_3399_wire_constant) (iNsTr_41_3401) 
    $delay XOR_u1_u1_3400_inst 1
    // 		iNsTr_42 := (orx_xcondx_xi & iNsTr_41)
    //  file prog.linked.opt.aa, line 1274
    // (orx_xcondx_xi & iNsTr_41)
    &[AND_u1_u1_3405_inst] (orx_xcondx_xi_3390 iNsTr_41_3401) (iNsTr_42_3406) 
    $delay AND_u1_u1_3405_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1275
    ==0? [if_stmt_3407_branch] (iNsTr_42_3406)
    // 		iNsTr_44 := (($bitcast ($int<32>) iNsTr_28 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000110  ) ))
    //  file prog.linked.opt.aa, line 1282
    // ($bitcast ($int<32>) iNsTr_28 )
    $S:=$U [type_cast_3416_inst] (iNsTr_28_3319) (type_cast_3416_wire)   $flowthrough
    $delay type_cast_3416_inst 0
    // (($bitcast ($int<32>) iNsTr_28 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000110  ) ))
    $S>$S[SGT_i32_u1_3420_inst] (type_cast_3416_wire type_cast_3419_wire_constant) (iNsTr_44_3421) 
    $delay SGT_i32_u1_3420_inst 1
    // 		phitmpx_xi := ( $mux iNsTr_44 iNsTr_28  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
    //  file prog.linked.opt.aa, line 1283
    // ( $mux iNsTr_44 iNsTr_28  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
    ? [MUX_3427_inst] (iNsTr_44_3421 iNsTr_28_3319 type_cast_3426_wire_constant) (phitmpx_xi_3428) 
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1285
    // 			$phi iNsTr_46 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_5_bb_7			  ($cast ($uint<32>) phitmpx_xi ) $on bb_6_bb_7 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1286
    // ($cast ($uint<32>) phitmpx_xi )
    # := [type_cast_3437_inst] (phitmpx_xi_3428) (type_cast_3437_wire) 
    $delay type_cast_3437_inst 1
    $phi [phi_stmt_3431] (type_cast_3435_wire_constant type_cast_3437_wire) ( iNsTr_46_3431 )
    // 		iNsTr_47 := ( $mux iNsTr_42 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_28 ) 
    //  file prog.linked.opt.aa, line 1288
    // ( $mux iNsTr_42 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_28 ) 
    ? [MUX_3444_inst] (iNsTr_42_3406 type_cast_3442_wire_constant iNsTr_28_3319) (iNsTr_47_3445) 
    // 		iNsTr_48 := ( $mux iNsTr_42 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_33 ) 
    //  file prog.linked.opt.aa, line 1289
    // ( $mux iNsTr_42 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_33 ) 
    ? [MUX_3451_inst] (iNsTr_42_3406 type_cast_3449_wire_constant iNsTr_33_3339) (iNsTr_48_3452) 
    // 		iNsTr_49 := ( $mux iNsTr_37 iNsTr_30  iNsTr_47 ) 
    //  file prog.linked.opt.aa, line 1290
    // ( $mux iNsTr_37 iNsTr_30  iNsTr_47 ) 
    ? [MUX_3457_inst] (iNsTr_37_3361 iNsTr_30_3322 iNsTr_47_3445) (iNsTr_49_3458) 
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1291
    ==0? [if_stmt_3459_branch] (iNsTr_37_3361)
    // 		iNsTr_51 := (($bitcast ($int<32>) iNsTr_49 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    //  file prog.linked.opt.aa, line 1298
    // ($bitcast ($int<32>) iNsTr_49 )
    $S:=$U [type_cast_3468_inst] (iNsTr_49_3458) (type_cast_3468_wire)   $flowthrough
    $delay type_cast_3468_inst 0
    // (($bitcast ($int<32>) iNsTr_49 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    $S>$S[SGT_i32_u1_3472_inst] (type_cast_3468_wire type_cast_3471_wire_constant) (iNsTr_51_3473) 
    $delay SGT_i32_u1_3472_inst 1
    // 		phitmp1x_xi := ( $mux iNsTr_51 ($bitcast ($uint<32>) _b00000000000000000000000000000001  )  iNsTr_48 ) 
    //  file prog.linked.opt.aa, line 1299
    // ( $mux iNsTr_51 ($bitcast ($uint<32>) _b00000000000000000000000000000001  )  iNsTr_48 ) 
    ? [MUX_3479_inst] (iNsTr_51_3473 type_cast_3477_wire_constant iNsTr_48_3452) (phitmp1x_xi_3480) 
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1301
    // 			$phi iNsTr_53 := 			  ($cast ($uint<32>) iNsTr_48 ) $on bb_7_peakx_xexit			  ($cast ($uint<32>) phitmp1x_xi ) $on bb_8_peakx_xexit // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1302
    // ($cast ($uint<32>) iNsTr_48 )
    # := [type_cast_3486_inst] (iNsTr_48_3452) (type_cast_3486_wire) 
    $delay type_cast_3486_inst 1
    // ($cast ($uint<32>) phitmp1x_xi )
    # := [type_cast_3488_inst] (phitmp1x_xi_3480) (type_cast_3488_wire) 
    $delay type_cast_3488_inst 1
    $phi [phi_stmt_3483] (type_cast_3486_wire type_cast_3488_wire) ( iNsTr_53_3483 )
    // 		timeSinceMaxPeak := iNsTr_53
    //  file prog.linked.opt.aa, line 1304
    // timeSinceMaxPeak
    $store [STORE_timeSinceMaxPeak_3490_store_0] $to memory_space_25 (STORE_timeSinceMaxPeak_3490_word_address_0 STORE_timeSinceMaxPeak_3490_data_0) 
    $delay STORE_timeSinceMaxPeak_3490_store_0 1
    &/ [STORE_timeSinceMaxPeak_3490_gather_scatter] (iNsTr_53_3483) (STORE_timeSinceMaxPeak_3490_data_0) 
    // 		maxPeak := iNsTr_49
    //  file prog.linked.opt.aa, line 1305
    // maxPeak
    $store [STORE_maxPeak_3493_store_0] $to memory_space_22 (STORE_maxPeak_3493_word_address_0 STORE_maxPeak_3493_data_0) 
    $delay STORE_maxPeak_3493_store_0 1
    &/ [STORE_maxPeak_3493_gather_scatter] (iNsTr_49_3458) (STORE_maxPeak_3493_data_0) 
    // 		lastDatum := iNsTr_30
    //  file prog.linked.opt.aa, line 1306
    // lastDatum
    $store [STORE_lastDatum_3496_store_0] $to memory_space_20 (STORE_lastDatum_3496_word_address_0 STORE_lastDatum_3496_data_0) 
    $delay STORE_lastDatum_3496_store_0 1
    &/ [STORE_lastDatum_3496_gather_scatter] (iNsTr_30_3322) (STORE_lastDatum_3496_data_0) 
    // 		iNsTr_57 := (($bitcast ($int<32>) iNsTr_46 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 1307
    // ($bitcast ($int<32>) iNsTr_46 )
    $S:=$U [type_cast_3501_inst] (iNsTr_46_3431) (type_cast_3501_wire)   $flowthrough
    $delay type_cast_3501_inst 0
    // (($bitcast ($int<32>) iNsTr_46 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    $S>$S[SGT_i32_u1_3505_inst] (type_cast_3501_wire type_cast_3504_wire_constant) (iNsTr_57_3506) 
    $delay SGT_i32_u1_3505_inst 1
    // 		iNsTr_58 := (($bitcast ($int<32>) preBlank_countx_x0 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 1308
    // ($bitcast ($int<32>) preBlank_countx_x0 )
    $S:=$U [type_cast_3509_inst] (preBlank_countx_x0_3262) (type_cast_3509_wire)   $flowthrough
    $delay type_cast_3509_inst 0
    // (($bitcast ($int<32>) preBlank_countx_x0 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    $S>$S[SGT_i32_u1_3513_inst] (type_cast_3509_wire type_cast_3512_wire_constant) (iNsTr_58_3514) 
    $delay SGT_i32_u1_3513_inst 1
    // 		iNsTr_59 := (($bitcast ($int<32>) iNsTr_46 ) > ($bitcast ($int<32>) tempPeakx_x0 ))
    //  file prog.linked.opt.aa, line 1309
    // ($bitcast ($int<32>) iNsTr_46 )
    $S:=$U [type_cast_3517_inst] (iNsTr_46_3431) (type_cast_3517_wire)   $flowthrough
    $delay type_cast_3517_inst 0
    // ($bitcast ($int<32>) tempPeakx_x0 )
    $S:=$U [type_cast_3519_inst] (tempPeakx_x0_3297) (type_cast_3519_wire)   $flowthrough
    $delay type_cast_3519_inst 0
    // (($bitcast ($int<32>) iNsTr_46 ) > ($bitcast ($int<32>) tempPeakx_x0 ))
    $S>$S[SGT_i32_u1_3520_inst] (type_cast_3517_wire type_cast_3519_wire) (iNsTr_59_3521) 
    $delay SGT_i32_u1_3520_inst 1
    // 		iNsTr_60 := (preBlank_countx_x0 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.linked.opt.aa, line 1310
    // (preBlank_countx_x0 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    +[ADD_u32_u32_3526_inst] (preBlank_countx_x0_3262 type_cast_3525_wire_constant) (iNsTr_60_3527) 
    $delay ADD_u32_u32_3526_inst 1
    // 		iNsTr_61 := (iNsTr_60 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.linked.opt.aa, line 1311
    // (iNsTr_60 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_3532_inst] (iNsTr_60_3527 type_cast_3531_wire_constant) (iNsTr_61_3533) 
    $delay EQ_u32_u1_3532_inst 1
    // 		iNsTr_62 := (iNsTr_58 ^ ($bitcast ($uint<1>) _b1  ))
    //  file prog.linked.opt.aa, line 1312
    // (iNsTr_58 ^ ($bitcast ($uint<1>) _b1  ))
    ^[XOR_u1_u1_3538_inst] (iNsTr_58_3514 type_cast_3537_wire_constant) (iNsTr_62_3539) 
    $delay XOR_u1_u1_3538_inst 1
    // 		iNsTr_63 := (iNsTr_57 & iNsTr_62)
    //  file prog.linked.opt.aa, line 1313
    // (iNsTr_57 & iNsTr_62)
    &[AND_u1_u1_3543_inst] (iNsTr_57_3506 iNsTr_62_3539) (iNsTr_63_3544) 
    $delay AND_u1_u1_3543_inst 1
    // 		xx_xnot13 := (iNsTr_59 ^ ($bitcast ($uint<1>) _b1  ))
    //  file prog.linked.opt.aa, line 1314
    // (iNsTr_59 ^ ($bitcast ($uint<1>) _b1  ))
    ^[XOR_u1_u1_3549_inst] (iNsTr_59_3521 type_cast_3548_wire_constant) (xx_xnot13_3550) 
    $delay XOR_u1_u1_3549_inst 1
    // 		notx_xbrmerge := (iNsTr_57 & xx_xnot13)
    //  file prog.linked.opt.aa, line 1315
    // (iNsTr_57 & xx_xnot13)
    &[AND_u1_u1_3554_inst] (iNsTr_57_3506 xx_xnot13_3550) (notx_xbrmerge_3555) 
    $delay AND_u1_u1_3554_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1316
    ==0? [if_stmt_3556_branch] (iNsTr_63_3544)
    // 		phitmp18 := ( $mux iNsTr_59 iNsTr_46  tempPeakx_x0 ) 
    //  file prog.linked.opt.aa, line 1323
    // ( $mux iNsTr_59 iNsTr_46  tempPeakx_x0 ) 
    ? [MUX_3567_inst] (iNsTr_59_3521 iNsTr_46_3431 tempPeakx_x0_3297) (phitmp18_3568) 
    // 		phitmp1 := ( $mux iNsTr_59 ($bitcast ($uint<32>) _b00000000000000000000000000100111  )  iNsTr_60 ) 
    //  file prog.linked.opt.aa, line 1324
    // ( $mux iNsTr_59 ($bitcast ($uint<32>) _b00000000000000000000000000100111  )  iNsTr_60 ) 
    ? [MUX_3574_inst] (iNsTr_59_3521 type_cast_3572_wire_constant iNsTr_60_3527) (phitmp1_3575) 
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1326
    // 			$phi iNsTr_65 := 			  ($cast ($uint<32>) phitmp18 ) $on bb_10_xx_xthread			  ($cast ($uint<32>) iNsTr_46 ) $on peakx_xexit_xx_xthread // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1327
    // ($cast ($uint<32>) phitmp18 )
    # := [type_cast_3581_inst] (phitmp18_3568) (type_cast_3581_wire) 
    $delay type_cast_3581_inst 1
    // ($cast ($uint<32>) iNsTr_46 )
    # := [type_cast_3583_inst] (iNsTr_46_3431) (type_cast_3583_wire) 
    $delay type_cast_3583_inst 1
    $phi [phi_stmt_3578] (type_cast_3581_wire type_cast_3583_wire) ( iNsTr_65_3578 )
    // 			$phi iNsTr_66 := 			  ($cast ($uint<32>) phitmp1 ) $on bb_10_xx_xthread			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000100111  ) ) $on peakx_xexit_xx_xthread // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1328
    // ($cast ($uint<32>) phitmp1 )
    # := [type_cast_3587_inst] (phitmp1_3575) (type_cast_3587_wire) 
    $delay type_cast_3587_inst 1
    $phi [phi_stmt_3584] (type_cast_3587_wire type_cast_3590_wire_constant) ( iNsTr_66_3584 )
    // 		xx_xnot14 := (iNsTr_57 ^ ($bitcast ($uint<1>) _b1  ))
    //  file prog.linked.opt.aa, line 1330
    // (iNsTr_57 ^ ($bitcast ($uint<1>) _b1  ))
    ^[XOR_u1_u1_3596_inst] (iNsTr_57_3506 type_cast_3595_wire_constant) (xx_xnot14_3597) 
    $delay XOR_u1_u1_3596_inst 1
    // 		xx_xnot2x_xnot := (iNsTr_58 & xx_xnot14)
    //  file prog.linked.opt.aa, line 1331
    // (iNsTr_58 & xx_xnot14)
    &[AND_u1_u1_3601_inst] (iNsTr_58_3514 xx_xnot14_3597) (xx_xnot2x_xnot_3602) 
    $delay AND_u1_u1_3601_inst 1
    // 		tmp := (notx_xbrmerge | xx_xnot2x_xnot)
    //  file prog.linked.opt.aa, line 1332
    // (notx_xbrmerge | xx_xnot2x_xnot)
    |[OR_u1_u1_3606_inst] (notx_xbrmerge_3555 xx_xnot2x_xnot_3602) (tmp_3607) 
    $delay OR_u1_u1_3606_inst 1
    // 		iNsTr_67 := (iNsTr_61 & tmp)
    //  file prog.linked.opt.aa, line 1333
    // (iNsTr_61 & tmp)
    &[AND_u1_u1_3611_inst] (iNsTr_61_3533 tmp_3607) (iNsTr_67_3612) 
    $delay AND_u1_u1_3611_inst 1
    // 		iNsTr_68 := ( $mux iNsTr_67 iNsTr_65  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
    //  file prog.linked.opt.aa, line 1334
    // ( $mux iNsTr_67 iNsTr_65  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
    ? [MUX_3618_inst] (iNsTr_67_3612 iNsTr_65_3578 type_cast_3617_wire_constant) (iNsTr_68_3619) 
    // 		iNsTr_69 := DDCALCbuff_ptr
    //  file prog.linked.opt.aa, line 1335
    // DDCALCbuff_ptr
    $load [LOAD_DDCALCbuff_ptr_3621_load_0] $from memory_space_1 (LOAD_DDCALCbuff_ptr_3621_word_address_0) (LOAD_DDCALCbuff_ptr_3621_data_0) 
    $delay LOAD_DDCALCbuff_ptr_3621_load_0 1
    &/ [LOAD_DDCALCbuff_ptr_3621_gather_scatter] (LOAD_DDCALCbuff_ptr_3621_data_0) (iNsTr_69_3622) 
    // 		iNsTr_70 := @(DDCALCbuff[iNsTr_69])
    //  file prog.linked.opt.aa, line 1336
    &/ [array_obj_ref_3625_index_0_resize] (iNsTr_69_3622) (R_iNsTr_69_3624_resized) 
    &/ [array_obj_ref_3625_index_0_rename] (R_iNsTr_69_3624_resized) (R_iNsTr_69_3624_scaled) 
    &/ [array_obj_ref_3625_index_offset] (R_iNsTr_69_3624_scaled) (array_obj_ref_3625_final_offset) 
    &/ [array_obj_ref_3625_root_address_inst] (array_obj_ref_3625_final_offset) (array_obj_ref_3625_root_address) 
    # := [addr_of_3626_final_reg] (array_obj_ref_3625_root_address) (iNsTr_70_3627) 
    // 		iNsTr_71 := ->(iNsTr_70)
    //  file prog.linked.opt.aa, line 1337
    // ->(iNsTr_70)
    &/ [ptr_deref_3630_base_resize] (iNsTr_70_3627) (ptr_deref_3630_resized_base_address) 
    &/ [ptr_deref_3630_root_address_inst] (ptr_deref_3630_resized_base_address) (ptr_deref_3630_root_address) 
    &/ [ptr_deref_3630_addr_0] (ptr_deref_3630_root_address) (ptr_deref_3630_word_address_0) 
    $load [ptr_deref_3630_load_0] $from memory_space_0 (ptr_deref_3630_word_address_0) (ptr_deref_3630_data_0) 
    $delay ptr_deref_3630_load_0 2
    &/ [ptr_deref_3630_gather_scatter] (ptr_deref_3630_data_0) (iNsTr_71_3631) 
    // 		iNsTr_72 := (iNsTr_23 - iNsTr_71)
    //  file prog.linked.opt.aa, line 1338
    // (iNsTr_23 - iNsTr_71)
    -[SUB_u32_u32_3635_inst] (iNsTr_23_3307 iNsTr_71_3631) (iNsTr_72_3636) 
    $delay SUB_u32_u32_3635_inst 1
    // 		->(iNsTr_70) := iNsTr_23
    //  file prog.linked.opt.aa, line 1339
    // ->(iNsTr_70)
    &/ [ptr_deref_3638_base_resize] (iNsTr_70_3627) (ptr_deref_3638_resized_base_address) 
    &/ [ptr_deref_3638_root_address_inst] (ptr_deref_3638_resized_base_address) (ptr_deref_3638_root_address) 
    &/ [ptr_deref_3638_addr_0] (ptr_deref_3638_root_address) (ptr_deref_3638_word_address_0) 
    $store [ptr_deref_3638_store_0] $to memory_space_0 (ptr_deref_3638_word_address_0 ptr_deref_3638_data_0) 
    $delay ptr_deref_3638_store_0 2
    &/ [ptr_deref_3638_gather_scatter] (iNsTr_23_3307) (ptr_deref_3638_data_0) 
    // 		iNsTr_74 := (iNsTr_69 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1340
    // (iNsTr_69 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_3645_inst] (iNsTr_69_3622 type_cast_3644_wire_constant) (iNsTr_74_3646) 
    $delay ADD_u32_u32_3645_inst 1
    // 		iNsTr_75 := (iNsTr_74 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
    //  file prog.linked.opt.aa, line 1341
    // (iNsTr_74 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
    ==[EQ_u32_u1_3651_inst] (iNsTr_74_3646 type_cast_3650_wire_constant) (iNsTr_75_3652) 
    $delay EQ_u32_u1_3651_inst 1
    // 		iNsTr_76 := ( $mux iNsTr_75 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_74 ) 
    //  file prog.linked.opt.aa, line 1342
    // ( $mux iNsTr_75 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_74 ) 
    ? [MUX_3658_inst] (iNsTr_75_3652 type_cast_3656_wire_constant iNsTr_74_3646) (iNsTr_76_3659) 
    // 		DDCALCbuff_ptr := iNsTr_76
    //  file prog.linked.opt.aa, line 1343
    // DDCALCbuff_ptr
    $store [STORE_DDCALCbuff_ptr_3660_store_0] $to memory_space_1 (STORE_DDCALCbuff_ptr_3660_word_address_0 STORE_DDCALCbuff_ptr_3660_data_0) 
    $delay STORE_DDCALCbuff_ptr_3660_store_0 1
    &/ [STORE_DDCALCbuff_ptr_3660_gather_scatter] (iNsTr_76_3659) (STORE_DDCALCbuff_ptr_3660_data_0) 
    // 		iNsTr_78 := DDbuff_ptr
    //  file prog.linked.opt.aa, line 1344
    // DDbuff_ptr
    $load [LOAD_DDbuff_ptr_3664_load_0] $from memory_space_3 (LOAD_DDbuff_ptr_3664_word_address_0) (LOAD_DDbuff_ptr_3664_data_0) 
    $delay LOAD_DDbuff_ptr_3664_load_0 1
    &/ [LOAD_DDbuff_ptr_3664_gather_scatter] (LOAD_DDbuff_ptr_3664_data_0) (iNsTr_78_3665) 
    // 		iNsTr_79 := @(DDbuff[iNsTr_78])
    //  file prog.linked.opt.aa, line 1345
    &/ [array_obj_ref_3668_index_0_resize] (iNsTr_78_3665) (R_iNsTr_78_3667_resized) 
    &/ [array_obj_ref_3668_index_0_rename] (R_iNsTr_78_3667_resized) (R_iNsTr_78_3667_scaled) 
    &/ [array_obj_ref_3668_index_offset] (R_iNsTr_78_3667_scaled) (array_obj_ref_3668_final_offset) 
    &/ [array_obj_ref_3668_root_address_inst] (array_obj_ref_3668_final_offset) (array_obj_ref_3668_root_address) 
    # := [addr_of_3669_final_reg] (array_obj_ref_3668_root_address) (iNsTr_79_3670) 
    // 		->(iNsTr_79) := iNsTr_72
    //  file prog.linked.opt.aa, line 1346
    // ->(iNsTr_79)
    &/ [ptr_deref_3672_base_resize] (iNsTr_79_3670) (ptr_deref_3672_resized_base_address) 
    &/ [ptr_deref_3672_root_address_inst] (ptr_deref_3672_resized_base_address) (ptr_deref_3672_root_address) 
    &/ [ptr_deref_3672_addr_0] (ptr_deref_3672_root_address) (ptr_deref_3672_word_address_0) 
    $store [ptr_deref_3672_store_0] $to memory_space_2 (ptr_deref_3672_word_address_0 ptr_deref_3672_data_0) 
    $delay ptr_deref_3672_store_0 2
    &/ [ptr_deref_3672_gather_scatter] (iNsTr_72_3636) (ptr_deref_3672_data_0) 
    // 		iNsTr_81 := (iNsTr_78 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1347
    // (iNsTr_78 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_3679_inst] (iNsTr_78_3665 type_cast_3678_wire_constant) (iNsTr_81_3680) 
    $delay ADD_u32_u32_3679_inst 1
    // 		iNsTr_82 := (iNsTr_81 == ($bitcast ($uint<32>) _b00000000000000000000000001011100  ))
    //  file prog.linked.opt.aa, line 1348
    // (iNsTr_81 == ($bitcast ($uint<32>) _b00000000000000000000000001011100  ))
    ==[EQ_u32_u1_3685_inst] (iNsTr_81_3680 type_cast_3684_wire_constant) (iNsTr_82_3686) 
    $delay EQ_u32_u1_3685_inst 1
    // 		iNsTr_83 := ( $mux iNsTr_82 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_81 ) 
    //  file prog.linked.opt.aa, line 1349
    // ( $mux iNsTr_82 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_81 ) 
    ? [MUX_3692_inst] (iNsTr_82_3686 type_cast_3690_wire_constant iNsTr_81_3680) (iNsTr_83_3693) 
    // 		DDbuff_ptr := iNsTr_83
    //  file prog.linked.opt.aa, line 1350
    // DDbuff_ptr
    $store [STORE_DDbuff_ptr_3694_store_0] $to memory_space_3 (STORE_DDbuff_ptr_3694_word_address_0 STORE_DDbuff_ptr_3694_data_0) 
    $delay STORE_DDbuff_ptr_3694_store_0 1
    &/ [STORE_DDbuff_ptr_3694_gather_scatter] (iNsTr_83_3693) (STORE_DDbuff_ptr_3694_data_0) 
    // 		iNsTr_85 := (countx_x0 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1351
    // (countx_x0 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_3701_inst] (countx_x0_3276 type_cast_3700_wire_constant) (iNsTr_85_3702) 
    $delay ADD_u32_u32_3701_inst 1
    // 		iNsTr_86 := (init8Donex_x0 == ($bitcast ($uint<8>) _b00000000  ))
    //  file prog.linked.opt.aa, line 1352
    // (init8Donex_x0 == ($bitcast ($uint<8>) _b00000000  ))
    ==[EQ_u8_u1_3707_inst] (init8Donex_x0_3178 type_cast_3706_wire_constant) (iNsTr_86_3708) 
    $delay EQ_u8_u1_3707_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1353
    ==0? [if_stmt_3709_branch] (iNsTr_86_3708)
    // 		iNsTr_89 := (initBlankx_x1 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1363
    // (initBlankx_x1 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_3722_inst] (initBlankx_x1_3269 type_cast_3721_wire_constant) (iNsTr_89_3723) 
    $delay ADD_u32_u32_3722_inst 1
    // 		iNsTr_90 := (iNsTr_89 == ($bitcast ($uint<32>) _b00000000000000000000000011001000  ))
    //  file prog.linked.opt.aa, line 1364
    // (iNsTr_89 == ($bitcast ($uint<32>) _b00000000000000000000000011001000  ))
    ==[EQ_u32_u1_3728_inst] (iNsTr_89_3723 type_cast_3727_wire_constant) (iNsTr_90_3729) 
    $delay EQ_u32_u1_3728_inst 1
    // 		iNsTr_91 := (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.linked.opt.aa, line 1365
    // ($bitcast ($int<32>) iNsTr_68 )
    $S:=$U [type_cast_3732_inst] (iNsTr_68_3619) (type_cast_3732_wire)   $flowthrough
    $delay type_cast_3732_inst 0
    // (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    $S>$S[SGT_i32_u1_3736_inst] (type_cast_3732_wire type_cast_3735_wire_constant) (iNsTr_91_3737) 
    $delay SGT_i32_u1_3736_inst 1
    // 		iNsTr_92 := ( $mux iNsTr_91 ($bitcast ($uint<32>) _b00000000000000000000000000010000  )  iNsTr_85 ) 
    //  file prog.linked.opt.aa, line 1366
    // ( $mux iNsTr_91 ($bitcast ($uint<32>) _b00000000000000000000000000010000  )  iNsTr_85 ) 
    ? [MUX_3743_inst] (iNsTr_91_3737 type_cast_3741_wire_constant iNsTr_85_3702) (iNsTr_92_3744) 
    // 		iNsTr_93 := ( $mux iNsTr_90 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_89 ) 
    //  file prog.linked.opt.aa, line 1367
    // ( $mux iNsTr_90 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_89 ) 
    ? [MUX_3750_inst] (iNsTr_90_3729 type_cast_3748_wire_constant iNsTr_89_3723) (iNsTr_93_3751) 
    // 		iNsTr_94 := @(QRSbuff[qpk_countx_x1])
    //  file prog.linked.opt.aa, line 1368
    &/ [array_obj_ref_3754_index_0_resize] (qpk_countx_x1_3283) (R_qpk_countx_x1_3753_resized) 
    &/ [array_obj_ref_3754_index_0_rename] (R_qpk_countx_x1_3753_resized) (R_qpk_countx_x1_3753_scaled) 
    &/ [array_obj_ref_3754_index_offset] (R_qpk_countx_x1_3753_scaled) (array_obj_ref_3754_final_offset) 
    +[array_obj_ref_3754_root_address_inst] (array_obj_ref_3754_final_offset array_obj_ref_3754_resized_base_address) (array_obj_ref_3754_root_address) 
    $delay array_obj_ref_3754_root_address_inst 2
    # := [addr_of_3755_final_reg] (array_obj_ref_3754_root_address) (iNsTr_94_3756) 
    // 		->(iNsTr_94) := initMaxx_x1
    //  file prog.linked.opt.aa, line 1369
    // ->(iNsTr_94)
    &/ [ptr_deref_3758_base_resize] (iNsTr_94_3756) (ptr_deref_3758_resized_base_address) 
    &/ [ptr_deref_3758_root_address_inst] (ptr_deref_3758_resized_base_address) (ptr_deref_3758_root_address) 
    &/ [ptr_deref_3758_addr_0] (ptr_deref_3758_root_address) (ptr_deref_3758_word_address_0) 
    $store [ptr_deref_3758_store_0] $to memory_space_13 (ptr_deref_3758_word_address_0 ptr_deref_3758_data_0) 
    $delay ptr_deref_3758_store_0 2
    &/ [ptr_deref_3758_gather_scatter] (initMaxx_x1_3248) (ptr_deref_3758_data_0) 
    // 		iNsTr_96 := ( $mux iNsTr_90 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initMaxx_x1 ) 
    //  file prog.linked.opt.aa, line 1370
    // ( $mux iNsTr_90 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initMaxx_x1 ) 
    ? [MUX_3766_inst] (iNsTr_90_3729 type_cast_3764_wire_constant initMaxx_x1_3248) (iNsTr_96_3767) 
    // 		iNsTr_97 := ($cast ($uint<32>) iNsTr_90 )
    //  file prog.linked.opt.aa, line 1371
    // ($cast ($uint<32>) iNsTr_90 )
    # := [type_cast_3770_inst] (iNsTr_90_3729) (iNsTr_97_3771) 
    $delay type_cast_3770_inst 1
    // 		iNsTr_98 := (iNsTr_97 + qpk_countx_x1)
    //  file prog.linked.opt.aa, line 1372
    // (iNsTr_97 + qpk_countx_x1)
    +[ADD_u32_u32_3775_inst] (iNsTr_97_3771 qpk_countx_x1_3283) (iNsTr_98_3776) 
    $delay ADD_u32_u32_3775_inst 1
    // 		iNsTr_99 := (iNsTr_98 == ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
    //  file prog.linked.opt.aa, line 1373
    // (iNsTr_98 == ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
    ==[EQ_u32_u1_3781_inst] (iNsTr_98_3776 type_cast_3780_wire_constant) (iNsTr_99_3782) 
    $delay EQ_u32_u1_3781_inst 1
    // 		iNsTr_100 := (iNsTr_90 & iNsTr_99)
    //  file prog.linked.opt.aa, line 1374
    // (iNsTr_90 & iNsTr_99)
    &[AND_u1_u1_3786_inst] (iNsTr_90_3729 iNsTr_99_3782) (iNsTr_100_3787) 
    $delay AND_u1_u1_3786_inst 1
    // 		iNsTr_101 := ($cast ($uint<8>) iNsTr_100 )
    //  file prog.linked.opt.aa, line 1375
    // ($cast ($uint<8>) iNsTr_100 )
    # := [type_cast_3790_inst] (iNsTr_100_3787) (iNsTr_101_3791) 
    $delay type_cast_3790_inst 1
    // 		iNsTr_102 := (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) iNsTr_96 ))
    //  file prog.linked.opt.aa, line 1376
    // ($bitcast ($int<32>) iNsTr_68 )
    $S:=$U [type_cast_3794_inst] (iNsTr_68_3619) (type_cast_3794_wire)   $flowthrough
    $delay type_cast_3794_inst 0
    // ($bitcast ($int<32>) iNsTr_96 )
    $S:=$U [type_cast_3796_inst] (iNsTr_96_3767) (type_cast_3796_wire)   $flowthrough
    $delay type_cast_3796_inst 0
    // (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) iNsTr_96 ))
    $S>$S[SGT_i32_u1_3797_inst] (type_cast_3794_wire type_cast_3796_wire) (iNsTr_102_3798) 
    $delay SGT_i32_u1_3797_inst 1
    // 		iNsTr_103 := ( $mux iNsTr_102 iNsTr_68  iNsTr_96 ) 
    //  file prog.linked.opt.aa, line 1377
    // ( $mux iNsTr_102 iNsTr_68  iNsTr_96 ) 
    ? [MUX_3803_inst] (iNsTr_102_3798 iNsTr_68_3619 iNsTr_96_3767) (iNsTr_103_3804) 
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1378
    ==0? [if_stmt_3805_branch] (iNsTr_100_3787)
    // 		$call meanCalc (iNsTr_106 ) (iNsTr_107 ) 
    //  file prog.linked.opt.aa, line 1386
    $call [call_stmt_3820_call] $module meanCalc(iNsTr_106_3817) (iNsTr_107_3820) 
    $delay call_stmt_3820_call 2
    // 		iNsTr_108 := ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_107 ) )
    //  file prog.linked.opt.aa, line 1387
    // ($bitcast ($int<64>) iNsTr_107 )
    $S:=$U [type_cast_3823_inst] (iNsTr_107_3820) (type_cast_3823_wire)   $flowthrough
    $delay type_cast_3823_inst 0
    // ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_107 ) )
    $F:=$S [type_cast_3824_inst] (type_cast_3823_wire) (iNsTr_108_3825)  
    $delay type_cast_3824_inst 1
    // 		iNsTr_109 := threshold
    //  file prog.linked.opt.aa, line 1388
    // threshold
    $load [LOAD_threshold_3827_load_0] $from memory_space_24 (LOAD_threshold_3827_word_address_0) (LOAD_threshold_3827_data_0) 
    $delay LOAD_threshold_3827_load_0 1
    &/ [LOAD_threshold_3827_gather_scatter] (LOAD_threshold_3827_data_0) (iNsTr_109_3828) 
    // 		iNsTr_110 := (iNsTr_109 * iNsTr_108)
    //  file prog.linked.opt.aa, line 1389
    // (iNsTr_109 * iNsTr_108)
    *[MUL_f64_f64_3832_inst] (iNsTr_109_3828 iNsTr_108_3825) (iNsTr_110_3833) 
    $delay MUL_f64_f64_3832_inst 24
    // 		iNsTr_111 := ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_110 ) )
    //  file prog.linked.opt.aa, line 1390
    // ($cast ($int<32>) iNsTr_110 )
    $S:=$F [type_cast_3836_inst] (iNsTr_110_3833) (type_cast_3836_wire)  
    $delay type_cast_3836_inst 1
    // ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_110 ) )
    # := [type_cast_3837_inst] (type_cast_3836_wire) (iNsTr_111_3838) 
    $delay type_cast_3837_inst 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1392
    // 			$phi maxx_x07x_xi := 			  ($cast ($uint<32>) iNsTr_121 ) $on bb_15_bb_15			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1393
    // ($cast ($uint<32>) iNsTr_121 )
    # := [type_cast_3844_inst] (iNsTr_121_3917) (type_cast_3844_wire) 
    $delay type_cast_3844_inst 1
    $phi [phi_stmt_3841] (type_cast_3844_wire type_cast_3847_wire_constant) ( maxx_x07x_xi_3841 )
    // 			$phi minx_x06x_xi := 			  ($cast ($uint<32>) iNsTr_123 ) $on bb_15_bb_15			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1394
    // ($cast ($uint<32>) iNsTr_123 )
    # := [type_cast_3851_inst] (iNsTr_123_3929) (type_cast_3851_wire) 
    $delay type_cast_3851_inst 1
    $phi [phi_stmt_3848] (type_cast_3851_wire type_cast_3854_wire_constant) ( minx_x06x_xi_3848 )
    // 			$phi maxtx_x05x_xi := 			  ($cast ($uint<32>) iNsTr_120 ) $on bb_15_bb_15			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1395
    // ($cast ($uint<32>) iNsTr_120 )
    # := [type_cast_3858_inst] (iNsTr_120_3911) (type_cast_3858_wire) 
    $delay type_cast_3858_inst 1
    $phi [phi_stmt_3855] (type_cast_3858_wire type_cast_3861_wire_constant) ( maxtx_x05x_xi_3855 )
    // 			$phi mintx_x04x_xi := 			  ($cast ($uint<32>) iNsTr_122 ) $on bb_15_bb_15			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b0  ) ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1396
    // ($cast ($uint<32>) iNsTr_122 )
    # := [type_cast_3865_inst] (iNsTr_122_3923) (type_cast_3865_wire) 
    $delay type_cast_3865_inst 1
    $phi [phi_stmt_3862] (type_cast_3865_wire type_cast_3868_wire_constant) ( mintx_x04x_xi_3862 )
    // 			$phi iNsTr_115 := 			  ($cast ($uint<32>) iNsTr_125 ) $on bb_15_bb_15			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1397
    // ($cast ($uint<32>) iNsTr_125 )
    # := [type_cast_3872_inst] (iNsTr_125_3941) (type_cast_3872_wire) 
    $delay type_cast_3872_inst 1
    $phi [phi_stmt_3869] (type_cast_3872_wire type_cast_3875_wire_constant) ( iNsTr_115_3869 )
    // 			$phi ptrx_x02x_xi := 			  ($cast ($uint<32>) iNsTr_127 ) $on bb_15_bb_15			  ($cast ($uint<32>) iNsTr_83 ) $on xx_xpreheader_bb_15 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1398
    // ($cast ($uint<32>) iNsTr_127 )
    # := [type_cast_3879_inst] (iNsTr_127_3954) (type_cast_3879_wire) 
    $delay type_cast_3879_inst 1
    // ($cast ($uint<32>) iNsTr_83 )
    # := [type_cast_3881_inst] (iNsTr_83_3693) (type_cast_3881_wire) 
    $delay type_cast_3881_inst 1
    $phi [phi_stmt_3876] (type_cast_3879_wire type_cast_3881_wire) ( ptrx_x02x_xi_3876 )
    // 		iNsTr_116 := @(DDbuff[ptrx_x02x_xi])
    //  file prog.linked.opt.aa, line 1400
    &/ [array_obj_ref_3885_index_0_resize] (ptrx_x02x_xi_3876) (R_ptrx_x02x_xi_3884_resized) 
    &/ [array_obj_ref_3885_index_0_rename] (R_ptrx_x02x_xi_3884_resized) (R_ptrx_x02x_xi_3884_scaled) 
    &/ [array_obj_ref_3885_index_offset] (R_ptrx_x02x_xi_3884_scaled) (array_obj_ref_3885_final_offset) 
    &/ [array_obj_ref_3885_root_address_inst] (array_obj_ref_3885_final_offset) (array_obj_ref_3885_root_address) 
    # := [addr_of_3886_final_reg] (array_obj_ref_3885_root_address) (iNsTr_116_3887) 
    // 		iNsTr_117 := ->(iNsTr_116)
    //  file prog.linked.opt.aa, line 1401
    // ->(iNsTr_116)
    &/ [ptr_deref_3890_base_resize] (iNsTr_116_3887) (ptr_deref_3890_resized_base_address) 
    &/ [ptr_deref_3890_root_address_inst] (ptr_deref_3890_resized_base_address) (ptr_deref_3890_root_address) 
    &/ [ptr_deref_3890_addr_0] (ptr_deref_3890_root_address) (ptr_deref_3890_word_address_0) 
    $load [ptr_deref_3890_load_0] $from memory_space_2 (ptr_deref_3890_word_address_0) (ptr_deref_3890_data_0) 
    $delay ptr_deref_3890_load_0 2
    &/ [ptr_deref_3890_gather_scatter] (ptr_deref_3890_data_0) (iNsTr_117_3891) 
    // 		iNsTr_118 := (($bitcast ($int<32>) iNsTr_117 ) > ($bitcast ($int<32>) maxx_x07x_xi ))
    //  file prog.linked.opt.aa, line 1402
    // ($bitcast ($int<32>) iNsTr_117 )
    $S:=$U [type_cast_3894_inst] (iNsTr_117_3891) (type_cast_3894_wire)   $flowthrough
    $delay type_cast_3894_inst 0
    // ($bitcast ($int<32>) maxx_x07x_xi )
    $S:=$U [type_cast_3896_inst] (maxx_x07x_xi_3841) (type_cast_3896_wire)   $flowthrough
    $delay type_cast_3896_inst 0
    // (($bitcast ($int<32>) iNsTr_117 ) > ($bitcast ($int<32>) maxx_x07x_xi ))
    $S>$S[SGT_i32_u1_3897_inst] (type_cast_3894_wire type_cast_3896_wire) (iNsTr_118_3898) 
    $delay SGT_i32_u1_3897_inst 1
    // 		iNsTr_119 := (($bitcast ($int<32>) iNsTr_117 ) < ($bitcast ($int<32>) minx_x06x_xi ))
    //  file prog.linked.opt.aa, line 1403
    // ($bitcast ($int<32>) iNsTr_117 )
    $S:=$U [type_cast_3901_inst] (iNsTr_117_3891) (type_cast_3901_wire)   $flowthrough
    $delay type_cast_3901_inst 0
    // ($bitcast ($int<32>) minx_x06x_xi )
    $S:=$U [type_cast_3903_inst] (minx_x06x_xi_3848) (type_cast_3903_wire)   $flowthrough
    $delay type_cast_3903_inst 0
    // (($bitcast ($int<32>) iNsTr_117 ) < ($bitcast ($int<32>) minx_x06x_xi ))
    $S<$S[SLT_i32_u1_3904_inst] (type_cast_3901_wire type_cast_3903_wire) (iNsTr_119_3905) 
    $delay SLT_i32_u1_3904_inst 1
    // 		iNsTr_120 := ( $mux iNsTr_118 iNsTr_115  maxtx_x05x_xi ) 
    //  file prog.linked.opt.aa, line 1404
    // ( $mux iNsTr_118 iNsTr_115  maxtx_x05x_xi ) 
    ? [MUX_3910_inst] (iNsTr_118_3898 iNsTr_115_3869 maxtx_x05x_xi_3855) (iNsTr_120_3911) 
    // 		iNsTr_121 := ( $mux iNsTr_118 iNsTr_117  maxx_x07x_xi ) 
    //  file prog.linked.opt.aa, line 1405
    // ( $mux iNsTr_118 iNsTr_117  maxx_x07x_xi ) 
    ? [MUX_3916_inst] (iNsTr_118_3898 iNsTr_117_3891 maxx_x07x_xi_3841) (iNsTr_121_3917) 
    // 		iNsTr_122 := ( $mux iNsTr_119 iNsTr_115  mintx_x04x_xi ) 
    //  file prog.linked.opt.aa, line 1406
    // ( $mux iNsTr_119 iNsTr_115  mintx_x04x_xi ) 
    ? [MUX_3922_inst] (iNsTr_119_3905 iNsTr_115_3869 mintx_x04x_xi_3862) (iNsTr_122_3923) 
    // 		iNsTr_123 := ( $mux iNsTr_119 iNsTr_117  minx_x06x_xi ) 
    //  file prog.linked.opt.aa, line 1407
    // ( $mux iNsTr_119 iNsTr_117  minx_x06x_xi ) 
    ? [MUX_3928_inst] (iNsTr_119_3905 iNsTr_117_3891 minx_x06x_xi_3848) (iNsTr_123_3929) 
    // 		iNsTr_124 := (ptrx_x02x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1408
    // (ptrx_x02x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_3934_inst] (ptrx_x02x_xi_3876 type_cast_3933_wire_constant) (iNsTr_124_3935) 
    $delay ADD_u32_u32_3934_inst 1
    // 		iNsTr_125 := (iNsTr_115 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1409
    // (iNsTr_115 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_3940_inst] (iNsTr_115_3869 type_cast_3939_wire_constant) (iNsTr_125_3941) 
    $delay ADD_u32_u32_3940_inst 1
    // 		iNsTr_126 := (iNsTr_124 == ($bitcast ($uint<32>) _b00000000000000000000000001011100  ))
    //  file prog.linked.opt.aa, line 1410
    // (iNsTr_124 == ($bitcast ($uint<32>) _b00000000000000000000000001011100  ))
    ==[EQ_u32_u1_3946_inst] (iNsTr_124_3935 type_cast_3945_wire_constant) (iNsTr_126_3947) 
    $delay EQ_u32_u1_3946_inst 1
    // 		iNsTr_127 := ( $mux iNsTr_126 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_124 ) 
    //  file prog.linked.opt.aa, line 1411
    // ( $mux iNsTr_126 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_124 ) 
    ? [MUX_3953_inst] (iNsTr_126_3947 type_cast_3951_wire_constant iNsTr_124_3935) (iNsTr_127_3954) 
    // 		exitcond4 := (iNsTr_125 == ($bitcast ($uint<32>) _b00000000000000000000000000101100  ))
    //  file prog.linked.opt.aa, line 1412
    // (iNsTr_125 == ($bitcast ($uint<32>) _b00000000000000000000000000101100  ))
    ==[EQ_u32_u1_3959_inst] (iNsTr_125_3941 type_cast_3958_wire_constant) (exitcond4_3960) 
    $delay EQ_u32_u1_3959_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1413
    ==0? [if_stmt_3961_branch] (exitcond4_3960)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1418
    // 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_123 ) $on bb_15_xx_x_crit_edgex_xi // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1419
    // ($cast ($uint<32>) iNsTr_123 )
    # := [type_cast_3971_inst] (iNsTr_123_3929) (type_cast_3971_wire) 
    $delay type_cast_3971_inst 1
    $phi [phi_stmt_3968] (type_cast_3971_wire) ( xx_xlcssa3_3968 )
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_122 ) $on bb_15_xx_x_crit_edgex_xi // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1420
    // ($cast ($uint<32>) iNsTr_122 )
    # := [type_cast_3975_inst] (iNsTr_122_3923) (type_cast_3975_wire) 
    $delay type_cast_3975_inst 1
    $phi [phi_stmt_3972] (type_cast_3975_wire) ( xx_xlcssa2_3972 )
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_121 ) $on bb_15_xx_x_crit_edgex_xi // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1421
    // ($cast ($uint<32>) iNsTr_121 )
    # := [type_cast_3979_inst] (iNsTr_121_3917) (type_cast_3979_wire) 
    $delay type_cast_3979_inst 1
    $phi [phi_stmt_3976] (type_cast_3979_wire) ( xx_xlcssa1_3976 )
    // 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_120 ) $on bb_15_xx_x_crit_edgex_xi // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1422
    // ($cast ($uint<32>) iNsTr_120 )
    # := [type_cast_3983_inst] (iNsTr_120_3911) (type_cast_3983_wire) 
    $delay type_cast_3983_inst 1
    $phi [phi_stmt_3980] (type_cast_3983_wire) ( xx_xlcssa_3980 )
    // 		maxDer := xx_xlcssa1
    //  file prog.linked.opt.aa, line 1424
    // maxDer
    $store [STORE_maxDer_3985_store_0] $to memory_space_21 (STORE_maxDer_3985_word_address_0 STORE_maxDer_3985_data_0) 
    $delay STORE_maxDer_3985_store_0 1
    &/ [STORE_maxDer_3985_gather_scatter] (xx_xlcssa1_3976) (STORE_maxDer_3985_data_0) 
    // 		iNsTr_147 := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - xx_xlcssa3)
    //  file prog.linked.opt.aa, line 1425
    // (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - xx_xlcssa3)
    -[SUB_u32_u32_3992_inst] (type_cast_3990_wire_constant xx_xlcssa3_3968) (iNsTr_147_3993) 
    $delay SUB_u32_u32_3992_inst 1
    // 		iNsTr_148 := ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_147 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
    //  file prog.linked.opt.aa, line 1426
    // ($bitcast ($int<32>) iNsTr_147 )
    $S:=$U [type_cast_3996_inst] (iNsTr_147_3993) (type_cast_3996_wire)   $flowthrough
    $delay type_cast_3996_inst 0
    // (($bitcast ($int<32>) iNsTr_147 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) ))
    $S>>[ASHR_i32_i32_4000_inst] (type_cast_3996_wire type_cast_3999_wire_constant) (ASHR_i32_i32_4000_wire)  $flowthrough
    $delay ASHR_i32_i32_4000_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_147 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
    # := [type_cast_4001_inst] (ASHR_i32_i32_4000_wire) (iNsTr_148_4002) 
    $delay type_cast_4001_inst 1
    // 		iNsTr_149 := (($bitcast ($int<32>) xx_xlcssa1 ) > ($bitcast ($int<32>) iNsTr_148 ))
    //  file prog.linked.opt.aa, line 1427
    // ($bitcast ($int<32>) xx_xlcssa1 )
    $S:=$U [type_cast_4005_inst] (xx_xlcssa1_3976) (type_cast_4005_wire)   $flowthrough
    $delay type_cast_4005_inst 0
    // ($bitcast ($int<32>) iNsTr_148 )
    $S:=$U [type_cast_4007_inst] (iNsTr_148_4002) (type_cast_4007_wire)   $flowthrough
    $delay type_cast_4007_inst 0
    // (($bitcast ($int<32>) xx_xlcssa1 ) > ($bitcast ($int<32>) iNsTr_148 ))
    $S>$S[SGT_i32_u1_4008_inst] (type_cast_4005_wire type_cast_4007_wire) (iNsTr_149_4009) 
    $delay SGT_i32_u1_4008_inst 1
    // 		iNsTr_150 := ($bitcast ($uint<32>) (($bitcast ($int<32>) xx_xlcssa1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
    //  file prog.linked.opt.aa, line 1428
    // ($bitcast ($int<32>) xx_xlcssa1 )
    $S:=$U [type_cast_4012_inst] (xx_xlcssa1_3976) (type_cast_4012_wire)   $flowthrough
    $delay type_cast_4012_inst 0
    // (($bitcast ($int<32>) xx_xlcssa1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) ))
    $S>>[ASHR_i32_i32_4016_inst] (type_cast_4012_wire type_cast_4015_wire_constant) (ASHR_i32_i32_4016_wire)  $flowthrough
    $delay ASHR_i32_i32_4016_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) xx_xlcssa1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
    # := [type_cast_4017_inst] (ASHR_i32_i32_4016_wire) (iNsTr_150_4018) 
    $delay type_cast_4017_inst 1
    // 		iNsTr_151 := (($bitcast ($int<32>) iNsTr_150 ) < ($bitcast ($int<32>) iNsTr_147 ))
    //  file prog.linked.opt.aa, line 1429
    // ($bitcast ($int<32>) iNsTr_150 )
    $S:=$U [type_cast_4021_inst] (iNsTr_150_4018) (type_cast_4021_wire)   $flowthrough
    $delay type_cast_4021_inst 0
    // ($bitcast ($int<32>) iNsTr_147 )
    $S:=$U [type_cast_4023_inst] (iNsTr_147_3993) (type_cast_4023_wire)   $flowthrough
    $delay type_cast_4023_inst 0
    // (($bitcast ($int<32>) iNsTr_150 ) < ($bitcast ($int<32>) iNsTr_147 ))
    $S<$S[SLT_i32_u1_4024_inst] (type_cast_4021_wire type_cast_4023_wire) (iNsTr_151_4025) 
    $delay SLT_i32_u1_4024_inst 1
    // 		orx_xcondx_xi11 := (iNsTr_149 & iNsTr_151)
    //  file prog.linked.opt.aa, line 1430
    // (iNsTr_149 & iNsTr_151)
    &[AND_u1_u1_4029_inst] (iNsTr_149_4009 iNsTr_151_4025) (orx_xcondx_xi11_4030) 
    $delay AND_u1_u1_4029_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1431
    ==0? [if_stmt_4031_branch] (orx_xcondx_xi11_4030)
    // 		iNsTr_205 := (xx_xlcssa - xx_xlcssa2)
    //  file prog.linked.opt.aa, line 1438
    // (xx_xlcssa - xx_xlcssa2)
    -[SUB_u32_u32_4041_inst] (xx_xlcssa_3980 xx_xlcssa2_3972) (iNsTr_205_4042) 
    $delay SUB_u32_u32_4041_inst 1
    // 		isposx_xi := (($bitcast ($int<32>) iNsTr_205 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ))
    //  file prog.linked.opt.aa, line 1439
    // ($bitcast ($int<32>) iNsTr_205 )
    $S:=$U [type_cast_4045_inst] (iNsTr_205_4042) (type_cast_4045_wire)   $flowthrough
    $delay type_cast_4045_inst 0
    // (($bitcast ($int<32>) iNsTr_205 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ))
    $S>$S[SGT_i32_u1_4049_inst] (type_cast_4045_wire type_cast_4048_wire_constant) (isposx_xi_4050) 
    $delay SGT_i32_u1_4049_inst 1
    // 		negx_xi := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_205)
    //  file prog.linked.opt.aa, line 1440
    // (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_205)
    -[SUB_u32_u32_4055_inst] (type_cast_4053_wire_constant iNsTr_205_4042) (negx_xi_4056) 
    $delay SUB_u32_u32_4055_inst 1
    // 		iNsTr_206 := ( $mux isposx_xi iNsTr_205  negx_xi ) 
    //  file prog.linked.opt.aa, line 1441
    // ( $mux isposx_xi iNsTr_205  negx_xi ) 
    ? [MUX_4061_inst] (isposx_xi_4050 iNsTr_205_4042 negx_xi_4056) (iNsTr_206_4062) 
    // 		phitmpx_xi12 := (($bitcast ($int<32>) iNsTr_206 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000011101  ) ))
    //  file prog.linked.opt.aa, line 1442
    // ($bitcast ($int<32>) iNsTr_206 )
    $S:=$U [type_cast_4065_inst] (iNsTr_206_4062) (type_cast_4065_wire)   $flowthrough
    $delay type_cast_4065_inst 0
    // (($bitcast ($int<32>) iNsTr_206 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000011101  ) ))
    $S>$S[SGT_i32_u1_4069_inst] (type_cast_4065_wire type_cast_4068_wire_constant) (phitmpx_xi12_4070) 
    $delay SGT_i32_u1_4069_inst 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1444
    // 			$phi iNsTr_208 := 			  ($cast ($uint<1>) ($bitcast ($uint<1>) _b1  ) ) $on xx_x_crit_edgex_xi_blsCheckx_xexit			  ($cast ($uint<1>) phitmpx_xi12 ) $on bb_17_blsCheckx_xexit // type of target is $uint<1>
    //  file prog.linked.opt.aa, line 1445
    // ($cast ($uint<1>) phitmpx_xi12 )
    # := [type_cast_4079_inst] (phitmpx_xi12_4070) (type_cast_4079_wire) 
    $delay type_cast_4079_inst 1
    $phi [phi_stmt_4073] (type_cast_4077_wire_constant type_cast_4079_wire) ( iNsTr_208_4073 )
    // 		iNsTr_209 := (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) det_threshx_x1 ))
    //  file prog.linked.opt.aa, line 1447
    // ($bitcast ($int<32>) iNsTr_68 )
    $S:=$U [type_cast_4083_inst] (iNsTr_68_3619) (type_cast_4083_wire)   $flowthrough
    $delay type_cast_4083_inst 0
    // ($bitcast ($int<32>) det_threshx_x1 )
    $S:=$U [type_cast_4085_inst] (det_threshx_x1_3241) (type_cast_4085_wire)   $flowthrough
    $delay type_cast_4085_inst 0
    // (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) det_threshx_x1 ))
    $S>$S[SGT_i32_u1_4086_inst] (type_cast_4083_wire type_cast_4085_wire) (iNsTr_209_4087) 
    $delay SGT_i32_u1_4086_inst 1
    // 		iNsTr_210 := (iNsTr_208 ^ ($bitcast ($uint<1>) _b1  ))
    //  file prog.linked.opt.aa, line 1448
    // (iNsTr_208 ^ ($bitcast ($uint<1>) _b1  ))
    ^[XOR_u1_u1_4092_inst] (iNsTr_208_4073 type_cast_4091_wire_constant) (iNsTr_210_4093) 
    $delay XOR_u1_u1_4092_inst 1
    // 		iNsTr_211 := (iNsTr_209 & iNsTr_210)
    //  file prog.linked.opt.aa, line 1449
    // (iNsTr_209 & iNsTr_210)
    &[AND_u1_u1_4097_inst] (iNsTr_209_4087 iNsTr_210_4093) (iNsTr_211_4098) 
    $delay AND_u1_u1_4097_inst 1
    // 		xx_xnot5 := (($bitcast ($int<32>) iNsTr_68 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
    //  file prog.linked.opt.aa, line 1450
    // ($bitcast ($int<32>) iNsTr_68 )
    $S:=$U [type_cast_4101_inst] (iNsTr_68_3619) (type_cast_4101_wire)   $flowthrough
    $delay type_cast_4101_inst 0
    // (($bitcast ($int<32>) iNsTr_68 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
    $S<$S[SLT_i32_u1_4105_inst] (type_cast_4101_wire type_cast_4104_wire_constant) (xx_xnot5_4106) 
    $delay SLT_i32_u1_4105_inst 1
    // 		orx_xcond := (xx_xnot5 | iNsTr_209)
    //  file prog.linked.opt.aa, line 1451
    // (xx_xnot5 | iNsTr_209)
    |[OR_u1_u1_4110_inst] (xx_xnot5_4106 iNsTr_209_4087) (orx_xcond_4111) 
    $delay OR_u1_u1_4110_inst 1
    // 		xx_xdemorgan := (orx_xcond | iNsTr_208)
    //  file prog.linked.opt.aa, line 1452
    // (orx_xcond | iNsTr_208)
    |[OR_u1_u1_4115_inst] (orx_xcond_4111 iNsTr_208_4073) (xx_xdemorgan_4116) 
    $delay OR_u1_u1_4115_inst 1
    // 		iNsTr_212 := (xx_xdemorgan ^ ($bitcast ($uint<1>) _b1  ))
    //  file prog.linked.opt.aa, line 1453
    // (xx_xdemorgan ^ ($bitcast ($uint<1>) _b1  ))
    ^[XOR_u1_u1_4121_inst] (xx_xdemorgan_4116 type_cast_4120_wire_constant) (iNsTr_212_4122) 
    $delay XOR_u1_u1_4121_inst 1
    // 		iNsTr_213 := (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) sbPeakx_x1 ))
    //  file prog.linked.opt.aa, line 1454
    // ($bitcast ($int<32>) iNsTr_68 )
    $S:=$U [type_cast_4125_inst] (iNsTr_68_3619) (type_cast_4125_wire)   $flowthrough
    $delay type_cast_4125_inst 0
    // ($bitcast ($int<32>) sbPeakx_x1 )
    $S:=$U [type_cast_4127_inst] (sbPeakx_x1_3290) (type_cast_4127_wire)   $flowthrough
    $delay type_cast_4127_inst 0
    // (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) sbPeakx_x1 ))
    $S>$S[SGT_i32_u1_4128_inst] (type_cast_4125_wire type_cast_4127_wire) (iNsTr_213_4129) 
    $delay SGT_i32_u1_4128_inst 1
    // 		orx_xcond6 := (iNsTr_213 & iNsTr_212)
    //  file prog.linked.opt.aa, line 1455
    // (iNsTr_213 & iNsTr_212)
    &[AND_u1_u1_4133_inst] (iNsTr_213_4129 iNsTr_212_4122) (orx_xcond6_4134) 
    $delay AND_u1_u1_4133_inst 1
    // 		iNsTr_214 := (($bitcast ($int<32>) iNsTr_85 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000001010111  ) ))
    //  file prog.linked.opt.aa, line 1456
    // ($bitcast ($int<32>) iNsTr_85 )
    $S:=$U [type_cast_4137_inst] (iNsTr_85_3702) (type_cast_4137_wire)   $flowthrough
    $delay type_cast_4137_inst 0
    // (($bitcast ($int<32>) iNsTr_85 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000001010111  ) ))
    $S>$S[SGT_i32_u1_4141_inst] (type_cast_4137_wire type_cast_4140_wire_constant) (iNsTr_214_4142) 
    $delay SGT_i32_u1_4141_inst 1
    // 		iNsTr_215 := (orx_xcond6 & iNsTr_214)
    //  file prog.linked.opt.aa, line 1457
    // (orx_xcond6 & iNsTr_214)
    &[AND_u1_u1_4146_inst] (orx_xcond6_4134 iNsTr_214_4142) (iNsTr_215_4147) 
    $delay AND_u1_u1_4146_inst 1
    // 		iNsTr_216 := ( $mux xx_xdemorgan noiseValx_x1  iNsTr_68 ) 
    //  file prog.linked.opt.aa, line 1458
    // ( $mux xx_xdemorgan noiseValx_x1  iNsTr_68 ) 
    ? [MUX_4152_inst] (xx_xdemorgan_4116 noiseValx_x1_3192 iNsTr_68_3619) (iNsTr_216_4153) 
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1459
    ==0? [if_stmt_4154_branch] (xx_xdemorgan_4116)
    // 		iNsTr_223 := NOISEbuff_ptr
    //  file prog.linked.opt.aa, line 1466
    // NOISEbuff_ptr
    $load [LOAD_NOISEbuff_ptr_4162_load_0] $from memory_space_14 (LOAD_NOISEbuff_ptr_4162_word_address_0) (LOAD_NOISEbuff_ptr_4162_data_0) 
    $delay LOAD_NOISEbuff_ptr_4162_load_0 1
    &/ [LOAD_NOISEbuff_ptr_4162_gather_scatter] (LOAD_NOISEbuff_ptr_4162_data_0) (iNsTr_223_4163) 
    // 		iNsTr_224 := @(NOISEbuff[iNsTr_223])
    //  file prog.linked.opt.aa, line 1467
    &/ [array_obj_ref_4166_index_0_resize] (iNsTr_223_4163) (R_iNsTr_223_4165_resized) 
    &/ [array_obj_ref_4166_index_0_rename] (R_iNsTr_223_4165_resized) (R_iNsTr_223_4165_scaled) 
    &/ [array_obj_ref_4166_index_offset] (R_iNsTr_223_4165_scaled) (array_obj_ref_4166_final_offset) 
    &/ [array_obj_ref_4166_root_address_inst] (array_obj_ref_4166_final_offset) (array_obj_ref_4166_root_address) 
    # := [addr_of_4167_final_reg] (array_obj_ref_4166_root_address) (iNsTr_224_4168) 
    // 		->(iNsTr_224) := iNsTr_216
    //  file prog.linked.opt.aa, line 1468
    // ->(iNsTr_224)
    &/ [ptr_deref_4170_base_resize] (iNsTr_224_4168) (ptr_deref_4170_resized_base_address) 
    &/ [ptr_deref_4170_root_address_inst] (ptr_deref_4170_resized_base_address) (ptr_deref_4170_root_address) 
    &/ [ptr_deref_4170_addr_0] (ptr_deref_4170_root_address) (ptr_deref_4170_word_address_0) 
    $store [ptr_deref_4170_store_0] $to memory_space_13 (ptr_deref_4170_word_address_0 ptr_deref_4170_data_0) 
    $delay ptr_deref_4170_store_0 2
    &/ [ptr_deref_4170_gather_scatter] (iNsTr_216_4153) (ptr_deref_4170_data_0) 
    // 		iNsTr_226 := (iNsTr_223 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.linked.opt.aa, line 1469
    // (iNsTr_223 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    +[ADD_u32_u32_4177_inst] (iNsTr_223_4163 type_cast_4176_wire_constant) (iNsTr_226_4178) 
    $delay ADD_u32_u32_4177_inst 1
    // 		iNsTr_227 := (iNsTr_223 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.linked.opt.aa, line 1470
    // (iNsTr_223 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_4183_inst] (iNsTr_223_4163 type_cast_4182_wire_constant) (iNsTr_227_4184) 
    $delay EQ_u32_u1_4183_inst 1
    // 		maxx_xx_xix_xi8 := ( $mux iNsTr_227 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_226 ) 
    //  file prog.linked.opt.aa, line 1471
    // ( $mux iNsTr_227 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_226 ) 
    ? [MUX_4190_inst] (iNsTr_227_4184 type_cast_4188_wire_constant iNsTr_226_4178) (maxx_xx_xix_xi8_4191) 
    // 		NOISEbuff_ptr := maxx_xx_xix_xi8
    //  file prog.linked.opt.aa, line 1472
    // NOISEbuff_ptr
    $store [STORE_NOISEbuff_ptr_4192_store_0] $to memory_space_14 (STORE_NOISEbuff_ptr_4192_word_address_0 STORE_NOISEbuff_ptr_4192_data_0) 
    $delay STORE_NOISEbuff_ptr_4192_store_0 1
    &/ [STORE_NOISEbuff_ptr_4192_gather_scatter] (maxx_xx_xix_xi8_4191) (STORE_NOISEbuff_ptr_4192_data_0) 
    // 		$call meanCalc (iNsTr_229 ) (iNsTr_230 ) 
    //  file prog.linked.opt.aa, line 1474
    $call [call_stmt_4203_call] $module meanCalc(iNsTr_229_4200) (iNsTr_230_4203) 
    $delay call_stmt_4203_call 2
    // 		iNsTr_231 := (qmeanx_x1 - iNsTr_230)
    //  file prog.linked.opt.aa, line 1475
    // (qmeanx_x1 - iNsTr_230)
    -[SUB_u32_u32_4207_inst] (qmeanx_x1_3220 iNsTr_230_4203) (iNsTr_231_4208) 
    $delay SUB_u32_u32_4207_inst 1
    // 		iNsTr_232 := ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_231 ) )
    //  file prog.linked.opt.aa, line 1476
    // ($bitcast ($int<64>) iNsTr_231 )
    $S:=$U [type_cast_4211_inst] (iNsTr_231_4208) (type_cast_4211_wire)   $flowthrough
    $delay type_cast_4211_inst 0
    // ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_231 ) )
    $F:=$S [type_cast_4212_inst] (type_cast_4211_wire) (iNsTr_232_4213)  
    $delay type_cast_4212_inst 1
    // 		iNsTr_233 := threshold
    //  file prog.linked.opt.aa, line 1477
    // threshold
    $load [LOAD_threshold_4215_load_0] $from memory_space_24 (LOAD_threshold_4215_word_address_0) (LOAD_threshold_4215_data_0) 
    $delay LOAD_threshold_4215_load_0 1
    &/ [LOAD_threshold_4215_gather_scatter] (LOAD_threshold_4215_data_0) (iNsTr_233_4216) 
    // 		iNsTr_234 := (iNsTr_233 * iNsTr_232)
    //  file prog.linked.opt.aa, line 1478
    // (iNsTr_233 * iNsTr_232)
    *[MUL_f64_f64_4220_inst] (iNsTr_233_4216 iNsTr_232_4213) (iNsTr_234_4221) 
    $delay MUL_f64_f64_4220_inst 24
    // 		iNsTr_235 := ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_234 ) )
    //  file prog.linked.opt.aa, line 1479
    // ($cast ($int<32>) iNsTr_234 )
    $S:=$F [type_cast_4224_inst] (iNsTr_234_4221) (type_cast_4224_wire)  
    $delay type_cast_4224_inst 1
    // ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_234 ) )
    # := [type_cast_4225_inst] (type_cast_4224_wire) (iNsTr_235_4226) 
    $delay type_cast_4225_inst 1
    // 		iNsTr_236 := (iNsTr_235 + iNsTr_230)
    //  file prog.linked.opt.aa, line 1480
    // (iNsTr_235 + iNsTr_230)
    +[ADD_u32_u32_4230_inst] (iNsTr_235_4226 iNsTr_230_4203) (iNsTr_236_4231) 
    $delay ADD_u32_u32_4230_inst 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1482
    // 			$phi nmeanx_x2 := 			  ($cast ($uint<32>) iNsTr_230 ) $on bb_19_bb_20			  ($cast ($uint<32>) nmeanx_x1 ) $on blsCheckx_xexit_bb_20 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1483
    // ($cast ($uint<32>) iNsTr_230 )
    # := [type_cast_4237_inst] (iNsTr_230_4203) (type_cast_4237_wire) 
    $delay type_cast_4237_inst 1
    // ($cast ($uint<32>) nmeanx_x1 )
    # := [type_cast_4239_inst] (nmeanx_x1_3213) (type_cast_4239_wire) 
    $delay type_cast_4239_inst 1
    $phi [phi_stmt_4234] (type_cast_4237_wire type_cast_4239_wire) ( nmeanx_x2_4234 )
    // 			$phi det_threshx_x2 := 			  ($cast ($uint<32>) iNsTr_236 ) $on bb_19_bb_20			  ($cast ($uint<32>) det_threshx_x1 ) $on blsCheckx_xexit_bb_20 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1484
    // ($cast ($uint<32>) iNsTr_236 )
    # := [type_cast_4243_inst] (iNsTr_236_4231) (type_cast_4243_wire) 
    $delay type_cast_4243_inst 1
    // ($cast ($uint<32>) det_threshx_x1 )
    # := [type_cast_4245_inst] (det_threshx_x1_3241) (type_cast_4245_wire) 
    $delay type_cast_4245_inst 1
    $phi [phi_stmt_4240] (type_cast_4243_wire type_cast_4245_wire) ( det_threshx_x2_4240 )
    // 		iNsTr_218 := ( $mux iNsTr_215 iNsTr_68  sbPeakx_x1 ) 
    //  file prog.linked.opt.aa, line 1486
    // ( $mux iNsTr_215 iNsTr_68  sbPeakx_x1 ) 
    ? [MUX_4251_inst] (iNsTr_215_4147 iNsTr_68_3619 sbPeakx_x1_3290) (iNsTr_218_4252) 
    // 		iNsTr_219 := (countx_x0 + ($bitcast ($uint<32>) _b11111111111111111111111111110001  ))
    //  file prog.linked.opt.aa, line 1487
    // (countx_x0 + ($bitcast ($uint<32>) _b11111111111111111111111111110001  ))
    +[ADD_u32_u32_4257_inst] (countx_x0_3276 type_cast_4256_wire_constant) (iNsTr_219_4258) 
    $delay ADD_u32_u32_4257_inst 1
    // 		iNsTr_220 := ( $mux iNsTr_215 iNsTr_219  sbLocx_x1 ) 
    //  file prog.linked.opt.aa, line 1488
    // ( $mux iNsTr_215 iNsTr_219  sbLocx_x1 ) 
    ? [MUX_4263_inst] (iNsTr_215_4147 iNsTr_219_4258 sbLocx_x1_3227) (iNsTr_220_4264) 
    // 		iNsTr_221 := (($bitcast ($int<32>) iNsTr_85 ) > ($bitcast ($int<32>) sb_countx_x1 ))
    //  file prog.linked.opt.aa, line 1489
    // ($bitcast ($int<32>) iNsTr_85 )
    $S:=$U [type_cast_4267_inst] (iNsTr_85_3702) (type_cast_4267_wire)   $flowthrough
    $delay type_cast_4267_inst 0
    // ($bitcast ($int<32>) sb_countx_x1 )
    $S:=$U [type_cast_4269_inst] (sb_countx_x1_3234) (type_cast_4269_wire)   $flowthrough
    $delay type_cast_4269_inst 0
    // (($bitcast ($int<32>) iNsTr_85 ) > ($bitcast ($int<32>) sb_countx_x1 ))
    $S>$S[SGT_i32_u1_4270_inst] (type_cast_4267_wire type_cast_4269_wire) (iNsTr_221_4271) 
    $delay SGT_i32_u1_4270_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1490
    ==0? [if_stmt_4272_branch] (iNsTr_221_4271)
    // 		iNsTr_238 := ($bitcast ($uint<32>) (($bitcast ($int<32>) det_threshx_x2 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) )
    //  file prog.linked.opt.aa, line 1497
    // ($bitcast ($int<32>) det_threshx_x2 )
    $S:=$U [type_cast_4281_inst] (det_threshx_x2_4240) (type_cast_4281_wire)   $flowthrough
    $delay type_cast_4281_inst 0
    // (($bitcast ($int<32>) det_threshx_x2 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
    $S>>[ASHR_i32_i32_4285_inst] (type_cast_4281_wire type_cast_4284_wire_constant) (ASHR_i32_i32_4285_wire)  $flowthrough
    $delay ASHR_i32_i32_4285_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) det_threshx_x2 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) )
    # := [type_cast_4286_inst] (ASHR_i32_i32_4285_wire) (iNsTr_238_4287) 
    $delay type_cast_4286_inst 1
    // 		xx_xnot := (iNsTr_209 ^ ($bitcast ($uint<1>) _b1  ))
    //  file prog.linked.opt.aa, line 1498
    // (iNsTr_209 ^ ($bitcast ($uint<1>) _b1  ))
    ^[XOR_u1_u1_4292_inst] (iNsTr_209_4087 type_cast_4291_wire_constant) (xx_xnot_4293) 
    $delay XOR_u1_u1_4292_inst 1
    // 		iNsTr_239 := (iNsTr_208 | xx_xnot)
    //  file prog.linked.opt.aa, line 1499
    // (iNsTr_208 | xx_xnot)
    |[OR_u1_u1_4297_inst] (iNsTr_208_4073 xx_xnot_4293) (iNsTr_239_4298) 
    $delay OR_u1_u1_4297_inst 1
    // 		iNsTr_240 := (($bitcast ($int<32>) iNsTr_218 ) > ($bitcast ($int<32>) iNsTr_238 ))
    //  file prog.linked.opt.aa, line 1500
    // ($bitcast ($int<32>) iNsTr_218 )
    $S:=$U [type_cast_4301_inst] (iNsTr_218_4252) (type_cast_4301_wire)   $flowthrough
    $delay type_cast_4301_inst 0
    // ($bitcast ($int<32>) iNsTr_238 )
    $S:=$U [type_cast_4303_inst] (iNsTr_238_4287) (type_cast_4303_wire)   $flowthrough
    $delay type_cast_4303_inst 0
    // (($bitcast ($int<32>) iNsTr_218 ) > ($bitcast ($int<32>) iNsTr_238 ))
    $S>$S[SGT_i32_u1_4304_inst] (type_cast_4301_wire type_cast_4303_wire) (iNsTr_240_4305) 
    $delay SGT_i32_u1_4304_inst 1
    // 		xx_x := (iNsTr_240 & iNsTr_239)
    //  file prog.linked.opt.aa, line 1501
    // (iNsTr_240 & iNsTr_239)
    &[AND_u1_u1_4309_inst] (iNsTr_240_4305 iNsTr_239_4298) (xx_x_4310) 
    $delay AND_u1_u1_4309_inst 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1503
    // 			$phi iNsTr_242 := 			  ($cast ($uint<1>) ($bitcast ($uint<1>) _b0  ) ) $on bb_20_bb_22			  ($cast ($uint<1>) xx_x ) $on bb_21_bb_22 // type of target is $uint<1>
    //  file prog.linked.opt.aa, line 1504
    // ($cast ($uint<1>) xx_x )
    # := [type_cast_4319_inst] (xx_x_4310) (type_cast_4319_wire) 
    $delay type_cast_4319_inst 1
    $phi [phi_stmt_4313] (type_cast_4317_wire_constant type_cast_4319_wire) ( iNsTr_242_4313 )
    // 		iNsTr_243 := (iNsTr_211 | iNsTr_242)
    //  file prog.linked.opt.aa, line 1506
    // (iNsTr_211 | iNsTr_242)
    |[OR_u1_u1_4324_inst] (iNsTr_211_4098 iNsTr_242_4313) (iNsTr_243_4325) 
    $delay OR_u1_u1_4324_inst 1
    // 		iNsTr_244 := ( $mux iNsTr_211 iNsTr_68  qrsValx_x1 ) 
    //  file prog.linked.opt.aa, line 1507
    // ( $mux iNsTr_211 iNsTr_68  qrsValx_x1 ) 
    ? [MUX_4330_inst] (iNsTr_211_4098 iNsTr_68_3619 qrsValx_x1_3206) (iNsTr_244_4331) 
    // 		iNsTr_245 := ( $mux iNsTr_211 iNsTr_219  rrValx_x1 ) 
    //  file prog.linked.opt.aa, line 1508
    // ( $mux iNsTr_211 iNsTr_219  rrValx_x1 ) 
    ? [MUX_4336_inst] (iNsTr_211_4098 iNsTr_219_4258 rrValx_x1_3199) (iNsTr_245_4337) 
    // 		iNsTr_246 := ( $mux iNsTr_211 ($bitcast ($uint<32>) _b00000000000000000000000000010000  )  iNsTr_85 ) 
    //  file prog.linked.opt.aa, line 1509
    // ( $mux iNsTr_211 ($bitcast ($uint<32>) _b00000000000000000000000000010000  )  iNsTr_85 ) 
    ? [MUX_4343_inst] (iNsTr_211_4098 type_cast_4341_wire_constant iNsTr_85_3702) (iNsTr_246_4344) 
    // 		iNsTr_247 := ( $mux iNsTr_242 iNsTr_218  iNsTr_244 ) 
    //  file prog.linked.opt.aa, line 1510
    // ( $mux iNsTr_242 iNsTr_218  iNsTr_244 ) 
    ? [MUX_4349_inst] (iNsTr_242_4313 iNsTr_218_4252 iNsTr_244_4331) (iNsTr_247_4350) 
    // 		iNsTr_248 := ( $mux iNsTr_242 iNsTr_220  iNsTr_245 ) 
    //  file prog.linked.opt.aa, line 1511
    // ( $mux iNsTr_242 iNsTr_220  iNsTr_245 ) 
    ? [MUX_4355_inst] (iNsTr_242_4313 iNsTr_220_4264 iNsTr_245_4337) (iNsTr_248_4356) 
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1512
    ==0? [if_stmt_4357_branch] (iNsTr_243_4325)
    // 		iNsTr_277 := maxDer
    //  file prog.linked.opt.aa, line 1519
    // maxDer
    $load [LOAD_maxDer_4365_load_0] $from memory_space_21 (LOAD_maxDer_4365_word_address_0) (LOAD_maxDer_4365_data_0) 
    $delay LOAD_maxDer_4365_load_0 1
    &/ [LOAD_maxDer_4365_gather_scatter] (LOAD_maxDer_4365_data_0) (iNsTr_277_4366) 
    // 		iNsTr_250 := QRSbuff_ptr
    //  file prog.linked.opt.aa, line 1523
    // QRSbuff_ptr
    $load [LOAD_QRSbuff_ptr_4370_load_0] $from memory_space_15 (LOAD_QRSbuff_ptr_4370_word_address_0) (LOAD_QRSbuff_ptr_4370_data_0) 
    $delay LOAD_QRSbuff_ptr_4370_load_0 1
    &/ [LOAD_QRSbuff_ptr_4370_gather_scatter] (LOAD_QRSbuff_ptr_4370_data_0) (iNsTr_250_4371) 
    // 		iNsTr_251 := RRbuff_ptr
    //  file prog.linked.opt.aa, line 1524
    // RRbuff_ptr
    $load [LOAD_RRbuff_ptr_4373_load_0] $from memory_space_16 (LOAD_RRbuff_ptr_4373_word_address_0) (LOAD_RRbuff_ptr_4373_data_0) 
    $delay LOAD_RRbuff_ptr_4373_load_0 1
    &/ [LOAD_RRbuff_ptr_4373_gather_scatter] (LOAD_RRbuff_ptr_4373_data_0) (iNsTr_251_4374) 
    // 		iNsTr_252 := @(QRSbuff[iNsTr_250])
    //  file prog.linked.opt.aa, line 1525
    &/ [array_obj_ref_4377_index_0_resize] (iNsTr_250_4371) (R_iNsTr_250_4376_resized) 
    &/ [array_obj_ref_4377_index_0_rename] (R_iNsTr_250_4376_resized) (R_iNsTr_250_4376_scaled) 
    &/ [array_obj_ref_4377_index_offset] (R_iNsTr_250_4376_scaled) (array_obj_ref_4377_final_offset) 
    +[array_obj_ref_4377_root_address_inst] (array_obj_ref_4377_final_offset array_obj_ref_4377_resized_base_address) (array_obj_ref_4377_root_address) 
    $delay array_obj_ref_4377_root_address_inst 2
    # := [addr_of_4378_final_reg] (array_obj_ref_4377_root_address) (iNsTr_252_4379) 
    // 		->(iNsTr_252) := iNsTr_247
    //  file prog.linked.opt.aa, line 1526
    // ->(iNsTr_252)
    &/ [ptr_deref_4381_base_resize] (iNsTr_252_4379) (ptr_deref_4381_resized_base_address) 
    &/ [ptr_deref_4381_root_address_inst] (ptr_deref_4381_resized_base_address) (ptr_deref_4381_root_address) 
    &/ [ptr_deref_4381_addr_0] (ptr_deref_4381_root_address) (ptr_deref_4381_word_address_0) 
    $store [ptr_deref_4381_store_0] $to memory_space_13 (ptr_deref_4381_word_address_0 ptr_deref_4381_data_0) 
    $delay ptr_deref_4381_store_0 2
    &/ [ptr_deref_4381_gather_scatter] (iNsTr_247_4350) (ptr_deref_4381_data_0) 
    // 		iNsTr_254 := @(RRbuff[iNsTr_251])
    //  file prog.linked.opt.aa, line 1527
    &/ [array_obj_ref_4386_index_0_resize] (iNsTr_251_4374) (R_iNsTr_251_4385_resized) 
    &/ [array_obj_ref_4386_index_0_rename] (R_iNsTr_251_4385_resized) (R_iNsTr_251_4385_scaled) 
    &/ [array_obj_ref_4386_index_offset] (R_iNsTr_251_4385_scaled) (array_obj_ref_4386_final_offset) 
    +[array_obj_ref_4386_root_address_inst] (array_obj_ref_4386_final_offset array_obj_ref_4386_resized_base_address) (array_obj_ref_4386_root_address) 
    $delay array_obj_ref_4386_root_address_inst 2
    # := [addr_of_4387_final_reg] (array_obj_ref_4386_root_address) (iNsTr_254_4388) 
    // 		->(iNsTr_254) := iNsTr_248
    //  file prog.linked.opt.aa, line 1528
    // ->(iNsTr_254)
    &/ [ptr_deref_4390_base_resize] (iNsTr_254_4388) (ptr_deref_4390_resized_base_address) 
    &/ [ptr_deref_4390_root_address_inst] (ptr_deref_4390_resized_base_address) (ptr_deref_4390_root_address) 
    &/ [ptr_deref_4390_addr_0] (ptr_deref_4390_root_address) (ptr_deref_4390_word_address_0) 
    $store [ptr_deref_4390_store_0] $to memory_space_13 (ptr_deref_4390_word_address_0 ptr_deref_4390_data_0) 
    $delay ptr_deref_4390_store_0 2
    &/ [ptr_deref_4390_gather_scatter] (iNsTr_248_4356) (ptr_deref_4390_data_0) 
    // 		iNsTr_256 := (iNsTr_250 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.linked.opt.aa, line 1529
    // (iNsTr_250 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    +[ADD_u32_u32_4397_inst] (iNsTr_250_4371 type_cast_4396_wire_constant) (iNsTr_256_4398) 
    $delay ADD_u32_u32_4397_inst 1
    // 		iNsTr_257 := (iNsTr_250 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.linked.opt.aa, line 1530
    // (iNsTr_250 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_4403_inst] (iNsTr_250_4371 type_cast_4402_wire_constant) (iNsTr_257_4404) 
    $delay EQ_u32_u1_4403_inst 1
    // 		maxx_xx_xix_xi := ( $mux iNsTr_257 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_256 ) 
    //  file prog.linked.opt.aa, line 1531
    // ( $mux iNsTr_257 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_256 ) 
    ? [MUX_4410_inst] (iNsTr_257_4404 type_cast_4408_wire_constant iNsTr_256_4398) (maxx_xx_xix_xi_4411) 
    // 		QRSbuff_ptr := maxx_xx_xix_xi
    //  file prog.linked.opt.aa, line 1532
    // QRSbuff_ptr
    $store [STORE_QRSbuff_ptr_4412_store_0] $to memory_space_15 (STORE_QRSbuff_ptr_4412_word_address_0 STORE_QRSbuff_ptr_4412_data_0) 
    $delay STORE_QRSbuff_ptr_4412_store_0 1
    &/ [STORE_QRSbuff_ptr_4412_gather_scatter] (maxx_xx_xix_xi_4411) (STORE_QRSbuff_ptr_4412_data_0) 
    // 		iNsTr_259 := (iNsTr_251 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.linked.opt.aa, line 1533
    // (iNsTr_251 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    +[ADD_u32_u32_4419_inst] (iNsTr_251_4374 type_cast_4418_wire_constant) (iNsTr_259_4420) 
    $delay ADD_u32_u32_4419_inst 1
    // 		iNsTr_260 := (iNsTr_251 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.linked.opt.aa, line 1534
    // (iNsTr_251 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_4425_inst] (iNsTr_251_4374 type_cast_4424_wire_constant) (iNsTr_260_4426) 
    $delay EQ_u32_u1_4425_inst 1
    // 		maxx_xx_xi1x_xi := ( $mux iNsTr_260 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_259 ) 
    //  file prog.linked.opt.aa, line 1535
    // ( $mux iNsTr_260 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_259 ) 
    ? [MUX_4432_inst] (iNsTr_260_4426 type_cast_4430_wire_constant iNsTr_259_4420) (maxx_xx_xi1x_xi_4433) 
    // 		RRbuff_ptr := maxx_xx_xi1x_xi
    //  file prog.linked.opt.aa, line 1536
    // RRbuff_ptr
    $store [STORE_RRbuff_ptr_4434_store_0] $to memory_space_16 (STORE_RRbuff_ptr_4434_word_address_0 STORE_RRbuff_ptr_4434_data_0) 
    $delay STORE_RRbuff_ptr_4434_store_0 1
    &/ [STORE_RRbuff_ptr_4434_gather_scatter] (maxx_xx_xi1x_xi_4433) (STORE_RRbuff_ptr_4434_data_0) 
    // 		$call meanCalc (iNsTr_262 ) (iNsTr_263 ) 
    //  file prog.linked.opt.aa, line 1538
    $call [call_stmt_4445_call] $module meanCalc(iNsTr_262_4442) (iNsTr_263_4445) 
    $delay call_stmt_4445_call 2
    // 		$call meanCalc (iNsTr_264 ) (iNsTr_265 ) 
    //  file prog.linked.opt.aa, line 1540
    $call [call_stmt_4454_call] $module meanCalc(iNsTr_264_4451) (iNsTr_265_4454) 
    $delay call_stmt_4454_call 2
    // 		iNsTr_266 := (iNsTr_263 - nmeanx_x2)
    //  file prog.linked.opt.aa, line 1541
    // (iNsTr_263 - nmeanx_x2)
    -[SUB_u32_u32_4458_inst] (iNsTr_263_4445 nmeanx_x2_4234) (iNsTr_266_4459) 
    $delay SUB_u32_u32_4458_inst 1
    // 		iNsTr_267 := ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_266 ) )
    //  file prog.linked.opt.aa, line 1542
    // ($bitcast ($int<64>) iNsTr_266 )
    $S:=$U [type_cast_4462_inst] (iNsTr_266_4459) (type_cast_4462_wire)   $flowthrough
    $delay type_cast_4462_inst 0
    // ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_266 ) )
    $F:=$S [type_cast_4463_inst] (type_cast_4462_wire) (iNsTr_267_4464)  
    $delay type_cast_4463_inst 1
    // 		iNsTr_268 := threshold
    //  file prog.linked.opt.aa, line 1543
    // threshold
    $load [LOAD_threshold_4466_load_0] $from memory_space_24 (LOAD_threshold_4466_word_address_0) (LOAD_threshold_4466_data_0) 
    $delay LOAD_threshold_4466_load_0 1
    &/ [LOAD_threshold_4466_gather_scatter] (LOAD_threshold_4466_data_0) (iNsTr_268_4467) 
    // 		iNsTr_269 := (iNsTr_268 * iNsTr_267)
    //  file prog.linked.opt.aa, line 1544
    // (iNsTr_268 * iNsTr_267)
    *[MUL_f64_f64_4471_inst] (iNsTr_268_4467 iNsTr_267_4464) (iNsTr_269_4472) 
    $delay MUL_f64_f64_4471_inst 24
    // 		iNsTr_270 := ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_269 ) )
    //  file prog.linked.opt.aa, line 1545
    // ($cast ($int<32>) iNsTr_269 )
    $S:=$F [type_cast_4475_inst] (iNsTr_269_4472) (type_cast_4475_wire)  
    $delay type_cast_4475_inst 1
    // ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_269 ) )
    # := [type_cast_4476_inst] (type_cast_4475_wire) (iNsTr_270_4477) 
    $delay type_cast_4476_inst 1
    // 		iNsTr_271 := (iNsTr_270 + nmeanx_x2)
    //  file prog.linked.opt.aa, line 1546
    // (iNsTr_270 + nmeanx_x2)
    +[ADD_u32_u32_4481_inst] (iNsTr_270_4477 nmeanx_x2_4234) (iNsTr_271_4482) 
    $delay ADD_u32_u32_4481_inst 1
    // 		iNsTr_272 := maxDer
    //  file prog.linked.opt.aa, line 1547
    // maxDer
    $load [LOAD_maxDer_4484_load_0] $from memory_space_21 (LOAD_maxDer_4484_word_address_0) (LOAD_maxDer_4484_data_0) 
    $delay LOAD_maxDer_4484_load_0 1
    &/ [LOAD_maxDer_4484_gather_scatter] (LOAD_maxDer_4484_data_0) (iNsTr_272_4485) 
    // 		iNsTr_273 := ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_265 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) )
    //  file prog.linked.opt.aa, line 1548
    // ($bitcast ($int<32>) iNsTr_265 )
    $S:=$U [type_cast_4488_inst] (iNsTr_265_4454) (type_cast_4488_wire)   $flowthrough
    $delay type_cast_4488_inst 0
    // (($bitcast ($int<32>) iNsTr_265 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
    $S>>[ASHR_i32_i32_4492_inst] (type_cast_4488_wire type_cast_4491_wire_constant) (ASHR_i32_i32_4492_wire)  $flowthrough
    $delay ASHR_i32_i32_4492_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_265 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) )
    # := [type_cast_4493_inst] (ASHR_i32_i32_4492_wire) (iNsTr_273_4494) 
    $delay type_cast_4493_inst 1
    // 		iNsTr_274 := (iNsTr_265 + ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
    //  file prog.linked.opt.aa, line 1549
    // (iNsTr_265 + ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
    +[ADD_u32_u32_4499_inst] (iNsTr_265_4454 type_cast_4498_wire_constant) (iNsTr_274_4500) 
    $delay ADD_u32_u32_4499_inst 1
    // 		iNsTr_275 := (iNsTr_274 + iNsTr_273)
    //  file prog.linked.opt.aa, line 1550
    // (iNsTr_274 + iNsTr_273)
    +[ADD_u32_u32_4504_inst] (iNsTr_274_4500 iNsTr_273_4494) (iNsTr_275_4505) 
    $delay ADD_u32_u32_4504_inst 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1552
    // 			$phi iNsTr_279 := 			  ($cast ($uint<32>) iNsTr_272 ) $on bb_24_bb_25			  ($cast ($uint<32>) iNsTr_277 ) $on xx_xthread27_bb_25 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1553
    // ($cast ($uint<32>) iNsTr_272 )
    # := [type_cast_4511_inst] (iNsTr_272_4485) (type_cast_4511_wire) 
    $delay type_cast_4511_inst 1
    // ($cast ($uint<32>) iNsTr_277 )
    # := [type_cast_4513_inst] (iNsTr_277_4366) (type_cast_4513_wire) 
    $delay type_cast_4513_inst 1
    $phi [phi_stmt_4508] (type_cast_4511_wire type_cast_4513_wire) ( iNsTr_279_4508 )
    // 			$phi det_threshx_x325 := 			  ($cast ($uint<32>) iNsTr_271 ) $on bb_24_bb_25			  ($cast ($uint<32>) det_threshx_x2 ) $on xx_xthread27_bb_25 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1554
    // ($cast ($uint<32>) iNsTr_271 )
    # := [type_cast_4517_inst] (iNsTr_271_4482) (type_cast_4517_wire) 
    $delay type_cast_4517_inst 1
    // ($cast ($uint<32>) det_threshx_x2 )
    # := [type_cast_4519_inst] (det_threshx_x2_4240) (type_cast_4519_wire) 
    $delay type_cast_4519_inst 1
    $phi [phi_stmt_4514] (type_cast_4517_wire type_cast_4519_wire) ( det_threshx_x325_4514 )
    // 			$phi qmeanx_x223 := 			  ($cast ($uint<32>) iNsTr_263 ) $on bb_24_bb_25			  ($cast ($uint<32>) qmeanx_x1 ) $on xx_xthread27_bb_25 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1555
    // ($cast ($uint<32>) iNsTr_263 )
    # := [type_cast_4523_inst] (iNsTr_263_4445) (type_cast_4523_wire) 
    $delay type_cast_4523_inst 1
    // ($cast ($uint<32>) qmeanx_x1 )
    # := [type_cast_4525_inst] (qmeanx_x1_3220) (type_cast_4525_wire) 
    $delay type_cast_4525_inst 1
    $phi [phi_stmt_4520] (type_cast_4523_wire type_cast_4525_wire) ( qmeanx_x223_4520 )
    // 			$phi iNsTr_280 := 			  ($cast ($uint<32>) iNsTr_275 ) $on bb_24_bb_25			  ($cast ($uint<32>) sb_countx_x1 ) $on xx_xthread27_bb_25 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1556
    // ($cast ($uint<32>) iNsTr_275 )
    # := [type_cast_4529_inst] (iNsTr_275_4505) (type_cast_4529_wire) 
    $delay type_cast_4529_inst 1
    // ($cast ($uint<32>) sb_countx_x1 )
    # := [type_cast_4531_inst] (sb_countx_x1_3234) (type_cast_4531_wire) 
    $delay type_cast_4531_inst 1
    $phi [phi_stmt_4526] (type_cast_4529_wire type_cast_4531_wire) ( iNsTr_280_4526 )
    // 		iNsTr_281 := ( $mux iNsTr_242 iNsTr_220  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
    //  file prog.linked.opt.aa, line 1558
    // ( $mux iNsTr_242 iNsTr_220  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
    ? [MUX_4538_inst] (iNsTr_242_4313 iNsTr_220_4264 type_cast_4537_wire_constant) (iNsTr_281_4539) 
    // 		xx_x7 := (iNsTr_246 - iNsTr_281)
    //  file prog.linked.opt.aa, line 1559
    // (iNsTr_246 - iNsTr_281)
    -[SUB_u32_u32_4543_inst] (iNsTr_246_4344 iNsTr_281_4539) (xx_x7_4544) 
    $delay SUB_u32_u32_4543_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1560
    ==0? [if_stmt_4545_branch] (iNsTr_242_4313)
    // 		iNsTr_283 := (xx_x7 + ($bitcast ($uint<32>) _b00000000000000000000000000111000  ))
    //  file prog.linked.opt.aa, line 1567
    // (xx_x7 + ($bitcast ($uint<32>) _b00000000000000000000000000111000  ))
    +[ADD_u32_u32_4556_inst] (xx_x7_4544 type_cast_4555_wire_constant) (iNsTr_283_4557) 
    $delay ADD_u32_u32_4556_inst 1
    // 		iNsTr_285 := ( $mux iNsTr_211 ($bitcast ($uint<32>) _b00000000000000000000000001001000  )  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
    //  file prog.linked.opt.aa, line 1571
    // ( $mux iNsTr_211 ($bitcast ($uint<32>) _b00000000000000000000000001001000  )  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
    ? [MUX_4566_inst] (iNsTr_211_4098 type_cast_4563_wire_constant type_cast_4565_wire_constant) (iNsTr_285_4567) 
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1573
    // 			$phi iNsTr_287 := 			  ($cast ($uint<32>) iNsTr_283 ) $on bb_26_bb_28			  ($cast ($uint<32>) iNsTr_285 ) $on bb_27_bb_28 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1574
    // ($cast ($uint<32>) iNsTr_283 )
    # := [type_cast_4573_inst] (iNsTr_283_4557) (type_cast_4573_wire) 
    $delay type_cast_4573_inst 1
    // ($cast ($uint<32>) iNsTr_285 )
    # := [type_cast_4575_inst] (iNsTr_285_4567) (type_cast_4575_wire) 
    $delay type_cast_4575_inst 1
    $phi [phi_stmt_4570] (type_cast_4573_wire type_cast_4575_wire) ( iNsTr_287_4570 )
    // 		iNsTr_288 := ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_218 ) 
    //  file prog.linked.opt.aa, line 1576
    // ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_218 ) 
    ? [MUX_4582_inst] (iNsTr_243_4325 type_cast_4580_wire_constant iNsTr_218_4252) (iNsTr_288_4583) 
    // 		iNsTr_289 := ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_279 ) 
    //  file prog.linked.opt.aa, line 1577
    // ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_279 ) 
    ? [MUX_4589_inst] (iNsTr_243_4325 type_cast_4587_wire_constant iNsTr_279_4508) (iNsTr_289_4590) 
    // 		maxDer := iNsTr_289
    //  file prog.linked.opt.aa, line 1578
    // maxDer
    $store [STORE_maxDer_4591_store_0] $to memory_space_21 (STORE_maxDer_4591_word_address_0 STORE_maxDer_4591_data_0) 
    $delay STORE_maxDer_4591_store_0 1
    &/ [STORE_maxDer_4591_gather_scatter] (iNsTr_289_4590) (STORE_maxDer_4591_data_0) 
    // 		iNsTr_291 := ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initBlankx_x1 ) 
    //  file prog.linked.opt.aa, line 1579
    // ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initBlankx_x1 ) 
    ? [MUX_4599_inst] (iNsTr_243_4325 type_cast_4597_wire_constant initBlankx_x1_3269) (iNsTr_291_4600) 
    // 		iNsTr_292 := ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initMaxx_x1 ) 
    //  file prog.linked.opt.aa, line 1580
    // ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initMaxx_x1 ) 
    ? [MUX_4606_inst] (iNsTr_243_4325 type_cast_4604_wire_constant initMaxx_x1_3248) (iNsTr_292_4607) 
    // 		iNsTr_293 := ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  rset_countx_x1 ) 
    //  file prog.linked.opt.aa, line 1581
    // ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  rset_countx_x1 ) 
    ? [MUX_4613_inst] (iNsTr_243_4325 type_cast_4611_wire_constant rset_countx_x1_3255) (iNsTr_293_4614) 
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1583
    // 			$phi QRSdelayx_x0 := 			  ($cast ($uint<32>) iNsTr_287 ) $on bb_28_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_14_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1584
    // ($cast ($uint<32>) iNsTr_287 )
    # := [type_cast_4620_inst] (iNsTr_287_4570) (type_cast_4620_wire) 
    $delay type_cast_4620_inst 1
    $phi [phi_stmt_4617] (type_cast_4620_wire type_cast_4623_wire_constant type_cast_4626_wire_constant) ( QRSdelayx_x0_4617 )
    // 			$phi init8Done_nextx_x0 := 			  ($cast ($uint<8>) init8Done_nextx_x1 ) $on bb_28_bb_29			  ($cast ($uint<8>) iNsTr_101 ) $on bb_14_bb_29			  ($cast ($uint<8>) iNsTr_101 ) $on bb_13_bb_29 // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 1585
    // ($cast ($uint<8>) init8Done_nextx_x1 )
    # := [type_cast_4630_inst] (init8Done_nextx_x1_3185) (type_cast_4630_wire) 
    $delay type_cast_4630_inst 1
    // ($cast ($uint<8>) iNsTr_101 )
    # := [type_cast_4632_inst] (iNsTr_101_3791) (type_cast_4632_wire) 
    $delay type_cast_4632_inst 1
    // ($cast ($uint<8>) iNsTr_101 )
    # := [type_cast_4634_inst] (iNsTr_101_3791) (type_cast_4634_wire) 
    $delay type_cast_4634_inst 1
    $phi [phi_stmt_4627] (type_cast_4630_wire type_cast_4632_wire type_cast_4634_wire) ( init8Done_nextx_x0_4627 )
    // 			$phi noiseValx_x0 := 			  ($cast ($uint<32>) iNsTr_216 ) $on bb_28_bb_29			  ($cast ($uint<32>) noiseValx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) noiseValx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1586
    // ($cast ($uint<32>) iNsTr_216 )
    # := [type_cast_4638_inst] (iNsTr_216_4153) (type_cast_4638_wire) 
    $delay type_cast_4638_inst 1
    // ($cast ($uint<32>) noiseValx_x1 )
    # := [type_cast_4640_inst] (noiseValx_x1_3192) (type_cast_4640_wire) 
    $delay type_cast_4640_inst 1
    // ($cast ($uint<32>) noiseValx_x1 )
    # := [type_cast_4642_inst] (noiseValx_x1_3192) (type_cast_4642_wire) 
    $delay type_cast_4642_inst 1
    $phi [phi_stmt_4635] (type_cast_4638_wire type_cast_4640_wire type_cast_4642_wire) ( noiseValx_x0_4635 )
    // 			$phi rrValx_x0 := 			  ($cast ($uint<32>) iNsTr_248 ) $on bb_28_bb_29			  ($cast ($uint<32>) rrValx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) rrValx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1587
    // ($cast ($uint<32>) iNsTr_248 )
    # := [type_cast_4646_inst] (iNsTr_248_4356) (type_cast_4646_wire) 
    $delay type_cast_4646_inst 1
    // ($cast ($uint<32>) rrValx_x1 )
    # := [type_cast_4648_inst] (rrValx_x1_3199) (type_cast_4648_wire) 
    $delay type_cast_4648_inst 1
    // ($cast ($uint<32>) rrValx_x1 )
    # := [type_cast_4650_inst] (rrValx_x1_3199) (type_cast_4650_wire) 
    $delay type_cast_4650_inst 1
    $phi [phi_stmt_4643] (type_cast_4646_wire type_cast_4648_wire type_cast_4650_wire) ( rrValx_x0_4643 )
    // 			$phi qrsValx_x0 := 			  ($cast ($uint<32>) iNsTr_247 ) $on bb_28_bb_29			  ($cast ($uint<32>) qrsValx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) qrsValx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1588
    // ($cast ($uint<32>) iNsTr_247 )
    # := [type_cast_4654_inst] (iNsTr_247_4350) (type_cast_4654_wire) 
    $delay type_cast_4654_inst 1
    // ($cast ($uint<32>) qrsValx_x1 )
    # := [type_cast_4656_inst] (qrsValx_x1_3206) (type_cast_4656_wire) 
    $delay type_cast_4656_inst 1
    // ($cast ($uint<32>) qrsValx_x1 )
    # := [type_cast_4658_inst] (qrsValx_x1_3206) (type_cast_4658_wire) 
    $delay type_cast_4658_inst 1
    $phi [phi_stmt_4651] (type_cast_4654_wire type_cast_4656_wire type_cast_4658_wire) ( qrsValx_x0_4651 )
    // 			$phi nmeanx_x0 := 			  ($cast ($uint<32>) nmeanx_x2 ) $on bb_28_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_14_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1589
    // ($cast ($uint<32>) nmeanx_x2 )
    # := [type_cast_4662_inst] (nmeanx_x2_4234) (type_cast_4662_wire) 
    $delay type_cast_4662_inst 1
    $phi [phi_stmt_4659] (type_cast_4662_wire type_cast_4665_wire_constant type_cast_4668_wire_constant) ( nmeanx_x0_4659 )
    // 			$phi qmeanx_x0 := 			  ($cast ($uint<32>) qmeanx_x223 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_107 ) $on bb_14_bb_29			  ($cast ($uint<32>) qmeanx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1590
    // ($cast ($uint<32>) qmeanx_x223 )
    # := [type_cast_4672_inst] (qmeanx_x223_4520) (type_cast_4672_wire) 
    $delay type_cast_4672_inst 1
    // ($cast ($uint<32>) iNsTr_107 )
    # := [type_cast_4674_inst] (iNsTr_107_3820) (type_cast_4674_wire) 
    $delay type_cast_4674_inst 1
    // ($cast ($uint<32>) qmeanx_x1 )
    # := [type_cast_4676_inst] (qmeanx_x1_3220) (type_cast_4676_wire) 
    $delay type_cast_4676_inst 1
    $phi [phi_stmt_4669] (type_cast_4672_wire type_cast_4674_wire type_cast_4676_wire) ( qmeanx_x0_4669 )
    // 			$phi sbLocx_x0 := 			  ($cast ($uint<32>) iNsTr_220 ) $on bb_28_bb_29			  ($cast ($uint<32>) sbLocx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) sbLocx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1591
    // ($cast ($uint<32>) iNsTr_220 )
    # := [type_cast_4680_inst] (iNsTr_220_4264) (type_cast_4680_wire) 
    $delay type_cast_4680_inst 1
    // ($cast ($uint<32>) sbLocx_x1 )
    # := [type_cast_4682_inst] (sbLocx_x1_3227) (type_cast_4682_wire) 
    $delay type_cast_4682_inst 1
    // ($cast ($uint<32>) sbLocx_x1 )
    # := [type_cast_4684_inst] (sbLocx_x1_3227) (type_cast_4684_wire) 
    $delay type_cast_4684_inst 1
    $phi [phi_stmt_4677] (type_cast_4680_wire type_cast_4682_wire type_cast_4684_wire) ( sbLocx_x0_4677 )
    // 			$phi sb_countx_x0 := 			  ($cast ($uint<32>) iNsTr_280 ) $on bb_28_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000101001010  ) ) $on bb_14_bb_29			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000101001010  ) ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1592
    // ($cast ($uint<32>) iNsTr_280 )
    # := [type_cast_4688_inst] (iNsTr_280_4526) (type_cast_4688_wire) 
    $delay type_cast_4688_inst 1
    $phi [phi_stmt_4685] (type_cast_4688_wire type_cast_4691_wire_constant type_cast_4694_wire_constant) ( sb_countx_x0_4685 )
    // 			$phi det_threshx_x0 := 			  ($cast ($uint<32>) det_threshx_x325 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_111 ) $on bb_14_bb_29			  ($cast ($uint<32>) det_threshx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1593
    // ($cast ($uint<32>) det_threshx_x325 )
    # := [type_cast_4698_inst] (det_threshx_x325_4514) (type_cast_4698_wire) 
    $delay type_cast_4698_inst 1
    // ($cast ($uint<32>) iNsTr_111 )
    # := [type_cast_4700_inst] (iNsTr_111_3838) (type_cast_4700_wire) 
    $delay type_cast_4700_inst 1
    // ($cast ($uint<32>) det_threshx_x1 )
    # := [type_cast_4702_inst] (det_threshx_x1_3241) (type_cast_4702_wire) 
    $delay type_cast_4702_inst 1
    $phi [phi_stmt_4695] (type_cast_4698_wire type_cast_4700_wire type_cast_4702_wire) ( det_threshx_x0_4695 )
    // 			$phi initMaxx_x0 := 			  ($cast ($uint<32>) iNsTr_292 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_103 ) $on bb_14_bb_29			  ($cast ($uint<32>) iNsTr_103 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1594
    // ($cast ($uint<32>) iNsTr_292 )
    # := [type_cast_4706_inst] (iNsTr_292_4607) (type_cast_4706_wire) 
    $delay type_cast_4706_inst 1
    // ($cast ($uint<32>) iNsTr_103 )
    # := [type_cast_4708_inst] (iNsTr_103_3804) (type_cast_4708_wire) 
    $delay type_cast_4708_inst 1
    // ($cast ($uint<32>) iNsTr_103 )
    # := [type_cast_4710_inst] (iNsTr_103_3804) (type_cast_4710_wire) 
    $delay type_cast_4710_inst 1
    $phi [phi_stmt_4703] (type_cast_4706_wire type_cast_4708_wire type_cast_4710_wire) ( initMaxx_x0_4703 )
    // 			$phi rset_countx_x0 := 			  ($cast ($uint<32>) iNsTr_293 ) $on bb_28_bb_29			  ($cast ($uint<32>) rset_countx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) rset_countx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1595
    // ($cast ($uint<32>) iNsTr_293 )
    # := [type_cast_4714_inst] (iNsTr_293_4614) (type_cast_4714_wire) 
    $delay type_cast_4714_inst 1
    // ($cast ($uint<32>) rset_countx_x1 )
    # := [type_cast_4716_inst] (rset_countx_x1_3255) (type_cast_4716_wire) 
    $delay type_cast_4716_inst 1
    // ($cast ($uint<32>) rset_countx_x1 )
    # := [type_cast_4718_inst] (rset_countx_x1_3255) (type_cast_4718_wire) 
    $delay type_cast_4718_inst 1
    $phi [phi_stmt_4711] (type_cast_4714_wire type_cast_4716_wire type_cast_4718_wire) ( rset_countx_x0_4711 )
    // 			$phi initBlankx_x0 := 			  ($cast ($uint<32>) iNsTr_291 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_93 ) $on bb_14_bb_29			  ($cast ($uint<32>) iNsTr_93 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1596
    // ($cast ($uint<32>) iNsTr_291 )
    # := [type_cast_4722_inst] (iNsTr_291_4600) (type_cast_4722_wire) 
    $delay type_cast_4722_inst 1
    // ($cast ($uint<32>) iNsTr_93 )
    # := [type_cast_4724_inst] (iNsTr_93_3751) (type_cast_4724_wire) 
    $delay type_cast_4724_inst 1
    // ($cast ($uint<32>) iNsTr_93 )
    # := [type_cast_4726_inst] (iNsTr_93_3751) (type_cast_4726_wire) 
    $delay type_cast_4726_inst 1
    $phi [phi_stmt_4719] (type_cast_4722_wire type_cast_4724_wire type_cast_4726_wire) ( initBlankx_x0_4719 )
    // 			$phi countx_x1 := 			  ($cast ($uint<32>) xx_x7 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_92 ) $on bb_14_bb_29			  ($cast ($uint<32>) iNsTr_92 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1597
    // ($cast ($uint<32>) xx_x7 )
    # := [type_cast_4730_inst] (xx_x7_4544) (type_cast_4730_wire) 
    $delay type_cast_4730_inst 1
    // ($cast ($uint<32>) iNsTr_92 )
    # := [type_cast_4732_inst] (iNsTr_92_3744) (type_cast_4732_wire) 
    $delay type_cast_4732_inst 1
    // ($cast ($uint<32>) iNsTr_92 )
    # := [type_cast_4734_inst] (iNsTr_92_3744) (type_cast_4734_wire) 
    $delay type_cast_4734_inst 1
    $phi [phi_stmt_4727] (type_cast_4730_wire type_cast_4732_wire type_cast_4734_wire) ( countx_x1_4727 )
    // 			$phi qpk_countx_x0 := 			  ($cast ($uint<32>) qpk_countx_x1 ) $on bb_28_bb_29			  ($cast ($uint<32>) iNsTr_98 ) $on bb_14_bb_29			  ($cast ($uint<32>) iNsTr_98 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1598
    // ($cast ($uint<32>) qpk_countx_x1 )
    # := [type_cast_4738_inst] (qpk_countx_x1_3283) (type_cast_4738_wire) 
    $delay type_cast_4738_inst 1
    // ($cast ($uint<32>) iNsTr_98 )
    # := [type_cast_4740_inst] (iNsTr_98_3776) (type_cast_4740_wire) 
    $delay type_cast_4740_inst 1
    // ($cast ($uint<32>) iNsTr_98 )
    # := [type_cast_4742_inst] (iNsTr_98_3776) (type_cast_4742_wire) 
    $delay type_cast_4742_inst 1
    $phi [phi_stmt_4735] (type_cast_4738_wire type_cast_4740_wire type_cast_4742_wire) ( qpk_countx_x0_4735 )
    // 			$phi sbPeakx_x0 := 			  ($cast ($uint<32>) iNsTr_288 ) $on bb_28_bb_29			  ($cast ($uint<32>) sbPeakx_x1 ) $on bb_14_bb_29			  ($cast ($uint<32>) sbPeakx_x1 ) $on bb_13_bb_29 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1599
    // ($cast ($uint<32>) iNsTr_288 )
    # := [type_cast_4746_inst] (iNsTr_288_4583) (type_cast_4746_wire) 
    $delay type_cast_4746_inst 1
    // ($cast ($uint<32>) sbPeakx_x1 )
    # := [type_cast_4748_inst] (sbPeakx_x1_3290) (type_cast_4748_wire) 
    $delay type_cast_4748_inst 1
    // ($cast ($uint<32>) sbPeakx_x1 )
    # := [type_cast_4750_inst] (sbPeakx_x1_3290) (type_cast_4750_wire) 
    $delay type_cast_4750_inst 1
    $phi [phi_stmt_4743] (type_cast_4746_wire type_cast_4748_wire type_cast_4750_wire) ( sbPeakx_x0_4743 )
    // 		iNsTr_113 := (init8Done_nextx_x0 == ($bitcast ($uint<8>) _b00000000  ))
    //  file prog.linked.opt.aa, line 1601
    // (init8Done_nextx_x0 == ($bitcast ($uint<8>) _b00000000  ))
    ==[EQ_u8_u1_4756_inst] (init8Done_nextx_x0_4627 type_cast_4755_wire_constant) (iNsTr_113_4757) 
    $delay EQ_u8_u1_4756_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1602
    ==0? [if_stmt_4758_branch] (iNsTr_113_4757)
    // 		iNsTr_132 := (initBlankx_x0 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1609
    // (initBlankx_x0 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_4769_inst] (initBlankx_x0_4719 type_cast_4768_wire_constant) (iNsTr_132_4770) 
    $delay ADD_u32_u32_4769_inst 1
    // 		iNsTr_133 := (iNsTr_132 == ($bitcast ($uint<32>) _b00000000000000000000000011001000  ))
    //  file prog.linked.opt.aa, line 1610
    // (iNsTr_132 == ($bitcast ($uint<32>) _b00000000000000000000000011001000  ))
    ==[EQ_u32_u1_4775_inst] (iNsTr_132_4770 type_cast_4774_wire_constant) (iNsTr_133_4776) 
    $delay EQ_u32_u1_4775_inst 1
    // 		iNsTr_134 := ( $mux iNsTr_133 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_132 ) 
    //  file prog.linked.opt.aa, line 1611
    // ( $mux iNsTr_133 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_132 ) 
    ? [MUX_4782_inst] (iNsTr_133_4776 type_cast_4780_wire_constant iNsTr_132_4770) (iNsTr_134_4783) 
    // 		iNsTr_135 := RSETbuff[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][rset_countx_x0]
    //  file prog.linked.opt.aa, line 1612
    // RSETbuff[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][rset_countx_x0]
    &/ [array_obj_ref_4788_index_1_resize] (rset_countx_x0_4711) (R_rset_countx_x0_4787_resized) 
    &/ [array_obj_ref_4788_index_1_rename] (R_rset_countx_x0_4787_resized) (R_rset_countx_x0_4787_scaled) 
    +[array_obj_ref_4788_index_offset] (R_rset_countx_x0_4787_scaled array_obj_ref_4788_constant_part_of_offset) (array_obj_ref_4788_final_offset) 
    $delay array_obj_ref_4788_index_offset 2
    &/ [array_obj_ref_4788_root_address_inst] (array_obj_ref_4788_final_offset) (array_obj_ref_4788_root_address) 
    # := [array_obj_ref_4788_final_reg] (array_obj_ref_4788_root_address) (iNsTr_135_4789) 
    // 		->(iNsTr_135) := initMaxx_x0
    //  file prog.linked.opt.aa, line 1613
    // ->(iNsTr_135)
    &/ [ptr_deref_4791_base_resize] (iNsTr_135_4789) (ptr_deref_4791_resized_base_address) 
    &/ [ptr_deref_4791_root_address_inst] (ptr_deref_4791_resized_base_address) (ptr_deref_4791_root_address) 
    &/ [ptr_deref_4791_addr_0] (ptr_deref_4791_root_address) (ptr_deref_4791_word_address_0) 
    $store [ptr_deref_4791_store_0] $to qrsDet/memory_space_26 (ptr_deref_4791_word_address_0 ptr_deref_4791_data_0) 
    $delay ptr_deref_4791_store_0 2
    &/ [ptr_deref_4791_gather_scatter] (initMaxx_x0_4703) (ptr_deref_4791_data_0) 
    // 		iNsTr_137 := ( $mux iNsTr_133 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initMaxx_x0 ) 
    //  file prog.linked.opt.aa, line 1614
    // ( $mux iNsTr_133 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initMaxx_x0 ) 
    ? [MUX_4799_inst] (iNsTr_133_4776 type_cast_4797_wire_constant initMaxx_x0_4703) (iNsTr_137_4800) 
    // 		iNsTr_138 := ($cast ($uint<32>) iNsTr_133 )
    //  file prog.linked.opt.aa, line 1615
    // ($cast ($uint<32>) iNsTr_133 )
    # := [type_cast_4803_inst] (iNsTr_133_4776) (iNsTr_138_4804) 
    $delay type_cast_4803_inst 1
    // 		iNsTr_139 := (iNsTr_138 + rset_countx_x0)
    //  file prog.linked.opt.aa, line 1616
    // (iNsTr_138 + rset_countx_x0)
    +[ADD_u32_u32_4808_inst] (iNsTr_138_4804 rset_countx_x0_4711) (iNsTr_139_4809) 
    $delay ADD_u32_u32_4808_inst 1
    // 		iNsTr_140 := (iNsTr_139 == ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
    //  file prog.linked.opt.aa, line 1617
    // (iNsTr_139 == ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
    ==[EQ_u32_u1_4814_inst] (iNsTr_139_4809 type_cast_4813_wire_constant) (iNsTr_140_4815) 
    $delay EQ_u32_u1_4814_inst 1
    // 		iNsTr_141 := ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  nmeanx_x0 ) 
    //  file prog.linked.opt.aa, line 1618
    // ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  nmeanx_x0 ) 
    ? [MUX_4821_inst] (iNsTr_140_4815 type_cast_4819_wire_constant nmeanx_x0_4659) (iNsTr_141_4822) 
    // 		iNsTr_142 := ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000101001010  )  sb_countx_x0 ) 
    //  file prog.linked.opt.aa, line 1619
    // ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000101001010  )  sb_countx_x0 ) 
    ? [MUX_4828_inst] (iNsTr_140_4815 type_cast_4826_wire_constant sb_countx_x0_4685) (iNsTr_142_4829) 
    // 		iNsTr_143 := ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_134 ) 
    //  file prog.linked.opt.aa, line 1620
    // ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_134 ) 
    ? [MUX_4835_inst] (iNsTr_140_4815 type_cast_4833_wire_constant iNsTr_134_4783) (iNsTr_143_4836) 
    // 		iNsTr_144 := ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_139 ) 
    //  file prog.linked.opt.aa, line 1621
    // ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_139 ) 
    ? [MUX_4842_inst] (iNsTr_140_4815 type_cast_4840_wire_constant iNsTr_139_4809) (iNsTr_144_4843) 
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1622
    ==0? [if_stmt_4844_branch] (iNsTr_140_4815)
    // 		iNsTr_153 := ->(scevgep)
    //  file prog.linked.opt.aa, line 1630
    // ->(scevgep)
    &/ [ptr_deref_4860_base_resize] (scevgep_4857) (ptr_deref_4860_resized_base_address) 
    &/ [ptr_deref_4860_root_address_inst] (ptr_deref_4860_resized_base_address) (ptr_deref_4860_root_address) 
    &/ [ptr_deref_4860_addr_0] (ptr_deref_4860_root_address) (ptr_deref_4860_word_address_0) 
    $load [ptr_deref_4860_load_0] $from qrsDet/memory_space_26 (ptr_deref_4860_word_address_0) (ptr_deref_4860_data_0) 
    $delay ptr_deref_4860_load_0 2
    &/ [ptr_deref_4860_gather_scatter] (ptr_deref_4860_data_0) (iNsTr_153_4861) 
    // 		->(iNsTr_154) := iNsTr_153
    //  file prog.linked.opt.aa, line 1632
    // ->(iNsTr_154)
    &/ [ptr_deref_4869_base_resize] (iNsTr_154_4867) (ptr_deref_4869_resized_base_address) 
    &/ [ptr_deref_4869_root_address_inst] (ptr_deref_4869_resized_base_address) (ptr_deref_4869_root_address) 
    &/ [ptr_deref_4869_addr_0] (ptr_deref_4869_root_address) (ptr_deref_4869_word_address_0) 
    $store [ptr_deref_4869_store_0] $to memory_space_13 (ptr_deref_4869_word_address_0 ptr_deref_4869_data_0) 
    $delay ptr_deref_4869_store_0 2
    &/ [ptr_deref_4869_gather_scatter] (iNsTr_153_4861) (ptr_deref_4869_data_0) 
    // 		->(iNsTr_156) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1634
    // ->(iNsTr_156)
    &/ [ptr_deref_4879_base_resize] (iNsTr_156_4877) (ptr_deref_4879_resized_base_address) 
    &/ [ptr_deref_4879_root_address_inst] (ptr_deref_4879_resized_base_address) (ptr_deref_4879_root_address) 
    &/ [ptr_deref_4879_addr_0] (ptr_deref_4879_root_address) (ptr_deref_4879_word_address_0) 
    $store [ptr_deref_4879_store_0] $to memory_space_13 (ptr_deref_4879_word_address_0 ptr_deref_4879_data_0) 
    $delay ptr_deref_4879_store_0 2
    &/ [ptr_deref_4879_gather_scatter] (type_cast_4881_wire_constant) (ptr_deref_4879_data_0) 
    // 		iNsTr_158 := ->(scevgepx_x1)
    //  file prog.linked.opt.aa, line 1636
    // ->(scevgepx_x1)
    &/ [ptr_deref_4892_base_resize] (scevgepx_x1_4889) (ptr_deref_4892_resized_base_address) 
    &/ [ptr_deref_4892_root_address_inst] (ptr_deref_4892_resized_base_address) (ptr_deref_4892_root_address) 
    &/ [ptr_deref_4892_addr_0] (ptr_deref_4892_root_address) (ptr_deref_4892_word_address_0) 
    $load [ptr_deref_4892_load_0] $from qrsDet/memory_space_26 (ptr_deref_4892_word_address_0) (ptr_deref_4892_data_0) 
    $delay ptr_deref_4892_load_0 2
    &/ [ptr_deref_4892_gather_scatter] (ptr_deref_4892_data_0) (iNsTr_158_4893) 
    // 		->(iNsTr_159) := iNsTr_158
    //  file prog.linked.opt.aa, line 1638
    // ->(iNsTr_159)
    &/ [ptr_deref_4901_base_resize] (iNsTr_159_4899) (ptr_deref_4901_resized_base_address) 
    &/ [ptr_deref_4901_root_address_inst] (ptr_deref_4901_resized_base_address) (ptr_deref_4901_root_address) 
    &/ [ptr_deref_4901_addr_0] (ptr_deref_4901_root_address) (ptr_deref_4901_word_address_0) 
    $store [ptr_deref_4901_store_0] $to memory_space_13 (ptr_deref_4901_word_address_0 ptr_deref_4901_data_0) 
    $delay ptr_deref_4901_store_0 2
    &/ [ptr_deref_4901_gather_scatter] (iNsTr_158_4893) (ptr_deref_4901_data_0) 
    // 		->(iNsTr_161) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1640
    // ->(iNsTr_161)
    &/ [ptr_deref_4911_base_resize] (iNsTr_161_4909) (ptr_deref_4911_resized_base_address) 
    &/ [ptr_deref_4911_root_address_inst] (ptr_deref_4911_resized_base_address) (ptr_deref_4911_root_address) 
    &/ [ptr_deref_4911_addr_0] (ptr_deref_4911_root_address) (ptr_deref_4911_word_address_0) 
    $store [ptr_deref_4911_store_0] $to memory_space_13 (ptr_deref_4911_word_address_0 ptr_deref_4911_data_0) 
    $delay ptr_deref_4911_store_0 2
    &/ [ptr_deref_4911_gather_scatter] (type_cast_4913_wire_constant) (ptr_deref_4911_data_0) 
    // 		iNsTr_163 := ->(scevgepx_x2)
    //  file prog.linked.opt.aa, line 1642
    // ->(scevgepx_x2)
    &/ [ptr_deref_4924_base_resize] (scevgepx_x2_4921) (ptr_deref_4924_resized_base_address) 
    &/ [ptr_deref_4924_root_address_inst] (ptr_deref_4924_resized_base_address) (ptr_deref_4924_root_address) 
    &/ [ptr_deref_4924_addr_0] (ptr_deref_4924_root_address) (ptr_deref_4924_word_address_0) 
    $load [ptr_deref_4924_load_0] $from qrsDet/memory_space_26 (ptr_deref_4924_word_address_0) (ptr_deref_4924_data_0) 
    $delay ptr_deref_4924_load_0 2
    &/ [ptr_deref_4924_gather_scatter] (ptr_deref_4924_data_0) (iNsTr_163_4925) 
    // 		->(iNsTr_164) := iNsTr_163
    //  file prog.linked.opt.aa, line 1644
    // ->(iNsTr_164)
    &/ [ptr_deref_4933_base_resize] (iNsTr_164_4931) (ptr_deref_4933_resized_base_address) 
    &/ [ptr_deref_4933_root_address_inst] (ptr_deref_4933_resized_base_address) (ptr_deref_4933_root_address) 
    &/ [ptr_deref_4933_addr_0] (ptr_deref_4933_root_address) (ptr_deref_4933_word_address_0) 
    $store [ptr_deref_4933_store_0] $to memory_space_13 (ptr_deref_4933_word_address_0 ptr_deref_4933_data_0) 
    $delay ptr_deref_4933_store_0 2
    &/ [ptr_deref_4933_gather_scatter] (iNsTr_163_4925) (ptr_deref_4933_data_0) 
    // 		->(iNsTr_166) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1646
    // ->(iNsTr_166)
    &/ [ptr_deref_4943_base_resize] (iNsTr_166_4941) (ptr_deref_4943_resized_base_address) 
    &/ [ptr_deref_4943_root_address_inst] (ptr_deref_4943_resized_base_address) (ptr_deref_4943_root_address) 
    &/ [ptr_deref_4943_addr_0] (ptr_deref_4943_root_address) (ptr_deref_4943_word_address_0) 
    $store [ptr_deref_4943_store_0] $to memory_space_13 (ptr_deref_4943_word_address_0 ptr_deref_4943_data_0) 
    $delay ptr_deref_4943_store_0 2
    &/ [ptr_deref_4943_gather_scatter] (type_cast_4945_wire_constant) (ptr_deref_4943_data_0) 
    // 		iNsTr_168 := ->(scevgepx_x3)
    //  file prog.linked.opt.aa, line 1648
    // ->(scevgepx_x3)
    &/ [ptr_deref_4956_base_resize] (scevgepx_x3_4953) (ptr_deref_4956_resized_base_address) 
    &/ [ptr_deref_4956_root_address_inst] (ptr_deref_4956_resized_base_address) (ptr_deref_4956_root_address) 
    &/ [ptr_deref_4956_addr_0] (ptr_deref_4956_root_address) (ptr_deref_4956_word_address_0) 
    $load [ptr_deref_4956_load_0] $from qrsDet/memory_space_26 (ptr_deref_4956_word_address_0) (ptr_deref_4956_data_0) 
    $delay ptr_deref_4956_load_0 2
    &/ [ptr_deref_4956_gather_scatter] (ptr_deref_4956_data_0) (iNsTr_168_4957) 
    // 		->(iNsTr_169) := iNsTr_168
    //  file prog.linked.opt.aa, line 1650
    // ->(iNsTr_169)
    &/ [ptr_deref_4965_base_resize] (iNsTr_169_4963) (ptr_deref_4965_resized_base_address) 
    &/ [ptr_deref_4965_root_address_inst] (ptr_deref_4965_resized_base_address) (ptr_deref_4965_root_address) 
    &/ [ptr_deref_4965_addr_0] (ptr_deref_4965_root_address) (ptr_deref_4965_word_address_0) 
    $store [ptr_deref_4965_store_0] $to memory_space_13 (ptr_deref_4965_word_address_0 ptr_deref_4965_data_0) 
    $delay ptr_deref_4965_store_0 2
    &/ [ptr_deref_4965_gather_scatter] (iNsTr_168_4957) (ptr_deref_4965_data_0) 
    // 		->(iNsTr_171) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1652
    // ->(iNsTr_171)
    &/ [ptr_deref_4975_base_resize] (iNsTr_171_4973) (ptr_deref_4975_resized_base_address) 
    &/ [ptr_deref_4975_root_address_inst] (ptr_deref_4975_resized_base_address) (ptr_deref_4975_root_address) 
    &/ [ptr_deref_4975_addr_0] (ptr_deref_4975_root_address) (ptr_deref_4975_word_address_0) 
    $store [ptr_deref_4975_store_0] $to memory_space_13 (ptr_deref_4975_word_address_0 ptr_deref_4975_data_0) 
    $delay ptr_deref_4975_store_0 2
    &/ [ptr_deref_4975_gather_scatter] (type_cast_4977_wire_constant) (ptr_deref_4975_data_0) 
    // 		iNsTr_173 := ->(scevgepx_x4)
    //  file prog.linked.opt.aa, line 1654
    // ->(scevgepx_x4)
    &/ [ptr_deref_4988_base_resize] (scevgepx_x4_4985) (ptr_deref_4988_resized_base_address) 
    &/ [ptr_deref_4988_root_address_inst] (ptr_deref_4988_resized_base_address) (ptr_deref_4988_root_address) 
    &/ [ptr_deref_4988_addr_0] (ptr_deref_4988_root_address) (ptr_deref_4988_word_address_0) 
    $load [ptr_deref_4988_load_0] $from qrsDet/memory_space_26 (ptr_deref_4988_word_address_0) (ptr_deref_4988_data_0) 
    $delay ptr_deref_4988_load_0 2
    &/ [ptr_deref_4988_gather_scatter] (ptr_deref_4988_data_0) (iNsTr_173_4989) 
    // 		->(iNsTr_174) := iNsTr_173
    //  file prog.linked.opt.aa, line 1656
    // ->(iNsTr_174)
    &/ [ptr_deref_4997_base_resize] (iNsTr_174_4995) (ptr_deref_4997_resized_base_address) 
    &/ [ptr_deref_4997_root_address_inst] (ptr_deref_4997_resized_base_address) (ptr_deref_4997_root_address) 
    &/ [ptr_deref_4997_addr_0] (ptr_deref_4997_root_address) (ptr_deref_4997_word_address_0) 
    $store [ptr_deref_4997_store_0] $to memory_space_13 (ptr_deref_4997_word_address_0 ptr_deref_4997_data_0) 
    $delay ptr_deref_4997_store_0 2
    &/ [ptr_deref_4997_gather_scatter] (iNsTr_173_4989) (ptr_deref_4997_data_0) 
    // 		->(iNsTr_176) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1658
    // ->(iNsTr_176)
    &/ [ptr_deref_5007_base_resize] (iNsTr_176_5005) (ptr_deref_5007_resized_base_address) 
    &/ [ptr_deref_5007_root_address_inst] (ptr_deref_5007_resized_base_address) (ptr_deref_5007_root_address) 
    &/ [ptr_deref_5007_addr_0] (ptr_deref_5007_root_address) (ptr_deref_5007_word_address_0) 
    $store [ptr_deref_5007_store_0] $to memory_space_13 (ptr_deref_5007_word_address_0 ptr_deref_5007_data_0) 
    $delay ptr_deref_5007_store_0 2
    &/ [ptr_deref_5007_gather_scatter] (type_cast_5009_wire_constant) (ptr_deref_5007_data_0) 
    // 		iNsTr_178 := ->(scevgepx_x5)
    //  file prog.linked.opt.aa, line 1660
    // ->(scevgepx_x5)
    &/ [ptr_deref_5020_base_resize] (scevgepx_x5_5017) (ptr_deref_5020_resized_base_address) 
    &/ [ptr_deref_5020_root_address_inst] (ptr_deref_5020_resized_base_address) (ptr_deref_5020_root_address) 
    &/ [ptr_deref_5020_addr_0] (ptr_deref_5020_root_address) (ptr_deref_5020_word_address_0) 
    $load [ptr_deref_5020_load_0] $from qrsDet/memory_space_26 (ptr_deref_5020_word_address_0) (ptr_deref_5020_data_0) 
    $delay ptr_deref_5020_load_0 2
    &/ [ptr_deref_5020_gather_scatter] (ptr_deref_5020_data_0) (iNsTr_178_5021) 
    // 		->(iNsTr_179) := iNsTr_178
    //  file prog.linked.opt.aa, line 1662
    // ->(iNsTr_179)
    &/ [ptr_deref_5029_base_resize] (iNsTr_179_5027) (ptr_deref_5029_resized_base_address) 
    &/ [ptr_deref_5029_root_address_inst] (ptr_deref_5029_resized_base_address) (ptr_deref_5029_root_address) 
    &/ [ptr_deref_5029_addr_0] (ptr_deref_5029_root_address) (ptr_deref_5029_word_address_0) 
    $store [ptr_deref_5029_store_0] $to memory_space_13 (ptr_deref_5029_word_address_0 ptr_deref_5029_data_0) 
    $delay ptr_deref_5029_store_0 2
    &/ [ptr_deref_5029_gather_scatter] (iNsTr_178_5021) (ptr_deref_5029_data_0) 
    // 		->(iNsTr_181) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1664
    // ->(iNsTr_181)
    &/ [ptr_deref_5039_base_resize] (iNsTr_181_5037) (ptr_deref_5039_resized_base_address) 
    &/ [ptr_deref_5039_root_address_inst] (ptr_deref_5039_resized_base_address) (ptr_deref_5039_root_address) 
    &/ [ptr_deref_5039_addr_0] (ptr_deref_5039_root_address) (ptr_deref_5039_word_address_0) 
    $store [ptr_deref_5039_store_0] $to memory_space_13 (ptr_deref_5039_word_address_0 ptr_deref_5039_data_0) 
    $delay ptr_deref_5039_store_0 2
    &/ [ptr_deref_5039_gather_scatter] (type_cast_5041_wire_constant) (ptr_deref_5039_data_0) 
    // 		iNsTr_183 := ->(scevgepx_x6)
    //  file prog.linked.opt.aa, line 1666
    // ->(scevgepx_x6)
    &/ [ptr_deref_5052_base_resize] (scevgepx_x6_5049) (ptr_deref_5052_resized_base_address) 
    &/ [ptr_deref_5052_root_address_inst] (ptr_deref_5052_resized_base_address) (ptr_deref_5052_root_address) 
    &/ [ptr_deref_5052_addr_0] (ptr_deref_5052_root_address) (ptr_deref_5052_word_address_0) 
    $load [ptr_deref_5052_load_0] $from qrsDet/memory_space_26 (ptr_deref_5052_word_address_0) (ptr_deref_5052_data_0) 
    $delay ptr_deref_5052_load_0 2
    &/ [ptr_deref_5052_gather_scatter] (ptr_deref_5052_data_0) (iNsTr_183_5053) 
    // 		->(iNsTr_184) := iNsTr_183
    //  file prog.linked.opt.aa, line 1668
    // ->(iNsTr_184)
    &/ [ptr_deref_5061_base_resize] (iNsTr_184_5059) (ptr_deref_5061_resized_base_address) 
    &/ [ptr_deref_5061_root_address_inst] (ptr_deref_5061_resized_base_address) (ptr_deref_5061_root_address) 
    &/ [ptr_deref_5061_addr_0] (ptr_deref_5061_root_address) (ptr_deref_5061_word_address_0) 
    $store [ptr_deref_5061_store_0] $to memory_space_13 (ptr_deref_5061_word_address_0 ptr_deref_5061_data_0) 
    $delay ptr_deref_5061_store_0 2
    &/ [ptr_deref_5061_gather_scatter] (iNsTr_183_5053) (ptr_deref_5061_data_0) 
    // 		->(iNsTr_186) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1670
    // ->(iNsTr_186)
    &/ [ptr_deref_5071_base_resize] (iNsTr_186_5069) (ptr_deref_5071_resized_base_address) 
    &/ [ptr_deref_5071_root_address_inst] (ptr_deref_5071_resized_base_address) (ptr_deref_5071_root_address) 
    &/ [ptr_deref_5071_addr_0] (ptr_deref_5071_root_address) (ptr_deref_5071_word_address_0) 
    $store [ptr_deref_5071_store_0] $to memory_space_13 (ptr_deref_5071_word_address_0 ptr_deref_5071_data_0) 
    $delay ptr_deref_5071_store_0 2
    &/ [ptr_deref_5071_gather_scatter] (type_cast_5073_wire_constant) (ptr_deref_5071_data_0) 
    // 		iNsTr_188 := ->(scevgepx_x7)
    //  file prog.linked.opt.aa, line 1672
    // ->(scevgepx_x7)
    &/ [ptr_deref_5084_base_resize] (scevgepx_x7_5081) (ptr_deref_5084_resized_base_address) 
    &/ [ptr_deref_5084_root_address_inst] (ptr_deref_5084_resized_base_address) (ptr_deref_5084_root_address) 
    &/ [ptr_deref_5084_addr_0] (ptr_deref_5084_root_address) (ptr_deref_5084_word_address_0) 
    $load [ptr_deref_5084_load_0] $from qrsDet/memory_space_26 (ptr_deref_5084_word_address_0) (ptr_deref_5084_data_0) 
    $delay ptr_deref_5084_load_0 2
    &/ [ptr_deref_5084_gather_scatter] (ptr_deref_5084_data_0) (iNsTr_188_5085) 
    // 		->(iNsTr_189) := iNsTr_188
    //  file prog.linked.opt.aa, line 1674
    // ->(iNsTr_189)
    &/ [ptr_deref_5093_base_resize] (iNsTr_189_5091) (ptr_deref_5093_resized_base_address) 
    &/ [ptr_deref_5093_root_address_inst] (ptr_deref_5093_resized_base_address) (ptr_deref_5093_root_address) 
    &/ [ptr_deref_5093_addr_0] (ptr_deref_5093_root_address) (ptr_deref_5093_word_address_0) 
    $store [ptr_deref_5093_store_0] $to memory_space_13 (ptr_deref_5093_word_address_0 ptr_deref_5093_data_0) 
    $delay ptr_deref_5093_store_0 2
    &/ [ptr_deref_5093_gather_scatter] (iNsTr_188_5085) (ptr_deref_5093_data_0) 
    // 		->(iNsTr_191) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    //  file prog.linked.opt.aa, line 1676
    // ->(iNsTr_191)
    &/ [ptr_deref_5103_base_resize] (iNsTr_191_5101) (ptr_deref_5103_resized_base_address) 
    &/ [ptr_deref_5103_root_address_inst] (ptr_deref_5103_resized_base_address) (ptr_deref_5103_root_address) 
    &/ [ptr_deref_5103_addr_0] (ptr_deref_5103_root_address) (ptr_deref_5103_word_address_0) 
    $store [ptr_deref_5103_store_0] $to memory_space_13 (ptr_deref_5103_word_address_0 ptr_deref_5103_data_0) 
    $delay ptr_deref_5103_store_0 2
    &/ [ptr_deref_5103_gather_scatter] (type_cast_5105_wire_constant) (ptr_deref_5103_data_0) 
    // 		$call meanCalc (iNsTr_193 ) (iNsTr_194 ) 
    //  file prog.linked.opt.aa, line 1678
    $call [call_stmt_5115_call] $module meanCalc(iNsTr_193_5112) (iNsTr_194_5115) 
    $delay call_stmt_5115_call 2
    // 		iNsTr_195 := (iNsTr_194 - iNsTr_141)
    //  file prog.linked.opt.aa, line 1679
    // (iNsTr_194 - iNsTr_141)
    -[SUB_u32_u32_5119_inst] (iNsTr_194_5115 iNsTr_141_4822) (iNsTr_195_5120) 
    $delay SUB_u32_u32_5119_inst 1
    // 		iNsTr_196 := ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_195 ) )
    //  file prog.linked.opt.aa, line 1680
    // ($bitcast ($int<64>) iNsTr_195 )
    $S:=$U [type_cast_5123_inst] (iNsTr_195_5120) (type_cast_5123_wire)   $flowthrough
    $delay type_cast_5123_inst 0
    // ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_195 ) )
    $F:=$S [type_cast_5124_inst] (type_cast_5123_wire) (iNsTr_196_5125)  
    $delay type_cast_5124_inst 1
    // 		iNsTr_197 := threshold
    //  file prog.linked.opt.aa, line 1681
    // threshold
    $load [LOAD_threshold_5127_load_0] $from memory_space_24 (LOAD_threshold_5127_word_address_0) (LOAD_threshold_5127_data_0) 
    $delay LOAD_threshold_5127_load_0 1
    &/ [LOAD_threshold_5127_gather_scatter] (LOAD_threshold_5127_data_0) (iNsTr_197_5128) 
    // 		iNsTr_198 := (iNsTr_197 * iNsTr_196)
    //  file prog.linked.opt.aa, line 1682
    // (iNsTr_197 * iNsTr_196)
    *[MUL_f64_f64_5132_inst] (iNsTr_197_5128 iNsTr_196_5125) (iNsTr_198_5133) 
    $delay MUL_f64_f64_5132_inst 24
    // 		iNsTr_199 := ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_198 ) )
    //  file prog.linked.opt.aa, line 1683
    // ($cast ($int<32>) iNsTr_198 )
    $S:=$F [type_cast_5136_inst] (iNsTr_198_5133) (type_cast_5136_wire)  
    $delay type_cast_5136_inst 1
    // ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_198 ) )
    # := [type_cast_5137_inst] (type_cast_5136_wire) (iNsTr_199_5138) 
    $delay type_cast_5137_inst 1
    // 		iNsTr_200 := (iNsTr_199 + iNsTr_141)
    //  file prog.linked.opt.aa, line 1684
    // (iNsTr_199 + iNsTr_141)
    +[ADD_u32_u32_5142_inst] (iNsTr_199_5138 iNsTr_141_4822) (iNsTr_200_5143) 
    $delay ADD_u32_u32_5142_inst 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1686
    // 			$phi qmeanx_x3 := 			  ($cast ($uint<32>) iNsTr_194 ) $on bb_31_bb_32			  ($cast ($uint<32>) qmeanx_x0 ) $on bb_30_bb_32 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1687
    // ($cast ($uint<32>) iNsTr_194 )
    # := [type_cast_5149_inst] (iNsTr_194_5115) (type_cast_5149_wire) 
    $delay type_cast_5149_inst 1
    // ($cast ($uint<32>) qmeanx_x0 )
    # := [type_cast_5151_inst] (qmeanx_x0_4669) (type_cast_5151_wire) 
    $delay type_cast_5151_inst 1
    $phi [phi_stmt_5146] (type_cast_5149_wire type_cast_5151_wire) ( qmeanx_x3_5146 )
    // 			$phi det_threshx_x4 := 			  ($cast ($uint<32>) iNsTr_200 ) $on bb_31_bb_32			  ($cast ($uint<32>) det_threshx_x0 ) $on bb_30_bb_32 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1688
    // ($cast ($uint<32>) iNsTr_200 )
    # := [type_cast_5155_inst] (iNsTr_200_5143) (type_cast_5155_wire) 
    $delay type_cast_5155_inst 1
    // ($cast ($uint<32>) det_threshx_x0 )
    # := [type_cast_5157_inst] (det_threshx_x0_4695) (type_cast_5157_wire) 
    $delay type_cast_5157_inst 1
    $phi [phi_stmt_5152] (type_cast_5155_wire type_cast_5157_wire) ( det_threshx_x4_5152 )
    // 		iNsTr_202 := (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) iNsTr_137 ))
    //  file prog.linked.opt.aa, line 1690
    // ($bitcast ($int<32>) iNsTr_68 )
    $S:=$U [type_cast_5161_inst] (iNsTr_68_3619) (type_cast_5161_wire)   $flowthrough
    $delay type_cast_5161_inst 0
    // ($bitcast ($int<32>) iNsTr_137 )
    $S:=$U [type_cast_5163_inst] (iNsTr_137_4800) (type_cast_5163_wire)   $flowthrough
    $delay type_cast_5163_inst 0
    // (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) iNsTr_137 ))
    $S>$S[SGT_i32_u1_5164_inst] (type_cast_5161_wire type_cast_5163_wire) (iNsTr_202_5165) 
    $delay SGT_i32_u1_5164_inst 1
    // 		iNsTr_203 := ( $mux iNsTr_202 iNsTr_68  iNsTr_137 ) 
    //  file prog.linked.opt.aa, line 1691
    // ( $mux iNsTr_202 iNsTr_68  iNsTr_137 ) 
    ? [MUX_5170_inst] (iNsTr_202_5165 iNsTr_68_3619 iNsTr_137_4800) (iNsTr_203_5171) 
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1693
    // 			$phi nmeanx_x3 := 			  ($cast ($uint<32>) iNsTr_141 ) $on bb_32_bb_33			  ($cast ($uint<32>) nmeanx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1694
    // ($cast ($uint<32>) iNsTr_141 )
    # := [type_cast_5177_inst] (iNsTr_141_4822) (type_cast_5177_wire) 
    $delay type_cast_5177_inst 1
    // ($cast ($uint<32>) nmeanx_x0 )
    # := [type_cast_5179_inst] (nmeanx_x0_4659) (type_cast_5179_wire) 
    $delay type_cast_5179_inst 1
    $phi [phi_stmt_5174] (type_cast_5177_wire type_cast_5179_wire) ( nmeanx_x3_5174 )
    // 			$phi qmeanx_x4 := 			  ($cast ($uint<32>) qmeanx_x3 ) $on bb_32_bb_33			  ($cast ($uint<32>) qmeanx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1695
    // ($cast ($uint<32>) qmeanx_x3 )
    # := [type_cast_5183_inst] (qmeanx_x3_5146) (type_cast_5183_wire) 
    $delay type_cast_5183_inst 1
    // ($cast ($uint<32>) qmeanx_x0 )
    # := [type_cast_5185_inst] (qmeanx_x0_4669) (type_cast_5185_wire) 
    $delay type_cast_5185_inst 1
    $phi [phi_stmt_5180] (type_cast_5183_wire type_cast_5185_wire) ( qmeanx_x4_5180 )
    // 			$phi sb_countx_x2 := 			  ($cast ($uint<32>) iNsTr_142 ) $on bb_32_bb_33			  ($cast ($uint<32>) sb_countx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1696
    // ($cast ($uint<32>) iNsTr_142 )
    # := [type_cast_5189_inst] (iNsTr_142_4829) (type_cast_5189_wire) 
    $delay type_cast_5189_inst 1
    // ($cast ($uint<32>) sb_countx_x0 )
    # := [type_cast_5191_inst] (sb_countx_x0_4685) (type_cast_5191_wire) 
    $delay type_cast_5191_inst 1
    $phi [phi_stmt_5186] (type_cast_5189_wire type_cast_5191_wire) ( sb_countx_x2_5186 )
    // 			$phi det_threshx_x5 := 			  ($cast ($uint<32>) det_threshx_x4 ) $on bb_32_bb_33			  ($cast ($uint<32>) det_threshx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1697
    // ($cast ($uint<32>) det_threshx_x4 )
    # := [type_cast_5195_inst] (det_threshx_x4_5152) (type_cast_5195_wire) 
    $delay type_cast_5195_inst 1
    // ($cast ($uint<32>) det_threshx_x0 )
    # := [type_cast_5197_inst] (det_threshx_x0_4695) (type_cast_5197_wire) 
    $delay type_cast_5197_inst 1
    $phi [phi_stmt_5192] (type_cast_5195_wire type_cast_5197_wire) ( det_threshx_x5_5192 )
    // 			$phi initMaxx_x2 := 			  ($cast ($uint<32>) iNsTr_203 ) $on bb_32_bb_33			  ($cast ($uint<32>) initMaxx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1698
    // ($cast ($uint<32>) iNsTr_203 )
    # := [type_cast_5201_inst] (iNsTr_203_5171) (type_cast_5201_wire) 
    $delay type_cast_5201_inst 1
    // ($cast ($uint<32>) initMaxx_x0 )
    # := [type_cast_5203_inst] (initMaxx_x0_4703) (type_cast_5203_wire) 
    $delay type_cast_5203_inst 1
    $phi [phi_stmt_5198] (type_cast_5201_wire type_cast_5203_wire) ( initMaxx_x2_5198 )
    // 			$phi rset_countx_x2 := 			  ($cast ($uint<32>) iNsTr_144 ) $on bb_32_bb_33			  ($cast ($uint<32>) rset_countx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1699
    // ($cast ($uint<32>) iNsTr_144 )
    # := [type_cast_5207_inst] (iNsTr_144_4843) (type_cast_5207_wire) 
    $delay type_cast_5207_inst 1
    // ($cast ($uint<32>) rset_countx_x0 )
    # := [type_cast_5209_inst] (rset_countx_x0_4711) (type_cast_5209_wire) 
    $delay type_cast_5209_inst 1
    $phi [phi_stmt_5204] (type_cast_5207_wire type_cast_5209_wire) ( rset_countx_x2_5204 )
    // 			$phi initBlankx_x2 := 			  ($cast ($uint<32>) iNsTr_143 ) $on bb_32_bb_33			  ($cast ($uint<32>) initBlankx_x0 ) $on bb_29_bb_33 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 1700
    // ($cast ($uint<32>) iNsTr_143 )
    # := [type_cast_5213_inst] (iNsTr_143_4836) (type_cast_5213_wire) 
    $delay type_cast_5213_inst 1
    // ($cast ($uint<32>) initBlankx_x0 )
    # := [type_cast_5215_inst] (initBlankx_x0_4719) (type_cast_5215_wire) 
    $delay type_cast_5215_inst 1
    $phi [phi_stmt_5210] (type_cast_5213_wire type_cast_5215_wire) ( initBlankx_x2_5210 )
    // 		det_output_pipe := QRSdelayx_x0
    //  file prog.linked.opt.aa, line 1702
    // det_output_pipe
    $ioport $out [WPIPE_det_output_pipe_5217_inst]  (QRSdelayx_x0_4617) (det_output_pipe) 
    $buffering $in WPIPE_det_output_pipe_5217_inst QRSdelayx_x0_4617 1
  }
  // end data-path
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1191
  phi_stmt_3043 <=> (branch_block_stmt_3035/bb_0_bb_1_PhiReq/phi_stmt_3043/phi_stmt_3043_req) (branch_block_stmt_3035/merge_stmt_3042_PhiAck/phi_stmt_3043_ack)
  // CP-DP links for do-while  do_while_stmt_3049
  //  file prog.linked.opt.aa, line 1194
  phi_stmt_3051 <=> (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/phi_stmt_3051_loopback_sample_req branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/phi_stmt_3051_entry_sample_req branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/phi_stmt_3051_update_start_) (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/phi_stmt_3051_sample_completed_ branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/phi_stmt_3051_update_completed_)
  // ($cast ($uint<32>) iNsTr_4 )
  type_cast_3054_inst <=> (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/type_cast_3054_Sample/rr branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/type_cast_3054_Update/cr) (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/type_cast_3054_Sample/ra branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/type_cast_3054_Update/ca)
  // 			scevgep5x_xi := @(NOISEbuff[indexx_x02x_xi])
  //  file prog.linked.opt.aa, line 1198
  array_obj_ref_3059_index_0_resize <=> (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/array_obj_ref_3059_index_resize_0/index_resize_req) (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/array_obj_ref_3059_index_resize_0/index_resize_ack)
  array_obj_ref_3059_index_0_rename <=> (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/array_obj_ref_3059_index_scale_0/scale_rename_req) (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/array_obj_ref_3059_index_scale_0/scale_rename_ack)
  array_obj_ref_3059_index_offset <=> (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/array_obj_ref_3059_final_index_sum_regn/req) (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/array_obj_ref_3059_final_index_sum_regn/ack)
  array_obj_ref_3059_root_address_inst <=> (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/array_obj_ref_3059_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/array_obj_ref_3059_base_plus_offset/sum_rename_ack)
  addr_of_3060_final_reg <=> (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/addr_of_3060_request/req branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/addr_of_3060_complete/req) (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/addr_of_3060_request/ack branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/addr_of_3060_complete/ack)
  // 			scevgep6x_xi := @(RRbuff[indexx_x02x_xi])
  //  file prog.linked.opt.aa, line 1199
  array_obj_ref_3064_index_0_resize <=> (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/array_obj_ref_3064_index_resize_0/index_resize_req) (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/array_obj_ref_3064_index_resize_0/index_resize_ack)
  array_obj_ref_3064_index_0_rename <=> (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/array_obj_ref_3064_index_scale_0/scale_rename_req) (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/array_obj_ref_3064_index_scale_0/scale_rename_ack)
  array_obj_ref_3064_index_offset <=> (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/array_obj_ref_3064_final_index_sum_regn/req) (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/array_obj_ref_3064_final_index_sum_regn/ack)
  array_obj_ref_3064_root_address_inst <=> (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/array_obj_ref_3064_base_plus_offset_sample/rr branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/array_obj_ref_3064_base_plus_offset_update/cr) (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/array_obj_ref_3064_base_plus_offset_sample/ra branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/array_obj_ref_3064_base_plus_offset_update/ca)
  addr_of_3065_final_reg <=> (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/addr_of_3065_request/req branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/addr_of_3065_complete/req) (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/addr_of_3065_request/ack branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/addr_of_3065_complete/ack)
  // 			->(scevgep5x_xi) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 1200
  ptr_deref_3068_base_resize <=> (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/ptr_deref_3068_base_addr_resize/base_resize_req) (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/ptr_deref_3068_base_addr_resize/base_resize_ack)
  ptr_deref_3068_root_address_inst <=> (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/ptr_deref_3068_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/ptr_deref_3068_base_plus_offset/sum_rename_ack)
  ptr_deref_3068_addr_0 <=> (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/ptr_deref_3068_word_addrgen/root_register_req) (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/ptr_deref_3068_word_addrgen/root_register_ack)
  ptr_deref_3068_gather_scatter <=> (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/ptr_deref_3068_Sample/ptr_deref_3068_Split/split_req) (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/ptr_deref_3068_Sample/ptr_deref_3068_Split/split_ack)
  ptr_deref_3068_store_0 <=> (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/ptr_deref_3068_Sample/word_access_start/word_0/rr branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/ptr_deref_3068_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/ptr_deref_3068_Sample/word_access_start/word_0/ra branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/ptr_deref_3068_Update/word_access_complete/word_0/ca)
  // 			->(scevgep6x_xi) := ($bitcast ($uint<32>) _b00000000000000000000000011001000  )
  //  file prog.linked.opt.aa, line 1201
  ptr_deref_3073_base_resize <=> (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/ptr_deref_3073_base_addr_resize/base_resize_req) (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/ptr_deref_3073_base_addr_resize/base_resize_ack)
  ptr_deref_3073_root_address_inst <=> (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/ptr_deref_3073_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/ptr_deref_3073_base_plus_offset/sum_rename_ack)
  ptr_deref_3073_addr_0 <=> (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/ptr_deref_3073_word_addrgen/root_register_req) (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/ptr_deref_3073_word_addrgen/root_register_ack)
  ptr_deref_3073_gather_scatter <=> (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/ptr_deref_3073_Sample/ptr_deref_3073_Split/split_req) (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/ptr_deref_3073_Sample/ptr_deref_3073_Split/split_ack)
  ptr_deref_3073_store_0 <=> (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/ptr_deref_3073_Sample/word_access_start/word_0/rr branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/ptr_deref_3073_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/ptr_deref_3073_Sample/word_access_start/word_0/ra branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/ptr_deref_3073_Update/word_access_complete/word_0/ca)
  // 			iNsTr_4 := (indexx_x02x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 1202
  // (indexx_x02x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_3081_inst <=> (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/ADD_u32_u32_3081_Sample/rr branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/ADD_u32_u32_3081_Update/cr) (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/ADD_u32_u32_3081_Sample/ra branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/ADD_u32_u32_3081_Update/ca)
  // 			exitcond6 := (iNsTr_4 == ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
  //  file prog.linked.opt.aa, line 1203
  // (iNsTr_4 == ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
  EQ_u32_u1_3087_inst <=> (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/EQ_u32_u1_3087_Sample/rr branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/EQ_u32_u1_3087_Update/cr) (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/EQ_u32_u1_3087_Sample/ra branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/EQ_u32_u1_3087_Update/ca)
  // ( ~ exitcond6 )
  NOT_u1_u1_3091_inst <=> (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/NOT_u1_u1_3091_Sample/rr branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/NOT_u1_u1_3091_Update/cr) (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/NOT_u1_u1_3091_Sample/ra branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/NOT_u1_u1_3091_Update/ca)
  do_while_stmt_3049_branch <=> (branch_block_stmt_3035/do_while_stmt_3049/do_while_stmt_3049_loop_body/condition_evaluated) (branch_block_stmt_3035/do_while_stmt_3049/loop_exit/ack branch_block_stmt_3035/do_while_stmt_3049/loop_taken/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1206
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1209
  phi_stmt_3096 <=> (branch_block_stmt_3035/bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq/phi_stmt_3096/phi_stmt_3096_req) (branch_block_stmt_3035/merge_stmt_3095_PhiAck/phi_stmt_3096_ack)
  // CP-DP links for do-while  do_while_stmt_3102
  //  file prog.linked.opt.aa, line 1212
  phi_stmt_3104 <=> (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/phi_stmt_3104_loopback_sample_req branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/phi_stmt_3104_entry_sample_req branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/phi_stmt_3104_update_start_) (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/phi_stmt_3104_sample_completed_ branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/phi_stmt_3104_update_completed_)
  // ($cast ($uint<32>) iNsTr_9 )
  type_cast_3107_inst <=> (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/type_cast_3107_Sample/rr branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/type_cast_3107_Update/cr) (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/type_cast_3107_Sample/ra branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/type_cast_3107_Update/ca)
  // 			scevgepx_xi := @(DDCALCbuff[indexx_x11x_xi])
  //  file prog.linked.opt.aa, line 1216
  array_obj_ref_3112_index_0_resize <=> (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/array_obj_ref_3112_index_resize_0/index_resize_req) (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/array_obj_ref_3112_index_resize_0/index_resize_ack)
  array_obj_ref_3112_index_0_rename <=> (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/array_obj_ref_3112_index_scale_0/scale_rename_req) (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/array_obj_ref_3112_index_scale_0/scale_rename_ack)
  array_obj_ref_3112_index_offset <=> (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/array_obj_ref_3112_final_index_sum_regn/req) (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/array_obj_ref_3112_final_index_sum_regn/ack)
  array_obj_ref_3112_root_address_inst <=> (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/array_obj_ref_3112_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/array_obj_ref_3112_base_plus_offset/sum_rename_ack)
  addr_of_3113_final_reg <=> (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/addr_of_3113_request/req branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/addr_of_3113_complete/req) (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/addr_of_3113_request/ack branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/addr_of_3113_complete/ack)
  // 			->(scevgepx_xi) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 1217
  ptr_deref_3116_base_resize <=> (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/ptr_deref_3116_base_addr_resize/base_resize_req) (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/ptr_deref_3116_base_addr_resize/base_resize_ack)
  ptr_deref_3116_root_address_inst <=> (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/ptr_deref_3116_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/ptr_deref_3116_base_plus_offset/sum_rename_ack)
  ptr_deref_3116_addr_0 <=> (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/ptr_deref_3116_word_addrgen/root_register_req) (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/ptr_deref_3116_word_addrgen/root_register_ack)
  ptr_deref_3116_gather_scatter <=> (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/ptr_deref_3116_Sample/ptr_deref_3116_Split/split_req) (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/ptr_deref_3116_Sample/ptr_deref_3116_Split/split_ack)
  ptr_deref_3116_store_0 <=> (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/ptr_deref_3116_Sample/word_access_start/word_0/rr branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/ptr_deref_3116_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/ptr_deref_3116_Sample/word_access_start/word_0/ra branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/ptr_deref_3116_Update/word_access_complete/word_0/ca)
  // 			iNsTr_9 := (indexx_x11x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 1218
  // (indexx_x11x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_3124_inst <=> (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/ADD_u32_u32_3124_Sample/rr branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/ADD_u32_u32_3124_Update/cr) (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/ADD_u32_u32_3124_Sample/ra branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/ADD_u32_u32_3124_Update/ca)
  // 			exitcond := (iNsTr_9 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
  //  file prog.linked.opt.aa, line 1219
  // (iNsTr_9 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
  EQ_u32_u1_3130_inst <=> (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/EQ_u32_u1_3130_Sample/rr branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/EQ_u32_u1_3130_Update/cr) (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/EQ_u32_u1_3130_Sample/ra branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/EQ_u32_u1_3130_Update/ca)
  // ( ~ exitcond )
  NOT_u1_u1_3134_inst <=> (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/NOT_u1_u1_3134_Sample/rr branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/NOT_u1_u1_3134_Update/cr) (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/NOT_u1_u1_3134_Sample/ra branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/NOT_u1_u1_3134_Update/ca)
  do_while_stmt_3102_branch <=> (branch_block_stmt_3035/do_while_stmt_3102/do_while_stmt_3102_loop_body/condition_evaluated) (branch_block_stmt_3035/do_while_stmt_3102/loop_exit/ack branch_block_stmt_3035/do_while_stmt_3102/loop_taken/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1222
  // 		maxDer := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 1224
  // maxDer
  STORE_maxDer_3137_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_maxDer_3137_Sample/STORE_maxDer_3137_Split/split_req) (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_maxDer_3137_Sample/STORE_maxDer_3137_Split/split_ack)
  STORE_maxDer_3137_store_0 <=> (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_maxDer_3137_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_maxDer_3137_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_maxDer_3137_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_maxDer_3137_Update/word_access_complete/word_0/ca)
  // 		DDCALCbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 1225
  // DDCALCbuff_ptr
  STORE_DDCALCbuff_ptr_3141_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_DDCALCbuff_ptr_3141_Sample/STORE_DDCALCbuff_ptr_3141_Split/split_req) (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_DDCALCbuff_ptr_3141_Sample/STORE_DDCALCbuff_ptr_3141_Split/split_ack)
  STORE_DDCALCbuff_ptr_3141_store_0 <=> (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_DDCALCbuff_ptr_3141_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_DDCALCbuff_ptr_3141_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_DDCALCbuff_ptr_3141_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_DDCALCbuff_ptr_3141_Update/word_access_complete/word_0/ca)
  // 		DDbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 1226
  // DDbuff_ptr
  STORE_DDbuff_ptr_3145_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_DDbuff_ptr_3145_Sample/STORE_DDbuff_ptr_3145_Split/split_req) (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_DDbuff_ptr_3145_Sample/STORE_DDbuff_ptr_3145_Split/split_ack)
  STORE_DDbuff_ptr_3145_store_0 <=> (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_DDbuff_ptr_3145_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_DDbuff_ptr_3145_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_DDbuff_ptr_3145_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_DDbuff_ptr_3145_Update/word_access_complete/word_0/ca)
  // 		NOISEbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
  //  file prog.linked.opt.aa, line 1227
  // NOISEbuff_ptr
  STORE_NOISEbuff_ptr_3149_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_NOISEbuff_ptr_3149_Sample/STORE_NOISEbuff_ptr_3149_Split/split_req) (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_NOISEbuff_ptr_3149_Sample/STORE_NOISEbuff_ptr_3149_Split/split_ack)
  STORE_NOISEbuff_ptr_3149_store_0 <=> (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_NOISEbuff_ptr_3149_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_NOISEbuff_ptr_3149_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_NOISEbuff_ptr_3149_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_NOISEbuff_ptr_3149_Update/word_access_complete/word_0/ca)
  // 		RRbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
  //  file prog.linked.opt.aa, line 1228
  // RRbuff_ptr
  STORE_RRbuff_ptr_3153_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_RRbuff_ptr_3153_Sample/STORE_RRbuff_ptr_3153_Split/split_req) (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_RRbuff_ptr_3153_Sample/STORE_RRbuff_ptr_3153_Split/split_ack)
  STORE_RRbuff_ptr_3153_store_0 <=> (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_RRbuff_ptr_3153_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_RRbuff_ptr_3153_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_RRbuff_ptr_3153_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_RRbuff_ptr_3153_Update/word_access_complete/word_0/ca)
  // 		QRSbuff_ptr := ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
  //  file prog.linked.opt.aa, line 1229
  // QRSbuff_ptr
  STORE_QRSbuff_ptr_3157_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_QRSbuff_ptr_3157_Sample/STORE_QRSbuff_ptr_3157_Split/split_req) (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_QRSbuff_ptr_3157_Sample/STORE_QRSbuff_ptr_3157_Split/split_ack)
  STORE_QRSbuff_ptr_3157_store_0 <=> (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_QRSbuff_ptr_3157_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_QRSbuff_ptr_3157_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_QRSbuff_ptr_3157_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_QRSbuff_ptr_3157_Update/word_access_complete/word_0/ca)
  // 		timeSinceMaxPeak := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 1230
  // timeSinceMaxPeak
  STORE_timeSinceMaxPeak_3161_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_timeSinceMaxPeak_3161_Sample/STORE_timeSinceMaxPeak_3161_Split/split_req) (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_timeSinceMaxPeak_3161_Sample/STORE_timeSinceMaxPeak_3161_Split/split_ack)
  STORE_timeSinceMaxPeak_3161_store_0 <=> (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_timeSinceMaxPeak_3161_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_timeSinceMaxPeak_3161_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_timeSinceMaxPeak_3161_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_timeSinceMaxPeak_3161_Update/word_access_complete/word_0/ca)
  // 		maxPeak := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 1231
  // maxPeak
  STORE_maxPeak_3165_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_maxPeak_3165_Sample/STORE_maxPeak_3165_Split/split_req) (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_maxPeak_3165_Sample/STORE_maxPeak_3165_Split/split_ack)
  STORE_maxPeak_3165_store_0 <=> (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_maxPeak_3165_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_maxPeak_3165_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_maxPeak_3165_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_maxPeak_3165_Update/word_access_complete/word_0/ca)
  // 		lastDatum := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 1232
  // lastDatum
  STORE_lastDatum_3169_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_lastDatum_3169_Sample/STORE_lastDatum_3169_Split/split_req) (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_lastDatum_3169_Sample/STORE_lastDatum_3169_Split/split_ack)
  STORE_lastDatum_3169_store_0 <=> (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_lastDatum_3169_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_lastDatum_3169_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_lastDatum_3169_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_3140_to_assign_stmt_3172/STORE_lastDatum_3169_Update/word_access_complete/word_0/ca)
  // 		$call QRSFilt (($bitcast ($uint<8>) _b00000001  ) ) () 
  //  file prog.linked.opt.aa, line 1233
  call_stmt_3175_call <=> (branch_block_stmt_3035/call_stmt_3175/call_stmt_3175_Sample/crr branch_block_stmt_3035/call_stmt_3175/call_stmt_3175_Update/ccr) (branch_block_stmt_3035/call_stmt_3175/call_stmt_3175_Sample/cra branch_block_stmt_3035/call_stmt_3175/call_stmt_3175_Update/cca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1235
  // ($cast ($uint<8>) init8Done_nextx_x0 )
  type_cast_3184_inst <=> (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3178/phi_stmt_3178_sources/type_cast_3184/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3178/phi_stmt_3178_sources/type_cast_3184/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3178/phi_stmt_3178_sources/type_cast_3184/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3178/phi_stmt_3178_sources/type_cast_3184/SplitProtocol/Update/ca)
  phi_stmt_3178 <=> (branch_block_stmt_3035/initDetx_xexit_bb_5_PhiReq/phi_stmt_3178/phi_stmt_3178_req branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3178/phi_stmt_3178_req) (branch_block_stmt_3035/merge_stmt_3177_PhiAck/phi_stmt_3178_ack)
  // ($cast ($uint<8>) init8Done_nextx_x0 )
  type_cast_3191_inst <=> (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3185/phi_stmt_3185_sources/type_cast_3191/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3185/phi_stmt_3185_sources/type_cast_3191/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3185/phi_stmt_3185_sources/type_cast_3191/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3185/phi_stmt_3185_sources/type_cast_3191/SplitProtocol/Update/ca)
  phi_stmt_3185 <=> (branch_block_stmt_3035/initDetx_xexit_bb_5_PhiReq/phi_stmt_3185/phi_stmt_3185_req branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3185/phi_stmt_3185_req) (branch_block_stmt_3035/merge_stmt_3177_PhiAck/phi_stmt_3185_ack)
  // ($cast ($uint<32>) noiseValx_x0 )
  type_cast_3198_inst <=> (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3192/phi_stmt_3192_sources/type_cast_3198/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3192/phi_stmt_3192_sources/type_cast_3198/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3192/phi_stmt_3192_sources/type_cast_3198/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3192/phi_stmt_3192_sources/type_cast_3198/SplitProtocol/Update/ca)
  phi_stmt_3192 <=> (branch_block_stmt_3035/initDetx_xexit_bb_5_PhiReq/phi_stmt_3192/phi_stmt_3192_req branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3192/phi_stmt_3192_req) (branch_block_stmt_3035/merge_stmt_3177_PhiAck/phi_stmt_3192_ack)
  // ($cast ($uint<32>) rrValx_x0 )
  type_cast_3205_inst <=> (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3199/phi_stmt_3199_sources/type_cast_3205/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3199/phi_stmt_3199_sources/type_cast_3205/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3199/phi_stmt_3199_sources/type_cast_3205/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3199/phi_stmt_3199_sources/type_cast_3205/SplitProtocol/Update/ca)
  phi_stmt_3199 <=> (branch_block_stmt_3035/initDetx_xexit_bb_5_PhiReq/phi_stmt_3199/phi_stmt_3199_req branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3199/phi_stmt_3199_req) (branch_block_stmt_3035/merge_stmt_3177_PhiAck/phi_stmt_3199_ack)
  // ($cast ($uint<32>) qrsValx_x0 )
  type_cast_3212_inst <=> (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3206/phi_stmt_3206_sources/type_cast_3212/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3206/phi_stmt_3206_sources/type_cast_3212/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3206/phi_stmt_3206_sources/type_cast_3212/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3206/phi_stmt_3206_sources/type_cast_3212/SplitProtocol/Update/ca)
  phi_stmt_3206 <=> (branch_block_stmt_3035/initDetx_xexit_bb_5_PhiReq/phi_stmt_3206/phi_stmt_3206_req branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3206/phi_stmt_3206_req) (branch_block_stmt_3035/merge_stmt_3177_PhiAck/phi_stmt_3206_ack)
  // ($cast ($uint<32>) nmeanx_x3 )
  type_cast_3219_inst <=> (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3213/phi_stmt_3213_sources/type_cast_3219/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3213/phi_stmt_3213_sources/type_cast_3219/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3213/phi_stmt_3213_sources/type_cast_3219/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3213/phi_stmt_3213_sources/type_cast_3219/SplitProtocol/Update/ca)
  phi_stmt_3213 <=> (branch_block_stmt_3035/initDetx_xexit_bb_5_PhiReq/phi_stmt_3213/phi_stmt_3213_req branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3213/phi_stmt_3213_req) (branch_block_stmt_3035/merge_stmt_3177_PhiAck/phi_stmt_3213_ack)
  // ($cast ($uint<32>) qmeanx_x4 )
  type_cast_3226_inst <=> (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3220/phi_stmt_3220_sources/type_cast_3226/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3220/phi_stmt_3220_sources/type_cast_3226/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3220/phi_stmt_3220_sources/type_cast_3226/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3220/phi_stmt_3220_sources/type_cast_3226/SplitProtocol/Update/ca)
  phi_stmt_3220 <=> (branch_block_stmt_3035/initDetx_xexit_bb_5_PhiReq/phi_stmt_3220/phi_stmt_3220_req branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3220/phi_stmt_3220_req) (branch_block_stmt_3035/merge_stmt_3177_PhiAck/phi_stmt_3220_ack)
  // ($cast ($uint<32>) sbLocx_x0 )
  type_cast_3233_inst <=> (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3227/phi_stmt_3227_sources/type_cast_3233/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3227/phi_stmt_3227_sources/type_cast_3233/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3227/phi_stmt_3227_sources/type_cast_3233/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3227/phi_stmt_3227_sources/type_cast_3233/SplitProtocol/Update/ca)
  phi_stmt_3227 <=> (branch_block_stmt_3035/initDetx_xexit_bb_5_PhiReq/phi_stmt_3227/phi_stmt_3227_req branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3227/phi_stmt_3227_req) (branch_block_stmt_3035/merge_stmt_3177_PhiAck/phi_stmt_3227_ack)
  // ($cast ($uint<32>) sb_countx_x2 )
  type_cast_3240_inst <=> (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3234/phi_stmt_3234_sources/type_cast_3240/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3234/phi_stmt_3234_sources/type_cast_3240/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3234/phi_stmt_3234_sources/type_cast_3240/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3234/phi_stmt_3234_sources/type_cast_3240/SplitProtocol/Update/ca)
  phi_stmt_3234 <=> (branch_block_stmt_3035/initDetx_xexit_bb_5_PhiReq/phi_stmt_3234/phi_stmt_3234_req branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3234/phi_stmt_3234_req) (branch_block_stmt_3035/merge_stmt_3177_PhiAck/phi_stmt_3234_ack)
  // ($cast ($uint<32>) det_threshx_x5 )
  type_cast_3247_inst <=> (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3241/phi_stmt_3241_sources/type_cast_3247/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3241/phi_stmt_3241_sources/type_cast_3247/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3241/phi_stmt_3241_sources/type_cast_3247/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3241/phi_stmt_3241_sources/type_cast_3247/SplitProtocol/Update/ca)
  phi_stmt_3241 <=> (branch_block_stmt_3035/initDetx_xexit_bb_5_PhiReq/phi_stmt_3241/phi_stmt_3241_req branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3241/phi_stmt_3241_req) (branch_block_stmt_3035/merge_stmt_3177_PhiAck/phi_stmt_3241_ack)
  // ($cast ($uint<32>) initMaxx_x2 )
  type_cast_3254_inst <=> (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3248/phi_stmt_3248_sources/type_cast_3254/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3248/phi_stmt_3248_sources/type_cast_3254/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3248/phi_stmt_3248_sources/type_cast_3254/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3248/phi_stmt_3248_sources/type_cast_3254/SplitProtocol/Update/ca)
  phi_stmt_3248 <=> (branch_block_stmt_3035/initDetx_xexit_bb_5_PhiReq/phi_stmt_3248/phi_stmt_3248_req branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3248/phi_stmt_3248_req) (branch_block_stmt_3035/merge_stmt_3177_PhiAck/phi_stmt_3248_ack)
  // ($cast ($uint<32>) rset_countx_x2 )
  type_cast_3261_inst <=> (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3255/phi_stmt_3255_sources/type_cast_3261/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3255/phi_stmt_3255_sources/type_cast_3261/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3255/phi_stmt_3255_sources/type_cast_3261/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3255/phi_stmt_3255_sources/type_cast_3261/SplitProtocol/Update/ca)
  phi_stmt_3255 <=> (branch_block_stmt_3035/initDetx_xexit_bb_5_PhiReq/phi_stmt_3255/phi_stmt_3255_req branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3255/phi_stmt_3255_req) (branch_block_stmt_3035/merge_stmt_3177_PhiAck/phi_stmt_3255_ack)
  // ($cast ($uint<32>) iNsTr_66 )
  type_cast_3268_inst <=> (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3262/phi_stmt_3262_sources/type_cast_3268/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3262/phi_stmt_3262_sources/type_cast_3268/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3262/phi_stmt_3262_sources/type_cast_3268/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3262/phi_stmt_3262_sources/type_cast_3268/SplitProtocol/Update/ca)
  phi_stmt_3262 <=> (branch_block_stmt_3035/initDetx_xexit_bb_5_PhiReq/phi_stmt_3262/phi_stmt_3262_req branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3262/phi_stmt_3262_req) (branch_block_stmt_3035/merge_stmt_3177_PhiAck/phi_stmt_3262_ack)
  // ($cast ($uint<32>) initBlankx_x2 )
  type_cast_3275_inst <=> (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3269/phi_stmt_3269_sources/type_cast_3275/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3269/phi_stmt_3269_sources/type_cast_3275/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3269/phi_stmt_3269_sources/type_cast_3275/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3269/phi_stmt_3269_sources/type_cast_3275/SplitProtocol/Update/ca)
  phi_stmt_3269 <=> (branch_block_stmt_3035/initDetx_xexit_bb_5_PhiReq/phi_stmt_3269/phi_stmt_3269_req branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3269/phi_stmt_3269_req) (branch_block_stmt_3035/merge_stmt_3177_PhiAck/phi_stmt_3269_ack)
  // ($cast ($uint<32>) countx_x1 )
  type_cast_3282_inst <=> (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3276/phi_stmt_3276_sources/type_cast_3282/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3276/phi_stmt_3276_sources/type_cast_3282/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3276/phi_stmt_3276_sources/type_cast_3282/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3276/phi_stmt_3276_sources/type_cast_3282/SplitProtocol/Update/ca)
  phi_stmt_3276 <=> (branch_block_stmt_3035/initDetx_xexit_bb_5_PhiReq/phi_stmt_3276/phi_stmt_3276_req branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3276/phi_stmt_3276_req) (branch_block_stmt_3035/merge_stmt_3177_PhiAck/phi_stmt_3276_ack)
  // ($cast ($uint<32>) qpk_countx_x0 )
  type_cast_3289_inst <=> (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3283/phi_stmt_3283_sources/type_cast_3289/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3283/phi_stmt_3283_sources/type_cast_3289/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3283/phi_stmt_3283_sources/type_cast_3289/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3283/phi_stmt_3283_sources/type_cast_3289/SplitProtocol/Update/ca)
  phi_stmt_3283 <=> (branch_block_stmt_3035/initDetx_xexit_bb_5_PhiReq/phi_stmt_3283/phi_stmt_3283_req branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3283/phi_stmt_3283_req) (branch_block_stmt_3035/merge_stmt_3177_PhiAck/phi_stmt_3283_ack)
  // ($cast ($uint<32>) sbPeakx_x0 )
  type_cast_3296_inst <=> (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3290/phi_stmt_3290_sources/type_cast_3296/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3290/phi_stmt_3290_sources/type_cast_3296/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3290/phi_stmt_3290_sources/type_cast_3296/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3290/phi_stmt_3290_sources/type_cast_3296/SplitProtocol/Update/ca)
  phi_stmt_3290 <=> (branch_block_stmt_3035/initDetx_xexit_bb_5_PhiReq/phi_stmt_3290/phi_stmt_3290_req branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3290/phi_stmt_3290_req) (branch_block_stmt_3035/merge_stmt_3177_PhiAck/phi_stmt_3290_ack)
  // ($cast ($uint<32>) iNsTr_65 )
  type_cast_3303_inst <=> (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3297/phi_stmt_3297_sources/type_cast_3303/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3297/phi_stmt_3297_sources/type_cast_3303/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3297/phi_stmt_3297_sources/type_cast_3303/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3297/phi_stmt_3297_sources/type_cast_3303/SplitProtocol/Update/ca)
  phi_stmt_3297 <=> (branch_block_stmt_3035/initDetx_xexit_bb_5_PhiReq/phi_stmt_3297/phi_stmt_3297_req branch_block_stmt_3035/bb_33_bb_5_PhiReq/phi_stmt_3297/phi_stmt_3297_req) (branch_block_stmt_3035/merge_stmt_3177_PhiAck/phi_stmt_3297_ack)
  // 		iNsTr_23 := det_input_pipe
  //  file prog.linked.opt.aa, line 1255
  // det_input_pipe
  RPIPE_det_input_pipe_3306_inst <=> (branch_block_stmt_3035/assign_stmt_3307/RPIPE_det_input_pipe_3306_Sample/rr branch_block_stmt_3035/assign_stmt_3307/RPIPE_det_input_pipe_3306_Update/cr) (branch_block_stmt_3035/assign_stmt_3307/RPIPE_det_input_pipe_3306_Sample/ra branch_block_stmt_3035/assign_stmt_3307/RPIPE_det_input_pipe_3306_Update/ca)
  // 		filt_input_pipe := iNsTr_23
  //  file prog.linked.opt.aa, line 1256
  // filt_input_pipe
  WPIPE_filt_input_pipe_3308_inst <=> (branch_block_stmt_3035/assign_stmt_3310/WPIPE_filt_input_pipe_3308_Sample/req branch_block_stmt_3035/assign_stmt_3310/WPIPE_filt_input_pipe_3308_Update/req) (branch_block_stmt_3035/assign_stmt_3310/WPIPE_filt_input_pipe_3308_Sample/ack branch_block_stmt_3035/assign_stmt_3310/WPIPE_filt_input_pipe_3308_Update/ack)
  // 		$call QRSFilt (($bitcast ($uint<8>) _b00000000  ) ) () 
  //  file prog.linked.opt.aa, line 1257
  call_stmt_3313_call <=> (branch_block_stmt_3035/call_stmt_3313/call_stmt_3313_Sample/crr branch_block_stmt_3035/call_stmt_3313/call_stmt_3313_Update/ccr) (branch_block_stmt_3035/call_stmt_3313/call_stmt_3313_Sample/cra branch_block_stmt_3035/call_stmt_3313/call_stmt_3313_Update/cca)
  // 		iNsTr_27 := timeSinceMaxPeak
  //  file prog.linked.opt.aa, line 1258
  // timeSinceMaxPeak
  LOAD_timeSinceMaxPeak_3315_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_3316_to_assign_stmt_3319/LOAD_timeSinceMaxPeak_3315_Update/LOAD_timeSinceMaxPeak_3315_Merge/merge_req) (branch_block_stmt_3035/assign_stmt_3316_to_assign_stmt_3319/LOAD_timeSinceMaxPeak_3315_Update/LOAD_timeSinceMaxPeak_3315_Merge/merge_ack)
  LOAD_timeSinceMaxPeak_3315_load_0 <=> (branch_block_stmt_3035/assign_stmt_3316_to_assign_stmt_3319/LOAD_timeSinceMaxPeak_3315_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_3316_to_assign_stmt_3319/LOAD_timeSinceMaxPeak_3315_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_3316_to_assign_stmt_3319/LOAD_timeSinceMaxPeak_3315_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_3316_to_assign_stmt_3319/LOAD_timeSinceMaxPeak_3315_Update/word_access_complete/word_0/ca)
  // 		iNsTr_28 := maxPeak
  //  file prog.linked.opt.aa, line 1259
  // maxPeak
  LOAD_maxPeak_3318_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_3316_to_assign_stmt_3319/LOAD_maxPeak_3318_Update/LOAD_maxPeak_3318_Merge/merge_req) (branch_block_stmt_3035/assign_stmt_3316_to_assign_stmt_3319/LOAD_maxPeak_3318_Update/LOAD_maxPeak_3318_Merge/merge_ack)
  LOAD_maxPeak_3318_load_0 <=> (branch_block_stmt_3035/assign_stmt_3316_to_assign_stmt_3319/LOAD_maxPeak_3318_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_3316_to_assign_stmt_3319/LOAD_maxPeak_3318_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_3316_to_assign_stmt_3319/LOAD_maxPeak_3318_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_3316_to_assign_stmt_3319/LOAD_maxPeak_3318_Update/word_access_complete/word_0/ca)
  // 		iNsTr_30 := filt_output_pipe
  //  file prog.linked.opt.aa, line 1260
  // filt_output_pipe
  RPIPE_filt_output_pipe_3321_inst <=> (branch_block_stmt_3035/assign_stmt_3322/RPIPE_filt_output_pipe_3321_Sample/rr branch_block_stmt_3035/assign_stmt_3322/RPIPE_filt_output_pipe_3321_Update/cr) (branch_block_stmt_3035/assign_stmt_3322/RPIPE_filt_output_pipe_3321_Sample/ra branch_block_stmt_3035/assign_stmt_3322/RPIPE_filt_output_pipe_3321_Update/ca)
  // 		iNsTr_31 := (($bitcast ($int<32>) iNsTr_27 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.linked.opt.aa, line 1261
  // (($bitcast ($int<32>) iNsTr_27 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) iNsTr_27 )
  type_cast_3325_inst <=> (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3325_Sample/rr branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3325_Update/cr) (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3325_Sample/ra branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3325_Update/ca)
  SGT_i32_u1_3329_inst <=> (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/SGT_i32_u1_3329_Sample/rr branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/SGT_i32_u1_3329_Update/cr) (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/SGT_i32_u1_3329_Sample/ra branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/SGT_i32_u1_3329_Update/ca)
  // 		iNsTr_32 := ($cast ($uint<32>) iNsTr_31 )
  //  file prog.linked.opt.aa, line 1262
  // ($cast ($uint<32>) iNsTr_31 )
  type_cast_3333_inst <=> (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3333_Sample/rr branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3333_Update/cr) (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3333_Sample/ra branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3333_Update/ca)
  // 		iNsTr_33 := (iNsTr_32 + iNsTr_27)
  //  file prog.linked.opt.aa, line 1263
  // (iNsTr_32 + iNsTr_27)
  ADD_u32_u32_3338_inst <=> (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/ADD_u32_u32_3338_Sample/rr branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/ADD_u32_u32_3338_Update/cr) (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/ADD_u32_u32_3338_Sample/ra branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/ADD_u32_u32_3338_Update/ca)
  // 		iNsTr_34 := lastDatum
  //  file prog.linked.opt.aa, line 1264
  // lastDatum
  LOAD_lastDatum_3341_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/LOAD_lastDatum_3341_Update/LOAD_lastDatum_3341_Merge/merge_req) (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/LOAD_lastDatum_3341_Update/LOAD_lastDatum_3341_Merge/merge_ack)
  LOAD_lastDatum_3341_load_0 <=> (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/LOAD_lastDatum_3341_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/LOAD_lastDatum_3341_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/LOAD_lastDatum_3341_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/LOAD_lastDatum_3341_Update/word_access_complete/word_0/ca)
  // 		iNsTr_35 := (($bitcast ($int<32>) iNsTr_30 ) > ($bitcast ($int<32>) iNsTr_34 ))
  //  file prog.linked.opt.aa, line 1265
  // (($bitcast ($int<32>) iNsTr_30 ) > ($bitcast ($int<32>) iNsTr_34 ))
  // ($bitcast ($int<32>) iNsTr_30 )
  type_cast_3345_inst <=> (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3345_Sample/rr branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3345_Update/cr) (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3345_Sample/ra branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3345_Update/ca)
  // ($bitcast ($int<32>) iNsTr_34 )
  type_cast_3347_inst <=> (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3347_Sample/rr branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3347_Update/cr) (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3347_Sample/ra branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3347_Update/ca)
  SGT_i32_u1_3348_inst <=> (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/SGT_i32_u1_3348_Sample/rr branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/SGT_i32_u1_3348_Update/cr) (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/SGT_i32_u1_3348_Sample/ra branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/SGT_i32_u1_3348_Update/ca)
  // 		iNsTr_36 := (($bitcast ($int<32>) iNsTr_30 ) > ($bitcast ($int<32>) iNsTr_28 ))
  //  file prog.linked.opt.aa, line 1266
  // (($bitcast ($int<32>) iNsTr_30 ) > ($bitcast ($int<32>) iNsTr_28 ))
  // ($bitcast ($int<32>) iNsTr_30 )
  type_cast_3352_inst <=> (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3352_Sample/rr branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3352_Update/cr) (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3352_Sample/ra branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3352_Update/ca)
  // ($bitcast ($int<32>) iNsTr_28 )
  type_cast_3354_inst <=> (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3354_Sample/rr branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3354_Update/cr) (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3354_Sample/ra branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3354_Update/ca)
  SGT_i32_u1_3355_inst <=> (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/SGT_i32_u1_3355_Sample/rr branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/SGT_i32_u1_3355_Update/cr) (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/SGT_i32_u1_3355_Sample/ra branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/SGT_i32_u1_3355_Update/ca)
  // 		iNsTr_37 := (iNsTr_35 & iNsTr_36)
  //  file prog.linked.opt.aa, line 1267
  // (iNsTr_35 & iNsTr_36)
  AND_u1_u1_3360_inst <=> (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/AND_u1_u1_3360_Sample/rr branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/AND_u1_u1_3360_Update/cr) (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/AND_u1_u1_3360_Sample/ra branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/AND_u1_u1_3360_Update/ca)
  // 		iNsTr_38 := ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_28 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) )
  //  file prog.linked.opt.aa, line 1268
  // (($bitcast ($int<32>) iNsTr_28 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
  // ($bitcast ($int<32>) iNsTr_28 )
  type_cast_3364_inst <=> (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3364_Sample/rr branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3364_Update/cr) (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3364_Sample/ra branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3364_Update/ca)
  ASHR_i32_i32_3368_inst <=> (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/ASHR_i32_i32_3368_Sample/rr branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/ASHR_i32_i32_3368_Update/cr) (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/ASHR_i32_i32_3368_Sample/ra branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/ASHR_i32_i32_3368_Update/ca)
  // ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_28 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) )
  type_cast_3369_inst <=> (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3369_Sample/rr branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3369_Update/cr) (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3369_Sample/ra branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3369_Update/ca)
  // 		iNsTr_39 := (($bitcast ($int<32>) iNsTr_30 ) < ($bitcast ($int<32>) iNsTr_38 ))
  //  file prog.linked.opt.aa, line 1269
  // (($bitcast ($int<32>) iNsTr_30 ) < ($bitcast ($int<32>) iNsTr_38 ))
  // ($bitcast ($int<32>) iNsTr_30 )
  type_cast_3373_inst <=> (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3373_Sample/rr branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3373_Update/cr) (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3373_Sample/ra branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3373_Update/ca)
  // ($bitcast ($int<32>) iNsTr_38 )
  type_cast_3375_inst <=> (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3375_Sample/rr branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3375_Update/cr) (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3375_Sample/ra branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3375_Update/ca)
  SLT_i32_u1_3376_inst <=> (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/SLT_i32_u1_3376_Sample/rr branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/SLT_i32_u1_3376_Update/cr) (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/SLT_i32_u1_3376_Sample/ra branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/SLT_i32_u1_3376_Update/ca)
  // 		iNsTr_40 := (($bitcast ($int<32>) iNsTr_33 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010011  ) ))
  //  file prog.linked.opt.aa, line 1270
  // (($bitcast ($int<32>) iNsTr_33 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010011  ) ))
  // ($bitcast ($int<32>) iNsTr_33 )
  type_cast_3380_inst <=> (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3380_Sample/rr branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3380_Update/cr) (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3380_Sample/ra branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/type_cast_3380_Update/ca)
  SGT_i32_u1_3384_inst <=> (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/SGT_i32_u1_3384_Sample/rr branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/SGT_i32_u1_3384_Update/cr) (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/SGT_i32_u1_3384_Sample/ra branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/SGT_i32_u1_3384_Update/ca)
  // 		orx_xcondx_xi := (iNsTr_39 | iNsTr_40)
  //  file prog.linked.opt.aa, line 1271
  // (iNsTr_39 | iNsTr_40)
  OR_u1_u1_3389_inst <=> (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/OR_u1_u1_3389_Sample/rr branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/OR_u1_u1_3389_Update/cr) (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/OR_u1_u1_3389_Sample/ra branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/OR_u1_u1_3389_Update/ca)
  // 		xx_xdemorgan42 := (iNsTr_35 & iNsTr_36)
  //  file prog.linked.opt.aa, line 1272
  // (iNsTr_35 & iNsTr_36)
  AND_u1_u1_3394_inst <=> (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/AND_u1_u1_3394_Sample/rr branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/AND_u1_u1_3394_Update/cr) (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/AND_u1_u1_3394_Sample/ra branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/AND_u1_u1_3394_Update/ca)
  // 		iNsTr_41 := (xx_xdemorgan42 ^ ($bitcast ($uint<1>) _b1  ))
  //  file prog.linked.opt.aa, line 1273
  // (xx_xdemorgan42 ^ ($bitcast ($uint<1>) _b1  ))
  XOR_u1_u1_3400_inst <=> (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/XOR_u1_u1_3400_Sample/rr branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/XOR_u1_u1_3400_Update/cr) (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/XOR_u1_u1_3400_Sample/ra branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/XOR_u1_u1_3400_Update/ca)
  // 		iNsTr_42 := (orx_xcondx_xi & iNsTr_41)
  //  file prog.linked.opt.aa, line 1274
  // (orx_xcondx_xi & iNsTr_41)
  AND_u1_u1_3405_inst <=> (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/AND_u1_u1_3405_Sample/rr branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/AND_u1_u1_3405_Update/cr) (branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/AND_u1_u1_3405_Sample/ra branch_block_stmt_3035/assign_stmt_3330_to_assign_stmt_3406/AND_u1_u1_3405_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1275
  if_stmt_3407_branch <=> (branch_block_stmt_3035/if_stmt_3407_eval_test/branch_req) (branch_block_stmt_3035/if_stmt_3407_else_link/else_choice_transition branch_block_stmt_3035/if_stmt_3407_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1280
  // 		iNsTr_44 := (($bitcast ($int<32>) iNsTr_28 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000110  ) ))
  //  file prog.linked.opt.aa, line 1282
  // (($bitcast ($int<32>) iNsTr_28 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000110  ) ))
  // ($bitcast ($int<32>) iNsTr_28 )
  type_cast_3416_inst <=> (branch_block_stmt_3035/assign_stmt_3421_to_assign_stmt_3428/type_cast_3416_Sample/rr branch_block_stmt_3035/assign_stmt_3421_to_assign_stmt_3428/type_cast_3416_Update/cr) (branch_block_stmt_3035/assign_stmt_3421_to_assign_stmt_3428/type_cast_3416_Sample/ra branch_block_stmt_3035/assign_stmt_3421_to_assign_stmt_3428/type_cast_3416_Update/ca)
  SGT_i32_u1_3420_inst <=> (branch_block_stmt_3035/assign_stmt_3421_to_assign_stmt_3428/SGT_i32_u1_3420_Sample/rr branch_block_stmt_3035/assign_stmt_3421_to_assign_stmt_3428/SGT_i32_u1_3420_Update/cr) (branch_block_stmt_3035/assign_stmt_3421_to_assign_stmt_3428/SGT_i32_u1_3420_Sample/ra branch_block_stmt_3035/assign_stmt_3421_to_assign_stmt_3428/SGT_i32_u1_3420_Update/ca)
  // 		phitmpx_xi := ( $mux iNsTr_44 iNsTr_28  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
  //  file prog.linked.opt.aa, line 1283
  // ( $mux iNsTr_44 iNsTr_28  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
  MUX_3427_inst <=> (branch_block_stmt_3035/assign_stmt_3421_to_assign_stmt_3428/MUX_3427_start/req branch_block_stmt_3035/assign_stmt_3421_to_assign_stmt_3428/MUX_3427_complete/req) (branch_block_stmt_3035/assign_stmt_3421_to_assign_stmt_3428/MUX_3427_start/ack branch_block_stmt_3035/assign_stmt_3421_to_assign_stmt_3428/MUX_3427_complete/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1285
  // ($cast ($uint<32>) phitmpx_xi )
  type_cast_3437_inst <=> (branch_block_stmt_3035/bb_6_bb_7_PhiReq/phi_stmt_3431/phi_stmt_3431_sources/type_cast_3437/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_6_bb_7_PhiReq/phi_stmt_3431/phi_stmt_3431_sources/type_cast_3437/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_6_bb_7_PhiReq/phi_stmt_3431/phi_stmt_3431_sources/type_cast_3437/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_6_bb_7_PhiReq/phi_stmt_3431/phi_stmt_3431_sources/type_cast_3437/SplitProtocol/Update/ca)
  phi_stmt_3431 <=> (branch_block_stmt_3035/bb_5_bb_7_PhiReq/phi_stmt_3431/phi_stmt_3431_req branch_block_stmt_3035/bb_6_bb_7_PhiReq/phi_stmt_3431/phi_stmt_3431_req) (branch_block_stmt_3035/merge_stmt_3430_PhiAck/phi_stmt_3431_ack)
  // 		iNsTr_47 := ( $mux iNsTr_42 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_28 ) 
  //  file prog.linked.opt.aa, line 1288
  // ( $mux iNsTr_42 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_28 ) 
  MUX_3444_inst <=> (branch_block_stmt_3035/assign_stmt_3445_to_assign_stmt_3458/MUX_3444_start/req branch_block_stmt_3035/assign_stmt_3445_to_assign_stmt_3458/MUX_3444_complete/req) (branch_block_stmt_3035/assign_stmt_3445_to_assign_stmt_3458/MUX_3444_start/ack branch_block_stmt_3035/assign_stmt_3445_to_assign_stmt_3458/MUX_3444_complete/ack)
  // 		iNsTr_48 := ( $mux iNsTr_42 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_33 ) 
  //  file prog.linked.opt.aa, line 1289
  // ( $mux iNsTr_42 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_33 ) 
  MUX_3451_inst <=> (branch_block_stmt_3035/assign_stmt_3445_to_assign_stmt_3458/MUX_3451_start/req branch_block_stmt_3035/assign_stmt_3445_to_assign_stmt_3458/MUX_3451_complete/req) (branch_block_stmt_3035/assign_stmt_3445_to_assign_stmt_3458/MUX_3451_start/ack branch_block_stmt_3035/assign_stmt_3445_to_assign_stmt_3458/MUX_3451_complete/ack)
  // 		iNsTr_49 := ( $mux iNsTr_37 iNsTr_30  iNsTr_47 ) 
  //  file prog.linked.opt.aa, line 1290
  // ( $mux iNsTr_37 iNsTr_30  iNsTr_47 ) 
  MUX_3457_inst <=> (branch_block_stmt_3035/assign_stmt_3445_to_assign_stmt_3458/MUX_3457_start/req branch_block_stmt_3035/assign_stmt_3445_to_assign_stmt_3458/MUX_3457_complete/req) (branch_block_stmt_3035/assign_stmt_3445_to_assign_stmt_3458/MUX_3457_start/ack branch_block_stmt_3035/assign_stmt_3445_to_assign_stmt_3458/MUX_3457_complete/ack)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1291
  if_stmt_3459_branch <=> (branch_block_stmt_3035/if_stmt_3459_eval_test/branch_req) (branch_block_stmt_3035/if_stmt_3459_else_link/else_choice_transition branch_block_stmt_3035/if_stmt_3459_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1296
  // 		iNsTr_51 := (($bitcast ($int<32>) iNsTr_49 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
  //  file prog.linked.opt.aa, line 1298
  // (($bitcast ($int<32>) iNsTr_49 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
  // ($bitcast ($int<32>) iNsTr_49 )
  type_cast_3468_inst <=> (branch_block_stmt_3035/assign_stmt_3473_to_assign_stmt_3480/type_cast_3468_Sample/rr branch_block_stmt_3035/assign_stmt_3473_to_assign_stmt_3480/type_cast_3468_Update/cr) (branch_block_stmt_3035/assign_stmt_3473_to_assign_stmt_3480/type_cast_3468_Sample/ra branch_block_stmt_3035/assign_stmt_3473_to_assign_stmt_3480/type_cast_3468_Update/ca)
  SGT_i32_u1_3472_inst <=> (branch_block_stmt_3035/assign_stmt_3473_to_assign_stmt_3480/SGT_i32_u1_3472_Sample/rr branch_block_stmt_3035/assign_stmt_3473_to_assign_stmt_3480/SGT_i32_u1_3472_Update/cr) (branch_block_stmt_3035/assign_stmt_3473_to_assign_stmt_3480/SGT_i32_u1_3472_Sample/ra branch_block_stmt_3035/assign_stmt_3473_to_assign_stmt_3480/SGT_i32_u1_3472_Update/ca)
  // 		phitmp1x_xi := ( $mux iNsTr_51 ($bitcast ($uint<32>) _b00000000000000000000000000000001  )  iNsTr_48 ) 
  //  file prog.linked.opt.aa, line 1299
  // ( $mux iNsTr_51 ($bitcast ($uint<32>) _b00000000000000000000000000000001  )  iNsTr_48 ) 
  MUX_3479_inst <=> (branch_block_stmt_3035/assign_stmt_3473_to_assign_stmt_3480/MUX_3479_start/req branch_block_stmt_3035/assign_stmt_3473_to_assign_stmt_3480/MUX_3479_complete/req) (branch_block_stmt_3035/assign_stmt_3473_to_assign_stmt_3480/MUX_3479_start/ack branch_block_stmt_3035/assign_stmt_3473_to_assign_stmt_3480/MUX_3479_complete/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1301
  // ($cast ($uint<32>) iNsTr_48 )
  type_cast_3486_inst <=> (branch_block_stmt_3035/bb_7_peakx_xexit_PhiReq/phi_stmt_3483/phi_stmt_3483_sources/type_cast_3486/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_7_peakx_xexit_PhiReq/phi_stmt_3483/phi_stmt_3483_sources/type_cast_3486/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_7_peakx_xexit_PhiReq/phi_stmt_3483/phi_stmt_3483_sources/type_cast_3486/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_7_peakx_xexit_PhiReq/phi_stmt_3483/phi_stmt_3483_sources/type_cast_3486/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) phitmp1x_xi )
  type_cast_3488_inst <=> (branch_block_stmt_3035/bb_8_peakx_xexit_PhiReq/phi_stmt_3483/phi_stmt_3483_sources/type_cast_3488/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_8_peakx_xexit_PhiReq/phi_stmt_3483/phi_stmt_3483_sources/type_cast_3488/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_8_peakx_xexit_PhiReq/phi_stmt_3483/phi_stmt_3483_sources/type_cast_3488/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_8_peakx_xexit_PhiReq/phi_stmt_3483/phi_stmt_3483_sources/type_cast_3488/SplitProtocol/Update/ca)
  phi_stmt_3483 <=> (branch_block_stmt_3035/bb_7_peakx_xexit_PhiReq/phi_stmt_3483/phi_stmt_3483_req branch_block_stmt_3035/bb_8_peakx_xexit_PhiReq/phi_stmt_3483/phi_stmt_3483_req) (branch_block_stmt_3035/merge_stmt_3482_PhiAck/phi_stmt_3483_ack)
  // 		timeSinceMaxPeak := iNsTr_53
  //  file prog.linked.opt.aa, line 1304
  // timeSinceMaxPeak
  STORE_timeSinceMaxPeak_3490_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/STORE_timeSinceMaxPeak_3490_Sample/STORE_timeSinceMaxPeak_3490_Split/split_req) (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/STORE_timeSinceMaxPeak_3490_Sample/STORE_timeSinceMaxPeak_3490_Split/split_ack)
  STORE_timeSinceMaxPeak_3490_store_0 <=> (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/STORE_timeSinceMaxPeak_3490_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/STORE_timeSinceMaxPeak_3490_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/STORE_timeSinceMaxPeak_3490_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/STORE_timeSinceMaxPeak_3490_Update/word_access_complete/word_0/ca)
  // 		maxPeak := iNsTr_49
  //  file prog.linked.opt.aa, line 1305
  // maxPeak
  STORE_maxPeak_3493_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/STORE_maxPeak_3493_Sample/STORE_maxPeak_3493_Split/split_req) (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/STORE_maxPeak_3493_Sample/STORE_maxPeak_3493_Split/split_ack)
  STORE_maxPeak_3493_store_0 <=> (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/STORE_maxPeak_3493_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/STORE_maxPeak_3493_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/STORE_maxPeak_3493_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/STORE_maxPeak_3493_Update/word_access_complete/word_0/ca)
  // 		lastDatum := iNsTr_30
  //  file prog.linked.opt.aa, line 1306
  // lastDatum
  STORE_lastDatum_3496_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/STORE_lastDatum_3496_Sample/STORE_lastDatum_3496_Split/split_req) (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/STORE_lastDatum_3496_Sample/STORE_lastDatum_3496_Split/split_ack)
  STORE_lastDatum_3496_store_0 <=> (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/STORE_lastDatum_3496_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/STORE_lastDatum_3496_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/STORE_lastDatum_3496_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/STORE_lastDatum_3496_Update/word_access_complete/word_0/ca)
  // 		iNsTr_57 := (($bitcast ($int<32>) iNsTr_46 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.linked.opt.aa, line 1307
  // (($bitcast ($int<32>) iNsTr_46 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) iNsTr_46 )
  type_cast_3501_inst <=> (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/type_cast_3501_Sample/rr branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/type_cast_3501_Update/cr) (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/type_cast_3501_Sample/ra branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/type_cast_3501_Update/ca)
  SGT_i32_u1_3505_inst <=> (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/SGT_i32_u1_3505_Sample/rr branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/SGT_i32_u1_3505_Update/cr) (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/SGT_i32_u1_3505_Sample/ra branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/SGT_i32_u1_3505_Update/ca)
  // 		iNsTr_58 := (($bitcast ($int<32>) preBlank_countx_x0 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.linked.opt.aa, line 1308
  // (($bitcast ($int<32>) preBlank_countx_x0 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) preBlank_countx_x0 )
  type_cast_3509_inst <=> (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/type_cast_3509_Sample/rr branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/type_cast_3509_Update/cr) (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/type_cast_3509_Sample/ra branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/type_cast_3509_Update/ca)
  SGT_i32_u1_3513_inst <=> (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/SGT_i32_u1_3513_Sample/rr branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/SGT_i32_u1_3513_Update/cr) (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/SGT_i32_u1_3513_Sample/ra branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/SGT_i32_u1_3513_Update/ca)
  // 		iNsTr_59 := (($bitcast ($int<32>) iNsTr_46 ) > ($bitcast ($int<32>) tempPeakx_x0 ))
  //  file prog.linked.opt.aa, line 1309
  // (($bitcast ($int<32>) iNsTr_46 ) > ($bitcast ($int<32>) tempPeakx_x0 ))
  // ($bitcast ($int<32>) iNsTr_46 )
  type_cast_3517_inst <=> (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/type_cast_3517_Sample/rr branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/type_cast_3517_Update/cr) (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/type_cast_3517_Sample/ra branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/type_cast_3517_Update/ca)
  // ($bitcast ($int<32>) tempPeakx_x0 )
  type_cast_3519_inst <=> (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/type_cast_3519_Sample/rr branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/type_cast_3519_Update/cr) (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/type_cast_3519_Sample/ra branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/type_cast_3519_Update/ca)
  SGT_i32_u1_3520_inst <=> (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/SGT_i32_u1_3520_Sample/rr branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/SGT_i32_u1_3520_Update/cr) (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/SGT_i32_u1_3520_Sample/ra branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/SGT_i32_u1_3520_Update/ca)
  // 		iNsTr_60 := (preBlank_countx_x0 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  //  file prog.linked.opt.aa, line 1310
  // (preBlank_countx_x0 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  ADD_u32_u32_3526_inst <=> (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/ADD_u32_u32_3526_Sample/rr branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/ADD_u32_u32_3526_Update/cr) (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/ADD_u32_u32_3526_Sample/ra branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/ADD_u32_u32_3526_Update/ca)
  // 		iNsTr_61 := (iNsTr_60 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.linked.opt.aa, line 1311
  // (iNsTr_60 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_3532_inst <=> (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/EQ_u32_u1_3532_Sample/rr branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/EQ_u32_u1_3532_Update/cr) (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/EQ_u32_u1_3532_Sample/ra branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/EQ_u32_u1_3532_Update/ca)
  // 		iNsTr_62 := (iNsTr_58 ^ ($bitcast ($uint<1>) _b1  ))
  //  file prog.linked.opt.aa, line 1312
  // (iNsTr_58 ^ ($bitcast ($uint<1>) _b1  ))
  XOR_u1_u1_3538_inst <=> (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/XOR_u1_u1_3538_Sample/rr branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/XOR_u1_u1_3538_Update/cr) (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/XOR_u1_u1_3538_Sample/ra branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/XOR_u1_u1_3538_Update/ca)
  // 		iNsTr_63 := (iNsTr_57 & iNsTr_62)
  //  file prog.linked.opt.aa, line 1313
  // (iNsTr_57 & iNsTr_62)
  AND_u1_u1_3543_inst <=> (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/AND_u1_u1_3543_Sample/rr branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/AND_u1_u1_3543_Update/cr) (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/AND_u1_u1_3543_Sample/ra branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/AND_u1_u1_3543_Update/ca)
  // 		xx_xnot13 := (iNsTr_59 ^ ($bitcast ($uint<1>) _b1  ))
  //  file prog.linked.opt.aa, line 1314
  // (iNsTr_59 ^ ($bitcast ($uint<1>) _b1  ))
  XOR_u1_u1_3549_inst <=> (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/XOR_u1_u1_3549_Sample/rr branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/XOR_u1_u1_3549_Update/cr) (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/XOR_u1_u1_3549_Sample/ra branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/XOR_u1_u1_3549_Update/ca)
  // 		notx_xbrmerge := (iNsTr_57 & xx_xnot13)
  //  file prog.linked.opt.aa, line 1315
  // (iNsTr_57 & xx_xnot13)
  AND_u1_u1_3554_inst <=> (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/AND_u1_u1_3554_Sample/rr branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/AND_u1_u1_3554_Update/cr) (branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/AND_u1_u1_3554_Sample/ra branch_block_stmt_3035/assign_stmt_3492_to_assign_stmt_3555/AND_u1_u1_3554_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1316
  if_stmt_3556_branch <=> (branch_block_stmt_3035/if_stmt_3556_eval_test/branch_req) (branch_block_stmt_3035/if_stmt_3556_else_link/else_choice_transition branch_block_stmt_3035/if_stmt_3556_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1321
  // 		phitmp18 := ( $mux iNsTr_59 iNsTr_46  tempPeakx_x0 ) 
  //  file prog.linked.opt.aa, line 1323
  // ( $mux iNsTr_59 iNsTr_46  tempPeakx_x0 ) 
  MUX_3567_inst <=> (branch_block_stmt_3035/assign_stmt_3568_to_assign_stmt_3575/MUX_3567_start/req branch_block_stmt_3035/assign_stmt_3568_to_assign_stmt_3575/MUX_3567_complete/req) (branch_block_stmt_3035/assign_stmt_3568_to_assign_stmt_3575/MUX_3567_start/ack branch_block_stmt_3035/assign_stmt_3568_to_assign_stmt_3575/MUX_3567_complete/ack)
  // 		phitmp1 := ( $mux iNsTr_59 ($bitcast ($uint<32>) _b00000000000000000000000000100111  )  iNsTr_60 ) 
  //  file prog.linked.opt.aa, line 1324
  // ( $mux iNsTr_59 ($bitcast ($uint<32>) _b00000000000000000000000000100111  )  iNsTr_60 ) 
  MUX_3574_inst <=> (branch_block_stmt_3035/assign_stmt_3568_to_assign_stmt_3575/MUX_3574_start/req branch_block_stmt_3035/assign_stmt_3568_to_assign_stmt_3575/MUX_3574_complete/req) (branch_block_stmt_3035/assign_stmt_3568_to_assign_stmt_3575/MUX_3574_start/ack branch_block_stmt_3035/assign_stmt_3568_to_assign_stmt_3575/MUX_3574_complete/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1326
  // ($cast ($uint<32>) phitmp18 )
  type_cast_3581_inst <=> (branch_block_stmt_3035/bb_10_xx_xthread_PhiReq/phi_stmt_3578/phi_stmt_3578_sources/type_cast_3581/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_10_xx_xthread_PhiReq/phi_stmt_3578/phi_stmt_3578_sources/type_cast_3581/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_10_xx_xthread_PhiReq/phi_stmt_3578/phi_stmt_3578_sources/type_cast_3581/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_10_xx_xthread_PhiReq/phi_stmt_3578/phi_stmt_3578_sources/type_cast_3581/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_46 )
  type_cast_3583_inst <=> (branch_block_stmt_3035/peakx_xexit_xx_xthread_PhiReq/phi_stmt_3578/phi_stmt_3578_sources/type_cast_3583/SplitProtocol/Sample/rr branch_block_stmt_3035/peakx_xexit_xx_xthread_PhiReq/phi_stmt_3578/phi_stmt_3578_sources/type_cast_3583/SplitProtocol/Update/cr) (branch_block_stmt_3035/peakx_xexit_xx_xthread_PhiReq/phi_stmt_3578/phi_stmt_3578_sources/type_cast_3583/SplitProtocol/Sample/ra branch_block_stmt_3035/peakx_xexit_xx_xthread_PhiReq/phi_stmt_3578/phi_stmt_3578_sources/type_cast_3583/SplitProtocol/Update/ca)
  phi_stmt_3578 <=> (branch_block_stmt_3035/bb_10_xx_xthread_PhiReq/phi_stmt_3578/phi_stmt_3578_req branch_block_stmt_3035/peakx_xexit_xx_xthread_PhiReq/phi_stmt_3578/phi_stmt_3578_req) (branch_block_stmt_3035/merge_stmt_3577_PhiAck/phi_stmt_3578_ack)
  // ($cast ($uint<32>) phitmp1 )
  type_cast_3587_inst <=> (branch_block_stmt_3035/bb_10_xx_xthread_PhiReq/phi_stmt_3584/phi_stmt_3584_sources/type_cast_3587/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_10_xx_xthread_PhiReq/phi_stmt_3584/phi_stmt_3584_sources/type_cast_3587/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_10_xx_xthread_PhiReq/phi_stmt_3584/phi_stmt_3584_sources/type_cast_3587/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_10_xx_xthread_PhiReq/phi_stmt_3584/phi_stmt_3584_sources/type_cast_3587/SplitProtocol/Update/ca)
  phi_stmt_3584 <=> (branch_block_stmt_3035/bb_10_xx_xthread_PhiReq/phi_stmt_3584/phi_stmt_3584_req branch_block_stmt_3035/peakx_xexit_xx_xthread_PhiReq/phi_stmt_3584/phi_stmt_3584_req) (branch_block_stmt_3035/merge_stmt_3577_PhiAck/phi_stmt_3584_ack)
  // 		xx_xnot14 := (iNsTr_57 ^ ($bitcast ($uint<1>) _b1  ))
  //  file prog.linked.opt.aa, line 1330
  // (iNsTr_57 ^ ($bitcast ($uint<1>) _b1  ))
  XOR_u1_u1_3596_inst <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/XOR_u1_u1_3596_Sample/rr branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/XOR_u1_u1_3596_Update/cr) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/XOR_u1_u1_3596_Sample/ra branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/XOR_u1_u1_3596_Update/ca)
  // 		xx_xnot2x_xnot := (iNsTr_58 & xx_xnot14)
  //  file prog.linked.opt.aa, line 1331
  // (iNsTr_58 & xx_xnot14)
  AND_u1_u1_3601_inst <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/AND_u1_u1_3601_Sample/rr branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/AND_u1_u1_3601_Update/cr) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/AND_u1_u1_3601_Sample/ra branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/AND_u1_u1_3601_Update/ca)
  // 		tmp := (notx_xbrmerge | xx_xnot2x_xnot)
  //  file prog.linked.opt.aa, line 1332
  // (notx_xbrmerge | xx_xnot2x_xnot)
  OR_u1_u1_3606_inst <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/OR_u1_u1_3606_Sample/rr branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/OR_u1_u1_3606_Update/cr) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/OR_u1_u1_3606_Sample/ra branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/OR_u1_u1_3606_Update/ca)
  // 		iNsTr_67 := (iNsTr_61 & tmp)
  //  file prog.linked.opt.aa, line 1333
  // (iNsTr_61 & tmp)
  AND_u1_u1_3611_inst <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/AND_u1_u1_3611_Sample/rr branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/AND_u1_u1_3611_Update/cr) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/AND_u1_u1_3611_Sample/ra branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/AND_u1_u1_3611_Update/ca)
  // 		iNsTr_68 := ( $mux iNsTr_67 iNsTr_65  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
  //  file prog.linked.opt.aa, line 1334
  // ( $mux iNsTr_67 iNsTr_65  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
  MUX_3618_inst <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/MUX_3618_start/req branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/MUX_3618_complete/req) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/MUX_3618_start/ack branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/MUX_3618_complete/ack)
  // 		iNsTr_69 := DDCALCbuff_ptr
  //  file prog.linked.opt.aa, line 1335
  // DDCALCbuff_ptr
  LOAD_DDCALCbuff_ptr_3621_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/LOAD_DDCALCbuff_ptr_3621_Update/LOAD_DDCALCbuff_ptr_3621_Merge/merge_req) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/LOAD_DDCALCbuff_ptr_3621_Update/LOAD_DDCALCbuff_ptr_3621_Merge/merge_ack)
  LOAD_DDCALCbuff_ptr_3621_load_0 <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/LOAD_DDCALCbuff_ptr_3621_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/LOAD_DDCALCbuff_ptr_3621_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/LOAD_DDCALCbuff_ptr_3621_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/LOAD_DDCALCbuff_ptr_3621_Update/word_access_complete/word_0/ca)
  // 		iNsTr_70 := @(DDCALCbuff[iNsTr_69])
  //  file prog.linked.opt.aa, line 1336
  array_obj_ref_3625_index_0_resize <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/array_obj_ref_3625_index_resize_0/index_resize_req) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/array_obj_ref_3625_index_resize_0/index_resize_ack)
  array_obj_ref_3625_index_0_rename <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/array_obj_ref_3625_index_scale_0/scale_rename_req) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/array_obj_ref_3625_index_scale_0/scale_rename_ack)
  array_obj_ref_3625_index_offset <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/array_obj_ref_3625_final_index_sum_regn/req) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/array_obj_ref_3625_final_index_sum_regn/ack)
  array_obj_ref_3625_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/array_obj_ref_3625_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/array_obj_ref_3625_base_plus_offset/sum_rename_ack)
  addr_of_3626_final_reg <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/addr_of_3626_request/req branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/addr_of_3626_complete/req) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/addr_of_3626_request/ack branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/addr_of_3626_complete/ack)
  // 		iNsTr_71 := ->(iNsTr_70)
  //  file prog.linked.opt.aa, line 1337
  ptr_deref_3630_base_resize <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3630_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3630_base_addr_resize/base_resize_ack)
  ptr_deref_3630_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3630_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3630_base_plus_offset/sum_rename_ack)
  ptr_deref_3630_addr_0 <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3630_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3630_word_addrgen/root_register_ack)
  ptr_deref_3630_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3630_Update/ptr_deref_3630_Merge/merge_req) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3630_Update/ptr_deref_3630_Merge/merge_ack)
  ptr_deref_3630_load_0 <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3630_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3630_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3630_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3630_Update/word_access_complete/word_0/ca)
  // 		iNsTr_72 := (iNsTr_23 - iNsTr_71)
  //  file prog.linked.opt.aa, line 1338
  // (iNsTr_23 - iNsTr_71)
  SUB_u32_u32_3635_inst <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/SUB_u32_u32_3635_Sample/rr branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/SUB_u32_u32_3635_Update/cr) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/SUB_u32_u32_3635_Sample/ra branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/SUB_u32_u32_3635_Update/ca)
  // 		->(iNsTr_70) := iNsTr_23
  //  file prog.linked.opt.aa, line 1339
  ptr_deref_3638_base_resize <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3638_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3638_base_addr_resize/base_resize_ack)
  ptr_deref_3638_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3638_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3638_base_plus_offset/sum_rename_ack)
  ptr_deref_3638_addr_0 <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3638_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3638_word_addrgen/root_register_ack)
  ptr_deref_3638_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3638_Sample/ptr_deref_3638_Split/split_req) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3638_Sample/ptr_deref_3638_Split/split_ack)
  ptr_deref_3638_store_0 <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3638_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3638_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3638_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3638_Update/word_access_complete/word_0/ca)
  // 		iNsTr_74 := (iNsTr_69 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 1340
  // (iNsTr_69 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_3645_inst <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ADD_u32_u32_3645_Sample/rr branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ADD_u32_u32_3645_Update/cr) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ADD_u32_u32_3645_Sample/ra branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ADD_u32_u32_3645_Update/ca)
  // 		iNsTr_75 := (iNsTr_74 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
  //  file prog.linked.opt.aa, line 1341
  // (iNsTr_74 == ($bitcast ($uint<32>) _b00000000000000000000000000000010  ))
  EQ_u32_u1_3651_inst <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/EQ_u32_u1_3651_Sample/rr branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/EQ_u32_u1_3651_Update/cr) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/EQ_u32_u1_3651_Sample/ra branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/EQ_u32_u1_3651_Update/ca)
  // 		iNsTr_76 := ( $mux iNsTr_75 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_74 ) 
  //  file prog.linked.opt.aa, line 1342
  // ( $mux iNsTr_75 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_74 ) 
  MUX_3658_inst <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/MUX_3658_start/req branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/MUX_3658_complete/req) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/MUX_3658_start/ack branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/MUX_3658_complete/ack)
  // 		DDCALCbuff_ptr := iNsTr_76
  //  file prog.linked.opt.aa, line 1343
  // DDCALCbuff_ptr
  STORE_DDCALCbuff_ptr_3660_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/STORE_DDCALCbuff_ptr_3660_Sample/STORE_DDCALCbuff_ptr_3660_Split/split_req) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/STORE_DDCALCbuff_ptr_3660_Sample/STORE_DDCALCbuff_ptr_3660_Split/split_ack)
  STORE_DDCALCbuff_ptr_3660_store_0 <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/STORE_DDCALCbuff_ptr_3660_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/STORE_DDCALCbuff_ptr_3660_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/STORE_DDCALCbuff_ptr_3660_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/STORE_DDCALCbuff_ptr_3660_Update/word_access_complete/word_0/ca)
  // 		iNsTr_78 := DDbuff_ptr
  //  file prog.linked.opt.aa, line 1344
  // DDbuff_ptr
  LOAD_DDbuff_ptr_3664_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/LOAD_DDbuff_ptr_3664_Update/LOAD_DDbuff_ptr_3664_Merge/merge_req) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/LOAD_DDbuff_ptr_3664_Update/LOAD_DDbuff_ptr_3664_Merge/merge_ack)
  LOAD_DDbuff_ptr_3664_load_0 <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/LOAD_DDbuff_ptr_3664_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/LOAD_DDbuff_ptr_3664_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/LOAD_DDbuff_ptr_3664_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/LOAD_DDbuff_ptr_3664_Update/word_access_complete/word_0/ca)
  // 		iNsTr_79 := @(DDbuff[iNsTr_78])
  //  file prog.linked.opt.aa, line 1345
  array_obj_ref_3668_index_0_resize <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/array_obj_ref_3668_index_resize_0/index_resize_req) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/array_obj_ref_3668_index_resize_0/index_resize_ack)
  array_obj_ref_3668_index_0_rename <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/array_obj_ref_3668_index_scale_0/scale_rename_req) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/array_obj_ref_3668_index_scale_0/scale_rename_ack)
  array_obj_ref_3668_index_offset <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/array_obj_ref_3668_final_index_sum_regn/req) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/array_obj_ref_3668_final_index_sum_regn/ack)
  array_obj_ref_3668_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/array_obj_ref_3668_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/array_obj_ref_3668_base_plus_offset/sum_rename_ack)
  addr_of_3669_final_reg <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/addr_of_3669_request/req branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/addr_of_3669_complete/req) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/addr_of_3669_request/ack branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/addr_of_3669_complete/ack)
  // 		->(iNsTr_79) := iNsTr_72
  //  file prog.linked.opt.aa, line 1346
  ptr_deref_3672_base_resize <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3672_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3672_base_addr_resize/base_resize_ack)
  ptr_deref_3672_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3672_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3672_base_plus_offset/sum_rename_ack)
  ptr_deref_3672_addr_0 <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3672_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3672_word_addrgen/root_register_ack)
  ptr_deref_3672_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3672_Sample/ptr_deref_3672_Split/split_req) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3672_Sample/ptr_deref_3672_Split/split_ack)
  ptr_deref_3672_store_0 <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3672_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3672_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3672_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ptr_deref_3672_Update/word_access_complete/word_0/ca)
  // 		iNsTr_81 := (iNsTr_78 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 1347
  // (iNsTr_78 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_3679_inst <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ADD_u32_u32_3679_Sample/rr branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ADD_u32_u32_3679_Update/cr) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ADD_u32_u32_3679_Sample/ra branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ADD_u32_u32_3679_Update/ca)
  // 		iNsTr_82 := (iNsTr_81 == ($bitcast ($uint<32>) _b00000000000000000000000001011100  ))
  //  file prog.linked.opt.aa, line 1348
  // (iNsTr_81 == ($bitcast ($uint<32>) _b00000000000000000000000001011100  ))
  EQ_u32_u1_3685_inst <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/EQ_u32_u1_3685_Sample/rr branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/EQ_u32_u1_3685_Update/cr) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/EQ_u32_u1_3685_Sample/ra branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/EQ_u32_u1_3685_Update/ca)
  // 		iNsTr_83 := ( $mux iNsTr_82 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_81 ) 
  //  file prog.linked.opt.aa, line 1349
  // ( $mux iNsTr_82 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_81 ) 
  MUX_3692_inst <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/MUX_3692_start/req branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/MUX_3692_complete/req) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/MUX_3692_start/ack branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/MUX_3692_complete/ack)
  // 		DDbuff_ptr := iNsTr_83
  //  file prog.linked.opt.aa, line 1350
  // DDbuff_ptr
  STORE_DDbuff_ptr_3694_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/STORE_DDbuff_ptr_3694_Sample/STORE_DDbuff_ptr_3694_Split/split_req) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/STORE_DDbuff_ptr_3694_Sample/STORE_DDbuff_ptr_3694_Split/split_ack)
  STORE_DDbuff_ptr_3694_store_0 <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/STORE_DDbuff_ptr_3694_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/STORE_DDbuff_ptr_3694_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/STORE_DDbuff_ptr_3694_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/STORE_DDbuff_ptr_3694_Update/word_access_complete/word_0/ca)
  // 		iNsTr_85 := (countx_x0 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 1351
  // (countx_x0 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_3701_inst <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ADD_u32_u32_3701_Sample/rr branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ADD_u32_u32_3701_Update/cr) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ADD_u32_u32_3701_Sample/ra branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/ADD_u32_u32_3701_Update/ca)
  // 		iNsTr_86 := (init8Donex_x0 == ($bitcast ($uint<8>) _b00000000  ))
  //  file prog.linked.opt.aa, line 1352
  // (init8Donex_x0 == ($bitcast ($uint<8>) _b00000000  ))
  EQ_u8_u1_3707_inst <=> (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/EQ_u8_u1_3707_Sample/rr branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/EQ_u8_u1_3707_Update/cr) (branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/EQ_u8_u1_3707_Sample/ra branch_block_stmt_3035/assign_stmt_3597_to_assign_stmt_3708/EQ_u8_u1_3707_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1353
  if_stmt_3709_branch <=> (branch_block_stmt_3035/if_stmt_3709_eval_test/branch_req) (branch_block_stmt_3035/if_stmt_3709_else_link/else_choice_transition branch_block_stmt_3035/if_stmt_3709_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1358
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1361
  // 		iNsTr_89 := (initBlankx_x1 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 1363
  // (initBlankx_x1 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_3722_inst <=> (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/ADD_u32_u32_3722_Sample/rr branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/ADD_u32_u32_3722_Update/cr) (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/ADD_u32_u32_3722_Sample/ra branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/ADD_u32_u32_3722_Update/ca)
  // 		iNsTr_90 := (iNsTr_89 == ($bitcast ($uint<32>) _b00000000000000000000000011001000  ))
  //  file prog.linked.opt.aa, line 1364
  // (iNsTr_89 == ($bitcast ($uint<32>) _b00000000000000000000000011001000  ))
  EQ_u32_u1_3728_inst <=> (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/EQ_u32_u1_3728_Sample/rr branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/EQ_u32_u1_3728_Update/cr) (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/EQ_u32_u1_3728_Sample/ra branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/EQ_u32_u1_3728_Update/ca)
  // 		iNsTr_91 := (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.linked.opt.aa, line 1365
  // (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) iNsTr_68 )
  type_cast_3732_inst <=> (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/type_cast_3732_Sample/rr branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/type_cast_3732_Update/cr) (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/type_cast_3732_Sample/ra branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/type_cast_3732_Update/ca)
  SGT_i32_u1_3736_inst <=> (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/SGT_i32_u1_3736_Sample/rr branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/SGT_i32_u1_3736_Update/cr) (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/SGT_i32_u1_3736_Sample/ra branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/SGT_i32_u1_3736_Update/ca)
  // 		iNsTr_92 := ( $mux iNsTr_91 ($bitcast ($uint<32>) _b00000000000000000000000000010000  )  iNsTr_85 ) 
  //  file prog.linked.opt.aa, line 1366
  // ( $mux iNsTr_91 ($bitcast ($uint<32>) _b00000000000000000000000000010000  )  iNsTr_85 ) 
  MUX_3743_inst <=> (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/MUX_3743_start/req branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/MUX_3743_complete/req) (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/MUX_3743_start/ack branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/MUX_3743_complete/ack)
  // 		iNsTr_93 := ( $mux iNsTr_90 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_89 ) 
  //  file prog.linked.opt.aa, line 1367
  // ( $mux iNsTr_90 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_89 ) 
  MUX_3750_inst <=> (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/MUX_3750_start/req branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/MUX_3750_complete/req) (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/MUX_3750_start/ack branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/MUX_3750_complete/ack)
  // 		iNsTr_94 := @(QRSbuff[qpk_countx_x1])
  //  file prog.linked.opt.aa, line 1368
  array_obj_ref_3754_index_0_resize <=> (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/array_obj_ref_3754_index_resize_0/index_resize_req) (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/array_obj_ref_3754_index_resize_0/index_resize_ack)
  array_obj_ref_3754_index_0_rename <=> (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/array_obj_ref_3754_index_scale_0/scale_rename_req) (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/array_obj_ref_3754_index_scale_0/scale_rename_ack)
  array_obj_ref_3754_index_offset <=> (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/array_obj_ref_3754_final_index_sum_regn/req) (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/array_obj_ref_3754_final_index_sum_regn/ack)
  array_obj_ref_3754_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/array_obj_ref_3754_base_plus_offset_sample/rr branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/array_obj_ref_3754_base_plus_offset_update/cr) (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/array_obj_ref_3754_base_plus_offset_sample/ra branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/array_obj_ref_3754_base_plus_offset_update/ca)
  addr_of_3755_final_reg <=> (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/addr_of_3755_request/req branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/addr_of_3755_complete/req) (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/addr_of_3755_request/ack branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/addr_of_3755_complete/ack)
  // 		->(iNsTr_94) := initMaxx_x1
  //  file prog.linked.opt.aa, line 1369
  ptr_deref_3758_base_resize <=> (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/ptr_deref_3758_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/ptr_deref_3758_base_addr_resize/base_resize_ack)
  ptr_deref_3758_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/ptr_deref_3758_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/ptr_deref_3758_base_plus_offset/sum_rename_ack)
  ptr_deref_3758_addr_0 <=> (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/ptr_deref_3758_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/ptr_deref_3758_word_addrgen/root_register_ack)
  ptr_deref_3758_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/ptr_deref_3758_Sample/ptr_deref_3758_Split/split_req) (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/ptr_deref_3758_Sample/ptr_deref_3758_Split/split_ack)
  ptr_deref_3758_store_0 <=> (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/ptr_deref_3758_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/ptr_deref_3758_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/ptr_deref_3758_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/ptr_deref_3758_Update/word_access_complete/word_0/ca)
  // 		iNsTr_96 := ( $mux iNsTr_90 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initMaxx_x1 ) 
  //  file prog.linked.opt.aa, line 1370
  // ( $mux iNsTr_90 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initMaxx_x1 ) 
  MUX_3766_inst <=> (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/MUX_3766_start/req branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/MUX_3766_complete/req) (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/MUX_3766_start/ack branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/MUX_3766_complete/ack)
  // 		iNsTr_97 := ($cast ($uint<32>) iNsTr_90 )
  //  file prog.linked.opt.aa, line 1371
  // ($cast ($uint<32>) iNsTr_90 )
  type_cast_3770_inst <=> (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/type_cast_3770_Sample/rr branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/type_cast_3770_Update/cr) (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/type_cast_3770_Sample/ra branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/type_cast_3770_Update/ca)
  // 		iNsTr_98 := (iNsTr_97 + qpk_countx_x1)
  //  file prog.linked.opt.aa, line 1372
  // (iNsTr_97 + qpk_countx_x1)
  ADD_u32_u32_3775_inst <=> (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/ADD_u32_u32_3775_Sample/rr branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/ADD_u32_u32_3775_Update/cr) (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/ADD_u32_u32_3775_Sample/ra branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/ADD_u32_u32_3775_Update/ca)
  // 		iNsTr_99 := (iNsTr_98 == ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
  //  file prog.linked.opt.aa, line 1373
  // (iNsTr_98 == ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
  EQ_u32_u1_3781_inst <=> (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/EQ_u32_u1_3781_Sample/rr branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/EQ_u32_u1_3781_Update/cr) (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/EQ_u32_u1_3781_Sample/ra branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/EQ_u32_u1_3781_Update/ca)
  // 		iNsTr_100 := (iNsTr_90 & iNsTr_99)
  //  file prog.linked.opt.aa, line 1374
  // (iNsTr_90 & iNsTr_99)
  AND_u1_u1_3786_inst <=> (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/AND_u1_u1_3786_Sample/rr branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/AND_u1_u1_3786_Update/cr) (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/AND_u1_u1_3786_Sample/ra branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/AND_u1_u1_3786_Update/ca)
  // 		iNsTr_101 := ($cast ($uint<8>) iNsTr_100 )
  //  file prog.linked.opt.aa, line 1375
  // ($cast ($uint<8>) iNsTr_100 )
  type_cast_3790_inst <=> (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/type_cast_3790_Sample/rr branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/type_cast_3790_Update/cr) (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/type_cast_3790_Sample/ra branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/type_cast_3790_Update/ca)
  // 		iNsTr_102 := (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) iNsTr_96 ))
  //  file prog.linked.opt.aa, line 1376
  // (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) iNsTr_96 ))
  // ($bitcast ($int<32>) iNsTr_68 )
  type_cast_3794_inst <=> (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/type_cast_3794_Sample/rr branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/type_cast_3794_Update/cr) (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/type_cast_3794_Sample/ra branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/type_cast_3794_Update/ca)
  // ($bitcast ($int<32>) iNsTr_96 )
  type_cast_3796_inst <=> (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/type_cast_3796_Sample/rr branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/type_cast_3796_Update/cr) (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/type_cast_3796_Sample/ra branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/type_cast_3796_Update/ca)
  SGT_i32_u1_3797_inst <=> (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/SGT_i32_u1_3797_Sample/rr branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/SGT_i32_u1_3797_Update/cr) (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/SGT_i32_u1_3797_Sample/ra branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/SGT_i32_u1_3797_Update/ca)
  // 		iNsTr_103 := ( $mux iNsTr_102 iNsTr_68  iNsTr_96 ) 
  //  file prog.linked.opt.aa, line 1377
  // ( $mux iNsTr_102 iNsTr_68  iNsTr_96 ) 
  MUX_3803_inst <=> (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/MUX_3803_start/req branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/MUX_3803_complete/req) (branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/MUX_3803_start/ack branch_block_stmt_3035/assign_stmt_3723_to_assign_stmt_3804/MUX_3803_complete/ack)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1378
  if_stmt_3805_branch <=> (branch_block_stmt_3035/if_stmt_3805_eval_test/branch_req) (branch_block_stmt_3035/if_stmt_3805_else_link/else_choice_transition branch_block_stmt_3035/if_stmt_3805_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1383
  // 		$call meanCalc (iNsTr_106 ) (iNsTr_107 ) 
  //  file prog.linked.opt.aa, line 1386
  call_stmt_3820_call <=> (branch_block_stmt_3035/call_stmt_3820/call_stmt_3820_Sample/crr branch_block_stmt_3035/call_stmt_3820/call_stmt_3820_Update/ccr) (branch_block_stmt_3035/call_stmt_3820/call_stmt_3820_Sample/cra branch_block_stmt_3035/call_stmt_3820/call_stmt_3820_Update/cca)
  // 		iNsTr_108 := ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_107 ) )
  //  file prog.linked.opt.aa, line 1387
  // ($bitcast ($int<64>) iNsTr_107 )
  type_cast_3823_inst <=> (branch_block_stmt_3035/assign_stmt_3825_to_assign_stmt_3838/type_cast_3823_Sample/rr branch_block_stmt_3035/assign_stmt_3825_to_assign_stmt_3838/type_cast_3823_Update/cr) (branch_block_stmt_3035/assign_stmt_3825_to_assign_stmt_3838/type_cast_3823_Sample/ra branch_block_stmt_3035/assign_stmt_3825_to_assign_stmt_3838/type_cast_3823_Update/ca)
  // ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_107 ) )
  type_cast_3824_inst <=> (branch_block_stmt_3035/assign_stmt_3825_to_assign_stmt_3838/type_cast_3824_Sample/rr branch_block_stmt_3035/assign_stmt_3825_to_assign_stmt_3838/type_cast_3824_Update/cr) (branch_block_stmt_3035/assign_stmt_3825_to_assign_stmt_3838/type_cast_3824_Sample/ra branch_block_stmt_3035/assign_stmt_3825_to_assign_stmt_3838/type_cast_3824_Update/ca)
  // 		iNsTr_109 := threshold
  //  file prog.linked.opt.aa, line 1388
  // threshold
  LOAD_threshold_3827_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_3825_to_assign_stmt_3838/LOAD_threshold_3827_Update/LOAD_threshold_3827_Merge/merge_req) (branch_block_stmt_3035/assign_stmt_3825_to_assign_stmt_3838/LOAD_threshold_3827_Update/LOAD_threshold_3827_Merge/merge_ack)
  LOAD_threshold_3827_load_0 <=> (branch_block_stmt_3035/assign_stmt_3825_to_assign_stmt_3838/LOAD_threshold_3827_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_3825_to_assign_stmt_3838/LOAD_threshold_3827_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_3825_to_assign_stmt_3838/LOAD_threshold_3827_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_3825_to_assign_stmt_3838/LOAD_threshold_3827_Update/word_access_complete/word_0/ca)
  // 		iNsTr_110 := (iNsTr_109 * iNsTr_108)
  //  file prog.linked.opt.aa, line 1389
  // (iNsTr_109 * iNsTr_108)
  MUL_f64_f64_3832_inst <=> (branch_block_stmt_3035/assign_stmt_3825_to_assign_stmt_3838/MUL_f64_f64_3832_Sample/rr branch_block_stmt_3035/assign_stmt_3825_to_assign_stmt_3838/MUL_f64_f64_3832_Update/cr) (branch_block_stmt_3035/assign_stmt_3825_to_assign_stmt_3838/MUL_f64_f64_3832_Sample/ra branch_block_stmt_3035/assign_stmt_3825_to_assign_stmt_3838/MUL_f64_f64_3832_Update/ca)
  // 		iNsTr_111 := ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_110 ) )
  //  file prog.linked.opt.aa, line 1390
  // ($cast ($int<32>) iNsTr_110 )
  type_cast_3836_inst <=> (branch_block_stmt_3035/assign_stmt_3825_to_assign_stmt_3838/type_cast_3836_Sample/rr branch_block_stmt_3035/assign_stmt_3825_to_assign_stmt_3838/type_cast_3836_Update/cr) (branch_block_stmt_3035/assign_stmt_3825_to_assign_stmt_3838/type_cast_3836_Sample/ra branch_block_stmt_3035/assign_stmt_3825_to_assign_stmt_3838/type_cast_3836_Update/ca)
  // ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_110 ) )
  type_cast_3837_inst <=> (branch_block_stmt_3035/assign_stmt_3825_to_assign_stmt_3838/type_cast_3837_Sample/rr branch_block_stmt_3035/assign_stmt_3825_to_assign_stmt_3838/type_cast_3837_Update/cr) (branch_block_stmt_3035/assign_stmt_3825_to_assign_stmt_3838/type_cast_3837_Sample/ra branch_block_stmt_3035/assign_stmt_3825_to_assign_stmt_3838/type_cast_3837_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1392
  // ($cast ($uint<32>) iNsTr_121 )
  type_cast_3844_inst <=> (branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3841/phi_stmt_3841_sources/type_cast_3844/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3841/phi_stmt_3841_sources/type_cast_3844/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3841/phi_stmt_3841_sources/type_cast_3844/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3841/phi_stmt_3841_sources/type_cast_3844/SplitProtocol/Update/ca)
  phi_stmt_3841 <=> (branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3841/phi_stmt_3841_req branch_block_stmt_3035/xx_xpreheader_bb_15_PhiReq/phi_stmt_3841/phi_stmt_3841_req) (branch_block_stmt_3035/merge_stmt_3840_PhiAck/phi_stmt_3841_ack)
  // ($cast ($uint<32>) iNsTr_123 )
  type_cast_3851_inst <=> (branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3848/phi_stmt_3848_sources/type_cast_3851/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3848/phi_stmt_3848_sources/type_cast_3851/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3848/phi_stmt_3848_sources/type_cast_3851/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3848/phi_stmt_3848_sources/type_cast_3851/SplitProtocol/Update/ca)
  phi_stmt_3848 <=> (branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3848/phi_stmt_3848_req branch_block_stmt_3035/xx_xpreheader_bb_15_PhiReq/phi_stmt_3848/phi_stmt_3848_req) (branch_block_stmt_3035/merge_stmt_3840_PhiAck/phi_stmt_3848_ack)
  // ($cast ($uint<32>) iNsTr_120 )
  type_cast_3858_inst <=> (branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3855/phi_stmt_3855_sources/type_cast_3858/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3855/phi_stmt_3855_sources/type_cast_3858/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3855/phi_stmt_3855_sources/type_cast_3858/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3855/phi_stmt_3855_sources/type_cast_3858/SplitProtocol/Update/ca)
  phi_stmt_3855 <=> (branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3855/phi_stmt_3855_req branch_block_stmt_3035/xx_xpreheader_bb_15_PhiReq/phi_stmt_3855/phi_stmt_3855_req) (branch_block_stmt_3035/merge_stmt_3840_PhiAck/phi_stmt_3855_ack)
  // ($cast ($uint<32>) iNsTr_122 )
  type_cast_3865_inst <=> (branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3862/phi_stmt_3862_sources/type_cast_3865/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3862/phi_stmt_3862_sources/type_cast_3865/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3862/phi_stmt_3862_sources/type_cast_3865/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3862/phi_stmt_3862_sources/type_cast_3865/SplitProtocol/Update/ca)
  phi_stmt_3862 <=> (branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3862/phi_stmt_3862_req branch_block_stmt_3035/xx_xpreheader_bb_15_PhiReq/phi_stmt_3862/phi_stmt_3862_req) (branch_block_stmt_3035/merge_stmt_3840_PhiAck/phi_stmt_3862_ack)
  // ($cast ($uint<32>) iNsTr_125 )
  type_cast_3872_inst <=> (branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3869/phi_stmt_3869_sources/type_cast_3872/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3869/phi_stmt_3869_sources/type_cast_3872/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3869/phi_stmt_3869_sources/type_cast_3872/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3869/phi_stmt_3869_sources/type_cast_3872/SplitProtocol/Update/ca)
  phi_stmt_3869 <=> (branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3869/phi_stmt_3869_req branch_block_stmt_3035/xx_xpreheader_bb_15_PhiReq/phi_stmt_3869/phi_stmt_3869_req) (branch_block_stmt_3035/merge_stmt_3840_PhiAck/phi_stmt_3869_ack)
  // ($cast ($uint<32>) iNsTr_127 )
  type_cast_3879_inst <=> (branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3876/phi_stmt_3876_sources/type_cast_3879/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3876/phi_stmt_3876_sources/type_cast_3879/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3876/phi_stmt_3876_sources/type_cast_3879/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3876/phi_stmt_3876_sources/type_cast_3879/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_83 )
  type_cast_3881_inst <=> (branch_block_stmt_3035/xx_xpreheader_bb_15_PhiReq/phi_stmt_3876/phi_stmt_3876_sources/type_cast_3881/SplitProtocol/Sample/rr branch_block_stmt_3035/xx_xpreheader_bb_15_PhiReq/phi_stmt_3876/phi_stmt_3876_sources/type_cast_3881/SplitProtocol/Update/cr) (branch_block_stmt_3035/xx_xpreheader_bb_15_PhiReq/phi_stmt_3876/phi_stmt_3876_sources/type_cast_3881/SplitProtocol/Sample/ra branch_block_stmt_3035/xx_xpreheader_bb_15_PhiReq/phi_stmt_3876/phi_stmt_3876_sources/type_cast_3881/SplitProtocol/Update/ca)
  phi_stmt_3876 <=> (branch_block_stmt_3035/bb_15_bb_15_PhiReq/phi_stmt_3876/phi_stmt_3876_req branch_block_stmt_3035/xx_xpreheader_bb_15_PhiReq/phi_stmt_3876/phi_stmt_3876_req) (branch_block_stmt_3035/merge_stmt_3840_PhiAck/phi_stmt_3876_ack)
  // 		iNsTr_116 := @(DDbuff[ptrx_x02x_xi])
  //  file prog.linked.opt.aa, line 1400
  array_obj_ref_3885_index_0_resize <=> (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/array_obj_ref_3885_index_resize_0/index_resize_req) (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/array_obj_ref_3885_index_resize_0/index_resize_ack)
  array_obj_ref_3885_index_0_rename <=> (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/array_obj_ref_3885_index_scale_0/scale_rename_req) (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/array_obj_ref_3885_index_scale_0/scale_rename_ack)
  array_obj_ref_3885_index_offset <=> (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/array_obj_ref_3885_final_index_sum_regn/req) (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/array_obj_ref_3885_final_index_sum_regn/ack)
  array_obj_ref_3885_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/array_obj_ref_3885_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/array_obj_ref_3885_base_plus_offset/sum_rename_ack)
  addr_of_3886_final_reg <=> (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/addr_of_3886_request/req branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/addr_of_3886_complete/req) (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/addr_of_3886_request/ack branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/addr_of_3886_complete/ack)
  // 		iNsTr_117 := ->(iNsTr_116)
  //  file prog.linked.opt.aa, line 1401
  ptr_deref_3890_base_resize <=> (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/ptr_deref_3890_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/ptr_deref_3890_base_addr_resize/base_resize_ack)
  ptr_deref_3890_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/ptr_deref_3890_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/ptr_deref_3890_base_plus_offset/sum_rename_ack)
  ptr_deref_3890_addr_0 <=> (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/ptr_deref_3890_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/ptr_deref_3890_word_addrgen/root_register_ack)
  ptr_deref_3890_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/ptr_deref_3890_Update/ptr_deref_3890_Merge/merge_req) (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/ptr_deref_3890_Update/ptr_deref_3890_Merge/merge_ack)
  ptr_deref_3890_load_0 <=> (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/ptr_deref_3890_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/ptr_deref_3890_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/ptr_deref_3890_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/ptr_deref_3890_Update/word_access_complete/word_0/ca)
  // 		iNsTr_118 := (($bitcast ($int<32>) iNsTr_117 ) > ($bitcast ($int<32>) maxx_x07x_xi ))
  //  file prog.linked.opt.aa, line 1402
  // (($bitcast ($int<32>) iNsTr_117 ) > ($bitcast ($int<32>) maxx_x07x_xi ))
  // ($bitcast ($int<32>) iNsTr_117 )
  type_cast_3894_inst <=> (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/type_cast_3894_Sample/rr branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/type_cast_3894_Update/cr) (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/type_cast_3894_Sample/ra branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/type_cast_3894_Update/ca)
  // ($bitcast ($int<32>) maxx_x07x_xi )
  type_cast_3896_inst <=> (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/type_cast_3896_Sample/rr branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/type_cast_3896_Update/cr) (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/type_cast_3896_Sample/ra branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/type_cast_3896_Update/ca)
  SGT_i32_u1_3897_inst <=> (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/SGT_i32_u1_3897_Sample/rr branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/SGT_i32_u1_3897_Update/cr) (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/SGT_i32_u1_3897_Sample/ra branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/SGT_i32_u1_3897_Update/ca)
  // 		iNsTr_119 := (($bitcast ($int<32>) iNsTr_117 ) < ($bitcast ($int<32>) minx_x06x_xi ))
  //  file prog.linked.opt.aa, line 1403
  // (($bitcast ($int<32>) iNsTr_117 ) < ($bitcast ($int<32>) minx_x06x_xi ))
  // ($bitcast ($int<32>) iNsTr_117 )
  type_cast_3901_inst <=> (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/type_cast_3901_Sample/rr branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/type_cast_3901_Update/cr) (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/type_cast_3901_Sample/ra branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/type_cast_3901_Update/ca)
  // ($bitcast ($int<32>) minx_x06x_xi )
  type_cast_3903_inst <=> (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/type_cast_3903_Sample/rr branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/type_cast_3903_Update/cr) (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/type_cast_3903_Sample/ra branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/type_cast_3903_Update/ca)
  SLT_i32_u1_3904_inst <=> (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/SLT_i32_u1_3904_Sample/rr branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/SLT_i32_u1_3904_Update/cr) (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/SLT_i32_u1_3904_Sample/ra branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/SLT_i32_u1_3904_Update/ca)
  // 		iNsTr_120 := ( $mux iNsTr_118 iNsTr_115  maxtx_x05x_xi ) 
  //  file prog.linked.opt.aa, line 1404
  // ( $mux iNsTr_118 iNsTr_115  maxtx_x05x_xi ) 
  MUX_3910_inst <=> (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/MUX_3910_start/req branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/MUX_3910_complete/req) (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/MUX_3910_start/ack branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/MUX_3910_complete/ack)
  // 		iNsTr_121 := ( $mux iNsTr_118 iNsTr_117  maxx_x07x_xi ) 
  //  file prog.linked.opt.aa, line 1405
  // ( $mux iNsTr_118 iNsTr_117  maxx_x07x_xi ) 
  MUX_3916_inst <=> (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/MUX_3916_start/req branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/MUX_3916_complete/req) (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/MUX_3916_start/ack branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/MUX_3916_complete/ack)
  // 		iNsTr_122 := ( $mux iNsTr_119 iNsTr_115  mintx_x04x_xi ) 
  //  file prog.linked.opt.aa, line 1406
  // ( $mux iNsTr_119 iNsTr_115  mintx_x04x_xi ) 
  MUX_3922_inst <=> (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/MUX_3922_start/req branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/MUX_3922_complete/req) (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/MUX_3922_start/ack branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/MUX_3922_complete/ack)
  // 		iNsTr_123 := ( $mux iNsTr_119 iNsTr_117  minx_x06x_xi ) 
  //  file prog.linked.opt.aa, line 1407
  // ( $mux iNsTr_119 iNsTr_117  minx_x06x_xi ) 
  MUX_3928_inst <=> (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/MUX_3928_start/req branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/MUX_3928_complete/req) (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/MUX_3928_start/ack branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/MUX_3928_complete/ack)
  // 		iNsTr_124 := (ptrx_x02x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 1408
  // (ptrx_x02x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_3934_inst <=> (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/ADD_u32_u32_3934_Sample/rr branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/ADD_u32_u32_3934_Update/cr) (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/ADD_u32_u32_3934_Sample/ra branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/ADD_u32_u32_3934_Update/ca)
  // 		iNsTr_125 := (iNsTr_115 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 1409
  // (iNsTr_115 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_3940_inst <=> (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/ADD_u32_u32_3940_Sample/rr branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/ADD_u32_u32_3940_Update/cr) (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/ADD_u32_u32_3940_Sample/ra branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/ADD_u32_u32_3940_Update/ca)
  // 		iNsTr_126 := (iNsTr_124 == ($bitcast ($uint<32>) _b00000000000000000000000001011100  ))
  //  file prog.linked.opt.aa, line 1410
  // (iNsTr_124 == ($bitcast ($uint<32>) _b00000000000000000000000001011100  ))
  EQ_u32_u1_3946_inst <=> (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/EQ_u32_u1_3946_Sample/rr branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/EQ_u32_u1_3946_Update/cr) (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/EQ_u32_u1_3946_Sample/ra branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/EQ_u32_u1_3946_Update/ca)
  // 		iNsTr_127 := ( $mux iNsTr_126 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_124 ) 
  //  file prog.linked.opt.aa, line 1411
  // ( $mux iNsTr_126 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_124 ) 
  MUX_3953_inst <=> (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/MUX_3953_start/req branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/MUX_3953_complete/req) (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/MUX_3953_start/ack branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/MUX_3953_complete/ack)
  // 		exitcond4 := (iNsTr_125 == ($bitcast ($uint<32>) _b00000000000000000000000000101100  ))
  //  file prog.linked.opt.aa, line 1412
  // (iNsTr_125 == ($bitcast ($uint<32>) _b00000000000000000000000000101100  ))
  EQ_u32_u1_3959_inst <=> (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/EQ_u32_u1_3959_Sample/rr branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/EQ_u32_u1_3959_Update/cr) (branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/EQ_u32_u1_3959_Sample/ra branch_block_stmt_3035/assign_stmt_3887_to_assign_stmt_3960/EQ_u32_u1_3959_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1413
  if_stmt_3961_branch <=> (branch_block_stmt_3035/if_stmt_3961_eval_test/branch_req) (branch_block_stmt_3035/if_stmt_3961_else_link/else_choice_transition branch_block_stmt_3035/if_stmt_3961_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1418
  // ($cast ($uint<32>) iNsTr_123 )
  type_cast_3971_inst <=> (branch_block_stmt_3035/bb_15_xx_x_crit_edgex_xi_PhiReq/phi_stmt_3968/phi_stmt_3968_sources/type_cast_3971/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_15_xx_x_crit_edgex_xi_PhiReq/phi_stmt_3968/phi_stmt_3968_sources/type_cast_3971/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_15_xx_x_crit_edgex_xi_PhiReq/phi_stmt_3968/phi_stmt_3968_sources/type_cast_3971/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_15_xx_x_crit_edgex_xi_PhiReq/phi_stmt_3968/phi_stmt_3968_sources/type_cast_3971/SplitProtocol/Update/ca)
  phi_stmt_3968 <=> (branch_block_stmt_3035/bb_15_xx_x_crit_edgex_xi_PhiReq/phi_stmt_3968/phi_stmt_3968_req) (branch_block_stmt_3035/merge_stmt_3967_PhiAck/phi_stmt_3968_ack)
  // ($cast ($uint<32>) iNsTr_122 )
  type_cast_3975_inst <=> (branch_block_stmt_3035/bb_15_xx_x_crit_edgex_xi_PhiReq/phi_stmt_3972/phi_stmt_3972_sources/type_cast_3975/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_15_xx_x_crit_edgex_xi_PhiReq/phi_stmt_3972/phi_stmt_3972_sources/type_cast_3975/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_15_xx_x_crit_edgex_xi_PhiReq/phi_stmt_3972/phi_stmt_3972_sources/type_cast_3975/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_15_xx_x_crit_edgex_xi_PhiReq/phi_stmt_3972/phi_stmt_3972_sources/type_cast_3975/SplitProtocol/Update/ca)
  phi_stmt_3972 <=> (branch_block_stmt_3035/bb_15_xx_x_crit_edgex_xi_PhiReq/phi_stmt_3972/phi_stmt_3972_req) (branch_block_stmt_3035/merge_stmt_3967_PhiAck/phi_stmt_3972_ack)
  // ($cast ($uint<32>) iNsTr_121 )
  type_cast_3979_inst <=> (branch_block_stmt_3035/bb_15_xx_x_crit_edgex_xi_PhiReq/phi_stmt_3976/phi_stmt_3976_sources/type_cast_3979/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_15_xx_x_crit_edgex_xi_PhiReq/phi_stmt_3976/phi_stmt_3976_sources/type_cast_3979/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_15_xx_x_crit_edgex_xi_PhiReq/phi_stmt_3976/phi_stmt_3976_sources/type_cast_3979/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_15_xx_x_crit_edgex_xi_PhiReq/phi_stmt_3976/phi_stmt_3976_sources/type_cast_3979/SplitProtocol/Update/ca)
  phi_stmt_3976 <=> (branch_block_stmt_3035/bb_15_xx_x_crit_edgex_xi_PhiReq/phi_stmt_3976/phi_stmt_3976_req) (branch_block_stmt_3035/merge_stmt_3967_PhiAck/phi_stmt_3976_ack)
  // ($cast ($uint<32>) iNsTr_120 )
  type_cast_3983_inst <=> (branch_block_stmt_3035/bb_15_xx_x_crit_edgex_xi_PhiReq/phi_stmt_3980/phi_stmt_3980_sources/type_cast_3983/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_15_xx_x_crit_edgex_xi_PhiReq/phi_stmt_3980/phi_stmt_3980_sources/type_cast_3983/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_15_xx_x_crit_edgex_xi_PhiReq/phi_stmt_3980/phi_stmt_3980_sources/type_cast_3983/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_15_xx_x_crit_edgex_xi_PhiReq/phi_stmt_3980/phi_stmt_3980_sources/type_cast_3983/SplitProtocol/Update/ca)
  phi_stmt_3980 <=> (branch_block_stmt_3035/bb_15_xx_x_crit_edgex_xi_PhiReq/phi_stmt_3980/phi_stmt_3980_req) (branch_block_stmt_3035/merge_stmt_3967_PhiAck/phi_stmt_3980_ack)
  // 		maxDer := xx_xlcssa1
  //  file prog.linked.opt.aa, line 1424
  // maxDer
  STORE_maxDer_3985_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/STORE_maxDer_3985_Sample/STORE_maxDer_3985_Split/split_req) (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/STORE_maxDer_3985_Sample/STORE_maxDer_3985_Split/split_ack)
  STORE_maxDer_3985_store_0 <=> (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/STORE_maxDer_3985_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/STORE_maxDer_3985_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/STORE_maxDer_3985_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/STORE_maxDer_3985_Update/word_access_complete/word_0/ca)
  // 		iNsTr_147 := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - xx_xlcssa3)
  //  file prog.linked.opt.aa, line 1425
  // (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - xx_xlcssa3)
  SUB_u32_u32_3992_inst <=> (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/SUB_u32_u32_3992_Sample/rr branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/SUB_u32_u32_3992_Update/cr) (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/SUB_u32_u32_3992_Sample/ra branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/SUB_u32_u32_3992_Update/ca)
  // 		iNsTr_148 := ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_147 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
  //  file prog.linked.opt.aa, line 1426
  // (($bitcast ($int<32>) iNsTr_147 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) ))
  // ($bitcast ($int<32>) iNsTr_147 )
  type_cast_3996_inst <=> (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_3996_Sample/rr branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_3996_Update/cr) (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_3996_Sample/ra branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_3996_Update/ca)
  ASHR_i32_i32_4000_inst <=> (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/ASHR_i32_i32_4000_Sample/rr branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/ASHR_i32_i32_4000_Update/cr) (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/ASHR_i32_i32_4000_Sample/ra branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/ASHR_i32_i32_4000_Update/ca)
  // ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_147 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
  type_cast_4001_inst <=> (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_4001_Sample/rr branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_4001_Update/cr) (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_4001_Sample/ra branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_4001_Update/ca)
  // 		iNsTr_149 := (($bitcast ($int<32>) xx_xlcssa1 ) > ($bitcast ($int<32>) iNsTr_148 ))
  //  file prog.linked.opt.aa, line 1427
  // (($bitcast ($int<32>) xx_xlcssa1 ) > ($bitcast ($int<32>) iNsTr_148 ))
  // ($bitcast ($int<32>) xx_xlcssa1 )
  type_cast_4005_inst <=> (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_4005_Sample/rr branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_4005_Update/cr) (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_4005_Sample/ra branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_4005_Update/ca)
  // ($bitcast ($int<32>) iNsTr_148 )
  type_cast_4007_inst <=> (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_4007_Sample/rr branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_4007_Update/cr) (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_4007_Sample/ra branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_4007_Update/ca)
  SGT_i32_u1_4008_inst <=> (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/SGT_i32_u1_4008_Sample/rr branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/SGT_i32_u1_4008_Update/cr) (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/SGT_i32_u1_4008_Sample/ra branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/SGT_i32_u1_4008_Update/ca)
  // 		iNsTr_150 := ($bitcast ($uint<32>) (($bitcast ($int<32>) xx_xlcssa1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
  //  file prog.linked.opt.aa, line 1428
  // (($bitcast ($int<32>) xx_xlcssa1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) ))
  // ($bitcast ($int<32>) xx_xlcssa1 )
  type_cast_4012_inst <=> (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_4012_Sample/rr branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_4012_Update/cr) (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_4012_Sample/ra branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_4012_Update/ca)
  ASHR_i32_i32_4016_inst <=> (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/ASHR_i32_i32_4016_Sample/rr branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/ASHR_i32_i32_4016_Update/cr) (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/ASHR_i32_i32_4016_Sample/ra branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/ASHR_i32_i32_4016_Update/ca)
  // ($bitcast ($uint<32>) (($bitcast ($int<32>) xx_xlcssa1 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) )) )
  type_cast_4017_inst <=> (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_4017_Sample/rr branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_4017_Update/cr) (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_4017_Sample/ra branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_4017_Update/ca)
  // 		iNsTr_151 := (($bitcast ($int<32>) iNsTr_150 ) < ($bitcast ($int<32>) iNsTr_147 ))
  //  file prog.linked.opt.aa, line 1429
  // (($bitcast ($int<32>) iNsTr_150 ) < ($bitcast ($int<32>) iNsTr_147 ))
  // ($bitcast ($int<32>) iNsTr_150 )
  type_cast_4021_inst <=> (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_4021_Sample/rr branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_4021_Update/cr) (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_4021_Sample/ra branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_4021_Update/ca)
  // ($bitcast ($int<32>) iNsTr_147 )
  type_cast_4023_inst <=> (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_4023_Sample/rr branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_4023_Update/cr) (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_4023_Sample/ra branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/type_cast_4023_Update/ca)
  SLT_i32_u1_4024_inst <=> (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/SLT_i32_u1_4024_Sample/rr branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/SLT_i32_u1_4024_Update/cr) (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/SLT_i32_u1_4024_Sample/ra branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/SLT_i32_u1_4024_Update/ca)
  // 		orx_xcondx_xi11 := (iNsTr_149 & iNsTr_151)
  //  file prog.linked.opt.aa, line 1430
  // (iNsTr_149 & iNsTr_151)
  AND_u1_u1_4029_inst <=> (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/AND_u1_u1_4029_Sample/rr branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/AND_u1_u1_4029_Update/cr) (branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/AND_u1_u1_4029_Sample/ra branch_block_stmt_3035/assign_stmt_3987_to_assign_stmt_4030/AND_u1_u1_4029_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1431
  if_stmt_4031_branch <=> (branch_block_stmt_3035/if_stmt_4031_eval_test/branch_req) (branch_block_stmt_3035/if_stmt_4031_else_link/else_choice_transition branch_block_stmt_3035/if_stmt_4031_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1436
  // 		iNsTr_205 := (xx_xlcssa - xx_xlcssa2)
  //  file prog.linked.opt.aa, line 1438
  // (xx_xlcssa - xx_xlcssa2)
  SUB_u32_u32_4041_inst <=> (branch_block_stmt_3035/assign_stmt_4042_to_assign_stmt_4070/SUB_u32_u32_4041_Sample/rr branch_block_stmt_3035/assign_stmt_4042_to_assign_stmt_4070/SUB_u32_u32_4041_Update/cr) (branch_block_stmt_3035/assign_stmt_4042_to_assign_stmt_4070/SUB_u32_u32_4041_Sample/ra branch_block_stmt_3035/assign_stmt_4042_to_assign_stmt_4070/SUB_u32_u32_4041_Update/ca)
  // 		isposx_xi := (($bitcast ($int<32>) iNsTr_205 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ))
  //  file prog.linked.opt.aa, line 1439
  // (($bitcast ($int<32>) iNsTr_205 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ))
  // ($bitcast ($int<32>) iNsTr_205 )
  type_cast_4045_inst <=> (branch_block_stmt_3035/assign_stmt_4042_to_assign_stmt_4070/type_cast_4045_Sample/rr branch_block_stmt_3035/assign_stmt_4042_to_assign_stmt_4070/type_cast_4045_Update/cr) (branch_block_stmt_3035/assign_stmt_4042_to_assign_stmt_4070/type_cast_4045_Sample/ra branch_block_stmt_3035/assign_stmt_4042_to_assign_stmt_4070/type_cast_4045_Update/ca)
  SGT_i32_u1_4049_inst <=> (branch_block_stmt_3035/assign_stmt_4042_to_assign_stmt_4070/SGT_i32_u1_4049_Sample/rr branch_block_stmt_3035/assign_stmt_4042_to_assign_stmt_4070/SGT_i32_u1_4049_Update/cr) (branch_block_stmt_3035/assign_stmt_4042_to_assign_stmt_4070/SGT_i32_u1_4049_Sample/ra branch_block_stmt_3035/assign_stmt_4042_to_assign_stmt_4070/SGT_i32_u1_4049_Update/ca)
  // 		negx_xi := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_205)
  //  file prog.linked.opt.aa, line 1440
  // (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - iNsTr_205)
  SUB_u32_u32_4055_inst <=> (branch_block_stmt_3035/assign_stmt_4042_to_assign_stmt_4070/SUB_u32_u32_4055_Sample/rr branch_block_stmt_3035/assign_stmt_4042_to_assign_stmt_4070/SUB_u32_u32_4055_Update/cr) (branch_block_stmt_3035/assign_stmt_4042_to_assign_stmt_4070/SUB_u32_u32_4055_Sample/ra branch_block_stmt_3035/assign_stmt_4042_to_assign_stmt_4070/SUB_u32_u32_4055_Update/ca)
  // 		iNsTr_206 := ( $mux isposx_xi iNsTr_205  negx_xi ) 
  //  file prog.linked.opt.aa, line 1441
  // ( $mux isposx_xi iNsTr_205  negx_xi ) 
  MUX_4061_inst <=> (branch_block_stmt_3035/assign_stmt_4042_to_assign_stmt_4070/MUX_4061_start/req branch_block_stmt_3035/assign_stmt_4042_to_assign_stmt_4070/MUX_4061_complete/req) (branch_block_stmt_3035/assign_stmt_4042_to_assign_stmt_4070/MUX_4061_start/ack branch_block_stmt_3035/assign_stmt_4042_to_assign_stmt_4070/MUX_4061_complete/ack)
  // 		phitmpx_xi12 := (($bitcast ($int<32>) iNsTr_206 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000011101  ) ))
  //  file prog.linked.opt.aa, line 1442
  // (($bitcast ($int<32>) iNsTr_206 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000011101  ) ))
  // ($bitcast ($int<32>) iNsTr_206 )
  type_cast_4065_inst <=> (branch_block_stmt_3035/assign_stmt_4042_to_assign_stmt_4070/type_cast_4065_Sample/rr branch_block_stmt_3035/assign_stmt_4042_to_assign_stmt_4070/type_cast_4065_Update/cr) (branch_block_stmt_3035/assign_stmt_4042_to_assign_stmt_4070/type_cast_4065_Sample/ra branch_block_stmt_3035/assign_stmt_4042_to_assign_stmt_4070/type_cast_4065_Update/ca)
  SGT_i32_u1_4069_inst <=> (branch_block_stmt_3035/assign_stmt_4042_to_assign_stmt_4070/SGT_i32_u1_4069_Sample/rr branch_block_stmt_3035/assign_stmt_4042_to_assign_stmt_4070/SGT_i32_u1_4069_Update/cr) (branch_block_stmt_3035/assign_stmt_4042_to_assign_stmt_4070/SGT_i32_u1_4069_Sample/ra branch_block_stmt_3035/assign_stmt_4042_to_assign_stmt_4070/SGT_i32_u1_4069_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1444
  // ($cast ($uint<1>) phitmpx_xi12 )
  type_cast_4079_inst <=> (branch_block_stmt_3035/bb_17_blsCheckx_xexit_PhiReq/phi_stmt_4073/phi_stmt_4073_sources/type_cast_4079/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_17_blsCheckx_xexit_PhiReq/phi_stmt_4073/phi_stmt_4073_sources/type_cast_4079/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_17_blsCheckx_xexit_PhiReq/phi_stmt_4073/phi_stmt_4073_sources/type_cast_4079/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_17_blsCheckx_xexit_PhiReq/phi_stmt_4073/phi_stmt_4073_sources/type_cast_4079/SplitProtocol/Update/ca)
  phi_stmt_4073 <=> (branch_block_stmt_3035/xx_x_crit_edgex_xi_blsCheckx_xexit_PhiReq/phi_stmt_4073/phi_stmt_4073_req branch_block_stmt_3035/bb_17_blsCheckx_xexit_PhiReq/phi_stmt_4073/phi_stmt_4073_req) (branch_block_stmt_3035/merge_stmt_4072_PhiAck/phi_stmt_4073_ack)
  // 		iNsTr_209 := (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) det_threshx_x1 ))
  //  file prog.linked.opt.aa, line 1447
  // (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) det_threshx_x1 ))
  // ($bitcast ($int<32>) iNsTr_68 )
  type_cast_4083_inst <=> (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/type_cast_4083_Sample/rr branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/type_cast_4083_Update/cr) (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/type_cast_4083_Sample/ra branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/type_cast_4083_Update/ca)
  // ($bitcast ($int<32>) det_threshx_x1 )
  type_cast_4085_inst <=> (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/type_cast_4085_Sample/rr branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/type_cast_4085_Update/cr) (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/type_cast_4085_Sample/ra branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/type_cast_4085_Update/ca)
  SGT_i32_u1_4086_inst <=> (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/SGT_i32_u1_4086_Sample/rr branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/SGT_i32_u1_4086_Update/cr) (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/SGT_i32_u1_4086_Sample/ra branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/SGT_i32_u1_4086_Update/ca)
  // 		iNsTr_210 := (iNsTr_208 ^ ($bitcast ($uint<1>) _b1  ))
  //  file prog.linked.opt.aa, line 1448
  // (iNsTr_208 ^ ($bitcast ($uint<1>) _b1  ))
  XOR_u1_u1_4092_inst <=> (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/XOR_u1_u1_4092_Sample/rr branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/XOR_u1_u1_4092_Update/cr) (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/XOR_u1_u1_4092_Sample/ra branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/XOR_u1_u1_4092_Update/ca)
  // 		iNsTr_211 := (iNsTr_209 & iNsTr_210)
  //  file prog.linked.opt.aa, line 1449
  // (iNsTr_209 & iNsTr_210)
  AND_u1_u1_4097_inst <=> (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/AND_u1_u1_4097_Sample/rr branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/AND_u1_u1_4097_Update/cr) (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/AND_u1_u1_4097_Sample/ra branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/AND_u1_u1_4097_Update/ca)
  // 		xx_xnot5 := (($bitcast ($int<32>) iNsTr_68 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
  //  file prog.linked.opt.aa, line 1450
  // (($bitcast ($int<32>) iNsTr_68 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
  // ($bitcast ($int<32>) iNsTr_68 )
  type_cast_4101_inst <=> (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/type_cast_4101_Sample/rr branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/type_cast_4101_Update/cr) (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/type_cast_4101_Sample/ra branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/type_cast_4101_Update/ca)
  SLT_i32_u1_4105_inst <=> (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/SLT_i32_u1_4105_Sample/rr branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/SLT_i32_u1_4105_Update/cr) (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/SLT_i32_u1_4105_Sample/ra branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/SLT_i32_u1_4105_Update/ca)
  // 		orx_xcond := (xx_xnot5 | iNsTr_209)
  //  file prog.linked.opt.aa, line 1451
  // (xx_xnot5 | iNsTr_209)
  OR_u1_u1_4110_inst <=> (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/OR_u1_u1_4110_Sample/rr branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/OR_u1_u1_4110_Update/cr) (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/OR_u1_u1_4110_Sample/ra branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/OR_u1_u1_4110_Update/ca)
  // 		xx_xdemorgan := (orx_xcond | iNsTr_208)
  //  file prog.linked.opt.aa, line 1452
  // (orx_xcond | iNsTr_208)
  OR_u1_u1_4115_inst <=> (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/OR_u1_u1_4115_Sample/rr branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/OR_u1_u1_4115_Update/cr) (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/OR_u1_u1_4115_Sample/ra branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/OR_u1_u1_4115_Update/ca)
  // 		iNsTr_212 := (xx_xdemorgan ^ ($bitcast ($uint<1>) _b1  ))
  //  file prog.linked.opt.aa, line 1453
  // (xx_xdemorgan ^ ($bitcast ($uint<1>) _b1  ))
  XOR_u1_u1_4121_inst <=> (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/XOR_u1_u1_4121_Sample/rr branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/XOR_u1_u1_4121_Update/cr) (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/XOR_u1_u1_4121_Sample/ra branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/XOR_u1_u1_4121_Update/ca)
  // 		iNsTr_213 := (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) sbPeakx_x1 ))
  //  file prog.linked.opt.aa, line 1454
  // (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) sbPeakx_x1 ))
  // ($bitcast ($int<32>) iNsTr_68 )
  type_cast_4125_inst <=> (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/type_cast_4125_Sample/rr branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/type_cast_4125_Update/cr) (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/type_cast_4125_Sample/ra branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/type_cast_4125_Update/ca)
  // ($bitcast ($int<32>) sbPeakx_x1 )
  type_cast_4127_inst <=> (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/type_cast_4127_Sample/rr branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/type_cast_4127_Update/cr) (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/type_cast_4127_Sample/ra branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/type_cast_4127_Update/ca)
  SGT_i32_u1_4128_inst <=> (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/SGT_i32_u1_4128_Sample/rr branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/SGT_i32_u1_4128_Update/cr) (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/SGT_i32_u1_4128_Sample/ra branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/SGT_i32_u1_4128_Update/ca)
  // 		orx_xcond6 := (iNsTr_213 & iNsTr_212)
  //  file prog.linked.opt.aa, line 1455
  // (iNsTr_213 & iNsTr_212)
  AND_u1_u1_4133_inst <=> (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/AND_u1_u1_4133_Sample/rr branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/AND_u1_u1_4133_Update/cr) (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/AND_u1_u1_4133_Sample/ra branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/AND_u1_u1_4133_Update/ca)
  // 		iNsTr_214 := (($bitcast ($int<32>) iNsTr_85 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000001010111  ) ))
  //  file prog.linked.opt.aa, line 1456
  // (($bitcast ($int<32>) iNsTr_85 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000001010111  ) ))
  // ($bitcast ($int<32>) iNsTr_85 )
  type_cast_4137_inst <=> (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/type_cast_4137_Sample/rr branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/type_cast_4137_Update/cr) (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/type_cast_4137_Sample/ra branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/type_cast_4137_Update/ca)
  SGT_i32_u1_4141_inst <=> (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/SGT_i32_u1_4141_Sample/rr branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/SGT_i32_u1_4141_Update/cr) (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/SGT_i32_u1_4141_Sample/ra branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/SGT_i32_u1_4141_Update/ca)
  // 		iNsTr_215 := (orx_xcond6 & iNsTr_214)
  //  file prog.linked.opt.aa, line 1457
  // (orx_xcond6 & iNsTr_214)
  AND_u1_u1_4146_inst <=> (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/AND_u1_u1_4146_Sample/rr branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/AND_u1_u1_4146_Update/cr) (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/AND_u1_u1_4146_Sample/ra branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/AND_u1_u1_4146_Update/ca)
  // 		iNsTr_216 := ( $mux xx_xdemorgan noiseValx_x1  iNsTr_68 ) 
  //  file prog.linked.opt.aa, line 1458
  // ( $mux xx_xdemorgan noiseValx_x1  iNsTr_68 ) 
  MUX_4152_inst <=> (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/MUX_4152_start/req branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/MUX_4152_complete/req) (branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/MUX_4152_start/ack branch_block_stmt_3035/assign_stmt_4087_to_assign_stmt_4153/MUX_4152_complete/ack)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1459
  if_stmt_4154_branch <=> (branch_block_stmt_3035/if_stmt_4154_eval_test/branch_req) (branch_block_stmt_3035/if_stmt_4154_else_link/else_choice_transition branch_block_stmt_3035/if_stmt_4154_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1464
  // 		iNsTr_223 := NOISEbuff_ptr
  //  file prog.linked.opt.aa, line 1466
  // NOISEbuff_ptr
  LOAD_NOISEbuff_ptr_4162_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/LOAD_NOISEbuff_ptr_4162_Update/LOAD_NOISEbuff_ptr_4162_Merge/merge_req) (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/LOAD_NOISEbuff_ptr_4162_Update/LOAD_NOISEbuff_ptr_4162_Merge/merge_ack)
  LOAD_NOISEbuff_ptr_4162_load_0 <=> (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/LOAD_NOISEbuff_ptr_4162_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/LOAD_NOISEbuff_ptr_4162_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/LOAD_NOISEbuff_ptr_4162_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/LOAD_NOISEbuff_ptr_4162_Update/word_access_complete/word_0/ca)
  // 		iNsTr_224 := @(NOISEbuff[iNsTr_223])
  //  file prog.linked.opt.aa, line 1467
  array_obj_ref_4166_index_0_resize <=> (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/array_obj_ref_4166_index_resize_0/index_resize_req) (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/array_obj_ref_4166_index_resize_0/index_resize_ack)
  array_obj_ref_4166_index_0_rename <=> (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/array_obj_ref_4166_index_scale_0/scale_rename_req) (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/array_obj_ref_4166_index_scale_0/scale_rename_ack)
  array_obj_ref_4166_index_offset <=> (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/array_obj_ref_4166_final_index_sum_regn/req) (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/array_obj_ref_4166_final_index_sum_regn/ack)
  array_obj_ref_4166_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/array_obj_ref_4166_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/array_obj_ref_4166_base_plus_offset/sum_rename_ack)
  addr_of_4167_final_reg <=> (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/addr_of_4167_request/req branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/addr_of_4167_complete/req) (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/addr_of_4167_request/ack branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/addr_of_4167_complete/ack)
  // 		->(iNsTr_224) := iNsTr_216
  //  file prog.linked.opt.aa, line 1468
  ptr_deref_4170_base_resize <=> (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/ptr_deref_4170_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/ptr_deref_4170_base_addr_resize/base_resize_ack)
  ptr_deref_4170_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/ptr_deref_4170_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/ptr_deref_4170_base_plus_offset/sum_rename_ack)
  ptr_deref_4170_addr_0 <=> (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/ptr_deref_4170_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/ptr_deref_4170_word_addrgen/root_register_ack)
  ptr_deref_4170_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/ptr_deref_4170_Sample/ptr_deref_4170_Split/split_req) (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/ptr_deref_4170_Sample/ptr_deref_4170_Split/split_ack)
  ptr_deref_4170_store_0 <=> (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/ptr_deref_4170_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/ptr_deref_4170_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/ptr_deref_4170_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/ptr_deref_4170_Update/word_access_complete/word_0/ca)
  // 		iNsTr_226 := (iNsTr_223 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  //  file prog.linked.opt.aa, line 1469
  // (iNsTr_223 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  ADD_u32_u32_4177_inst <=> (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/ADD_u32_u32_4177_Sample/rr branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/ADD_u32_u32_4177_Update/cr) (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/ADD_u32_u32_4177_Sample/ra branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/ADD_u32_u32_4177_Update/ca)
  // 		iNsTr_227 := (iNsTr_223 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.linked.opt.aa, line 1470
  // (iNsTr_223 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_4183_inst <=> (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/EQ_u32_u1_4183_Sample/rr branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/EQ_u32_u1_4183_Update/cr) (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/EQ_u32_u1_4183_Sample/ra branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/EQ_u32_u1_4183_Update/ca)
  // 		maxx_xx_xix_xi8 := ( $mux iNsTr_227 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_226 ) 
  //  file prog.linked.opt.aa, line 1471
  // ( $mux iNsTr_227 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_226 ) 
  MUX_4190_inst <=> (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/MUX_4190_start/req branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/MUX_4190_complete/req) (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/MUX_4190_start/ack branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/MUX_4190_complete/ack)
  // 		NOISEbuff_ptr := maxx_xx_xix_xi8
  //  file prog.linked.opt.aa, line 1472
  // NOISEbuff_ptr
  STORE_NOISEbuff_ptr_4192_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/STORE_NOISEbuff_ptr_4192_Sample/STORE_NOISEbuff_ptr_4192_Split/split_req) (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/STORE_NOISEbuff_ptr_4192_Sample/STORE_NOISEbuff_ptr_4192_Split/split_ack)
  STORE_NOISEbuff_ptr_4192_store_0 <=> (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/STORE_NOISEbuff_ptr_4192_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/STORE_NOISEbuff_ptr_4192_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/STORE_NOISEbuff_ptr_4192_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4163_to_assign_stmt_4200/STORE_NOISEbuff_ptr_4192_Update/word_access_complete/word_0/ca)
  // 		$call meanCalc (iNsTr_229 ) (iNsTr_230 ) 
  //  file prog.linked.opt.aa, line 1474
  call_stmt_4203_call <=> (branch_block_stmt_3035/call_stmt_4203/call_stmt_4203_Sample/crr branch_block_stmt_3035/call_stmt_4203/call_stmt_4203_Update/ccr) (branch_block_stmt_3035/call_stmt_4203/call_stmt_4203_Sample/cra branch_block_stmt_3035/call_stmt_4203/call_stmt_4203_Update/cca)
  // 		iNsTr_231 := (qmeanx_x1 - iNsTr_230)
  //  file prog.linked.opt.aa, line 1475
  // (qmeanx_x1 - iNsTr_230)
  SUB_u32_u32_4207_inst <=> (branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/SUB_u32_u32_4207_Sample/rr branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/SUB_u32_u32_4207_Update/cr) (branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/SUB_u32_u32_4207_Sample/ra branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/SUB_u32_u32_4207_Update/ca)
  // 		iNsTr_232 := ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_231 ) )
  //  file prog.linked.opt.aa, line 1476
  // ($bitcast ($int<64>) iNsTr_231 )
  type_cast_4211_inst <=> (branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/type_cast_4211_Sample/rr branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/type_cast_4211_Update/cr) (branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/type_cast_4211_Sample/ra branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/type_cast_4211_Update/ca)
  // ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_231 ) )
  type_cast_4212_inst <=> (branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/type_cast_4212_Sample/rr branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/type_cast_4212_Update/cr) (branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/type_cast_4212_Sample/ra branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/type_cast_4212_Update/ca)
  // 		iNsTr_233 := threshold
  //  file prog.linked.opt.aa, line 1477
  // threshold
  LOAD_threshold_4215_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/LOAD_threshold_4215_Update/LOAD_threshold_4215_Merge/merge_req) (branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/LOAD_threshold_4215_Update/LOAD_threshold_4215_Merge/merge_ack)
  LOAD_threshold_4215_load_0 <=> (branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/LOAD_threshold_4215_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/LOAD_threshold_4215_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/LOAD_threshold_4215_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/LOAD_threshold_4215_Update/word_access_complete/word_0/ca)
  // 		iNsTr_234 := (iNsTr_233 * iNsTr_232)
  //  file prog.linked.opt.aa, line 1478
  // (iNsTr_233 * iNsTr_232)
  MUL_f64_f64_4220_inst <=> (branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/MUL_f64_f64_4220_Sample/rr branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/MUL_f64_f64_4220_Update/cr) (branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/MUL_f64_f64_4220_Sample/ra branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/MUL_f64_f64_4220_Update/ca)
  // 		iNsTr_235 := ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_234 ) )
  //  file prog.linked.opt.aa, line 1479
  // ($cast ($int<32>) iNsTr_234 )
  type_cast_4224_inst <=> (branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/type_cast_4224_Sample/rr branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/type_cast_4224_Update/cr) (branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/type_cast_4224_Sample/ra branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/type_cast_4224_Update/ca)
  // ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_234 ) )
  type_cast_4225_inst <=> (branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/type_cast_4225_Sample/rr branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/type_cast_4225_Update/cr) (branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/type_cast_4225_Sample/ra branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/type_cast_4225_Update/ca)
  // 		iNsTr_236 := (iNsTr_235 + iNsTr_230)
  //  file prog.linked.opt.aa, line 1480
  // (iNsTr_235 + iNsTr_230)
  ADD_u32_u32_4230_inst <=> (branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/ADD_u32_u32_4230_Sample/rr branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/ADD_u32_u32_4230_Update/cr) (branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/ADD_u32_u32_4230_Sample/ra branch_block_stmt_3035/assign_stmt_4208_to_assign_stmt_4231/ADD_u32_u32_4230_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1482
  // ($cast ($uint<32>) iNsTr_230 )
  type_cast_4237_inst <=> (branch_block_stmt_3035/bb_19_bb_20_PhiReq/phi_stmt_4234/phi_stmt_4234_sources/type_cast_4237/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_19_bb_20_PhiReq/phi_stmt_4234/phi_stmt_4234_sources/type_cast_4237/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_19_bb_20_PhiReq/phi_stmt_4234/phi_stmt_4234_sources/type_cast_4237/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_19_bb_20_PhiReq/phi_stmt_4234/phi_stmt_4234_sources/type_cast_4237/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) nmeanx_x1 )
  type_cast_4239_inst <=> (branch_block_stmt_3035/blsCheckx_xexit_bb_20_PhiReq/phi_stmt_4234/phi_stmt_4234_sources/type_cast_4239/SplitProtocol/Sample/rr branch_block_stmt_3035/blsCheckx_xexit_bb_20_PhiReq/phi_stmt_4234/phi_stmt_4234_sources/type_cast_4239/SplitProtocol/Update/cr) (branch_block_stmt_3035/blsCheckx_xexit_bb_20_PhiReq/phi_stmt_4234/phi_stmt_4234_sources/type_cast_4239/SplitProtocol/Sample/ra branch_block_stmt_3035/blsCheckx_xexit_bb_20_PhiReq/phi_stmt_4234/phi_stmt_4234_sources/type_cast_4239/SplitProtocol/Update/ca)
  phi_stmt_4234 <=> (branch_block_stmt_3035/bb_19_bb_20_PhiReq/phi_stmt_4234/phi_stmt_4234_req branch_block_stmt_3035/blsCheckx_xexit_bb_20_PhiReq/phi_stmt_4234/phi_stmt_4234_req) (branch_block_stmt_3035/merge_stmt_4233_PhiAck/phi_stmt_4234_ack)
  // ($cast ($uint<32>) iNsTr_236 )
  type_cast_4243_inst <=> (branch_block_stmt_3035/bb_19_bb_20_PhiReq/phi_stmt_4240/phi_stmt_4240_sources/type_cast_4243/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_19_bb_20_PhiReq/phi_stmt_4240/phi_stmt_4240_sources/type_cast_4243/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_19_bb_20_PhiReq/phi_stmt_4240/phi_stmt_4240_sources/type_cast_4243/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_19_bb_20_PhiReq/phi_stmt_4240/phi_stmt_4240_sources/type_cast_4243/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) det_threshx_x1 )
  type_cast_4245_inst <=> (branch_block_stmt_3035/blsCheckx_xexit_bb_20_PhiReq/phi_stmt_4240/phi_stmt_4240_sources/type_cast_4245/SplitProtocol/Sample/rr branch_block_stmt_3035/blsCheckx_xexit_bb_20_PhiReq/phi_stmt_4240/phi_stmt_4240_sources/type_cast_4245/SplitProtocol/Update/cr) (branch_block_stmt_3035/blsCheckx_xexit_bb_20_PhiReq/phi_stmt_4240/phi_stmt_4240_sources/type_cast_4245/SplitProtocol/Sample/ra branch_block_stmt_3035/blsCheckx_xexit_bb_20_PhiReq/phi_stmt_4240/phi_stmt_4240_sources/type_cast_4245/SplitProtocol/Update/ca)
  phi_stmt_4240 <=> (branch_block_stmt_3035/bb_19_bb_20_PhiReq/phi_stmt_4240/phi_stmt_4240_req branch_block_stmt_3035/blsCheckx_xexit_bb_20_PhiReq/phi_stmt_4240/phi_stmt_4240_req) (branch_block_stmt_3035/merge_stmt_4233_PhiAck/phi_stmt_4240_ack)
  // 		iNsTr_218 := ( $mux iNsTr_215 iNsTr_68  sbPeakx_x1 ) 
  //  file prog.linked.opt.aa, line 1486
  // ( $mux iNsTr_215 iNsTr_68  sbPeakx_x1 ) 
  MUX_4251_inst <=> (branch_block_stmt_3035/assign_stmt_4252_to_assign_stmt_4271/MUX_4251_start/req branch_block_stmt_3035/assign_stmt_4252_to_assign_stmt_4271/MUX_4251_complete/req) (branch_block_stmt_3035/assign_stmt_4252_to_assign_stmt_4271/MUX_4251_start/ack branch_block_stmt_3035/assign_stmt_4252_to_assign_stmt_4271/MUX_4251_complete/ack)
  // 		iNsTr_219 := (countx_x0 + ($bitcast ($uint<32>) _b11111111111111111111111111110001  ))
  //  file prog.linked.opt.aa, line 1487
  // (countx_x0 + ($bitcast ($uint<32>) _b11111111111111111111111111110001  ))
  ADD_u32_u32_4257_inst <=> (branch_block_stmt_3035/assign_stmt_4252_to_assign_stmt_4271/ADD_u32_u32_4257_Sample/rr branch_block_stmt_3035/assign_stmt_4252_to_assign_stmt_4271/ADD_u32_u32_4257_Update/cr) (branch_block_stmt_3035/assign_stmt_4252_to_assign_stmt_4271/ADD_u32_u32_4257_Sample/ra branch_block_stmt_3035/assign_stmt_4252_to_assign_stmt_4271/ADD_u32_u32_4257_Update/ca)
  // 		iNsTr_220 := ( $mux iNsTr_215 iNsTr_219  sbLocx_x1 ) 
  //  file prog.linked.opt.aa, line 1488
  // ( $mux iNsTr_215 iNsTr_219  sbLocx_x1 ) 
  MUX_4263_inst <=> (branch_block_stmt_3035/assign_stmt_4252_to_assign_stmt_4271/MUX_4263_start/req branch_block_stmt_3035/assign_stmt_4252_to_assign_stmt_4271/MUX_4263_complete/req) (branch_block_stmt_3035/assign_stmt_4252_to_assign_stmt_4271/MUX_4263_start/ack branch_block_stmt_3035/assign_stmt_4252_to_assign_stmt_4271/MUX_4263_complete/ack)
  // 		iNsTr_221 := (($bitcast ($int<32>) iNsTr_85 ) > ($bitcast ($int<32>) sb_countx_x1 ))
  //  file prog.linked.opt.aa, line 1489
  // (($bitcast ($int<32>) iNsTr_85 ) > ($bitcast ($int<32>) sb_countx_x1 ))
  // ($bitcast ($int<32>) iNsTr_85 )
  type_cast_4267_inst <=> (branch_block_stmt_3035/assign_stmt_4252_to_assign_stmt_4271/type_cast_4267_Sample/rr branch_block_stmt_3035/assign_stmt_4252_to_assign_stmt_4271/type_cast_4267_Update/cr) (branch_block_stmt_3035/assign_stmt_4252_to_assign_stmt_4271/type_cast_4267_Sample/ra branch_block_stmt_3035/assign_stmt_4252_to_assign_stmt_4271/type_cast_4267_Update/ca)
  // ($bitcast ($int<32>) sb_countx_x1 )
  type_cast_4269_inst <=> (branch_block_stmt_3035/assign_stmt_4252_to_assign_stmt_4271/type_cast_4269_Sample/rr branch_block_stmt_3035/assign_stmt_4252_to_assign_stmt_4271/type_cast_4269_Update/cr) (branch_block_stmt_3035/assign_stmt_4252_to_assign_stmt_4271/type_cast_4269_Sample/ra branch_block_stmt_3035/assign_stmt_4252_to_assign_stmt_4271/type_cast_4269_Update/ca)
  SGT_i32_u1_4270_inst <=> (branch_block_stmt_3035/assign_stmt_4252_to_assign_stmt_4271/SGT_i32_u1_4270_Sample/rr branch_block_stmt_3035/assign_stmt_4252_to_assign_stmt_4271/SGT_i32_u1_4270_Update/cr) (branch_block_stmt_3035/assign_stmt_4252_to_assign_stmt_4271/SGT_i32_u1_4270_Sample/ra branch_block_stmt_3035/assign_stmt_4252_to_assign_stmt_4271/SGT_i32_u1_4270_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1490
  if_stmt_4272_branch <=> (branch_block_stmt_3035/if_stmt_4272_eval_test/branch_req) (branch_block_stmt_3035/if_stmt_4272_else_link/else_choice_transition branch_block_stmt_3035/if_stmt_4272_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1495
  // 		iNsTr_238 := ($bitcast ($uint<32>) (($bitcast ($int<32>) det_threshx_x2 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) )
  //  file prog.linked.opt.aa, line 1497
  // (($bitcast ($int<32>) det_threshx_x2 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
  // ($bitcast ($int<32>) det_threshx_x2 )
  type_cast_4281_inst <=> (branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/type_cast_4281_Sample/rr branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/type_cast_4281_Update/cr) (branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/type_cast_4281_Sample/ra branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/type_cast_4281_Update/ca)
  ASHR_i32_i32_4285_inst <=> (branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/ASHR_i32_i32_4285_Sample/rr branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/ASHR_i32_i32_4285_Update/cr) (branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/ASHR_i32_i32_4285_Sample/ra branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/ASHR_i32_i32_4285_Update/ca)
  // ($bitcast ($uint<32>) (($bitcast ($int<32>) det_threshx_x2 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) )
  type_cast_4286_inst <=> (branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/type_cast_4286_Sample/rr branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/type_cast_4286_Update/cr) (branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/type_cast_4286_Sample/ra branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/type_cast_4286_Update/ca)
  // 		xx_xnot := (iNsTr_209 ^ ($bitcast ($uint<1>) _b1  ))
  //  file prog.linked.opt.aa, line 1498
  // (iNsTr_209 ^ ($bitcast ($uint<1>) _b1  ))
  XOR_u1_u1_4292_inst <=> (branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/XOR_u1_u1_4292_Sample/rr branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/XOR_u1_u1_4292_Update/cr) (branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/XOR_u1_u1_4292_Sample/ra branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/XOR_u1_u1_4292_Update/ca)
  // 		iNsTr_239 := (iNsTr_208 | xx_xnot)
  //  file prog.linked.opt.aa, line 1499
  // (iNsTr_208 | xx_xnot)
  OR_u1_u1_4297_inst <=> (branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/OR_u1_u1_4297_Sample/rr branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/OR_u1_u1_4297_Update/cr) (branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/OR_u1_u1_4297_Sample/ra branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/OR_u1_u1_4297_Update/ca)
  // 		iNsTr_240 := (($bitcast ($int<32>) iNsTr_218 ) > ($bitcast ($int<32>) iNsTr_238 ))
  //  file prog.linked.opt.aa, line 1500
  // (($bitcast ($int<32>) iNsTr_218 ) > ($bitcast ($int<32>) iNsTr_238 ))
  // ($bitcast ($int<32>) iNsTr_218 )
  type_cast_4301_inst <=> (branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/type_cast_4301_Sample/rr branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/type_cast_4301_Update/cr) (branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/type_cast_4301_Sample/ra branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/type_cast_4301_Update/ca)
  // ($bitcast ($int<32>) iNsTr_238 )
  type_cast_4303_inst <=> (branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/type_cast_4303_Sample/rr branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/type_cast_4303_Update/cr) (branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/type_cast_4303_Sample/ra branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/type_cast_4303_Update/ca)
  SGT_i32_u1_4304_inst <=> (branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/SGT_i32_u1_4304_Sample/rr branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/SGT_i32_u1_4304_Update/cr) (branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/SGT_i32_u1_4304_Sample/ra branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/SGT_i32_u1_4304_Update/ca)
  // 		xx_x := (iNsTr_240 & iNsTr_239)
  //  file prog.linked.opt.aa, line 1501
  // (iNsTr_240 & iNsTr_239)
  AND_u1_u1_4309_inst <=> (branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/AND_u1_u1_4309_Sample/rr branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/AND_u1_u1_4309_Update/cr) (branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/AND_u1_u1_4309_Sample/ra branch_block_stmt_3035/assign_stmt_4287_to_assign_stmt_4310/AND_u1_u1_4309_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1503
  // ($cast ($uint<1>) xx_x )
  type_cast_4319_inst <=> (branch_block_stmt_3035/bb_21_bb_22_PhiReq/phi_stmt_4313/phi_stmt_4313_sources/type_cast_4319/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_21_bb_22_PhiReq/phi_stmt_4313/phi_stmt_4313_sources/type_cast_4319/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_21_bb_22_PhiReq/phi_stmt_4313/phi_stmt_4313_sources/type_cast_4319/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_21_bb_22_PhiReq/phi_stmt_4313/phi_stmt_4313_sources/type_cast_4319/SplitProtocol/Update/ca)
  phi_stmt_4313 <=> (branch_block_stmt_3035/bb_20_bb_22_PhiReq/phi_stmt_4313/phi_stmt_4313_req branch_block_stmt_3035/bb_21_bb_22_PhiReq/phi_stmt_4313/phi_stmt_4313_req) (branch_block_stmt_3035/merge_stmt_4312_PhiAck/phi_stmt_4313_ack)
  // 		iNsTr_243 := (iNsTr_211 | iNsTr_242)
  //  file prog.linked.opt.aa, line 1506
  // (iNsTr_211 | iNsTr_242)
  OR_u1_u1_4324_inst <=> (branch_block_stmt_3035/assign_stmt_4325_to_assign_stmt_4356/OR_u1_u1_4324_Sample/rr branch_block_stmt_3035/assign_stmt_4325_to_assign_stmt_4356/OR_u1_u1_4324_Update/cr) (branch_block_stmt_3035/assign_stmt_4325_to_assign_stmt_4356/OR_u1_u1_4324_Sample/ra branch_block_stmt_3035/assign_stmt_4325_to_assign_stmt_4356/OR_u1_u1_4324_Update/ca)
  // 		iNsTr_244 := ( $mux iNsTr_211 iNsTr_68  qrsValx_x1 ) 
  //  file prog.linked.opt.aa, line 1507
  // ( $mux iNsTr_211 iNsTr_68  qrsValx_x1 ) 
  MUX_4330_inst <=> (branch_block_stmt_3035/assign_stmt_4325_to_assign_stmt_4356/MUX_4330_start/req branch_block_stmt_3035/assign_stmt_4325_to_assign_stmt_4356/MUX_4330_complete/req) (branch_block_stmt_3035/assign_stmt_4325_to_assign_stmt_4356/MUX_4330_start/ack branch_block_stmt_3035/assign_stmt_4325_to_assign_stmt_4356/MUX_4330_complete/ack)
  // 		iNsTr_245 := ( $mux iNsTr_211 iNsTr_219  rrValx_x1 ) 
  //  file prog.linked.opt.aa, line 1508
  // ( $mux iNsTr_211 iNsTr_219  rrValx_x1 ) 
  MUX_4336_inst <=> (branch_block_stmt_3035/assign_stmt_4325_to_assign_stmt_4356/MUX_4336_start/req branch_block_stmt_3035/assign_stmt_4325_to_assign_stmt_4356/MUX_4336_complete/req) (branch_block_stmt_3035/assign_stmt_4325_to_assign_stmt_4356/MUX_4336_start/ack branch_block_stmt_3035/assign_stmt_4325_to_assign_stmt_4356/MUX_4336_complete/ack)
  // 		iNsTr_246 := ( $mux iNsTr_211 ($bitcast ($uint<32>) _b00000000000000000000000000010000  )  iNsTr_85 ) 
  //  file prog.linked.opt.aa, line 1509
  // ( $mux iNsTr_211 ($bitcast ($uint<32>) _b00000000000000000000000000010000  )  iNsTr_85 ) 
  MUX_4343_inst <=> (branch_block_stmt_3035/assign_stmt_4325_to_assign_stmt_4356/MUX_4343_start/req branch_block_stmt_3035/assign_stmt_4325_to_assign_stmt_4356/MUX_4343_complete/req) (branch_block_stmt_3035/assign_stmt_4325_to_assign_stmt_4356/MUX_4343_start/ack branch_block_stmt_3035/assign_stmt_4325_to_assign_stmt_4356/MUX_4343_complete/ack)
  // 		iNsTr_247 := ( $mux iNsTr_242 iNsTr_218  iNsTr_244 ) 
  //  file prog.linked.opt.aa, line 1510
  // ( $mux iNsTr_242 iNsTr_218  iNsTr_244 ) 
  MUX_4349_inst <=> (branch_block_stmt_3035/assign_stmt_4325_to_assign_stmt_4356/MUX_4349_start/req branch_block_stmt_3035/assign_stmt_4325_to_assign_stmt_4356/MUX_4349_complete/req) (branch_block_stmt_3035/assign_stmt_4325_to_assign_stmt_4356/MUX_4349_start/ack branch_block_stmt_3035/assign_stmt_4325_to_assign_stmt_4356/MUX_4349_complete/ack)
  // 		iNsTr_248 := ( $mux iNsTr_242 iNsTr_220  iNsTr_245 ) 
  //  file prog.linked.opt.aa, line 1511
  // ( $mux iNsTr_242 iNsTr_220  iNsTr_245 ) 
  MUX_4355_inst <=> (branch_block_stmt_3035/assign_stmt_4325_to_assign_stmt_4356/MUX_4355_start/req branch_block_stmt_3035/assign_stmt_4325_to_assign_stmt_4356/MUX_4355_complete/req) (branch_block_stmt_3035/assign_stmt_4325_to_assign_stmt_4356/MUX_4355_start/ack branch_block_stmt_3035/assign_stmt_4325_to_assign_stmt_4356/MUX_4355_complete/ack)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1512
  if_stmt_4357_branch <=> (branch_block_stmt_3035/if_stmt_4357_eval_test/branch_req) (branch_block_stmt_3035/if_stmt_4357_else_link/else_choice_transition branch_block_stmt_3035/if_stmt_4357_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1517
  // 		iNsTr_277 := maxDer
  //  file prog.linked.opt.aa, line 1519
  // maxDer
  LOAD_maxDer_4365_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4366/LOAD_maxDer_4365_Update/LOAD_maxDer_4365_Merge/merge_req) (branch_block_stmt_3035/assign_stmt_4366/LOAD_maxDer_4365_Update/LOAD_maxDer_4365_Merge/merge_ack)
  LOAD_maxDer_4365_load_0 <=> (branch_block_stmt_3035/assign_stmt_4366/LOAD_maxDer_4365_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4366/LOAD_maxDer_4365_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4366/LOAD_maxDer_4365_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4366/LOAD_maxDer_4365_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1521
  // 		iNsTr_250 := QRSbuff_ptr
  //  file prog.linked.opt.aa, line 1523
  // QRSbuff_ptr
  LOAD_QRSbuff_ptr_4370_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/LOAD_QRSbuff_ptr_4370_Update/LOAD_QRSbuff_ptr_4370_Merge/merge_req) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/LOAD_QRSbuff_ptr_4370_Update/LOAD_QRSbuff_ptr_4370_Merge/merge_ack)
  LOAD_QRSbuff_ptr_4370_load_0 <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/LOAD_QRSbuff_ptr_4370_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/LOAD_QRSbuff_ptr_4370_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/LOAD_QRSbuff_ptr_4370_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/LOAD_QRSbuff_ptr_4370_Update/word_access_complete/word_0/ca)
  // 		iNsTr_251 := RRbuff_ptr
  //  file prog.linked.opt.aa, line 1524
  // RRbuff_ptr
  LOAD_RRbuff_ptr_4373_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/LOAD_RRbuff_ptr_4373_Update/LOAD_RRbuff_ptr_4373_Merge/merge_req) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/LOAD_RRbuff_ptr_4373_Update/LOAD_RRbuff_ptr_4373_Merge/merge_ack)
  LOAD_RRbuff_ptr_4373_load_0 <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/LOAD_RRbuff_ptr_4373_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/LOAD_RRbuff_ptr_4373_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/LOAD_RRbuff_ptr_4373_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/LOAD_RRbuff_ptr_4373_Update/word_access_complete/word_0/ca)
  // 		iNsTr_252 := @(QRSbuff[iNsTr_250])
  //  file prog.linked.opt.aa, line 1525
  array_obj_ref_4377_index_0_resize <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/array_obj_ref_4377_index_resize_0/index_resize_req) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/array_obj_ref_4377_index_resize_0/index_resize_ack)
  array_obj_ref_4377_index_0_rename <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/array_obj_ref_4377_index_scale_0/scale_rename_req) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/array_obj_ref_4377_index_scale_0/scale_rename_ack)
  array_obj_ref_4377_index_offset <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/array_obj_ref_4377_final_index_sum_regn/req) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/array_obj_ref_4377_final_index_sum_regn/ack)
  array_obj_ref_4377_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/array_obj_ref_4377_base_plus_offset_sample/rr branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/array_obj_ref_4377_base_plus_offset_update/cr) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/array_obj_ref_4377_base_plus_offset_sample/ra branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/array_obj_ref_4377_base_plus_offset_update/ca)
  addr_of_4378_final_reg <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/addr_of_4378_request/req branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/addr_of_4378_complete/req) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/addr_of_4378_request/ack branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/addr_of_4378_complete/ack)
  // 		->(iNsTr_252) := iNsTr_247
  //  file prog.linked.opt.aa, line 1526
  ptr_deref_4381_base_resize <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ptr_deref_4381_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ptr_deref_4381_base_addr_resize/base_resize_ack)
  ptr_deref_4381_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ptr_deref_4381_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ptr_deref_4381_base_plus_offset/sum_rename_ack)
  ptr_deref_4381_addr_0 <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ptr_deref_4381_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ptr_deref_4381_word_addrgen/root_register_ack)
  ptr_deref_4381_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ptr_deref_4381_Sample/ptr_deref_4381_Split/split_req) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ptr_deref_4381_Sample/ptr_deref_4381_Split/split_ack)
  ptr_deref_4381_store_0 <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ptr_deref_4381_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ptr_deref_4381_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ptr_deref_4381_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ptr_deref_4381_Update/word_access_complete/word_0/ca)
  // 		iNsTr_254 := @(RRbuff[iNsTr_251])
  //  file prog.linked.opt.aa, line 1527
  array_obj_ref_4386_index_0_resize <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/array_obj_ref_4386_index_resize_0/index_resize_req) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/array_obj_ref_4386_index_resize_0/index_resize_ack)
  array_obj_ref_4386_index_0_rename <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/array_obj_ref_4386_index_scale_0/scale_rename_req) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/array_obj_ref_4386_index_scale_0/scale_rename_ack)
  array_obj_ref_4386_index_offset <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/array_obj_ref_4386_final_index_sum_regn/req) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/array_obj_ref_4386_final_index_sum_regn/ack)
  array_obj_ref_4386_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/array_obj_ref_4386_base_plus_offset_sample/rr branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/array_obj_ref_4386_base_plus_offset_update/cr) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/array_obj_ref_4386_base_plus_offset_sample/ra branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/array_obj_ref_4386_base_plus_offset_update/ca)
  addr_of_4387_final_reg <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/addr_of_4387_request/req branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/addr_of_4387_complete/req) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/addr_of_4387_request/ack branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/addr_of_4387_complete/ack)
  // 		->(iNsTr_254) := iNsTr_248
  //  file prog.linked.opt.aa, line 1528
  ptr_deref_4390_base_resize <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ptr_deref_4390_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ptr_deref_4390_base_addr_resize/base_resize_ack)
  ptr_deref_4390_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ptr_deref_4390_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ptr_deref_4390_base_plus_offset/sum_rename_ack)
  ptr_deref_4390_addr_0 <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ptr_deref_4390_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ptr_deref_4390_word_addrgen/root_register_ack)
  ptr_deref_4390_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ptr_deref_4390_Sample/ptr_deref_4390_Split/split_req) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ptr_deref_4390_Sample/ptr_deref_4390_Split/split_ack)
  ptr_deref_4390_store_0 <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ptr_deref_4390_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ptr_deref_4390_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ptr_deref_4390_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ptr_deref_4390_Update/word_access_complete/word_0/ca)
  // 		iNsTr_256 := (iNsTr_250 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  //  file prog.linked.opt.aa, line 1529
  // (iNsTr_250 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  ADD_u32_u32_4397_inst <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ADD_u32_u32_4397_Sample/rr branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ADD_u32_u32_4397_Update/cr) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ADD_u32_u32_4397_Sample/ra branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ADD_u32_u32_4397_Update/ca)
  // 		iNsTr_257 := (iNsTr_250 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.linked.opt.aa, line 1530
  // (iNsTr_250 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_4403_inst <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/EQ_u32_u1_4403_Sample/rr branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/EQ_u32_u1_4403_Update/cr) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/EQ_u32_u1_4403_Sample/ra branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/EQ_u32_u1_4403_Update/ca)
  // 		maxx_xx_xix_xi := ( $mux iNsTr_257 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_256 ) 
  //  file prog.linked.opt.aa, line 1531
  // ( $mux iNsTr_257 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_256 ) 
  MUX_4410_inst <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/MUX_4410_start/req branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/MUX_4410_complete/req) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/MUX_4410_start/ack branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/MUX_4410_complete/ack)
  // 		QRSbuff_ptr := maxx_xx_xix_xi
  //  file prog.linked.opt.aa, line 1532
  // QRSbuff_ptr
  STORE_QRSbuff_ptr_4412_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/STORE_QRSbuff_ptr_4412_Sample/STORE_QRSbuff_ptr_4412_Split/split_req) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/STORE_QRSbuff_ptr_4412_Sample/STORE_QRSbuff_ptr_4412_Split/split_ack)
  STORE_QRSbuff_ptr_4412_store_0 <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/STORE_QRSbuff_ptr_4412_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/STORE_QRSbuff_ptr_4412_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/STORE_QRSbuff_ptr_4412_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/STORE_QRSbuff_ptr_4412_Update/word_access_complete/word_0/ca)
  // 		iNsTr_259 := (iNsTr_251 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  //  file prog.linked.opt.aa, line 1533
  // (iNsTr_251 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  ADD_u32_u32_4419_inst <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ADD_u32_u32_4419_Sample/rr branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ADD_u32_u32_4419_Update/cr) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ADD_u32_u32_4419_Sample/ra branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/ADD_u32_u32_4419_Update/ca)
  // 		iNsTr_260 := (iNsTr_251 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.linked.opt.aa, line 1534
  // (iNsTr_251 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_4425_inst <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/EQ_u32_u1_4425_Sample/rr branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/EQ_u32_u1_4425_Update/cr) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/EQ_u32_u1_4425_Sample/ra branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/EQ_u32_u1_4425_Update/ca)
  // 		maxx_xx_xi1x_xi := ( $mux iNsTr_260 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_259 ) 
  //  file prog.linked.opt.aa, line 1535
  // ( $mux iNsTr_260 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_259 ) 
  MUX_4432_inst <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/MUX_4432_start/req branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/MUX_4432_complete/req) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/MUX_4432_start/ack branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/MUX_4432_complete/ack)
  // 		RRbuff_ptr := maxx_xx_xi1x_xi
  //  file prog.linked.opt.aa, line 1536
  // RRbuff_ptr
  STORE_RRbuff_ptr_4434_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/STORE_RRbuff_ptr_4434_Sample/STORE_RRbuff_ptr_4434_Split/split_req) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/STORE_RRbuff_ptr_4434_Sample/STORE_RRbuff_ptr_4434_Split/split_ack)
  STORE_RRbuff_ptr_4434_store_0 <=> (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/STORE_RRbuff_ptr_4434_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/STORE_RRbuff_ptr_4434_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/STORE_RRbuff_ptr_4434_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4371_to_assign_stmt_4442/STORE_RRbuff_ptr_4434_Update/word_access_complete/word_0/ca)
  // 		$call meanCalc (iNsTr_262 ) (iNsTr_263 ) 
  //  file prog.linked.opt.aa, line 1538
  call_stmt_4445_call <=> (branch_block_stmt_3035/call_stmt_4445/call_stmt_4445_Sample/crr branch_block_stmt_3035/call_stmt_4445/call_stmt_4445_Update/ccr) (branch_block_stmt_3035/call_stmt_4445/call_stmt_4445_Sample/cra branch_block_stmt_3035/call_stmt_4445/call_stmt_4445_Update/cca)
  // 		$call meanCalc (iNsTr_264 ) (iNsTr_265 ) 
  //  file prog.linked.opt.aa, line 1540
  call_stmt_4454_call <=> (branch_block_stmt_3035/call_stmt_4454/call_stmt_4454_Sample/crr branch_block_stmt_3035/call_stmt_4454/call_stmt_4454_Update/ccr) (branch_block_stmt_3035/call_stmt_4454/call_stmt_4454_Sample/cra branch_block_stmt_3035/call_stmt_4454/call_stmt_4454_Update/cca)
  // 		iNsTr_266 := (iNsTr_263 - nmeanx_x2)
  //  file prog.linked.opt.aa, line 1541
  // (iNsTr_263 - nmeanx_x2)
  SUB_u32_u32_4458_inst <=> (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/SUB_u32_u32_4458_Sample/rr branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/SUB_u32_u32_4458_Update/cr) (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/SUB_u32_u32_4458_Sample/ra branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/SUB_u32_u32_4458_Update/ca)
  // 		iNsTr_267 := ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_266 ) )
  //  file prog.linked.opt.aa, line 1542
  // ($bitcast ($int<64>) iNsTr_266 )
  type_cast_4462_inst <=> (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/type_cast_4462_Sample/rr branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/type_cast_4462_Update/cr) (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/type_cast_4462_Sample/ra branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/type_cast_4462_Update/ca)
  // ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_266 ) )
  type_cast_4463_inst <=> (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/type_cast_4463_Sample/rr branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/type_cast_4463_Update/cr) (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/type_cast_4463_Sample/ra branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/type_cast_4463_Update/ca)
  // 		iNsTr_268 := threshold
  //  file prog.linked.opt.aa, line 1543
  // threshold
  LOAD_threshold_4466_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/LOAD_threshold_4466_Update/LOAD_threshold_4466_Merge/merge_req) (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/LOAD_threshold_4466_Update/LOAD_threshold_4466_Merge/merge_ack)
  LOAD_threshold_4466_load_0 <=> (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/LOAD_threshold_4466_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/LOAD_threshold_4466_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/LOAD_threshold_4466_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/LOAD_threshold_4466_Update/word_access_complete/word_0/ca)
  // 		iNsTr_269 := (iNsTr_268 * iNsTr_267)
  //  file prog.linked.opt.aa, line 1544
  // (iNsTr_268 * iNsTr_267)
  MUL_f64_f64_4471_inst <=> (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/MUL_f64_f64_4471_Sample/rr branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/MUL_f64_f64_4471_Update/cr) (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/MUL_f64_f64_4471_Sample/ra branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/MUL_f64_f64_4471_Update/ca)
  // 		iNsTr_270 := ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_269 ) )
  //  file prog.linked.opt.aa, line 1545
  // ($cast ($int<32>) iNsTr_269 )
  type_cast_4475_inst <=> (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/type_cast_4475_Sample/rr branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/type_cast_4475_Update/cr) (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/type_cast_4475_Sample/ra branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/type_cast_4475_Update/ca)
  // ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_269 ) )
  type_cast_4476_inst <=> (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/type_cast_4476_Sample/rr branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/type_cast_4476_Update/cr) (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/type_cast_4476_Sample/ra branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/type_cast_4476_Update/ca)
  // 		iNsTr_271 := (iNsTr_270 + nmeanx_x2)
  //  file prog.linked.opt.aa, line 1546
  // (iNsTr_270 + nmeanx_x2)
  ADD_u32_u32_4481_inst <=> (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/ADD_u32_u32_4481_Sample/rr branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/ADD_u32_u32_4481_Update/cr) (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/ADD_u32_u32_4481_Sample/ra branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/ADD_u32_u32_4481_Update/ca)
  // 		iNsTr_272 := maxDer
  //  file prog.linked.opt.aa, line 1547
  // maxDer
  LOAD_maxDer_4484_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/LOAD_maxDer_4484_Update/LOAD_maxDer_4484_Merge/merge_req) (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/LOAD_maxDer_4484_Update/LOAD_maxDer_4484_Merge/merge_ack)
  LOAD_maxDer_4484_load_0 <=> (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/LOAD_maxDer_4484_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/LOAD_maxDer_4484_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/LOAD_maxDer_4484_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/LOAD_maxDer_4484_Update/word_access_complete/word_0/ca)
  // 		iNsTr_273 := ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_265 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) )
  //  file prog.linked.opt.aa, line 1548
  // (($bitcast ($int<32>) iNsTr_265 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
  // ($bitcast ($int<32>) iNsTr_265 )
  type_cast_4488_inst <=> (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/type_cast_4488_Sample/rr branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/type_cast_4488_Update/cr) (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/type_cast_4488_Sample/ra branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/type_cast_4488_Update/ca)
  ASHR_i32_i32_4492_inst <=> (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/ASHR_i32_i32_4492_Sample/rr branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/ASHR_i32_i32_4492_Update/cr) (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/ASHR_i32_i32_4492_Sample/ra branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/ASHR_i32_i32_4492_Update/ca)
  // ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_265 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) )
  type_cast_4493_inst <=> (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/type_cast_4493_Sample/rr branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/type_cast_4493_Update/cr) (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/type_cast_4493_Sample/ra branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/type_cast_4493_Update/ca)
  // 		iNsTr_274 := (iNsTr_265 + ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
  //  file prog.linked.opt.aa, line 1549
  // (iNsTr_265 + ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
  ADD_u32_u32_4499_inst <=> (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/ADD_u32_u32_4499_Sample/rr branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/ADD_u32_u32_4499_Update/cr) (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/ADD_u32_u32_4499_Sample/ra branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/ADD_u32_u32_4499_Update/ca)
  // 		iNsTr_275 := (iNsTr_274 + iNsTr_273)
  //  file prog.linked.opt.aa, line 1550
  // (iNsTr_274 + iNsTr_273)
  ADD_u32_u32_4504_inst <=> (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/ADD_u32_u32_4504_Sample/rr branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/ADD_u32_u32_4504_Update/cr) (branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/ADD_u32_u32_4504_Sample/ra branch_block_stmt_3035/assign_stmt_4459_to_assign_stmt_4505/ADD_u32_u32_4504_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1552
  // ($cast ($uint<32>) iNsTr_272 )
  type_cast_4511_inst <=> (branch_block_stmt_3035/bb_24_bb_25_PhiReq/phi_stmt_4508/phi_stmt_4508_sources/type_cast_4511/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_24_bb_25_PhiReq/phi_stmt_4508/phi_stmt_4508_sources/type_cast_4511/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_24_bb_25_PhiReq/phi_stmt_4508/phi_stmt_4508_sources/type_cast_4511/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_24_bb_25_PhiReq/phi_stmt_4508/phi_stmt_4508_sources/type_cast_4511/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_277 )
  type_cast_4513_inst <=> (branch_block_stmt_3035/xx_xthread27_bb_25_PhiReq/phi_stmt_4508/phi_stmt_4508_sources/type_cast_4513/SplitProtocol/Sample/rr branch_block_stmt_3035/xx_xthread27_bb_25_PhiReq/phi_stmt_4508/phi_stmt_4508_sources/type_cast_4513/SplitProtocol/Update/cr) (branch_block_stmt_3035/xx_xthread27_bb_25_PhiReq/phi_stmt_4508/phi_stmt_4508_sources/type_cast_4513/SplitProtocol/Sample/ra branch_block_stmt_3035/xx_xthread27_bb_25_PhiReq/phi_stmt_4508/phi_stmt_4508_sources/type_cast_4513/SplitProtocol/Update/ca)
  phi_stmt_4508 <=> (branch_block_stmt_3035/bb_24_bb_25_PhiReq/phi_stmt_4508/phi_stmt_4508_req branch_block_stmt_3035/xx_xthread27_bb_25_PhiReq/phi_stmt_4508/phi_stmt_4508_req) (branch_block_stmt_3035/merge_stmt_4507_PhiAck/phi_stmt_4508_ack)
  // ($cast ($uint<32>) iNsTr_271 )
  type_cast_4517_inst <=> (branch_block_stmt_3035/bb_24_bb_25_PhiReq/phi_stmt_4514/phi_stmt_4514_sources/type_cast_4517/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_24_bb_25_PhiReq/phi_stmt_4514/phi_stmt_4514_sources/type_cast_4517/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_24_bb_25_PhiReq/phi_stmt_4514/phi_stmt_4514_sources/type_cast_4517/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_24_bb_25_PhiReq/phi_stmt_4514/phi_stmt_4514_sources/type_cast_4517/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) det_threshx_x2 )
  type_cast_4519_inst <=> (branch_block_stmt_3035/xx_xthread27_bb_25_PhiReq/phi_stmt_4514/phi_stmt_4514_sources/type_cast_4519/SplitProtocol/Sample/rr branch_block_stmt_3035/xx_xthread27_bb_25_PhiReq/phi_stmt_4514/phi_stmt_4514_sources/type_cast_4519/SplitProtocol/Update/cr) (branch_block_stmt_3035/xx_xthread27_bb_25_PhiReq/phi_stmt_4514/phi_stmt_4514_sources/type_cast_4519/SplitProtocol/Sample/ra branch_block_stmt_3035/xx_xthread27_bb_25_PhiReq/phi_stmt_4514/phi_stmt_4514_sources/type_cast_4519/SplitProtocol/Update/ca)
  phi_stmt_4514 <=> (branch_block_stmt_3035/bb_24_bb_25_PhiReq/phi_stmt_4514/phi_stmt_4514_req branch_block_stmt_3035/xx_xthread27_bb_25_PhiReq/phi_stmt_4514/phi_stmt_4514_req) (branch_block_stmt_3035/merge_stmt_4507_PhiAck/phi_stmt_4514_ack)
  // ($cast ($uint<32>) iNsTr_263 )
  type_cast_4523_inst <=> (branch_block_stmt_3035/bb_24_bb_25_PhiReq/phi_stmt_4520/phi_stmt_4520_sources/type_cast_4523/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_24_bb_25_PhiReq/phi_stmt_4520/phi_stmt_4520_sources/type_cast_4523/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_24_bb_25_PhiReq/phi_stmt_4520/phi_stmt_4520_sources/type_cast_4523/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_24_bb_25_PhiReq/phi_stmt_4520/phi_stmt_4520_sources/type_cast_4523/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) qmeanx_x1 )
  type_cast_4525_inst <=> (branch_block_stmt_3035/xx_xthread27_bb_25_PhiReq/phi_stmt_4520/phi_stmt_4520_sources/type_cast_4525/SplitProtocol/Sample/rr branch_block_stmt_3035/xx_xthread27_bb_25_PhiReq/phi_stmt_4520/phi_stmt_4520_sources/type_cast_4525/SplitProtocol/Update/cr) (branch_block_stmt_3035/xx_xthread27_bb_25_PhiReq/phi_stmt_4520/phi_stmt_4520_sources/type_cast_4525/SplitProtocol/Sample/ra branch_block_stmt_3035/xx_xthread27_bb_25_PhiReq/phi_stmt_4520/phi_stmt_4520_sources/type_cast_4525/SplitProtocol/Update/ca)
  phi_stmt_4520 <=> (branch_block_stmt_3035/bb_24_bb_25_PhiReq/phi_stmt_4520/phi_stmt_4520_req branch_block_stmt_3035/xx_xthread27_bb_25_PhiReq/phi_stmt_4520/phi_stmt_4520_req) (branch_block_stmt_3035/merge_stmt_4507_PhiAck/phi_stmt_4520_ack)
  // ($cast ($uint<32>) iNsTr_275 )
  type_cast_4529_inst <=> (branch_block_stmt_3035/bb_24_bb_25_PhiReq/phi_stmt_4526/phi_stmt_4526_sources/type_cast_4529/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_24_bb_25_PhiReq/phi_stmt_4526/phi_stmt_4526_sources/type_cast_4529/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_24_bb_25_PhiReq/phi_stmt_4526/phi_stmt_4526_sources/type_cast_4529/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_24_bb_25_PhiReq/phi_stmt_4526/phi_stmt_4526_sources/type_cast_4529/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) sb_countx_x1 )
  type_cast_4531_inst <=> (branch_block_stmt_3035/xx_xthread27_bb_25_PhiReq/phi_stmt_4526/phi_stmt_4526_sources/type_cast_4531/SplitProtocol/Sample/rr branch_block_stmt_3035/xx_xthread27_bb_25_PhiReq/phi_stmt_4526/phi_stmt_4526_sources/type_cast_4531/SplitProtocol/Update/cr) (branch_block_stmt_3035/xx_xthread27_bb_25_PhiReq/phi_stmt_4526/phi_stmt_4526_sources/type_cast_4531/SplitProtocol/Sample/ra branch_block_stmt_3035/xx_xthread27_bb_25_PhiReq/phi_stmt_4526/phi_stmt_4526_sources/type_cast_4531/SplitProtocol/Update/ca)
  phi_stmt_4526 <=> (branch_block_stmt_3035/bb_24_bb_25_PhiReq/phi_stmt_4526/phi_stmt_4526_req branch_block_stmt_3035/xx_xthread27_bb_25_PhiReq/phi_stmt_4526/phi_stmt_4526_req) (branch_block_stmt_3035/merge_stmt_4507_PhiAck/phi_stmt_4526_ack)
  // 		iNsTr_281 := ( $mux iNsTr_242 iNsTr_220  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
  //  file prog.linked.opt.aa, line 1558
  // ( $mux iNsTr_242 iNsTr_220  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
  MUX_4538_inst <=> (branch_block_stmt_3035/assign_stmt_4539_to_assign_stmt_4544/MUX_4538_start/req branch_block_stmt_3035/assign_stmt_4539_to_assign_stmt_4544/MUX_4538_complete/req) (branch_block_stmt_3035/assign_stmt_4539_to_assign_stmt_4544/MUX_4538_start/ack branch_block_stmt_3035/assign_stmt_4539_to_assign_stmt_4544/MUX_4538_complete/ack)
  // 		xx_x7 := (iNsTr_246 - iNsTr_281)
  //  file prog.linked.opt.aa, line 1559
  // (iNsTr_246 - iNsTr_281)
  SUB_u32_u32_4543_inst <=> (branch_block_stmt_3035/assign_stmt_4539_to_assign_stmt_4544/SUB_u32_u32_4543_Sample/rr branch_block_stmt_3035/assign_stmt_4539_to_assign_stmt_4544/SUB_u32_u32_4543_Update/cr) (branch_block_stmt_3035/assign_stmt_4539_to_assign_stmt_4544/SUB_u32_u32_4543_Sample/ra branch_block_stmt_3035/assign_stmt_4539_to_assign_stmt_4544/SUB_u32_u32_4543_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1560
  if_stmt_4545_branch <=> (branch_block_stmt_3035/if_stmt_4545_eval_test/branch_req) (branch_block_stmt_3035/if_stmt_4545_else_link/else_choice_transition branch_block_stmt_3035/if_stmt_4545_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1565
  // 		iNsTr_283 := (xx_x7 + ($bitcast ($uint<32>) _b00000000000000000000000000111000  ))
  //  file prog.linked.opt.aa, line 1567
  // (xx_x7 + ($bitcast ($uint<32>) _b00000000000000000000000000111000  ))
  ADD_u32_u32_4556_inst <=> (branch_block_stmt_3035/assign_stmt_4557/ADD_u32_u32_4556_Sample/rr branch_block_stmt_3035/assign_stmt_4557/ADD_u32_u32_4556_Update/cr) (branch_block_stmt_3035/assign_stmt_4557/ADD_u32_u32_4556_Sample/ra branch_block_stmt_3035/assign_stmt_4557/ADD_u32_u32_4556_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1569
  // 		iNsTr_285 := ( $mux iNsTr_211 ($bitcast ($uint<32>) _b00000000000000000000000001001000  )  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
  //  file prog.linked.opt.aa, line 1571
  // ( $mux iNsTr_211 ($bitcast ($uint<32>) _b00000000000000000000000001001000  )  ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) 
  MUX_4566_inst <=> (branch_block_stmt_3035/assign_stmt_4567/MUX_4566_start/req branch_block_stmt_3035/assign_stmt_4567/MUX_4566_complete/req) (branch_block_stmt_3035/assign_stmt_4567/MUX_4566_start/ack branch_block_stmt_3035/assign_stmt_4567/MUX_4566_complete/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1573
  // ($cast ($uint<32>) iNsTr_283 )
  type_cast_4573_inst <=> (branch_block_stmt_3035/bb_26_bb_28_PhiReq/phi_stmt_4570/phi_stmt_4570_sources/type_cast_4573/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_26_bb_28_PhiReq/phi_stmt_4570/phi_stmt_4570_sources/type_cast_4573/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_26_bb_28_PhiReq/phi_stmt_4570/phi_stmt_4570_sources/type_cast_4573/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_26_bb_28_PhiReq/phi_stmt_4570/phi_stmt_4570_sources/type_cast_4573/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_285 )
  type_cast_4575_inst <=> (branch_block_stmt_3035/bb_27_bb_28_PhiReq/phi_stmt_4570/phi_stmt_4570_sources/type_cast_4575/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_27_bb_28_PhiReq/phi_stmt_4570/phi_stmt_4570_sources/type_cast_4575/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_27_bb_28_PhiReq/phi_stmt_4570/phi_stmt_4570_sources/type_cast_4575/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_27_bb_28_PhiReq/phi_stmt_4570/phi_stmt_4570_sources/type_cast_4575/SplitProtocol/Update/ca)
  phi_stmt_4570 <=> (branch_block_stmt_3035/bb_26_bb_28_PhiReq/phi_stmt_4570/phi_stmt_4570_req branch_block_stmt_3035/bb_27_bb_28_PhiReq/phi_stmt_4570/phi_stmt_4570_req) (branch_block_stmt_3035/merge_stmt_4569_PhiAck/phi_stmt_4570_ack)
  // 		iNsTr_288 := ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_218 ) 
  //  file prog.linked.opt.aa, line 1576
  // ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_218 ) 
  MUX_4582_inst <=> (branch_block_stmt_3035/assign_stmt_4583_to_assign_stmt_4614/MUX_4582_start/req branch_block_stmt_3035/assign_stmt_4583_to_assign_stmt_4614/MUX_4582_complete/req) (branch_block_stmt_3035/assign_stmt_4583_to_assign_stmt_4614/MUX_4582_start/ack branch_block_stmt_3035/assign_stmt_4583_to_assign_stmt_4614/MUX_4582_complete/ack)
  // 		iNsTr_289 := ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_279 ) 
  //  file prog.linked.opt.aa, line 1577
  // ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_279 ) 
  MUX_4589_inst <=> (branch_block_stmt_3035/assign_stmt_4583_to_assign_stmt_4614/MUX_4589_start/req branch_block_stmt_3035/assign_stmt_4583_to_assign_stmt_4614/MUX_4589_complete/req) (branch_block_stmt_3035/assign_stmt_4583_to_assign_stmt_4614/MUX_4589_start/ack branch_block_stmt_3035/assign_stmt_4583_to_assign_stmt_4614/MUX_4589_complete/ack)
  // 		maxDer := iNsTr_289
  //  file prog.linked.opt.aa, line 1578
  // maxDer
  STORE_maxDer_4591_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4583_to_assign_stmt_4614/STORE_maxDer_4591_Sample/STORE_maxDer_4591_Split/split_req) (branch_block_stmt_3035/assign_stmt_4583_to_assign_stmt_4614/STORE_maxDer_4591_Sample/STORE_maxDer_4591_Split/split_ack)
  STORE_maxDer_4591_store_0 <=> (branch_block_stmt_3035/assign_stmt_4583_to_assign_stmt_4614/STORE_maxDer_4591_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4583_to_assign_stmt_4614/STORE_maxDer_4591_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4583_to_assign_stmt_4614/STORE_maxDer_4591_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4583_to_assign_stmt_4614/STORE_maxDer_4591_Update/word_access_complete/word_0/ca)
  // 		iNsTr_291 := ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initBlankx_x1 ) 
  //  file prog.linked.opt.aa, line 1579
  // ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initBlankx_x1 ) 
  MUX_4599_inst <=> (branch_block_stmt_3035/assign_stmt_4583_to_assign_stmt_4614/MUX_4599_start/req branch_block_stmt_3035/assign_stmt_4583_to_assign_stmt_4614/MUX_4599_complete/req) (branch_block_stmt_3035/assign_stmt_4583_to_assign_stmt_4614/MUX_4599_start/ack branch_block_stmt_3035/assign_stmt_4583_to_assign_stmt_4614/MUX_4599_complete/ack)
  // 		iNsTr_292 := ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initMaxx_x1 ) 
  //  file prog.linked.opt.aa, line 1580
  // ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initMaxx_x1 ) 
  MUX_4606_inst <=> (branch_block_stmt_3035/assign_stmt_4583_to_assign_stmt_4614/MUX_4606_start/req branch_block_stmt_3035/assign_stmt_4583_to_assign_stmt_4614/MUX_4606_complete/req) (branch_block_stmt_3035/assign_stmt_4583_to_assign_stmt_4614/MUX_4606_start/ack branch_block_stmt_3035/assign_stmt_4583_to_assign_stmt_4614/MUX_4606_complete/ack)
  // 		iNsTr_293 := ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  rset_countx_x1 ) 
  //  file prog.linked.opt.aa, line 1581
  // ( $mux iNsTr_243 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  rset_countx_x1 ) 
  MUX_4613_inst <=> (branch_block_stmt_3035/assign_stmt_4583_to_assign_stmt_4614/MUX_4613_start/req branch_block_stmt_3035/assign_stmt_4583_to_assign_stmt_4614/MUX_4613_complete/req) (branch_block_stmt_3035/assign_stmt_4583_to_assign_stmt_4614/MUX_4613_start/ack branch_block_stmt_3035/assign_stmt_4583_to_assign_stmt_4614/MUX_4613_complete/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1583
  // ($cast ($uint<32>) iNsTr_287 )
  type_cast_4620_inst <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4617/phi_stmt_4617_sources/type_cast_4620/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4617/phi_stmt_4617_sources/type_cast_4620/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4617/phi_stmt_4617_sources/type_cast_4620/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4617/phi_stmt_4617_sources/type_cast_4620/SplitProtocol/Update/ca)
  phi_stmt_4617 <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4617/phi_stmt_4617_req branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4617/phi_stmt_4617_req branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4617/phi_stmt_4617_req) (branch_block_stmt_3035/merge_stmt_4616_PhiAck/phi_stmt_4617_ack)
  // ($cast ($uint<8>) init8Done_nextx_x1 )
  type_cast_4630_inst <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4627/phi_stmt_4627_sources/type_cast_4630/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4627/phi_stmt_4627_sources/type_cast_4630/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4627/phi_stmt_4627_sources/type_cast_4630/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4627/phi_stmt_4627_sources/type_cast_4630/SplitProtocol/Update/ca)
  // ($cast ($uint<8>) iNsTr_101 )
  type_cast_4632_inst <=> (branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4627/phi_stmt_4627_sources/type_cast_4632/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4627/phi_stmt_4627_sources/type_cast_4632/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4627/phi_stmt_4627_sources/type_cast_4632/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4627/phi_stmt_4627_sources/type_cast_4632/SplitProtocol/Update/ca)
  // ($cast ($uint<8>) iNsTr_101 )
  type_cast_4634_inst <=> (branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4627/phi_stmt_4627_sources/type_cast_4634/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4627/phi_stmt_4627_sources/type_cast_4634/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4627/phi_stmt_4627_sources/type_cast_4634/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4627/phi_stmt_4627_sources/type_cast_4634/SplitProtocol/Update/ca)
  phi_stmt_4627 <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4627/phi_stmt_4627_req branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4627/phi_stmt_4627_req branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4627/phi_stmt_4627_req) (branch_block_stmt_3035/merge_stmt_4616_PhiAck/phi_stmt_4627_ack)
  // ($cast ($uint<32>) iNsTr_216 )
  type_cast_4638_inst <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4635/phi_stmt_4635_sources/type_cast_4638/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4635/phi_stmt_4635_sources/type_cast_4638/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4635/phi_stmt_4635_sources/type_cast_4638/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4635/phi_stmt_4635_sources/type_cast_4638/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) noiseValx_x1 )
  type_cast_4640_inst <=> (branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4635/phi_stmt_4635_sources/type_cast_4640/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4635/phi_stmt_4635_sources/type_cast_4640/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4635/phi_stmt_4635_sources/type_cast_4640/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4635/phi_stmt_4635_sources/type_cast_4640/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) noiseValx_x1 )
  type_cast_4642_inst <=> (branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4635/phi_stmt_4635_sources/type_cast_4642/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4635/phi_stmt_4635_sources/type_cast_4642/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4635/phi_stmt_4635_sources/type_cast_4642/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4635/phi_stmt_4635_sources/type_cast_4642/SplitProtocol/Update/ca)
  phi_stmt_4635 <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4635/phi_stmt_4635_req branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4635/phi_stmt_4635_req branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4635/phi_stmt_4635_req) (branch_block_stmt_3035/merge_stmt_4616_PhiAck/phi_stmt_4635_ack)
  // ($cast ($uint<32>) iNsTr_248 )
  type_cast_4646_inst <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4643/phi_stmt_4643_sources/type_cast_4646/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4643/phi_stmt_4643_sources/type_cast_4646/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4643/phi_stmt_4643_sources/type_cast_4646/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4643/phi_stmt_4643_sources/type_cast_4646/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) rrValx_x1 )
  type_cast_4648_inst <=> (branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4643/phi_stmt_4643_sources/type_cast_4648/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4643/phi_stmt_4643_sources/type_cast_4648/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4643/phi_stmt_4643_sources/type_cast_4648/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4643/phi_stmt_4643_sources/type_cast_4648/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) rrValx_x1 )
  type_cast_4650_inst <=> (branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4643/phi_stmt_4643_sources/type_cast_4650/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4643/phi_stmt_4643_sources/type_cast_4650/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4643/phi_stmt_4643_sources/type_cast_4650/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4643/phi_stmt_4643_sources/type_cast_4650/SplitProtocol/Update/ca)
  phi_stmt_4643 <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4643/phi_stmt_4643_req branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4643/phi_stmt_4643_req branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4643/phi_stmt_4643_req) (branch_block_stmt_3035/merge_stmt_4616_PhiAck/phi_stmt_4643_ack)
  // ($cast ($uint<32>) iNsTr_247 )
  type_cast_4654_inst <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4651/phi_stmt_4651_sources/type_cast_4654/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4651/phi_stmt_4651_sources/type_cast_4654/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4651/phi_stmt_4651_sources/type_cast_4654/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4651/phi_stmt_4651_sources/type_cast_4654/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) qrsValx_x1 )
  type_cast_4656_inst <=> (branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4651/phi_stmt_4651_sources/type_cast_4656/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4651/phi_stmt_4651_sources/type_cast_4656/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4651/phi_stmt_4651_sources/type_cast_4656/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4651/phi_stmt_4651_sources/type_cast_4656/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) qrsValx_x1 )
  type_cast_4658_inst <=> (branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4651/phi_stmt_4651_sources/type_cast_4658/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4651/phi_stmt_4651_sources/type_cast_4658/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4651/phi_stmt_4651_sources/type_cast_4658/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4651/phi_stmt_4651_sources/type_cast_4658/SplitProtocol/Update/ca)
  phi_stmt_4651 <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4651/phi_stmt_4651_req branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4651/phi_stmt_4651_req branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4651/phi_stmt_4651_req) (branch_block_stmt_3035/merge_stmt_4616_PhiAck/phi_stmt_4651_ack)
  // ($cast ($uint<32>) nmeanx_x2 )
  type_cast_4662_inst <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4659/phi_stmt_4659_sources/type_cast_4662/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4659/phi_stmt_4659_sources/type_cast_4662/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4659/phi_stmt_4659_sources/type_cast_4662/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4659/phi_stmt_4659_sources/type_cast_4662/SplitProtocol/Update/ca)
  phi_stmt_4659 <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4659/phi_stmt_4659_req branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4659/phi_stmt_4659_req branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4659/phi_stmt_4659_req) (branch_block_stmt_3035/merge_stmt_4616_PhiAck/phi_stmt_4659_ack)
  // ($cast ($uint<32>) qmeanx_x223 )
  type_cast_4672_inst <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4669/phi_stmt_4669_sources/type_cast_4672/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4669/phi_stmt_4669_sources/type_cast_4672/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4669/phi_stmt_4669_sources/type_cast_4672/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4669/phi_stmt_4669_sources/type_cast_4672/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_107 )
  type_cast_4674_inst <=> (branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4669/phi_stmt_4669_sources/type_cast_4674/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4669/phi_stmt_4669_sources/type_cast_4674/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4669/phi_stmt_4669_sources/type_cast_4674/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4669/phi_stmt_4669_sources/type_cast_4674/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) qmeanx_x1 )
  type_cast_4676_inst <=> (branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4669/phi_stmt_4669_sources/type_cast_4676/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4669/phi_stmt_4669_sources/type_cast_4676/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4669/phi_stmt_4669_sources/type_cast_4676/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4669/phi_stmt_4669_sources/type_cast_4676/SplitProtocol/Update/ca)
  phi_stmt_4669 <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4669/phi_stmt_4669_req branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4669/phi_stmt_4669_req branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4669/phi_stmt_4669_req) (branch_block_stmt_3035/merge_stmt_4616_PhiAck/phi_stmt_4669_ack)
  // ($cast ($uint<32>) iNsTr_220 )
  type_cast_4680_inst <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4677/phi_stmt_4677_sources/type_cast_4680/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4677/phi_stmt_4677_sources/type_cast_4680/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4677/phi_stmt_4677_sources/type_cast_4680/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4677/phi_stmt_4677_sources/type_cast_4680/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) sbLocx_x1 )
  type_cast_4682_inst <=> (branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4677/phi_stmt_4677_sources/type_cast_4682/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4677/phi_stmt_4677_sources/type_cast_4682/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4677/phi_stmt_4677_sources/type_cast_4682/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4677/phi_stmt_4677_sources/type_cast_4682/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) sbLocx_x1 )
  type_cast_4684_inst <=> (branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4677/phi_stmt_4677_sources/type_cast_4684/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4677/phi_stmt_4677_sources/type_cast_4684/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4677/phi_stmt_4677_sources/type_cast_4684/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4677/phi_stmt_4677_sources/type_cast_4684/SplitProtocol/Update/ca)
  phi_stmt_4677 <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4677/phi_stmt_4677_req branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4677/phi_stmt_4677_req branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4677/phi_stmt_4677_req) (branch_block_stmt_3035/merge_stmt_4616_PhiAck/phi_stmt_4677_ack)
  // ($cast ($uint<32>) iNsTr_280 )
  type_cast_4688_inst <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4685/phi_stmt_4685_sources/type_cast_4688/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4685/phi_stmt_4685_sources/type_cast_4688/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4685/phi_stmt_4685_sources/type_cast_4688/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4685/phi_stmt_4685_sources/type_cast_4688/SplitProtocol/Update/ca)
  phi_stmt_4685 <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4685/phi_stmt_4685_req branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4685/phi_stmt_4685_req branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4685/phi_stmt_4685_req) (branch_block_stmt_3035/merge_stmt_4616_PhiAck/phi_stmt_4685_ack)
  // ($cast ($uint<32>) det_threshx_x325 )
  type_cast_4698_inst <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4695/phi_stmt_4695_sources/type_cast_4698/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4695/phi_stmt_4695_sources/type_cast_4698/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4695/phi_stmt_4695_sources/type_cast_4698/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4695/phi_stmt_4695_sources/type_cast_4698/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_111 )
  type_cast_4700_inst <=> (branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4695/phi_stmt_4695_sources/type_cast_4700/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4695/phi_stmt_4695_sources/type_cast_4700/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4695/phi_stmt_4695_sources/type_cast_4700/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4695/phi_stmt_4695_sources/type_cast_4700/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) det_threshx_x1 )
  type_cast_4702_inst <=> (branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4695/phi_stmt_4695_sources/type_cast_4702/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4695/phi_stmt_4695_sources/type_cast_4702/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4695/phi_stmt_4695_sources/type_cast_4702/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4695/phi_stmt_4695_sources/type_cast_4702/SplitProtocol/Update/ca)
  phi_stmt_4695 <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4695/phi_stmt_4695_req branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4695/phi_stmt_4695_req branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4695/phi_stmt_4695_req) (branch_block_stmt_3035/merge_stmt_4616_PhiAck/phi_stmt_4695_ack)
  // ($cast ($uint<32>) iNsTr_292 )
  type_cast_4706_inst <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4703/phi_stmt_4703_sources/type_cast_4706/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4703/phi_stmt_4703_sources/type_cast_4706/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4703/phi_stmt_4703_sources/type_cast_4706/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4703/phi_stmt_4703_sources/type_cast_4706/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_103 )
  type_cast_4708_inst <=> (branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4703/phi_stmt_4703_sources/type_cast_4708/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4703/phi_stmt_4703_sources/type_cast_4708/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4703/phi_stmt_4703_sources/type_cast_4708/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4703/phi_stmt_4703_sources/type_cast_4708/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_103 )
  type_cast_4710_inst <=> (branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4703/phi_stmt_4703_sources/type_cast_4710/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4703/phi_stmt_4703_sources/type_cast_4710/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4703/phi_stmt_4703_sources/type_cast_4710/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4703/phi_stmt_4703_sources/type_cast_4710/SplitProtocol/Update/ca)
  phi_stmt_4703 <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4703/phi_stmt_4703_req branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4703/phi_stmt_4703_req branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4703/phi_stmt_4703_req) (branch_block_stmt_3035/merge_stmt_4616_PhiAck/phi_stmt_4703_ack)
  // ($cast ($uint<32>) iNsTr_293 )
  type_cast_4714_inst <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4711/phi_stmt_4711_sources/type_cast_4714/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4711/phi_stmt_4711_sources/type_cast_4714/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4711/phi_stmt_4711_sources/type_cast_4714/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4711/phi_stmt_4711_sources/type_cast_4714/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) rset_countx_x1 )
  type_cast_4716_inst <=> (branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4711/phi_stmt_4711_sources/type_cast_4716/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4711/phi_stmt_4711_sources/type_cast_4716/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4711/phi_stmt_4711_sources/type_cast_4716/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4711/phi_stmt_4711_sources/type_cast_4716/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) rset_countx_x1 )
  type_cast_4718_inst <=> (branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4711/phi_stmt_4711_sources/type_cast_4718/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4711/phi_stmt_4711_sources/type_cast_4718/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4711/phi_stmt_4711_sources/type_cast_4718/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4711/phi_stmt_4711_sources/type_cast_4718/SplitProtocol/Update/ca)
  phi_stmt_4711 <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4711/phi_stmt_4711_req branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4711/phi_stmt_4711_req branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4711/phi_stmt_4711_req) (branch_block_stmt_3035/merge_stmt_4616_PhiAck/phi_stmt_4711_ack)
  // ($cast ($uint<32>) iNsTr_291 )
  type_cast_4722_inst <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4719/phi_stmt_4719_sources/type_cast_4722/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4719/phi_stmt_4719_sources/type_cast_4722/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4719/phi_stmt_4719_sources/type_cast_4722/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4719/phi_stmt_4719_sources/type_cast_4722/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_93 )
  type_cast_4724_inst <=> (branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4719/phi_stmt_4719_sources/type_cast_4724/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4719/phi_stmt_4719_sources/type_cast_4724/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4719/phi_stmt_4719_sources/type_cast_4724/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4719/phi_stmt_4719_sources/type_cast_4724/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_93 )
  type_cast_4726_inst <=> (branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4719/phi_stmt_4719_sources/type_cast_4726/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4719/phi_stmt_4719_sources/type_cast_4726/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4719/phi_stmt_4719_sources/type_cast_4726/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4719/phi_stmt_4719_sources/type_cast_4726/SplitProtocol/Update/ca)
  phi_stmt_4719 <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4719/phi_stmt_4719_req branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4719/phi_stmt_4719_req branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4719/phi_stmt_4719_req) (branch_block_stmt_3035/merge_stmt_4616_PhiAck/phi_stmt_4719_ack)
  // ($cast ($uint<32>) xx_x7 )
  type_cast_4730_inst <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4727/phi_stmt_4727_sources/type_cast_4730/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4727/phi_stmt_4727_sources/type_cast_4730/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4727/phi_stmt_4727_sources/type_cast_4730/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4727/phi_stmt_4727_sources/type_cast_4730/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_92 )
  type_cast_4732_inst <=> (branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4727/phi_stmt_4727_sources/type_cast_4732/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4727/phi_stmt_4727_sources/type_cast_4732/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4727/phi_stmt_4727_sources/type_cast_4732/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4727/phi_stmt_4727_sources/type_cast_4732/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_92 )
  type_cast_4734_inst <=> (branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4727/phi_stmt_4727_sources/type_cast_4734/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4727/phi_stmt_4727_sources/type_cast_4734/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4727/phi_stmt_4727_sources/type_cast_4734/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4727/phi_stmt_4727_sources/type_cast_4734/SplitProtocol/Update/ca)
  phi_stmt_4727 <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4727/phi_stmt_4727_req branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4727/phi_stmt_4727_req branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4727/phi_stmt_4727_req) (branch_block_stmt_3035/merge_stmt_4616_PhiAck/phi_stmt_4727_ack)
  // ($cast ($uint<32>) qpk_countx_x1 )
  type_cast_4738_inst <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4735/phi_stmt_4735_sources/type_cast_4738/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4735/phi_stmt_4735_sources/type_cast_4738/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4735/phi_stmt_4735_sources/type_cast_4738/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4735/phi_stmt_4735_sources/type_cast_4738/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_98 )
  type_cast_4740_inst <=> (branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4735/phi_stmt_4735_sources/type_cast_4740/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4735/phi_stmt_4735_sources/type_cast_4740/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4735/phi_stmt_4735_sources/type_cast_4740/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4735/phi_stmt_4735_sources/type_cast_4740/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_98 )
  type_cast_4742_inst <=> (branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4735/phi_stmt_4735_sources/type_cast_4742/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4735/phi_stmt_4735_sources/type_cast_4742/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4735/phi_stmt_4735_sources/type_cast_4742/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4735/phi_stmt_4735_sources/type_cast_4742/SplitProtocol/Update/ca)
  phi_stmt_4735 <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4735/phi_stmt_4735_req branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4735/phi_stmt_4735_req branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4735/phi_stmt_4735_req) (branch_block_stmt_3035/merge_stmt_4616_PhiAck/phi_stmt_4735_ack)
  // ($cast ($uint<32>) iNsTr_288 )
  type_cast_4746_inst <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4743/phi_stmt_4743_sources/type_cast_4746/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4743/phi_stmt_4743_sources/type_cast_4746/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4743/phi_stmt_4743_sources/type_cast_4746/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4743/phi_stmt_4743_sources/type_cast_4746/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) sbPeakx_x1 )
  type_cast_4748_inst <=> (branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4743/phi_stmt_4743_sources/type_cast_4748/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4743/phi_stmt_4743_sources/type_cast_4748/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4743/phi_stmt_4743_sources/type_cast_4748/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4743/phi_stmt_4743_sources/type_cast_4748/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) sbPeakx_x1 )
  type_cast_4750_inst <=> (branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4743/phi_stmt_4743_sources/type_cast_4750/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4743/phi_stmt_4743_sources/type_cast_4750/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4743/phi_stmt_4743_sources/type_cast_4750/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4743/phi_stmt_4743_sources/type_cast_4750/SplitProtocol/Update/ca)
  phi_stmt_4743 <=> (branch_block_stmt_3035/bb_28_bb_29_PhiReq/phi_stmt_4743/phi_stmt_4743_req branch_block_stmt_3035/bb_14_bb_29_PhiReq/phi_stmt_4743/phi_stmt_4743_req branch_block_stmt_3035/bb_13_bb_29_PhiReq/phi_stmt_4743/phi_stmt_4743_req) (branch_block_stmt_3035/merge_stmt_4616_PhiAck/phi_stmt_4743_ack)
  // 		iNsTr_113 := (init8Done_nextx_x0 == ($bitcast ($uint<8>) _b00000000  ))
  //  file prog.linked.opt.aa, line 1601
  // (init8Done_nextx_x0 == ($bitcast ($uint<8>) _b00000000  ))
  EQ_u8_u1_4756_inst <=> (branch_block_stmt_3035/assign_stmt_4757/EQ_u8_u1_4756_Sample/rr branch_block_stmt_3035/assign_stmt_4757/EQ_u8_u1_4756_Update/cr) (branch_block_stmt_3035/assign_stmt_4757/EQ_u8_u1_4756_Sample/ra branch_block_stmt_3035/assign_stmt_4757/EQ_u8_u1_4756_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1602
  if_stmt_4758_branch <=> (branch_block_stmt_3035/if_stmt_4758_eval_test/branch_req) (branch_block_stmt_3035/if_stmt_4758_else_link/else_choice_transition branch_block_stmt_3035/if_stmt_4758_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1607
  // 		iNsTr_132 := (initBlankx_x0 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 1609
  // (initBlankx_x0 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_4769_inst <=> (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/ADD_u32_u32_4769_Sample/rr branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/ADD_u32_u32_4769_Update/cr) (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/ADD_u32_u32_4769_Sample/ra branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/ADD_u32_u32_4769_Update/ca)
  // 		iNsTr_133 := (iNsTr_132 == ($bitcast ($uint<32>) _b00000000000000000000000011001000  ))
  //  file prog.linked.opt.aa, line 1610
  // (iNsTr_132 == ($bitcast ($uint<32>) _b00000000000000000000000011001000  ))
  EQ_u32_u1_4775_inst <=> (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/EQ_u32_u1_4775_Sample/rr branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/EQ_u32_u1_4775_Update/cr) (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/EQ_u32_u1_4775_Sample/ra branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/EQ_u32_u1_4775_Update/ca)
  // 		iNsTr_134 := ( $mux iNsTr_133 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_132 ) 
  //  file prog.linked.opt.aa, line 1611
  // ( $mux iNsTr_133 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_132 ) 
  MUX_4782_inst <=> (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/MUX_4782_start/req branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/MUX_4782_complete/req) (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/MUX_4782_start/ack branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/MUX_4782_complete/ack)
  // 		iNsTr_135 := RSETbuff[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][rset_countx_x0]
  //  file prog.linked.opt.aa, line 1612
  // RSETbuff[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][rset_countx_x0]
  array_obj_ref_4788_index_1_resize <=> (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/array_obj_ref_4788_index_resize_1/index_resize_req) (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/array_obj_ref_4788_index_resize_1/index_resize_ack)
  array_obj_ref_4788_index_1_rename <=> (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/array_obj_ref_4788_index_scale_1/scale_rename_req) (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/array_obj_ref_4788_index_scale_1/scale_rename_ack)
  array_obj_ref_4788_index_offset <=> (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/array_obj_ref_4788_final_index_sum_regn_Sample/req branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/array_obj_ref_4788_final_index_sum_regn_Update/req) (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/array_obj_ref_4788_final_index_sum_regn_Sample/ack branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/array_obj_ref_4788_final_index_sum_regn_Update/ack)
  array_obj_ref_4788_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/array_obj_ref_4788_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/array_obj_ref_4788_base_plus_offset/sum_rename_ack)
  array_obj_ref_4788_final_reg <=> (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/array_obj_ref_4788_request/req branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/array_obj_ref_4788_complete/req) (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/array_obj_ref_4788_request/ack branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/array_obj_ref_4788_complete/ack)
  // 		->(iNsTr_135) := initMaxx_x0
  //  file prog.linked.opt.aa, line 1613
  ptr_deref_4791_base_resize <=> (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/ptr_deref_4791_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/ptr_deref_4791_base_addr_resize/base_resize_ack)
  ptr_deref_4791_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/ptr_deref_4791_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/ptr_deref_4791_base_plus_offset/sum_rename_ack)
  ptr_deref_4791_addr_0 <=> (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/ptr_deref_4791_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/ptr_deref_4791_word_addrgen/root_register_ack)
  ptr_deref_4791_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/ptr_deref_4791_Sample/ptr_deref_4791_Split/split_req) (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/ptr_deref_4791_Sample/ptr_deref_4791_Split/split_ack)
  ptr_deref_4791_store_0 <=> (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/ptr_deref_4791_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/ptr_deref_4791_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/ptr_deref_4791_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/ptr_deref_4791_Update/word_access_complete/word_0/ca)
  // 		iNsTr_137 := ( $mux iNsTr_133 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initMaxx_x0 ) 
  //  file prog.linked.opt.aa, line 1614
  // ( $mux iNsTr_133 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  initMaxx_x0 ) 
  MUX_4799_inst <=> (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/MUX_4799_start/req branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/MUX_4799_complete/req) (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/MUX_4799_start/ack branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/MUX_4799_complete/ack)
  // 		iNsTr_138 := ($cast ($uint<32>) iNsTr_133 )
  //  file prog.linked.opt.aa, line 1615
  // ($cast ($uint<32>) iNsTr_133 )
  type_cast_4803_inst <=> (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/type_cast_4803_Sample/rr branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/type_cast_4803_Update/cr) (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/type_cast_4803_Sample/ra branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/type_cast_4803_Update/ca)
  // 		iNsTr_139 := (iNsTr_138 + rset_countx_x0)
  //  file prog.linked.opt.aa, line 1616
  // (iNsTr_138 + rset_countx_x0)
  ADD_u32_u32_4808_inst <=> (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/ADD_u32_u32_4808_Sample/rr branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/ADD_u32_u32_4808_Update/cr) (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/ADD_u32_u32_4808_Sample/ra branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/ADD_u32_u32_4808_Update/ca)
  // 		iNsTr_140 := (iNsTr_139 == ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
  //  file prog.linked.opt.aa, line 1617
  // (iNsTr_139 == ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
  EQ_u32_u1_4814_inst <=> (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/EQ_u32_u1_4814_Sample/rr branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/EQ_u32_u1_4814_Update/cr) (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/EQ_u32_u1_4814_Sample/ra branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/EQ_u32_u1_4814_Update/ca)
  // 		iNsTr_141 := ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  nmeanx_x0 ) 
  //  file prog.linked.opt.aa, line 1618
  // ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  nmeanx_x0 ) 
  MUX_4821_inst <=> (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/MUX_4821_start/req branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/MUX_4821_complete/req) (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/MUX_4821_start/ack branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/MUX_4821_complete/ack)
  // 		iNsTr_142 := ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000101001010  )  sb_countx_x0 ) 
  //  file prog.linked.opt.aa, line 1619
  // ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000101001010  )  sb_countx_x0 ) 
  MUX_4828_inst <=> (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/MUX_4828_start/req branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/MUX_4828_complete/req) (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/MUX_4828_start/ack branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/MUX_4828_complete/ack)
  // 		iNsTr_143 := ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_134 ) 
  //  file prog.linked.opt.aa, line 1620
  // ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_134 ) 
  MUX_4835_inst <=> (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/MUX_4835_start/req branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/MUX_4835_complete/req) (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/MUX_4835_start/ack branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/MUX_4835_complete/ack)
  // 		iNsTr_144 := ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_139 ) 
  //  file prog.linked.opt.aa, line 1621
  // ( $mux iNsTr_140 ($bitcast ($uint<32>) _b00000000000000000000000000000000  )  iNsTr_139 ) 
  MUX_4842_inst <=> (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/MUX_4842_start/req branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/MUX_4842_complete/req) (branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/MUX_4842_start/ack branch_block_stmt_3035/assign_stmt_4770_to_assign_stmt_4843/MUX_4842_complete/ack)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1622
  if_stmt_4844_branch <=> (branch_block_stmt_3035/if_stmt_4844_eval_test/branch_req) (branch_block_stmt_3035/if_stmt_4844_else_link/else_choice_transition branch_block_stmt_3035/if_stmt_4844_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1627
  // 		iNsTr_153 := ->(scevgep)
  //  file prog.linked.opt.aa, line 1630
  ptr_deref_4860_base_resize <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4860_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4860_base_addr_resize/base_resize_ack)
  ptr_deref_4860_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4860_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4860_base_plus_offset/sum_rename_ack)
  ptr_deref_4860_addr_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4860_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4860_word_addrgen/root_register_ack)
  ptr_deref_4860_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4860_Update/ptr_deref_4860_Merge/merge_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4860_Update/ptr_deref_4860_Merge/merge_ack)
  ptr_deref_4860_load_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4860_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4860_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4860_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4860_Update/word_access_complete/word_0/ca)
  // 		->(iNsTr_154) := iNsTr_153
  //  file prog.linked.opt.aa, line 1632
  ptr_deref_4869_base_resize <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4869_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4869_base_addr_resize/base_resize_ack)
  ptr_deref_4869_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4869_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4869_base_plus_offset/sum_rename_ack)
  ptr_deref_4869_addr_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4869_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4869_word_addrgen/root_register_ack)
  ptr_deref_4869_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4869_Sample/ptr_deref_4869_Split/split_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4869_Sample/ptr_deref_4869_Split/split_ack)
  ptr_deref_4869_store_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4869_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4869_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4869_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4869_Update/word_access_complete/word_0/ca)
  // 		->(iNsTr_156) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 1634
  ptr_deref_4879_base_resize <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4879_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4879_base_addr_resize/base_resize_ack)
  ptr_deref_4879_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4879_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4879_base_plus_offset/sum_rename_ack)
  ptr_deref_4879_addr_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4879_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4879_word_addrgen/root_register_ack)
  ptr_deref_4879_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4879_Sample/ptr_deref_4879_Split/split_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4879_Sample/ptr_deref_4879_Split/split_ack)
  ptr_deref_4879_store_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4879_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4879_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4879_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4879_Update/word_access_complete/word_0/ca)
  // 		iNsTr_158 := ->(scevgepx_x1)
  //  file prog.linked.opt.aa, line 1636
  ptr_deref_4892_base_resize <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4892_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4892_base_addr_resize/base_resize_ack)
  ptr_deref_4892_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4892_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4892_base_plus_offset/sum_rename_ack)
  ptr_deref_4892_addr_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4892_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4892_word_addrgen/root_register_ack)
  ptr_deref_4892_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4892_Update/ptr_deref_4892_Merge/merge_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4892_Update/ptr_deref_4892_Merge/merge_ack)
  ptr_deref_4892_load_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4892_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4892_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4892_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4892_Update/word_access_complete/word_0/ca)
  // 		->(iNsTr_159) := iNsTr_158
  //  file prog.linked.opt.aa, line 1638
  ptr_deref_4901_base_resize <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4901_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4901_base_addr_resize/base_resize_ack)
  ptr_deref_4901_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4901_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4901_base_plus_offset/sum_rename_ack)
  ptr_deref_4901_addr_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4901_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4901_word_addrgen/root_register_ack)
  ptr_deref_4901_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4901_Sample/ptr_deref_4901_Split/split_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4901_Sample/ptr_deref_4901_Split/split_ack)
  ptr_deref_4901_store_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4901_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4901_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4901_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4901_Update/word_access_complete/word_0/ca)
  // 		->(iNsTr_161) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 1640
  ptr_deref_4911_base_resize <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4911_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4911_base_addr_resize/base_resize_ack)
  ptr_deref_4911_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4911_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4911_base_plus_offset/sum_rename_ack)
  ptr_deref_4911_addr_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4911_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4911_word_addrgen/root_register_ack)
  ptr_deref_4911_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4911_Sample/ptr_deref_4911_Split/split_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4911_Sample/ptr_deref_4911_Split/split_ack)
  ptr_deref_4911_store_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4911_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4911_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4911_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4911_Update/word_access_complete/word_0/ca)
  // 		iNsTr_163 := ->(scevgepx_x2)
  //  file prog.linked.opt.aa, line 1642
  ptr_deref_4924_base_resize <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4924_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4924_base_addr_resize/base_resize_ack)
  ptr_deref_4924_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4924_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4924_base_plus_offset/sum_rename_ack)
  ptr_deref_4924_addr_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4924_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4924_word_addrgen/root_register_ack)
  ptr_deref_4924_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4924_Update/ptr_deref_4924_Merge/merge_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4924_Update/ptr_deref_4924_Merge/merge_ack)
  ptr_deref_4924_load_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4924_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4924_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4924_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4924_Update/word_access_complete/word_0/ca)
  // 		->(iNsTr_164) := iNsTr_163
  //  file prog.linked.opt.aa, line 1644
  ptr_deref_4933_base_resize <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4933_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4933_base_addr_resize/base_resize_ack)
  ptr_deref_4933_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4933_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4933_base_plus_offset/sum_rename_ack)
  ptr_deref_4933_addr_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4933_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4933_word_addrgen/root_register_ack)
  ptr_deref_4933_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4933_Sample/ptr_deref_4933_Split/split_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4933_Sample/ptr_deref_4933_Split/split_ack)
  ptr_deref_4933_store_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4933_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4933_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4933_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4933_Update/word_access_complete/word_0/ca)
  // 		->(iNsTr_166) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 1646
  ptr_deref_4943_base_resize <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4943_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4943_base_addr_resize/base_resize_ack)
  ptr_deref_4943_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4943_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4943_base_plus_offset/sum_rename_ack)
  ptr_deref_4943_addr_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4943_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4943_word_addrgen/root_register_ack)
  ptr_deref_4943_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4943_Sample/ptr_deref_4943_Split/split_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4943_Sample/ptr_deref_4943_Split/split_ack)
  ptr_deref_4943_store_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4943_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4943_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4943_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4943_Update/word_access_complete/word_0/ca)
  // 		iNsTr_168 := ->(scevgepx_x3)
  //  file prog.linked.opt.aa, line 1648
  ptr_deref_4956_base_resize <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4956_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4956_base_addr_resize/base_resize_ack)
  ptr_deref_4956_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4956_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4956_base_plus_offset/sum_rename_ack)
  ptr_deref_4956_addr_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4956_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4956_word_addrgen/root_register_ack)
  ptr_deref_4956_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4956_Update/ptr_deref_4956_Merge/merge_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4956_Update/ptr_deref_4956_Merge/merge_ack)
  ptr_deref_4956_load_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4956_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4956_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4956_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4956_Update/word_access_complete/word_0/ca)
  // 		->(iNsTr_169) := iNsTr_168
  //  file prog.linked.opt.aa, line 1650
  ptr_deref_4965_base_resize <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4965_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4965_base_addr_resize/base_resize_ack)
  ptr_deref_4965_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4965_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4965_base_plus_offset/sum_rename_ack)
  ptr_deref_4965_addr_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4965_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4965_word_addrgen/root_register_ack)
  ptr_deref_4965_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4965_Sample/ptr_deref_4965_Split/split_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4965_Sample/ptr_deref_4965_Split/split_ack)
  ptr_deref_4965_store_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4965_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4965_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4965_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4965_Update/word_access_complete/word_0/ca)
  // 		->(iNsTr_171) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 1652
  ptr_deref_4975_base_resize <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4975_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4975_base_addr_resize/base_resize_ack)
  ptr_deref_4975_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4975_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4975_base_plus_offset/sum_rename_ack)
  ptr_deref_4975_addr_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4975_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4975_word_addrgen/root_register_ack)
  ptr_deref_4975_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4975_Sample/ptr_deref_4975_Split/split_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4975_Sample/ptr_deref_4975_Split/split_ack)
  ptr_deref_4975_store_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4975_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4975_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4975_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4975_Update/word_access_complete/word_0/ca)
  // 		iNsTr_173 := ->(scevgepx_x4)
  //  file prog.linked.opt.aa, line 1654
  ptr_deref_4988_base_resize <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4988_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4988_base_addr_resize/base_resize_ack)
  ptr_deref_4988_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4988_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4988_base_plus_offset/sum_rename_ack)
  ptr_deref_4988_addr_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4988_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4988_word_addrgen/root_register_ack)
  ptr_deref_4988_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4988_Update/ptr_deref_4988_Merge/merge_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4988_Update/ptr_deref_4988_Merge/merge_ack)
  ptr_deref_4988_load_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4988_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4988_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4988_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4988_Update/word_access_complete/word_0/ca)
  // 		->(iNsTr_174) := iNsTr_173
  //  file prog.linked.opt.aa, line 1656
  ptr_deref_4997_base_resize <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4997_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4997_base_addr_resize/base_resize_ack)
  ptr_deref_4997_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4997_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4997_base_plus_offset/sum_rename_ack)
  ptr_deref_4997_addr_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4997_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4997_word_addrgen/root_register_ack)
  ptr_deref_4997_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4997_Sample/ptr_deref_4997_Split/split_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4997_Sample/ptr_deref_4997_Split/split_ack)
  ptr_deref_4997_store_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4997_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4997_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4997_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_4997_Update/word_access_complete/word_0/ca)
  // 		->(iNsTr_176) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 1658
  ptr_deref_5007_base_resize <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5007_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5007_base_addr_resize/base_resize_ack)
  ptr_deref_5007_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5007_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5007_base_plus_offset/sum_rename_ack)
  ptr_deref_5007_addr_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5007_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5007_word_addrgen/root_register_ack)
  ptr_deref_5007_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5007_Sample/ptr_deref_5007_Split/split_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5007_Sample/ptr_deref_5007_Split/split_ack)
  ptr_deref_5007_store_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5007_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5007_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5007_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5007_Update/word_access_complete/word_0/ca)
  // 		iNsTr_178 := ->(scevgepx_x5)
  //  file prog.linked.opt.aa, line 1660
  ptr_deref_5020_base_resize <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5020_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5020_base_addr_resize/base_resize_ack)
  ptr_deref_5020_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5020_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5020_base_plus_offset/sum_rename_ack)
  ptr_deref_5020_addr_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5020_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5020_word_addrgen/root_register_ack)
  ptr_deref_5020_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5020_Update/ptr_deref_5020_Merge/merge_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5020_Update/ptr_deref_5020_Merge/merge_ack)
  ptr_deref_5020_load_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5020_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5020_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5020_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5020_Update/word_access_complete/word_0/ca)
  // 		->(iNsTr_179) := iNsTr_178
  //  file prog.linked.opt.aa, line 1662
  ptr_deref_5029_base_resize <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5029_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5029_base_addr_resize/base_resize_ack)
  ptr_deref_5029_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5029_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5029_base_plus_offset/sum_rename_ack)
  ptr_deref_5029_addr_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5029_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5029_word_addrgen/root_register_ack)
  ptr_deref_5029_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5029_Sample/ptr_deref_5029_Split/split_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5029_Sample/ptr_deref_5029_Split/split_ack)
  ptr_deref_5029_store_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5029_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5029_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5029_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5029_Update/word_access_complete/word_0/ca)
  // 		->(iNsTr_181) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 1664
  ptr_deref_5039_base_resize <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5039_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5039_base_addr_resize/base_resize_ack)
  ptr_deref_5039_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5039_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5039_base_plus_offset/sum_rename_ack)
  ptr_deref_5039_addr_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5039_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5039_word_addrgen/root_register_ack)
  ptr_deref_5039_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5039_Sample/ptr_deref_5039_Split/split_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5039_Sample/ptr_deref_5039_Split/split_ack)
  ptr_deref_5039_store_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5039_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5039_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5039_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5039_Update/word_access_complete/word_0/ca)
  // 		iNsTr_183 := ->(scevgepx_x6)
  //  file prog.linked.opt.aa, line 1666
  ptr_deref_5052_base_resize <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5052_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5052_base_addr_resize/base_resize_ack)
  ptr_deref_5052_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5052_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5052_base_plus_offset/sum_rename_ack)
  ptr_deref_5052_addr_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5052_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5052_word_addrgen/root_register_ack)
  ptr_deref_5052_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5052_Update/ptr_deref_5052_Merge/merge_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5052_Update/ptr_deref_5052_Merge/merge_ack)
  ptr_deref_5052_load_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5052_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5052_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5052_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5052_Update/word_access_complete/word_0/ca)
  // 		->(iNsTr_184) := iNsTr_183
  //  file prog.linked.opt.aa, line 1668
  ptr_deref_5061_base_resize <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5061_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5061_base_addr_resize/base_resize_ack)
  ptr_deref_5061_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5061_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5061_base_plus_offset/sum_rename_ack)
  ptr_deref_5061_addr_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5061_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5061_word_addrgen/root_register_ack)
  ptr_deref_5061_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5061_Sample/ptr_deref_5061_Split/split_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5061_Sample/ptr_deref_5061_Split/split_ack)
  ptr_deref_5061_store_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5061_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5061_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5061_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5061_Update/word_access_complete/word_0/ca)
  // 		->(iNsTr_186) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 1670
  ptr_deref_5071_base_resize <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5071_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5071_base_addr_resize/base_resize_ack)
  ptr_deref_5071_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5071_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5071_base_plus_offset/sum_rename_ack)
  ptr_deref_5071_addr_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5071_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5071_word_addrgen/root_register_ack)
  ptr_deref_5071_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5071_Sample/ptr_deref_5071_Split/split_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5071_Sample/ptr_deref_5071_Split/split_ack)
  ptr_deref_5071_store_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5071_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5071_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5071_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5071_Update/word_access_complete/word_0/ca)
  // 		iNsTr_188 := ->(scevgepx_x7)
  //  file prog.linked.opt.aa, line 1672
  ptr_deref_5084_base_resize <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5084_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5084_base_addr_resize/base_resize_ack)
  ptr_deref_5084_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5084_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5084_base_plus_offset/sum_rename_ack)
  ptr_deref_5084_addr_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5084_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5084_word_addrgen/root_register_ack)
  ptr_deref_5084_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5084_Update/ptr_deref_5084_Merge/merge_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5084_Update/ptr_deref_5084_Merge/merge_ack)
  ptr_deref_5084_load_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5084_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5084_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5084_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5084_Update/word_access_complete/word_0/ca)
  // 		->(iNsTr_189) := iNsTr_188
  //  file prog.linked.opt.aa, line 1674
  ptr_deref_5093_base_resize <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5093_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5093_base_addr_resize/base_resize_ack)
  ptr_deref_5093_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5093_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5093_base_plus_offset/sum_rename_ack)
  ptr_deref_5093_addr_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5093_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5093_word_addrgen/root_register_ack)
  ptr_deref_5093_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5093_Sample/ptr_deref_5093_Split/split_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5093_Sample/ptr_deref_5093_Split/split_ack)
  ptr_deref_5093_store_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5093_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5093_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5093_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5093_Update/word_access_complete/word_0/ca)
  // 		->(iNsTr_191) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
  //  file prog.linked.opt.aa, line 1676
  ptr_deref_5103_base_resize <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5103_base_addr_resize/base_resize_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5103_base_addr_resize/base_resize_ack)
  ptr_deref_5103_root_address_inst <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5103_base_plus_offset/sum_rename_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5103_base_plus_offset/sum_rename_ack)
  ptr_deref_5103_addr_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5103_word_addrgen/root_register_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5103_word_addrgen/root_register_ack)
  ptr_deref_5103_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5103_Sample/ptr_deref_5103_Split/split_req) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5103_Sample/ptr_deref_5103_Split/split_ack)
  ptr_deref_5103_store_0 <=> (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5103_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5103_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5103_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_4857_to_assign_stmt_5112/ptr_deref_5103_Update/word_access_complete/word_0/ca)
  // 		$call meanCalc (iNsTr_193 ) (iNsTr_194 ) 
  //  file prog.linked.opt.aa, line 1678
  call_stmt_5115_call <=> (branch_block_stmt_3035/call_stmt_5115/call_stmt_5115_Sample/crr branch_block_stmt_3035/call_stmt_5115/call_stmt_5115_Update/ccr) (branch_block_stmt_3035/call_stmt_5115/call_stmt_5115_Sample/cra branch_block_stmt_3035/call_stmt_5115/call_stmt_5115_Update/cca)
  // 		iNsTr_195 := (iNsTr_194 - iNsTr_141)
  //  file prog.linked.opt.aa, line 1679
  // (iNsTr_194 - iNsTr_141)
  SUB_u32_u32_5119_inst <=> (branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/SUB_u32_u32_5119_Sample/rr branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/SUB_u32_u32_5119_Update/cr) (branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/SUB_u32_u32_5119_Sample/ra branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/SUB_u32_u32_5119_Update/ca)
  // 		iNsTr_196 := ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_195 ) )
  //  file prog.linked.opt.aa, line 1680
  // ($bitcast ($int<64>) iNsTr_195 )
  type_cast_5123_inst <=> (branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/type_cast_5123_Sample/rr branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/type_cast_5123_Update/cr) (branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/type_cast_5123_Sample/ra branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/type_cast_5123_Update/ca)
  // ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_195 ) )
  type_cast_5124_inst <=> (branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/type_cast_5124_Sample/rr branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/type_cast_5124_Update/cr) (branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/type_cast_5124_Sample/ra branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/type_cast_5124_Update/ca)
  // 		iNsTr_197 := threshold
  //  file prog.linked.opt.aa, line 1681
  // threshold
  LOAD_threshold_5127_gather_scatter <=> (branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/LOAD_threshold_5127_Update/LOAD_threshold_5127_Merge/merge_req) (branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/LOAD_threshold_5127_Update/LOAD_threshold_5127_Merge/merge_ack)
  LOAD_threshold_5127_load_0 <=> (branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/LOAD_threshold_5127_Sample/word_access_start/word_0/rr branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/LOAD_threshold_5127_Update/word_access_complete/word_0/cr) (branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/LOAD_threshold_5127_Sample/word_access_start/word_0/ra branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/LOAD_threshold_5127_Update/word_access_complete/word_0/ca)
  // 		iNsTr_198 := (iNsTr_197 * iNsTr_196)
  //  file prog.linked.opt.aa, line 1682
  // (iNsTr_197 * iNsTr_196)
  MUL_f64_f64_5132_inst <=> (branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/MUL_f64_f64_5132_Sample/rr branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/MUL_f64_f64_5132_Update/cr) (branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/MUL_f64_f64_5132_Sample/ra branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/MUL_f64_f64_5132_Update/ca)
  // 		iNsTr_199 := ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_198 ) )
  //  file prog.linked.opt.aa, line 1683
  // ($cast ($int<32>) iNsTr_198 )
  type_cast_5136_inst <=> (branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/type_cast_5136_Sample/rr branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/type_cast_5136_Update/cr) (branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/type_cast_5136_Sample/ra branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/type_cast_5136_Update/ca)
  // ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_198 ) )
  type_cast_5137_inst <=> (branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/type_cast_5137_Sample/rr branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/type_cast_5137_Update/cr) (branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/type_cast_5137_Sample/ra branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/type_cast_5137_Update/ca)
  // 		iNsTr_200 := (iNsTr_199 + iNsTr_141)
  //  file prog.linked.opt.aa, line 1684
  // (iNsTr_199 + iNsTr_141)
  ADD_u32_u32_5142_inst <=> (branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/ADD_u32_u32_5142_Sample/rr branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/ADD_u32_u32_5142_Update/cr) (branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/ADD_u32_u32_5142_Sample/ra branch_block_stmt_3035/assign_stmt_5120_to_assign_stmt_5143/ADD_u32_u32_5142_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1686
  // ($cast ($uint<32>) iNsTr_194 )
  type_cast_5149_inst <=> (branch_block_stmt_3035/bb_31_bb_32_PhiReq/phi_stmt_5146/phi_stmt_5146_sources/type_cast_5149/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_31_bb_32_PhiReq/phi_stmt_5146/phi_stmt_5146_sources/type_cast_5149/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_31_bb_32_PhiReq/phi_stmt_5146/phi_stmt_5146_sources/type_cast_5149/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_31_bb_32_PhiReq/phi_stmt_5146/phi_stmt_5146_sources/type_cast_5149/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) qmeanx_x0 )
  type_cast_5151_inst <=> (branch_block_stmt_3035/bb_30_bb_32_PhiReq/phi_stmt_5146/phi_stmt_5146_sources/type_cast_5151/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_30_bb_32_PhiReq/phi_stmt_5146/phi_stmt_5146_sources/type_cast_5151/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_30_bb_32_PhiReq/phi_stmt_5146/phi_stmt_5146_sources/type_cast_5151/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_30_bb_32_PhiReq/phi_stmt_5146/phi_stmt_5146_sources/type_cast_5151/SplitProtocol/Update/ca)
  phi_stmt_5146 <=> (branch_block_stmt_3035/bb_31_bb_32_PhiReq/phi_stmt_5146/phi_stmt_5146_req branch_block_stmt_3035/bb_30_bb_32_PhiReq/phi_stmt_5146/phi_stmt_5146_req) (branch_block_stmt_3035/merge_stmt_5145_PhiAck/phi_stmt_5146_ack)
  // ($cast ($uint<32>) iNsTr_200 )
  type_cast_5155_inst <=> (branch_block_stmt_3035/bb_31_bb_32_PhiReq/phi_stmt_5152/phi_stmt_5152_sources/type_cast_5155/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_31_bb_32_PhiReq/phi_stmt_5152/phi_stmt_5152_sources/type_cast_5155/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_31_bb_32_PhiReq/phi_stmt_5152/phi_stmt_5152_sources/type_cast_5155/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_31_bb_32_PhiReq/phi_stmt_5152/phi_stmt_5152_sources/type_cast_5155/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) det_threshx_x0 )
  type_cast_5157_inst <=> (branch_block_stmt_3035/bb_30_bb_32_PhiReq/phi_stmt_5152/phi_stmt_5152_sources/type_cast_5157/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_30_bb_32_PhiReq/phi_stmt_5152/phi_stmt_5152_sources/type_cast_5157/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_30_bb_32_PhiReq/phi_stmt_5152/phi_stmt_5152_sources/type_cast_5157/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_30_bb_32_PhiReq/phi_stmt_5152/phi_stmt_5152_sources/type_cast_5157/SplitProtocol/Update/ca)
  phi_stmt_5152 <=> (branch_block_stmt_3035/bb_31_bb_32_PhiReq/phi_stmt_5152/phi_stmt_5152_req branch_block_stmt_3035/bb_30_bb_32_PhiReq/phi_stmt_5152/phi_stmt_5152_req) (branch_block_stmt_3035/merge_stmt_5145_PhiAck/phi_stmt_5152_ack)
  // 		iNsTr_202 := (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) iNsTr_137 ))
  //  file prog.linked.opt.aa, line 1690
  // (($bitcast ($int<32>) iNsTr_68 ) > ($bitcast ($int<32>) iNsTr_137 ))
  // ($bitcast ($int<32>) iNsTr_68 )
  type_cast_5161_inst <=> (branch_block_stmt_3035/assign_stmt_5165_to_assign_stmt_5171/type_cast_5161_Sample/rr branch_block_stmt_3035/assign_stmt_5165_to_assign_stmt_5171/type_cast_5161_Update/cr) (branch_block_stmt_3035/assign_stmt_5165_to_assign_stmt_5171/type_cast_5161_Sample/ra branch_block_stmt_3035/assign_stmt_5165_to_assign_stmt_5171/type_cast_5161_Update/ca)
  // ($bitcast ($int<32>) iNsTr_137 )
  type_cast_5163_inst <=> (branch_block_stmt_3035/assign_stmt_5165_to_assign_stmt_5171/type_cast_5163_Sample/rr branch_block_stmt_3035/assign_stmt_5165_to_assign_stmt_5171/type_cast_5163_Update/cr) (branch_block_stmt_3035/assign_stmt_5165_to_assign_stmt_5171/type_cast_5163_Sample/ra branch_block_stmt_3035/assign_stmt_5165_to_assign_stmt_5171/type_cast_5163_Update/ca)
  SGT_i32_u1_5164_inst <=> (branch_block_stmt_3035/assign_stmt_5165_to_assign_stmt_5171/SGT_i32_u1_5164_Sample/rr branch_block_stmt_3035/assign_stmt_5165_to_assign_stmt_5171/SGT_i32_u1_5164_Update/cr) (branch_block_stmt_3035/assign_stmt_5165_to_assign_stmt_5171/SGT_i32_u1_5164_Sample/ra branch_block_stmt_3035/assign_stmt_5165_to_assign_stmt_5171/SGT_i32_u1_5164_Update/ca)
  // 		iNsTr_203 := ( $mux iNsTr_202 iNsTr_68  iNsTr_137 ) 
  //  file prog.linked.opt.aa, line 1691
  // ( $mux iNsTr_202 iNsTr_68  iNsTr_137 ) 
  MUX_5170_inst <=> (branch_block_stmt_3035/assign_stmt_5165_to_assign_stmt_5171/MUX_5170_start/req branch_block_stmt_3035/assign_stmt_5165_to_assign_stmt_5171/MUX_5170_complete/req) (branch_block_stmt_3035/assign_stmt_5165_to_assign_stmt_5171/MUX_5170_start/ack branch_block_stmt_3035/assign_stmt_5165_to_assign_stmt_5171/MUX_5170_complete/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1693
  // ($cast ($uint<32>) iNsTr_141 )
  type_cast_5177_inst <=> (branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5174/phi_stmt_5174_sources/type_cast_5177/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5174/phi_stmt_5174_sources/type_cast_5177/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5174/phi_stmt_5174_sources/type_cast_5177/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5174/phi_stmt_5174_sources/type_cast_5177/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) nmeanx_x0 )
  type_cast_5179_inst <=> (branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5174/phi_stmt_5174_sources/type_cast_5179/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5174/phi_stmt_5174_sources/type_cast_5179/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5174/phi_stmt_5174_sources/type_cast_5179/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5174/phi_stmt_5174_sources/type_cast_5179/SplitProtocol/Update/ca)
  phi_stmt_5174 <=> (branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5174/phi_stmt_5174_req branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5174/phi_stmt_5174_req) (branch_block_stmt_3035/merge_stmt_5173_PhiAck/phi_stmt_5174_ack)
  // ($cast ($uint<32>) qmeanx_x3 )
  type_cast_5183_inst <=> (branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5180/phi_stmt_5180_sources/type_cast_5183/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5180/phi_stmt_5180_sources/type_cast_5183/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5180/phi_stmt_5180_sources/type_cast_5183/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5180/phi_stmt_5180_sources/type_cast_5183/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) qmeanx_x0 )
  type_cast_5185_inst <=> (branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5180/phi_stmt_5180_sources/type_cast_5185/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5180/phi_stmt_5180_sources/type_cast_5185/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5180/phi_stmt_5180_sources/type_cast_5185/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5180/phi_stmt_5180_sources/type_cast_5185/SplitProtocol/Update/ca)
  phi_stmt_5180 <=> (branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5180/phi_stmt_5180_req branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5180/phi_stmt_5180_req) (branch_block_stmt_3035/merge_stmt_5173_PhiAck/phi_stmt_5180_ack)
  // ($cast ($uint<32>) iNsTr_142 )
  type_cast_5189_inst <=> (branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5186/phi_stmt_5186_sources/type_cast_5189/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5186/phi_stmt_5186_sources/type_cast_5189/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5186/phi_stmt_5186_sources/type_cast_5189/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5186/phi_stmt_5186_sources/type_cast_5189/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) sb_countx_x0 )
  type_cast_5191_inst <=> (branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5186/phi_stmt_5186_sources/type_cast_5191/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5186/phi_stmt_5186_sources/type_cast_5191/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5186/phi_stmt_5186_sources/type_cast_5191/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5186/phi_stmt_5186_sources/type_cast_5191/SplitProtocol/Update/ca)
  phi_stmt_5186 <=> (branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5186/phi_stmt_5186_req branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5186/phi_stmt_5186_req) (branch_block_stmt_3035/merge_stmt_5173_PhiAck/phi_stmt_5186_ack)
  // ($cast ($uint<32>) det_threshx_x4 )
  type_cast_5195_inst <=> (branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5192/phi_stmt_5192_sources/type_cast_5195/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5192/phi_stmt_5192_sources/type_cast_5195/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5192/phi_stmt_5192_sources/type_cast_5195/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5192/phi_stmt_5192_sources/type_cast_5195/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) det_threshx_x0 )
  type_cast_5197_inst <=> (branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5192/phi_stmt_5192_sources/type_cast_5197/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5192/phi_stmt_5192_sources/type_cast_5197/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5192/phi_stmt_5192_sources/type_cast_5197/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5192/phi_stmt_5192_sources/type_cast_5197/SplitProtocol/Update/ca)
  phi_stmt_5192 <=> (branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5192/phi_stmt_5192_req branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5192/phi_stmt_5192_req) (branch_block_stmt_3035/merge_stmt_5173_PhiAck/phi_stmt_5192_ack)
  // ($cast ($uint<32>) iNsTr_203 )
  type_cast_5201_inst <=> (branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5198/phi_stmt_5198_sources/type_cast_5201/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5198/phi_stmt_5198_sources/type_cast_5201/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5198/phi_stmt_5198_sources/type_cast_5201/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5198/phi_stmt_5198_sources/type_cast_5201/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) initMaxx_x0 )
  type_cast_5203_inst <=> (branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5198/phi_stmt_5198_sources/type_cast_5203/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5198/phi_stmt_5198_sources/type_cast_5203/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5198/phi_stmt_5198_sources/type_cast_5203/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5198/phi_stmt_5198_sources/type_cast_5203/SplitProtocol/Update/ca)
  phi_stmt_5198 <=> (branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5198/phi_stmt_5198_req branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5198/phi_stmt_5198_req) (branch_block_stmt_3035/merge_stmt_5173_PhiAck/phi_stmt_5198_ack)
  // ($cast ($uint<32>) iNsTr_144 )
  type_cast_5207_inst <=> (branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5204/phi_stmt_5204_sources/type_cast_5207/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5204/phi_stmt_5204_sources/type_cast_5207/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5204/phi_stmt_5204_sources/type_cast_5207/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5204/phi_stmt_5204_sources/type_cast_5207/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) rset_countx_x0 )
  type_cast_5209_inst <=> (branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5204/phi_stmt_5204_sources/type_cast_5209/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5204/phi_stmt_5204_sources/type_cast_5209/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5204/phi_stmt_5204_sources/type_cast_5209/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5204/phi_stmt_5204_sources/type_cast_5209/SplitProtocol/Update/ca)
  phi_stmt_5204 <=> (branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5204/phi_stmt_5204_req branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5204/phi_stmt_5204_req) (branch_block_stmt_3035/merge_stmt_5173_PhiAck/phi_stmt_5204_ack)
  // ($cast ($uint<32>) iNsTr_143 )
  type_cast_5213_inst <=> (branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5210/phi_stmt_5210_sources/type_cast_5213/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5210/phi_stmt_5210_sources/type_cast_5213/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5210/phi_stmt_5210_sources/type_cast_5213/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5210/phi_stmt_5210_sources/type_cast_5213/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) initBlankx_x0 )
  type_cast_5215_inst <=> (branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5210/phi_stmt_5210_sources/type_cast_5215/SplitProtocol/Sample/rr branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5210/phi_stmt_5210_sources/type_cast_5215/SplitProtocol/Update/cr) (branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5210/phi_stmt_5210_sources/type_cast_5215/SplitProtocol/Sample/ra branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5210/phi_stmt_5210_sources/type_cast_5215/SplitProtocol/Update/ca)
  phi_stmt_5210 <=> (branch_block_stmt_3035/bb_32_bb_33_PhiReq/phi_stmt_5210/phi_stmt_5210_req branch_block_stmt_3035/bb_29_bb_33_PhiReq/phi_stmt_5210/phi_stmt_5210_req) (branch_block_stmt_3035/merge_stmt_5173_PhiAck/phi_stmt_5210_ack)
  // 		det_output_pipe := QRSdelayx_x0
  //  file prog.linked.opt.aa, line 1702
  // det_output_pipe
  WPIPE_det_output_pipe_5217_inst <=> (branch_block_stmt_3035/assign_stmt_5219/WPIPE_det_output_pipe_5217_Sample/req branch_block_stmt_3035/assign_stmt_5219/WPIPE_det_output_pipe_5217_Update/req) (branch_block_stmt_3035/assign_stmt_5219/WPIPE_det_output_pipe_5217_Sample/ack branch_block_stmt_3035/assign_stmt_5219/WPIPE_det_output_pipe_5217_Update/ack)
}
$module [qrsUpdate] 
{
  $in qrsVal:$int<32>
  // can point into  mempool
  rrVal:$int<32>
  // can point into  mempool
  // pipe-declarations for block %qrsUpdate
  //  file prog.linked.opt.aa, line 1706
  // pipe-declarations for block %qrsUpdate%body
  //  file prog.linked.opt.aa, line 1711
  // pipe-declarations for block %qrsUpdate%body%
  //  file prog.linked.opt.aa, line 1728
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_5226] // Branch Block  file prog.linked.opt.aa, line 1711
    {
      $P [branch_block_stmt_5226__entry__]
      branch_block_stmt_5226__entry__ <-| ($entry)
      $P [branch_block_stmt_5226__exit__]
      branch_block_stmt_5226__exit__ |-> ($exit)
      $P [assign_stmt_5229_to_assign_stmt_5294__entry__] 
      $P [assign_stmt_5229_to_assign_stmt_5294__exit__] 
      $P [return__]
      $P [merge_stmt_5296__exit__] 
      ::[assign_stmt_5229_to_assign_stmt_5294] 
      {
        // 		iNsTr_0 := QRSbuff_ptr
        //  file prog.linked.opt.aa, line 1713
        // Source expression
        // QRSbuff_ptr
        $T[LOAD_QRSbuff_ptr_5228_sample_start_] 
        $T[LOAD_QRSbuff_ptr_5228_sample_completed_] 
        $T[LOAD_QRSbuff_ptr_5228_update_start_] 
        $T[LOAD_QRSbuff_ptr_5228_update_completed_] 
        $T[LOAD_QRSbuff_ptr_5228_sample_start_] 
        $T[LOAD_QRSbuff_ptr_5228_sample_completed_] 
        $T[LOAD_QRSbuff_ptr_5228_update_start_] 
        $T[LOAD_QRSbuff_ptr_5228_update_completed_] 
        $T[LOAD_QRSbuff_ptr_5228_word_address_calculated] 
        $T[LOAD_QRSbuff_ptr_5228_root_address_calculated] 
        LOAD_QRSbuff_ptr_5228_word_address_calculated <-& (LOAD_QRSbuff_ptr_5228_root_address_calculated)
        ;;[LOAD_QRSbuff_ptr_5228_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_QRSbuff_ptr_5228_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_QRSbuff_ptr_5228_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_QRSbuff_ptr_5228_sample_start_ <-& (LOAD_QRSbuff_ptr_5228_word_address_calculated)
        LOAD_QRSbuff_ptr_5228_sample_start_ &-> (LOAD_QRSbuff_ptr_5228_Sample)
        LOAD_QRSbuff_ptr_5228_sample_completed_ <-& (LOAD_QRSbuff_ptr_5228_Sample)
        LOAD_QRSbuff_ptr_5228_sample_completed_ &-> ($null)
        LOAD_QRSbuff_ptr_5228_update_start_ &-> (LOAD_QRSbuff_ptr_5228_Update)
        LOAD_QRSbuff_ptr_5228_update_completed_ <-& (LOAD_QRSbuff_ptr_5228_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // 		iNsTr_1 := RRbuff_ptr
        //  file prog.linked.opt.aa, line 1714
        // Source expression
        // RRbuff_ptr
        $T[LOAD_RRbuff_ptr_5231_sample_start_] 
        $T[LOAD_RRbuff_ptr_5231_sample_completed_] 
        $T[LOAD_RRbuff_ptr_5231_update_start_] 
        $T[LOAD_RRbuff_ptr_5231_update_completed_] 
        $T[LOAD_RRbuff_ptr_5231_sample_start_] 
        $T[LOAD_RRbuff_ptr_5231_sample_completed_] 
        $T[LOAD_RRbuff_ptr_5231_update_start_] 
        $T[LOAD_RRbuff_ptr_5231_update_completed_] 
        $T[LOAD_RRbuff_ptr_5231_word_address_calculated] 
        $T[LOAD_RRbuff_ptr_5231_root_address_calculated] 
        LOAD_RRbuff_ptr_5231_word_address_calculated <-& (LOAD_RRbuff_ptr_5231_root_address_calculated)
        ;;[LOAD_RRbuff_ptr_5231_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_RRbuff_ptr_5231_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_RRbuff_ptr_5231_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_RRbuff_ptr_5231_sample_start_ <-& (LOAD_RRbuff_ptr_5231_word_address_calculated)
        LOAD_RRbuff_ptr_5231_sample_start_ &-> (LOAD_RRbuff_ptr_5231_Sample)
        LOAD_RRbuff_ptr_5231_sample_completed_ <-& (LOAD_RRbuff_ptr_5231_Sample)
        LOAD_RRbuff_ptr_5231_sample_completed_ &-> ($null)
        LOAD_RRbuff_ptr_5231_update_start_ &-> (LOAD_RRbuff_ptr_5231_Update)
        LOAD_RRbuff_ptr_5231_update_completed_ <-& (LOAD_RRbuff_ptr_5231_Update)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // 		iNsTr_2 := @(QRSbuff[iNsTr_0])
        //  file prog.linked.opt.aa, line 1715
        // Source expression
        // @(QRSbuff[iNsTr_0])
        $T[addr_of_5236_sample_start_] 
        $T[addr_of_5236_sample_completed_] 
        $T[addr_of_5236_update_start_] 
        $T[addr_of_5236_update_completed_] 
        $T[array_obj_ref_5235_root_address_calculated] 
        $T[array_obj_ref_5235_offset_calculated] 
        $T[array_obj_ref_5235_index_resized_0] 
        $T[array_obj_ref_5235_index_scaled_0] 
        // iNsTr_0
        $T[R_iNsTr_0_5234_sample_start_] 
        $T[R_iNsTr_0_5234_sample_completed_] 
        $T[R_iNsTr_0_5234_update_start_] 
        $T[R_iNsTr_0_5234_update_completed_] 
        // implicit reference
        R_iNsTr_0_5234_sample_start_ <-& (LOAD_QRSbuff_ptr_5228_update_completed_)
        R_iNsTr_0_5234_sample_completed_ <-& (R_iNsTr_0_5234_sample_start_)
        R_iNsTr_0_5234_update_start_ <-& (R_iNsTr_0_5234_sample_completed_)
        R_iNsTr_0_5234_update_completed_ <-& (R_iNsTr_0_5234_update_start_)
        ;;[array_obj_ref_5235_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        R_iNsTr_0_5234_update_completed_ &-> (array_obj_ref_5235_index_resize_0)
        array_obj_ref_5235_index_resized_0 <-& (array_obj_ref_5235_index_resize_0)
        ;;[array_obj_ref_5235_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_5235_index_resized_0 &-> (array_obj_ref_5235_index_scale_0)
        array_obj_ref_5235_index_scaled_0 <-& (array_obj_ref_5235_index_scale_0)
        ;;[array_obj_ref_5235_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_5235_index_scaled_0 &-> (array_obj_ref_5235_final_index_sum_regn)
        array_obj_ref_5235_offset_calculated <-& (array_obj_ref_5235_final_index_sum_regn)
        $T[array_obj_ref_5235_base_plus_offset_sample_start] 
        $T[array_obj_ref_5235_base_plus_offset_sample_complete] 
        $T[array_obj_ref_5235_base_plus_offset_update_start] 
        $T[array_obj_ref_5235_base_plus_offset_update_complete] 
        ;;[array_obj_ref_5235_base_plus_offset_sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[array_obj_ref_5235_base_plus_offset_update] 
        {
          $T [cr] $T [ca]
        }
        array_obj_ref_5235_base_plus_offset_sample_start &-> (array_obj_ref_5235_base_plus_offset_sample)
        array_obj_ref_5235_base_plus_offset_update_start &-> (array_obj_ref_5235_base_plus_offset_update)
        array_obj_ref_5235_base_plus_offset_sample_complete <-& (array_obj_ref_5235_base_plus_offset_sample)
        array_obj_ref_5235_base_plus_offset_update_complete <-& (array_obj_ref_5235_base_plus_offset_update)
        array_obj_ref_5235_offset_calculated &-> (array_obj_ref_5235_base_plus_offset_sample_start)
        array_obj_ref_5235_root_address_calculated <-& (array_obj_ref_5235_base_plus_offset_update_complete)
        ;;[addr_of_5236_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_5236_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_5236_sample_start_ <-& (array_obj_ref_5235_root_address_calculated)
        addr_of_5236_sample_start_ &-> (addr_of_5236_request)
        addr_of_5236_sample_completed_ <-& (addr_of_5236_request)
        addr_of_5236_update_start_ &-> (addr_of_5236_complete)
        addr_of_5236_update_completed_ <-& (addr_of_5236_complete)
        // Target expression
        // (as target) iNsTr_2
        // iNsTr_2
        // implicit reference
        // 		->(iNsTr_2) := qrsVal
        //  file prog.linked.opt.aa, line 1716
        // Source expression
        // qrsVal
        $T[R_qrsVal_5240_sample_start_] 
        $T[R_qrsVal_5240_sample_completed_] 
        $T[R_qrsVal_5240_update_start_] 
        $T[R_qrsVal_5240_update_completed_] 
        // reference to interface object
        R_qrsVal_5240_sample_start_ <-& ($entry)
        R_qrsVal_5240_sample_completed_ <-& (R_qrsVal_5240_sample_start_)
        R_qrsVal_5240_update_start_ <-& (R_qrsVal_5240_sample_completed_)
        R_qrsVal_5240_update_completed_ <-& (R_qrsVal_5240_update_start_)
        // Target expression
        // ->(iNsTr_2)
        $T[ptr_deref_5239_sample_start_] 
        $T[ptr_deref_5239_sample_completed_] 
        $T[ptr_deref_5239_update_start_] 
        $T[ptr_deref_5239_update_completed_] 
        $T[ptr_deref_5239_base_address_calculated] 
        // iNsTr_2
        $T[R_iNsTr_2_5238_sample_start_] 
        $T[R_iNsTr_2_5238_sample_completed_] 
        $T[R_iNsTr_2_5238_update_start_] 
        $T[R_iNsTr_2_5238_update_completed_] 
        // implicit reference
        R_iNsTr_2_5238_sample_start_ <-& (addr_of_5236_update_completed_)
        R_iNsTr_2_5238_sample_completed_ <-& (R_iNsTr_2_5238_sample_start_)
        R_iNsTr_2_5238_update_start_ <-& (R_iNsTr_2_5238_sample_completed_)
        R_iNsTr_2_5238_update_completed_ <-& (R_iNsTr_2_5238_update_start_)
        $T[ptr_deref_5239_word_address_calculated] 
        $T[ptr_deref_5239_root_address_calculated] 
        $T[ptr_deref_5239_base_address_resized] 
        ;;[ptr_deref_5239_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_5239_base_address_calculated &-> (ptr_deref_5239_base_addr_resize)
        ptr_deref_5239_base_address_resized <-& (ptr_deref_5239_base_addr_resize)
        ;;[ptr_deref_5239_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_5239_base_address_resized &-> (ptr_deref_5239_base_plus_offset)
        ptr_deref_5239_root_address_calculated <-& (ptr_deref_5239_base_plus_offset)
        ;;[ptr_deref_5239_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_5239_root_address_calculated &-> (ptr_deref_5239_word_addrgen)
        ptr_deref_5239_word_address_calculated <-& (ptr_deref_5239_word_addrgen)
        ;;[ptr_deref_5239_Sample] 
        {
          ;;[ptr_deref_5239_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_5239_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_5239_sample_start_ <-& (ptr_deref_5239_word_address_calculated)
        ptr_deref_5239_sample_start_ &-> (ptr_deref_5239_Sample)
        ptr_deref_5239_sample_completed_ <-& (ptr_deref_5239_Sample)
        ptr_deref_5239_sample_completed_ &-> ($null)
        ptr_deref_5239_update_start_ &-> (ptr_deref_5239_Update)
        ptr_deref_5239_update_completed_ <-& (ptr_deref_5239_Update)
        ptr_deref_5239_base_address_calculated <-& (R_iNsTr_2_5238_update_completed_)
        ptr_deref_5239_sample_start_ <-& (ptr_deref_5239_base_address_calculated)
        ptr_deref_5239_sample_start_ <-& (R_qrsVal_5240_update_completed_)
        // 		iNsTr_4 := @(RRbuff[iNsTr_1])
        //  file prog.linked.opt.aa, line 1717
        // Source expression
        // @(RRbuff[iNsTr_1])
        $T[addr_of_5245_sample_start_] 
        $T[addr_of_5245_sample_completed_] 
        $T[addr_of_5245_update_start_] 
        $T[addr_of_5245_update_completed_] 
        $T[array_obj_ref_5244_root_address_calculated] 
        $T[array_obj_ref_5244_offset_calculated] 
        $T[array_obj_ref_5244_index_resized_0] 
        $T[array_obj_ref_5244_index_scaled_0] 
        // iNsTr_1
        $T[R_iNsTr_1_5243_sample_start_] 
        $T[R_iNsTr_1_5243_sample_completed_] 
        $T[R_iNsTr_1_5243_update_start_] 
        $T[R_iNsTr_1_5243_update_completed_] 
        // implicit reference
        R_iNsTr_1_5243_sample_start_ <-& (LOAD_RRbuff_ptr_5231_update_completed_)
        R_iNsTr_1_5243_sample_completed_ <-& (R_iNsTr_1_5243_sample_start_)
        R_iNsTr_1_5243_update_start_ <-& (R_iNsTr_1_5243_sample_completed_)
        R_iNsTr_1_5243_update_completed_ <-& (R_iNsTr_1_5243_update_start_)
        ;;[array_obj_ref_5244_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        R_iNsTr_1_5243_update_completed_ &-> (array_obj_ref_5244_index_resize_0)
        array_obj_ref_5244_index_resized_0 <-& (array_obj_ref_5244_index_resize_0)
        ;;[array_obj_ref_5244_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_5244_index_resized_0 &-> (array_obj_ref_5244_index_scale_0)
        array_obj_ref_5244_index_scaled_0 <-& (array_obj_ref_5244_index_scale_0)
        ;;[array_obj_ref_5244_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_5244_index_scaled_0 &-> (array_obj_ref_5244_final_index_sum_regn)
        array_obj_ref_5244_offset_calculated <-& (array_obj_ref_5244_final_index_sum_regn)
        $T[array_obj_ref_5244_base_plus_offset_sample_start] 
        $T[array_obj_ref_5244_base_plus_offset_sample_complete] 
        $T[array_obj_ref_5244_base_plus_offset_update_start] 
        $T[array_obj_ref_5244_base_plus_offset_update_complete] 
        ;;[array_obj_ref_5244_base_plus_offset_sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[array_obj_ref_5244_base_plus_offset_update] 
        {
          $T [cr] $T [ca]
        }
        array_obj_ref_5244_base_plus_offset_sample_start &-> (array_obj_ref_5244_base_plus_offset_sample)
        array_obj_ref_5244_base_plus_offset_update_start &-> (array_obj_ref_5244_base_plus_offset_update)
        array_obj_ref_5244_base_plus_offset_sample_complete <-& (array_obj_ref_5244_base_plus_offset_sample)
        array_obj_ref_5244_base_plus_offset_update_complete <-& (array_obj_ref_5244_base_plus_offset_update)
        array_obj_ref_5244_offset_calculated &-> (array_obj_ref_5244_base_plus_offset_sample_start)
        array_obj_ref_5244_root_address_calculated <-& (array_obj_ref_5244_base_plus_offset_update_complete)
        ;;[addr_of_5245_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_5245_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_5245_sample_start_ <-& (array_obj_ref_5244_root_address_calculated)
        addr_of_5245_sample_start_ &-> (addr_of_5245_request)
        addr_of_5245_sample_completed_ <-& (addr_of_5245_request)
        addr_of_5245_update_start_ &-> (addr_of_5245_complete)
        addr_of_5245_update_completed_ <-& (addr_of_5245_complete)
        // Target expression
        // (as target) iNsTr_4
        // iNsTr_4
        // implicit reference
        // 		->(iNsTr_4) := rrVal
        //  file prog.linked.opt.aa, line 1718
        // Source expression
        // rrVal
        $T[R_rrVal_5249_sample_start_] 
        $T[R_rrVal_5249_sample_completed_] 
        $T[R_rrVal_5249_update_start_] 
        $T[R_rrVal_5249_update_completed_] 
        // reference to interface object
        R_rrVal_5249_sample_start_ <-& ($entry)
        R_rrVal_5249_sample_completed_ <-& (R_rrVal_5249_sample_start_)
        R_rrVal_5249_update_start_ <-& (R_rrVal_5249_sample_completed_)
        R_rrVal_5249_update_completed_ <-& (R_rrVal_5249_update_start_)
        // Target expression
        // ->(iNsTr_4)
        $T[ptr_deref_5248_sample_start_] 
        $T[ptr_deref_5248_sample_completed_] 
        $T[ptr_deref_5248_update_start_] 
        $T[ptr_deref_5248_update_completed_] 
        $T[ptr_deref_5248_base_address_calculated] 
        // iNsTr_4
        $T[R_iNsTr_4_5247_sample_start_] 
        $T[R_iNsTr_4_5247_sample_completed_] 
        $T[R_iNsTr_4_5247_update_start_] 
        $T[R_iNsTr_4_5247_update_completed_] 
        // implicit reference
        R_iNsTr_4_5247_sample_start_ <-& (addr_of_5245_update_completed_)
        R_iNsTr_4_5247_sample_completed_ <-& (R_iNsTr_4_5247_sample_start_)
        R_iNsTr_4_5247_update_start_ <-& (R_iNsTr_4_5247_sample_completed_)
        R_iNsTr_4_5247_update_completed_ <-& (R_iNsTr_4_5247_update_start_)
        $T[ptr_deref_5248_word_address_calculated] 
        $T[ptr_deref_5248_root_address_calculated] 
        $T[ptr_deref_5248_base_address_resized] 
        ;;[ptr_deref_5248_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_5248_base_address_calculated &-> (ptr_deref_5248_base_addr_resize)
        ptr_deref_5248_base_address_resized <-& (ptr_deref_5248_base_addr_resize)
        ;;[ptr_deref_5248_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_5248_base_address_resized &-> (ptr_deref_5248_base_plus_offset)
        ptr_deref_5248_root_address_calculated <-& (ptr_deref_5248_base_plus_offset)
        ;;[ptr_deref_5248_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_5248_root_address_calculated &-> (ptr_deref_5248_word_addrgen)
        ptr_deref_5248_word_address_calculated <-& (ptr_deref_5248_word_addrgen)
        ;;[ptr_deref_5248_Sample] 
        {
          ;;[ptr_deref_5248_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_5248_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_5248_sample_start_ <-& (ptr_deref_5248_word_address_calculated)
        ptr_deref_5248_sample_start_ &-> (ptr_deref_5248_Sample)
        ptr_deref_5248_sample_completed_ <-& (ptr_deref_5248_Sample)
        ptr_deref_5248_sample_completed_ &-> ($null)
        ptr_deref_5248_update_start_ &-> (ptr_deref_5248_Update)
        ptr_deref_5248_update_completed_ <-& (ptr_deref_5248_Update)
        ptr_deref_5248_base_address_calculated <-& (R_iNsTr_4_5247_update_completed_)
        ptr_deref_5248_sample_start_ <-& (ptr_deref_5248_base_address_calculated)
        ptr_deref_5248_sample_start_ <-& (R_rrVal_5249_update_completed_)
        // 		iNsTr_6 := (iNsTr_0 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        //  file prog.linked.opt.aa, line 1719
        // Source expression
        // (iNsTr_0 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        $T[ADD_u32_u32_5255_sample_start_] 
        $T[ADD_u32_u32_5255_sample_completed_] 
        $T[ADD_u32_u32_5255_update_start_] 
        $T[ADD_u32_u32_5255_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_5252_sample_start_] 
        $T[R_iNsTr_0_5252_sample_completed_] 
        $T[R_iNsTr_0_5252_update_start_] 
        $T[R_iNsTr_0_5252_update_completed_] 
        // implicit reference
        R_iNsTr_0_5252_sample_start_ <-& (LOAD_QRSbuff_ptr_5228_update_completed_)
        R_iNsTr_0_5252_sample_completed_ <-& (R_iNsTr_0_5252_sample_start_)
        R_iNsTr_0_5252_update_start_ <-& (R_iNsTr_0_5252_sample_completed_)
        R_iNsTr_0_5252_update_completed_ <-& (R_iNsTr_0_5252_update_start_)
        ADD_u32_u32_5255_sample_start_ <-& (R_iNsTr_0_5252_update_completed_)
        ;;[ADD_u32_u32_5255_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_5255_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_5255_sample_start_ &-> (ADD_u32_u32_5255_Sample)
        ADD_u32_u32_5255_sample_completed_ <-& (ADD_u32_u32_5255_Sample)
        ADD_u32_u32_5255_sample_completed_ &-> ($null)
        ADD_u32_u32_5255_update_start_ &-> (ADD_u32_u32_5255_Update)
        ADD_u32_u32_5255_update_completed_ <-& (ADD_u32_u32_5255_Update)
        // Target expression
        // (as target) iNsTr_6
        // iNsTr_6
        // implicit reference
        // 		iNsTr_7 := (iNsTr_0 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.linked.opt.aa, line 1720
        // Source expression
        // (iNsTr_0 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_5261_sample_start_] 
        $T[EQ_u32_u1_5261_sample_completed_] 
        $T[EQ_u32_u1_5261_update_start_] 
        $T[EQ_u32_u1_5261_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_5258_sample_start_] 
        $T[R_iNsTr_0_5258_sample_completed_] 
        $T[R_iNsTr_0_5258_update_start_] 
        $T[R_iNsTr_0_5258_update_completed_] 
        // implicit reference
        R_iNsTr_0_5258_sample_start_ <-& (LOAD_QRSbuff_ptr_5228_update_completed_)
        R_iNsTr_0_5258_sample_completed_ <-& (R_iNsTr_0_5258_sample_start_)
        R_iNsTr_0_5258_update_start_ <-& (R_iNsTr_0_5258_sample_completed_)
        R_iNsTr_0_5258_update_completed_ <-& (R_iNsTr_0_5258_update_start_)
        EQ_u32_u1_5261_sample_start_ <-& (R_iNsTr_0_5258_update_completed_)
        ;;[EQ_u32_u1_5261_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_5261_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_5261_sample_start_ &-> (EQ_u32_u1_5261_Sample)
        EQ_u32_u1_5261_sample_completed_ <-& (EQ_u32_u1_5261_Sample)
        EQ_u32_u1_5261_sample_completed_ &-> ($null)
        EQ_u32_u1_5261_update_start_ &-> (EQ_u32_u1_5261_Update)
        EQ_u32_u1_5261_update_completed_ <-& (EQ_u32_u1_5261_Update)
        // Target expression
        // (as target) iNsTr_7
        // iNsTr_7
        // implicit reference
        // 		maxx_xx_xi := ( $mux iNsTr_7 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_6 ) 
        //  file prog.linked.opt.aa, line 1721
        // Source expression
        // ( $mux iNsTr_7 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_6 ) 
        $T[MUX_5268_sample_start_] 
        $T[MUX_5268_sample_completed_] 
        $T[MUX_5268_update_start_] 
        $T[MUX_5268_update_completed_] 
        // iNsTr_7
        $T[R_iNsTr_7_5264_sample_start_] 
        $T[R_iNsTr_7_5264_sample_completed_] 
        $T[R_iNsTr_7_5264_update_start_] 
        $T[R_iNsTr_7_5264_update_completed_] 
        // implicit reference
        R_iNsTr_7_5264_sample_start_ <-& (EQ_u32_u1_5261_update_completed_)
        R_iNsTr_7_5264_sample_completed_ <-& (R_iNsTr_7_5264_sample_start_)
        R_iNsTr_7_5264_update_start_ <-& (R_iNsTr_7_5264_sample_completed_)
        R_iNsTr_7_5264_update_completed_ <-& (R_iNsTr_7_5264_update_start_)
        // iNsTr_6
        $T[R_iNsTr_6_5267_sample_start_] 
        $T[R_iNsTr_6_5267_sample_completed_] 
        $T[R_iNsTr_6_5267_update_start_] 
        $T[R_iNsTr_6_5267_update_completed_] 
        // implicit reference
        R_iNsTr_6_5267_sample_start_ <-& (ADD_u32_u32_5255_update_completed_)
        R_iNsTr_6_5267_sample_completed_ <-& (R_iNsTr_6_5267_sample_start_)
        R_iNsTr_6_5267_update_start_ <-& (R_iNsTr_6_5267_sample_completed_)
        R_iNsTr_6_5267_update_completed_ <-& (R_iNsTr_6_5267_update_start_)
        MUX_5268_sample_start_ <-& (R_iNsTr_7_5264_update_completed_)
        MUX_5268_sample_start_ <-& (R_iNsTr_6_5267_update_completed_)
        ;;[MUX_5268_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_5268_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_5268_sample_start_ &-> (MUX_5268_start)
        MUX_5268_sample_completed_ <-& (MUX_5268_start)
        MUX_5268_update_start_ &-> (MUX_5268_complete)
        MUX_5268_update_completed_ <-& (MUX_5268_complete)
        MUX_5268_sample_completed_ &-> ($null)
        // Target expression
        // (as target) maxx_xx_xi
        // maxx_xx_xi
        // implicit reference
        // 		QRSbuff_ptr := maxx_xx_xi
        //  file prog.linked.opt.aa, line 1722
        // Source expression
        // maxx_xx_xi
        $T[R_maxx_xx_xi_5271_sample_start_] 
        $T[R_maxx_xx_xi_5271_sample_completed_] 
        $T[R_maxx_xx_xi_5271_update_start_] 
        $T[R_maxx_xx_xi_5271_update_completed_] 
        // implicit reference
        R_maxx_xx_xi_5271_sample_start_ <-& (MUX_5268_update_completed_)
        R_maxx_xx_xi_5271_sample_completed_ <-& (R_maxx_xx_xi_5271_sample_start_)
        R_maxx_xx_xi_5271_update_start_ <-& (R_maxx_xx_xi_5271_sample_completed_)
        R_maxx_xx_xi_5271_update_completed_ <-& (R_maxx_xx_xi_5271_update_start_)
        // Target expression
        // (as target) QRSbuff_ptr
        $T[STORE_QRSbuff_ptr_5270_sample_start_] 
        $T[STORE_QRSbuff_ptr_5270_sample_completed_] 
        $T[STORE_QRSbuff_ptr_5270_update_start_] 
        $T[STORE_QRSbuff_ptr_5270_update_completed_] 
        // QRSbuff_ptr
        $T[STORE_QRSbuff_ptr_5270_word_address_calculated] 
        $T[STORE_QRSbuff_ptr_5270_root_address_calculated] 
        STORE_QRSbuff_ptr_5270_word_address_calculated <-& (STORE_QRSbuff_ptr_5270_root_address_calculated)
        ;;[STORE_QRSbuff_ptr_5270_Sample] 
        {
          ;;[STORE_QRSbuff_ptr_5270_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_QRSbuff_ptr_5270_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_QRSbuff_ptr_5270_sample_start_ <-& (STORE_QRSbuff_ptr_5270_word_address_calculated)
        STORE_QRSbuff_ptr_5270_sample_start_ &-> (STORE_QRSbuff_ptr_5270_Sample)
        STORE_QRSbuff_ptr_5270_sample_completed_ <-& (STORE_QRSbuff_ptr_5270_Sample)
        STORE_QRSbuff_ptr_5270_sample_completed_ &-> ($null)
        STORE_QRSbuff_ptr_5270_update_start_ &-> (STORE_QRSbuff_ptr_5270_Update)
        STORE_QRSbuff_ptr_5270_update_completed_ <-& (STORE_QRSbuff_ptr_5270_Update)
        STORE_QRSbuff_ptr_5270_sample_start_ <-& (R_maxx_xx_xi_5271_update_completed_)
        // 		iNsTr_9 := (iNsTr_1 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        //  file prog.linked.opt.aa, line 1723
        // Source expression
        // (iNsTr_1 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        $T[ADD_u32_u32_5277_sample_start_] 
        $T[ADD_u32_u32_5277_sample_completed_] 
        $T[ADD_u32_u32_5277_update_start_] 
        $T[ADD_u32_u32_5277_update_completed_] 
        // iNsTr_1
        $T[R_iNsTr_1_5274_sample_start_] 
        $T[R_iNsTr_1_5274_sample_completed_] 
        $T[R_iNsTr_1_5274_update_start_] 
        $T[R_iNsTr_1_5274_update_completed_] 
        // implicit reference
        R_iNsTr_1_5274_sample_start_ <-& (LOAD_RRbuff_ptr_5231_update_completed_)
        R_iNsTr_1_5274_sample_completed_ <-& (R_iNsTr_1_5274_sample_start_)
        R_iNsTr_1_5274_update_start_ <-& (R_iNsTr_1_5274_sample_completed_)
        R_iNsTr_1_5274_update_completed_ <-& (R_iNsTr_1_5274_update_start_)
        ADD_u32_u32_5277_sample_start_ <-& (R_iNsTr_1_5274_update_completed_)
        ;;[ADD_u32_u32_5277_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_5277_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_5277_sample_start_ &-> (ADD_u32_u32_5277_Sample)
        ADD_u32_u32_5277_sample_completed_ <-& (ADD_u32_u32_5277_Sample)
        ADD_u32_u32_5277_sample_completed_ &-> ($null)
        ADD_u32_u32_5277_update_start_ &-> (ADD_u32_u32_5277_Update)
        ADD_u32_u32_5277_update_completed_ <-& (ADD_u32_u32_5277_Update)
        // Target expression
        // (as target) iNsTr_9
        // iNsTr_9
        // implicit reference
        // 		iNsTr_10 := (iNsTr_1 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.linked.opt.aa, line 1724
        // Source expression
        // (iNsTr_1 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_5283_sample_start_] 
        $T[EQ_u32_u1_5283_sample_completed_] 
        $T[EQ_u32_u1_5283_update_start_] 
        $T[EQ_u32_u1_5283_update_completed_] 
        // iNsTr_1
        $T[R_iNsTr_1_5280_sample_start_] 
        $T[R_iNsTr_1_5280_sample_completed_] 
        $T[R_iNsTr_1_5280_update_start_] 
        $T[R_iNsTr_1_5280_update_completed_] 
        // implicit reference
        R_iNsTr_1_5280_sample_start_ <-& (LOAD_RRbuff_ptr_5231_update_completed_)
        R_iNsTr_1_5280_sample_completed_ <-& (R_iNsTr_1_5280_sample_start_)
        R_iNsTr_1_5280_update_start_ <-& (R_iNsTr_1_5280_sample_completed_)
        R_iNsTr_1_5280_update_completed_ <-& (R_iNsTr_1_5280_update_start_)
        EQ_u32_u1_5283_sample_start_ <-& (R_iNsTr_1_5280_update_completed_)
        ;;[EQ_u32_u1_5283_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_5283_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_5283_sample_start_ &-> (EQ_u32_u1_5283_Sample)
        EQ_u32_u1_5283_sample_completed_ <-& (EQ_u32_u1_5283_Sample)
        EQ_u32_u1_5283_sample_completed_ &-> ($null)
        EQ_u32_u1_5283_update_start_ &-> (EQ_u32_u1_5283_Update)
        EQ_u32_u1_5283_update_completed_ <-& (EQ_u32_u1_5283_Update)
        // Target expression
        // (as target) iNsTr_10
        // iNsTr_10
        // implicit reference
        // 		maxx_xx_xi1 := ( $mux iNsTr_10 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_9 ) 
        //  file prog.linked.opt.aa, line 1725
        // Source expression
        // ( $mux iNsTr_10 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_9 ) 
        $T[MUX_5290_sample_start_] 
        $T[MUX_5290_sample_completed_] 
        $T[MUX_5290_update_start_] 
        $T[MUX_5290_update_completed_] 
        // iNsTr_10
        $T[R_iNsTr_10_5286_sample_start_] 
        $T[R_iNsTr_10_5286_sample_completed_] 
        $T[R_iNsTr_10_5286_update_start_] 
        $T[R_iNsTr_10_5286_update_completed_] 
        // implicit reference
        R_iNsTr_10_5286_sample_start_ <-& (EQ_u32_u1_5283_update_completed_)
        R_iNsTr_10_5286_sample_completed_ <-& (R_iNsTr_10_5286_sample_start_)
        R_iNsTr_10_5286_update_start_ <-& (R_iNsTr_10_5286_sample_completed_)
        R_iNsTr_10_5286_update_completed_ <-& (R_iNsTr_10_5286_update_start_)
        // iNsTr_9
        $T[R_iNsTr_9_5289_sample_start_] 
        $T[R_iNsTr_9_5289_sample_completed_] 
        $T[R_iNsTr_9_5289_update_start_] 
        $T[R_iNsTr_9_5289_update_completed_] 
        // implicit reference
        R_iNsTr_9_5289_sample_start_ <-& (ADD_u32_u32_5277_update_completed_)
        R_iNsTr_9_5289_sample_completed_ <-& (R_iNsTr_9_5289_sample_start_)
        R_iNsTr_9_5289_update_start_ <-& (R_iNsTr_9_5289_sample_completed_)
        R_iNsTr_9_5289_update_completed_ <-& (R_iNsTr_9_5289_update_start_)
        MUX_5290_sample_start_ <-& (R_iNsTr_10_5286_update_completed_)
        MUX_5290_sample_start_ <-& (R_iNsTr_9_5289_update_completed_)
        ;;[MUX_5290_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_5290_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_5290_sample_start_ &-> (MUX_5290_start)
        MUX_5290_sample_completed_ <-& (MUX_5290_start)
        MUX_5290_update_start_ &-> (MUX_5290_complete)
        MUX_5290_update_completed_ <-& (MUX_5290_complete)
        MUX_5290_sample_completed_ &-> ($null)
        // Target expression
        // (as target) maxx_xx_xi1
        // maxx_xx_xi1
        // implicit reference
        // 		RRbuff_ptr := maxx_xx_xi1
        //  file prog.linked.opt.aa, line 1726
        // Source expression
        // maxx_xx_xi1
        $T[R_maxx_xx_xi1_5293_sample_start_] 
        $T[R_maxx_xx_xi1_5293_sample_completed_] 
        $T[R_maxx_xx_xi1_5293_update_start_] 
        $T[R_maxx_xx_xi1_5293_update_completed_] 
        // implicit reference
        R_maxx_xx_xi1_5293_sample_start_ <-& (MUX_5290_update_completed_)
        R_maxx_xx_xi1_5293_sample_completed_ <-& (R_maxx_xx_xi1_5293_sample_start_)
        R_maxx_xx_xi1_5293_update_start_ <-& (R_maxx_xx_xi1_5293_sample_completed_)
        R_maxx_xx_xi1_5293_update_completed_ <-& (R_maxx_xx_xi1_5293_update_start_)
        // Target expression
        // (as target) RRbuff_ptr
        $T[STORE_RRbuff_ptr_5292_sample_start_] 
        $T[STORE_RRbuff_ptr_5292_sample_completed_] 
        $T[STORE_RRbuff_ptr_5292_update_start_] 
        $T[STORE_RRbuff_ptr_5292_update_completed_] 
        // RRbuff_ptr
        $T[STORE_RRbuff_ptr_5292_word_address_calculated] 
        $T[STORE_RRbuff_ptr_5292_root_address_calculated] 
        STORE_RRbuff_ptr_5292_word_address_calculated <-& (STORE_RRbuff_ptr_5292_root_address_calculated)
        ;;[STORE_RRbuff_ptr_5292_Sample] 
        {
          ;;[STORE_RRbuff_ptr_5292_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_RRbuff_ptr_5292_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_RRbuff_ptr_5292_sample_start_ <-& (STORE_RRbuff_ptr_5292_word_address_calculated)
        STORE_RRbuff_ptr_5292_sample_start_ &-> (STORE_RRbuff_ptr_5292_Sample)
        STORE_RRbuff_ptr_5292_sample_completed_ <-& (STORE_RRbuff_ptr_5292_Sample)
        STORE_RRbuff_ptr_5292_sample_completed_ &-> ($null)
        STORE_RRbuff_ptr_5292_update_start_ &-> (STORE_RRbuff_ptr_5292_Update)
        STORE_RRbuff_ptr_5292_update_completed_ <-& (STORE_RRbuff_ptr_5292_Update)
        STORE_RRbuff_ptr_5292_sample_start_ <-& (R_maxx_xx_xi1_5293_update_completed_)
        // load-store dependencies..
        $T [ptr_deref_5239_ptr_deref_5248_delay] $delay
        // ->(iNsTr_2)(store) -> ->(iNsTr_4)(store)
        ptr_deref_5248_sample_start_ <-& (ptr_deref_5239_ptr_deref_5248_delay)
        ptr_deref_5239_ptr_deref_5248_delay <-& (ptr_deref_5239_sample_completed_)
        $T [LOAD_QRSbuff_ptr_5228_STORE_QRSbuff_ptr_5270_delay] $delay
        // QRSbuff_ptr(load) -> QRSbuff_ptr(store)
        STORE_QRSbuff_ptr_5270_sample_start_ <-& (LOAD_QRSbuff_ptr_5228_STORE_QRSbuff_ptr_5270_delay)
        LOAD_QRSbuff_ptr_5228_STORE_QRSbuff_ptr_5270_delay <-& (LOAD_QRSbuff_ptr_5228_sample_completed_)
        $T [LOAD_RRbuff_ptr_5231_STORE_RRbuff_ptr_5292_delay] $delay
        // RRbuff_ptr(load) -> RRbuff_ptr(store)
        STORE_RRbuff_ptr_5292_sample_start_ <-& (LOAD_RRbuff_ptr_5231_STORE_RRbuff_ptr_5292_delay)
        LOAD_RRbuff_ptr_5231_STORE_RRbuff_ptr_5292_delay <-& (LOAD_RRbuff_ptr_5231_sample_completed_)
      }
      assign_stmt_5229_to_assign_stmt_5294__entry__ |-> (assign_stmt_5229_to_assign_stmt_5294)
      assign_stmt_5229_to_assign_stmt_5294__exit__ <-| (assign_stmt_5229_to_assign_stmt_5294)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1728
      //---------------------   merge statement  file prog.linked.opt.aa, line 1728  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_5296_PhiReqMerge] 
      merge_stmt_5296_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_5296_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_5296_PhiReqMerge |-> (merge_stmt_5296_PhiAck)
      merge_stmt_5296__exit__  <-| (merge_stmt_5296_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1728  --------------------------
      assign_stmt_5229_to_assign_stmt_5294__entry__ <-| (branch_block_stmt_5226__entry__)
      return__ <-| (assign_stmt_5229_to_assign_stmt_5294__exit__)
      merge_stmt_5296__exit__ |-> (branch_block_stmt_5226__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %qrsUpdate%body%
    //  file prog.linked.opt.aa, line 1728
    // constant-object-declarations for block %qrsUpdate%body
    //  file prog.linked.opt.aa, line 1711
    // constant-object-declarations for block %qrsUpdate
    //  file prog.linked.opt.aa, line 1706
    // constant-declarations for block %qrsUpdate%body
    //  file prog.linked.opt.aa, line 1711
    // QRSbuff_ptr
    $constant $W[LOAD_QRSbuff_ptr_5228_word_address_0] : $pointer<memory_space_15> := _b0
    // RRbuff_ptr
    $constant $W[LOAD_RRbuff_ptr_5231_word_address_0] : $pointer<memory_space_16> := _b0
    // @(QRSbuff[iNsTr_0])
    $constant $W[array_obj_ref_5235_resized_base_address] : $int<5> := _b01000// 8
    $constant $W[array_obj_ref_5235_offset_scale_factor_0] : $int<5> := _b00001// 1
    // ->(iNsTr_2)
    $constant $W[ptr_deref_5239_word_offset_0] : $int<5> := _b00000// 0
    // @(RRbuff[iNsTr_1])
    $constant $W[array_obj_ref_5244_resized_base_address] : $int<5> := _b10000// 16
    $constant $W[array_obj_ref_5244_offset_scale_factor_0] : $int<5> := _b00001// 1
    // ->(iNsTr_4)
    $constant $W[ptr_deref_5248_word_offset_0] : $int<5> := _b00000// 0
    // ($bitcast ($uint<32>) _b11111111111111111111111111111111  )
    $constant $W[type_cast_5254_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_5260_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ( $mux iNsTr_7 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_6 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_5266_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // QRSbuff_ptr
    $constant $W[STORE_QRSbuff_ptr_5270_word_address_0] : $pointer<memory_space_15> := _b0
    // ($bitcast ($uint<32>) _b11111111111111111111111111111111  )
    $constant $W[type_cast_5276_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_5282_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ( $mux iNsTr_10 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_9 ) 
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_5288_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // RRbuff_ptr
    $constant $W[STORE_RRbuff_ptr_5292_word_address_0] : $pointer<memory_space_16> := _b0
    // constant-declarations for block %qrsUpdate%body%
    //  file prog.linked.opt.aa, line 1728
    // block %qrsUpdate%body
    //  file prog.linked.opt.aa, line 1711
    // 		iNsTr_0 := QRSbuff_ptr
    //  file prog.linked.opt.aa, line 1713
    // QRSbuff_ptr
    $W[LOAD_QRSbuff_ptr_5228_data_0] : $int<32>
    // iNsTr_0
    $W[iNsTr_0_5229] : $int<32>
    // 		iNsTr_1 := RRbuff_ptr
    //  file prog.linked.opt.aa, line 1714
    // RRbuff_ptr
    $W[LOAD_RRbuff_ptr_5231_data_0] : $int<32>
    // iNsTr_1
    $W[iNsTr_1_5232] : $int<32>
    // 		iNsTr_2 := @(QRSbuff[iNsTr_0])
    //  file prog.linked.opt.aa, line 1715
    // @(QRSbuff[iNsTr_0])
    $intermediate $W[R_iNsTr_0_5234_resized] : $int<5>
    $intermediate $W[R_iNsTr_0_5234_scaled] : $int<5>
    $intermediate $W[array_obj_ref_5235_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_5235_root_address] : $int<5>
    // iNsTr_2
    $W[iNsTr_2_5237] : $int<32>
    // 		->(iNsTr_2) := qrsVal
    //  file prog.linked.opt.aa, line 1716
    // ->(iNsTr_2)
    $intermediate $W[ptr_deref_5239_wire] : $int<32>
    $intermediate $W[ptr_deref_5239_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_5239_root_address] : $int<5>
    $W[ptr_deref_5239_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_5239_data_0] : $int<32>
    // 		iNsTr_4 := @(RRbuff[iNsTr_1])
    //  file prog.linked.opt.aa, line 1717
    // @(RRbuff[iNsTr_1])
    $intermediate $W[R_iNsTr_1_5243_resized] : $int<5>
    $intermediate $W[R_iNsTr_1_5243_scaled] : $int<5>
    $intermediate $W[array_obj_ref_5244_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_5244_root_address] : $int<5>
    // iNsTr_4
    $W[iNsTr_4_5246] : $int<32>
    // 		->(iNsTr_4) := rrVal
    //  file prog.linked.opt.aa, line 1718
    // ->(iNsTr_4)
    $intermediate $W[ptr_deref_5248_wire] : $int<32>
    $intermediate $W[ptr_deref_5248_resized_base_address] : $int<5>
    $intermediate $W[ptr_deref_5248_root_address] : $int<5>
    $W[ptr_deref_5248_word_address_0] : $pointer<memory_space_13>
    $W[ptr_deref_5248_data_0] : $int<32>
    // 		iNsTr_6 := (iNsTr_0 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.linked.opt.aa, line 1719
    // iNsTr_6
    $W[iNsTr_6_5256] : $int<32>
    // 		iNsTr_7 := (iNsTr_0 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.linked.opt.aa, line 1720
    // iNsTr_7
    $W[iNsTr_7_5262] : $int<1>
    // 		maxx_xx_xi := ( $mux iNsTr_7 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_6 ) 
    //  file prog.linked.opt.aa, line 1721
    // maxx_xx_xi
    $W[maxx_xx_xi_5269] : $int<32>
    // 		QRSbuff_ptr := maxx_xx_xi
    //  file prog.linked.opt.aa, line 1722
    // QRSbuff_ptr
    $constant $W[STORE_QRSbuff_ptr_5270_word_address_0] : $pointer<memory_space_15> := _b0
    $W[STORE_QRSbuff_ptr_5270_data_0] : $int<32>
    // 		iNsTr_9 := (iNsTr_1 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.linked.opt.aa, line 1723
    // iNsTr_9
    $W[iNsTr_9_5278] : $int<32>
    // 		iNsTr_10 := (iNsTr_1 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.linked.opt.aa, line 1724
    // iNsTr_10
    $W[iNsTr_10_5284] : $int<1>
    // 		maxx_xx_xi1 := ( $mux iNsTr_10 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_9 ) 
    //  file prog.linked.opt.aa, line 1725
    // maxx_xx_xi1
    $W[maxx_xx_xi1_5291] : $int<32>
    // 		RRbuff_ptr := maxx_xx_xi1
    //  file prog.linked.opt.aa, line 1726
    // RRbuff_ptr
    $constant $W[STORE_RRbuff_ptr_5292_word_address_0] : $pointer<memory_space_16> := _b0
    $W[STORE_RRbuff_ptr_5292_data_0] : $int<32>
    // datapath-instances for block %qrsUpdate%body
    //  file prog.linked.opt.aa, line 1711
    // 		iNsTr_0 := QRSbuff_ptr
    //  file prog.linked.opt.aa, line 1713
    // QRSbuff_ptr
    $load [LOAD_QRSbuff_ptr_5228_load_0] $from memory_space_15 (LOAD_QRSbuff_ptr_5228_word_address_0) (LOAD_QRSbuff_ptr_5228_data_0) 
    $delay LOAD_QRSbuff_ptr_5228_load_0 1
    &/ [LOAD_QRSbuff_ptr_5228_gather_scatter] (LOAD_QRSbuff_ptr_5228_data_0) (iNsTr_0_5229) 
    // 		iNsTr_1 := RRbuff_ptr
    //  file prog.linked.opt.aa, line 1714
    // RRbuff_ptr
    $load [LOAD_RRbuff_ptr_5231_load_0] $from memory_space_16 (LOAD_RRbuff_ptr_5231_word_address_0) (LOAD_RRbuff_ptr_5231_data_0) 
    $delay LOAD_RRbuff_ptr_5231_load_0 1
    &/ [LOAD_RRbuff_ptr_5231_gather_scatter] (LOAD_RRbuff_ptr_5231_data_0) (iNsTr_1_5232) 
    // 		iNsTr_2 := @(QRSbuff[iNsTr_0])
    //  file prog.linked.opt.aa, line 1715
    &/ [array_obj_ref_5235_index_0_resize] (iNsTr_0_5229) (R_iNsTr_0_5234_resized) 
    &/ [array_obj_ref_5235_index_0_rename] (R_iNsTr_0_5234_resized) (R_iNsTr_0_5234_scaled) 
    &/ [array_obj_ref_5235_index_offset] (R_iNsTr_0_5234_scaled) (array_obj_ref_5235_final_offset) 
    +[array_obj_ref_5235_root_address_inst] (array_obj_ref_5235_final_offset array_obj_ref_5235_resized_base_address) (array_obj_ref_5235_root_address) 
    $delay array_obj_ref_5235_root_address_inst 2
    # := [addr_of_5236_final_reg] (array_obj_ref_5235_root_address) (iNsTr_2_5237) 
    // 		->(iNsTr_2) := qrsVal
    //  file prog.linked.opt.aa, line 1716
    // ->(iNsTr_2)
    &/ [ptr_deref_5239_base_resize] (iNsTr_2_5237) (ptr_deref_5239_resized_base_address) 
    &/ [ptr_deref_5239_root_address_inst] (ptr_deref_5239_resized_base_address) (ptr_deref_5239_root_address) 
    &/ [ptr_deref_5239_addr_0] (ptr_deref_5239_root_address) (ptr_deref_5239_word_address_0) 
    $store [ptr_deref_5239_store_0] $to memory_space_13 (ptr_deref_5239_word_address_0 ptr_deref_5239_data_0) 
    $delay ptr_deref_5239_store_0 2
    &/ [ptr_deref_5239_gather_scatter] (qrsVal) (ptr_deref_5239_data_0) 
    // 		iNsTr_4 := @(RRbuff[iNsTr_1])
    //  file prog.linked.opt.aa, line 1717
    &/ [array_obj_ref_5244_index_0_resize] (iNsTr_1_5232) (R_iNsTr_1_5243_resized) 
    &/ [array_obj_ref_5244_index_0_rename] (R_iNsTr_1_5243_resized) (R_iNsTr_1_5243_scaled) 
    &/ [array_obj_ref_5244_index_offset] (R_iNsTr_1_5243_scaled) (array_obj_ref_5244_final_offset) 
    +[array_obj_ref_5244_root_address_inst] (array_obj_ref_5244_final_offset array_obj_ref_5244_resized_base_address) (array_obj_ref_5244_root_address) 
    $delay array_obj_ref_5244_root_address_inst 2
    # := [addr_of_5245_final_reg] (array_obj_ref_5244_root_address) (iNsTr_4_5246) 
    // 		->(iNsTr_4) := rrVal
    //  file prog.linked.opt.aa, line 1718
    // ->(iNsTr_4)
    &/ [ptr_deref_5248_base_resize] (iNsTr_4_5246) (ptr_deref_5248_resized_base_address) 
    &/ [ptr_deref_5248_root_address_inst] (ptr_deref_5248_resized_base_address) (ptr_deref_5248_root_address) 
    &/ [ptr_deref_5248_addr_0] (ptr_deref_5248_root_address) (ptr_deref_5248_word_address_0) 
    $store [ptr_deref_5248_store_0] $to memory_space_13 (ptr_deref_5248_word_address_0 ptr_deref_5248_data_0) 
    $delay ptr_deref_5248_store_0 2
    &/ [ptr_deref_5248_gather_scatter] (rrVal) (ptr_deref_5248_data_0) 
    // 		iNsTr_6 := (iNsTr_0 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.linked.opt.aa, line 1719
    // (iNsTr_0 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    +[ADD_u32_u32_5255_inst] (iNsTr_0_5229 type_cast_5254_wire_constant) (iNsTr_6_5256) 
    $delay ADD_u32_u32_5255_inst 1
    // 		iNsTr_7 := (iNsTr_0 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.linked.opt.aa, line 1720
    // (iNsTr_0 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_5261_inst] (iNsTr_0_5229 type_cast_5260_wire_constant) (iNsTr_7_5262) 
    $delay EQ_u32_u1_5261_inst 1
    // 		maxx_xx_xi := ( $mux iNsTr_7 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_6 ) 
    //  file prog.linked.opt.aa, line 1721
    // ( $mux iNsTr_7 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_6 ) 
    ? [MUX_5268_inst] (iNsTr_7_5262 type_cast_5266_wire_constant iNsTr_6_5256) (maxx_xx_xi_5269) 
    // 		QRSbuff_ptr := maxx_xx_xi
    //  file prog.linked.opt.aa, line 1722
    // QRSbuff_ptr
    $store [STORE_QRSbuff_ptr_5270_store_0] $to memory_space_15 (STORE_QRSbuff_ptr_5270_word_address_0 STORE_QRSbuff_ptr_5270_data_0) 
    $delay STORE_QRSbuff_ptr_5270_store_0 1
    &/ [STORE_QRSbuff_ptr_5270_gather_scatter] (maxx_xx_xi_5269) (STORE_QRSbuff_ptr_5270_data_0) 
    // 		iNsTr_9 := (iNsTr_1 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.linked.opt.aa, line 1723
    // (iNsTr_1 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    +[ADD_u32_u32_5277_inst] (iNsTr_1_5232 type_cast_5276_wire_constant) (iNsTr_9_5278) 
    $delay ADD_u32_u32_5277_inst 1
    // 		iNsTr_10 := (iNsTr_1 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.linked.opt.aa, line 1724
    // (iNsTr_1 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_5283_inst] (iNsTr_1_5232 type_cast_5282_wire_constant) (iNsTr_10_5284) 
    $delay EQ_u32_u1_5283_inst 1
    // 		maxx_xx_xi1 := ( $mux iNsTr_10 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_9 ) 
    //  file prog.linked.opt.aa, line 1725
    // ( $mux iNsTr_10 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_9 ) 
    ? [MUX_5290_inst] (iNsTr_10_5284 type_cast_5288_wire_constant iNsTr_9_5278) (maxx_xx_xi1_5291) 
    // 		RRbuff_ptr := maxx_xx_xi1
    //  file prog.linked.opt.aa, line 1726
    // RRbuff_ptr
    $store [STORE_RRbuff_ptr_5292_store_0] $to memory_space_16 (STORE_RRbuff_ptr_5292_word_address_0 STORE_RRbuff_ptr_5292_data_0) 
    $delay STORE_RRbuff_ptr_5292_store_0 1
    &/ [STORE_RRbuff_ptr_5292_gather_scatter] (maxx_xx_xi1_5291) (STORE_RRbuff_ptr_5292_data_0) 
  }
  // end data-path
  // 		iNsTr_0 := QRSbuff_ptr
  //  file prog.linked.opt.aa, line 1713
  // QRSbuff_ptr
  LOAD_QRSbuff_ptr_5228_gather_scatter <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/LOAD_QRSbuff_ptr_5228_Update/LOAD_QRSbuff_ptr_5228_Merge/merge_req) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/LOAD_QRSbuff_ptr_5228_Update/LOAD_QRSbuff_ptr_5228_Merge/merge_ack)
  LOAD_QRSbuff_ptr_5228_load_0 <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/LOAD_QRSbuff_ptr_5228_Sample/word_access_start/word_0/rr branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/LOAD_QRSbuff_ptr_5228_Update/word_access_complete/word_0/cr) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/LOAD_QRSbuff_ptr_5228_Sample/word_access_start/word_0/ra branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/LOAD_QRSbuff_ptr_5228_Update/word_access_complete/word_0/ca)
  // 		iNsTr_1 := RRbuff_ptr
  //  file prog.linked.opt.aa, line 1714
  // RRbuff_ptr
  LOAD_RRbuff_ptr_5231_gather_scatter <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/LOAD_RRbuff_ptr_5231_Update/LOAD_RRbuff_ptr_5231_Merge/merge_req) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/LOAD_RRbuff_ptr_5231_Update/LOAD_RRbuff_ptr_5231_Merge/merge_ack)
  LOAD_RRbuff_ptr_5231_load_0 <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/LOAD_RRbuff_ptr_5231_Sample/word_access_start/word_0/rr branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/LOAD_RRbuff_ptr_5231_Update/word_access_complete/word_0/cr) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/LOAD_RRbuff_ptr_5231_Sample/word_access_start/word_0/ra branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/LOAD_RRbuff_ptr_5231_Update/word_access_complete/word_0/ca)
  // 		iNsTr_2 := @(QRSbuff[iNsTr_0])
  //  file prog.linked.opt.aa, line 1715
  array_obj_ref_5235_index_0_resize <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/array_obj_ref_5235_index_resize_0/index_resize_req) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/array_obj_ref_5235_index_resize_0/index_resize_ack)
  array_obj_ref_5235_index_0_rename <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/array_obj_ref_5235_index_scale_0/scale_rename_req) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/array_obj_ref_5235_index_scale_0/scale_rename_ack)
  array_obj_ref_5235_index_offset <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/array_obj_ref_5235_final_index_sum_regn/req) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/array_obj_ref_5235_final_index_sum_regn/ack)
  array_obj_ref_5235_root_address_inst <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/array_obj_ref_5235_base_plus_offset_sample/rr branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/array_obj_ref_5235_base_plus_offset_update/cr) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/array_obj_ref_5235_base_plus_offset_sample/ra branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/array_obj_ref_5235_base_plus_offset_update/ca)
  addr_of_5236_final_reg <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/addr_of_5236_request/req branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/addr_of_5236_complete/req) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/addr_of_5236_request/ack branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/addr_of_5236_complete/ack)
  // 		->(iNsTr_2) := qrsVal
  //  file prog.linked.opt.aa, line 1716
  ptr_deref_5239_base_resize <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ptr_deref_5239_base_addr_resize/base_resize_req) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ptr_deref_5239_base_addr_resize/base_resize_ack)
  ptr_deref_5239_root_address_inst <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ptr_deref_5239_base_plus_offset/sum_rename_req) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ptr_deref_5239_base_plus_offset/sum_rename_ack)
  ptr_deref_5239_addr_0 <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ptr_deref_5239_word_addrgen/root_register_req) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ptr_deref_5239_word_addrgen/root_register_ack)
  ptr_deref_5239_gather_scatter <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ptr_deref_5239_Sample/ptr_deref_5239_Split/split_req) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ptr_deref_5239_Sample/ptr_deref_5239_Split/split_ack)
  ptr_deref_5239_store_0 <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ptr_deref_5239_Sample/word_access_start/word_0/rr branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ptr_deref_5239_Update/word_access_complete/word_0/cr) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ptr_deref_5239_Sample/word_access_start/word_0/ra branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ptr_deref_5239_Update/word_access_complete/word_0/ca)
  // 		iNsTr_4 := @(RRbuff[iNsTr_1])
  //  file prog.linked.opt.aa, line 1717
  array_obj_ref_5244_index_0_resize <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/array_obj_ref_5244_index_resize_0/index_resize_req) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/array_obj_ref_5244_index_resize_0/index_resize_ack)
  array_obj_ref_5244_index_0_rename <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/array_obj_ref_5244_index_scale_0/scale_rename_req) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/array_obj_ref_5244_index_scale_0/scale_rename_ack)
  array_obj_ref_5244_index_offset <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/array_obj_ref_5244_final_index_sum_regn/req) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/array_obj_ref_5244_final_index_sum_regn/ack)
  array_obj_ref_5244_root_address_inst <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/array_obj_ref_5244_base_plus_offset_sample/rr branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/array_obj_ref_5244_base_plus_offset_update/cr) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/array_obj_ref_5244_base_plus_offset_sample/ra branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/array_obj_ref_5244_base_plus_offset_update/ca)
  addr_of_5245_final_reg <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/addr_of_5245_request/req branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/addr_of_5245_complete/req) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/addr_of_5245_request/ack branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/addr_of_5245_complete/ack)
  // 		->(iNsTr_4) := rrVal
  //  file prog.linked.opt.aa, line 1718
  ptr_deref_5248_base_resize <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ptr_deref_5248_base_addr_resize/base_resize_req) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ptr_deref_5248_base_addr_resize/base_resize_ack)
  ptr_deref_5248_root_address_inst <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ptr_deref_5248_base_plus_offset/sum_rename_req) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ptr_deref_5248_base_plus_offset/sum_rename_ack)
  ptr_deref_5248_addr_0 <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ptr_deref_5248_word_addrgen/root_register_req) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ptr_deref_5248_word_addrgen/root_register_ack)
  ptr_deref_5248_gather_scatter <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ptr_deref_5248_Sample/ptr_deref_5248_Split/split_req) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ptr_deref_5248_Sample/ptr_deref_5248_Split/split_ack)
  ptr_deref_5248_store_0 <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ptr_deref_5248_Sample/word_access_start/word_0/rr branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ptr_deref_5248_Update/word_access_complete/word_0/cr) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ptr_deref_5248_Sample/word_access_start/word_0/ra branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ptr_deref_5248_Update/word_access_complete/word_0/ca)
  // 		iNsTr_6 := (iNsTr_0 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  //  file prog.linked.opt.aa, line 1719
  // (iNsTr_0 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  ADD_u32_u32_5255_inst <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ADD_u32_u32_5255_Sample/rr branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ADD_u32_u32_5255_Update/cr) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ADD_u32_u32_5255_Sample/ra branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ADD_u32_u32_5255_Update/ca)
  // 		iNsTr_7 := (iNsTr_0 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.linked.opt.aa, line 1720
  // (iNsTr_0 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_5261_inst <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/EQ_u32_u1_5261_Sample/rr branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/EQ_u32_u1_5261_Update/cr) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/EQ_u32_u1_5261_Sample/ra branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/EQ_u32_u1_5261_Update/ca)
  // 		maxx_xx_xi := ( $mux iNsTr_7 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_6 ) 
  //  file prog.linked.opt.aa, line 1721
  // ( $mux iNsTr_7 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_6 ) 
  MUX_5268_inst <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/MUX_5268_start/req branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/MUX_5268_complete/req) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/MUX_5268_start/ack branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/MUX_5268_complete/ack)
  // 		QRSbuff_ptr := maxx_xx_xi
  //  file prog.linked.opt.aa, line 1722
  // QRSbuff_ptr
  STORE_QRSbuff_ptr_5270_gather_scatter <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/STORE_QRSbuff_ptr_5270_Sample/STORE_QRSbuff_ptr_5270_Split/split_req) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/STORE_QRSbuff_ptr_5270_Sample/STORE_QRSbuff_ptr_5270_Split/split_ack)
  STORE_QRSbuff_ptr_5270_store_0 <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/STORE_QRSbuff_ptr_5270_Sample/word_access_start/word_0/rr branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/STORE_QRSbuff_ptr_5270_Update/word_access_complete/word_0/cr) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/STORE_QRSbuff_ptr_5270_Sample/word_access_start/word_0/ra branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/STORE_QRSbuff_ptr_5270_Update/word_access_complete/word_0/ca)
  // 		iNsTr_9 := (iNsTr_1 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  //  file prog.linked.opt.aa, line 1723
  // (iNsTr_1 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  ADD_u32_u32_5277_inst <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ADD_u32_u32_5277_Sample/rr branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ADD_u32_u32_5277_Update/cr) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ADD_u32_u32_5277_Sample/ra branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/ADD_u32_u32_5277_Update/ca)
  // 		iNsTr_10 := (iNsTr_1 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.linked.opt.aa, line 1724
  // (iNsTr_1 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_5283_inst <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/EQ_u32_u1_5283_Sample/rr branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/EQ_u32_u1_5283_Update/cr) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/EQ_u32_u1_5283_Sample/ra branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/EQ_u32_u1_5283_Update/ca)
  // 		maxx_xx_xi1 := ( $mux iNsTr_10 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_9 ) 
  //  file prog.linked.opt.aa, line 1725
  // ( $mux iNsTr_10 ($bitcast ($uint<32>) _b00000000000000000000000000000111  )  iNsTr_9 ) 
  MUX_5290_inst <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/MUX_5290_start/req branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/MUX_5290_complete/req) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/MUX_5290_start/ack branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/MUX_5290_complete/ack)
  // 		RRbuff_ptr := maxx_xx_xi1
  //  file prog.linked.opt.aa, line 1726
  // RRbuff_ptr
  STORE_RRbuff_ptr_5292_gather_scatter <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/STORE_RRbuff_ptr_5292_Sample/STORE_RRbuff_ptr_5292_Split/split_req) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/STORE_RRbuff_ptr_5292_Sample/STORE_RRbuff_ptr_5292_Split/split_ack)
  STORE_RRbuff_ptr_5292_store_0 <=> (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/STORE_RRbuff_ptr_5292_Sample/word_access_start/word_0/rr branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/STORE_RRbuff_ptr_5292_Update/word_access_complete/word_0/cr) (branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/STORE_RRbuff_ptr_5292_Sample/word_access_start/word_0/ra branch_block_stmt_5226/assign_stmt_5229_to_assign_stmt_5294/STORE_RRbuff_ptr_5292_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1728
}
$module [revUpdateDet] 
{
  $in ptr:$int<32>
  // can point into  mempool
  max:$int<32>
  // can point into  mempool
  $out ret_val__:$int<32>
  // can point into  mempool
  // pipe-declarations for block %revUpdateDet
  //  file prog.linked.opt.aa, line 1732
  // pipe-declarations for block %revUpdateDet%body
  //  file prog.linked.opt.aa, line 1737
  // pipe-declarations for block %revUpdateDet%body%
  //  file prog.linked.opt.aa, line 1743
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_5303] // Branch Block  file prog.linked.opt.aa, line 1737
    {
      $P [branch_block_stmt_5303__entry__]
      branch_block_stmt_5303__entry__ <-| ($entry)
      $P [branch_block_stmt_5303__exit__]
      branch_block_stmt_5303__exit__ |-> ($exit)
      $P [assign_stmt_5309_to_assign_stmt_5321__entry__] 
      $P [assign_stmt_5309_to_assign_stmt_5321__exit__] 
      $P [return__]
      $P [merge_stmt_5323__exit__] 
      ::[assign_stmt_5309_to_assign_stmt_5321] 
      {
        // 		iNsTr_0 := (ptr + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        //  file prog.linked.opt.aa, line 1739
        // Source expression
        // (ptr + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        $T[ADD_u32_u32_5308_sample_start_] 
        $T[ADD_u32_u32_5308_sample_completed_] 
        $T[ADD_u32_u32_5308_update_start_] 
        $T[ADD_u32_u32_5308_update_completed_] 
        // ptr
        $T[R_ptr_5305_sample_start_] 
        $T[R_ptr_5305_sample_completed_] 
        $T[R_ptr_5305_update_start_] 
        $T[R_ptr_5305_update_completed_] 
        // reference to interface object
        R_ptr_5305_sample_start_ <-& ($entry)
        R_ptr_5305_sample_completed_ <-& (R_ptr_5305_sample_start_)
        R_ptr_5305_update_start_ <-& (R_ptr_5305_sample_completed_)
        R_ptr_5305_update_completed_ <-& (R_ptr_5305_update_start_)
        ADD_u32_u32_5308_sample_start_ <-& (R_ptr_5305_update_completed_)
        ;;[ADD_u32_u32_5308_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_5308_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_5308_sample_start_ &-> (ADD_u32_u32_5308_Sample)
        ADD_u32_u32_5308_sample_completed_ <-& (ADD_u32_u32_5308_Sample)
        ADD_u32_u32_5308_sample_completed_ &-> ($null)
        ADD_u32_u32_5308_update_start_ &-> (ADD_u32_u32_5308_Update)
        ADD_u32_u32_5308_update_completed_ <-& (ADD_u32_u32_5308_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // 		iNsTr_1 := (ptr == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.linked.opt.aa, line 1740
        // Source expression
        // (ptr == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_5314_sample_start_] 
        $T[EQ_u32_u1_5314_sample_completed_] 
        $T[EQ_u32_u1_5314_update_start_] 
        $T[EQ_u32_u1_5314_update_completed_] 
        // ptr
        $T[R_ptr_5311_sample_start_] 
        $T[R_ptr_5311_sample_completed_] 
        $T[R_ptr_5311_update_start_] 
        $T[R_ptr_5311_update_completed_] 
        // reference to interface object
        R_ptr_5311_sample_start_ <-& ($entry)
        R_ptr_5311_sample_completed_ <-& (R_ptr_5311_sample_start_)
        R_ptr_5311_update_start_ <-& (R_ptr_5311_sample_completed_)
        R_ptr_5311_update_completed_ <-& (R_ptr_5311_update_start_)
        EQ_u32_u1_5314_sample_start_ <-& (R_ptr_5311_update_completed_)
        ;;[EQ_u32_u1_5314_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_5314_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_5314_sample_start_ &-> (EQ_u32_u1_5314_Sample)
        EQ_u32_u1_5314_sample_completed_ <-& (EQ_u32_u1_5314_Sample)
        EQ_u32_u1_5314_sample_completed_ &-> ($null)
        EQ_u32_u1_5314_update_start_ &-> (EQ_u32_u1_5314_Update)
        EQ_u32_u1_5314_update_completed_ <-& (EQ_u32_u1_5314_Update)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // 		ret_val__ := ( $mux iNsTr_1 max  iNsTr_0 ) 
        //  file prog.linked.opt.aa, line 1741
        // Source expression
        // ( $mux iNsTr_1 max  iNsTr_0 ) 
        $T[MUX_5320_sample_start_] 
        $T[MUX_5320_sample_completed_] 
        $T[MUX_5320_update_start_] 
        $T[MUX_5320_update_completed_] 
        // iNsTr_1
        $T[R_iNsTr_1_5317_sample_start_] 
        $T[R_iNsTr_1_5317_sample_completed_] 
        $T[R_iNsTr_1_5317_update_start_] 
        $T[R_iNsTr_1_5317_update_completed_] 
        // implicit reference
        R_iNsTr_1_5317_sample_start_ <-& (EQ_u32_u1_5314_update_completed_)
        R_iNsTr_1_5317_sample_completed_ <-& (R_iNsTr_1_5317_sample_start_)
        R_iNsTr_1_5317_update_start_ <-& (R_iNsTr_1_5317_sample_completed_)
        R_iNsTr_1_5317_update_completed_ <-& (R_iNsTr_1_5317_update_start_)
        // max
        $T[R_max_5318_sample_start_] 
        $T[R_max_5318_sample_completed_] 
        $T[R_max_5318_update_start_] 
        $T[R_max_5318_update_completed_] 
        // reference to interface object
        R_max_5318_sample_start_ <-& ($entry)
        R_max_5318_sample_completed_ <-& (R_max_5318_sample_start_)
        R_max_5318_update_start_ <-& (R_max_5318_sample_completed_)
        R_max_5318_update_completed_ <-& (R_max_5318_update_start_)
        // iNsTr_0
        $T[R_iNsTr_0_5319_sample_start_] 
        $T[R_iNsTr_0_5319_sample_completed_] 
        $T[R_iNsTr_0_5319_update_start_] 
        $T[R_iNsTr_0_5319_update_completed_] 
        // implicit reference
        R_iNsTr_0_5319_sample_start_ <-& (ADD_u32_u32_5308_update_completed_)
        R_iNsTr_0_5319_sample_completed_ <-& (R_iNsTr_0_5319_sample_start_)
        R_iNsTr_0_5319_update_start_ <-& (R_iNsTr_0_5319_sample_completed_)
        R_iNsTr_0_5319_update_completed_ <-& (R_iNsTr_0_5319_update_start_)
        MUX_5320_sample_start_ <-& (R_iNsTr_1_5317_update_completed_)
        MUX_5320_sample_start_ <-& (R_max_5318_update_completed_)
        MUX_5320_sample_start_ <-& (R_iNsTr_0_5319_update_completed_)
        ;;[MUX_5320_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_5320_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_5320_sample_start_ &-> (MUX_5320_start)
        MUX_5320_sample_completed_ <-& (MUX_5320_start)
        MUX_5320_update_start_ &-> (MUX_5320_complete)
        MUX_5320_update_completed_ <-& (MUX_5320_complete)
        MUX_5320_sample_completed_ &-> ($null)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_5309_to_assign_stmt_5321__entry__ |-> (assign_stmt_5309_to_assign_stmt_5321)
      assign_stmt_5309_to_assign_stmt_5321__exit__ <-| (assign_stmt_5309_to_assign_stmt_5321)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1743
      //---------------------   merge statement  file prog.linked.opt.aa, line 1743  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_5323_PhiReqMerge] 
      merge_stmt_5323_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_5323_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_5323_PhiReqMerge |-> (merge_stmt_5323_PhiAck)
      merge_stmt_5323__exit__  <-| (merge_stmt_5323_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1743  --------------------------
      assign_stmt_5309_to_assign_stmt_5321__entry__ <-| (branch_block_stmt_5303__entry__)
      return__ <-| (assign_stmt_5309_to_assign_stmt_5321__exit__)
      merge_stmt_5323__exit__ |-> (branch_block_stmt_5303__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %revUpdateDet%body%
    //  file prog.linked.opt.aa, line 1743
    // constant-object-declarations for block %revUpdateDet%body
    //  file prog.linked.opt.aa, line 1737
    // constant-object-declarations for block %revUpdateDet
    //  file prog.linked.opt.aa, line 1732
    // constant-declarations for block %revUpdateDet%body
    //  file prog.linked.opt.aa, line 1737
    // ($bitcast ($uint<32>) _b11111111111111111111111111111111  )
    $constant $W[type_cast_5307_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_5313_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ( $mux iNsTr_1 max  iNsTr_0 ) 
    // constant-declarations for block %revUpdateDet%body%
    //  file prog.linked.opt.aa, line 1743
    // block %revUpdateDet%body
    //  file prog.linked.opt.aa, line 1737
    // 		iNsTr_0 := (ptr + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.linked.opt.aa, line 1739
    // iNsTr_0
    $W[iNsTr_0_5309] : $int<32>
    // 		iNsTr_1 := (ptr == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.linked.opt.aa, line 1740
    // iNsTr_1
    $W[iNsTr_1_5315] : $int<1>
    // 		ret_val__ := ( $mux iNsTr_1 max  iNsTr_0 ) 
    //  file prog.linked.opt.aa, line 1741
    // ret_val__
    // datapath-instances for block %revUpdateDet%body
    //  file prog.linked.opt.aa, line 1737
    // 		iNsTr_0 := (ptr + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.linked.opt.aa, line 1739
    // (ptr + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    +[ADD_u32_u32_5308_inst] (ptr type_cast_5307_wire_constant) (iNsTr_0_5309) 
    $delay ADD_u32_u32_5308_inst 1
    // 		iNsTr_1 := (ptr == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.linked.opt.aa, line 1740
    // (ptr == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_5314_inst] (ptr type_cast_5313_wire_constant) (iNsTr_1_5315) 
    $delay EQ_u32_u1_5314_inst 1
    // 		ret_val__ := ( $mux iNsTr_1 max  iNsTr_0 ) 
    //  file prog.linked.opt.aa, line 1741
    // ( $mux iNsTr_1 max  iNsTr_0 ) 
    ? [MUX_5320_inst] (iNsTr_1_5315 max iNsTr_0_5309) (ret_val__) 
  }
  // end data-path
  // 		iNsTr_0 := (ptr + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  //  file prog.linked.opt.aa, line 1739
  // (ptr + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  ADD_u32_u32_5308_inst <=> (branch_block_stmt_5303/assign_stmt_5309_to_assign_stmt_5321/ADD_u32_u32_5308_Sample/rr branch_block_stmt_5303/assign_stmt_5309_to_assign_stmt_5321/ADD_u32_u32_5308_Update/cr) (branch_block_stmt_5303/assign_stmt_5309_to_assign_stmt_5321/ADD_u32_u32_5308_Sample/ra branch_block_stmt_5303/assign_stmt_5309_to_assign_stmt_5321/ADD_u32_u32_5308_Update/ca)
  // 		iNsTr_1 := (ptr == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.linked.opt.aa, line 1740
  // (ptr == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_5314_inst <=> (branch_block_stmt_5303/assign_stmt_5309_to_assign_stmt_5321/EQ_u32_u1_5314_Sample/rr branch_block_stmt_5303/assign_stmt_5309_to_assign_stmt_5321/EQ_u32_u1_5314_Update/cr) (branch_block_stmt_5303/assign_stmt_5309_to_assign_stmt_5321/EQ_u32_u1_5314_Sample/ra branch_block_stmt_5303/assign_stmt_5309_to_assign_stmt_5321/EQ_u32_u1_5314_Update/ca)
  // 		ret_val__ := ( $mux iNsTr_1 max  iNsTr_0 ) 
  //  file prog.linked.opt.aa, line 1741
  // ( $mux iNsTr_1 max  iNsTr_0 ) 
  MUX_5320_inst <=> (branch_block_stmt_5303/assign_stmt_5309_to_assign_stmt_5321/MUX_5320_start/req branch_block_stmt_5303/assign_stmt_5309_to_assign_stmt_5321/MUX_5320_complete/req) (branch_block_stmt_5303/assign_stmt_5309_to_assign_stmt_5321/MUX_5320_start/ack branch_block_stmt_5303/assign_stmt_5309_to_assign_stmt_5321/MUX_5320_complete/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1743
}
$module [threshCalc] 
{
  $in qmean:$int<32>
  // can point into  mempool
  nmean:$int<32>
  // can point into  mempool
  $out ret_val__:$int<32>
  // can point into  mempool
  // pipe-declarations for block %threshCalc
  //  file prog.linked.opt.aa, line 1747
  // pipe-declarations for block %threshCalc%body
  //  file prog.linked.opt.aa, line 1752
  // pipe-declarations for block %threshCalc%body%
  //  file prog.linked.opt.aa, line 1761
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_5330] // Branch Block  file prog.linked.opt.aa, line 1752
    {
      $P [branch_block_stmt_5330__entry__]
      branch_block_stmt_5330__entry__ <-| ($entry)
      $P [branch_block_stmt_5330__exit__]
      branch_block_stmt_5330__exit__ |-> ($exit)
      $P [assign_stmt_5335_to_assign_stmt_5358__entry__] 
      $P [assign_stmt_5335_to_assign_stmt_5358__exit__] 
      $P [return__]
      $P [merge_stmt_5360__exit__] 
      ::[assign_stmt_5335_to_assign_stmt_5358] 
      {
        // 		iNsTr_0 := (qmean - nmean)
        //  file prog.linked.opt.aa, line 1754
        // Source expression
        // (qmean - nmean)
        $T[SUB_u32_u32_5334_sample_start_] 
        $T[SUB_u32_u32_5334_sample_completed_] 
        $T[SUB_u32_u32_5334_update_start_] 
        $T[SUB_u32_u32_5334_update_completed_] 
        // qmean
        $T[R_qmean_5332_sample_start_] 
        $T[R_qmean_5332_sample_completed_] 
        $T[R_qmean_5332_update_start_] 
        $T[R_qmean_5332_update_completed_] 
        // reference to interface object
        R_qmean_5332_sample_start_ <-& ($entry)
        R_qmean_5332_sample_completed_ <-& (R_qmean_5332_sample_start_)
        R_qmean_5332_update_start_ <-& (R_qmean_5332_sample_completed_)
        R_qmean_5332_update_completed_ <-& (R_qmean_5332_update_start_)
        // nmean
        $T[R_nmean_5333_sample_start_] 
        $T[R_nmean_5333_sample_completed_] 
        $T[R_nmean_5333_update_start_] 
        $T[R_nmean_5333_update_completed_] 
        // reference to interface object
        R_nmean_5333_sample_start_ <-& ($entry)
        R_nmean_5333_sample_completed_ <-& (R_nmean_5333_sample_start_)
        R_nmean_5333_update_start_ <-& (R_nmean_5333_sample_completed_)
        R_nmean_5333_update_completed_ <-& (R_nmean_5333_update_start_)
        SUB_u32_u32_5334_sample_start_ <-& (R_qmean_5332_update_completed_)
        SUB_u32_u32_5334_sample_start_ <-& (R_nmean_5333_update_completed_)
        ;;[SUB_u32_u32_5334_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_5334_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_5334_sample_start_ &-> (SUB_u32_u32_5334_Sample)
        SUB_u32_u32_5334_sample_completed_ <-& (SUB_u32_u32_5334_Sample)
        SUB_u32_u32_5334_sample_completed_ &-> ($null)
        SUB_u32_u32_5334_update_start_ &-> (SUB_u32_u32_5334_Update)
        SUB_u32_u32_5334_update_completed_ <-& (SUB_u32_u32_5334_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // 		iNsTr_1 := ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_0 ) )
        //  file prog.linked.opt.aa, line 1755
        // Source expression
        // ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_0 ) )
        $T[type_cast_5339_sample_start_] 
        $T[type_cast_5339_sample_completed_] 
        $T[type_cast_5339_update_start_] 
        $T[type_cast_5339_update_completed_] 
        // ($bitcast ($int<64>) iNsTr_0 )
        $T[type_cast_5338_sample_start_] 
        $T[type_cast_5338_sample_completed_] 
        $T[type_cast_5338_update_start_] 
        $T[type_cast_5338_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_5337_sample_start_] 
        $T[R_iNsTr_0_5337_sample_completed_] 
        $T[R_iNsTr_0_5337_update_start_] 
        $T[R_iNsTr_0_5337_update_completed_] 
        // implicit reference
        R_iNsTr_0_5337_sample_start_ <-& (SUB_u32_u32_5334_update_completed_)
        R_iNsTr_0_5337_sample_completed_ <-& (R_iNsTr_0_5337_sample_start_)
        R_iNsTr_0_5337_update_start_ <-& (R_iNsTr_0_5337_sample_completed_)
        R_iNsTr_0_5337_update_completed_ <-& (R_iNsTr_0_5337_update_start_)
        type_cast_5338_sample_start_ <-& (R_iNsTr_0_5337_update_completed_)
        ;;[type_cast_5338_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_5338_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_5338_sample_start_ &-> (type_cast_5338_Sample)
        type_cast_5338_sample_completed_ <-& (type_cast_5338_Sample)
        type_cast_5338_sample_completed_ &-> ($null)
        type_cast_5338_update_start_ &-> (type_cast_5338_Update)
        type_cast_5338_update_completed_ <-& (type_cast_5338_Update)
        // flow-through
        type_cast_5338_update_start_ <-& (type_cast_5338_sample_completed_)
        type_cast_5339_sample_start_ <-& (type_cast_5338_update_completed_)
        ;;[type_cast_5339_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_5339_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_5339_sample_start_ &-> (type_cast_5339_Sample)
        type_cast_5339_sample_completed_ <-& (type_cast_5339_Sample)
        type_cast_5339_sample_completed_ &-> ($null)
        type_cast_5339_update_start_ &-> (type_cast_5339_Update)
        type_cast_5339_update_completed_ <-& (type_cast_5339_Update)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // 		iNsTr_2 := threshold
        //  file prog.linked.opt.aa, line 1756
        // Source expression
        // threshold
        $T[LOAD_threshold_5342_sample_start_] 
        $T[LOAD_threshold_5342_sample_completed_] 
        $T[LOAD_threshold_5342_update_start_] 
        $T[LOAD_threshold_5342_update_completed_] 
        $T[LOAD_threshold_5342_sample_start_] 
        $T[LOAD_threshold_5342_sample_completed_] 
        $T[LOAD_threshold_5342_update_start_] 
        $T[LOAD_threshold_5342_update_completed_] 
        $T[LOAD_threshold_5342_word_address_calculated] 
        $T[LOAD_threshold_5342_root_address_calculated] 
        LOAD_threshold_5342_word_address_calculated <-& (LOAD_threshold_5342_root_address_calculated)
        ;;[LOAD_threshold_5342_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_threshold_5342_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_threshold_5342_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_threshold_5342_sample_start_ <-& (LOAD_threshold_5342_word_address_calculated)
        LOAD_threshold_5342_sample_start_ &-> (LOAD_threshold_5342_Sample)
        LOAD_threshold_5342_sample_completed_ <-& (LOAD_threshold_5342_Sample)
        LOAD_threshold_5342_sample_completed_ &-> ($null)
        LOAD_threshold_5342_update_start_ &-> (LOAD_threshold_5342_Update)
        LOAD_threshold_5342_update_completed_ <-& (LOAD_threshold_5342_Update)
        // Target expression
        // (as target) iNsTr_2
        // iNsTr_2
        // implicit reference
        // 		iNsTr_3 := (iNsTr_2 * iNsTr_1)
        //  file prog.linked.opt.aa, line 1757
        // Source expression
        // (iNsTr_2 * iNsTr_1)
        $T[MUL_f64_f64_5347_sample_start_] 
        $T[MUL_f64_f64_5347_sample_completed_] 
        $T[MUL_f64_f64_5347_update_start_] 
        $T[MUL_f64_f64_5347_update_completed_] 
        // iNsTr_2
        $T[R_iNsTr_2_5345_sample_start_] 
        $T[R_iNsTr_2_5345_sample_completed_] 
        $T[R_iNsTr_2_5345_update_start_] 
        $T[R_iNsTr_2_5345_update_completed_] 
        // implicit reference
        R_iNsTr_2_5345_sample_start_ <-& (LOAD_threshold_5342_update_completed_)
        R_iNsTr_2_5345_sample_completed_ <-& (R_iNsTr_2_5345_sample_start_)
        R_iNsTr_2_5345_update_start_ <-& (R_iNsTr_2_5345_sample_completed_)
        R_iNsTr_2_5345_update_completed_ <-& (R_iNsTr_2_5345_update_start_)
        // iNsTr_1
        $T[R_iNsTr_1_5346_sample_start_] 
        $T[R_iNsTr_1_5346_sample_completed_] 
        $T[R_iNsTr_1_5346_update_start_] 
        $T[R_iNsTr_1_5346_update_completed_] 
        // implicit reference
        R_iNsTr_1_5346_sample_start_ <-& (type_cast_5339_update_completed_)
        R_iNsTr_1_5346_sample_completed_ <-& (R_iNsTr_1_5346_sample_start_)
        R_iNsTr_1_5346_update_start_ <-& (R_iNsTr_1_5346_sample_completed_)
        R_iNsTr_1_5346_update_completed_ <-& (R_iNsTr_1_5346_update_start_)
        MUL_f64_f64_5347_sample_start_ <-& (R_iNsTr_2_5345_update_completed_)
        MUL_f64_f64_5347_sample_start_ <-& (R_iNsTr_1_5346_update_completed_)
        ;;[MUL_f64_f64_5347_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_5347_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_5347_sample_start_ &-> (MUL_f64_f64_5347_Sample)
        MUL_f64_f64_5347_sample_completed_ <-& (MUL_f64_f64_5347_Sample)
        MUL_f64_f64_5347_sample_completed_ &-> ($null)
        MUL_f64_f64_5347_update_start_ &-> (MUL_f64_f64_5347_Update)
        MUL_f64_f64_5347_update_completed_ <-& (MUL_f64_f64_5347_Update)
        // Target expression
        // (as target) iNsTr_3
        // iNsTr_3
        // implicit reference
        // 		iNsTr_4 := ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_3 ) )
        //  file prog.linked.opt.aa, line 1758
        // Source expression
        // ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_3 ) )
        $T[type_cast_5352_sample_start_] 
        $T[type_cast_5352_sample_completed_] 
        $T[type_cast_5352_update_start_] 
        $T[type_cast_5352_update_completed_] 
        // ($cast ($int<32>) iNsTr_3 )
        $T[type_cast_5351_sample_start_] 
        $T[type_cast_5351_sample_completed_] 
        $T[type_cast_5351_update_start_] 
        $T[type_cast_5351_update_completed_] 
        // iNsTr_3
        $T[R_iNsTr_3_5350_sample_start_] 
        $T[R_iNsTr_3_5350_sample_completed_] 
        $T[R_iNsTr_3_5350_update_start_] 
        $T[R_iNsTr_3_5350_update_completed_] 
        // implicit reference
        R_iNsTr_3_5350_sample_start_ <-& (MUL_f64_f64_5347_update_completed_)
        R_iNsTr_3_5350_sample_completed_ <-& (R_iNsTr_3_5350_sample_start_)
        R_iNsTr_3_5350_update_start_ <-& (R_iNsTr_3_5350_sample_completed_)
        R_iNsTr_3_5350_update_completed_ <-& (R_iNsTr_3_5350_update_start_)
        type_cast_5351_sample_start_ <-& (R_iNsTr_3_5350_update_completed_)
        ;;[type_cast_5351_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_5351_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_5351_sample_start_ &-> (type_cast_5351_Sample)
        type_cast_5351_sample_completed_ <-& (type_cast_5351_Sample)
        type_cast_5351_sample_completed_ &-> ($null)
        type_cast_5351_update_start_ &-> (type_cast_5351_Update)
        type_cast_5351_update_completed_ <-& (type_cast_5351_Update)
        type_cast_5352_sample_start_ <-& (type_cast_5351_update_completed_)
        ;;[type_cast_5352_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_5352_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_5352_sample_start_ &-> (type_cast_5352_Sample)
        type_cast_5352_sample_completed_ <-& (type_cast_5352_Sample)
        type_cast_5352_sample_completed_ &-> ($null)
        type_cast_5352_update_start_ &-> (type_cast_5352_Update)
        type_cast_5352_update_completed_ <-& (type_cast_5352_Update)
        // Target expression
        // (as target) iNsTr_4
        // iNsTr_4
        // implicit reference
        // 		ret_val__ := (iNsTr_4 + nmean)
        //  file prog.linked.opt.aa, line 1759
        // Source expression
        // (iNsTr_4 + nmean)
        $T[ADD_u32_u32_5357_sample_start_] 
        $T[ADD_u32_u32_5357_sample_completed_] 
        $T[ADD_u32_u32_5357_update_start_] 
        $T[ADD_u32_u32_5357_update_completed_] 
        // iNsTr_4
        $T[R_iNsTr_4_5355_sample_start_] 
        $T[R_iNsTr_4_5355_sample_completed_] 
        $T[R_iNsTr_4_5355_update_start_] 
        $T[R_iNsTr_4_5355_update_completed_] 
        // implicit reference
        R_iNsTr_4_5355_sample_start_ <-& (type_cast_5352_update_completed_)
        R_iNsTr_4_5355_sample_completed_ <-& (R_iNsTr_4_5355_sample_start_)
        R_iNsTr_4_5355_update_start_ <-& (R_iNsTr_4_5355_sample_completed_)
        R_iNsTr_4_5355_update_completed_ <-& (R_iNsTr_4_5355_update_start_)
        // nmean
        $T[R_nmean_5356_sample_start_] 
        $T[R_nmean_5356_sample_completed_] 
        $T[R_nmean_5356_update_start_] 
        $T[R_nmean_5356_update_completed_] 
        // reference to interface object
        R_nmean_5356_sample_start_ <-& ($entry)
        R_nmean_5356_sample_completed_ <-& (R_nmean_5356_sample_start_)
        R_nmean_5356_update_start_ <-& (R_nmean_5356_sample_completed_)
        R_nmean_5356_update_completed_ <-& (R_nmean_5356_update_start_)
        ADD_u32_u32_5357_sample_start_ <-& (R_iNsTr_4_5355_update_completed_)
        ADD_u32_u32_5357_sample_start_ <-& (R_nmean_5356_update_completed_)
        ;;[ADD_u32_u32_5357_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_5357_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_5357_sample_start_ &-> (ADD_u32_u32_5357_Sample)
        ADD_u32_u32_5357_sample_completed_ <-& (ADD_u32_u32_5357_Sample)
        ADD_u32_u32_5357_sample_completed_ &-> ($null)
        ADD_u32_u32_5357_update_start_ &-> (ADD_u32_u32_5357_Update)
        ADD_u32_u32_5357_update_completed_ <-& (ADD_u32_u32_5357_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_5335_to_assign_stmt_5358__entry__ |-> (assign_stmt_5335_to_assign_stmt_5358)
      assign_stmt_5335_to_assign_stmt_5358__exit__ <-| (assign_stmt_5335_to_assign_stmt_5358)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1761
      //---------------------   merge statement  file prog.linked.opt.aa, line 1761  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_5360_PhiReqMerge] 
      merge_stmt_5360_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_5360_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_5360_PhiReqMerge |-> (merge_stmt_5360_PhiAck)
      merge_stmt_5360__exit__  <-| (merge_stmt_5360_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1761  --------------------------
      assign_stmt_5335_to_assign_stmt_5358__entry__ <-| (branch_block_stmt_5330__entry__)
      return__ <-| (assign_stmt_5335_to_assign_stmt_5358__exit__)
      merge_stmt_5360__exit__ |-> (branch_block_stmt_5330__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %threshCalc%body%
    //  file prog.linked.opt.aa, line 1761
    // constant-object-declarations for block %threshCalc%body
    //  file prog.linked.opt.aa, line 1752
    // constant-object-declarations for block %threshCalc
    //  file prog.linked.opt.aa, line 1747
    // constant-declarations for block %threshCalc%body
    //  file prog.linked.opt.aa, line 1752
    // threshold
    $constant $W[LOAD_threshold_5342_word_address_0] : $pointer<memory_space_24> := _b0
    // constant-declarations for block %threshCalc%body%
    //  file prog.linked.opt.aa, line 1761
    // block %threshCalc%body
    //  file prog.linked.opt.aa, line 1752
    // 		iNsTr_0 := (qmean - nmean)
    //  file prog.linked.opt.aa, line 1754
    // iNsTr_0
    $W[iNsTr_0_5335] : $int<32>
    // 		iNsTr_1 := ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_0 ) )
    //  file prog.linked.opt.aa, line 1755
    // ($bitcast ($int<64>) iNsTr_0 )
    $intermediate $W[type_cast_5338_wire] : $int<64>
    // iNsTr_1
    $W[iNsTr_1_5340] : $float<11,52>
    // 		iNsTr_2 := threshold
    //  file prog.linked.opt.aa, line 1756
    // threshold
    $W[LOAD_threshold_5342_data_0] : $int<64>
    // iNsTr_2
    $W[iNsTr_2_5343] : $float<11,52>
    // 		iNsTr_3 := (iNsTr_2 * iNsTr_1)
    //  file prog.linked.opt.aa, line 1757
    // iNsTr_3
    $W[iNsTr_3_5348] : $float<11,52>
    // 		iNsTr_4 := ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_3 ) )
    //  file prog.linked.opt.aa, line 1758
    // ($cast ($int<32>) iNsTr_3 )
    $intermediate $W[type_cast_5351_wire] : $int<32>
    // iNsTr_4
    $W[iNsTr_4_5353] : $int<32>
    // 		ret_val__ := (iNsTr_4 + nmean)
    //  file prog.linked.opt.aa, line 1759
    // ret_val__
    // datapath-instances for block %threshCalc%body
    //  file prog.linked.opt.aa, line 1752
    // 		iNsTr_0 := (qmean - nmean)
    //  file prog.linked.opt.aa, line 1754
    // (qmean - nmean)
    -[SUB_u32_u32_5334_inst] (qmean nmean) (iNsTr_0_5335) 
    $delay SUB_u32_u32_5334_inst 1
    // 		iNsTr_1 := ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_0 ) )
    //  file prog.linked.opt.aa, line 1755
    // ($bitcast ($int<64>) iNsTr_0 )
    $S:=$U [type_cast_5338_inst] (iNsTr_0_5335) (type_cast_5338_wire)   $flowthrough
    $delay type_cast_5338_inst 0
    // ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_0 ) )
    $F:=$S [type_cast_5339_inst] (type_cast_5338_wire) (iNsTr_1_5340)  
    $delay type_cast_5339_inst 1
    // 		iNsTr_2 := threshold
    //  file prog.linked.opt.aa, line 1756
    // threshold
    $load [LOAD_threshold_5342_load_0] $from memory_space_24 (LOAD_threshold_5342_word_address_0) (LOAD_threshold_5342_data_0) 
    $delay LOAD_threshold_5342_load_0 1
    &/ [LOAD_threshold_5342_gather_scatter] (LOAD_threshold_5342_data_0) (iNsTr_2_5343) 
    // 		iNsTr_3 := (iNsTr_2 * iNsTr_1)
    //  file prog.linked.opt.aa, line 1757
    // (iNsTr_2 * iNsTr_1)
    *[MUL_f64_f64_5347_inst] (iNsTr_2_5343 iNsTr_1_5340) (iNsTr_3_5348) 
    $delay MUL_f64_f64_5347_inst 24
    // 		iNsTr_4 := ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_3 ) )
    //  file prog.linked.opt.aa, line 1758
    // ($cast ($int<32>) iNsTr_3 )
    $S:=$F [type_cast_5351_inst] (iNsTr_3_5348) (type_cast_5351_wire)  
    $delay type_cast_5351_inst 1
    // ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_3 ) )
    # := [type_cast_5352_inst] (type_cast_5351_wire) (iNsTr_4_5353) 
    $delay type_cast_5352_inst 1
    // 		ret_val__ := (iNsTr_4 + nmean)
    //  file prog.linked.opt.aa, line 1759
    // (iNsTr_4 + nmean)
    +[ADD_u32_u32_5357_inst] (iNsTr_4_5353 nmean) (ret_val__) 
    $delay ADD_u32_u32_5357_inst 1
  }
  // end data-path
  // 		iNsTr_0 := (qmean - nmean)
  //  file prog.linked.opt.aa, line 1754
  // (qmean - nmean)
  SUB_u32_u32_5334_inst <=> (branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/SUB_u32_u32_5334_Sample/rr branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/SUB_u32_u32_5334_Update/cr) (branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/SUB_u32_u32_5334_Sample/ra branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/SUB_u32_u32_5334_Update/ca)
  // 		iNsTr_1 := ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_0 ) )
  //  file prog.linked.opt.aa, line 1755
  // ($bitcast ($int<64>) iNsTr_0 )
  type_cast_5338_inst <=> (branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/type_cast_5338_Sample/rr branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/type_cast_5338_Update/cr) (branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/type_cast_5338_Sample/ra branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/type_cast_5338_Update/ca)
  // ($cast ($float<11,52>) ($bitcast ($int<64>) iNsTr_0 ) )
  type_cast_5339_inst <=> (branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/type_cast_5339_Sample/rr branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/type_cast_5339_Update/cr) (branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/type_cast_5339_Sample/ra branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/type_cast_5339_Update/ca)
  // 		iNsTr_2 := threshold
  //  file prog.linked.opt.aa, line 1756
  // threshold
  LOAD_threshold_5342_gather_scatter <=> (branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/LOAD_threshold_5342_Update/LOAD_threshold_5342_Merge/merge_req) (branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/LOAD_threshold_5342_Update/LOAD_threshold_5342_Merge/merge_ack)
  LOAD_threshold_5342_load_0 <=> (branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/LOAD_threshold_5342_Sample/word_access_start/word_0/rr branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/LOAD_threshold_5342_Update/word_access_complete/word_0/cr) (branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/LOAD_threshold_5342_Sample/word_access_start/word_0/ra branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/LOAD_threshold_5342_Update/word_access_complete/word_0/ca)
  // 		iNsTr_3 := (iNsTr_2 * iNsTr_1)
  //  file prog.linked.opt.aa, line 1757
  // (iNsTr_2 * iNsTr_1)
  MUL_f64_f64_5347_inst <=> (branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/MUL_f64_f64_5347_Sample/rr branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/MUL_f64_f64_5347_Update/cr) (branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/MUL_f64_f64_5347_Sample/ra branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/MUL_f64_f64_5347_Update/ca)
  // 		iNsTr_4 := ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_3 ) )
  //  file prog.linked.opt.aa, line 1758
  // ($cast ($int<32>) iNsTr_3 )
  type_cast_5351_inst <=> (branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/type_cast_5351_Sample/rr branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/type_cast_5351_Update/cr) (branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/type_cast_5351_Sample/ra branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/type_cast_5351_Update/ca)
  // ($bitcast ($uint<32>) ($cast ($int<32>) iNsTr_3 ) )
  type_cast_5352_inst <=> (branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/type_cast_5352_Sample/rr branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/type_cast_5352_Update/cr) (branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/type_cast_5352_Sample/ra branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/type_cast_5352_Update/ca)
  // 		ret_val__ := (iNsTr_4 + nmean)
  //  file prog.linked.opt.aa, line 1759
  // (iNsTr_4 + nmean)
  ADD_u32_u32_5357_inst <=> (branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/ADD_u32_u32_5357_Sample/rr branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/ADD_u32_u32_5357_Update/cr) (branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/ADD_u32_u32_5357_Sample/ra branch_block_stmt_5330/assign_stmt_5335_to_assign_stmt_5358/ADD_u32_u32_5357_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1761
}
