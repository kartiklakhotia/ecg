; ModuleID = 'qrsDet.opt.o'
target datalayout = "e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:32:64-v64:64:64-v128:128:128-a0:0:64-f80:32:32-n8:16:32"
target triple = "i386-pc-linux-gnu"

@threshold = global double 3.125000e-01, align 8
@NOISEbuff = common global [8 x i32] zeroinitializer, align 4
@RRbuff = common global [8 x i32] zeroinitializer, align 4
@DDCALCbuff = common global [2 x i32] zeroinitializer, align 4
@maxDer = common global i32 0, align 4
@DDCALCbuff_ptr = common global i32 0, align 4
@DDbuff_ptr = common global i32 0, align 4
@NOISEbuff_ptr = common global i32 0, align 4
@RRbuff_ptr = common global i32 0, align 4
@QRSbuff_ptr = common global i32 0, align 4
@timeSinceMaxPeak = common global i32 0, align 4
@maxPeak = common global i32 0, align 4
@lastDatum = common global i32 0, align 4
@.str = private constant [17 x i8] c"filt_output_pipe\00"
@DDbuff = common global [92 x i32] zeroinitializer, align 4
@QRSbuff = common global [8 x i32] zeroinitializer, align 4
@.str1 = private constant [15 x i8] c"det_input_pipe\00"
@.str2 = private constant [16 x i8] c"filt_input_pipe\00"
@.str3 = private constant [16 x i8] c"det_output_pipe\00"

define void @initDet() nounwind {
bb.nph3:
  br label %0

; <label>:0                                       ; preds = %0, %bb.nph3
  %index.02 = phi i32 [ 0, %bb.nph3 ], [ %2, %0 ]
  %scevgep6 = getelementptr [8 x i32]* @RRbuff, i32 0, i32 %index.02
  %scevgep5 = getelementptr [8 x i32]* @NOISEbuff, i32 0, i32 %index.02
  %1 = tail call i32 (...)* @__loop_pipelining_on__(i32 7, i32 2, i32 0) nounwind
  store i32 0, i32* %scevgep5, align 4
  store i32 200, i32* %scevgep6, align 4
  %2 = add nsw i32 %index.02, 1
  %exitcond = icmp eq i32 %2, 8
  br i1 %exitcond, label %bb.nph.preheader, label %0

bb.nph.preheader:                                 ; preds = %0
  br label %bb.nph

bb.nph:                                           ; preds = %bb.nph, %bb.nph.preheader
  %index.11 = phi i32 [ %4, %bb.nph ], [ 0, %bb.nph.preheader ]
  %scevgep = getelementptr [2 x i32]* @DDCALCbuff, i32 0, i32 %index.11
  %3 = tail call i32 (...)* @__loop_pipelining_on__(i32 7, i32 2, i32 0) nounwind
  store i32 0, i32* %scevgep, align 4
  %4 = add nsw i32 %index.11, 1
  %exitcond1 = icmp eq i32 %4, 2
  br i1 %exitcond1, label %._crit_edge, label %bb.nph

._crit_edge:                                      ; preds = %bb.nph
  store i32 0, i32* @maxDer, align 4
  store i32 0, i32* @DDCALCbuff_ptr, align 4
  store i32 0, i32* @DDbuff_ptr, align 4
  store i32 7, i32* @NOISEbuff_ptr, align 4
  store i32 7, i32* @RRbuff_ptr, align 4
  store i32 7, i32* @QRSbuff_ptr, align 4
  store i32 0, i32* @timeSinceMaxPeak, align 4
  store i32 0, i32* @maxPeak, align 4
  store i32 0, i32* @lastDatum, align 4
  ret void
}

declare i32 @__loop_pipelining_on__(...)

define i32 @peak() nounwind {
; <label>:0
  %1 = load i32* @timeSinceMaxPeak, align 4
  %2 = load i32* @maxPeak, align 4
  %3 = getelementptr [17 x i8]* @.str, i32 0, i32 0
  %4 = tail call i32 @read_uint32(i8* %3) nounwind
  %5 = icmp sgt i32 %1, 0
  %6 = zext i1 %5 to i32
  %7 = add i32 %6, %1
  %8 = load i32* @lastDatum, align 4
  %9 = icmp sgt i32 %4, %8
  %10 = icmp sgt i32 %4, %2
  %11 = and i1 %9, %10
  %12 = ashr i32 %2, 1
  %13 = icmp slt i32 %4, %12
  %14 = icmp sgt i32 %7, 19
  %or.cond = or i1 %13, %14
  %.demorgan = and i1 %9, %10
  %15 = xor i1 %.demorgan, true
  %16 = and i1 %or.cond, %15
  br i1 %16, label %17, label %19

; <label>:17                                      ; preds = %0
  %18 = icmp sgt i32 %2, 6
  %phitmp = select i1 %18, i32 %2, i32 0
  br label %19

; <label>:19                                      ; preds = %17, %0
  %20 = phi i32 [ 0, %0 ], [ %phitmp, %17 ]
  %21 = select i1 %16, i32 0, i32 %2
  %22 = select i1 %16, i32 0, i32 %7
  %23 = select i1 %11, i32 %4, i32 %21
  br i1 %11, label %24, label %26

; <label>:24                                      ; preds = %19
  %25 = icmp sgt i32 %23, 2
  %phitmp1 = select i1 %25, i32 1, i32 %22
  br label %26

; <label>:26                                      ; preds = %24, %19
  %27 = phi i32 [ %22, %19 ], [ %phitmp1, %24 ]
  store i32 %27, i32* @timeSinceMaxPeak, align 4
  store i32 %23, i32* @maxPeak, align 4
  store i32 %4, i32* @lastDatum, align 4
  ret i32 %20
}

declare i32 @read_uint32(i8*)

define i32 @circUpdateDet(i32 %ptr, i32 %size) nounwind readnone {
  %1 = add nsw i32 %ptr, 1
  %2 = icmp eq i32 %1, %size
  %3 = select i1 %2, i32 0, i32 %1
  ret i32 %3
}

define i32 @revUpdateDet(i32 %ptr, i32 %max) nounwind readnone {
  %1 = add nsw i32 %ptr, -1
  %2 = icmp eq i32 %ptr, 0
  %max. = select i1 %2, i32 %max, i32 %1
  ret i32 %max.
}

define i32 @ddCalc(i32 %datum) nounwind {
  %1 = load i32* @DDCALCbuff_ptr, align 4
  %2 = getelementptr inbounds [2 x i32]* @DDCALCbuff, i32 0, i32 %1
  %3 = load i32* %2, align 4
  %4 = sub nsw i32 %datum, %3
  store i32 %datum, i32* %2, align 4
  %5 = add nsw i32 %1, 1
  %6 = icmp eq i32 %5, 2
  %7 = select i1 %6, i32 0, i32 %5
  store i32 %7, i32* @DDCALCbuff_ptr, align 4
  ret i32 %4
}

define i32 @threshCalc(i32 %qmean, i32 %nmean) nounwind readonly {
  %1 = sub nsw i32 %qmean, %nmean
  %2 = sitofp i32 %1 to double
  %3 = load double* @threshold, align 8
  %4 = fmul double %3, %2
  %5 = fptosi double %4 to i32
  %6 = add nsw i32 %5, %nmean
  ret i32 %6
}

define zeroext i8 @blsCheck() nounwind {
bb.nph:
  %0 = load i32* @DDbuff_ptr, align 4
  br label %1

; <label>:1                                       ; preds = %1, %bb.nph
  %max.07 = phi i32 [ 0, %bb.nph ], [ %8, %1 ]
  %min.06 = phi i32 [ 0, %bb.nph ], [ %10, %1 ]
  %maxt.05 = phi i32 [ undef, %bb.nph ], [ %7, %1 ]
  %mint.04 = phi i32 [ undef, %bb.nph ], [ %9, %1 ]
  %2 = phi i32 [ 0, %bb.nph ], [ %12, %1 ]
  %ptr.02 = phi i32 [ %0, %bb.nph ], [ %14, %1 ]
  %3 = getelementptr inbounds [92 x i32]* @DDbuff, i32 0, i32 %ptr.02
  %4 = load i32* %3, align 4
  %5 = icmp sgt i32 %4, %max.07
  %6 = icmp slt i32 %4, %min.06
  %7 = select i1 %5, i32 %2, i32 %maxt.05
  %8 = select i1 %5, i32 %4, i32 %max.07
  %9 = select i1 %6, i32 %2, i32 %mint.04
  %10 = select i1 %6, i32 %4, i32 %min.06
  %11 = add nsw i32 %ptr.02, 1
  %12 = add nsw i32 %2, 1
  %13 = icmp eq i32 %11, 92
  %14 = select i1 %13, i32 0, i32 %11
  %exitcond4 = icmp eq i32 %12, 44
  br i1 %exitcond4, label %._crit_edge, label %1

._crit_edge:                                      ; preds = %1
  %.lcssa3 = phi i32 [ %10, %1 ]
  %.lcssa2 = phi i32 [ %9, %1 ]
  %.lcssa1 = phi i32 [ %8, %1 ]
  %.lcssa = phi i32 [ %7, %1 ]
  store i32 %.lcssa1, i32* @maxDer, align 4
  %15 = sub nsw i32 0, %.lcssa3
  %16 = ashr i32 %15, 3
  %17 = icmp sgt i32 %.lcssa1, %16
  %18 = ashr i32 %.lcssa1, 3
  %19 = icmp slt i32 %18, %15
  %or.cond = and i1 %17, %19
  br i1 %or.cond, label %20, label %23

; <label>:20                                      ; preds = %._crit_edge
  %21 = sub nsw i32 %.lcssa, %.lcssa2
  %ispos = icmp sgt i32 %21, -1
  %neg = sub i32 0, %21
  %22 = select i1 %ispos, i32 %21, i32 %neg
  %phitmp = icmp sgt i32 %22, 29
  br label %23

; <label>:23                                      ; preds = %20, %._crit_edge
  %24 = phi i1 [ true, %._crit_edge ], [ %phitmp, %20 ]
  %25 = zext i1 %24 to i8
  ret i8 %25
}

define void @qrsUpdate(i32 %qrsVal, i32 %rrVal) nounwind {
  %1 = load i32* @QRSbuff_ptr, align 4
  %2 = load i32* @RRbuff_ptr, align 4
  %3 = getelementptr inbounds [8 x i32]* @QRSbuff, i32 0, i32 %1
  store i32 %qrsVal, i32* %3, align 4
  %4 = getelementptr inbounds [8 x i32]* @RRbuff, i32 0, i32 %2
  store i32 %rrVal, i32* %4, align 4
  %5 = add nsw i32 %1, -1
  %6 = icmp eq i32 %1, 0
  %max..i = select i1 %6, i32 7, i32 %5
  store i32 %max..i, i32* @QRSbuff_ptr, align 4
  %7 = add nsw i32 %2, -1
  %8 = icmp eq i32 %2, 0
  %max..i1 = select i1 %8, i32 7, i32 %7
  store i32 %max..i1, i32* @RRbuff_ptr, align 4
  ret void
}

define void @noiseUpdate(i32 %noiseVal) nounwind {
  %1 = load i32* @NOISEbuff_ptr, align 4
  %2 = getelementptr inbounds [8 x i32]* @NOISEbuff, i32 0, i32 %1
  store i32 %noiseVal, i32* %2, align 4
  %3 = add nsw i32 %1, -1
  %4 = icmp eq i32 %1, 0
  %max..i = select i1 %4, i32 7, i32 %3
  store i32 %max..i, i32* @NOISEbuff_ptr, align 4
  ret void
}

define void @qrsDet() noreturn nounwind {
; <label>:0
  %RSETbuff = alloca [8 x i32], align 4
  br label %1

; <label>:1                                       ; preds = %1, %0
  %index.02.i = phi i32 [ 0, %0 ], [ %3, %1 ]
  %scevgep5.i = getelementptr [8 x i32]* @NOISEbuff, i32 0, i32 %index.02.i
  %scevgep6.i = getelementptr [8 x i32]* @RRbuff, i32 0, i32 %index.02.i
  %2 = call i32 (...)* @__loop_pipelining_on__(i32 7, i32 2, i32 0) nounwind
  store i32 0, i32* %scevgep5.i, align 4
  store i32 200, i32* %scevgep6.i, align 4
  %3 = add nsw i32 %index.02.i, 1
  %exitcond6 = icmp eq i32 %3, 8
  br i1 %exitcond6, label %bb.nph.i.preheader, label %1

bb.nph.i.preheader:                               ; preds = %1
  br label %bb.nph.i

bb.nph.i:                                         ; preds = %bb.nph.i, %bb.nph.i.preheader
  %index.11.i = phi i32 [ %5, %bb.nph.i ], [ 0, %bb.nph.i.preheader ]
  %scevgep.i = getelementptr [2 x i32]* @DDCALCbuff, i32 0, i32 %index.11.i
  %4 = call i32 (...)* @__loop_pipelining_on__(i32 7, i32 2, i32 0) nounwind
  store i32 0, i32* %scevgep.i, align 4
  %5 = add nsw i32 %index.11.i, 1
  %exitcond = icmp eq i32 %5, 2
  br i1 %exitcond, label %initDet.exit, label %bb.nph.i

initDet.exit:                                     ; preds = %bb.nph.i
  store i32 0, i32* @maxDer, align 4
  store i32 0, i32* @DDCALCbuff_ptr, align 4
  store i32 0, i32* @DDbuff_ptr, align 4
  store i32 7, i32* @NOISEbuff_ptr, align 4
  store i32 7, i32* @RRbuff_ptr, align 4
  store i32 7, i32* @QRSbuff_ptr, align 4
  store i32 0, i32* @timeSinceMaxPeak, align 4
  store i32 0, i32* @maxPeak, align 4
  store i32 0, i32* @lastDatum, align 4
  call void @QRSFilt(i8 zeroext 1) nounwind
  br label %6

; <label>:6                                       ; preds = %235, %initDet.exit
  %init8Done.0 = phi i8 [ 0, %initDet.exit ], [ %init8Done_next.0, %235 ]
  %init8Done_next.1 = phi i8 [ undef, %initDet.exit ], [ %init8Done_next.0, %235 ]
  %noiseVal.1 = phi i32 [ undef, %initDet.exit ], [ %noiseVal.0, %235 ]
  %rrVal.1 = phi i32 [ undef, %initDet.exit ], [ %rrVal.0, %235 ]
  %qrsVal.1 = phi i32 [ undef, %initDet.exit ], [ %qrsVal.0, %235 ]
  %nmean.1 = phi i32 [ undef, %initDet.exit ], [ %nmean.3, %235 ]
  %qmean.1 = phi i32 [ undef, %initDet.exit ], [ %qmean.4, %235 ]
  %sbLoc.1 = phi i32 [ 300, %initDet.exit ], [ %sbLoc.0, %235 ]
  %sb_count.1 = phi i32 [ 300, %initDet.exit ], [ %sb_count.2, %235 ]
  %det_thresh.1 = phi i32 [ 0, %initDet.exit ], [ %det_thresh.5, %235 ]
  %initMax.1 = phi i32 [ 0, %initDet.exit ], [ %initMax.2, %235 ]
  %rset_count.1 = phi i32 [ 0, %initDet.exit ], [ %rset_count.2, %235 ]
  %preBlank_count.0 = phi i32 [ 0, %initDet.exit ], [ %45, %235 ]
  %initBlank.1 = phi i32 [ 0, %initDet.exit ], [ %initBlank.2, %235 ]
  %count.0 = phi i32 [ 0, %initDet.exit ], [ %count.1, %235 ]
  %qpk_count.1 = phi i32 [ 0, %initDet.exit ], [ %qpk_count.0, %235 ]
  %sbPeak.1 = phi i32 [ 0, %initDet.exit ], [ %sbPeak.0, %235 ]
  %tempPeak.0 = phi i32 [ 0, %initDet.exit ], [ %44, %235 ]
  %7 = getelementptr [15 x i8]* @.str1, i32 0, i32 0
  %8 = call i32 @read_uint32(i8* %7) nounwind
  %9 = getelementptr [16 x i8]* @.str2, i32 0, i32 0
  call void @write_uint32(i8* %9, i32 %8) nounwind
  call void @QRSFilt(i8 zeroext 0) nounwind
  %10 = load i32* @timeSinceMaxPeak, align 4
  %11 = load i32* @maxPeak, align 4
  %12 = getelementptr [17 x i8]* @.str, i32 0, i32 0
  %13 = call i32 @read_uint32(i8* %12) nounwind
  %14 = icmp sgt i32 %10, 0
  %15 = zext i1 %14 to i32
  %16 = add i32 %15, %10
  %17 = load i32* @lastDatum, align 4
  %18 = icmp sgt i32 %13, %17
  %19 = icmp sgt i32 %13, %11
  %20 = and i1 %18, %19
  %21 = ashr i32 %11, 1
  %22 = icmp slt i32 %13, %21
  %23 = icmp sgt i32 %16, 19
  %or.cond.i = or i1 %22, %23
  %.demorgan42 = and i1 %18, %19
  %24 = xor i1 %.demorgan42, true
  %25 = and i1 %or.cond.i, %24
  br i1 %25, label %26, label %28

; <label>:26                                      ; preds = %6
  %27 = icmp sgt i32 %11, 6
  %phitmp.i = select i1 %27, i32 %11, i32 0
  br label %28

; <label>:28                                      ; preds = %26, %6
  %29 = phi i32 [ 0, %6 ], [ %phitmp.i, %26 ]
  %30 = select i1 %25, i32 0, i32 %11
  %31 = select i1 %25, i32 0, i32 %16
  %32 = select i1 %20, i32 %13, i32 %30
  br i1 %20, label %33, label %peak.exit

; <label>:33                                      ; preds = %28
  %34 = icmp sgt i32 %32, 2
  %phitmp1.i = select i1 %34, i32 1, i32 %31
  br label %peak.exit

peak.exit:                                        ; preds = %33, %28
  %35 = phi i32 [ %31, %28 ], [ %phitmp1.i, %33 ]
  store i32 %35, i32* @timeSinceMaxPeak, align 4
  store i32 %32, i32* @maxPeak, align 4
  store i32 %13, i32* @lastDatum, align 4
  %36 = icmp sgt i32 %29, 0
  %37 = icmp sgt i32 %preBlank_count.0, 0
  %38 = icmp sgt i32 %29, %tempPeak.0
  %39 = add nsw i32 %preBlank_count.0, -1
  %40 = icmp eq i32 %39, 0
  %41 = xor i1 %37, true
  %42 = and i1 %36, %41
  %.not13 = xor i1 %38, true
  %not.brmerge = and i1 %36, %.not13
  br i1 %42, label %.thread, label %43

; <label>:43                                      ; preds = %peak.exit
  %phitmp18 = select i1 %38, i32 %29, i32 %tempPeak.0
  %phitmp1 = select i1 %38, i32 39, i32 %39
  br label %.thread

.thread:                                          ; preds = %43, %peak.exit
  %44 = phi i32 [ %phitmp18, %43 ], [ %29, %peak.exit ]
  %45 = phi i32 [ %phitmp1, %43 ], [ 39, %peak.exit ]
  %.not14 = xor i1 %36, true
  %.not2.not = and i1 %37, %.not14
  %tmp = or i1 %not.brmerge, %.not2.not
  %46 = and i1 %40, %tmp
  %47 = select i1 %46, i32 %44, i32 0
  %48 = load i32* @DDCALCbuff_ptr, align 4
  %49 = getelementptr inbounds [2 x i32]* @DDCALCbuff, i32 0, i32 %48
  %50 = load i32* %49, align 4
  %51 = sub nsw i32 %8, %50
  store i32 %8, i32* %49, align 4
  %52 = add nsw i32 %48, 1
  %53 = icmp eq i32 %52, 2
  %54 = select i1 %53, i32 0, i32 %52
  store i32 %54, i32* @DDCALCbuff_ptr, align 4
  %55 = load i32* @DDbuff_ptr, align 4
  %56 = getelementptr inbounds [92 x i32]* @DDbuff, i32 0, i32 %55
  store i32 %51, i32* %56, align 4
  %57 = add nsw i32 %55, 1
  %58 = icmp eq i32 %57, 92
  %59 = select i1 %58, i32 0, i32 %57
  store i32 %59, i32* @DDbuff_ptr, align 4
  %60 = add nsw i32 %count.0, 1
  %61 = icmp eq i8 %init8Done.0, 0
  br i1 %61, label %62, label %.preheader

.preheader:                                       ; preds = %.thread
  br label %84

; <label>:62                                      ; preds = %.thread
  %63 = add nsw i32 %initBlank.1, 1
  %64 = icmp eq i32 %63, 200
  %65 = icmp sgt i32 %47, 0
  %66 = select i1 %65, i32 16, i32 %60
  %67 = select i1 %64, i32 0, i32 %63
  %68 = getelementptr inbounds [8 x i32]* @QRSbuff, i32 0, i32 %qpk_count.1
  store i32 %initMax.1, i32* %68, align 4
  %69 = select i1 %64, i32 0, i32 %initMax.1
  %70 = zext i1 %64 to i32
  %71 = add i32 %70, %qpk_count.1
  %72 = icmp eq i32 %71, 8
  %73 = and i1 %64, %72
  %74 = zext i1 %73 to i8
  %75 = icmp sgt i32 %47, %69
  %76 = select i1 %75, i32 %47, i32 %69
  br i1 %73, label %77, label %184

; <label>:77                                      ; preds = %62
  %78 = getelementptr [8 x i32]* @QRSbuff, i32 0, i32 0
  %79 = call i32 @meanCalc(i32* %78) nounwind
  %80 = sitofp i32 %79 to double
  %81 = load double* @threshold, align 8
  %82 = fmul double %81, %80
  %83 = fptosi double %82 to i32
  br label %184

; <label>:84                                      ; preds = %84, %.preheader
  %max.07.i = phi i32 [ %91, %84 ], [ 0, %.preheader ]
  %min.06.i = phi i32 [ %93, %84 ], [ 0, %.preheader ]
  %maxt.05.i = phi i32 [ %90, %84 ], [ undef, %.preheader ]
  %mint.04.i = phi i32 [ %92, %84 ], [ undef, %.preheader ]
  %85 = phi i32 [ %95, %84 ], [ 0, %.preheader ]
  %ptr.02.i = phi i32 [ %97, %84 ], [ %59, %.preheader ]
  %86 = getelementptr inbounds [92 x i32]* @DDbuff, i32 0, i32 %ptr.02.i
  %87 = load i32* %86, align 4
  %88 = icmp sgt i32 %87, %max.07.i
  %89 = icmp slt i32 %87, %min.06.i
  %90 = select i1 %88, i32 %85, i32 %maxt.05.i
  %91 = select i1 %88, i32 %87, i32 %max.07.i
  %92 = select i1 %89, i32 %85, i32 %mint.04.i
  %93 = select i1 %89, i32 %87, i32 %min.06.i
  %94 = add nsw i32 %ptr.02.i, 1
  %95 = add nsw i32 %85, 1
  %96 = icmp eq i32 %94, 92
  %97 = select i1 %96, i32 0, i32 %94
  %exitcond4 = icmp eq i32 %95, 44
  br i1 %exitcond4, label %._crit_edge.i, label %84

._crit_edge.i:                                    ; preds = %84
  %.lcssa3 = phi i32 [ %93, %84 ]
  %.lcssa2 = phi i32 [ %92, %84 ]
  %.lcssa1 = phi i32 [ %91, %84 ]
  %.lcssa = phi i32 [ %90, %84 ]
  store i32 %.lcssa1, i32* @maxDer, align 4
  %98 = sub nsw i32 0, %.lcssa3
  %99 = ashr i32 %98, 3
  %100 = icmp sgt i32 %.lcssa1, %99
  %101 = ashr i32 %.lcssa1, 3
  %102 = icmp slt i32 %101, %98
  %or.cond.i11 = and i1 %100, %102
  br i1 %or.cond.i11, label %103, label %blsCheck.exit

; <label>:103                                     ; preds = %._crit_edge.i
  %104 = sub nsw i32 %.lcssa, %.lcssa2
  %ispos.i = icmp sgt i32 %104, -1
  %neg.i = sub i32 0, %104
  %105 = select i1 %ispos.i, i32 %104, i32 %neg.i
  %phitmp.i12 = icmp sgt i32 %105, 29
  br label %blsCheck.exit

blsCheck.exit:                                    ; preds = %103, %._crit_edge.i
  %106 = phi i1 [ true, %._crit_edge.i ], [ %phitmp.i12, %103 ]
  %107 = icmp sgt i32 %47, %det_thresh.1
  %108 = xor i1 %106, true
  %109 = and i1 %107, %108
  %.not5 = icmp slt i32 %47, 1
  %or.cond = or i1 %.not5, %107
  %.demorgan = or i1 %or.cond, %106
  %110 = xor i1 %.demorgan, true
  %111 = icmp sgt i32 %47, %sbPeak.1
  %or.cond6 = and i1 %111, %110
  %112 = icmp sgt i32 %60, 87
  %113 = and i1 %or.cond6, %112
  %114 = select i1 %.demorgan, i32 %noiseVal.1, i32 %47
  br i1 %.demorgan, label %128, label %115

; <label>:115                                     ; preds = %blsCheck.exit
  %116 = load i32* @NOISEbuff_ptr, align 4
  %117 = getelementptr inbounds [8 x i32]* @NOISEbuff, i32 0, i32 %116
  store i32 %114, i32* %117, align 4
  %118 = add nsw i32 %116, -1
  %119 = icmp eq i32 %116, 0
  %max..i.i8 = select i1 %119, i32 7, i32 %118
  store i32 %max..i.i8, i32* @NOISEbuff_ptr, align 4
  %120 = getelementptr [8 x i32]* @NOISEbuff, i32 0, i32 0
  %121 = call i32 @meanCalc(i32* %120) nounwind
  %122 = sub nsw i32 %qmean.1, %121
  %123 = sitofp i32 %122 to double
  %124 = load double* @threshold, align 8
  %125 = fmul double %124, %123
  %126 = fptosi double %125 to i32
  %127 = add nsw i32 %126, %121
  br label %128

; <label>:128                                     ; preds = %115, %blsCheck.exit
  %nmean.2 = phi i32 [ %121, %115 ], [ %nmean.1, %blsCheck.exit ]
  %det_thresh.2 = phi i32 [ %127, %115 ], [ %det_thresh.1, %blsCheck.exit ]
  %129 = select i1 %113, i32 %47, i32 %sbPeak.1
  %130 = add nsw i32 %count.0, -15
  %131 = select i1 %113, i32 %130, i32 %sbLoc.1
  %132 = icmp sgt i32 %60, %sb_count.1
  br i1 %132, label %133, label %137

; <label>:133                                     ; preds = %128
  %134 = ashr i32 %det_thresh.2, 1
  %.not = xor i1 %107, true
  %135 = or i1 %106, %.not
  %136 = icmp sgt i32 %129, %134
  %. = and i1 %136, %135
  br label %137

; <label>:137                                     ; preds = %133, %128
  %138 = phi i1 [ false, %128 ], [ %., %133 ]
  %139 = or i1 %109, %138
  %140 = select i1 %109, i32 %47, i32 %qrsVal.1
  %141 = select i1 %109, i32 %130, i32 %rrVal.1
  %142 = select i1 %109, i32 16, i32 %60
  %143 = select i1 %138, i32 %129, i32 %140
  %144 = select i1 %138, i32 %131, i32 %141
  br i1 %139, label %146, label %.thread27

.thread27:                                        ; preds = %137
  %145 = load i32* @maxDer, align 4
  br label %169

; <label>:146                                     ; preds = %137
  %147 = load i32* @QRSbuff_ptr, align 4
  %148 = load i32* @RRbuff_ptr, align 4
  %149 = getelementptr inbounds [8 x i32]* @QRSbuff, i32 0, i32 %147
  store i32 %143, i32* %149, align 4
  %150 = getelementptr inbounds [8 x i32]* @RRbuff, i32 0, i32 %148
  store i32 %144, i32* %150, align 4
  %151 = add nsw i32 %147, -1
  %152 = icmp eq i32 %147, 0
  %max..i.i = select i1 %152, i32 7, i32 %151
  store i32 %max..i.i, i32* @QRSbuff_ptr, align 4
  %153 = add nsw i32 %148, -1
  %154 = icmp eq i32 %148, 0
  %max..i1.i = select i1 %154, i32 7, i32 %153
  store i32 %max..i1.i, i32* @RRbuff_ptr, align 4
  %155 = getelementptr [8 x i32]* @QRSbuff, i32 0, i32 0
  %156 = call i32 @meanCalc(i32* %155) nounwind
  %157 = getelementptr [8 x i32]* @RRbuff, i32 0, i32 0
  %158 = call i32 @meanCalc(i32* %157) nounwind
  %159 = sub nsw i32 %156, %nmean.2
  %160 = sitofp i32 %159 to double
  %161 = load double* @threshold, align 8
  %162 = fmul double %161, %160
  %163 = fptosi double %162 to i32
  %164 = add nsw i32 %163, %nmean.2
  %165 = load i32* @maxDer, align 4
  %166 = ashr i32 %158, 1
  %167 = add nsw i32 %158, 16
  %168 = add nsw i32 %167, %166
  br label %169

; <label>:169                                     ; preds = %146, %.thread27
  %170 = phi i32 [ %165, %146 ], [ %145, %.thread27 ]
  %det_thresh.325 = phi i32 [ %164, %146 ], [ %det_thresh.2, %.thread27 ]
  %qmean.223 = phi i32 [ %156, %146 ], [ %qmean.1, %.thread27 ]
  %171 = phi i32 [ %168, %146 ], [ %sb_count.1, %.thread27 ]
  %172 = select i1 %138, i32 %131, i32 0
  %.7 = sub i32 %142, %172
  br i1 %138, label %173, label %175

; <label>:173                                     ; preds = %169
  %174 = add nsw i32 %.7, 56
  br label %177

; <label>:175                                     ; preds = %169
  %176 = select i1 %109, i32 72, i32 0
  br label %177

; <label>:177                                     ; preds = %175, %173
  %178 = phi i32 [ %174, %173 ], [ %176, %175 ]
  %179 = select i1 %139, i32 0, i32 %129
  %180 = select i1 %139, i32 0, i32 %170
  store i32 %180, i32* @maxDer, align 4
  %181 = select i1 %139, i32 0, i32 %initBlank.1
  %182 = select i1 %139, i32 0, i32 %initMax.1
  %183 = select i1 %139, i32 0, i32 %rset_count.1
  br label %184

; <label>:184                                     ; preds = %177, %77, %62
  %QRSdelay.0 = phi i32 [ %178, %177 ], [ 0, %77 ], [ 0, %62 ]
  %init8Done_next.0 = phi i8 [ %init8Done_next.1, %177 ], [ %74, %77 ], [ %74, %62 ]
  %noiseVal.0 = phi i32 [ %114, %177 ], [ %noiseVal.1, %77 ], [ %noiseVal.1, %62 ]
  %rrVal.0 = phi i32 [ %144, %177 ], [ %rrVal.1, %77 ], [ %rrVal.1, %62 ]
  %qrsVal.0 = phi i32 [ %143, %177 ], [ %qrsVal.1, %77 ], [ %qrsVal.1, %62 ]
  %nmean.0 = phi i32 [ %nmean.2, %177 ], [ 0, %77 ], [ 0, %62 ]
  %qmean.0 = phi i32 [ %qmean.223, %177 ], [ %79, %77 ], [ %qmean.1, %62 ]
  %sbLoc.0 = phi i32 [ %131, %177 ], [ %sbLoc.1, %77 ], [ %sbLoc.1, %62 ]
  %sb_count.0 = phi i32 [ %171, %177 ], [ 330, %77 ], [ 330, %62 ]
  %det_thresh.0 = phi i32 [ %det_thresh.325, %177 ], [ %83, %77 ], [ %det_thresh.1, %62 ]
  %initMax.0 = phi i32 [ %182, %177 ], [ %76, %77 ], [ %76, %62 ]
  %rset_count.0 = phi i32 [ %183, %177 ], [ %rset_count.1, %77 ], [ %rset_count.1, %62 ]
  %initBlank.0 = phi i32 [ %181, %177 ], [ %67, %77 ], [ %67, %62 ]
  %count.1 = phi i32 [ %.7, %177 ], [ %66, %77 ], [ %66, %62 ]
  %qpk_count.0 = phi i32 [ %qpk_count.1, %177 ], [ %71, %77 ], [ %71, %62 ]
  %sbPeak.0 = phi i32 [ %179, %177 ], [ %sbPeak.1, %77 ], [ %sbPeak.1, %62 ]
  %185 = icmp eq i8 %init8Done_next.0, 0
  br i1 %185, label %235, label %186

; <label>:186                                     ; preds = %184
  %187 = add nsw i32 %initBlank.0, 1
  %188 = icmp eq i32 %187, 200
  %189 = select i1 %188, i32 0, i32 %187
  %190 = getelementptr inbounds [8 x i32]* %RSETbuff, i32 0, i32 %rset_count.0
  store i32 %initMax.0, i32* %190, align 4
  %191 = select i1 %188, i32 0, i32 %initMax.0
  %192 = zext i1 %188 to i32
  %193 = add i32 %192, %rset_count.0
  %194 = icmp eq i32 %193, 8
  %195 = select i1 %194, i32 0, i32 %nmean.0
  %196 = select i1 %194, i32 330, i32 %sb_count.0
  %197 = select i1 %194, i32 0, i32 %189
  %198 = select i1 %194, i32 0, i32 %193
  br i1 %194, label %199, label %232

; <label>:199                                     ; preds = %186
  %scevgep = getelementptr [8 x i32]* %RSETbuff, i32 0, i32 0
  %200 = load i32* %scevgep, align 4
  %201 = getelementptr [8 x i32]* @QRSbuff, i32 0, i32 0
  store i32 %200, i32* %201, align 4
  %202 = getelementptr [8 x i32]* @NOISEbuff, i32 0, i32 0
  store i32 0, i32* %202, align 4
  %scevgep.1 = getelementptr [8 x i32]* %RSETbuff, i32 0, i32 1
  %203 = load i32* %scevgep.1, align 4
  %204 = getelementptr [8 x i32]* @QRSbuff, i32 0, i32 1
  store i32 %203, i32* %204, align 4
  %205 = getelementptr [8 x i32]* @NOISEbuff, i32 0, i32 1
  store i32 0, i32* %205, align 4
  %scevgep.2 = getelementptr [8 x i32]* %RSETbuff, i32 0, i32 2
  %206 = load i32* %scevgep.2, align 4
  %207 = getelementptr [8 x i32]* @QRSbuff, i32 0, i32 2
  store i32 %206, i32* %207, align 4
  %208 = getelementptr [8 x i32]* @NOISEbuff, i32 0, i32 2
  store i32 0, i32* %208, align 4
  %scevgep.3 = getelementptr [8 x i32]* %RSETbuff, i32 0, i32 3
  %209 = load i32* %scevgep.3, align 4
  %210 = getelementptr [8 x i32]* @QRSbuff, i32 0, i32 3
  store i32 %209, i32* %210, align 4
  %211 = getelementptr [8 x i32]* @NOISEbuff, i32 0, i32 3
  store i32 0, i32* %211, align 4
  %scevgep.4 = getelementptr [8 x i32]* %RSETbuff, i32 0, i32 4
  %212 = load i32* %scevgep.4, align 4
  %213 = getelementptr [8 x i32]* @QRSbuff, i32 0, i32 4
  store i32 %212, i32* %213, align 4
  %214 = getelementptr [8 x i32]* @NOISEbuff, i32 0, i32 4
  store i32 0, i32* %214, align 4
  %scevgep.5 = getelementptr [8 x i32]* %RSETbuff, i32 0, i32 5
  %215 = load i32* %scevgep.5, align 4
  %216 = getelementptr [8 x i32]* @QRSbuff, i32 0, i32 5
  store i32 %215, i32* %216, align 4
  %217 = getelementptr [8 x i32]* @NOISEbuff, i32 0, i32 5
  store i32 0, i32* %217, align 4
  %scevgep.6 = getelementptr [8 x i32]* %RSETbuff, i32 0, i32 6
  %218 = load i32* %scevgep.6, align 4
  %219 = getelementptr [8 x i32]* @QRSbuff, i32 0, i32 6
  store i32 %218, i32* %219, align 4
  %220 = getelementptr [8 x i32]* @NOISEbuff, i32 0, i32 6
  store i32 0, i32* %220, align 4
  %scevgep.7 = getelementptr [8 x i32]* %RSETbuff, i32 0, i32 7
  %221 = load i32* %scevgep.7, align 4
  %222 = getelementptr [8 x i32]* @QRSbuff, i32 0, i32 7
  store i32 %221, i32* %222, align 4
  %223 = getelementptr [8 x i32]* @NOISEbuff, i32 0, i32 7
  store i32 0, i32* %223, align 4
  %224 = getelementptr [8 x i32]* @QRSbuff, i32 0, i32 0
  %225 = call i32 @meanCalc(i32* %224) nounwind
  %226 = sub nsw i32 %225, %195
  %227 = sitofp i32 %226 to double
  %228 = load double* @threshold, align 8
  %229 = fmul double %228, %227
  %230 = fptosi double %229 to i32
  %231 = add nsw i32 %230, %195
  br label %232

; <label>:232                                     ; preds = %199, %186
  %qmean.3 = phi i32 [ %225, %199 ], [ %qmean.0, %186 ]
  %det_thresh.4 = phi i32 [ %231, %199 ], [ %det_thresh.0, %186 ]
  %233 = icmp sgt i32 %47, %191
  %234 = select i1 %233, i32 %47, i32 %191
  br label %235

; <label>:235                                     ; preds = %232, %184
  %nmean.3 = phi i32 [ %195, %232 ], [ %nmean.0, %184 ]
  %qmean.4 = phi i32 [ %qmean.3, %232 ], [ %qmean.0, %184 ]
  %sb_count.2 = phi i32 [ %196, %232 ], [ %sb_count.0, %184 ]
  %det_thresh.5 = phi i32 [ %det_thresh.4, %232 ], [ %det_thresh.0, %184 ]
  %initMax.2 = phi i32 [ %234, %232 ], [ %initMax.0, %184 ]
  %rset_count.2 = phi i32 [ %198, %232 ], [ %rset_count.0, %184 ]
  %initBlank.2 = phi i32 [ %197, %232 ], [ %initBlank.0, %184 ]
  %236 = getelementptr [16 x i8]* @.str3, i32 0, i32 0
  call void @write_uint32(i8* %236, i32 %QRSdelay.0) nounwind
  br label %6
}

declare void @QRSFilt(i8 zeroext)

declare void @write_uint32(i8*, i32)

declare i32 @meanCalc(i32*)
